digraph  {
n427 [label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", span=""];
n428 [label="Newtonsoft.Json.Bson.BsonReader", span=""];
n0 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", label="Entry Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
n1 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", label="Type = type", span="82-82"];
n2 [cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", label="Exit Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80"];
n3 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
n4 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
n5 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
n6 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134"];
n7 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
n8 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="ValidationUtils.ArgumentNotNull(stream, ''stream'')", span="147-147"];
n9 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="_reader = new BinaryReader(stream)", span="148-148"];
n11 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="_readRootValueAsArray = readRootValueAsArray", span="150-150"];
n12 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="_dateTimeKindHandling = dateTimeKindHandling", span="151-151"];
n14 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
n10 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="_stack = new List<ContainerContext>()", span="149-149"];
n15 [cluster="System.IO.BinaryReader.BinaryReader(System.IO.Stream)", label="Entry System.IO.BinaryReader.BinaryReader(System.IO.Stream)", span="0-0"];
n16 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n13 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145"];
n17 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160"];
n18 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="162-162"];
n19 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="_reader = reader", span="163-163"];
n21 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="_readRootValueAsArray = readRootValueAsArray", span="165-165"];
n22 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="_dateTimeKindHandling = dateTimeKindHandling", span="166-166"];
n20 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="_stack = new List<ContainerContext>()", span="164-164"];
n23 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160"];
n24 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169"];
n25 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="_currentElementType = ReadType()", span="171-171"];
n26 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="string elementName = ReadString()", span="172-172"];
n29 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType()", span="838-838"];
n27 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="return elementName;", span="173-173"];
n30 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadString()", span="628-628"];
n28 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169"];
n31 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="182-182"];
n32 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", label="return ReadAsBytesInternal();", span="184-184"];
n33 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="182-182"];
n34 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475"];
n35 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191"];
n36 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", label="return ReadAsDecimalInternal();", span="193-193"];
n37 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191"];
n38 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="576-576"];
n39 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", span="200-200"];
n40 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", label="return ReadAsInt32Internal();", span="202-202"];
n41 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", span="200-200"];
n42 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="633-633"];
n43 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsString()", span="209-209"];
n44 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()", label="return ReadAsStringInternal();", span="211-211"];
n45 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsString()", span="209-209"];
n46 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="690-690"];
n47 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218"];
n48 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", label="return ReadAsDateTimeInternal();", span="220-220"];
n49 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218"];
n50 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="736-736"];
n51 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230"];
n52 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", label="return ReadAsDateTimeOffsetInternal();", span="232-232"];
n53 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230"];
n54 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
n55 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242"];
n56 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", label="_readType = Json.ReadType.Read", span="244-244"];
n57 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", label="return ReadInternal();", span="246-246"];
n58 [cluster="Newtonsoft.Json.Bson.BsonReader.Read()", label="Exit Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242"];
n59 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInternal()", span="249-249"];
n60 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="bool success", span="253-253"];
n61 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label=_bsonReaderState, span="255-255"];
n62 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.Normal", span="257-257"];
n64 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.ReferenceStart", span="260-260"];
n68 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeStart", span="265-265"];
n74 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}''.FormatWith(CultureInfo.InvariantCulture, _bsonReaderState));", span="273-273"];
n63 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="success = ReadNormal()", span="258-258"];
n65 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.ReferenceRef", span="261-261"];
n66 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.ReferenceId", span="262-262"];
n67 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="success = ReadReference()", span="263-263"];
n69 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeCode", span="266-266"];
n70 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeScope", span="267-267"];
n71 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeScopeObject", span="268-268"];
n72 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="BsonReaderState.CodeWScopeScopeEnd", span="269-269"];
n73 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="success = ReadCodeWScope()", span="270-270"];
n75 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="!success", span="276-276"];
n85 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306"];
n83 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="404-404"];
n84 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353"];
n76 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="SetToken(JsonToken.None)", span="278-278"];
n78 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="return true;", span="282-282"];
n77 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="return false;", span="279-279"];
n88 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="840-840"];
n79 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label=EndOfStreamException, span="284-284"];
n80 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="SetToken(JsonToken.None)", span="286-286"];
n81 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="return false;", span="287-287"];
n82 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInternal()", span="249-249"];
n86 [cluster="string.FormatWith(System.IFormatProvider, object)", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
n87 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
n89 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="Entry Newtonsoft.Json.Bson.BsonReader.Close()", span="294-294"];
n90 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="base.Close()", span="296-296"];
n91 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="CloseInput && _reader != null", span="298-298"];
n94 [cluster="Newtonsoft.Json.JsonReader.Close()", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1002-1002"];
n92 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="_reader.Close()", span="300-300"];
n93 [cluster="Newtonsoft.Json.Bson.BsonReader.Close()", label="Exit Newtonsoft.Json.Bson.BsonReader.Close()", span="294-294"];
n95 [cluster="System.IO.BinaryReader.Close()", label="Entry System.IO.BinaryReader.Close()", span="0-0"];
n96 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label=_bsonReaderState, span="308-308"];
n97 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeStart", span="310-310"];
n101 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeCode", span="314-314"];
n106 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeScope", span="321-321"];
n116 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeScopeObject", span="338-338"];
n121 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="BsonReaderState.CodeWScopeScopeEnd", span="344-344"];
n125 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="throw new ArgumentOutOfRangeException();", span="349-349"];
n98 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.PropertyName, ''$code'')", span="311-311"];
n99 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.CodeWScopeCode", span="312-312"];
n127 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="850-850"];
n100 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="313-313"];
n102 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="ReadInt32()", span="316-316"];
n103 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.String, ReadLengthString())", span="318-318"];
n128 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="826-826"];
n104 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.CodeWScopeScope", span="319-319"];
n129 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="690-690"];
n105 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="320-320"];
n107 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="CurrentState == State.PostValue", span="322-322"];
n108 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.PropertyName, ''$scope'')", span="324-324"];
n110 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.StartObject)", span="329-329"];
n109 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="325-325"];
n111 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeObject", span="330-330"];
n112 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="332-332"];
n113 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="PushContext(newContext)", span="333-333"];
n114 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="newContext.Length = ReadInt32()", span="334-334"];
n130 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", label="Entry Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="491-491"];
n115 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="336-336"];
n117 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="bool result = ReadNormal()", span="339-339"];
n118 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="result && TokenType == JsonToken.EndObject", span="340-340"];
n120 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return result;", span="343-343"];
n119 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.CodeWScopeScopeEnd", span="341-341"];
n122 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="SetToken(JsonToken.EndObject)", span="345-345"];
n123 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="_bsonReaderState = BsonReaderState.Normal", span="346-346"];
n124 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="return true;", span="347-347"];
n126 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306"];
n131 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
n132 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label=CurrentState, span="355-355"];
n133 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="State.ObjectStart", span="357-357"];
n137 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="State.Property", span="363-363"];
n145 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="State.PostValue", span="380-380"];
n155 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + CurrentState);", span="400-400"];
n134 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.PropertyName, JsonTypeReflector.RefPropertyName)", span="359-359"];
n135 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState = BsonReaderState.ReferenceRef", span="360-360"];
n136 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="361-361"];
n138 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="365-365"];
n139 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.String, ReadLengthString())", span="367-367"];
n141 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState == BsonReaderState.ReferenceId", span="370-370"];
n140 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="368-368"];
n142 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.Bytes, ReadBytes(12))", span="372-372"];
n144 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="377-377"];
n143 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="373-373"];
n157 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="849-849"];
n146 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState == BsonReaderState.ReferenceRef", span="382-382"];
n147 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.PropertyName, JsonTypeReflector.IdPropertyName)", span="384-384"];
n150 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState == BsonReaderState.ReferenceId", span="388-388"];
n148 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState = BsonReaderState.ReferenceId", span="385-385"];
n149 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="386-386"];
n151 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="SetToken(JsonToken.EndObject)", span="390-390"];
n154 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="396-396"];
n152 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="_bsonReaderState = BsonReaderState.Normal", span="391-391"];
n153 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="return true;", span="392-392"];
n156 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353"];
n158 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label=CurrentState, span="406-406"];
n159 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Start", span="408-408"];
n167 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Complete", span="419-419"];
n170 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Property", span="422-422"];
n173 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.ObjectStart", span="427-427"];
n197 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.ConstructorStart", span="467-467"];
n198 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Constructor", span="469-469"];
n199 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Error", span="471-471"];
n200 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Finished", span="473-473"];
n201 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="throw new ArgumentOutOfRangeException();", span="476-476"];
n160 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="JsonToken token = (!_readRootValueAsArray) ? JsonToken.StartObject : JsonToken.StartArray", span="410-410"];
n161 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="BsonType type = (!_readRootValueAsArray) ? BsonType.Object : BsonType.Array", span="411-411"];
n162 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="SetToken(token)", span="413-413"];
n163 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ContainerContext newContext = new ContainerContext(type)", span="414-414"];
n164 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="PushContext(newContext)", span="415-415"];
n165 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="newContext.Length = ReadInt32()", span="416-416"];
n166 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="417-417"];
n168 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.Closed", span="420-420"];
n169 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return false;", span="421-421"];
n171 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ReadType(_currentElementType)", span="424-424"];
n172 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="425-425"];
n204 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="503-503"];
n174 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.ArrayStart", span="428-428"];
n175 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="State.PostValue", span="429-429"];
n176 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ContainerContext context = _currentContext", span="430-430"];
n177 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="context == null", span="431-431"];
n179 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="int lengthMinusEnd = context.Length - 1", span="434-434"];
n180 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="context.Position < lengthMinusEnd", span="436-436"];
n181 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="context.Type == BsonType.Array", span="438-438"];
n187 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="context.Position == lengthMinusEnd", span="450-450"];
n192 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="MovePosition(context.Length)", span="457-457"];
n193 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="JsonToken endToken = (context.Type == BsonType.Object) ? JsonToken.EndObject : JsonToken.EndArray", span="459-459"];
n178 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return false;", span="432-432"];
n182 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ReadElement()", span="440-440"];
n185 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="SetToken(JsonToken.PropertyName, ReadElement())", span="446-446"];
n183 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ReadType(_currentElementType)", span="441-441"];
n184 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="442-442"];
n186 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="447-447"];
n188 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="ReadByte() != 0", span="452-452"];
n196 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="throw JsonReaderException.Create(this, ''Read past end of current container context.'');", span="465-465"];
n189 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="throw JsonReaderException.Create(this, ''Unexpected end of object byte value.'');", span="453-453"];
n190 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="PopContext()", span="455-455"];
n205 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497"];
n191 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="_currentContext != null", span="456-456"];
n206 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="Entry Newtonsoft.Json.Bson.BsonReader.PopContext()", span="482-482"];
n207 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", label="Entry Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="844-844"];
n194 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="SetToken(endToken)", span="460-460"];
n195 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return true;", span="461-461"];
n202 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="return false;", span="479-479"];
n203 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="404-404"];
n208 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="_stack.RemoveAt(_stack.Count - 1)", span="484-484"];
n209 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="_stack.Count == 0", span="485-485"];
n213 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
n210 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="_currentContext = null", span="486-486"];
n211 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="_currentContext = _stack[_stack.Count - 1]", span="488-488"];
n212 [cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()", label="Exit Newtonsoft.Json.Bson.BsonReader.PopContext()", span="482-482"];
n214 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", label="_stack.Add(newContext)", span="493-493"];
n215 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", label="_currentContext = newContext", span="494-494"];
n217 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n216 [cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", label="Exit Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="491-491"];
n218 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", label="MovePosition(1)", span="499-499"];
n219 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", label="return _reader.ReadByte();", span="500-500"];
n220 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497"];
n221 [cluster="System.IO.BinaryReader.ReadByte()", label="Entry System.IO.BinaryReader.ReadByte()", span="0-0"];
n222 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label=type, span="505-505"];
n285 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="throw new ArgumentOutOfRangeException(''type'', ''Unexpected BsonType value: '' + type);", span="607-607"];
n223 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Number", span="507-507"];
n228 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.String", span="515-515"];
n231 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Object", span="519-519"];
n236 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Array", span="528-528"];
n241 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Binary", span="537-537"];
n246 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Undefined", span="547-547"];
n248 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Oid", span="550-550"];
n251 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Boolean", span="554-554"];
n254 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Date", span="558-558"];
n265 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Null", span="578-578"];
n267 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Regex", span="581-581"];
n272 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Reference", span="588-588"];
n275 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Code", span="592-592"];
n277 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.CodeWScope", span="595-595"];
n280 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Integer", span="599-599"];
n282 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.TimeStamp", span="602-602"];
n224 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="double d = ReadDouble()", span="508-508"];
n225 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="_floatParseHandling == FloatParseHandling.Decimal", span="510-510"];
n287 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="820-820"];
n226 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Float, Convert.ToDecimal(d, CultureInfo.InvariantCulture))", span="511-511"];
n227 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Float, d)", span="513-513"];
n229 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Symbol", span="516-516"];
n230 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.String, ReadLengthString())", span="517-517"];
n232 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.StartObject)", span="521-521"];
n233 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="523-523"];
n234 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="PushContext(newContext)", span="524-524"];
n235 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="newContext.Length = ReadInt32()", span="525-525"];
n237 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.StartArray)", span="530-530"];
n238 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="ContainerContext newContext = new ContainerContext(BsonType.Array)", span="532-532"];
n239 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="PushContext(newContext)", span="533-533"];
n240 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="newContext.Length = ReadInt32()", span="534-534"];
n242 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonBinaryType binaryType", span="538-538"];
n243 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="byte[] data = ReadBinary(out binaryType)", span="539-539"];
n244 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="object value = (binaryType != BsonBinaryType.Uuid)\r\n                        ? data\r\n                        : (object)new Guid(data)", span="541-543"];
n289 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", span="611-611"];
n245 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Bytes, value)", span="545-545"];
n290 [cluster="System.Guid.Guid(byte[])", label="Entry System.Guid.Guid(byte[])", span="0-0"];
n247 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Undefined)", span="548-548"];
n249 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="byte[] oid = ReadBytes(12)", span="551-551"];
n250 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Bytes, oid)", span="552-552"];
n252 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="bool b = Convert.ToBoolean(ReadByte())", span="555-555"];
n253 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Boolean, b)", span="556-556"];
n291 [cluster="System.Convert.ToBoolean(byte)", label="Entry System.Convert.ToBoolean(byte)", span="0-0"];
n255 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="long ticks = ReadInt64()", span="559-559"];
n256 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="DateTime utcDateTime = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="560-560"];
n292 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="832-832"];
n257 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="DateTime dateTime", span="562-562"];
n293 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181"];
n260 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="dateTime = DateTime.SpecifyKind(utcDateTime, DateTimeKind.Unspecified)", span="566-566"];
n262 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="dateTime = utcDateTime.ToLocalTime()", span="569-569"];
n263 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="dateTime = utcDateTime", span="572-572"];
n258 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label=DateTimeKindHandling, span="563-563"];
n259 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="DateTimeKind.Unspecified", span="565-565"];
n261 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="DateTimeKind.Local", span="568-568"];
n264 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Date, dateTime)", span="576-576"];
n294 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
n295 [cluster="System.DateTime.ToLocalTime()", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
n266 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Null)", span="579-579"];
n268 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="string expression = ReadString()", span="582-582"];
n269 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="string modifiers = ReadString()", span="583-583"];
n270 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="string regex = @''/'' + expression + @''/'' + modifiers", span="585-585"];
n271 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.String, regex)", span="586-586"];
n273 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.StartObject)", span="589-589"];
n274 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="_bsonReaderState = BsonReaderState.ReferenceStart", span="590-590"];
n276 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.String, ReadLengthString())", span="593-593"];
n278 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.StartObject)", span="596-596"];
n279 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="_bsonReaderState = BsonReaderState.CodeWScopeStart", span="597-597"];
n281 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Integer, (long)ReadInt32())", span="600-600"];
n283 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="BsonType.Long", span="603-603"];
n284 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="SetToken(JsonToken.Integer, ReadInt64())", span="604-604"];
n286 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="503-503"];
n296 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
n288 [cluster="System.Convert.ToDecimal(object, System.IFormatProvider)", label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0"];
n297 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", label="int dataLength = ReadInt32()", span="613-613"];
n298 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", label="binaryType = (BsonBinaryType)ReadByte()", span="615-615"];
n301 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", label="return ReadBytes(dataLength);", span="625-625"];
n299 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", label="binaryType == BsonBinaryType.BinaryOld && !_jsonNet35BinaryCompatibility", span="619-619"];
n302 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", span="611-611"];
n300 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", label="dataLength = ReadInt32()", span="621-621"];
n303 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="EnsureBuffers()", span="630-630"];
n304 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="StringBuilder builder = null", span="632-632"];
n331 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="Entry Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="807-807"];
n305 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int totalBytesRead = 0", span="634-634"];
n313 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="count < MaxCharBytesSize && builder == null", span="648-648"];
n319 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="builder == null", span="664-664"];
n321 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="builder.Append(_charBuffer, 0, charCount)", span="667-667"];
n327 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="return builder.ToString();", span="681-681"];
n306 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int offset = 0", span="636-636"];
n312 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="totalBytesRead += byteCount", span="646-646"];
n307 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int count = offset", span="639-639"];
n311 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int byteCount = count - offset", span="645-645"];
n308 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="byte b", span="640-640"];
n309 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="count < MaxCharBytesSize && (b = _reader.ReadByte()) > 0", span="641-641"];
n310 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="_byteBuffer[count++] = b", span="643-643"];
n317 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int lastFullCharStop = GetLastFullCharStop(count - 1)", span="660-660"];
n325 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="count < MaxCharBytesSize", span="678-678"];
n314 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int length = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="652-652"];
n322 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="lastFullCharStop < byteCount - 1", span="669-669"];
n323 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="offset = byteCount - lastFullCharStop - 1", span="671-671"];
n315 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="MovePosition(totalBytesRead + 1)", span="654-654"];
n326 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="MovePosition(totalBytesRead + 1)", span="680-680"];
n332 [cluster="System.Text.Encoding.GetChars(byte[], int, int, char[], int)", label="Entry System.Text.Encoding.GetChars(byte[], int, int, char[], int)", span="0-0"];
n316 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="return new string(_charBuffer, 0, length);", span="655-655"];
n318 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="662-662"];
n334 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="Entry Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="765-765"];
n324 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="673-673"];
n320 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="builder = new StringBuilder(MaxCharBytesSize * 2)", span="665-665"];
n335 [cluster="System.Text.StringBuilder.StringBuilder(int)", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
n336 [cluster="System.Text.StringBuilder.Append(char[], int, int)", label="Entry System.Text.StringBuilder.Append(char[], int, int)", span="0-0"];
n328 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="offset = 0", span="684-684"];
n329 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label=true, span="687-687"];
n337 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
n330 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadString()", span="628-628"];
n333 [cluster="string.String(char[], int, int)", label="Entry string.String(char[], int, int)", span="0-0"];
n338 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n339 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="int length = ReadInt32()", span="692-692"];
n340 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="MovePosition(length)", span="694-694"];
n341 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="string s = GetString(length - 1)", span="696-696"];
n342 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="_reader.ReadByte()", span="697-697"];
n345 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="Entry Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="702-702"];
n343 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="return s;", span="699-699"];
n344 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="690-690"];
n346 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="length == 0", span="704-704"];
n352 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int count = ((length - totalBytesRead) > MaxCharBytesSize - offset)\r\n                    ? MaxCharBytesSize - offset\r\n                    : length - totalBytesRead", span="717-719"];
n358 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="byteCount == length", span="732-732"];
n363 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="builder = new StringBuilder(length)", span="744-744"];
n370 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="totalBytesRead < length", span="760-760"];
n347 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="return string.Empty;", span="705-705"];
n348 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="EnsureBuffers()", span="707-707"];
n349 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="StringBuilder builder = null", span="709-709"];
n350 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int totalBytesRead = 0", span="711-711"];
n362 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="builder == null", span="743-743"];
n365 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="builder.Append(_charBuffer, 0, charCount)", span="747-747"];
n371 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="return builder.ToString();", span="762-762"];
n351 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int offset = 0", span="714-714"];
n356 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="totalBytesRead += byteCount", span="726-726"];
n353 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int byteCount = _reader.Read(_byteBuffer, offset, count)", span="721-721"];
n357 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="byteCount += offset", span="730-730"];
n354 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="byteCount == 0", span="723-723"];
n373 [cluster="System.IO.BinaryReader.Read(byte[], int, int)", label="Entry System.IO.BinaryReader.Read(byte[], int, int)", span="0-0"];
n355 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="throw new EndOfStreamException(''Unable to read beyond the end of the stream.'');", span="724-724"];
n359 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="736-736"];
n361 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int lastFullCharStop = GetLastFullCharStop(byteCount - 1)", span="741-741"];
n366 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="lastFullCharStop < byteCount - 1", span="749-749"];
n367 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="offset = byteCount - lastFullCharStop - 1", span="751-751"];
n360 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="return new string(_charBuffer, 0, charCount);", span="737-737"];
n364 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="746-746"];
n368 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="753-753"];
n369 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="offset = 0", span="757-757"];
n372 [cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)", label="Exit Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="702-702"];
n374 [cluster="System.IO.EndOfStreamException.EndOfStreamException(string)", label="Entry System.IO.EndOfStreamException.EndOfStreamException(string)", span="0-0"];
n375 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="int lookbackPos = start", span="767-767"];
n383 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="bis == start - lookbackPos", span="787-787"];
n384 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="return start;", span="790-790"];
n376 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="int bis = 0", span="768-768"];
n377 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="lookbackPos >= 0", span="769-769"];
n378 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="bis = BytesInSequence(_byteBuffer[lookbackPos])", span="771-771"];
n380 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="lookbackPos--", span="774-774"];
n382 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="lookbackPos--", span="783-783"];
n385 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="return lookbackPos;", span="794-794"];
n379 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="bis == 0", span="772-772"];
n387 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="Entry Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="798-798"];
n381 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="bis == 1", span="777-777"];
n386 [cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", label="Exit Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="765-765"];
n388 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="b <= SeqRange1[1]", span="800-800"];
n390 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="b >= SeqRange2[0] && b <= SeqRange2[1]", span="801-801"];
n392 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="b >= SeqRange3[0] && b <= SeqRange3[1]", span="802-802"];
n394 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="b >= SeqRange4[0] && b <= SeqRange4[1]", span="803-803"];
n389 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 1;", span="800-800"];
n391 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 2;", span="801-801"];
n393 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 3;", span="802-802"];
n395 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 4;", span="803-803"];
n396 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="return 0;", span="804-804"];
n397 [cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", label="Exit Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="798-798"];
n398 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="_byteBuffer == null", span="809-809"];
n399 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="_byteBuffer = new byte[MaxCharBytesSize]", span="811-811"];
n400 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="_charBuffer == null", span="813-813"];
n401 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="int charBufferSize = Encoding.UTF8.GetMaxCharCount(MaxCharBytesSize)", span="815-815"];
n403 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="Exit Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="807-807"];
n402 [cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", label="_charBuffer = new char[charBufferSize]", span="816-816"];
n404 [cluster="System.Text.Encoding.GetMaxCharCount(int)", label="Entry System.Text.Encoding.GetMaxCharCount(int)", span="0-0"];
n405 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", label="MovePosition(8)", span="822-822"];
n406 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", label="return _reader.ReadDouble();", span="823-823"];
n407 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="820-820"];
n408 [cluster="System.IO.BinaryReader.ReadDouble()", label="Entry System.IO.BinaryReader.ReadDouble()", span="0-0"];
n409 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", label="MovePosition(4)", span="828-828"];
n410 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", label="return _reader.ReadInt32();", span="829-829"];
n411 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="826-826"];
n412 [cluster="System.IO.BinaryReader.ReadInt32()", label="Entry System.IO.BinaryReader.ReadInt32()", span="0-0"];
n413 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", label="MovePosition(8)", span="834-834"];
n414 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", label="return _reader.ReadInt64();", span="835-835"];
n415 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="832-832"];
n416 [cluster="System.IO.BinaryReader.ReadInt64()", label="Entry System.IO.BinaryReader.ReadInt64()", span="0-0"];
n417 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", label="MovePosition(1)", span="840-840"];
n418 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", label="return (BsonType)_reader.ReadSByte();", span="841-841"];
n419 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType()", span="838-838"];
n420 [cluster="System.IO.BinaryReader.ReadSByte()", label="Entry System.IO.BinaryReader.ReadSByte()", span="0-0"];
n421 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", label="_currentContext.Position += count", span="846-846"];
n422 [cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", label="Exit Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="844-844"];
n423 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", label="MovePosition(count)", span="851-851"];
n424 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", label="return _reader.ReadBytes(count);", span="852-852"];
n425 [cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="849-849"];
n426 [cluster="System.IO.BinaryReader.ReadBytes(int)", label="Entry System.IO.BinaryReader.ReadBytes(int)", span="0-0"];
m0_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Vessel.Vessel()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Vessel.Vessel()", span="10-10"];
m0_6 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710"];
m0_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", span="20-20"];
m0_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs", label="Vessel vessel = new Vessel\r\n        {\r\n          Name = ''Red October'',\r\n          Class = ''Typhoon''\r\n        }", span="23-27"];
m0_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs", label="string json = JsonConvert.SerializeObject(vessel, Formatting.Indented)", span="29-29"];
m0_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs", label="Console.WriteLine(json)", span="31-31"];
m0_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", span="20-20"];
m0_7 [cluster="System.Console.WriteLine(string)", file="ConvertUtils.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_72 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m1_198 [cluster="System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
m1_73 [cluster="System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
m1_156 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="77-77"];
m1_80 [cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m1_10 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31"];
m1_122 [cluster="System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)", span="0-0"];
m1_135 [cluster="System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)", span="0-0"];
m1_137 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m1_75 [cluster="System.Linq.Expressions.Expression.Variable(System.Type)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Variable(System.Type)", span="0-0"];
m1_82 [cluster="System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
m1_121 [cluster="System.Reflection.PropertyInfo.GetGetMethod(bool)", file="ConvertUtilsTests.cs", label="Entry System.Reflection.PropertyInfo.GetGetMethod(bool)", span="0-0"];
m1_81 [cluster="System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
m1_194 [cluster="System.Type.GetMethod(string, System.Type[])", file="ConvertUtilsTests.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m1_11 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", span="28-28"];
m1_193 [cluster="System.Type.IsPrimitive()", file="ConvertUtilsTests.cs", label="Entry System.Type.IsPrimitive()", span="544-544"];
m1_69 [cluster="System.Reflection.MethodBase.GetParameters()", file="ConvertUtilsTests.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m1_83 [cluster="System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", span="0-0"];
m1_176 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="78-78"];
m1_14 [cluster="System.Linq.Expressions.LambdaExpression.Compile()", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.LambdaExpression.Compile()", span="0-0"];
m1_15 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="61-61"];
m1_16 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="ValidationUtils.ArgumentNotNull(method, nameof(method))", span="63-63"];
m1_17 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="Type type = typeof(object)", span="65-65"];
m1_18 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="ParameterExpression targetParameterExpression = Expression.Parameter(type, ''target'')", span="67-67"];
m1_5 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(ObjectConstructor<object>), callExpression, argsParameterExpression)", span="55-55"];
m1_6 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="ObjectConstructor<object> compiled = (ObjectConstructor<object>)lambdaExpression.Compile()", span="57-57"];
m1_7 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="return compiled;", span="58-58"];
m1_8 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="45-45"];
m1_9 [cluster="Unk.nameof", file="ConvertUtilsTests.cs", label="Entry Unk.nameof", span=""];
m1_138 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="266-266"];
m1_147 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Expression sourceExpression = EnsureCastExpression(sourceParameterExpression, fieldInfo.DeclaringType)", span="287-287"];
m1_149 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Expression valueExpression = EnsureCastExpression(valueParameterExpression, fieldExpression.Type)", span="292-292"];
m1_150 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="BinaryExpression assignExpression = Expression.Assign(fieldExpression, valueExpression)", span="294-294"];
m1_139 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="ValidationUtils.ArgumentNotNull(fieldInfo, nameof(fieldInfo))", span="268-268"];
m1_145 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="fieldInfo.IsStatic", span="281-281"];
m1_142 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="ParameterExpression sourceParameterExpression = Expression.Parameter(typeof(T), ''source'')", span="277-277"];
m1_148 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="fieldExpression = Expression.Field(sourceExpression, fieldInfo)", span="289-289"];
m1_146 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="fieldExpression = Expression.Field(null, fieldInfo)", span="283-283"];
m1_143 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="ParameterExpression valueParameterExpression = Expression.Parameter(typeof(object), ''value'')", span="278-278"];
m1_151 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Action<T, object>), assignExpression, sourceParameterExpression, valueParameterExpression)", span="296-296"];
m1_140 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="fieldInfo.DeclaringType.IsValueType() || fieldInfo.IsInitOnly", span="272-272"];
m1_141 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="return LateBoundReflectionDelegateFactory.Instance.CreateSet<T>(fieldInfo);", span="274-274"];
m1_144 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Expression fieldExpression", span="280-280"];
m1_152 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Action<T, object> compiled = (Action<T, object>)lambdaExpression.Compile()", span="298-298"];
m1_153 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="return compiled;", span="299-299"];
m1_154 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="266-266"];
m1_155 [cluster="System.Type.IsValueType()", file="ConvertUtilsTests.cs", label="Entry System.Type.IsValueType()", span="535-535"];
m1_0 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="45-45"];
m1_1 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="ValidationUtils.ArgumentNotNull(method, nameof(method))", span="47-47"];
m1_2 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="Type type = typeof(object)", span="49-49"];
m1_3 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="ParameterExpression argsParameterExpression = Expression.Parameter(typeof(object[]), ''args'')", span="51-51"];
m1_4 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="Expression callExpression = BuildMethodCall(method, type, null, argsParameterExpression)", span="53-53"];
m1_20 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="Expression callExpression = BuildMethodCall(method, type, targetParameterExpression, argsParameterExpression)", span="70-70"];
m1_196 [cluster="System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0"];
m1_97 [cluster="System.Linq.Expressions.Expression.New(System.Type)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.New(System.Type)", span="0-0"];
m1_13 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", span="28-28"];
m1_157 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="302-302"];
m1_171 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="setExpression = Expression.Call(readInstanceParameter, setMethod, readValueParameter)", span="332-332"];
m1_165 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Expression readValueParameter = EnsureCastExpression(valueParameter, propertyInfo.PropertyType)", span="319-319"];
m1_170 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Expression readInstanceParameter = EnsureCastExpression(instanceParameter, propertyInfo.DeclaringType)", span="330-330"];
m1_158 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="304-304"];
m1_166 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="MethodInfo setMethod = propertyInfo.GetSetMethod(true)", span="321-321"];
m1_172 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Action<T, object>), setExpression, instanceParameter, valueParameter)", span="335-335"];
m1_164 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="ParameterExpression valueParameter = Expression.Parameter(valueType, ''value'')", span="318-318"];
m1_169 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="setExpression = Expression.Call(setMethod, readValueParameter)", span="326-326"];
m1_163 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="ParameterExpression instanceParameter = Expression.Parameter(instanceType, ''instance'')", span="316-316"];
m1_168 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="setMethod.IsStatic", span="324-324"];
m1_159 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="propertyInfo.DeclaringType.IsValueType()", span="308-308"];
m1_167 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Expression setExpression", span="323-323"];
m1_173 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Action<T, object> compiled = (Action<T, object>)lambdaExpression.Compile()", span="337-337"];
m1_160 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="return LateBoundReflectionDelegateFactory.Instance.CreateSet<T>(propertyInfo);", span="310-310"];
m1_162 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Type valueType = typeof(object)", span="314-314"];
m1_161 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Type instanceType = typeof(T)", span="313-313"];
m1_174 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="return compiled;", span="338-338"];
m1_175 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="302-302"];
m1_19 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="ParameterExpression argsParameterExpression = Expression.Parameter(typeof(object[]), ''args'')", span="68-68"];
m1_84 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="180-180"];
m1_85 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", color=green, community=0, file="ConvertUtilsTests.cs", label="ValidationUtils.ArgumentNotNull(type, ''type'')", prediction=0, span="182-182"];
m1_86 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", color=green, community=0, file="ConvertUtilsTests.cs", label="type.IsAbstract()", prediction=1, span="185-185"];
m1_87 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", color=green, community=0, file="ConvertUtilsTests.cs", label="return () => (T)Activator.CreateInstance(type);", prediction=1, span="187-187"];
m1_88 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", color=green, community=0, file="ConvertUtilsTests.cs", label="Type resultType = typeof(T)", prediction=3, span="192-192"];
m1_89 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs", label="Expression expression = Expression.New(type)", span="194-194"];
m1_90 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs", label="expression = EnsureCastExpression(expression, resultType)", span="196-196"];
m1_95 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs", label="return () => (T)Activator.CreateInstance(type);", span="207-207"];
m1_93 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs", label="return compiled;", span="201-201"];
m1_91 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs", label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Func<T>), expression)", span="198-198"];
m1_92 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs", label="Func<T> compiled = (Func<T>)lambdaExpression.Compile()", span="200-200"];
m1_94 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="180-180"];
m1_136 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m1_79 [cluster="System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m1_12 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", span="85-85"];
m1_77 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ConvertUtilsTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_74 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", span="341-341"];
m1_179 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="Type expressionType = expression.Type", span="343-343"];
m1_180 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="expressionType == targetType || (!expressionType.IsValueType() && targetType.IsAssignableFrom(expressionType))", span="346-346"];
m1_181 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="return expression;", span="348-348"];
m1_182 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="targetType.IsValueType()", span="351-351"];
m1_183 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="Expression convert = Expression.Unbox(expression, targetType)", span="353-353"];
m1_184 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="allowWidening && targetType.IsPrimitive()", span="355-355"];
m1_185 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="MethodInfo toTargetTypeMethod = typeof(Convert)\r\n                        .GetMethod(''To'' + targetType.Name, new[] { typeof(object) })", span="357-358"];
m1_187 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="convert = Expression.Condition(\r\n                            Expression.TypeIs(expression, targetType),\r\n                            convert,\r\n                            Expression.Call(toTargetTypeMethod, expression))", span="362-365"];
m1_188 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="return Expression.Condition(\r\n                    Expression.Equal(expression, Expression.Constant(null, typeof(object))),\r\n                    Expression.Default(targetType), \r\n                    convert);", span="369-372"];
m1_189 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="return Expression.Convert(expression, targetType);", span="375-375"];
m1_186 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="toTargetTypeMethod != null", span="360-360"];
m1_190 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", span="341-341"];
m1_192 [cluster="System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m1_96 [cluster="System.Type.IsAbstract()", file="ConvertUtilsTests.cs", label="Entry System.Type.IsAbstract()", span="517-517"];
m1_200 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m1_199 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m1_101 [cluster="System.Activator.CreateInstance(System.Type)", file="ConvertUtilsTests.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m1_191 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ConvertUtilsTests.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_105 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", span="211-211"];
m1_114 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Expression readParameter = EnsureCastExpression(parameterExpression, propertyInfo.DeclaringType)", span="229-229"];
m1_116 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="resultExpression = EnsureCastExpression(resultExpression, resultType)", span="234-234"];
m1_106 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="213-213"];
m1_109 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="ParameterExpression parameterExpression = Expression.Parameter(instanceType, ''instance'')", span="218-218"];
m1_112 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="getMethod.IsStatic", span="223-223"];
m1_115 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="resultExpression = Expression.MakeMemberAccess(readParameter, propertyInfo)", span="231-231"];
m1_113 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="resultExpression = Expression.MakeMemberAccess(null, propertyInfo)", span="225-225"];
m1_108 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Type resultType = typeof(object)", span="216-216"];
m1_117 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Func<T, object>), resultExpression, parameterExpression)", span="236-236"];
m1_107 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Type instanceType = typeof(T)", span="215-215"];
m1_111 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="MethodInfo getMethod = propertyInfo.GetGetMethod(true)", span="221-221"];
m1_110 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Expression resultExpression", span="219-219"];
m1_118 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Func<T, object> compiled = (Func<T, object>)lambdaExpression.Compile()", span="238-238"];
m1_119 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="return compiled;", span="239-239"];
m1_120 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", span="211-211"];
m1_21 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(MethodCall<T, object>), callExpression, targetParameterExpression, argsParameterExpression)", span="72-72"];
m1_22 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="MethodCall<T, object> compiled = (MethodCall<T, object>)lambdaExpression.Compile()", span="74-74"];
m1_23 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="return compiled;", span="75-75"];
m1_24 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="61-61"];
m1_78 [cluster="System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", span="0-0"];
m1_197 [cluster="System.Linq.Expressions.Expression.Constant(object, System.Type)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Constant(object, System.Type)", span="0-0"];
m1_76 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.ByRefParameter.ByRefParameter()", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.ByRefParameter.ByRefParameter()", span="78-78"];
m1_102 [cluster="lambda expression", file="ConvertUtilsTests.cs", label="Entry lambda expression", span="207-207"];
m1_99 [cluster="lambda expression", color=green, community=0, file="ConvertUtilsTests.cs", label="(T)Activator.CreateInstance(type)", prediction=1, span="187-187"];
m1_98 [cluster="lambda expression", file="ConvertUtilsTests.cs", label="Entry lambda expression", span="187-187"];
m1_100 [cluster="lambda expression", file="ConvertUtilsTests.cs", label="Exit lambda expression", span="187-187"];
m1_103 [cluster="lambda expression", file="ConvertUtilsTests.cs", label="(T)Activator.CreateInstance(type)", span="207-207"];
m1_104 [cluster="lambda expression", file="ConvertUtilsTests.cs", label="Exit lambda expression", span="207-207"];
m1_178 [cluster="System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)", span="0-0"];
m1_71 [cluster="System.Type.GetElementType()", file="ConvertUtilsTests.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m1_123 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", span="242-242"];
m1_129 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Expression sourceExpression = EnsureCastExpression(sourceParameter, fieldInfo.DeclaringType)", span="255-255"];
m1_131 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="fieldExpression = EnsureCastExpression(fieldExpression, typeof(object))", span="260-260"];
m1_124 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="ValidationUtils.ArgumentNotNull(fieldInfo, nameof(fieldInfo))", span="244-244"];
m1_127 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="fieldInfo.IsStatic", span="249-249"];
m1_125 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="ParameterExpression sourceParameter = Expression.Parameter(typeof(T), ''source'')", span="246-246"];
m1_130 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="fieldExpression = Expression.Field(sourceExpression, fieldInfo)", span="257-257"];
m1_128 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="fieldExpression = Expression.Field(null, fieldInfo)", span="251-251"];
m1_132 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Func<T, object> compiled = Expression.Lambda<Func<T, object>>(fieldExpression, sourceParameter).Compile()", span="262-262"];
m1_126 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Expression fieldExpression", span="248-248"];
m1_133 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="return compiled;", span="263-263"];
m1_134 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", span="242-242"];
m1_195 [cluster="System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)", file="ConvertUtilsTests.cs", label="Entry System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m1_51 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="callExpression = Expression.Call(readParameter, (MethodInfo)method, argsExpression)", prediction=5, span="138-138"];
m1_50 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="Expression readParameter = EnsureCastExpression(targetParameterExpression, method.DeclaringType)", span="136-136"];
m1_26 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="Expression[] argsExpression = new Expression[parametersInfo.Length]", span="89-89"];
m1_52 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="MethodInfo m = method as MethodInfo", prediction=6, span="141-141"];
m1_55 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="callExpression = EnsureCastExpression(callExpression, type)", prediction=7, span="146-146"];
m1_56 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="callExpression = Expression.Block(callExpression, Expression.Constant(null))", prediction=7, span="150-150"];
m1_57 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="callExpression = EnsureCastExpression(callExpression, type)", prediction=7, span="155-155"];
m1_47 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="callExpression = Expression.New((ConstructorInfo)method, argsExpression)", span="128-128"];
m1_49 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="callExpression = Expression.Call((MethodInfo)method, argsExpression)", span="132-132"];
m1_53 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="m != null", prediction=10, span="142-142"];
m1_54 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="m.ReturnType != typeof(void)", prediction=6, span="144-144"];
m1_58 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="refParameterMap.Count > 0", prediction=7, span="158-158"];
m1_65 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="bodyExpressions.Add(callExpression)", prediction=7, span="172-172"];
m1_67 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="return callExpression;", prediction=7, span="177-177"];
m1_27 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="IList<ByRefParameter> refParameterMap = new List<ByRefParameter>()", span="90-90"];
m1_59 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="IList<ParameterExpression> variableExpressions = new List<ParameterExpression>()", prediction=7, span="160-160"];
m1_61 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label=refParameterMap, prediction=7, span="162-162"];
m1_60 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="IList<Expression> bodyExpressions = new List<Expression>()", prediction=7, span="161-161"];
m1_64 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="variableExpressions.Add(p.Variable)", prediction=7, span="169-169"];
m1_62 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="!p.IsOut", prediction=19, span="164-164"];
m1_63 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="bodyExpressions.Add(Expression.Assign(p.Variable, p.Value))", prediction=7, span="166-166"];
m1_66 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs", label="callExpression = Expression.Block(variableExpressions, bodyExpressions)", prediction=21, span="174-174"];
m1_25 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="ParameterInfo[] parametersInfo = method.GetParameters()", span="87-87"];
m1_37 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="Expression paramAccessorExpression = Expression.ArrayIndex(argsParameterExpression, indexExpression)", span="105-105"];
m1_46 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="method.IsConstructor", span="126-126"];
m1_48 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="method.IsStatic", span="130-130"];
m1_43 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="argsExpression[i] = argExpression", span="122-122"];
m1_38 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="Expression argExpression = EnsureCastExpression(paramAccessorExpression, parameterType, !isByRef)", span="107-107"];
m1_28 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="int i = 0", span="92-92"];
m1_41 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="refParameterMap.Add(new ByRefParameter\r\n                    {\r\n                        Value = argExpression,\r\n                        Variable = variable,\r\n                        IsOut = parameter.IsOut\r\n                    })", span="112-117"];
m1_36 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="Expression indexExpression = Expression.Constant(i)", span="103-103"];
m1_29 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="i < parametersInfo.Length", span="92-92"];
m1_30 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="ParameterInfo parameter = parametersInfo[i]", span="94-94"];
m1_45 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="Expression callExpression", span="125-125"];
m1_39 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label=isByRef, span="109-109"];
m1_42 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="argExpression = variable", span="119-119"];
m1_44 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="i++", span="92-92"];
m1_31 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="Type parameterType = parameter.ParameterType", span="95-95"];
m1_32 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="bool isByRef = false", span="96-96"];
m1_34 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="parameterType = parameterType.GetElementType()", span="99-99"];
m1_35 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="isByRef = true", span="100-100"];
m1_40 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="ParameterExpression variable = Expression.Variable(parameterType)", span="111-111"];
m1_33 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="parameterType.IsByRef", span="97-97"];
m1_68 [cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs", label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", span="85-85"];
m1_177 [cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", file="ConvertUtilsTests.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0"];
m1_201 [file="ConvertUtilsTests.cs", label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory", span=""];
m1_202 [file="ConvertUtilsTests.cs", label="System.Type", span=""];
m3_7 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245"];
m3_6 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m3_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", span="18-18"];
m3_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs", label="string json = @''{\r\n        'FullName': 'Dan Deleted',\r\n        'Deleted': true,\r\n        'DeletedDate': '2013-01-20T00:00:00'\r\n      }''", span="21-25"];
m3_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="27-27"];
m3_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs", label="Account account = JsonConvert.DeserializeObject<Account>(json, new JsonSerializerSettings\r\n        {\r\n          TraceWriter = traceWriter\r\n        })", span="29-32"];
m3_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs", label="Console.WriteLine(traceWriter.ToString())", span="34-34"];
m3_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", span="18-18"];
m3_8 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="910-910"];
m3_9 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", file="DateTimeUtils.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="66-66"];
m3_10 [cluster="System.Console.WriteLine(string)", file="DateTimeUtils.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_0 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="DateTimeUtilsTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="35-35"];
m4_1 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="DateTimeUtilsTests.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="35-35"];
m6_0 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m6_1 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="IsoDateTimeConverterTests.cs", label="bar = new List<Int64>() { int.MaxValue }", span="37-37"];
m6_2 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m6_4 [file="IsoDateTimeConverterTests.cs", label="Newtonsoft.Json.Tests.TestObjects.ClassWithArray", span=""];
m7_116 [cluster="System.IO.StringWriter.ToString()", file="JavaScriptUtils.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m7_100 [cluster="System.Array.Copy(System.Array, System.Array, int)", file="JavaScriptUtils.cs", label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0"];
m7_99 [cluster="string.Equals(string, string)", file="JavaScriptUtils.cs", label="Entry string.Equals(string, string)", span="0-0"];
m7_16 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="76-76"];
m7_17 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="stringEscapeHandling == StringEscapeHandling.EscapeHtml", span="78-78"];
m7_19 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="quoteChar == ''''", span="81-81"];
m7_18 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="return HtmlCharEscapeFlags;", span="79-79"];
m7_20 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="return DoubleQuoteCharEscapeFlags;", span="82-82"];
m7_21 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="return SingleQuoteCharEscapeFlags;", span="84-84"];
m7_22 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="76-76"];
m7_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JavaScriptUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m7_23 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", span="87-87"];
m7_24 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="s == null", span="89-89"];
m7_26 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label=s, span="92-92"];
m7_27 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="c >= charEscapeFlags.Length || charEscapeFlags[c]", span="94-94"];
m7_25 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="return false;", span="90-90"];
m7_29 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="return false;", span="98-98"];
m7_28 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="return true;", span="95-95"];
m7_30 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", span="87-87"];
m7_31 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="101-101"];
m7_32 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label=appendDelimiters, span="105-105"];
m7_33 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(delimiter)", span="106-106"];
m7_34 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="s != null", span="108-108"];
m7_37 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="i < s.Length", span="112-112"];
m7_38 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="var c = s[i]", span="114-114"];
m7_39 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="c < charEscapeFlags.Length && !charEscapeFlags[c]", span="116-116"];
m7_60 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="c < charEscapeFlags.Length || stringEscapeHandling == StringEscapeHandling.EscapeNonAscii", span="151-151"];
m7_61 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="c == '\'' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="153-153"];
m7_63 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="c == '''' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="157-157"];
m7_65 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < UnicodeTextLength", span="163-163"];
m7_67 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="StringUtils.ToCharAsUnicode(c, writeBuffer)", span="166-166"];
m7_75 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < length", span="189-189"];
m7_78 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="Array.Copy(writeBuffer, newBuffer, UnicodeTextLength)", span="196-196"];
m7_80 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="s.CopyTo(lastWritePosition, writeBuffer, start, length - start)", span="201-201"];
m7_81 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, start, length - start)", span="204-204"];
m7_84 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(escapedValue)", span="209-209"];
m7_85 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, 0, UnicodeTextLength)", span="211-211"];
m7_88 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(s)", span="217-217"];
m7_89 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="int length = s.Length - lastWritePosition", span="221-221"];
m7_90 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer == null || writeBuffer.Length < length", span="223-223"];
m7_92 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="s.CopyTo(lastWritePosition, writeBuffer, 0, length)", span="226-226"];
m7_93 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(writeBuffer, 0, length)", span="229-229"];
m7_94 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label=appendDelimiters, span="234-234"];
m7_95 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writer.Write(delimiter)", span="235-235"];
m7_35 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="int lastWritePosition = 0", span="110-110"];
m7_36 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="int i = 0", span="112-112"];
m7_72 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="i > lastWritePosition", span="184-184"];
m7_73 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="int length = i - lastWritePosition + ((isEscapedUnicodeText) ? UnicodeTextLength : 0)", span="186-186"];
m7_87 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="lastWritePosition == 0", span="214-214"];
m7_82 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="lastWritePosition = i + 1", span="207-207"];
m7_86 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="i++", span="112-112"];
m7_41 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label=c, span="121-121"];
m7_40 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="string escapedValue", span="119-119"];
m7_42 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="'\t'", span="123-123"];
m7_44 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="'\n'", span="126-126"];
m7_46 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="'\r'", span="129-129"];
m7_48 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="'\f'", span="132-132"];
m7_50 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="'\b'", span="135-135"];
m7_52 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="'\\'", span="138-138"];
m7_54 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="'\u0085'", span="141-141"];
m7_56 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="'\u2028'", span="144-144"];
m7_58 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="'\u2029'", span="147-147"];
m7_43 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\t''", span="124-124"];
m7_45 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\n''", span="127-127"];
m7_47 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\r''", span="130-130"];
m7_49 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\f''", span="133-133"];
m7_51 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\b''", span="136-136"];
m7_53 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\\''", span="139-139"];
m7_55 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\u0085''", span="142-142"];
m7_57 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\u2028''", span="145-145"];
m7_59 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\u2029''", span="148-148"];
m7_69 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = null", span="174-174"];
m7_62 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\'''", span="155-155"];
m7_64 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = @''\''''''", span="159-159"];
m7_68 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue = EscapedUnicodeText", span="169-169"];
m7_70 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="escapedValue == null", span="179-179"];
m7_71 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="bool isEscapedUnicodeText = string.Equals(escapedValue, EscapedUnicodeText)", span="182-182"];
m7_74 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="int start = (isEscapedUnicodeText) ? UnicodeTextLength : 0", span="187-187"];
m7_77 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label=isEscapedUnicodeText, span="195-195"];
m7_83 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="!isEscapedUnicodeText", span="208-208"];
m7_79 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer = newBuffer", span="198-198"];
m7_91 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="writeBuffer = new char[length]", span="224-224"];
m7_96 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="101-101"];
m7_114 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="118-118"];
m7_115 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="110-110"];
m7_101 [cluster="string.CopyTo(int, char[], int, int)", file="JavaScriptUtils.cs", label="Entry string.CopyTo(int, char[], int, int)", span="0-0"];
m7_98 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="126-126"];
m7_14 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JavaScriptUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m7_102 [cluster="System.IO.TextWriter.Write(char[], int, int)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0"];
m7_97 [cluster="System.IO.TextWriter.Write(char)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m7_103 [cluster="System.IO.TextWriter.Write(string)", file="JavaScriptUtils.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m7_0 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="49-49"];
m7_1 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="IList<char> escapeChars = new List<char>\r\n            {\r\n                '\n', '\r', '\t', '\\', '\f', '\b',\r\n            }", span="51-54"];
m7_2 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="int i = 0", span="55-55"];
m7_4 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Add((char)i)", span="57-57"];
m7_6 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Union(new[] { '\'' })", span="60-60"];
m7_8 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Union(new[] { '''' })", span="64-64"];
m7_10 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="escapeChars.Union(new[] { '''', '\'', '<', '>', '&' })", span="68-68"];
m7_3 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="i < ' '", span="55-55"];
m7_5 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="i++", span="55-55"];
m7_7 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="SingleQuoteCharEscapeFlags[escapeChar] = true", span="62-62"];
m7_9 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="DoubleQuoteCharEscapeFlags[escapeChar] = true", span="66-66"];
m7_11 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="HtmlCharEscapeFlags[escapeChar] = true", span="70-70"];
m7_12 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="49-49"];
m7_107 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="243-243"];
m7_108 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="bool[] charEscapeFlags = GetCharEscapeFlags(stringEscapeHandling, delimiter)", span="245-245"];
m7_109 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="StringWriter w = StringUtils.CreateStringWriter(StringUtils.GetLength(value) ?? 16)", span="247-247"];
m7_110 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="char[] buffer = null", span="249-249"];
m7_112 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="return w.ToString();", span="251-251"];
m7_113 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="243-243"];
m7_104 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptUtils.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="238-238"];
m7_105 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptUtils.cs", label="return ToEscapedJavaScriptString(value, delimiter, appendDelimiters, StringEscapeHandling.Default);", span="240-240"];
m7_106 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptUtils.cs", label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="238-238"];
m8_61 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="224-224"];
m8_63 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonPropertyCollection.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                });\r\n            }, ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 55.'')", span="233-240"];
m8_62 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonPropertyCollection.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="226-231"];
m8_64 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="224-224"];
m8_6 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs", label="IsTypeGenericCollectionInterface(UnderlyingType)", span="65-65"];
m8_143 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="311-311"];
m8_29 [cluster="System.Guid.Guid(string)", file="JsonPropertyCollection.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m8_12 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", span="75-75"];
m8_31 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonPropertyCollection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m8_15 [cluster="lambda expression", color=green, community=0, file="JsonPropertyCollection.cs", label="JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                        MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                    })", prediction=22, span="105-110"];
m8_16 [cluster="lambda expression", file="JsonPropertyCollection.cs", label="Exit lambda expression", span="103-111"];
m8_17 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m8_23 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs", label="JsonSerializerSettings jsonSerializerSettings = new JsonSerializerSettings()\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            }", span="123-128"];
m8_24 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", color=green, community=0, file="JsonPropertyCollection.cs", label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", prediction=23, span="129-129"];
m8_18 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="115-115"];
m8_19 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs", label="string contextKey = ''k1''", span="117-117"];
m8_20 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs", label="var someValue = new Guid(''5dd2dba0-20c0-49f8-a054-1fa3b0a8d774'')", span="118-118"];
m8_21 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs", label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="120-120"];
m8_22 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs", label="inputContext.Add(contextKey, someValue)", span="121-121"];
m8_25 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", color=green, community=0, file="JsonPropertyCollection.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(Dictionary<string, Guid>), 0, DefaultSerializationBinder.Instance) + @'''''',\r\n  ''''k1'''': ''''5dd2dba0-20c0-49f8-a054-1fa3b0a8d774''''\r\n}'', serializedString)", prediction=24, span="131-134"];
m8_198 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", span="633-633"];
m8_201 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs", label="JsonConvert.PopulateObject(json, c, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="642-645"];
m8_199 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass''''\r\n}''", span="635-638"];
m8_200 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs", label="MetadataPropertyDisabledTestClass c = new MetadataPropertyDisabledTestClass()", span="640-640"];
m8_202 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''1'', c.Id)", span="647-647"];
m8_203 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''CircularReferenceClass'', c.Type)", span="648-648"];
m8_204 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", span="633-633"];
m8_10 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", color=green, community=0, file="JsonPropertyCollection.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", prediction=25, span="77-101"];
m8_205 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="836-836"];
m8_33 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs", label="!type.IsGenericType", span="97-97"];
m8_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonPropertyCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m8_93 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", span="308-308"];
m8_97 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="List<EmployeeReference> employees = t1.ToObject<List<EmployeeReference>>(JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            }))", span="328-331"];
m8_95 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="JToken t1 = JToken.Parse(json)", span="325-325"];
m8_96 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="JToken t2 = t1.CloneToken()", span="326-326"];
m8_98 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(2, employees.Count)", span="333-333"];
m8_99 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Mike Manager'', employees[0].Name)", span="334-334"];
m8_100 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Joe User'', employees[1].Name)", span="335-335"];
m8_101 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(employees[0], employees[1].Manager)", span="336-336"];
m8_94 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''$id'''': ''''2'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="310-323"];
m8_102 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="Assert.IsTrue(JToken.DeepEquals(t1, t2))", span="338-338"];
m8_103 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", span="308-308"];
m8_45 [cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29"];
m8_26 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs", label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="136-136"];
m8_49 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="180-180"];
m8_51 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="PreserveReferencesHandlingTests.CircularList circularList = JsonConvert.DeserializeObject<PreserveReferencesHandlingTests.CircularList>(json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="208-213"];
m8_50 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="182-206"];
m8_52 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(3, circularList.Count)", span="215-215"];
m8_53 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(null, circularList[0])", span="216-216"];
m8_54 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(1, circularList[1].Count)", span="217-217"];
m8_55 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(1, circularList[2].Count)", span="218-218"];
m8_56 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(1, circularList[2][0].Count)", span="219-219"];
m8_57 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="Assert.IsTrue(ReferenceEquals(circularList, circularList[2][0][0]))", span="220-220"];
m8_58 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="180-180"];
m8_7 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs", label="CreatedType = ReflectionUtils.MakeGenericType(typeof(List<>), CollectionItemType)", span="67-67"];
m8_104 [cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Linq.JToken.Parse(string)", span="2184-2184"];
m8_155 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyDisabledTestClass.MetadataPropertyDisabledTestClass()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyDisabledTestClass.MetadataPropertyDisabledTestClass()", span="439-439"];
m8_68 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="797-797"];
m8_141 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="738-738"];
m8_106 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="579-579"];
m8_85 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", span="279-279"];
m8_87 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs", label="List<EmployeeReference> employees = JsonConvert.DeserializeObject<List<EmployeeReference>>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="296-299"];
m8_86 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''$id'''': ''''2'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="281-294"];
m8_88 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(2, employees.Count)", span="301-301"];
m8_89 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Mike Manager'', employees[0].Name)", span="302-302"];
m8_90 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Joe User'', employees[1].Name)", span="303-303"];
m8_91 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(employees[0], employees[1].Manager)", span="304-304"];
m8_92 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", span="279-279"];
m8_107 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", span="2070-2070"];
m8_60 [cluster="Unk.IsTrue", file="JsonPropertyCollection.cs", label="Entry Unk.IsTrue", span=""];
m8_156 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", span="492-492"];
m8_158 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs", label="MetadataPropertyDisabledTestClass c = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="496-499"];
m8_157 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs", label="string json = @''{}''", span="494-494"];
m8_159 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(null, c.Id)", span="501-501"];
m8_160 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", span="492-492"];
m8_161 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", span="505-505"];
m8_162 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n                })", span="507-521"];
m8_163 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="523-523"];
m8_164 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="524-524"];
m8_165 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs", label="JObject o = (JObject)actual.Payload", span="525-525"];
m8_166 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''System.Byte[], mscorlib'', (string)o[''$type''])", span="526-526"];
m8_167 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''AAECAwQFBgcICQ=='', (string)o[''$value''])", span="527-527"];
m8_168 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(null, o.Parent)", span="528-528"];
m8_169 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", span="505-505"];
m8_170 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="532-532"];
m8_171 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs", label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {}\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="534-540"];
m8_172 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs", label="JObject o = (JObject)actual.Payload", span="542-542"];
m8_173 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(null, o.Parent)", span="543-543"];
m8_174 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="532-532"];
m8_27 [cluster="System.Type.GetConstructor(System.Type[])", file="JsonPropertyCollection.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m8_28 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="59-59"];
m8_0 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="50-50"];
m8_2 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs", label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="55-55"];
m8_1 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs", label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="53-53"];
m8_3 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs", label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="59-59"];
m8_4 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs", label="CollectionItemType != null", span="62-62"];
m8_5 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs", label="_isCollectionItemTypeNullableType = ReflectionUtils.IsNullableType(CollectionItemType)", span="63-63"];
m8_30 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", span="56-56"];
m8_59 [cluster="object.ReferenceEquals(object, object)", file="JsonPropertyCollection.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m8_14 [cluster="lambda expression", file="JsonPropertyCollection.cs", label="Entry lambda expression", span="103-111"];
m8_144 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", span="458-458"];
m8_148 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="MetadataPropertyDisabledTestClass c2 = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="479-482"];
m8_147 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''Id!'''',\r\n  ''''$ref'''': ''''Ref!'''',\r\n  ''''$value'''': ''''Value!'''',\r\n  ''''$values'''': ''''Values!'''',\r\n  ''''$type'''': ''''Type!''''\r\n}'', json)", span="471-477"];
m8_146 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="469-469"];
m8_149 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Id!'', c2.Id)", span="484-484"];
m8_150 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Ref!'', c2.Ref)", span="485-485"];
m8_151 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Type!'', c2.Type)", span="486-486"];
m8_152 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Value!'', c2.Value)", span="487-487"];
m8_153 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Values!'', c2.Values)", span="488-488"];
m8_145 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="MetadataPropertyDisabledTestClass c1 = new MetadataPropertyDisabledTestClass\r\n            {\r\n                Id = ''Id!'',\r\n                Ref = ''Ref!'',\r\n                Type = ''Type!'',\r\n                Value = ''Value!'',\r\n                Values = ''Values!''\r\n            }", span="460-467"];
m8_154 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", span="458-458"];
m8_8 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="50-50"];
m8_47 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m8_48 [cluster="Unk.AreEquivalent", file="JsonPropertyCollection.cs", label="Entry Unk.AreEquivalent", span=""];
m8_35 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs", label="Type genericDefinition = type.GetGenericTypeDefinition()", span="100-100"];
m8_38 [cluster="System.Type.GetGenericTypeDefinition()", color=green, community=0, file="JsonPropertyCollection.cs", label="Entry System.Type.GetGenericTypeDefinition()", prediction=26, span="0-0"];
m8_37 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="95-95"];
m8_39 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", color=green, community=0, file="JsonPropertyCollection.cs", label="Newtonsoft.Json.Serialization.JsonArrayContract", prediction=27, span=""];
m8_40 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="173-173"];
m8_41 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="174-174"];
m8_42 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs", label="byte[] bytes = (byte[])actual.Payload", span="175-175"];
m8_36 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs", label="return (genericDefinition == typeof(IList<>)\r\n              || genericDefinition == typeof(ICollection<>)\r\n              || genericDefinition == typeof(IEnumerable<>));", span="102-104"];
m8_43 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs", label="CollectionAssert.AreEquivalent(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }, bytes)", span="176-176"];
m8_44 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="142-142"];
m8_9 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="220-220"];
m8_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", color=green, community=0, file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", prediction=28, span="338-338"];
m8_125 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="396-396"];
m8_130 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="TypeNameHandlingTests.TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameHandlingTests.TypeNameProperty>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="422-425"];
m8_126 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof(List<int>), TypeNameAssemblyFormatHandling.Simple, null)", span="398-398"];
m8_129 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="408-420"];
m8_128 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="406-406"];
m8_131 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Name!'', deserialized.Name)", span="426-426"];
m8_132 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="CustomAssert.IsInstanceOfType(typeof(List<int>), deserialized.Value)", span="427-427"];
m8_133 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="List<int> nested = (List<int>)deserialized.Value", span="429-429"];
m8_127 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="TypeNameHandlingTests.TypeNameProperty typeNameProperty = new TypeNameHandlingTests.TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new List<int> { 1, 2, 3, 4, 5 }\r\n            }", span="400-404"];
m8_134 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(5, nested.Count)", span="430-430"];
m8_135 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(1, nested[0])", span="431-431"];
m8_136 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(2, nested[1])", span="432-432"];
m8_137 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(3, nested[2])", span="433-433"];
m8_138 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(4, nested[3])", span="434-434"];
m8_139 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(5, nested[4])", span="435-435"];
m8_140 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="396-396"];
m8_69 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="244-244"];
m8_80 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="268-271"];
m8_79 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_id'''': 2,\r\n  ''''Name'''': ''''Isabell'''',\r\n  ''''Father'''': {\r\n    ''''blah'''': ''''blah!'''',\r\n    ''''$ref'''': null,\r\n    ''''$id'''': null\r\n  }\r\n}'', json)", span="258-266"];
m8_78 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="string json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="256-256"];
m8_81 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(3, result.Count)", span="273-273"];
m8_82 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="274-274"];
m8_83 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="275-275"];
m8_70 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="var reference = new Dictionary<string, object>()", span="246-246"];
m8_74 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="var child = new Dictionary<string, object>()", span="251-251"];
m8_77 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="child.Add(''Father'', reference)", span="254-254"];
m8_71 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="reference.Add(''blah'', ''blah!'')", span="247-247"];
m8_72 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="reference.Add(''$ref'', null)", span="248-248"];
m8_73 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="reference.Add(''$id'', null)", span="249-249"];
m8_75 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="child.Add(''_id'', 2)", span="252-252"];
m8_76 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="child.Add(''Name'', ''Isabell'')", span="253-253"];
m8_84 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="244-244"];
m8_46 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonPropertyCollection.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m8_34 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs", label="return false;", span="98-98"];
m8_65 [cluster="lambda expression", file="JsonPropertyCollection.cs", label="Entry lambda expression", span="233-240"];
m8_66 [cluster="lambda expression", file="JsonPropertyCollection.cs", label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="235-239"];
m8_67 [cluster="lambda expression", file="JsonPropertyCollection.cs", label="Exit lambda expression", span="233-240"];
m8_187 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", span="582-582"];
m8_188 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs", label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': [1]\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="584-590"];
m8_189 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs", label="JArray o = (JArray)actual.Payload", span="592-592"];
m8_190 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(null, o.Parent)", span="593-593"];
m8_191 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", span="582-582"];
m8_13 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="367-367"];
m8_175 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="554-554"];
m8_176 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="ItemWithJTokens actual = (ItemWithJTokens)JsonConvert.DeserializeObject(@''{\r\n  ''''Payload1'''': 1,\r\n  ''''Payload2'''': {'prop1':1,'prop2':[2]},\r\n  ''''Payload3'''': [1],\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests+ItemWithJTokens, Newtonsoft.Json.Tests''''\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                    TypeNameHandling = TypeNameHandling.All\r\n                })", span="556-566"];
m8_177 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(JTokenType.Integer, actual.Payload1.Type)", span="568-568"];
m8_178 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(1, (int)actual.Payload1)", span="569-569"];
m8_179 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(null, actual.Payload1.Parent)", span="570-570"];
m8_180 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(JTokenType.Object, actual.Payload2.Type)", span="572-572"];
m8_181 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(1, (int)actual.Payload2[''prop1''])", span="573-573"];
m8_182 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(2, (int)actual.Payload2[''prop2''][0])", span="574-574"];
m8_183 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(null, actual.Payload2.Parent)", span="575-575"];
m8_184 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(1, (int)actual.Payload3[0])", span="577-577"];
m8_185 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(null, actual.Payload3.Parent)", span="578-578"];
m8_186 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="554-554"];
m8_109 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="343-343"];
m8_113 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n#pragma warning restore 618\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="370-377"];
m8_112 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''Name'''': null,\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="348-368"];
m8_114 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(4, values.Count)", span="379-379"];
m8_115 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="EmployeeReference e = (EmployeeReference)values[0]", span="381-381"];
m8_116 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Person p = (Person)values[1]", span="382-382"];
m8_122 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''String!'', values[2])", span="391-391"];
m8_123 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Assert.AreEqual((long)int.MinValue, values[3])", span="392-392"];
m8_117 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Bob'', e.Name)", span="384-384"];
m8_118 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="385-385"];
m8_119 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(null, p.Name)", span="387-387"];
m8_120 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="388-388"];
m8_121 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="389-389"];
m8_110 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="345-345"];
m8_111 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="string personRef = typeof(Person).AssemblyQualifiedName", span="346-346"];
m8_124 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="343-343"];
m8_105 [cluster="Newtonsoft.Json.Linq.JToken.CloneToken()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Linq.JToken.CloneToken()", span="132-132"];
m8_192 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="602-602"];
m8_193 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs", label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto\r\n                })", span="604-613"];
m8_195 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs", label="actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n                })", span="617-627"];
m8_194 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs", label="Assert.AreEqual(5f, actual.Payload)", span="615-615"];
m8_196 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs", label="Assert.IsTrue(actual.Payload is JObject)", span="629-629"];
m8_197 [cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs", label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="602-602"];
m8_108 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonPropertyCollection.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155"];
m8_206 [file="JsonPropertyCollection.cs", label=json, span=""];
m8_207 [file="JsonPropertyCollection.cs", label=json, span=""];
m11_14 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83"];
m11_19 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", span="270-270"];
m11_22 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m11_15 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="105-105"];
m11_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", span="35-35"];
m11_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="JTokenWriter writer = new JTokenWriter()", span="38-38"];
m11_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartObject()", span="39-39"];
m11_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(''name1'')", span="40-40"];
m11_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(''value1'')", span="41-41"];
m11_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="writer.WritePropertyName(''name2'')", span="42-42"];
m11_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="writer.WriteStartArray()", span="43-43"];
m11_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(1)", span="44-44"];
m11_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="writer.WriteValue(2)", span="45-45"];
m11_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndArray()", span="46-46"];
m11_10 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="writer.WriteEndObject()", span="47-47"];
m11_11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="JObject o = (JObject)writer.Token", span="49-49"];
m11_12 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="Console.WriteLine(o.ToString())", span="51-51"];
m11_13 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", span="35-35"];
m11_16 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="166-166"];
m11_17 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="260-260"];
m11_20 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m11_23 [cluster="System.Console.WriteLine(string)", file="JsonSerializerInternalWriter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_18 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", span="135-135"];
m11_21 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalWriter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m12_8 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390"];
m12_9 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="Converters = new List<JsonConverter>()", span="392-392"];
m12_10 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390"];
m12_0 [cluster="lambda expression", file="JsonSerializerSettings.cs", label="Entry lambda expression", span="227-227"];
m12_1 [cluster="lambda expression", color=green, community=1, file="JsonSerializerSettings.cs", label=value, prediction=29, span="227-227"];
m12_2 [cluster="lambda expression", file="JsonSerializerSettings.cs", label="Exit lambda expression", span="227-227"];
m12_12 [file="JsonSerializerSettings.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m13_2270 [cluster="XmlDocument.cstr", file="JsonSerializerTest.cs", label="Entry XmlDocument.cstr", span=""];
m13_1380 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27"];
m13_3767 [cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35"];
m13_2028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4577-4577"];
m13_2029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4579-4579"];
m13_2030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4577-4577"];
m13_582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1310-1310"];
m13_583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_stringValue = stringValue", span="1312-1312"];
m13_584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_intValue = intValue", span="1313-1313"];
m13_585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_person1 = p1", span="1314-1314"];
m13_586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_person2 = p2", span="1315-1315"];
m13_587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="_person3 = p3", span="1316-1316"];
m13_588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1310-1310"];
m13_655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1441-1441"];
m13_661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, v.Value)", span="1454-1454"];
m13_662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="1455-1455"];
m13_663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1457-1459"];
m13_656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="string s = null", span="1443-1443"];
m13_657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="var v = new JValue(s)", span="1444-1444"];
m13_660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="string output = o.ToString()", span="1452-1452"];
m13_658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="var o = JObject.FromObject(new { title = v })", span="1445-1445"];
m13_659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1447-1450"];
m13_664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1441-1441"];
m13_137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="414-414"];
m13_139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="418-420"];
m13_143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="431-433"];
m13_144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}''),\r\n                ''Required property 'Name' expects a value but got null. Path '', line 1, position 13.'')", span="435-437"];
m13_145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':''''Name!''''}'')", span="439-439"];
m13_141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c2)", span="427-427"];
m13_142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="429-429"];
m13_146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="441-441"];
m13_138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c1 = new RequiredPropertyTestClass()", span="416-416"];
m13_140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="RequiredPropertyTestClass c2 = new RequiredPropertyTestClass\r\n            {\r\n                Name = ''Name!''\r\n            }", span="422-425"];
m13_147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="414-414"];
m13_688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1471-1471"];
m13_1986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4432-4432"];
m13_1543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3348-3348"];
m13_1544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="_name = name", span="3350-3350"];
m13_1545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Age = age", span="3351-3351"];
m13_1546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Rank = rank", span="3352-3352"];
m13_1547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Title = title", span="3353-3353"];
m13_1548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3348-3348"];
m13_1048 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m13_3220 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="343-343"];
m13_2271 [cluster="Unk.LoadXml", file="JsonSerializerTest.cs", label="Entry Unk.LoadXml", span=""];
m13_739 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="684-684"];
m13_3757 [cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35"];
m13_439 [cluster="System.Globalization.CultureInfo.ToString()", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.ToString()", span="0-0"];
m13_731 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="489-489"];
m13_2115 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0"];
m13_696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1524-1524"];
m13_698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1527-1527"];
m13_700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1529-1529"];
m13_697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1526-1526"];
m13_699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1528-1528"];
m13_701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1524-1524"];
m13_1186 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m13_1630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3582-3582"];
m13_1632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3586-3586"];
m13_1633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3588-3588"];
m13_1634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Admin'', r.RoleName)", span="3589-3589"];
m13_1635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3590-3590"];
m13_1631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3584-3584"];
m13_1636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3582-3582"];
m13_364 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="371-371"];
m13_1133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2478-2478"];
m13_1135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(date)", span="2482-2482"];
m13_1136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2483-2483"];
m13_1134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2480-2480"];
m13_1137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2478-2478"];
m13_816 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m13_440 [cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31"];
m13_852 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m13_2325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5259-5259"];
m13_2326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 13.'')", span="5261-5276"];
m13_2327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5259-5259"];
m13_1933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4259-4259"];
m13_1935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Add(pair.Key, pair.Value)", span="4263-4263"];
m13_1934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label=initial, span="4261-4261"];
m13_1936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4259-4259"];
m13_789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1686-1686"];
m13_617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1352-1352"];
m13_627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="1403-1403"];
m13_624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="1369-1373"];
m13_625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(obj, settings)", span="1375-1375"];
m13_628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="1405-1405"];
m13_629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="1406-1406"];
m13_630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="1407-1407"];
m13_631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="1408-1408"];
m13_632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="1409-1409"];
m13_633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person1, obj2._person3)", span="1410-1410"];
m13_634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="1411-1411"];
m13_635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="1412-1412"];
m13_636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(obj2._parent, obj2)", span="1413-1413"];
m13_618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="1354-1357"];
m13_619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="1358-1361"];
m13_626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="1377-1401"];
m13_623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="obj._parent = obj", span="1367-1367"];
m13_622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="1366-1366"];
m13_620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="p1.Spouse = p2", span="1363-1363"];
m13_621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="p2.Spouse = p1", span="1364-1364"];
m13_637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1352-1352"];
m13_1037 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="755-755"];
m13_1765 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="188-188"];
m13_1225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2635-2635"];
m13_1230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2646-2646"];
m13_1228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2640-2643"];
m13_1231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2648-2648"];
m13_1232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2649-2649"];
m13_1229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2644-2644"];
m13_1227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2638-2638"];
m13_1226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2637-2637"];
m13_1233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2635-2635"];
m13_1669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3645-3645"];
m13_1670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3647-3647"];
m13_1671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, l.Count)", span="3648-3648"];
m13_1672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.3m, l[0])", span="3650-3650"];
m13_1673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="3651-3651"];
m13_1674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.1m, l[2])", span="3652-3652"];
m13_1675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3645-3645"];
m13_2953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6789-6789"];
m13_2956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6795-6795"];
m13_2955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6793-6793"];
m13_2957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="6797-6797"];
m13_2958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="6798-6798"];
m13_2954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6791-6791"];
m13_2959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6789-6789"];
m13_1610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3514-3514"];
m13_1612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value)", span="3521-3521"];
m13_1613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3523-3523"];
m13_1611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3516-3519"];
m13_1614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3514-3514"];
m13_2476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5586-5586"];
m13_2477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5588-5588"];
m13_2478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5589-5589"];
m13_2479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5586-5586"];
m13_1381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2933-2933"];
m13_1383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2937-2937"];
m13_1390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="2946-2946"];
m13_1391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="2948-2948"];
m13_1384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="2939-2939"];
m13_1385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="2940-2940"];
m13_1386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2941-2941"];
m13_1387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2942-2942"];
m13_1388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2943-2943"];
m13_1389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2944-2944"];
m13_1382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2935-2935"];
m13_1392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2933-2933"];
m13_1649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3617-3617"];
m13_1651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3621-3621"];
m13_1650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3619-3619"];
m13_1652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3617-3617"];
m13_3191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7274-7274"];
m13_3975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="9220-9220"];
m13_3069 [cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27"];
m13_326 [cluster="System.Linq.Enumerable.Range(int, int)", file="JsonSerializerTest.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m13_1250 [cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToDateTime(string)", span="0-0"];
m13_1608 [cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m13_2550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5717-5717"];
m13_2116 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0"];
m13_940 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349"];
m13_2645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5966-5966"];
m13_2647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5975-5975"];
m13_2648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(40, p.Age)", span="5976-5976"];
m13_2649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(44.4, p.Height)", span="5977-5977"];
m13_2650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4m, p.Price)", span="5978-5978"];
m13_2646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5968-5973"];
m13_2651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5966-5966"];
m13_2339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5280-5280"];
m13_2350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5296-5296"];
m13_2348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(child)", span="5292-5292"];
m13_2349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5294-5294"];
m13_2351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, result.Count)", span="5298-5298"];
m13_2352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5299-5299"];
m13_2353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5300-5300"];
m13_2340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="5282-5282"];
m13_2344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="5287-5287"];
m13_2347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="5290-5290"];
m13_2341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', null)", span="5283-5283"];
m13_2342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', null)", span="5284-5284"];
m13_2343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="reference.Add(''blah'', ''blah!'')", span="5285-5285"];
m13_2345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="5288-5288"];
m13_2346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="5289-5289"];
m13_2354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5280-5280"];
m13_1055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2332-2332"];
m13_1056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(null)", span="2334-2334"];
m13_1057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="2335-2335"];
m13_1058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2332-2332"];
m13_3828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8886-8886"];
m13_3831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="8890-8893"];
m13_3830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="8889-8889"];
m13_3829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="8888-8888"];
m13_3832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8886-8886"];
m13_3176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7216-7216"];
m13_3182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(product)", span="7224-7224"];
m13_3183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7232-7237"];
m13_3186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7257-7262"];
m13_3184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="7238-7247"];
m13_3187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7264-7271"];
m13_3177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="7218-7218"];
m13_3181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="7222-7222"];
m13_3185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7255-7255"];
m13_3179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="7220-7220"];
m13_3178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="7219-7219"];
m13_3180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="7221-7221"];
m13_3188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7216-7216"];
m13_1372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2920-2920"];
m13_1377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="2927-2927"];
m13_1378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2929-2929"];
m13_1373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = new JaggedArray()", span="2922-2922"];
m13_1376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2925-2925"];
m13_1374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="2923-2923"];
m13_1375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="2924-2924"];
m13_1379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2920-2920"];
m13_3835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8898-8898"];
m13_3837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="JObject o = JsonConvert.DeserializeObject<JObject>(content)", span="8901-8901"];
m13_3839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1408188593, time)", span="8904-8904"];
m13_3836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="8900-8900"];
m13_3838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="int time = (int)o[''result''][''time'']", span="8902-8902"];
m13_3840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8898-8898"];
m13_2379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5362-5362"];
m13_2385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5376-5377"];
m13_2386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newDictionary.Count)", span="5379-5379"];
m13_2380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5364-5364"];
m13_2384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5371-5374"];
m13_2383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5369-5369"];
m13_2381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5366-5366"];
m13_2382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5367-5367"];
m13_2387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5362-5362"];
m13_667 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m13_2874 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434"];
m13_1918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4233-4233"];
m13_1920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="4237-4237"];
m13_1921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, dic.Count)", span="4239-4239"];
m13_1922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', dic[''key1''])", span="4240-4240"];
m13_1923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', dic[''key2''])", span="4241-4241"];
m13_1924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value3'', dic[''key3''])", span="4242-4242"];
m13_1919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="4235-4235"];
m13_1925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4233-4233"];
m13_1251 [cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m13_2884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6639-6639"];
m13_2888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6644-6644"];
m13_2887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6643-6643"];
m13_2889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="6646-6646"];
m13_2886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="6642-6642"];
m13_2885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="string input = @''http://tes/?a=b\\c&d=e\''", span="6641-6641"];
m13_2890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6639-6639"];
m13_271 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="635-635"];
m13_1132 [cluster="Unk.AreNotEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreNotEqual", span=""];
m13_2797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6431-6431"];
m13_2798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="return _readonlyString;", span="6433-6433"];
m13_2799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6431-6431"];
m13_2036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4587-4587"];
m13_2037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="return _innerDictionary.TryGetValue(key, out value);", span="4589-4589"];
m13_2038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4587-4587"];
m13_2119 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0"];
m13_158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="446-446"];
m13_159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Name = name", span="448-448"];
m13_160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="446-446"];
m13_4051 [cluster="System.Text.Encoding.GetEncoding(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0"];
m13_2967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6815-6815"];
m13_2970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6821-6821"];
m13_2969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6819-6819"];
m13_2971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="6823-6823"];
m13_2972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="6824-6824"];
m13_2968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="IList<byte[]> d1 = new List<byte[]> { null }", span="6817-6817"];
m13_2973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6815-6815"];
m13_3937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9145-9145"];
m13_3941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="9155-9155"];
m13_3940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="9151-9153"];
m13_3939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="9149-9149"];
m13_3938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="ConstantTestClass c1 = new ConstantTestClass()", span="9147-9147"];
m13_3942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9145-9145"];
m13_3570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8226-8226"];
m13_3574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="8232-8232"];
m13_3572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(tuple)", span="8229-8229"];
m13_3573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="8230-8230"];
m13_3575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, tuple2.Item1)", span="8233-8233"];
m13_3576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Assert.AreEqual(20, tuple2.Item2)", span="8234-8234"];
m13_3571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="8228-8228"];
m13_3577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8226-8226"];
m13_1891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4144-4144"];
m13_1892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="_dict1.Add(item.Key, item)", span="4146-4146"];
m13_1893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4144-4144"];
m13_2506 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m13_2614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5905-5905"];
m13_2615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5907-5907"];
m13_2616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5908-5908"];
m13_2617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5905-5905"];
m13_3523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8060-8060"];
m13_3524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="IgnoreSerializableAttribute = false", span="8062-8062"];
m13_3525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8060-8060"];
m13_730 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m13_3339 [cluster="Unk.IsFalse", file="JsonSerializerTest.cs", label="Entry Unk.IsFalse", span=""];
m13_1962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4395-4395"];
m13_1964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs", label="C2 = c2", span="4397-4397"];
m13_1965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4395-4395"];
m13_235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="697-697"];
m13_236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="699-705"];
m13_237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(otc.Value1)", span="706-706"];
m13_241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(otc.Value5)", span="710-710"];
m13_238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="707-707"];
m13_239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="708-708"];
m13_240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="709-709"];
m13_242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="697-697"];
m13_183 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="228-228"];
m13_1615 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293"];
m13_2688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6098-6098"];
m13_2690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="6101-6101"];
m13_2689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="6100-6100"];
m13_2691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6098-6098"];
m13_2449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5537-5537"];
m13_2450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5539-5542"];
m13_2451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5544-5544"];
m13_2456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5553-5553"];
m13_2457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5554-5554"];
m13_2452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5546-5546"];
m13_2455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5551-5551"];
m13_2453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="reader.DateParseHandling = DateParseHandling.None", span="5547-5547"];
m13_2454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5549-5549"];
m13_2458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5537-5537"];
m13_2516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5672-5672"];
m13_2522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5681-5681"];
m13_2521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5680-5680"];
m13_2518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5675-5675"];
m13_2520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5678-5678"];
m13_2517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="string json = ''{Amount:123456789876543.21}''", span="5674-5674"];
m13_2519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5676-5676"];
m13_2523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5672-5672"];
m13_759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1710-1710"];
m13_766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1727-1734"];
m13_765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1725-1725"];
m13_760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1712-1718"];
m13_764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1723-1723"];
m13_761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1720-1720"];
m13_762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1721-1721"];
m13_763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1722-1722"];
m13_767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1710-1710"];
m13_2551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5705-5705"];
m13_3604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8296-8296"];
m13_3608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8304-8304"];
m13_3606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8300-8300"];
m13_3607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8302-8302"];
m13_3605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8298-8298"];
m13_3609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8296-8296"];
m13_675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1466-1466"];
m13_510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1191-1191"];
m13_514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1197-1197"];
m13_516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="1200-1200"];
m13_518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="1203-1203"];
m13_520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="1207-1207"];
m13_523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="1212-1212"];
m13_525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="1215-1215"];
m13_527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="1218-1218"];
m13_529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializerProxy.EqualityComparer)", span="1221-1221"];
m13_531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="1224-1224"];
m13_533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="1227-1227"];
m13_535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="1230-1230"];
m13_537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="1233-1233"];
m13_539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="1236-1236"];
m13_541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="1239-1239"];
m13_543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="1242-1242"];
m13_545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="1245-1245"];
m13_547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="1248-1248"];
m13_549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="1251-1251"];
m13_551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="1254-1254"];
m13_553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="1257-1257"];
m13_555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="1260-1260"];
m13_557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="1263-1263"];
m13_560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="1267-1267"];
m13_562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="1270-1270"];
m13_565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="1274-1274"];
m13_567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="1278-1278"];
m13_569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="1282-1282"];
m13_526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="1217-1217"];
m13_511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="1193-1193"];
m13_512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1195-1195"];
m13_513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Binder = customBinder", span="1196-1196"];
m13_515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.CheckAdditionalContent = true", span="1199-1199"];
m13_517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1202-1202"];
m13_519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="1206-1206"];
m13_521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1210-1210"];
m13_522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ContractResolver = resolver", span="1211-1211"];
m13_524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Converters.Add(new StringEnumConverter())", span="1214-1214"];
m13_528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.EqualityComparer = EqualityComparer<object>.Default", span="1220-1220"];
m13_530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1223-1223"];
m13_532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateFormatString = ''yyyy''", span="1226-1226"];
m13_534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateParseHandling = DateParseHandling.None", span="1229-1229"];
m13_536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1232-1232"];
m13_538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1235-1235"];
m13_540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="1238-1238"];
m13_542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="1241-1241"];
m13_544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.Formatting = Formatting.Indented", span="1244-1244"];
m13_546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.MaxDepth = 9001", span="1247-1247"];
m13_548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="1250-1250"];
m13_550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="1253-1253"];
m13_552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1256-1256"];
m13_554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1259-1259"];
m13_556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1262-1262"];
m13_558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1265-1265"];
m13_559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.ReferenceResolver = referenceResolver", span="1266-1266"];
m13_561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1269-1269"];
m13_563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1272-1272"];
m13_564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TraceWriter = traceWriter", span="1273-1273"];
m13_566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1277-1277"];
m13_568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="1281-1281"];
m13_570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1191-1191"];
m13_2992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6866-6866"];
m13_2995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6877-6881"];
m13_2994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6875-6875"];
m13_2993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="6868-6873"];
m13_2996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6866-6866"];
m13_1103 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m13_3012 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27"];
m13_2662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5996-5996"];
m13_2665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="6002-6002"];
m13_2664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6000-6000"];
m13_2663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="MultiIndexSuper e = new MultiIndexSuper()", span="5998-5998"];
m13_2666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5996-5996"];
m13_1989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4485-4485"];
m13_1993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(entry.Key, entry.Value)", span="4494-4494"];
m13_1992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="4492-4492"];
m13_1990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="4487-4487"];
m13_1991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="throw new ArgumentNullException(''dictionary'');", span="4489-4489"];
m13_1994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4485-4485"];
m13_221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="621-621"];
m13_3617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8329-8329"];
m13_3619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(p)", span="8333-8333"];
m13_3623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8341-8344"];
m13_3620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8335-8335"];
m13_3624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8346-8346"];
m13_3618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8331-8331"];
m13_3621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="DefaultContractResolver r = new DefaultContractResolver()", span="8338-8338"];
m13_3622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="r.IgnoreSerializableAttribute = false", span="8339-8339"];
m13_3625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8329-8329"];
m13_1342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2847-2847"];
m13_1344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2856-2856"];
m13_1345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="2858-2858"];
m13_1346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.MiddleName)", span="2859-2859"];
m13_1347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.LastName)", span="2860-2860"];
m13_1343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2849-2854"];
m13_1348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2847-2847"];
m13_3300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7473-7473"];
m13_3304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7488-7488"];
m13_3305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7490-7490"];
m13_3306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7491-7491"];
m13_3307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7492-7492"];
m13_3301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7475-7479"];
m13_3303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7483-7486"];
m13_3302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7481-7481"];
m13_3308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7473-7473"];
m13_3199 [cluster="Unk.WriteValue", file="JsonSerializerTest.cs", label="Entry Unk.WriteValue", span=""];
m13_3465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7886-7886"];
m13_3466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="7888-7892"];
m13_3467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7894-7897"];
m13_3468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7886-7886"];
m13_3445 [cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m13_1827 [cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27"];
m13_1357 [cluster="string.StartsWith(string)", file="JsonSerializerTest.cs", label="Entry string.StartsWith(string)", span="0-0"];
m13_3382 [cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31"];
m13_1704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3699-3699"];
m13_1706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3703-3707"];
m13_1705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3701-3701"];
m13_1707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3699-3699"];
m13_1194 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m13_779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1677-1677"];
m13_2005 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m13_2053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4635-4635"];
m13_2054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_stringValue = stringValue", span="4637-4637"];
m13_2055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_intValue = intValue", span="4638-4638"];
m13_2056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = dateTimeOffset", span="4639-4639"];
m13_2057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_personValue = personValue", span="4640-4640"];
m13_2058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4641-4641"];
m13_2059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4635-4635"];
m13_689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1515-1515"];
m13_691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1518-1518"];
m13_693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1520-1520"];
m13_690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1517-1517"];
m13_692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo)", span="1519-1519"];
m13_694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1515-1515"];
m13_818 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229"];
m13_2508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5658-5658"];
m13_2509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5660-5660"];
m13_2510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5661-5661"];
m13_2511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5658-5658"];
m13_2366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5330-5330"];
m13_2368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5334-5338"];
m13_2369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5340-5340"];
m13_2370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9.9m, dic[''value''])", span="5341-5341"];
m13_2367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="string json = @''{'value':9.9}''", span="5332-5332"];
m13_2371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5330-5330"];
m13_2714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="6173-6173"];
m13_1996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4529-4529"];
m13_1997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4531-4531"];
m13_1998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4529-4529"];
m13_102 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606"];
m13_2243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5111-5111"];
m13_2250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="5132-5132"];
m13_2253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.IsNull(newTestObject.Element.Parent)", span="5136-5136"];
m13_2251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="5133-5133"];
m13_2252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="5134-5134"];
m13_2249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="5130-5130"];
m13_2247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5117-5117"];
m13_2244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="XNodeTestObject testObject = new XNodeTestObject()", span="5113-5113"];
m13_2248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="5118-5129"];
m13_2246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="5115-5115"];
m13_2245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="5114-5114"];
m13_2254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5111-5111"];
m13_898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1979-1979"];
m13_901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1985-1985"];
m13_902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1986-1988"];
m13_900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1983-1983"];
m13_899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1981-1981"];
m13_903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1979-1979"];
m13_2002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4539-4539"];
m13_2003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="_innerDictionary.Clear()", span="4541-4541"];
m13_2004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4539-4539"];
m13_702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1476-1476"];
m13_889 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m13_2667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="6005-6005"];
m13_2707 [cluster="DataContractSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractSerializer.cstr", span=""];
m13_1766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3802-3802"];
m13_1767 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3804-3815"];
m13_1768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3802-3802"];
m13_1252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2687-2687"];
m13_1257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2694-2694"];
m13_1259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2698-2698"];
m13_1260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2699-2699"];
m13_1256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2693-2693"];
m13_1258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2696-2696"];
m13_1253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2689-2689"];
m13_1255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2691-2691"];
m13_1254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2690-2690"];
m13_1261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2687-2687"];
m13_3221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7331-7331"];
m13_3231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7348-7348"];
m13_3232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7349-7351"];
m13_3230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JValue v = (JValue)a[0]", span="7346-7346"];
m13_3229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7345-7345"];
m13_3222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="7333-7333"];
m13_3228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7340-7343"];
m13_3223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="BsonWriter writer = new BsonWriter(ms)", span="7334-7334"];
m13_3227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="7339-7339"];
m13_3224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteStartArray()", span="7335-7335"];
m13_3225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7336-7336"];
m13_3226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="writer.WriteEndArray()", span="7337-7337"];
m13_3233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7331-7331"];
m13_2185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5078-5078"];
m13_2232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field1 = g", span="5081-5081"];
m13_2233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_field2 = g", span="5082-5082"];
m13_2234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property1 = g", span="5083-5083"];
m13_2235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property2 = g", span="5084-5084"];
m13_2236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property3 = g", span="5085-5085"];
m13_2237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property4 = g", span="5086-5086"];
m13_2238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property5 = g", span="5087-5087"];
m13_2239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property6 = g", span="5088-5088"];
m13_2240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property7 = g", span="5089-5089"];
m13_2241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="BB_property8 = g", span="5090-5090"];
m13_2242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5078-5078"];
m13_747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1585-1585"];
m13_749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1588-1588"];
m13_748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="var strings = dictionaryKey.Split(' ')", span="1587-1587"];
m13_750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1585-1585"];
m13_1276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2720-2720"];
m13_1278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="2724-2724"];
m13_1280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="2727-2727"];
m13_1279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="2725-2725"];
m13_1281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', json)", span="2728-2728"];
m13_1277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="string json", span="2722-2722"];
m13_1282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2720-2720"];
m13_1616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3527-3527"];
m13_1617 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3529-3537"];
m13_1619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3541-3553"];
m13_1618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3539-3539"];
m13_1620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3527-3527"];
m13_210 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m13_1910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="4138-4138"];
m13_2085 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0"];
m13_3683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8506-8506"];
m13_3685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8509-8509"];
m13_3686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''my value'', foo.Bar)", span="8510-8510"];
m13_3684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''something_else'''':''''my value''''}''", span="8508-8508"];
m13_3687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8506-8506"];
m13_2124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4770-4770"];
m13_2136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4814-4814"];
m13_2139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4817-4817"];
m13_2137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="4815-4815"];
m13_2138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4816-4816"];
m13_2140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4818-4818"];
m13_2141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="4819-4819"];
m13_2142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="4820-4820"];
m13_2126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4773-4773"];
m13_2135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4789-4812"];
m13_2134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4788-4788"];
m13_2130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4778-4778"];
m13_2125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="4772-4772"];
m13_2127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="4774-4774"];
m13_2132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4781-4781"];
m13_2133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4786-4786"];
m13_2129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="4776-4776"];
m13_2131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="4779-4779"];
m13_2128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="4775-4775"];
m13_2143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4770-4770"];
m13_2974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6828-6828"];
m13_2981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6839-6839"];
m13_2979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(b)", span="6835-6835"];
m13_2980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6837-6837"];
m13_2982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, b2.no)", span="6841-6841"];
m13_2975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Bb b = new Bb()", span="6830-6830"];
m13_2978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="a.no = int.MaxValue", span="6833-6833"];
m13_2977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Aa a = b", span="6832-6832"];
m13_2976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="b.no = true", span="6831-6831"];
m13_2983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6828-6828"];
m13_1333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2821-2821"];
m13_1337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2840-2840"];
m13_1338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="2842-2842"];
m13_1339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="2843-2843"];
m13_1334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="2823-2829"];
m13_1336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="2833-2838"];
m13_1335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2831-2831"];
m13_1340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2821-2821"];
m13_2727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6250-6250"];
m13_2729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Categories = new List<string>()", span="6253-6253"];
m13_2728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Title = title", span="6252-6252"];
m13_2730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6250-6250"];
m13_814 [cluster="Unk.WriteObject", file="JsonSerializerTest.cs", label="Entry Unk.WriteObject", span=""];
m13_1275 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m13_2875 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141"];
m13_3235 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143"];
m13_308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="823-823"];
m13_1937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4303-4303"];
m13_1940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4308-4313"];
m13_1939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4306-4306"];
m13_1938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="B value = new B()", span="4305-4305"];
m13_1941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4303-4303"];
m13_1508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3248-3248"];
m13_1510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3252-3258"];
m13_1509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3250-3250"];
m13_1511 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3248-3248"];
m13_1349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2864-2864"];
m13_1351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2875-2875"];
m13_1350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2868-2873"];
m13_1352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="2876-2876"];
m13_1353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="2878-2878"];
m13_1354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="2880-2880"];
m13_1355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2864-2864"];
m13_2280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="5193-5193"];
m13_3542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8144-8144"];
m13_3543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", color=green, community=0, file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", prediction=30, span="8146-8146"];
m13_3544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", color=green, community=0, file="JsonSerializerTest.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", prediction=31, span="8147-8147"];
m13_3545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", color=green, community=0, file="JsonSerializerTest.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", prediction=32, span="8148-8148"];
m13_3547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", color=green, community=0, file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture\r\n            })", prediction=33, span="8156-8160"];
m13_3546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8150-8154"];
m13_3548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8162-8165"];
m13_3549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8144-8144"];
m13_17 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m13_75 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="286-286"];
m13_76 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", color=green, community=3, file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Binding_DisallowNull(), new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", prediction=34, span="288-291"];
m13_77 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", prediction=35, span="292-292"];
m13_78 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="286-286"];
m13_1999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4534-4534"];
m13_2000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="_innerDictionary.Add(key, value)", span="4536-4536"];
m13_2001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4534-4534"];
m13_506 [cluster="System.Func<TResult>.Invoke()", file="JsonSerializerTest.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m13_733 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m13_744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1580-1580"];
m13_745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs", label="return _name + '' '' + _number;", span="1582-1582"];
m13_746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1580-1580"];
m13_2039 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m13_1813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3908-3908"];
m13_1820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3924-3924"];
m13_1821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3925-3925"];
m13_1822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3926-3926"];
m13_1823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3927-3927"];
m13_1824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3928-3928"];
m13_1819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3916-3922"];
m13_1818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3915-3915"];
m13_1814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Foo f = new Foo()", span="3910-3910"];
m13_1817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 2 })", span="3913-3913"];
m13_1815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 0 })", span="3911-3911"];
m13_1816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="f.Bars.Add(new Bar { Id = 1 })", span="3912-3912"];
m13_1825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3908-3908"];
m13_2092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4667-4667"];
m13_2093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''stringValue'', _stringValue)", span="4669-4669"];
m13_2094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''intValue'', _intValue)", span="4670-4670"];
m13_2095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4671-4671"];
m13_2096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''personValue'', _personValue)", span="4672-4672"];
m13_2097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4673-4673"];
m13_2099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''booleanValue'', _booleanValue)", span="4676-4676"];
m13_2100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''byteValue'', _byteValue)", span="4677-4677"];
m13_2101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''charValue'', _charValue)", span="4678-4678"];
m13_2102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4679-4679"];
m13_2103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''decimalValue'', _decimalValue)", span="4680-4680"];
m13_2104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''shortValue'', _shortValue)", span="4681-4681"];
m13_2105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''longValue'', _longValue)", span="4682-4682"];
m13_2106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4683-4683"];
m13_2107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''floatValue'', _floatValue)", span="4684-4684"];
m13_2108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ushortValue'', _ushortValue)", span="4685-4685"];
m13_2109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''uintValue'', _uintValue)", span="4686-4686"];
m13_2110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''ulongValue'', _ulongValue)", span="4687-4687"];
m13_2098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''nullableInt'', null)", span="4674-4674"];
m13_2111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4667-4667"];
m13_2821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6527-6527"];
m13_2822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Exceptions = new List<Exception>()", span="6529-6529"];
m13_2823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6527-6527"];
m13_1318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2799-2799"];
m13_1323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2807-2807"];
m13_1329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2816-2816"];
m13_1321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="2804-2804"];
m13_1327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(typeClass)", span="2813-2813"];
m13_1322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2805-2805"];
m13_1324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2808-2808"];
m13_1328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2814-2814"];
m13_1330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2817-2817"];
m13_1320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2802-2802"];
m13_1326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2811-2811"];
m13_1319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2801-2801"];
m13_1325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2810-2810"];
m13_1331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2799-2799"];
m13_3816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8858-8858"];
m13_3817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8860-8860"];
m13_3818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8858-8858"];
m13_3555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8189-8189"];
m13_3556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", color=green, community=0, file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''en-NZ'')", prediction=36, span="8191-8191"];
m13_3557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", color=green, community=0, file="JsonSerializerTest.cs", label="culture.DateTimeFormat.AMDesignator = ''a.m.''", prediction=37, span="8192-8192"];
m13_3558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", color=green, community=0, file="JsonSerializerTest.cs", label="culture.DateTimeFormat.PMDesignator = ''p.m.''", prediction=38, span="8193-8193"];
m13_3562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", color=green, community=0, file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture,\r\n                Formatting = Formatting.Indented\r\n            })", prediction=39, span="8204-8209"];
m13_3559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8195-8199"];
m13_3561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8202-8202"];
m13_3563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, dates)", span="8210-8210"];
m13_3564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.IsNull(jsonWriter.DateFormatString)", span="8212-8212"];
m13_3565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8213-8213"];
m13_3566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8214-8214"];
m13_3560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="8201-8201"];
m13_3568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8218-8221"];
m13_3567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="8216-8216"];
m13_3569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8189-8189"];
m13_1683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3666-3666"];
m13_1685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3670-3672"];
m13_1684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3668-3668"];
m13_1686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3666-3666"];
m13_42 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_2747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6293-6293"];
m13_2753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6308-6308"];
m13_2754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6309-6309"];
m13_2755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6310-6310"];
m13_2756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Categories[''one''])", span="6311-6311"];
m13_2757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Categories[''two''])", span="6312-6312"];
m13_2752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6300-6306"];
m13_2751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6299-6299"];
m13_2748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6295-6295"];
m13_2750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'', 2)", span="6297-6297"];
m13_2749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'', 1)", span="6296-6296"];
m13_2758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6293-6293"];
m13_434 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36"];
m13_441 [cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29"];
m13_738 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m13_195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", span="491-491"];
m13_2186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4941-4941"];
m13_2187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4943-4953"];
m13_2196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4964-4984"];
m13_2188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4955-4955"];
m13_2189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4956-4956"];
m13_2190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4957-4957"];
m13_2191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4958-4958"];
m13_2192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4959-4959"];
m13_2193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4960-4960"];
m13_2194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4961-4961"];
m13_2195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4962-4962"];
m13_2197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4986-4986"];
m13_2198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4987-4987"];
m13_2199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4988-4988"];
m13_2200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4989-4989"];
m13_2201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4990-4990"];
m13_2202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4991-4991"];
m13_2203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4992-4992"];
m13_2204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4993-4993"];
m13_2205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field1)", span="4995-4995"];
m13_2206 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, myB.BB_field2)", span="4996-4996"];
m13_2207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property1)", span="4997-4997"];
m13_2208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, myB.BB_property2)", span="4998-4998"];
m13_2209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4999-4999"];
m13_2210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5000-5000"];
m13_2211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, myB.BB_property5)", span="5001-5001"];
m13_2212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5002-5002"];
m13_2213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5003-5003"];
m13_2214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5004-5004"];
m13_2215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4941-4941"];
m13_639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1418-1418"];
m13_642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1424-1424"];
m13_641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1422-1422"];
m13_640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1420-1420"];
m13_643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1418-1418"];
m13_16 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m13_3190 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30"];
m13_3804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8838-8838"];
m13_3805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="return Value;", span="8840-8840"];
m13_3806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8838-8838"];
m13_87 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", span="296-296"];
m13_1438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3086-3086"];
m13_1440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="3095-3095"];
m13_1442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="3098-3098"];
m13_1443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="3099-3099"];
m13_1444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="3100-3100"];
m13_1445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="3101-3101"];
m13_1439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="3088-3093"];
m13_1441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="3096-3096"];
m13_1446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3086-3086"];
m13_1488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3207-3207"];
m13_1496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3226-3226"];
m13_1495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3217-3224"];
m13_1497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3228-3232"];
m13_1489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3209-3209"];
m13_1494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3215-3215"];
m13_1490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3210-3210"];
m13_1491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3211-3211"];
m13_1492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3212-3212"];
m13_1493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3213-3213"];
m13_1498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3207-3207"];
m13_1079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2367-2367"];
m13_1084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2376-2376"];
m13_1085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="2378-2378"];
m13_1083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2374-2374"];
m13_1080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2369-2369"];
m13_1081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="JsonSerializer s = new JsonSerializer()", span="2371-2371"];
m13_1082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2372-2372"];
m13_1086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2367-2367"];
m13_1243 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m13_2118 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0"];
m13_62 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="256-256"];
m13_63 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'');\r\n            }, ''Required property 'Bars' expects a value but got null. Path '', line 1, position 9.'')", span="258-261"];
m13_64 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="256-256"];
m13_1195 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536"];
m13_3724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8671-8671"];
m13_3726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8690-8695"];
m13_3727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, people.Count)", span="8697-8697"];
m13_3730 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(john, jane.Spouse)", span="8702-8702"];
m13_3731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jane, john.Spouse)", span="8703-8703"];
m13_3725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8673-8688"];
m13_3728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="PersonReference john = people[0]", span="8699-8699"];
m13_3729 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="PersonReference jane = people[1]", span="8700-8700"];
m13_3732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8671-8671"];
m13_1001 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m13_638 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30"];
m13_3432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7824-7824"];
m13_3433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="7826-7826"];
m13_3436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="7830-7830"];
m13_3441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="7837-7837"];
m13_3434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, uris.Count)", span="7827-7827"];
m13_3435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="7828-7828"];
m13_3440 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(i1, i2)", span="7835-7835"];
m13_3443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="7839-7839"];
m13_3437 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="7831-7831"];
m13_3442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(uri)", span="7838-7838"];
m13_3438 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="7833-7833"];
m13_3439 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="7834-7834"];
m13_3444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7824-7824"];
m13_1024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2275-2275"];
m13_1026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="2287-2287"];
m13_1027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2288-2288"];
m13_1029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2291-2291"];
m13_1030 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2292-2292"];
m13_1031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2293-2293"];
m13_1032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2294-2294"];
m13_1033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2295-2295"];
m13_1034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2296-2296"];
m13_1035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2297-2297"];
m13_1025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2277-2285"];
m13_1028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2290-2290"];
m13_1036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2275-2275"];
m13_2359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5319-5319"];
m13_2361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5323-5323"];
m13_2362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', cc.First)", span="5324-5324"];
m13_2363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, cc.Second)", span="5325-5325"];
m13_2364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, cc.Ignored)", span="5326-5326"];
m13_2360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5321-5321"];
m13_2365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5319-5319"];
m13_299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="818-818"];
m13_737 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonSerializerTest.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m13_51 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="240-240"];
m13_52 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", color=green, community=3, file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'');\r\n            }, ''Required property 'RequiredProperty' expects a non-null value. Path '', line 1, position 21.'')", prediction=40, span="242-245"];
m13_53 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="240-240"];
m13_103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="357-357"];
m13_104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="359-361"];
m13_105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 2.'')", span="363-365"];
m13_106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="367-369"];
m13_107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="371-373"];
m13_108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="375-377"];
m13_109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="379-381"];
m13_110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="357-357"];
m13_2824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6535-6535"];
m13_2830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6547-6547"];
m13_2833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6552-6552"];
m13_2829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="string sex = JsonConvert.SerializeObject(classWithException)", span="6546-6546"];
m13_2831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6548-6548"];
m13_2834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6553-6553"];
m13_2832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6550-6550"];
m13_2825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="ClassWithException classWithException = new ClassWithException()", span="6537-6537"];
m13_2826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="throw new Exception(''Test Exception'');", span="6540-6540"];
m13_2828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="classWithException.Exceptions.Add(ex)", span="6544-6544"];
m13_2827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label=Exception, span="6542-6542"];
m13_2835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6535-6535"];
m13_2815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6505-6505"];
m13_2818 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6510-6519"];
m13_2817 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6508-6508"];
m13_2816 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="DerivedType d = new DerivedType()", span="6507-6507"];
m13_2819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6505-6505"];
m13_3578 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonSerializerTest.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m13_3383 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="190-190"];
m13_2281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="5216-5216"];
m13_2436 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5463-5463"];
m13_194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", span="479-479"];
m13_2258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5142-5142"];
m13_2266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="5157-5157"];
m13_2267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="5158-5158"];
m13_2265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="5155-5155"];
m13_2263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5149-5149"];
m13_2259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="5144-5144"];
m13_2264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="5150-5154"];
m13_2262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="testObject.Document = document", span="5147-5147"];
m13_2260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="XmlDocument document = new XmlDocument()", span="5145-5145"];
m13_2261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="document.LoadXml(''<root>hehe, root</root>'')", span="5146-5146"];
m13_2268 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5142-5142"];
m13_47 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m13_2018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4559-4559"];
m13_2019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="return _innerDictionary.GetEnumerator();", span="4561-4561"];
m13_2020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4559-4559"];
m13_3360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7617-7617"];
m13_3361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="var json = Serialize(obj)", span="7620-7620"];
m13_3362 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="return Deserialize<T>(json);", span="7621-7621"];
m13_3363 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7617-7617"];
m13_2541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5723-5723"];
m13_2545 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5730-5730"];
m13_2544 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="string str = JsonConvert.SerializeObject(obj)", span="5728-5728"];
m13_2546 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, obj.Position.X)", span="5732-5732"];
m13_2547 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, obj.Position.Y)", span="5733-5733"];
m13_2548 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, obj.Position.Z)", span="5734-5734"];
m13_2542 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="VectorParent obj = new VectorParent()", span="5725-5725"];
m13_2543 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5726-5726"];
m13_2549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5723-5723"];
m13_1552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3378-3378"];
m13_1557 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3391-3391"];
m13_1558 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3392-3392"];
m13_1556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3384-3389"];
m13_1555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3382-3382"];
m13_1553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3380-3380"];
m13_1554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="c.NotIncluded = ''Hi''", span="3381-3381"];
m13_1559 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3378-3378"];
m13_3101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7087-7087"];
m13_3102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="7089-7089"];
m13_3103 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7087-7087"];
m13_1145 [cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m13_3153 [cluster="System.DateTime.ToLocalTime()", file="JsonSerializerTest.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m13_2789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6410-6410"];
m13_2790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_privateString = privateString", span="6412-6412"];
m13_2791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_readonlyString = readonlyString", span="6413-6413"];
m13_2792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="_internalString = internalString", span="6414-6414"];
m13_2793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6410-6410"];
m13_2698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="6115-6115"];
m13_1943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4325-4325"];
m13_1945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4330-4337"];
m13_1946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4338-4341"];
m13_1947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4343-4343"];
m13_1944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4327-4328"];
m13_1948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4325-4325"];
m13_3526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8092-8092"];
m13_3528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="8096-8096"];
m13_3531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8102-8102"];
m13_3532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8103-8103"];
m13_3527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8094-8094"];
m13_3529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8098-8098"];
m13_3530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="8100-8100"];
m13_3533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8092-8092"];
m13_2928 [cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9564-9564"];
m13_1124 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m13_752 [cluster="System.Convert.ToInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m13_1179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2555-2555"];
m13_1183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2562-2562"];
m13_1181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1)", span="2559-2559"];
m13_1182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2560-2560"];
m13_1184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2564-2564"];
m13_1180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2557-2557"];
m13_1185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2555-2555"];
m13_177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="493-493"];
m13_179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="throw new Exception(''Error!'');", span="496-496"];
m13_178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="type == typeof(Version)", span="495-495"];
m13_180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="return base.ResolveContract(type);", span="498-498"];
m13_181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="493-493"];
m13_3154 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m13_1500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3236-3236"];
m13_1501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="3238-3238"];
m13_1502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3240-3240"];
m13_1503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3241-3241"];
m13_1504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3242-3242"];
m13_1505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3243-3243"];
m13_1506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3244-3244"];
m13_1507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3236-3236"];
m13_366 [cluster="Unk.IsTrue", file="JsonSerializerTest.cs", label="Entry Unk.IsTrue", span=""];
m13_834 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49"];
m13_3175 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33"];
m13_3364 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7624-7624"];
m13_3368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7629-7632"];
m13_3366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var stringWriter = new StringWriter()", span="7627-7627"];
m13_3367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="var serializer = new JsonSerializer()", span="7628-7628"];
m13_3369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="serializer.Serialize(stringWriter, obj)", span="7633-7633"];
m13_3370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="return stringWriter.ToString();", span="7635-7635"];
m13_3371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7624-7624"];
m13_2604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="5871-5871"];
m13_3042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6960-6960"];
m13_3046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6986-6986"];
m13_3047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6988-6988"];
m13_3048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6989-6989"];
m13_3043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="6962-6970"];
m13_3045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6974-6984"];
m13_3044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6972-6972"];
m13_3049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="byte[] bytes = (byte[])actual.Payload", span="6990-6990"];
m13_3050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6991-6991"];
m13_3051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6960-6960"];
m13_291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="851-851"];
m13_294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="861-861"];
m13_293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="860-860"];
m13_295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="863-863"];
m13_296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="864-864"];
m13_297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="865-865"];
m13_292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="853-858"];
m13_298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="851-851"];
m13_3399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7751-7751"];
m13_3408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="7764-7764"];
m13_3401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="7755-7755"];
m13_3405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''one''])", span="7760-7760"];
m13_3402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="JsonSerializer s = JsonSerializer.Create(settings)", span="7756-7756"];
m13_3407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="s = JsonSerializer.Create(settings)", span="7763-7763"];
m13_3400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="string json = ''{one:1}{}''", span="7753-7753"];
m13_3406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="settings.CheckAdditionalContent = true", span="7762-7762"];
m13_3403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7757-7757"];
m13_3404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="7759-7759"];
m13_3409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7751-7751"];
m13_2176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4908-4908"];
m13_2179 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="4912-4918"];
m13_2182 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="4922-4936"];
m13_2178 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="4911-4911"];
m13_2180 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="BB myB = new BB(3, 4)", span="4920-4920"];
m13_2181 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="4921-4921"];
m13_2177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="AA myA = new AA(2)", span="4910-4910"];
m13_2183 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4908-4908"];
m13_3672 [cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="45-45"];
m13_3798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8828-8828"];
m13_3799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8830-8830"];
m13_3800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8828-8828"];
m13_897 [cluster="object.ToString()", file="JsonSerializerTest.cs", label="Entry object.ToString()", span="0-0"];
m13_687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1483-1483"];
m13_2759 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m13_2594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5859-5859"];
m13_2595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="5861-5867"];
m13_2596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5859-5859"];
m13_3113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7099-7099"];
m13_3114 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="7101-7101"];
m13_3115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7099-7099"];
m13_602 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0"];
m13_1393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2952-2952"];
m13_1395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="2991-2991"];
m13_1394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="2954-2989"];
m13_1396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2952-2952"];
m13_3697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8565-8565"];
m13_3698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", prediction=41, span="8567-8571"];
m13_3699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", prediction=42, span="8573-8577"];
m13_3700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=0, file="JsonSerializerTest.cs", label="john.Spouse = jane", prediction=43, span="8579-8579"];
m13_3701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=0, file="JsonSerializerTest.cs", label="jane.Spouse = john", prediction=44, span="8580-8580"];
m13_3702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", prediction=45, span="8582-8586"];
m13_3703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = null,\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", prediction=46, span="8588-8595"];
m13_3704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", prediction=47, span="8597-8612"];
m13_3705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8565-8565"];
m13_1879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4108-4108"];
m13_1880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="4110-4110"];
m13_1883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="4114-4114"];
m13_1884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="4115-4115"];
m13_1885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, d.Dictionary.Count)", span="4116-4116"];
m13_1886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="4117-4117"];
m13_1887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="4118-4118"];
m13_1888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, d.List.Count)", span="4119-4119"];
m13_1889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''existing'', d.List[0])", span="4120-4120"];
m13_1881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d)", span="4112-4112"];
m13_1882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(d.Dictionary)", span="4113-4113"];
m13_1890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4108-4108"];
m13_2123 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0"];
m13_861 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m13_1711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3712-3712"];
m13_1713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3716-3722"];
m13_1712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3714-3714"];
m13_1714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3712-3712"];
m13_343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="946-946"];
m13_346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, o.Count)", span="959-959"];
m13_347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="960-960"];
m13_348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(false, (bool)o[''B''])", span="961-961"];
m13_349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o[''C''].Count())", span="962-962"];
m13_350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)o[''C''][0])", span="963-963"];
m13_354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, o.Count)", span="969-969"];
m13_358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, o.Count)", span="974-974"];
m13_359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, (bool)o[''A''])", span="975-975"];
m13_351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="965-965"];
m13_355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="970-970"];
m13_360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="976-976"];
m13_345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="958-958"];
m13_353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="968-968"];
m13_357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="o = (JObject)JsonConvert.DeserializeObject(json)", span="973-973"];
m13_344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="948-957"];
m13_352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="json = @''{/* Test */}''", span="967-967"];
m13_356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="json = @''{''''A'''': true/* Test */}''", span="972-972"];
m13_361 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="946-946"];
m13_2605 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m13_3234 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m13_837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1863-1863"];
m13_843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="1872-1872"];
m13_845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1886-1886"];
m13_846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="1887-1887"];
m13_847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1888-1888"];
m13_848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1889-1889"];
m13_849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1890-1890"];
m13_850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1891-1891"];
m13_838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="1865-1865"];
m13_842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="1870-1870"];
m13_844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="1884-1884"];
m13_839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="1867-1867"];
m13_840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="1868-1868"];
m13_841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="1869-1869"];
m13_851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1863-1863"];
m13_3771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8782-8782"];
m13_3779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return Value.ToString(CultureInfo.InvariantCulture);", span="8798-8798"];
m13_3778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(string)", span="8796-8796"];
m13_3773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return this;", span="8786-8786"];
m13_3775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (int)Value;", span="8790-8790"];
m13_3777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (long)Value;", span="8794-8794"];
m13_3776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(long)", span="8792-8792"];
m13_3780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8800-8800"];
m13_3772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(object)", span="8784-8784"];
m13_3774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="conversionType == typeof(int)", span="8788-8788"];
m13_3781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8782-8782"];
m13_2485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5619-5619"];
m13_2494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5638-5638"];
m13_2496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5641-5641"];
m13_2498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5644-5644"];
m13_2502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5650-5650"];
m13_2504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5653-5653"];
m13_2491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5626-5626"];
m13_2493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5629-5636"];
m13_2492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5628-5628"];
m13_2495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5640-5640"];
m13_2497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5643-5643"];
m13_2499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5646-5646"];
m13_2500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5647-5647"];
m13_2486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="dynamic expando = new ExpandoObject()", span="5621-5621"];
m13_2501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5649-5649"];
m13_2503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5652-5652"];
m13_2490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex.String = ''I am a string''", span="5625-5625"];
m13_2487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Int = 1", span="5622-5622"];
m13_2488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Decimal = 99.9d", span="5623-5623"];
m13_2489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="expando.Complex = new ExpandoObject()", span="5624-5624"];
m13_2505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5619-5619"];
m13_589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1319-1319"];
m13_590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_serializationInfo = info", span="1321-1321"];
m13_591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1319-1319"];
m13_3786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8808-8808"];
m13_3787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8810-8810"];
m13_3788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8808-8808"];
m13_1290 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m13_1754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3776-3776"];
m13_1756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3780-3780"];
m13_1757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', p.Name)", span="3781-3781"];
m13_1755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="string json = @''{''''Name'''':''''''''}''", span="3778-3778"];
m13_1758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3776-3776"];
m13_3398 [cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30"];
m13_3834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="8773-8773"];
m13_2638 [cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="9538-9538"];
m13_3420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7806-7806"];
m13_3421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object.'')", span="7808-7820"];
m13_3422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7806-7806"];
m13_95 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="328-328"];
m13_97 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DictionaryKeyContractResolver()\r\n            })", span="341-344"];
m13_98 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''NAME'''': ''''James'''',\r\n  ''''AGE'''': 1,\r\n  ''''ROLENAMES'''': {\r\n    ''''IsAdmin'''': true,\r\n    ''''IsModerator'''': false\r\n  }\r\n}'', json)", span="346-353"];
m13_96 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="var person = new\r\n            {\r\n                Name = ''James'',\r\n                Age = 1,\r\n                RoleNames = new Dictionary<string, bool>\r\n                {\r\n                    { ''IsAdmin'', true },\r\n                    { ''IsModerator'', false }\r\n                }\r\n            }", span="330-339"];
m13_99 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="328-328"];
m13_182 [cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m13_3359 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33"];
m13_3896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9030-9030"];
m13_3899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9034-9039"];
m13_3900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9041-9044"];
m13_3903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9052-9052"];
m13_3902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9050-9050"];
m13_3901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9046-9048"];
m13_3898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9033-9033"];
m13_3897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9032-9032"];
m13_3904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9030-9030"];
m13_1802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3881-3881"];
m13_1806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="3900-3900"];
m13_1807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="3901-3901"];
m13_1808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="3902-3902"];
m13_1809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="3903-3903"];
m13_1810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="3904-3904"];
m13_1805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="3893-3898"];
m13_1804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="3891-3891"];
m13_1803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="3883-3889"];
m13_1811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3881-3881"];
m13_205 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="564-564"];
m13_3020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6920-6920"];
m13_3021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 21.'')", span="6922-6930"];
m13_3022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6920-6920"];
m13_136 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787"];
m13_2593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5791-5791"];
m13_3756 [cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="85-85"];
m13_614 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m13_2009 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m13_3397 [cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31"];
m13_4037 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerTest.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m13_2089 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0"];
m13_988 [cluster="JavaScriptSerializer.cstr", file="JsonSerializerTest.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m13_3914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9082-9082"];
m13_3917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9086-9091"];
m13_3918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9093-9096"];
m13_3921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9104-9104"];
m13_3920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9102-9102"];
m13_3919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9098-9100"];
m13_3916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9085-9085"];
m13_3915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9084-9084"];
m13_3922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9082-9082"];
m13_0 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="131-131"];
m13_1 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="return new Subclass\r\n                {\r\n                    ID = 123,\r\n                    Name = ''ABC'',\r\n                    P1 = true,\r\n                    P2 = 44\r\n                };", span="133-139"];
m13_2 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="131-131"];
m13_959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2158-2158"];
m13_961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2162-2162"];
m13_960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\jvvv'''']''", span="2160-2160"];
m13_962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2158-2158"];
m13_616 [cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0"];
m13_3076 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27"];
m13_1206 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m13_1469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3167-3167"];
m13_1474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="3175-3175"];
m13_1472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i)", span="3172-3172"];
m13_1475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="3177-3177"];
m13_1473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3173-3173"];
m13_1476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3178-3178"];
m13_1470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3169-3169"];
m13_1471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="3170-3170"];
m13_1477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3167-3167"];
m13_3340 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7574-7574"];
m13_3344 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7592-7592"];
m13_3342 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7582-7585"];
m13_3345 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7594-7594"];
m13_3346 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7595-7595"];
m13_3347 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7596-7596"];
m13_3341 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7576-7580"];
m13_3343 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7587-7590"];
m13_3348 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7574-7574"];
m13_681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1506-1506"];
m13_683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1509-1509"];
m13_685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1511-1511"];
m13_682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1508-1508"];
m13_684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1510-1510"];
m13_686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1506-1506"];
m13_1008 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m13_2837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6558-6558"];
m13_2841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6571-6571"];
m13_2842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6572-6572"];
m13_2843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6573-6573"];
m13_2844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6574-6574"];
m13_2845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6575-6575"];
m13_2846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6576-6576"];
m13_2840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6563-6569"];
m13_2839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6561-6561"];
m13_2838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6560-6560"];
m13_2847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6558-6558"];
m13_3715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8633-8633"];
m13_3717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8652-8659"];
m13_3718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, people.Count)", span="8661-8661"];
m13_3721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(john, jane.Spouse)", span="8666-8666"];
m13_3722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Assert.AreEqual(jane, john.Spouse)", span="8667-8667"];
m13_3716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8635-8650"];
m13_3719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = people[0]", span="8663-8663"];
m13_3720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = people[1]", span="8664-8664"];
m13_3723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8633-8633"];
m13_1690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3677-3677"];
m13_1692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3681-3683"];
m13_1691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3679-3679"];
m13_1693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3677-3677"];
m13_910 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m13_3496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7984-7984"];
m13_3498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7991-7991"];
m13_3499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, l[0])", span="7993-7993"];
m13_3500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, l[1])", span="7994-7994"];
m13_3497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7986-7989"];
m13_3501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7984-7984"];
m13_4008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9336-9336"];
m13_4009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9338-9338"];
m13_4011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return null;", span="9341-9341"];
m13_4016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return new System.Net.Mail.MailAddress(address, displayName);", span="9351-9351"];
m13_4017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return new System.Net.Mail.MailAddress(address);", span="9354-9354"];
m13_4010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="messageJObject == null", span="9339-9339"];
m13_4012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="9344-9344"];
m13_4015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="9348-9349"];
m13_4013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="JToken displayNameToken", span="9346-9346"];
m13_4014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string displayName", span="9347-9347"];
m13_4018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9336-9336"];
m13_1732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3742-3742"];
m13_1733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="3744-3744"];
m13_1734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3748-3748"];
m13_1735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3749-3749"];
m13_1736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3751-3751"];
m13_1737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3753-3755"];
m13_1738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3742-3742"];
m13_442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1090-1090"];
m13_443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1092-1092"];
m13_446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, settings.Binder)", span="1096-1096"];
m13_448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="1099-1099"];
m13_450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="1102-1102"];
m13_452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="1106-1106"];
m13_455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, settings.ContractResolver)", span="1111-1111"];
m13_457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, settings.Converters.Count)", span="1114-1114"];
m13_459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="1117-1117"];
m13_461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="1120-1120"];
m13_463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="1123-1123"];
m13_465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="1126-1126"];
m13_467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="1129-1129"];
m13_469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="1132-1132"];
m13_471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="1135-1135"];
m13_473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="1138-1138"];
m13_475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="1141-1141"];
m13_477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="1144-1144"];
m13_479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, settings.MaxDepth)", span="1147-1147"];
m13_481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="1150-1150"];
m13_483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="1153-1153"];
m13_485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="1156-1156"];
m13_487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="1159-1159"];
m13_489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="1162-1162"];
m13_492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="1167-1167"];
m13_493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1169-1169"];
m13_495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1172-1172"];
m13_497 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="1175-1175"];
m13_500 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="1179-1179"];
m13_502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="1183-1183"];
m13_504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="1187-1187"];
m13_458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Culture = new CultureInfo(''en-nz'')", span="1116-1116"];
m13_444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1094-1094"];
m13_445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Binder = customBinder", span="1095-1095"];
m13_447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.CheckAdditionalContent = true", span="1098-1098"];
m13_449 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1101-1101"];
m13_451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="1105-1105"];
m13_454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ContractResolver = resolver", span="1110-1110"];
m13_456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Converters.Add(new StringEnumConverter())", span="1113-1113"];
m13_460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.EqualityComparer = EqualityComparer<object>.Default", span="1119-1119"];
m13_462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1122-1122"];
m13_464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateFormatString = ''yyyy''", span="1125-1125"];
m13_466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateParseHandling = DateParseHandling.None", span="1128-1128"];
m13_468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1131-1131"];
m13_470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1134-1134"];
m13_472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="1137-1137"];
m13_474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="1140-1140"];
m13_476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.Formatting = Formatting.Indented", span="1143-1143"];
m13_478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.MaxDepth = 9001", span="1146-1146"];
m13_480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="1149-1149"];
m13_482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.NullValueHandling = NullValueHandling.Ignore", span="1152-1152"];
m13_484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1155-1155"];
m13_486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1158-1158"];
m13_488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1161-1161"];
m13_491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceResolver = referenceResolver", span="1166-1166"];
m13_494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.ReferenceResolverProvider = () => referenceResolver", span="1171-1171"];
m13_496 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1174-1174"];
m13_499 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TraceWriter = traceWriter", span="1178-1178"];
m13_501 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1182-1182"];
m13_503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="settings.TypeNameHandling = TypeNameHandling.All", span="1186-1186"];
m13_453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1109-1109"];
m13_490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1164-1164"];
m13_498 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1177-1177"];
m13_505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1090-1090"];
m13_728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1574-1574"];
m13_741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="_name = name", span="1576-1576"];
m13_742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="_number = number", span="1577-1577"];
m13_743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1574-1574"];
m13_2562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5771-5771"];
m13_2564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5775-5779"];
m13_2567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5785-5785"];
m13_2568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5786-5786"];
m13_2565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5781-5781"];
m13_2566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5783-5783"];
m13_2563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="var derived = new Derived(''meh'', ''woo'')", span="5773-5773"];
m13_2569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5771-5771"];
m13_1718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3726-3726"];
m13_1720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'')", span="3730-3730"];
m13_1719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="string json = @''new Constructor(123)''", span="3728-3728"];
m13_1721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3726-3726"];
m13_2090 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0"];
m13_300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="869-869"];
m13_303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="879-879"];
m13_302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="878-878"];
m13_304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="881-881"];
m13_305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="882-882"];
m13_306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="883-883"];
m13_301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="871-876"];
m13_307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="869-869"];
m13_1262 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m13_4036 [cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0"];
m13_732 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m13_3678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8496-8496"];
m13_3680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="throw new ArgumentNullException(''bar'');", span="8499-8499"];
m13_3679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="bar == null", span="8498-8498"];
m13_3681 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="Bar = bar", span="8501-8501"];
m13_3682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8496-8496"];
m13_3338 [cluster="string.Contains(string)", file="JsonSerializerTest.cs", label="Entry string.Contains(string)", span="0-0"];
m13_3792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8818-8818"];
m13_3793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8820-8820"];
m13_3794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8818-8818"];
m13_3470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7905-7905"];
m13_3471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="m_Item1 = item1", span="7907-7907"];
m13_3472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7905-7905"];
m13_2788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6330-6330"];
m13_3 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", span="115-115"];
m13_2743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6285-6285"];
m13_2745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Categories = new Dictionary<string, int>()", span="6288-6288"];
m13_2744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Title = title", span="6287-6287"];
m13_2746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6285-6285"];
m13_3541 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8106-8106"];
m13_2529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5693-5693"];
m13_2535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5702-5702"];
m13_2534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5701-5701"];
m13_2531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5696-5696"];
m13_2533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5699-5699"];
m13_2530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="string json = ''{'Value':123456789876543.21}''", span="5695-5695"];
m13_2532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5697-5697"];
m13_2536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5693-5693"];
m13_2794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6417-6417"];
m13_2795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="_readonlyString = ''default!''", span="6419-6419"];
m13_2796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6417-6417"];
m13_736 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m13_2083 [cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0"];
m13_958 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m13_1153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2514-2514"];
m13_1157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2523-2523"];
m13_1158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ts, c.TimeSpanField)", span="2524-2524"];
m13_1156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2519-2521"];
m13_1155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2518-2518"];
m13_1154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2516-2516"];
m13_1159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2514-2514"];
m13_653 [cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m13_3502 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7999-7999"];
m13_3504 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple)", span="8002-8002"];
m13_3505 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8003-8003"];
m13_3509 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="8011-8011"];
m13_3506 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="MyTuple<int> obj = null", span="8005-8005"];
m13_3503 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = new MyTuple<int>(500)", span="8001-8001"];
m13_3507 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="8007-8007"];
m13_3508 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="doStuff()", span="8010-8010"];
m13_3510 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7999-7999"];
m13_2060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4644-4644"];
m13_2061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_stringValue = info.GetString(''stringValue'')", span="4646-4646"];
m13_2062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_intValue = info.GetInt32(''intValue'')", span="4647-4647"];
m13_2063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4648-4648"];
m13_2064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4649-4649"];
m13_2065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4650-4650"];
m13_2066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4651-4651"];
m13_2067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4653-4653"];
m13_2068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_byteValue = info.GetByte(''byteValue'')", span="4654-4654"];
m13_2069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_charValue = info.GetChar(''charValue'')", span="4655-4655"];
m13_2070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4656-4656"];
m13_2071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4657-4657"];
m13_2072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_shortValue = info.GetInt16(''shortValue'')", span="4658-4658"];
m13_2073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_longValue = info.GetInt64(''longValue'')", span="4659-4659"];
m13_2074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4660-4660"];
m13_2075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_floatValue = info.GetSingle(''floatValue'')", span="4661-4661"];
m13_2076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4662-4662"];
m13_2077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_uintValue = info.GetUInt32(''uintValue'')", span="4663-4663"];
m13_2078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4664-4664"];
m13_2079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4644-4644"];
m13_573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1287-1287"];
m13_577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1294-1294"];
m13_575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(ratio)", span="1290-1290"];
m13_578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1296-1296"];
m13_576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1292-1292"];
m13_579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1297-1297"];
m13_574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Ratio ratio = new Ratio(2, 1)", span="1289-1289"];
m13_580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1287-1287"];
m13_3053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6995-6995"];
m13_3054 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6997-6997"];
m13_3056 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', dict[''k1''])", span="7000-7000"];
m13_3057 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''v2'', dict[''k2''])", span="7001-7001"];
m13_3055 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6998-6998"];
m13_3058 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6995-6995"];
m13_57 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="249-249"];
m13_58 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", color=green, community=0, file="JsonSerializerTest.cs", label="Binding_DisallowNull o = JsonConvert.DeserializeObject<Binding_DisallowNull>(''{}'')", prediction=48, span="251-251"];
m13_59 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.IsNull(o.RequiredProperty)", prediction=49, span="252-252"];
m13_60 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="249-249"];
m13_3349 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7600-7600"];
m13_3351 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Assert.AreEqual('''', s)", span="7603-7603"];
m13_3350 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7602-7602"];
m13_3352 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7600-7600"];
m13_3460 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7874-7874"];
m13_3461 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="7876-7879"];
m13_3462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123, result.Key)", span="7881-7881"];
m13_3463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''test value'', result.Value)", span="7882-7882"];
m13_3464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7874-7874"];
m13_1123 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m13_101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="310-310"];
m13_1987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4481-4481"];
m13_1988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4481-4481"];
m13_2860 [cluster="System.TimeSpan.FromDays(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m13_854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1913-1913"];
m13_857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="1919-1919"];
m13_858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="1920-1920"];
m13_859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, p.Price)", span="1921-1921"];
m13_856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="1917-1917"];
m13_855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1915-1915"];
m13_860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1913-1913"];
m13_1408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3004-3004"];
m13_1409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="3006-3012"];
m13_1410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="return person;", span="3013-3013"];
m13_1411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3004-3004"];
m13_668 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m13_916 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m13_3713 [cluster="Size.cstr", file="JsonSerializerTest.cs", label="Entry Size.cstr", span=""];
m13_1462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3151-3151"];
m13_1464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="3156-3156"];
m13_1463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3155-3155"];
m13_1465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3158-3158"];
m13_1466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3160-3160"];
m13_1467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="3162-3162"];
m13_1468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3151-3151"];
m13_2908 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="882-882"];
m13_1365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2902-2902"];
m13_1367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2910-2910"];
m13_1366 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="2906-2908"];
m13_1368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="2911-2911"];
m13_1369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="2913-2913"];
m13_1370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="2915-2915"];
m13_1371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2902-2902"];
m13_317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="828-828"];
m13_4019 [cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="460-460"];
m13_1358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2885-2885"];
m13_1359 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="2887-2898"];
m13_1360 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2885-2885"];
m13_665 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m13_2573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5807-5807"];
m13_2574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''Name'', _name)", span="5809-5809"];
m13_2575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5807-5807"];
m13_3822 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8868-8868"];
m13_3823 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8870-8870"];
m13_3824 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8868-8868"];
m13_1792 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m13_2278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="5181-5181"];
m13_836 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m13_3511 [cluster="System.Action.Invoke()", file="JsonSerializerTest.cs", label="Entry System.Action.Invoke()", span="0-0"];
m13_3782 [cluster="System.InvalidCastException.InvalidCastException()", file="JsonSerializerTest.cs", label="Entry System.InvalidCastException.InvalidCastException()", span="0-0"];
m13_3167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7201-7201"];
m13_3172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="7208-7208"];
m13_3171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var serializedPerson = JsonConvert.SerializeObject(person)", span="7207-7207"];
m13_3173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="7210-7210"];
m13_3168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="var person = PersonWithPrivateConstructor.CreatePerson()", span="7203-7203"];
m13_3170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Age = 25", span="7205-7205"];
m13_3169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="person.Name = ''John Doe''", span="7204-7204"];
m13_3174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7201-7201"];
m13_1582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3453-3453"];
m13_1585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3468-3468"];
m13_1586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3469-3469"];
m13_1587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3470-3470"];
m13_1588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3471-3471"];
m13_1589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3472-3472"];
m13_1590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3473-3473"];
m13_1584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3466-3466"];
m13_1583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3455-3464"];
m13_1591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3453-3453"];
m13_826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1848-1848"];
m13_828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="1852-1852"];
m13_830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="1856-1856"];
m13_831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="1857-1857"];
m13_827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store store = new Store()", span="1850-1850"];
m13_829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="1854-1854"];
m13_832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="1859-1859"];
m13_833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1848-1848"];
m13_2257 [cluster="Unk.ToString", file="JsonSerializerTest.cs", label="Entry Unk.ToString", span=""];
m13_3377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7653-7653"];
m13_3378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="7655-7665"];
m13_3380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7678-7692"];
m13_3379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7667-7667"];
m13_3381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7653-7653"];
m13_2623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5920-5920"];
m13_2624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5922-5922"];
m13_2625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5923-5923"];
m13_2626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="5924-5924"];
m13_2627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Age)", span="5925-5925"];
m13_2628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5920-5920"];
m13_1087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2382-2382"];
m13_1094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2391-2391"];
m13_1093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="2389-2389"];
m13_1095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2392-2392"];
m13_1096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2394-2394"];
m13_1097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2395-2395"];
m13_1098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2396-2396"];
m13_1099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2397-2397"];
m13_1100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2398-2398"];
m13_1101 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2399-2399"];
m13_1088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = new ClassWithArray()", span="2384-2384"];
m13_1092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(3)", span="2388-2388"];
m13_1089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Foo = ''hello''", span="2385-2385"];
m13_1090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(1)", span="2386-2386"];
m13_1091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(2)", span="2387-2387"];
m13_1102 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2382-2382"];
m13_2144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4824-4824"];
m13_2156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4871-4871"];
m13_2154 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="4842-4845"];
m13_2159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4874-4874"];
m13_2157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', o2._stringValue)", span="4872-4872"];
m13_2158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4873-4873"];
m13_2160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4875-4875"];
m13_2161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullPersonValue)", span="4876-4876"];
m13_2162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o2._nullableInt)", span="4877-4877"];
m13_2146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4827-4827"];
m13_2155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4846-4869"];
m13_2153 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4840-4840"];
m13_2150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4832-4832"];
m13_2145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Person person = new Person()", span="4826-4826"];
m13_2147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.LastModified = person.BirthDate", span="4828-4828"];
m13_2152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="4835-4835"];
m13_2149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Name = ''Name!''", span="4830-4830"];
m13_2151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="string dateTimeOffsetText", span="4833-4833"];
m13_2148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="person.Department = ''Department!''", span="4829-4829"];
m13_2163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4824-4824"];
m13_3536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8117-8117"];
m13_3538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="8128-8131"];
m13_3539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8133-8140"];
m13_3537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="8119-8126"];
m13_3540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8117-8117"];
m13_3034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6946-6946"];
m13_3036 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6949-6949"];
m13_3039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6954-6954"];
m13_3037 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.Id)", span="6951-6951"];
m13_3040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6956-6956"];
m13_3035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':null}''", span="6948-6948"];
m13_3038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6953-6953"];
m13_3041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6946-6946"];
m13_1234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2653-2653"];
m13_1240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2663-2663"];
m13_1241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2664-2664"];
m13_1238 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2659-2659"];
m13_1235 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2655-2655"];
m13_1239 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2661-2661"];
m13_1237 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2658-2658"];
m13_1236 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2656-2656"];
m13_1242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2653-2653"];
m13_1478 [cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31"];
m13_2872 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m13_1622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3557-3557"];
m13_1624 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3573-3573"];
m13_1625 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3575-3575"];
m13_1626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, content.Children.Count)", span="3576-3576"];
m13_1627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3577-3577"];
m13_1628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3578-3578"];
m13_1623 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3559-3571"];
m13_1629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3557-3557"];
m13_819 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m13_813 [cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m13_1894 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4157-4157"];
m13_54 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="242-245"];
m13_55 [cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'')", prediction=50, span="244-244"];
m13_56 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="242-245"];
m13_71 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="279-282"];
m13_72 [cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new Binding_DisallowNull())", prediction=51, span="281-281"];
m13_73 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="279-282"];
m13_84 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="304-307"];
m13_85 [cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new DictionaryWithNoNull())", prediction=52, span="306-306"];
m13_86 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="304-307"];
m13_49 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="235-235"];
m13_66 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'')", span="260-260"];
m13_112 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="360-360"];
m13_115 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="364-364"];
m13_118 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="368-368"];
m13_121 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="372-372"];
m13_124 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="376-376"];
m13_127 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="380-380"];
m13_153 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}'')", span="432-432"];
m13_156 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="436-436"];
m13_175 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="471-471"];
m13_341 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Version>>(json)", span="941-941"];
m13_964 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<string>>(json)", span="2162-2162"];
m13_1654 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="3621-3621"];
m13_1681 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="3660-3660"];
m13_1688 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3670-3670"];
m13_1695 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Exception>(json)", span="3681-3681"];
m13_1702 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(json)", span="3692-3692"];
m13_1709 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3704-3704"];
m13_1716 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<JObject>(json)", span="3717-3717"];
m13_1723 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Person>(json)", span="3730-3730"];
m13_1730 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3738-3738"];
m13_2323 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5255-5255"];
m13_2337 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5275-5275"];
m13_2439 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5497-5497"];
m13_2990 [cluster="lambda expression", file="JsonSerializerTest.cs", label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="6854-6854"];
m13_3004 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="6893-6893"];
m13_3025 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6929-6929"];
m13_3032 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6941-6941"];
m13_3105 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>('''')", span="7089-7089"];
m13_3111 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<StringComparison>('''')", span="7095-7095"];
m13_3117 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<int>('''')", span="7101-7101"];
m13_3127 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<double>(null)", span="7115-7115"];
m13_3513 [cluster="lambda expression", file="JsonSerializerTest.cs", label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="8007-8007"];
m13_3594 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="8275-8275"];
m13_3602 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8290-8290"];
m13_3611 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8304-8304"];
m13_3980 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<string>(''020474068'')", span="9233-9233"];
m13_1752 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new List<Person>())", span="3772-3772"];
m13_150 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c1)", span="419-419"];
m13_172 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c1)", span="461-461"];
m13_956 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="2154-2154"];
m13_1268 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c)", span="2708-2708"];
m13_1363 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="2897-2897"];
m13_3973 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new ErroringTestClass())", span="9227-9227"];
m13_1515 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3257-3257"];
m13_1763 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3789-3797"];
m13_1770 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3806-3814"];
m13_1776 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3823-3831"];
m13_1782 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3840-3848"];
m13_1931 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4250-4254"];
m13_2329 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="5265-5265"];
m13_2332 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="5269-5269"];
m13_1362 [cluster="lambda expression", file="JsonSerializerTest.cs", label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="2889-2895"];
m13_48 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="233-236"];
m13_65 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="258-261"];
m13_111 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="360-360"];
m13_114 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="364-364"];
m13_117 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="368-368"];
m13_120 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="372-372"];
m13_123 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="376-376"];
m13_126 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="380-380"];
m13_149 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="419-419"];
m13_152 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="432-432"];
m13_155 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="436-436"];
m13_171 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="461-461"];
m13_174 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="471-471"];
m13_340 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="939-942"];
m13_955 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2154-2154"];
m13_963 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2162-2162"];
m13_1266 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2705-2709"];
m13_1361 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="2887-2898"];
m13_1405 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3001-3001"];
m13_1512 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3252-3258"];
m13_1653 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3621-3621"];
m13_1680 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3660-3660"];
m13_1687 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3670-3670"];
m13_1694 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3681-3681"];
m13_1701 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3692-3692"];
m13_1708 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3704-3704"];
m13_1715 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3717-3717"];
m13_1722 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3730-3730"];
m13_1729 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3738-3738"];
m13_1743 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3764-3764"];
m13_1751 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3772-3772"];
m13_1762 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3787-3798"];
m13_1769 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3804-3815"];
m13_1775 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3821-3832"];
m13_1781 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="3838-3849"];
m13_1930 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="4250-4254"];
m13_2322 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5255-5255"];
m13_2328 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5261-5276"];
m13_2438 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5497-5497"];
m13_2655 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="5984-5984"];
m13_2989 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6854-6854"];
m13_3003 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6893-6893"];
m13_3023 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6922-6930"];
m13_3030 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="6936-6942"];
m13_3104 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7089-7089"];
m13_3110 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7095-7095"];
m13_3116 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7101-7101"];
m13_3126 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7115-7115"];
m13_3132 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7126-7126"];
m13_3410 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7764-7764"];
m13_3423 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7808-7820"];
m13_3593 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8275-8275"];
m13_3601 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8290-8290"];
m13_3610 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8304-8304"];
m13_3972 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9227-9227"];
m13_3979 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9233-9233"];
m13_3999 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="9318-9325"];
m13_50 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="233-236"];
m13_67 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="258-261"];
m13_113 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="360-360"];
m13_116 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="364-364"];
m13_119 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="368-368"];
m13_122 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="372-372"];
m13_125 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="376-376"];
m13_128 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="380-380"];
m13_154 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="432-432"];
m13_157 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="436-436"];
m13_176 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="471-471"];
m13_342 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="939-942"];
m13_965 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2162-2162"];
m13_1655 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3621-3621"];
m13_1682 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3660-3660"];
m13_1689 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3670-3670"];
m13_1696 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3681-3681"];
m13_1703 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3692-3692"];
m13_1710 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3704-3704"];
m13_1717 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3717-3717"];
m13_1724 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3730-3730"];
m13_1731 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3738-3738"];
m13_2324 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5255-5255"];
m13_2336 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5274-5274"];
m13_2338 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5261-5276"];
m13_2440 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5497-5497"];
m13_2991 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6854-6854"];
m13_3005 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6893-6893"];
m13_3024 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6924-6927"];
m13_3026 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6922-6930"];
m13_3031 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6938-6939"];
m13_3033 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="6936-6942"];
m13_3106 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7089-7089"];
m13_3112 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7095-7095"];
m13_3118 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7101-7101"];
m13_3128 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7115-7115"];
m13_3512 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8007-8007"];
m13_3514 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8007-8007"];
m13_3595 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8275-8275"];
m13_3603 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8290-8290"];
m13_3612 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8304-8304"];
m13_3981 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9233-9233"];
m13_1753 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3772-3772"];
m13_3253 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7362-7362"];
m13_151 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="419-419"];
m13_173 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="461-461"];
m13_957 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2154-2154"];
m13_1267 [cluster="lambda expression", file="JsonSerializerTest.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2707-2707"];
m13_1269 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2705-2709"];
m13_1364 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="2887-2898"];
m13_1406 [cluster="lambda expression", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="3001-3001"];
m13_3974 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9227-9227"];
m13_249 [cluster="lambda expression", file="JsonSerializerTest.cs", label="a.ErrorContext.Handled = true", span="742-742"];
m13_1513 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3254-3254"];
m13_1514 [cluster="lambda expression", file="JsonSerializerTest.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="3255-3255"];
m13_1516 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3252-3258"];
m13_1764 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3787-3798"];
m13_1771 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3804-3815"];
m13_1777 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3821-3832"];
m13_1783 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3838-3849"];
m13_1932 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4250-4254"];
m13_2330 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', 1)", span="5266-5266"];
m13_2331 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="5267-5267"];
m13_2335 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="5272-5272"];
m13_2333 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="5270-5270"];
m13_2334 [cluster="lambda expression", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="5271-5271"];
m13_820 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1828-1828"];
m13_823 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1831-1831"];
m13_3411 [cluster="lambda expression", file="JsonSerializerTest.cs", label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7764-7764"];
m13_3268 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7387-7387"];
m13_3283 [cluster="lambda expression", file="JsonSerializerTest.cs", label="errors.Add(e.ErrorContext.Error.Message)", span="7410-7410"];
m13_1407 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3001-3001"];
m13_1744 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.PopulateObject(json, new Person())", span="3764-3764"];
m13_1745 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="3764-3764"];
m13_2657 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="5984-5984"];
m13_2656 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5984-5984"];
m13_3134 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7126-7126"];
m13_3133 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(null)", span="7126-7126"];
m13_3412 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7764-7764"];
m13_3431 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7808-7820"];
m13_3424 [cluster="lambda expression", file="JsonSerializerTest.cs", label="string json = ''[{},1]''", span="7810-7810"];
m13_4000 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="9320-9324"];
m13_4001 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="9318-9325"];
m13_3254 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="7363-7363"];
m13_3252 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7360-7364"];
m13_248 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="742-742"];
m13_250 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="742-742"];
m13_3269 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="7388-7388"];
m13_3284 [cluster="lambda expression", file="JsonSerializerTest.cs", label="e.ErrorContext.Handled = true", span="7411-7411"];
m13_3734 [cluster="lambda expression", file="JsonSerializerTest.cs", label="new IdReferenceResolver()", span="8692-8692"];
m13_508 [cluster="lambda expression", file="JsonSerializerTest.cs", label=referenceResolver, span="1171-1171"];
m13_822 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1828-1828"];
m13_821 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="1828-1828"];
m13_825 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1831-1831"];
m13_824 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.Name", span="1831-1831"];
m13_3267 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7385-7389"];
m13_3282 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="7408-7412"];
m13_3430 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.Deserialize(reader, typeof(MyType))", span="7819-7819"];
m13_3425 [cluster="lambda expression", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="7812-7812"];
m13_3427 [cluster="lambda expression", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(json))", span="7815-7815"];
m13_3255 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7360-7364"];
m13_3270 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7385-7389"];
m13_3285 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="7408-7412"];
m13_3733 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="8692-8692"];
m13_3735 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="8692-8692"];
m13_507 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="1171-1171"];
m13_509 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="1171-1171"];
m13_3428 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="7816-7816"];
m13_3429 [cluster="lambda expression", file="JsonSerializerTest.cs", label="reader.Read()", span="7817-7817"];
m13_3426 [cluster="lambda expression", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="7813-7813"];
m13_1895 [cluster="lambda expression", file="JsonSerializerTest.cs", label="x.Id == id", span="4157-4157"];
m13_1896 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="4157-4157"];
m13_272 [cluster="object.GetType()", file="JsonSerializerTest.cs", label="Entry object.GetType()", span="0-0"];
m13_3476 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7933-7933"];
m13_3479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d)", span="7938-7938"];
m13_3480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7941-7941"];
m13_3481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="7944-7944"];
m13_3482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7947-7947"];
m13_3478 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="7936-7936"];
m13_3477 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="string json", span="7935-7935"];
m13_3483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7933-7933"];
m13_3841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8908-8908"];
m13_3845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="8916-8916"];
m13_3844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="8914-8914"];
m13_3846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="8918-8918"];
m13_3843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Uri uriWithPlus = new Uri(originalUri)", span="8912-8912"];
m13_3842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="string originalUri = ''https://test.com?m=a%2bb''", span="8910-8910"];
m13_3847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8908-8908"];
m13_3598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8288-8288"];
m13_3599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8290-8290"];
m13_3600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8288-8288"];
m13_1244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2668-2668"];
m13_1248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2680-2683"];
m13_1247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2678-2678"];
m13_1246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2672-2676"];
m13_1245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2670-2670"];
m13_1249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2668-2668"];
m13_1772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3819-3819"];
m13_1773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="3821-3832"];
m13_1774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3819-3819"];
m13_327 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m13_135 [cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="59-59"];
m13_243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="733-733"];
m13_245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="740-743"];
m13_246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, l.ChildId)", span="745-745"];
m13_244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="735-738"];
m13_247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="733-733"];
m13_251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="751-751"];
m13_252 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="753-753"];
m13_253 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, s.Count)", span="754-754"];
m13_254 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', s[0])", span="755-755"];
m13_255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', s[1])", span="756-756"];
m13_256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="751-751"];
m13_1849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3981-3981"];
m13_1855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="4044-4044"];
m13_1857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, searchResults.Count)", span="4056-4056"];
m13_1858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="4057-4057"];
m13_1859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="4058-4058"];
m13_1851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="JObject googleSearch = JObject.Parse(googleSearchText)", span="4035-4035"];
m13_1853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<SearchResult> searchResults = new List<SearchResult>()", span="4041-4041"];
m13_1854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label=results, span="4042-4042"];
m13_1856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="searchResults.Add(searchResult)", span="4045-4045"];
m13_1850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="3983-4033"];
m13_1852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="4038-4038"];
m13_1860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3981-3981"];
m13_2168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4894-4894"];
m13_2169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="4896-4898"];
m13_2170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, kvPairs.Count)", span="4900-4900"];
m13_2171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="4901-4901"];
m13_2172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="4902-4902"];
m13_2173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="4903-4903"];
m13_2174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="4904-4904"];
m13_2175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4894-4894"];
m13_3456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7867-7867"];
m13_3457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7869-7869"];
m13_3458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7870-7870"];
m13_3459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7867-7867"];
m13_1397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2995-2995"];
m13_1401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="3001-3001"];
m13_1400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="2999-2999"];
m13_1398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="2997-2997"];
m13_1399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="testClass.co = new Co()", span="2998-2998"];
m13_1402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2995-2995"];
m13_711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1545-1545"];
m13_717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1553-1553"];
m13_712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1548-1548"];
m13_718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var jsonSerializer = JsonSerializer.Create(settings)", span="1554-1554"];
m13_714 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="i < 800", span="1549-1549"];
m13_713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var i = 0", span="1549-1549"];
m13_715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1551-1551"];
m13_721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1558-1558"];
m13_719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var ms = new MemoryStream()", span="1555-1555"];
m13_725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1564-1564"];
m13_716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="i++", span="1549-1549"];
m13_720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var streamWriter = new StreamWriter(ms)", span="1557-1557"];
m13_722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="streamWriter.Flush()", span="1559-1559"];
m13_723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="1561-1561"];
m13_724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="var stopWatch = Stopwatch.StartNew()", span="1563-1563"];
m13_726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="stopWatch.Stop()", span="1565-1565"];
m13_727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1545-1545"];
m13_43 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m13_2017 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m13_3801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8833-8833"];
m13_3802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (short)Value;", span="8835-8835"];
m13_3803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8833-8833"];
m13_1963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4406-4406"];
m13_1966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs", label="C1 = c1", span="4408-4408"];
m13_1967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4406-4406"];
m13_3123 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7112-7112"];
m13_3124 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7114-7119"];
m13_3125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7112-7112"];
m13_654 [cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0"];
m13_1835 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3946-3946"];
m13_1836 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="3948-3948"];
m13_1840 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="3954-3957"];
m13_1837 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="3949-3949"];
m13_1838 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="3950-3950"];
m13_1839 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3952-3952"];
m13_1841 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3946-3946"];
m13_1826 [cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31"];
m13_572 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="59-59"];
m13_2122 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0"];
m13_367 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="985-985"];
m13_368 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="987-987"];
m13_370 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="990-990"];
m13_369 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, o.A)", span="988-988"];
m13_371 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, o.A)", span="991-991"];
m13_372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="985-985"];
m13_1147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2499-2499"];
m13_1150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2504-2504"];
m13_1148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2501-2501"];
m13_1149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''1'', json)", span="2502-2502"];
m13_1151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2505-2505"];
m13_1152 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2499-2499"];
m13_3085 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7057-7057"];
m13_3086 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="object v = JsonConvert.DeserializeObject<double?>('''')", span="7059-7059"];
m13_3088 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<char?>('''')", span="7062-7062"];
m13_3090 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<int?>('''')", span="7065-7065"];
m13_3092 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="7068-7068"];
m13_3094 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="7071-7071"];
m13_3096 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="7074-7074"];
m13_3098 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="7077-7077"];
m13_3087 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7060-7060"];
m13_3089 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7063-7063"];
m13_3091 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7066-7066"];
m13_3093 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7069-7069"];
m13_3095 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7072-7072"];
m13_3097 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7075-7075"];
m13_3099 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Assert.IsNull(v)", span="7078-7078"];
m13_3100 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7057-7057"];
m13_1801 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32"];
m13_3643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8405-8405"];
m13_3645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8415-8415"];
m13_3646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableBool)", span="8416-8416"];
m13_3647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableInteger)", span="8417-8417"];
m13_3648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTime)", span="8418-8418"];
m13_3649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8419-8419"];
m13_3650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Assert.IsNull(c2.MyNullableDecimal)", span="8420-8420"];
m13_3644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8407-8413"];
m13_3651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8405-8405"];
m13_3006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6898-6898"];
m13_3008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(widget)", span="6902-6902"];
m13_3009 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="6904-6904"];
m13_3007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="6900-6900"];
m13_3010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6898-6898"];
m13_1115 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2454-2454"];
m13_1120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s)", span="2461-2461"];
m13_1121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="2462-2462"];
m13_1116 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Stack<object> s = new Stack<object>()", span="2456-2456"];
m13_1119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(3)", span="2459-2459"];
m13_1117 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(1)", span="2457-2457"];
m13_1118 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(2)", span="2458-2458"];
m13_1122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2454-2454"];
m13_990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2203-2203"];
m13_998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2223-2223"];
m13_999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="2224-2224"];
m13_991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2205-2213"];
m13_997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string expected = sr.ReadToEnd()", span="2221-2221"];
m13_992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="2215-2215"];
m13_994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="s.WriteObject(ms, testDates)", span="2217-2217"];
m13_996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="StreamReader sr = new StreamReader(ms)", span="2219-2219"];
m13_993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2216-2216"];
m13_995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="2218-2218"];
m13_1000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2203-2203"];
m13_1341 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29"];
m13_1549 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3371-3371"];
m13_1550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3373-3373"];
m13_1551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3371-3371"];
m13_2891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6650-6650"];
m13_2904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Test'', newObject.Name)", span="6673-6673"];
m13_2903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="6671-6671"];
m13_2905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6674-6674"];
m13_2897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="6659-6659"];
m13_2898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(bsonWriter, test)", span="6661-6661"];
m13_2896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream bsonStream = new MemoryStream()", span="6658-6658"];
m13_2893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="6654-6654"];
m13_2902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="6668-6668"];
m13_2899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="bsonWriter.Flush()", span="6662-6662"];
m13_2892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6652-6652"];
m13_2901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="6667-6667"];
m13_2895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="byte[] objectBytes", span="6657-6657"];
m13_2900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="objectBytes = bsonStream.ToArray()", span="6664-6664"];
m13_2894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="6655-6655"];
m13_2906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6650-6650"];
m13_976 [cluster="Unk.ReadObject", file="JsonSerializerTest.cs", label="Entry Unk.ReadObject", span=""];
m13_1404 [cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27"];
m13_2255 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="5095-5095"];
m13_2006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4544-4544"];
m13_2007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4546-4546"];
m13_2008 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4544-4544"];
m13_911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2004-2004"];
m13_913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="2008-2008"];
m13_912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="2006-2006"];
m13_914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="2010-2010"];
m13_915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2004-2004"];
m13_24 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739"];
m13_1911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="4131-4131"];
m13_3240 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7355-7355"];
m13_3241 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="string json = ''{}''", span="7357-7357"];
m13_3242 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="7358-7358"];
m13_3244 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7366-7369"];
m13_3246 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, errors.Count)", span="7372-7372"];
m13_3243 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7360-7364"];
m13_3247 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7373-7373"];
m13_3248 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7374-7374"];
m13_3249 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7375-7375"];
m13_3250 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7376-7376"];
m13_3245 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="7371-7371"];
m13_3251 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7355-7355"];
m13_161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="456-456"];
m13_163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="460-462"];
m13_167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="470-472"];
m13_168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="474-474"];
m13_165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c2)", span="466-466"];
m13_166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="468-468"];
m13_169 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c3.Name)", span="476-476"];
m13_162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="458-458"];
m13_164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="464-464"];
m13_170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="456-456"];
m13_3758 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="121-121"];
m13_2929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6724-6724"];
m13_2934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6734-6737"];
m13_2936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6745-6753"];
m13_2937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1, c2.x)", span="6755-6755"];
m13_2938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="6756-6756"];
m13_2939 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="6757-6757"];
m13_2935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6739-6743"];
m13_2930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="6726-6726"];
m13_2931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6728-6731"];
m13_2933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass.z = 3", span="6733-6733"];
m13_2932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="StaticTestClass.y = 2", span="6732-6732"];
m13_2940 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6724-6724"];
m13_3994 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="9264-9264"];
m13_3077 [cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28"];
m13_3189 [cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30"];
m13_3833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="8879-8879"];
m13_1298 [cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="800-800"];
m13_1422 [cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29"];
m13_768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1663-1663"];
m13_1216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2614-2614"];
m13_1219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2619-2622"];
m13_1221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2625-2628"];
m13_1220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2623-2623"];
m13_1222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2630-2630"];
m13_1223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2631-2631"];
m13_1218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2617-2617"];
m13_1217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2616-2616"];
m13_1224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2614-2614"];
m13_3626 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8351-8351"];
m13_3628 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8359-8359"];
m13_3632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8364-8364"];
m13_3629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, floats[0])", span="8360-8360"];
m13_3630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8361-8361"];
m13_3631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8362-8362"];
m13_3633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NaN, doubles[0])", span="8365-8365"];
m13_3634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8366-8366"];
m13_3635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8367-8367"];
m13_3627 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8353-8357"];
m13_3636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8351-8351"];
m13_2032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4582-4582"];
m13_2033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.Remove(key);", span="4584-4584"];
m13_2034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4582-4582"];
m13_2639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5954-5954"];
m13_2642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5960-5962"];
m13_2641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5958-5958"];
m13_2640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="ComplexItem i = new ComplexItem()", span="5956-5956"];
m13_2643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5954-5954"];
m13_365 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151"];
m13_1697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3688-3688"];
m13_1699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3692-3694"];
m13_1698 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3690-3690"];
m13_1700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3688-3688"];
m13_3155 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7175-7175"];
m13_3161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="7190-7192"];
m13_3156 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7177-7183"];
m13_3157 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7185-7185"];
m13_3158 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7186-7186"];
m13_3159 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7187-7187"];
m13_3160 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7188-7188"];
m13_3162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeField)", span="7194-7194"];
m13_3163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="7195-7195"];
m13_3164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7196-7196"];
m13_3165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7197-7197"];
m13_3166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7175-7175"];
m13_735 [cluster="System.IO.StreamWriter.Flush()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.Flush()", span="0-0"];
m13_257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="762-762"];
m13_259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="765-765"];
m13_266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="776-776"];
m13_264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="773-773"];
m13_265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="774-774"];
m13_262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="IList<object> l = new List<object>()", span="770-770"];
m13_258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="764-764"];
m13_260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="767-767"];
m13_263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="serializer.Populate(reader, l)", span="771-771"];
m13_261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="768-768"];
m13_267 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="762-762"];
m13_924 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m13_1984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4443-4443"];
m13_3969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9225-9225"];
m13_3970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="9227-9227"];
m13_3971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9225-9225"];
m13_61 [cluster="Unk.IsNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNull", span=""];
m13_3052 [cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29"];
m13_1196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2581-2581"];
m13_1201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2589-2589"];
m13_1199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1)", span="2586-2586"];
m13_1202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2591-2591"];
m13_1203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2592-2592"];
m13_1200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2587-2587"];
m13_1198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2584-2584"];
m13_1197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2583-2583"];
m13_1204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2581-2581"];
m13_3825 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8873-8873"];
m13_3826 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8875-8875"];
m13_3827 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8873-8873"];
m13_2010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4549-4549"];
m13_2011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="return _innerDictionary.ContainsKey(key);", span="4551-4551"];
m13_2012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4549-4549"];
m13_438 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m13_581 [cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37"];
m13_2997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="6858-6858"];
m13_3203 [cluster="System.Enum.Parse(System.Type, string)", file="JsonSerializerTest.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m13_436 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38"];
m13_2998 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1607-1607"];
m13_1676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3656-3656"];
m13_1678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3660-3662"];
m13_1677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3658-3658"];
m13_1679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3656-3656"];
m13_3256 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7380-7380"];
m13_3260 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7391-7394"];
m13_3262 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="7397-7397"];
m13_3258 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="7383-7383"];
m13_3257 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7382-7382"];
m13_3259 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7385-7389"];
m13_3261 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="7396-7396"];
m13_3263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7398-7398"];
m13_3264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7399-7399"];
m13_3265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7400-7400"];
m13_3266 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7380-7380"];
m13_274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="791-791"];
m13_276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="795-795"];
m13_275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="793-793"];
m13_277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="796-796"];
m13_278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="791-791"];
m13_2437 [cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0"];
m13_1002 [cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m13_601 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0"];
m13_3353 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7608-7608"];
m13_3356 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7613-7613"];
m13_3357 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, objDeserialized.Age)", span="7614-7614"];
m13_3354 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7610-7610"];
m13_3355 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7611-7611"];
m13_3358 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7608-7608"];
m13_1875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4094-4094"];
m13_1876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="4096-4099"];
m13_1877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="4100-4103"];
m13_1878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4094-4094"];
m13_1664 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36"];
m13_2629 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5929-5929"];
m13_2633 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5946-5946"];
m13_2634 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5948-5948"];
m13_2635 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5949-5949"];
m13_2636 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5950-5950"];
m13_2630 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="5931-5934"];
m13_2632 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5938-5944"];
m13_2631 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5936-5936"];
m13_2637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5929-5929"];
m13_3013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6908-6908"];
m13_3015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="6912-6912"];
m13_3016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="6914-6914"];
m13_3017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6915-6915"];
m13_3018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6916-6916"];
m13_3014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="6910-6910"];
m13_3019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6908-6908"];
m13_2984 [cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27"];
m13_2876 [cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m13_1207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2596-2596"];
m13_1212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2607-2607"];
m13_1210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2601-2604"];
m13_1213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2609-2609"];
m13_1214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2610-2610"];
m13_1211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2605-2605"];
m13_1209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2599-2599"];
m13_1208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2598-2598"];
m13_1215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2596-2596"];
m13_3078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7045-7045"];
m13_3079 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7047-7047"];
m13_3083 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="7053-7053"];
m13_3080 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7048-7048"];
m13_3082 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="7051-7051"];
m13_3081 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="7050-7050"];
m13_3084 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7045-7045"];
m13_2378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5346-5346"];
m13_817 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m13_769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1820-1820"];
m13_806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="1830-1830"];
m13_808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="1837-1837"];
m13_804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="1827-1827"];
m13_805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="1828-1828"];
m13_807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="1831-1831"];
m13_809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label=dataContractJson, span="1838-1838"];
m13_803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="var data = ms.ToArray()", span="1826-1826"];
m13_810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="1840-1840"];
m13_811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="return jsonNetJson.ToString();", span="1843-1843"];
m13_800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="1822-1822"];
m13_801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="1823-1823"];
m13_802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="s.WriteObject(ms, o)", span="1824-1824"];
m13_812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1820-1820"];
m13_3905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9057-9057"];
m13_3908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9061-9065"];
m13_3909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9067-9070"];
m13_3912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9078-9078"];
m13_3911 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9076-9076"];
m13_3910 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9072-9074"];
m13_3907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9060-9060"];
m13_3906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9059-9059"];
m13_3913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9057-9057"];
m13_3271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7404-7404"];
m13_3274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7414-7418"];
m13_3276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, errors.Count)", span="7425-7425"];
m13_3277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7426-7426"];
m13_3278 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7427-7427"];
m13_3279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7428-7428"];
m13_3272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="IList<string> errors = new List<string>()", span="7406-7406"];
m13_3275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7420-7423"];
m13_3273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7408-7412"];
m13_3280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7404-7404"];
m13_1059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2339-2339"];
m13_1061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2342-2342"];
m13_1062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2343-2343"];
m13_1063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2345-2345"];
m13_1064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2346-2346"];
m13_1065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2347-2347"];
m13_1066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2348-2348"];
m13_1067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2349-2349"];
m13_1060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2341-2341"];
m13_1068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2339-2339"];
m13_2423 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="708-708"];
m13_207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="593-593"];
m13_208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="this.Sections = new HashSet<FaqSection>()", span="595-595"];
m13_209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="593-593"];
m13_1270 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m13_740 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonSerializerTest.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m13_3522 [cluster="System.Tuple.Create<T1>(T1)", file="JsonSerializerTest.cs", label="Entry System.Tuple.Create<T1>(T1)", span="0-0"];
m13_2120 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0"];
m13_279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="785-785"];
m13_79 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390"];
m13_2082 [cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0"];
m13_1015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2259-2259"];
m13_1021 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2269-2269"];
m13_1019 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values)", span="2265-2265"];
m13_1022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(values, newValues)", span="2271-2271"];
m13_1020 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2267-2267"];
m13_1016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2261-2261"];
m13_1018 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(int.MinValue, int.MaxValue)", span="2263-2263"];
m13_1017 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(-5, 6)", span="2262-2262"];
m13_1023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2259-2259"];
m13_2408 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m13_3388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7696-7696"];
m13_68 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="277-277"];
m13_69 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", color=green, community=3, file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new Binding_DisallowNull());\r\n            }, ''Cannot write a null value for property 'RequiredProperty'. Property requires a non-null value. Path ''.'')", prediction=53, span="279-282"];
m13_70 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="277-277"];
m13_3736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8708-8708"];
m13_3738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="8713-8717"];
m13_3740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="8724-8724"];
m13_3742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="8727-8727"];
m13_3748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="8742-8742"];
m13_3754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="8757-8757"];
m13_3743 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var dict2 = new Dictionary<IMyInterface, string>()", span="8733-8733"];
m13_3749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var dict3 = new Dictionary<string, IMyInterface>()", span="8748-8748"];
m13_3739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="8723-8723"];
m13_3745 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="8736-8736"];
m13_3751 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="8751-8751"];
m13_3741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="8726-8726"];
m13_3747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="8741-8741"];
m13_3753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="8756-8756"];
m13_3746 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="8737-8739"];
m13_3752 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="8752-8754"];
m13_3737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="var consoleWriter = new ConsoleWriter()", span="8710-8710"];
m13_3744 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="dict2.Add(consoleWriter, ''Console'')", span="8734-8734"];
m13_3750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="dict3.Add(''Console'', consoleWriter)", span="8749-8749"];
m13_3755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8708-8708"];
m13_1861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4062-4062"];
m13_1871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="4085-4085"];
m13_1872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="4086-4086"];
m13_1864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4067-4067"];
m13_1867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4070-4070"];
m13_1870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="4074-4083"];
m13_1869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="4073-4073"];
m13_1863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="4065-4065"];
m13_1865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Department = ''McDees''", span="4068-4068"];
m13_1866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.HourlyWage = 12.50m", span="4069-4069"];
m13_1868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="wagePerson.Name = ''Jim Bob''", span="4071-4071"];
m13_1862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="4064-4064"];
m13_1873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4062-4062"];
m13_1436 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29"];
m13_1263 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2703-2703"];
m13_1264 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2705-2709"];
m13_1265 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2703-2703"];
m13_1926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4246-4246"];
m13_1928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4250-4254"];
m13_1927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4248-4248"];
m13_1929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4246-4246"];
m13_931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2113-2113"];
m13_934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Children().Count())", span="2127-2127"];
m13_937 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="2131-2131"];
m13_933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="2126-2126"];
m13_935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="2129-2129"];
m13_936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="2130-2130"];
m13_932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="2115-2124"];
m13_938 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2113-2113"];
m13_3534 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717"];
m13_318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="905-905"];
m13_321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="915-915"];
m13_320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="914-914"];
m13_322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="917-917"];
m13_323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="918-918"];
m13_324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="919-919"];
m13_319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="907-912"];
m13_325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="905-905"];
m13_2035 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m13_2613 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9447-9447"];
m13_4057 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Value = val", span="9449-9449"];
m13_4058 [cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9447-9447"];
m13_3484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7953-7953"];
m13_3486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7959-7959"];
m13_3488 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7964-7964"];
m13_3485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7955-7957"];
m13_3487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="BigInteger nineQuindecillion = l[0]", span="7961-7961"];
m13_3489 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7953-7953"];
m13_1479 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3182-3182"];
m13_1482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3187-3190"];
m13_1484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3194-3197"];
m13_1485 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3199-3202"];
m13_1483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3192-3192"];
m13_1486 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3203-3203"];
m13_1480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="3184-3184"];
m13_1481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="3185-3185"];
m13_1487 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3182-3182"];
m13_2086 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0"];
m13_3135 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7134-7134"];
m13_3138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="7140-7140"];
m13_3137 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="7139-7139"];
m13_3136 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="7136-7137"];
m13_3139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7134-7134"];
m13_3281 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28"];
m13_373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="995-995"];
m13_377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(customBinder, serializer.Binder)", span="1001-1001"];
m13_379 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="1004-1004"];
m13_381 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="1007-1007"];
m13_383 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="1011-1011"];
m13_386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="1016-1016"];
m13_388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, serializer.Converters.Count)", span="1019-1019"];
m13_390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="1022-1022"];
m13_392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="1025-1025"];
m13_394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="1028-1028"];
m13_396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="1031-1031"];
m13_398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="1034-1034"];
m13_400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="1037-1037"];
m13_402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="1040-1040"];
m13_404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="1043-1043"];
m13_406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="1046-1046"];
m13_408 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="1049-1049"];
m13_410 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(9001, serializer.MaxDepth)", span="1052-1052"];
m13_412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="1055-1055"];
m13_414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="1058-1058"];
m13_416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="1061-1061"];
m13_418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="1064-1064"];
m13_420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="1067-1067"];
m13_423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="1071-1071"];
m13_425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="1074-1074"];
m13_428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="1078-1078"];
m13_430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="1082-1082"];
m13_432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="1086-1086"];
m13_389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Culture = new CultureInfo(''en-nz'')", span="1021-1021"];
m13_374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="997-997"];
m13_375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="999-999"];
m13_376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Binder = customBinder", span="1000-1000"];
m13_378 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.CheckAdditionalContent = true", span="1003-1003"];
m13_380 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1006-1006"];
m13_382 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="1010-1010"];
m13_384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1014-1014"];
m13_385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ContractResolver = resolver", span="1015-1015"];
m13_387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new StringEnumConverter())", span="1018-1018"];
m13_391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.EqualityComparer = EqualityComparer<object>.Default", span="1024-1024"];
m13_393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1027-1027"];
m13_395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateFormatString = ''yyyy''", span="1030-1030"];
m13_397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="1033-1033"];
m13_399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1036-1036"];
m13_401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1039-1039"];
m13_403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="1042-1042"];
m13_405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="1045-1045"];
m13_407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.Formatting = Formatting.Indented", span="1048-1048"];
m13_409 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.MaxDepth = 9001", span="1051-1051"];
m13_411 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="1054-1054"];
m13_413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.NullValueHandling = NullValueHandling.Ignore", span="1057-1057"];
m13_415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1060-1060"];
m13_417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1063-1063"];
m13_419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1066-1066"];
m13_421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1069-1069"];
m13_422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.ReferenceResolver = referenceResolver", span="1070-1070"];
m13_424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1073-1073"];
m13_426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1076-1076"];
m13_427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TraceWriter = traceWriter", span="1077-1077"];
m13_429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1081-1081"];
m13_431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="1085-1085"];
m13_433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="995-995"];
m13_2597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5878-5878"];
m13_2600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="5888-5888"];
m13_2601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="5890-5890"];
m13_2599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="5886-5886"];
m13_2602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="5891-5891"];
m13_2598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="5880-5884"];
m13_2603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5878-5878"];
m13_2644 [cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="9550-9550"];
m13_600 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m13_2570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5795-5795"];
m13_2571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_name = info.GetString(''Name'')", span="5797-5797"];
m13_2572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5795-5795"];
m13_1842 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3961-3961"];
m13_1844 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="3971-3971"];
m13_1843 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="3965-3969"];
m13_1845 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.Fail()", span="3972-3972"];
m13_1846 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label=JsonSerializationException, span="3974-3974"];
m13_1847 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'''))", span="3976-3976"];
m13_1848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3961-3961"];
m13_3550 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8169-8169"];
m13_3552 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="8177-8180"];
m13_3551 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8171-8175"];
m13_3553 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8182-8185"];
m13_3554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8169-8169"];
m13_2618 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5912-5912"];
m13_2619 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5914-5914"];
m13_2620 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5915-5915"];
m13_2621 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value!'', c.Value)", span="5916-5916"];
m13_2622 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5912-5912"];
m13_3795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8823-8823"];
m13_3796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8825-8825"];
m13_3797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8823-8823"];
m13_3976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9231-9231"];
m13_3977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="9233-9233"];
m13_3978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9231-9231"];
m13_966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2167-2167"];
m13_970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2174-2174"];
m13_972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2177-2177"];
m13_971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2176-2176"];
m13_967 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="2169-2169"];
m13_969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2172-2172"];
m13_968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2171-2171"];
m13_973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2167-2167"];
m13_1054 [cluster="object.Object()", file="JsonSerializerTest.cs", label="Entry object.Object()", span="0-0"];
m13_3768 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8777-8777"];
m13_3769 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="return TypeCode.Object;", span="8779-8779"];
m13_3770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8777-8777"];
m13_2088 [cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0"];
m13_2721 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6229-6229"];
m13_2722 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="6231-6235"];
m13_2724 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="6239-6242"];
m13_2723 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6237-6237"];
m13_2725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6229-6229"];
m13_2916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6687-6687"];
m13_2921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6697-6700"];
m13_2923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6708-6716"];
m13_2924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-1, c2.x)", span="6718-6718"];
m13_2925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-2, StaticTestClass.y)", span="6719-6719"];
m13_2926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Assert.AreEqual(-3, StaticTestClass.z)", span="6720-6720"];
m13_2922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6702-6706"];
m13_2917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6689-6689"];
m13_2918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6691-6694"];
m13_2920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass.z = 3", span="6696-6696"];
m13_2919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="StaticTestClass.y = 2", span="6695-6695"];
m13_2927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6687-6687"];
m13_268 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m13_36 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="220-220"];
m13_38 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Bars = new List<string>()", span="222-222"];
m13_39 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="bars != null", span="223-223"];
m13_40 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Bars.AddRange(bars)", span="225-225"];
m13_41 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="220-220"];
m13_753 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1615-1615"];
m13_755 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="1624-1624"];
m13_756 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1625-1625"];
m13_754 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1617-1622"];
m13_757 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1615-1615"];
m13_862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1925-1925"];
m13_866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="1931-1931"];
m13_874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="1945-1945"];
m13_864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="1928-1928"];
m13_865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="testDictionary[''date''] = dateValue", span="1929-1929"];
m13_867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="1934-1934"];
m13_872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="1942-1942"];
m13_863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime dateValue = new DateTime(2010, 3, 30)", span="1927-1927"];
m13_873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="1943-1943"];
m13_869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, testDictionary)", span="1936-1936"];
m13_868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="1935-1935"];
m13_870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="byte[] data = ms.ToArray()", span="1938-1938"];
m13_871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="1939-1939"];
m13_875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1925-1925"];
m13_2021 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m13_891 [cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="311-311"];
m13_890 [cluster="Unk.AreNotSame", file="JsonSerializerTest.cs", label="Entry Unk.AreNotSame", span=""];
m13_2040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4592-4592"];
m13_2041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4594-4594"];
m13_2042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4592-4592"];
m13_80 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570"];
m13_3944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9160-9160"];
m13_3946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var serializerSettings = new JsonSerializerSettings()", span="9164-9164"];
m13_3947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="9165-9165"];
m13_3949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="9169-9169"];
m13_3950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="9170-9170"];
m13_3948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="9167-9167"];
m13_3945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="9162-9162"];
m13_3951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9160-9160"];
m13_1567 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3416-3416"];
m13_1569 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3437-3438"];
m13_1570 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3440-3440"];
m13_1571 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="3441-3441"];
m13_1572 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3442-3442"];
m13_1573 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3443-3443"];
m13_1574 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="3444-3444"];
m13_1575 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3445-3445"];
m13_1576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3446-3446"];
m13_1577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3447-3447"];
m13_1578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3448-3448"];
m13_1568 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3418-3435"];
m13_1579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c.Random)", span="3449-3449"];
m13_1580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3416-3416"];
m13_615 [cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0"];
m13_2112 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0"];
m13_1283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2732-2732"];
m13_1286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="2743-2743"];
m13_1287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2744-2744"];
m13_1284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2734-2739"];
m13_1285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="string json", span="2741-2741"];
m13_1288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2732-2732"];
m13_989 [cluster="Unk.>", file="JsonSerializerTest.cs", label="Entry Unk.>", span=""];
m13_790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1794-1794"];
m13_797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1811-1817"];
m13_796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1809-1809"];
m13_791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1796-1802"];
m13_795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1807-1807"];
m13_792 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1804-1804"];
m13_793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1805-1805"];
m13_794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1806-1806"];
m13_798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1794-1794"];
m13_2014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4554-4554"];
m13_2015 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4556-4556"];
m13_2016 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4554-4554"];
m13_4020 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1695-1695"];
m13_1499 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m13_3389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7712-7712"];
m13_3392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7729-7732"];
m13_3395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7743-7746"];
m13_3391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7728-7728"];
m13_3393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7734-7740"];
m13_3394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="7742-7742"];
m13_3390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7714-7720"];
m13_3396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7712-7712"];
m13_4045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9405-9405"];
m13_4046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var encodingName = serializer.Deserialize<string>(reader)", span="9407-9407"];
m13_4049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return Encoding.GetEncoding(encodingName);", span="9411-9411"];
m13_4048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return null;", span="9409-9409"];
m13_4047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="encodingName == null", span="9408-9408"];
m13_4050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9405-9405"];
m13_780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1764-1764"];
m13_787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1781-1790"];
m13_786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1779-1779"];
m13_781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1766-1772"];
m13_785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1777-1777"];
m13_782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1774-1774"];
m13_783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1775-1775"];
m13_784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1776-1776"];
m13_788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1764-1764"];
m13_2462 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5558-5558"];
m13_2463 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5560-5560"];
m13_2464 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5561-5561"];
m13_2465 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5558-5558"];
m13_2668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6032-6032"];
m13_2670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="6045-6045"];
m13_2671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, commentTestClass.Indexed)", span="6047-6047"];
m13_2672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="6048-6048"];
m13_2673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="6049-6049"];
m13_2669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="6034-6043"];
m13_2674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6032-6032"];
m13_2873 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1649-1649"];
m13_1644 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3607-3607"];
m13_1646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3611-3611"];
m13_1647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, c.DateTimeField)", span="3612-3612"];
m13_1645 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="string json = @''{''''DateTimeField'''':''''''''}''", span="3609-3609"];
m13_1648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3607-3607"];
m13_666 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="404-404"];
m13_437 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m13_3107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7093-7093"];
m13_3108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="7095-7095"];
m13_3109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7093-7093"];
m13_100 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m13_1003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2228-2228"];
m13_1005 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="2238-2238"];
m13_1006 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2239-2239"];
m13_1004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2230-2236"];
m13_1007 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2228-2228"];
m13_3365 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7638-7638"];
m13_3374 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7643-7646"];
m13_3372 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var jsonReader = new JsonTextReader(new StringReader(json))", span="7641-7641"];
m13_3373 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="var serializer = new JsonSerializer()", span="7642-7642"];
m13_3375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7648-7648"];
m13_3376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7638-7638"];
m13_25 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m13_3059 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7005-7005"];
m13_3062 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7015-7015"];
m13_3066 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7027-7027"];
m13_3060 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="7007-7011"];
m13_3064 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="7019-7023"];
m13_3061 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="7013-7013"];
m13_3063 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, e.NullableEnum)", span="7017-7017"];
m13_3065 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="7025-7025"];
m13_3067 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="7029-7029"];
m13_3068 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7005-7005"];
m13_1010 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2243-2243"];
m13_1012 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2253-2253"];
m13_1013 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2254-2254"];
m13_1011 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2245-2251"];
m13_1014 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2243-2243"];
m13_3760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8762-8762"];
m13_3765 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="8769-8769"];
m13_3763 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(product)", span="8766-8766"];
m13_3764 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="8768-8768"];
m13_3762 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="8765-8765"];
m13_3761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="ParticipantEntity product = new ParticipantEntity()", span="8764-8764"];
m13_3766 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8762-8762"];
m13_2911 [cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs", label="Entry Unk.AreEquivalent", span=""];
m13_2218 [cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0"];
m13_695 [cluster="Unk.IsNotNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNotNull", span=""];
m13_1125 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2466-2466"];
m13_1127 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2470-2470"];
m13_1128 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2471-2471"];
m13_1129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2473-2473"];
m13_1126 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="var obj = new { Formatting = ''test'' }", span="2468-2468"];
m13_1130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Assert.AreNotEqual(indented, none)", span="2474-2474"];
m13_1131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2466-2466"];
m13_3668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8455-8455"];
m13_3669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8457-8464"];
m13_3670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8466-8473"];
m13_3671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8455-8455"];
m13_3237 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m13_222 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m13_3027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6934-6934"];
m13_3028 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="6936-6942"];
m13_3029 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6934-6934"];
m13_951 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27"];
m13_2652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5982-5982"];
m13_2653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="5984-5984"];
m13_2654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5982-5982"];
m13_2044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4599-4599"];
m13_2049 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4608-4608"];
m13_2047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4604-4604"];
m13_2048 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4606-4606"];
m13_2050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4609-4609"];
m13_2051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4610-4610"];
m13_2045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4601-4601"];
m13_2046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="modelStateDictionary.Add(''key'', ''value'')", span="4602-4602"];
m13_2052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4599-4599"];
m13_3952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9175-9175"];
m13_3953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="DerivedProperty = derivedProperty", span="9178-9178"];
m13_3954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9175-9175"];
m13_2217 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="473-473"];
m13_3239 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849"];
m13_2699 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6144-6144"];
m13_2705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="6159-6159"];
m13_2704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="6157-6157"];
m13_2702 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="6154-6154"];
m13_2703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, cc)", span="6155-6155"];
m13_2701 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="6152-6152"];
m13_2700 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6146-6150"];
m13_2706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6144-6144"];
m13_1161 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2508-2508"];
m13_2708 [cluster="System.Convert.ToInt32(long)", file="JsonSerializerTest.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m13_2709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6186-6186"];
m13_2711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6194-6194"];
m13_2712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6195-6195"];
m13_2710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6188-6192"];
m13_2713 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6186-6186"];
m13_3995 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9276-9276"];
m13_3997 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 14.'')", span="9318-9326"];
m13_3996 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="9278-9316"];
m13_3998 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9276-9276"];
m13_3867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8961-8961"];
m13_3871 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8967-8971"];
m13_3872 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="8973-8973"];
m13_3875 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="8979-8979"];
m13_3880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8990-8990"];
m13_3873 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="8975-8975"];
m13_3878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8988-8988"];
m13_3879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8989-8989"];
m13_3883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="8999-8999"];
m13_3884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9000-9000"];
m13_3885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="9001-9001"];
m13_3874 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8977-8977"];
m13_3868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="8963-8963"];
m13_3870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8966-8966"];
m13_3869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="8965-8965"];
m13_3876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8981-8985"];
m13_3877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8986-8986"];
m13_3881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8992-8996"];
m13_3882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="8997-8997"];
m13_3886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8961-8961"];
m13_1160 [cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0"];
m13_644 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301"];
m13_1784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3853-3853"];
m13_1789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(strings)", span="3861-3861"];
m13_1790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="3862-3862"];
m13_1785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="List<String> strings = new List<String>()", span="3855-3855"];
m13_1788 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_3'')", span="3859-3859"];
m13_1786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_1'')", span="3857-3857"];
m13_1787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="strings.Add(''str_2'')", span="3858-3858"];
m13_1791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3853-3853"];
m13_1793 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3866-3866"];
m13_1797 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="3875-3875"];
m13_1798 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', c2.A)", span="3876-3876"];
m13_1799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, c2.B)", span="3877-3877"];
m13_1796 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="3870-3873"];
m13_1795 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="3869-3869"];
m13_1794 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="3868-3868"];
m13_1800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3866-3866"];
m13_3070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7033-7033"];
m13_3073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="7039-7039"];
m13_3071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="7035-7035"];
m13_3072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="7037-7037"];
m13_3074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="7041-7041"];
m13_3075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7033-7033"];
m13_3286 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7432-7432"];
m13_3288 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7445-7445"];
m13_3290 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="7448-7448"];
m13_3291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Data[0])", span="7449-7449"];
m13_3292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Data[1])", span="7450-7450"];
m13_3287 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7434-7443"];
m13_3289 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c2)", span="7447-7447"];
m13_3293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7432-7432"];
m13_8 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="153-153"];
m13_12 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 123,\r\n  ''''Name'''': ''''ABC'''',\r\n  ''''P1'''': true,\r\n  ''''P2'''': 44\r\n}'', strJsonSubclass)", span="161-166"];
m13_14 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 567,\r\n  ''''Name'''': ''''XYZ'''',\r\n  ''''Subclass'''': {\r\n    ''''ID'''': 123,\r\n    ''''Name'''': ''''ABC'''',\r\n    ''''P1'''': true,\r\n    ''''P2'''': 44\r\n  }\r\n}'', strJsonMainClass)", span="171-180"];
m13_11 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var strJsonSubclass = JsonConvert.SerializeObject(mySubclass, Formatting.Indented)", span="159-159"];
m13_13 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var strJsonMainClass = JsonConvert.SerializeObject(myMainClass, Formatting.Indented)", span="169-169"];
m13_9 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var mySubclass = MyFactory.InstantiateSubclass()", span="155-155"];
m13_10 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="var myMainClass = MyFactory.InstantiateManiClass()", span="156-156"];
m13_15 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="153-153"];
m13_269 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m13_234 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="625-625"];
m13_7 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", span="122-122"];
m13_3140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7145-7145"];
m13_3141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7147-7153"];
m13_3146 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7160-7166"];
m13_3142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7155-7155"];
m13_3143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7156-7156"];
m13_3144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c.PreField)", span="7157-7157"];
m13_3145 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c.PostField)", span="7158-7158"];
m13_3147 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="7168-7168"];
m13_3148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="7169-7169"];
m13_3149 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Pre'', c2.PreField)", span="7170-7170"];
m13_3150 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Post'', c2.PostField)", span="7171-7171"];
m13_3151 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7145-7145"];
m13_2460 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m13_1162 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2528-2528"];
m13_1165 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2534-2534"];
m13_1163 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2530-2530"];
m13_1164 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2532-2532"];
m13_1166 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2536-2536"];
m13_1167 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="2537-2537"];
m13_1168 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2528-2528"];
m13_2781 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6382-6382"];
m13_2783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6391-6394"];
m13_2785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6402-6405"];
m13_2782 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6384-6389"];
m13_2784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6396-6400"];
m13_2786 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6382-6382"];
m13_193 [cluster="System.Version.Version(int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m13_26 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="201-201"];
m13_30 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="208-208"];
m13_28 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(foo1)", span="204-204"];
m13_31 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="209-209"];
m13_32 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="210-210"];
m13_33 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[1], foo2.Bars[1])", span="211-211"];
m13_34 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Assert.AreEqual(foo1.Bars[2], foo2.Bars[2])", span="212-212"];
m13_29 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="206-206"];
m13_27 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="203-203"];
m13_35 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="201-201"];
m13_1739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3760-3760"];
m13_1741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'')", span="3764-3764"];
m13_1740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="string json = @''[]''", span="3762-3762"];
m13_1742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3760-3760"];
m13_197 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="576-576"];
m13_202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="585-585"];
m13_200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="581-581"];
m13_201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="583-583"];
m13_203 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="587-587"];
m13_198 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="578-578"];
m13_199 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="c.UpdatedBy_Id = Guid.NewGuid()", span="579-579"];
m13_204 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="576-576"];
m13_2114 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0"];
m13_3318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7523-7523"];
m13_3322 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7538-7538"];
m13_3323 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7540-7540"];
m13_3324 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7541-7541"];
m13_3325 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7542-7542"];
m13_3319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7525-7529"];
m13_3321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7533-7536"];
m13_3320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7531-7531"];
m13_3326 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7523-7523"];
m13_1637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3594-3594"];
m13_1639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3598-3598"];
m13_1640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="3600-3600"];
m13_1641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value1'', values[''key1''])", span="3601-3601"];
m13_1642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', values[''key2''])", span="3602-3602"];
m13_1638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3596-3596"];
m13_1643 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3594-3594"];
m13_1897 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4169-4169"];
m13_1898 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="4171-4171"];
m13_1899 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4169-4169"];
m13_2871 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m13_3848 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8922-8922"];
m13_3851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8926-8929"];
m13_3852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="8931-8931"];
m13_3855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="8937-8937"];
m13_3860 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8947-8947"];
m13_3853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8933-8933"];
m13_3858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8945-8945"];
m13_3859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8946-8946"];
m13_3863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.String, v.Type)", span="8955-8955"];
m13_3864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8956-8956"];
m13_3865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''abc'', v.Value)", span="8957-8957"];
m13_3854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8935-8935"];
m13_3850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8925-8925"];
m13_3849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="8924-8924"];
m13_3856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8939-8942"];
m13_3857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8943-8943"];
m13_3861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8949-8952"];
m13_3862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="v = (JValue)JToken.ReadFrom(reader)", span="8953-8953"];
m13_3866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8922-8922"];
m13_2524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5685-5685"];
m13_2526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5688-5688"];
m13_2527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, a[0])", span="5689-5689"];
m13_2525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="string json = ''[123456789876543.21]''", span="5687-5687"];
m13_2528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5685-5685"];
m13_1665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3637-3637"];
m13_1667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3641-3641"];
m13_1666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3639-3639"];
m13_1668 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3637-3637"];
m13_1874 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31"];
m13_1187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2568-2568"];
m13_1190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2573-2573"];
m13_1192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2577-2577"];
m13_1189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2572-2572"];
m13_1191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2575-2575"];
m13_1188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2570-2570"];
m13_1193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2568-2568"];
m13_3515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8042-8042"];
m13_3517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8045-8048"];
m13_3519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8051-8054"];
m13_3518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8049-8049"];
m13_3520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(500, obj.Item1)", span="8055-8055"];
m13_3516 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="var tuple = Tuple.Create(500)", span="8044-8044"];
m13_3521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8042-8042"];
m13_2121 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0"];
m13_1299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2761-2761"];
m13_1303 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2778-2778"];
m13_1301 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="2774-2774"];
m13_1302 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2776-2776"];
m13_1304 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2780-2780"];
m13_1305 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2781-2781"];
m13_1306 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2782-2782"];
m13_1307 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2783-2783"];
m13_1308 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2784-2784"];
m13_1309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2785-2785"];
m13_1310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2786-2786"];
m13_1300 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2763-2772"];
m13_1311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2761-2761"];
m13_1169 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m13_1778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3836-3836"];
m13_1779 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="3838-3849"];
m13_1780 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3836-3836"];
m13_2800 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6438-6438"];
m13_2804 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6449-6449"];
m13_2805 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6450-6450"];
m13_2803 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6443-6447"];
m13_2802 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6442-6442"];
m13_2801 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6440-6440"];
m13_2806 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6438-6438"];
m13_3579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8244-8244"];
m13_3582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="8249-8253"];
m13_3584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8256-8256"];
m13_3586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8260-8262"];
m13_3581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8247-8247"];
m13_3583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8254-8254"];
m13_3585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="string json = sw.ToString()", span="8258-8258"];
m13_3580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="8246-8246"];
m13_3587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8244-8244"];
m13_81 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="302-302"];
m13_82 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", color=green, community=3, file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new DictionaryWithNoNull());\r\n            }, ''Cannot write a null value for property 'Name'. Property requires a non-null value. Path ''.'')", prediction=54, span="304-307"];
m13_83 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="302-302"];
m13_2484 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5599-5599"];
m13_2117 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0"];
m13_1725 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3734-3734"];
m13_1727 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'')", span="3738-3738"];
m13_1726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="string json = @''[new Constructor(123)]''", span="3736-3736"];
m13_1728 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3734-3734"];
m13_1812 [cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27"];
m13_3152 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m13_646 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1428-1428"];
m13_649 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1434-1434"];
m13_650 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1436-1436"];
m13_651 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1437-1437"];
m13_648 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1432-1432"];
m13_647 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1430-1430"];
m13_652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1428-1428"];
m13_1528 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3315-3315"];
m13_1535 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3329-3333"];
m13_1536 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="3334-3334"];
m13_1537 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3335-3335"];
m13_1538 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3336-3336"];
m13_1534 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3324-3327"];
m13_1533 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3322-3322"];
m13_1529 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass optInClass = new OptInClass()", span="3317-3317"];
m13_1532 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="3320-3320"];
m13_1530 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Age = 26", span="3318-3318"];
m13_1531 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Name = ''James NK''", span="3319-3319"];
m13_1539 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3315-3315"];
m13_975 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m13_1413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3017-3017"];
m13_1415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="3025-3025"];
m13_1418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="3034-3034"];
m13_1419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="3035-3035"];
m13_1420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="3036-3036"];
m13_1414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="3019-3023"];
m13_1416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="3028-3028"];
m13_1417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="3031-3031"];
m13_1421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3017-3017"];
m13_876 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1949-1949"];
m13_881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="1956-1956"];
m13_884 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="1961-1961"];
m13_885 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="1962-1962"];
m13_887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="1964-1964"];
m13_877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="1951-1951"];
m13_880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="1954-1954"];
m13_882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="1958-1958"];
m13_883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="1960-1960"];
m13_886 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="1963-1963"];
m13_878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverClassName = ''BanSubs''", span="1952-1952"];
m13_879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="1953-1953"];
m13_888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1949-1949"];
m13_44 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="231-231"];
m13_45 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'');\r\n            }, ''Required property 'RequiredProperty' expects a value but got null. Path '', line 1, position 21.'')", span="233-236"];
m13_46 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="231-231"];
m13_1114 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m13_2787 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6322-6322"];
m13_2084 [cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0"];
m13_676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1498-1498"];
m13_678 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1501-1501"];
m13_679 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo)", span="1502-1502"];
m13_677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':''''value''''}''", span="1500-1500"];
m13_680 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1498-1498"];
m13_2848 [cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29"];
m13_3192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7276-7276"];
m13_3195 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7281-7281"];
m13_3194 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7279-7279"];
m13_3193 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Color color = (Color)value", span="7278-7278"];
m13_3196 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7276-7276"];
m13_815 [cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m13_3819 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8863-8863"];
m13_3820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8865-8865"];
m13_3821 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8863-8863"];
m13_2441 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5512-5512"];
m13_2445 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5525-5525"];
m13_2446 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5527-5527"];
m13_2444 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5521-5523"];
m13_2443 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5519-5519"];
m13_2442 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5514-5517"];
m13_2447 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5512-5512"];
m13_206 [cluster="System.Guid.NewGuid()", file="JsonSerializerTest.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m13_2091 [cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0"];
m13_1450 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3118-3118"];
m13_1452 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="3122-3125"];
m13_1455 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="3129-3132"];
m13_1453 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3126-3126"];
m13_1454 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3127-3127"];
m13_1456 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', c.TestProperty1)", span="3133-3133"];
m13_1457 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(21, c.TestProperty2)", span="3134-3134"];
m13_1451 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="string json = ''{ 'testProperty1': 'value' }''", span="3120-3120"];
m13_1458 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3118-3118"];
m13_835 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="728-728"];
m13_1412 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36"];
m13_3714 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m13_2269 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="5103-5103"];
m13_2606 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="129-129"];
m13_2658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5988-5988"];
m13_2660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Assert.IsNull(dateTime)", span="5992-5992"];
m13_2659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5990-5990"];
m13_2661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5988-5988"];
m13_3384 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7703-7703"];
m13_3386 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="7706-7706"];
m13_3385 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7705-7705"];
m13_3387 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7703-7703"];
m13_3590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8273-8273"];
m13_3591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="8275-8275"];
m13_3592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8273-8273"];
m13_2960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6802-6802"];
m13_2963 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6808-6808"];
m13_2962 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(d1)", span="6806-6806"];
m13_2964 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1.Count, d2.Count)", span="6810-6810"];
m13_2965 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d1[0], d2[0])", span="6811-6811"];
m13_2961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6804-6804"];
m13_2966 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6802-6802"];
m13_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="221-221"];
m13_2087 [cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0"];
m13_3490 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7969-7969"];
m13_3492 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7975-7975"];
m13_3494 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Assert.AreEqual(900, i)", span="7980-7980"];
m13_3491 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n        900\r\n      ]''", span="7971-7973"];
m13_3493 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="int i = l[0]", span="7977-7977"];
m13_3495 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7969-7969"];
m13_669 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1489-1489"];
m13_671 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(original)", span="1492-1492"];
m13_673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1494-1494"];
m13_670 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var original = new Foo1 { foo = ''value'' }", span="1491-1491"];
m13_672 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1493-1493"];
m13_674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1489-1489"];
m13_2466 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5565-5565"];
m13_2467 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5567-5570"];
m13_2468 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5572-5572"];
m13_2473 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5581-5581"];
m13_2474 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5582-5582"];
m13_2469 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5574-5574"];
m13_2472 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5579-5579"];
m13_2470 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="5576-5576"];
m13_2471 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="serializer.DateParseHandling = DateParseHandling.None", span="5577-5577"];
m13_2475 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5565-5565"];
m13_1291 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2748-2748"];
m13_1293 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2752-2752"];
m13_1294 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2754-2754"];
m13_1295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2755-2755"];
m13_1296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2756-2756"];
m13_1292 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2750-2750"];
m13_1297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2748-2748"];
m13_435 [cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0"];
m13_2507 [cluster="Unk.SerializeObject", file="JsonSerializerTest.cs", label="Entry Unk.SerializeObject", span=""];
m13_2184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5034-5034"];
m13_2221 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field1 = f", span="5036-5036"];
m13_2222 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_field2 = f", span="5037-5037"];
m13_2223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property1 = f", span="5038-5038"];
m13_2224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property2 = f", span="5039-5039"];
m13_2225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property3 = f", span="5040-5040"];
m13_2226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property4 = f", span="5041-5041"];
m13_2227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property5 = f", span="5042-5042"];
m13_2228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="AA_property6 = f", span="5043-5043"];
m13_2229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5034-5034"];
m13_603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1335-1335"];
m13_604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_serializationInfo == null", span="1337-1337"];
m13_606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1340-1340"];
m13_607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1341-1341"];
m13_608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1342-1342"];
m13_609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1343-1343"];
m13_610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1344-1344"];
m13_611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1345-1345"];
m13_612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="_serializationInfo = null", span="1347-1347"];
m13_605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="return;", span="1338-1338"];
m13_613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1335-1335"];
m13_2388 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5383-5383"];
m13_2390 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5387-5391"];
m13_2389 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5385-5385"];
m13_2391 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5383-5383"];
m13_2013 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m13_3294 [cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29"];
m13_1170 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2541-2541"];
m13_1173 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2547-2547"];
m13_1172 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="2545-2545"];
m13_1174 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="2549-2549"];
m13_1175 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2550-2550"];
m13_1176 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2551-2551"];
m13_1171 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2543-2543"];
m13_1177 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2541-2541"];
m13_336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="935-935"];
m13_338 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<List<Version>>(json);\r\n            }, @''Error converting value ''''1.2.3.4444444444444444444444'''' to type 'System.Version'. Path '[0]', line 1, position 31.'')", span="939-942"];
m13_337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="string json = ''['1.2.3.4444444444444444444444']''", span="937-937"];
m13_339 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="935-935"];
m13_2424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5469-5469"];
m13_2434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 31.'')", span="5497-5497"];
m13_2429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5488-5488"];
m13_2430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5490-5490"];
m13_2431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5491-5491"];
m13_2432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5492-5492"];
m13_2433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5493-5493"];
m13_2425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string classRef = typeof(StringDictionary).FullName", span="5471-5471"];
m13_2427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5483-5483"];
m13_2428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5486-5486"];
m13_2426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5473-5481"];
m13_2435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5469-5469"];
m13_1949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4348-4348"];
m13_1956 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4376-4382"];
m13_1954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4363-4367"];
m13_1957 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4384-4384"];
m13_1958 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4385-4385"];
m13_1959 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4386-4386"];
m13_1960 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4387-4387"];
m13_1955 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4369-4374"];
m13_1950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4350-4353"];
m13_1953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="c2.C1 = c1", span="4361-4361"];
m13_1951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4355-4358"];
m13_1952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="c1.C2 = c2", span="4360-4360"];
m13_1961 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4348-4348"];
m13_1138 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2487-2487"];
m13_1142 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2494-2494"];
m13_1140 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2491-2491"];
m13_1143 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(guid, c.GuidField)", span="2495-2495"];
m13_1141 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2492-2492"];
m13_1139 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2489-2489"];
m13_1144 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2487-2487"];
m13_4004 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="9398-9398"];
m13_2554 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5747-5747"];
m13_2555 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="IDoWork = doWork", span="5750-5750"];
m13_2556 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5747-5747"];
m13_3129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7123-7123"];
m13_3130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7125-7130"];
m13_3131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7123-7123"];
m13_2720 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="6179-6179"];
m13_3011 [cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27"];
m13_1050 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2325-2325"];
m13_1051 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new object())", span="2327-2327"];
m13_1052 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="2328-2328"];
m13_1053 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2325-2325"];
m13_2256 [cluster="Unk.Parse", file="JsonSerializerTest.cs", label="Entry Unk.Parse", span=""];
m13_1540 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3295-3295"];
m13_1205 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m13_2375 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5355-5355"];
m13_2376 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="return new DictionaryKey() { Value = value };", span="5357-5357"];
m13_2377 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5355-5355"];
m13_2693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6122-6122"];
m13_2696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="6137-6140"];
m13_2695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6130-6130"];
m13_2694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6124-6128"];
m13_2697 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6122-6122"];
m13_2692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="6085-6085"];
m13_2909 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344"];
m13_1621 [cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31"];
m13_4 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="141-141"];
m13_5 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="return new MainClass\r\n                {\r\n                    ID = 567,\r\n                    Name = ''XYZ'',\r\n                    Subclass = InstantiateSubclass()\r\n                };", span="143-148"];
m13_6 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="141-141"];
m13_1985 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m13_2216 [cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs", label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0"];
m13_3236 [cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265"];
m13_2412 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5446-5446"];
m13_2419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, z.Length)", span="5457-5457"];
m13_2420 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5458-5458"];
m13_2421 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5459-5459"];
m13_2418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5456-5456"];
m13_2414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5449-5449"];
m13_2413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonSerializer serializer1 = new JsonSerializer()", span="5448-5448"];
m13_2417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5454-5454"];
m13_2415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5450-5450"];
m13_2416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5452-5452"];
m13_2422 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5446-5446"];
m13_1104 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2403-2403"];
m13_1109 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2445-2445"];
m13_1110 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', c.String)", span="2446-2446"];
m13_1111 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="2447-2447"];
m13_1112 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2449-2449"];
m13_1108 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(expected, json)", span="2443-2443"];
m13_1106 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string expected = null", span="2407-2407"];
m13_1105 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2405-2405"];
m13_1107 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2409-2424"];
m13_1113 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2403-2403"];
m13_1592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3477-3477"];
m13_1595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3493-3493"];
m13_1597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3496-3496"];
m13_1598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3497-3497"];
m13_1599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3498-3498"];
m13_1594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", span="3491-3491"];
m13_1596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(s)", span="3494-3494"];
m13_1593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3479-3489"];
m13_1600 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3477-3477"];
m13_223 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="661-661"];
m13_230 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="680-680"];
m13_231 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.FaqId)", span="682-682"];
m13_232 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="683-683"];
m13_229 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="670-678"];
m13_228 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="668-668"];
m13_224 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="FaqItemProxy c = new FaqItemProxy()", span="663-663"];
m13_227 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.IsProxy = true", span="666-666"];
m13_225 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.FaqId = 1", span="664-664"];
m13_226 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="c.Sections.Add(new FaqSection())", span="665-665"];
m13_233 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="661-661"];
m13_2942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6762-6762"];
m13_2948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6775-6775"];
m13_2949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1.5m, c.Quantity)", span="6777-6777"];
m13_2950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6778-6778"];
m13_2947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6773-6773"];
m13_2946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6771-6771"];
m13_2944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6768-6768"];
m13_2945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Thread.CurrentThread.CurrentCulture = testCulture", span="6770-6770"];
m13_2943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6764-6764"];
m13_2951 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6762-6762"];
m13_1423 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3039-3039"];
m13_1430 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="3077-3077"];
m13_1432 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="3080-3080"];
m13_1433 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="3081-3081"];
m13_1434 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="3082-3082"];
m13_1429 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="3059-3075"];
m13_1425 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="3042-3047"];
m13_1426 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="3048-3051"];
m13_1427 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="3052-3055"];
m13_1428 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3057-3057"];
m13_1431 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserializedObject)", span="3078-3078"];
m13_1424 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="3041-3041"];
m13_1435 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3039-3039"];
m13_2877 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6628-6628"];
m13_2881 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6633-6633"];
m13_2880 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="6632-6632"];
m13_2882 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, output)", span="6635-6635"];
m13_2879 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(input)", span="6631-6631"];
m13_2878 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="string input = ''http://test.com/%22foo+bar%22''", span="6630-6630"];
m13_2883 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6628-6628"];
m13_4003 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="9363-9363"];
m13_3807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8843-8843"];
m13_3808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="return (long)Value;", span="8845-8845"];
m13_3809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8843-8843"];
m13_2279 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="5187-5187"];
m13_1517 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3262-3262"];
m13_1519 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3282-3282"];
m13_1521 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3285-3285"];
m13_1520 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3283-3283"];
m13_1522 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3286-3286"];
m13_1523 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3287-3287"];
m13_1524 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="3288-3288"];
m13_1525 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3289-3289"];
m13_1526 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3290-3290"];
m13_1518 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3264-3280"];
m13_1527 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3262-3262"];
m13_3706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8617-8617"];
m13_3709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="8625-8625"];
m13_3707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="8619-8621"];
m13_3708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="8623-8623"];
m13_3710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="8627-8627"];
m13_3711 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="8628-8628"];
m13_3712 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8617-8617"];
m13_2576 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5835-5835"];
m13_2583 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5846-5846"];
m13_2587 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="s = JsonConvert.SerializeObject(barWithNull)", span="5852-5852"];
m13_2585 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5848-5848"];
m13_2586 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="5849-5849"];
m13_2589 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5854-5854"];
m13_2590 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Assert.AreEqual(deserialized.Foo2, null)", span="5855-5855"];
m13_2577 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="5837-5837"];
m13_2582 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="barWithNull.Foo2 = null", span="5843-5843"];
m13_2584 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass deserialized = deserialize(s)", span="5847-5847"];
m13_2580 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="5841-5841"];
m13_2588 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="deserialized = deserialize(s)", span="5853-5853"];
m13_2578 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5838-5838"];
m13_2579 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="5839-5839"];
m13_2581 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5842-5842"];
m13_2591 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5835-5835"];
m13_1332 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m13_1313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2790-2790"];
m13_1315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2794-2794"];
m13_1316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Height)", span="2795-2795"];
m13_1314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="string json = @''{''''Height'''':1}''", span="2792-2792"];
m13_1317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2790-2790"];
m13_362 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="703-703"];
m13_363 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m13_3327 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7546-7546"];
m13_3328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=2, file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", prediction=55, span="7548-7552"];
m13_3329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=2, file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", prediction=56, span="7554-7557"];
m13_3330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs", label="JObject o = JObject.Parse(json)", prediction=57, span="7559-7559"];
m13_3333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=2, file="JsonSerializerTest.cs", label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", prediction=58, span="7563-7566"];
m13_3331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.IsFalse(o.Properties().ElementAt(0).Name.Contains(''Z''))", prediction=59, span="7560-7560"];
m13_3332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.IsFalse(o.Properties().ElementAt(1).Name.Contains(''Z''))", prediction=57, span="7561-7561"];
m13_3334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", prediction=61, span="7568-7568"];
m13_3335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", prediction=58, span="7569-7569"];
m13_3336 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", prediction=58, span="7570-7570"];
m13_3337 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7546-7546"];
m13_3982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9237-9237"];
m13_3984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="9244-9244"];
m13_3985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''base'', d.BaseProperty)", span="9246-9246"];
m13_3986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="9247-9247"];
m13_3983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="9239-9242"];
m13_3987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9237-9237"];
m13_2607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5895-5895"];
m13_2609 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(data)", span="5898-5898"];
m13_2610 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="5899-5899"];
m13_2611 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="5901-5901"];
m13_2608 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="var data = new DecimalTest(decimal.MinValue)", span="5897-5897"];
m13_2612 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5895-5895"];
m13_2272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5163-5163"];
m13_2275 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="5172-5172"];
m13_2274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="5171-5171"];
m13_2273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="5165-5169"];
m13_2276 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5163-5163"];
m13_1995 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m13_2861 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6609-6609"];
m13_2869 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6623-6623"];
m13_2868 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="string result = sw.ToString()", span="6622-6622"];
m13_2865 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var jw = new JsonTextWriter(sw)", span="6617-6617"];
m13_2864 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var sw = new StringWriter()", span="6616-6616"];
m13_2867 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.Flush()", span="6620-6620"];
m13_2866 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="jw.WriteToken(json.CreateReader())", span="6619-6619"];
m13_2863 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="var json = JObject.FromObject(o)", span="6614-6614"];
m13_2862 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="object o = new { p = 1 }", span="6612-6612"];
m13_2870 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6609-6609"];
m13_3197 [cluster="Unk.ToKnownColor", file="JsonSerializerTest.cs", label="Entry Unk.ToKnownColor", span=""];
m13_2277 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="5175-5175"];
m13_1437 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m13_4002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="9329-9329"];
m13_3943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="9138-9138"];
m13_4024 [cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0"];
m13_2080 [cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0"];
m13_758 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1605-1605"];
m13_2031 [cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0"];
m13_2022 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4564-4564"];
m13_2026 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="this[entry.Key] = entry.Value", span="4573-4573"];
m13_2025 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label=dictionary, span="4571-4571"];
m13_2023 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="dictionary == null", span="4566-4566"];
m13_2024 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="return;", span="4568-4568"];
m13_2027 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4564-4564"];
m13_2480 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5608-5608"];
m13_2482 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5612-5614"];
m13_2481 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5610-5610"];
m13_2483 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5608-5608"];
m13_148 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="407-407"];
m13_1746 [cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="924-924"];
m13_4021 [cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="492-492"];
m13_1069 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2353-2353"];
m13_1071 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2356-2356"];
m13_1072 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="2357-2357"];
m13_1073 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="2359-2359"];
m13_1074 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2360-2360"];
m13_1075 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="2361-2361"];
m13_1076 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="2362-2362"];
m13_1077 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="2363-2363"];
m13_1070 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2355-2355"];
m13_1078 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2353-2353"];
m13_917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2014-2014"];
m13_920 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="2020-2020"];
m13_918 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="2016-2016"];
m13_919 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="2018-2018"];
m13_921 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="2022-2022"];
m13_922 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="2023-2023"];
m13_923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2014-2014"];
m13_184 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="503-503"];
m13_187 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="521-524"];
m13_190 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="554-557"];
m13_188 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="526-528"];
m13_191 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c2.Name)", span="559-559"];
m13_186 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="507-519"];
m13_189 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="530-552"];
m13_185 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Version v = new Version(1, 2, 3, 4)", span="505-505"];
m13_192 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="503-503"];
m13_1609 [cluster="System.Uri.ToString()", file="JsonSerializerTest.cs", label="Entry System.Uri.ToString()", span="0-0"];
m13_2392 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5395-5395"];
m13_2394 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Length)", span="5403-5403"];
m13_2395 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2.4, d[0])", span="5404-5404"];
m13_2396 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4.3, d[1])", span="5405-5405"];
m13_2397 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, d[2])", span="5406-5406"];
m13_2393 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5397-5401"];
m13_2398 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5395-5395"];
m13_703 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1533-1533"];
m13_705 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1536-1536"];
m13_707 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1538-1538"];
m13_709 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1540-1540"];
m13_704 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1535-1535"];
m13_706 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo2)", span="1537-1537"];
m13_708 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserialized.foo)", span="1539-1539"];
m13_710 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1533-1533"];
m13_977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2181-2181"];
m13_983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2193-2193"];
m13_986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2198-2198"];
m13_985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2196-2196"];
m13_984 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="2195-2195"];
m13_978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="2183-2183"];
m13_982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2191-2191"];
m13_980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="2187-2187"];
m13_979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="2186-2186"];
m13_981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2190-2190"];
m13_987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2181-2181"];
m13_2448 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5503-5503"];
m13_1581 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m13_2592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5814-5814"];
m13_2461 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="696-696"];
m13_3813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8853-8853"];
m13_3814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8855-8855"];
m13_3815 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8853-8853"];
m13_1356 [cluster="Unk.Fail", file="JsonSerializerTest.cs", label="Entry Unk.Fail", span=""];
m13_952 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2152-2152"];
m13_953 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="2154-2154"];
m13_954 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2152-2152"];
m13_1178 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m13_1146 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m13_734 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="839-839"];
m13_3200 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7284-7284"];
m13_3201 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7286-7286"];
m13_3202 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7284-7284"];
m13_196 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m13_770 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1738-1738"];
m13_777 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1755-1760"];
m13_776 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1753-1753"];
m13_771 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1740-1746"];
m13_775 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.WithDataMember = ''WithDataMember2!''", span="1751-1751"];
m13_772 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.JustAProperty = ''JustAProperty2!''", span="1748-1748"];
m13_773 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.Virtual = ''Virtual2!''", span="1749-1749"];
m13_774 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1750-1750"];
m13_778 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1738-1738"];
m13_328 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="923-923"];
m13_330 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="List<Version> deserialized = JsonConvert.DeserializeObject<List<Version>>(json)", span="926-926"];
m13_331 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, deserialized[0].Major)", span="928-928"];
m13_332 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, deserialized[0].Minor)", span="929-929"];
m13_333 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, deserialized[0].Build)", span="930-930"];
m13_334 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, deserialized[0].Revision)", span="931-931"];
m13_329 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="string json = ''['1.2.3.4']''", span="925-925"];
m13_335 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="923-923"];
m13_3923 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9108-9108"];
m13_3926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9112-9115"];
m13_3927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dt, settings)", span="9117-9117"];
m13_3930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, dt1)", span="9123-9123"];
m13_3935 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="9134-9134"];
m13_3928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9119-9119"];
m13_3933 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9132-9132"];
m13_3934 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="9133-9133"];
m13_3929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="9121-9121"];
m13_3925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9111-9111"];
m13_3924 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="9110-9110"];
m13_3931 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="9125-9129"];
m13_3932 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9130-9130"];
m13_3936 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9108-9108"];
m13_2907 [cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33"];
m13_3613 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8314-8314"];
m13_3614 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="this.First = first", span="8317-8317"];
m13_3615 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="this.Second = second", span="8318-8318"];
m13_3616 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8314-8314"];
m13_4031 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9370-9370"];
m13_4033 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="9374-9379"];
m13_4032 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="9372-9372"];
m13_4034 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return attachment;", span="9380-9380"];
m13_4035 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9370-9370"];
m13_2849 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6580-6580"];
m13_2853 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6600-6600"];
m13_2854 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6601-6601"];
m13_2855 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6602-6602"];
m13_2856 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6603-6603"];
m13_2857 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6604-6604"];
m13_2858 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6605-6605"];
m13_2850 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6582-6589"];
m13_2852 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6592-6598"];
m13_2851 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6590-6590"];
m13_2859 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6580-6580"];
m13_129 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="397-397"];
m13_130 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="399-399"];
m13_131 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EnumA.ValueA, e1)", span="400-400"];
m13_133 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(EnumA.ValueA, e2)", span="403-403"];
m13_132 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="402-402"];
m13_134 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="397-397"];
m13_2081 [cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0"];
m13_729 [cluster="int.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m13_2731 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6258-6258"];
m13_2737 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6273-6273"];
m13_2738 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Title, c2.Title)", span="6274-6274"];
m13_2739 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6275-6275"];
m13_2740 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''one'', c2.Categories[0])", span="6276-6276"];
m13_2741 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''two'', c2.Categories[1])", span="6277-6277"];
m13_2736 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6265-6271"];
m13_2735 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6264-6264"];
m13_2732 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6260-6260"];
m13_2734 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''two'')", span="6262-6262"];
m13_2733 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="c1.Categories.Add(''one'')", span="6261-6261"];
m13_2742 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6258-6258"];
m13_2836 [cluster="System.Exception.ToString()", file="JsonSerializerTest.cs", label="Entry System.Exception.ToString()", span="0-0"];
m13_270 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445"];
m13_1656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3625-3625"];
m13_1658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3629-3629"];
m13_1660 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, a.Count)", span="3631-3631"];
m13_1661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, (int)a[0])", span="3632-3632"];
m13_1662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3633-3633"];
m13_1657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3627-3627"];
m13_1659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="JArray a = (JArray)setOnly.GetValue()", span="3630-3630"];
m13_1663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3625-3625"];
m13_1560 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3397-3397"];
m13_1562 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3406-3408"];
m13_1563 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="3410-3410"];
m13_1564 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="3411-3411"];
m13_1565 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3412-3412"];
m13_1561 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3399-3404"];
m13_1566 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3397-3397"];
m13_3688 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8514-8514"];
m13_3694 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8537-8544"];
m13_3689 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8516-8520"];
m13_3690 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8522-8526"];
m13_3693 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8531-8535"];
m13_3695 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="8546-8561"];
m13_3691 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="john.Spouse = jane", span="8528-8528"];
m13_3692 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="jane.Spouse = john", span="8529-8529"];
m13_3696 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8514-8514"];
m13_1968 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4419-4419"];
m13_1970 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4422-4422"];
m13_1971 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123L, item.Value)", span="4424-4424"];
m13_1969 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="var json = ''{ Key: 'abc', Value: 123 }''", span="4421-4421"];
m13_1972 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4419-4419"];
m13_3660 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m13_1747 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3768-3768"];
m13_1748 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="string json = @''{}''", span="3770-3770"];
m13_1749 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'')", span="3772-3772"];
m13_1750 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3768-3768"];
m13_3988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9252-9252"];
m13_3991 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="9259-9259"];
m13_3990 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(instance)", span="9258-9258"];
m13_3992 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="9261-9261"];
m13_3989 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="9254-9257"];
m13_3993 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9252-9252"];
m13_2952 [cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonSerializerTest.cs", label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0"];
m13_18 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="185-185"];
m13_19 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="var largeBrokenNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 43443333222211111117 }'')", span="187-187"];
m13_21 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="var largeOddWorkingNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 53443333222211111117 }'')", span="190-190"];
m13_20 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''43443333222211111117'', largeBrokenNumber.Blah)", span="188-188"];
m13_22 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''53443333222211111117'', largeOddWorkingNumber.Blah)", span="191-191"];
m13_23 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="185-185"];
m13_751 [cluster="string.Split(params char[])", file="JsonSerializerTest.cs", label="Entry string.Split(params char[])", span="0-0"];
m13_3535 [cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0"];
m13_3783 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8803-8803"];
m13_3784 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8805-8805"];
m13_3785 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8803-8803"];
m13_1973 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4451-4451"];
m13_1976 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4455-4455"];
m13_1974 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4453-4453"];
m13_1975 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4454-4454"];
m13_1977 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4456-4456"];
m13_1978 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="4458-4458"];
m13_1982 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4465-4465"];
m13_1980 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="serializer.WriteObject(ms, c)", span="4462-4462"];
m13_1979 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4459-4461"];
m13_1981 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="byte[] jsonBytes = ms.ToArray()", span="4464-4464"];
m13_1983 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4451-4451"];
m13_3661 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8443-8443"];
m13_3663 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var settings = new JsonSerializerSettings()", span="8446-8446"];
m13_3666 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1234567890.123456m, d)", span="8450-8450"];
m13_3664 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="var serialiser = JsonSerializer.Create(settings)", span="8447-8447"];
m13_3662 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8445-8445"];
m13_3665 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8448-8448"];
m13_3667 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8443-8443"];
m13_853 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m13_2820 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6480-6480"];
m13_892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1969-1969"];
m13_895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="1975-1975"];
m13_894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="1973-1973"];
m13_893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1971-1971"];
m13_896 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1969-1969"];
m13_1828 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3932-3932"];
m13_1829 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="3934-3934"];
m13_1830 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="3935-3935"];
m13_1831 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="3936-3936"];
m13_1833 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="3939-3942"];
m13_1832 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3938-3938"];
m13_1834 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3932-3932"];
m13_2512 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5665-5665"];
m13_2513 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5667-5667"];
m13_2514 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Assert.AreEqual(123456789876543.21m, d)", span="5668-5668"];
m13_2515 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5665-5665"];
m13_3887 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9005-9005"];
m13_3890 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9009-9013"];
m13_3891 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9015-9018"];
m13_3894 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9026-9026"];
m13_3893 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9024-9024"];
m13_3892 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9020-9022"];
m13_3889 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9008-9008"];
m13_3888 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="DateTime dt = new DateTime(2000, 12, 22)", span="9007-9007"];
m13_3895 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9005-9005"];
m13_2113 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonSerializerTest.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0"];
m13_2399 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5411-5411"];
m13_2402 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5426-5426"];
m13_2403 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, d.Count)", span="5428-5428"];
m13_2401 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5420-5424"];
m13_2400 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5413-5418"];
m13_2404 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''One''))", span="5429-5429"];
m13_2405 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''2''))", span="5430-5430"];
m13_2406 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Assert.IsTrue(d.Contains(''III''))", span="5431-5431"];
m13_2407 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5411-5411"];
m13_273 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m13_1049 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="775-775"];
m13_939 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="258-258"];
m13_1601 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3502-3502"];
m13_1605 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3509-3509"];
m13_1603 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(uri)", span="3505-3505"];
m13_1604 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3507-3507"];
m13_1606 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(uri, newUri)", span="3510-3510"];
m13_1602 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Uri uri = new Uri(''http://codeplex.com'')", span="3504-3504"];
m13_1607 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3502-3502"];
m13_2311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5240-5240"];
m13_2320 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 10.'')", span="5255-5255"];
m13_2312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var reference = new Dictionary<string, object>()", span="5244-5244"];
m13_2315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var child = new Dictionary<string, object>()", span="5248-5248"];
m13_2319 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5253-5253"];
m13_2313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$ref'', ''Persons'')", span="5245-5245"];
m13_2314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="reference.Add(''$id'', 1)", span="5246-5246"];
m13_2318 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Father'', reference)", span="5251-5251"];
m13_2316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''_id'', 2)", span="5249-5249"];
m13_2317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="child.Add(''Name'', ''Isabell'')", span="5250-5250"];
m13_2321 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5240-5240"];
m13_4022 [cluster="string.IsNullOrEmpty(string)", file="JsonSerializerTest.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_3295 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7454-7454"];
m13_3297 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="7466-7466"];
m13_3298 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7468-7468"];
m13_3296 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7456-7464"];
m13_3299 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7454-7454"];
m13_2985 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6845-6845"];
m13_2987 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 6.'')", span="6854-6854"];
m13_2986 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="6847-6852"];
m13_2988 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6845-6845"];
m13_285 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="804-804"];
m13_3789 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8813-8813"];
m13_3790 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8815-8815"];
m13_3791 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8813-8813"];
m13_1312 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m13_1403 [cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46"];
m13_645 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103"];
m13_3652 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8426-8426"];
m13_3655 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8432-8432"];
m13_3654 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s1)", span="8430-8430"];
m13_3656 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s1.Count, s2.Count)", span="8434-8434"];
m13_3658 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Assert.IsTrue(s2.Contains(s))", span="8437-8437"];
m13_3653 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8428-8428"];
m13_3657 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label=s1, span="8435-8435"];
m13_3659 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8426-8426"];
m13_1942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4285-4285"];
m13_1009 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m13_925 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2027-2027"];
m13_927 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(json)", span="2107-2107"];
m13_926 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="2029-2106"];
m13_928 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string s = string.Empty", span="2108-2108"];
m13_929 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="s += s", span="2109-2109"];
m13_930 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2027-2027"];
m13_3810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8848-8848"];
m13_3811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="throw new InvalidCastException();", span="8850-8850"];
m13_3812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8848-8848"];
m13_2459 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5530-5530"];
m13_3198 [cluster="Unk.ToUpper", file="JsonSerializerTest.cs", label="Entry Unk.ToUpper", span=""];
m13_2941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6678-6678"];
m13_1912 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4223-4223"];
m13_1913 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="4225-4225"];
m13_1915 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="4228-4228"];
m13_1914 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="4226-4226"];
m13_1916 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="4229-4229"];
m13_1917 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4223-4223"];
m13_3637 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8371-8371"];
m13_3640 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8385-8388"];
m13_3641 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, actual)", span="8390-8390"];
m13_3638 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8373-8381"];
m13_3639 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8383-8383"];
m13_3642 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8371-8371"];
m13_3309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7496-7496"];
m13_3313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7514-7514"];
m13_3311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7504-7507"];
m13_3314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2.Count)", span="7516-7516"];
m13_3315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7517-7517"];
m13_3316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7518-7518"];
m13_3310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7498-7502"];
m13_3312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7509-7512"];
m13_3317 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7496-7496"];
m13_2726 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="6219-6219"];
m13_3207 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7302-7302"];
m13_3216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, values.Count)", span="7320-7320"];
m13_3217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''bar'', values[0].Name)", span="7321-7321"];
m13_3218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''baz'', values[1].Name)", span="7322-7322"];
m13_3208 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7304-7304"];
m13_3212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="!reader.Read()", span="7311-7311"];
m13_3211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label=true, span="7309-7309"];
m13_3209 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7306-7306"];
m13_3215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="values.Add(foo)", span="7317-7317"];
m13_3213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="7314-7314"];
m13_3210 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="reader.SupportMultipleContent = true", span="7307-7307"];
m13_3214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7315-7315"];
m13_3219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7302-7302"];
m13_2910 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="672-672"];
m13_904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1993-1993"];
m13_906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="1997-1997"];
m13_905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="1995-1995"];
m13_907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="1999-1999"];
m13_908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="2000-2000"];
m13_909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1993-1993"];
m13_2682 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6076-6076"];
m13_2684 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="6080-6080"];
m13_2685 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="6081-6081"];
m13_2686 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="6082-6082"];
m13_2683 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = @''{A:''''Test''''}''", span="6078-6078"];
m13_2687 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6076-6076"];
m13_1038 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2301-2301"];
m13_1041 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2311-2311"];
m13_1043 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2317-2317"];
m13_1046 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(d, anonymous.DateValue)", span="2321-2321"];
m13_1044 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2318-2318"];
m13_1040 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2305-2309"];
m13_1042 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2312-2315"];
m13_1045 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2320-2320"];
m13_1039 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="DateTime d = new DateTime(2000, 1, 1)", span="2303-2303"];
m13_1047 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2301-2301"];
m13_799 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1702-1702"];
m13_211 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="637-637"];
m13_217 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="654-654"];
m13_218 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.FaqId)", span="656-656"];
m13_219 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c2.Sections.Count)", span="657-657"];
m13_216 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="645-652"];
m13_215 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="643-643"];
m13_212 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="FaqItem c = new FaqItem()", span="639-639"];
m13_214 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="c.Sections.Add(new FaqSection())", span="641-641"];
m13_213 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="c.FaqId = 1", span="640-640"];
m13_220 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="637-637"];
m13_3413 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7769-7769"];
m13_3415 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="7797-7797"];
m13_3418 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="7801-7801"];
m13_3414 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="7771-7795"];
m13_3416 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(exception)", span="7798-7798"];
m13_3417 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="7799-7799"];
m13_3419 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7769-7769"];
m13_3469 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m13_309 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="887-887"];
m13_312 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="897-897"];
m13_311 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var json = JsonConvert.SerializeObject(input)", span="896-896"];
m13_313 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Data, deserialized.Data)", span="899-899"];
m13_314 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Message, deserialized.Message)", span="900-900"];
m13_315 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Assert.AreEqual(input.Result, deserialized.Result)", span="901-901"];
m13_310 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="889-894"];
m13_316 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="887-887"];
m13_1289 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30"];
m13_1900 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4186-4186"];
m13_1907 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="4213-4213"];
m13_1908 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''some value'', gen.MyProperty)", span="4214-4214"];
m13_1906 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="4197-4211"];
m13_1905 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="string json = g.ToJson()", span="4195-4195"];
m13_1901 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="4188-4188"];
m13_1904 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.MyProperty = ''some value''", span="4193-4193"];
m13_1902 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="4190-4190"];
m13_1903 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="4191-4191"];
m13_1909 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4186-4186"];
m13_37 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m13_4023 [cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonSerializerTest.cs", label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0"];
m13_592 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1324-1324"];
m13_593 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''stringValue'', _stringValue)", span="1326-1326"];
m13_594 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''intValue'', _intValue)", span="1327-1327"];
m13_595 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1328-1328"];
m13_596 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1329-1329"];
m13_597 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1330-1330"];
m13_598 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1331-1331"];
m13_599 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1324-1324"];
m13_74 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", span="270-270"];
m13_1271 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2713-2713"];
m13_1272 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2715-2715"];
m13_1273 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2716-2716"];
m13_1274 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2713-2713"];
m13_3673 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8479-8479"];
m13_3676 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8485-8487"];
m13_3675 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8483-8483"];
m13_3674 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8481-8481"];
m13_3677 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8479-8479"];
m13_280 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="810-810"];
m13_282 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="814-814"];
m13_281 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="812-812"];
m13_283 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, childClass.IsTransient)", span="815-815"];
m13_284 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="810-810"];
m13_1759 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3785-3785"];
m13_1760 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3787-3798"];
m13_1761 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3785-3785"];
m13_2043 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m13_941 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2135-2135"];
m13_947 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="2145-2145"];
m13_945 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="2141-2141"];
m13_948 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="2147-2147"];
m13_949 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="2148-2148"];
m13_946 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="2143-2143"];
m13_942 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="2137-2137"];
m13_944 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.SweetCakesCount = int.MaxValue", span="2139-2139"];
m13_943 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.Pie = ''Delicious''", span="2138-2138"];
m13_950 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2135-2135"];
m13_3119 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7105-7105"];
m13_3120 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="7107-7107"];
m13_3121 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Assert.IsNull(b)", span="7108-7108"];
m13_3122 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7105-7105"];
m13_2715 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6199-6199"];
m13_2717 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(cc)", span="6207-6207"];
m13_2718 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6208-6208"];
m13_2716 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6201-6205"];
m13_2719 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6199-6199"];
m13_2999 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6885-6885"];
m13_3001 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 14.'')", span="6893-6893"];
m13_3000 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="6887-6891"];
m13_3002 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6885-6885"];
m13_974 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m13_3759 [cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="46-46"];
m13_2807 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6460-6460"];
m13_2808 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6462-6462"];
m13_2813 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNull(r.Departures.ElementAt(2))", span="6468-6468"];
m13_2809 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6464-6464"];
m13_2810 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, r.Departures.Count())", span="6465-6465"];
m13_2811 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6466-6466"];
m13_2812 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6467-6467"];
m13_2814 [cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6460-6460"];
m13_4092 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4097 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4102 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4103 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4104 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4105 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4106 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4107 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4108 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4109 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4110 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4124 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4128 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4140 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4141 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4149 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4151 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4112 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4086 [file="JsonSerializerTest.cs", label=c1, span=""];
m13_4088 [file="JsonSerializerTest.cs", label=c1, span=""];
m13_4115 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4113 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span=""];
m13_4137 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span=""];
m13_4085 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", span=""];
m13_4136 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span=""];
m13_4139 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span=""];
m13_4142 [file="JsonSerializerTest.cs", label=errors, span=""];
m13_4098 [file="JsonSerializerTest.cs", label=strFromTest, span=""];
m13_4096 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span=""];
m13_4145 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4146 [file="JsonSerializerTest.cs", label=s, span=""];
m13_4143 [file="JsonSerializerTest.cs", label=errors, span=""];
m13_4144 [file="JsonSerializerTest.cs", label=errors, span=""];
m13_4111 [file="JsonSerializerTest.cs", label=json, span=""];
m13_4156 [file="JsonSerializerTest.cs", label=JsonMessage, span=""];
m13_4150 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span=""];
m13_4093 [file="JsonSerializerTest.cs", label=referenceResolver, span=""];
m13_4101 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span=""];
m13_4138 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span=""];
m13_4114 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span=""];
m13_4116 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span=""];
m13_4119 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span=""];
m13_4087 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span=""];
m13_4090 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span=""];
m13_4157 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span=""];
m13_4147 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span=""];
m13_4117 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span=""];
m13_4120 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span=""];
m13_4130 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span=""];
m13_4154 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span=""];
m13_4094 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span=""];
m13_4095 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span=""];
m13_4153 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span=""];
m13_4123 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span=""];
m13_4118 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span=""];
m13_4122 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span=""];
m13_4089 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span=""];
m13_4132 [file="JsonSerializerTest.cs", label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m13_4133 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span=""];
m13_4152 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span=""];
m14_10 [cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1684-1684"];
m14_9 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325"];
m14_12 [cluster="System.Console.WriteLine(decimal)", file="JsonTextReader.cs", label="Entry System.Console.WriteLine(decimal)", span="0-0"];
m14_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", span="10-10"];
m14_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs", label="JObject o = JObject.Parse(@''{\r\n        'Stores': [\r\n          'Lambton Quay',\r\n          'Willis Street'\r\n        ],\r\n        'Manufacturers': [\r\n          {\r\n            'Name': 'Acme Co',\r\n            'Products': [\r\n              {\r\n                'Name': 'Anvil',\r\n                'Price': 50\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            'Name': 'Contoso',\r\n            'Products': [\r\n              {\r\n                'Name': 'Elbow Grease',\r\n                'Price': 99.95\r\n              },\r\n              {\r\n                'Name': 'Headlight Fluid',\r\n                'Price': 4\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }'')", span="13-42"];
m14_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs", label="string name = (string)o.SelectToken(''Manufacturers[0].Name'')", span="44-44"];
m14_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs", label="decimal productPrice = (decimal)o.SelectToken(''Manufacturers[0].Products[0].Price'')", span="49-49"];
m14_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs", label="string productName = (string)o.SelectToken(''Manufacturers[1].Products[0].Name'')", span="54-54"];
m14_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs", label="Console.WriteLine(name)", span="46-46"];
m14_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs", label="Console.WriteLine(productPrice)", span="51-51"];
m14_7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs", label="Console.WriteLine(productName)", span="56-56"];
m14_8 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", span="10-10"];
m14_11 [cluster="System.Console.WriteLine(string)", file="JsonTextReader.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m15_12 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m15_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", span="52-52"];
m15_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", color=green, community=0, file="JsonTextWriter.cs", label="Stockholder stockholder = new Stockholder\r\n            {\r\n                FullName = ''Steve Stockholder'',\r\n                Businesses = new List<Business>\r\n                {\r\n                    new Hotel\r\n                    {\r\n                        Name = ''Hudson Hotel'',\r\n                        Stars = 4\r\n                    }\r\n                }\r\n            }", prediction=64, span="55-66"];
m15_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", color=green, community=0, file="JsonTextWriter.cs", label="string jsonTypeNameAll = JsonConvert.SerializeObject(stockholder, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", prediction=65, span="68-71"];
m15_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs", label="string jsonTypeNameAuto = JsonConvert.SerializeObject(stockholder, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="89-92"];
m15_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", color=green, community=0, file="JsonTextWriter.cs", label="Console.WriteLine(jsonTypeNameAll)", prediction=66, span="73-73"];
m15_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs", label="Console.WriteLine(jsonTypeNameAuto)", span="94-94"];
m15_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs", label="Stockholder newStockholder = JsonConvert.DeserializeObject<Stockholder>(jsonTypeNameAuto, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="107-110"];
m15_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs", label="Console.WriteLine(newStockholder.Businesses[0].GetType().Name)", span="112-112"];
m15_8 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", span="52-52"];
m15_15 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802"];
m15_11 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Hotel.Hotel()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Hotel.Hotel()", span="40-40"];
m15_16 [cluster="object.GetType()", file="JsonTextWriter.cs", label="Entry object.GetType()", span="0-0"];
m15_9 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Stockholder.Stockholder()", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Stockholder.Stockholder()", span="45-45"];
m15_13 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriter.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606"];
m15_14 [cluster="System.Console.WriteLine(string)", file="JsonTextWriter.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m16_8 [cluster="Unk.ToList", file="JsonTextWriterTest.cs", label="Entry Unk.ToList", span=""];
m16_13 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", span="37-37"];
m16_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", span="47-47"];
m16_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs", label="string json = @''[\r\n              {\r\n                'Title': 'Json.NET is awesome!',\r\n                'Author': {\r\n                  'Name': 'James Newton-King',\r\n                  'Twitter': '@JamesNK',\r\n                  'Picture': '/jamesnk.png'\r\n                },\r\n                'Date': '2013-01-23T19:30:00',\r\n                'BodyHtml': '&lt;h3&gt;Title!&lt;/h3&gt;\r\n&lt;p&gt;Content!&lt;/p&gt;'\r\n              }\r\n            ]''", span="50-61"];
m16_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs", label="JArray blogPostArray = JArray.Parse(json)", span="63-63"];
m16_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs", label="IList<BlogPost> blogPosts = blogPostArray.Select(p => new BlogPost\r\n            {\r\n                Title = (string)p[''Title''],\r\n                AuthorName = (string)p[''Author''][''Name''],\r\n                AuthorTwitter = (string)p[''Author''][''Twitter''],\r\n                PostedDate = (DateTime)p[''Date''],\r\n                Body = HttpUtility.HtmlDecode((string)p[''BodyHtml''])\r\n            }).ToList()", span="65-72"];
m16_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs", label="Console.WriteLine(blogPosts[0].Body)", span="74-74"];
m16_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", span="47-47"];
m16_7 [cluster="Unk.Select", file="JsonTextWriterTest.cs", label="Entry Unk.Select", span=""];
m16_10 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="65-72"];
m16_11 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="new BlogPost\r\n            {\r\n                Title = (string)p[''Title''],\r\n                AuthorName = (string)p[''Author''][''Name''],\r\n                AuthorTwitter = (string)p[''Author''][''Twitter''],\r\n                PostedDate = (DateTime)p[''Date''],\r\n                Body = HttpUtility.HtmlDecode((string)p[''BodyHtml''])\r\n            }", span="65-72"];
m16_12 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="65-72"];
m16_14 [cluster="Unk.HtmlDecode", file="JsonTextWriterTest.cs", label="Entry Unk.HtmlDecode", span=""];
m16_6 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144"];
m16_9 [cluster="System.Console.WriteLine(string)", file="JsonTextWriterTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m17_362 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", span="864-864"];
m17_669 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="55-55"];
m17_1115 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="840-840"];
m17_1280 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2433-2433"];
m17_1281 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonValidatingReader.cs", label="return true;", span="2435-2435"];
m17_1282 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2433-2433"];
m17_138 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m17_139 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="EnsureBuffer()", span="368-368"];
m17_140 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label=true, span="370-370"];
m17_141 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label=_currentState, span="372-372"];
m17_142 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.Start", span="374-374"];
m17_149 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.Object", span="381-381"];
m17_152 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.PostValue", span="384-384"];
m17_155 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.Finished", span="392-392"];
m17_167 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="412-412"];
m17_143 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.Property", span="375-375"];
m17_144 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.Array", span="376-376"];
m17_145 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.ArrayStart", span="377-377"];
m17_146 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.Constructor", span="378-378"];
m17_147 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.ConstructorStart", span="379-379"];
m17_148 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="return ParseValue();", span="380-380"];
m17_150 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="State.ObjectStart", span="382-382"];
m17_151 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="return ParseObject();", span="383-383"];
m17_153 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="ParsePostValue()", span="387-387"];
m17_154 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="return true;", span="389-389"];
m17_156 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="EnsureChars(0, false)", span="393-393"];
m17_157 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="EatWhitespace(false)", span="395-395"];
m17_165 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.None)", span="409-409"];
m17_158 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label=_isEndOfFile, span="396-396"];
m17_159 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.None)", span="398-398"];
m17_161 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="_chars[_charPos] == '/'", span="401-401"];
m17_160 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="return false;", span="399-399"];
m17_162 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="ParseComment(true)", span="403-403"];
m17_164 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="407-407"];
m17_163 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="return true;", span="404-404"];
m17_166 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="return false;", span="410-410"];
m17_168 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="366-366"];
m17_932 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730"];
m17_963 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="MatchValueWithTrailingSeparator(''new'')", span="1732-1732"];
m17_964 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="EatWhitespace(false)", span="1734-1734"];
m17_997 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1809-1809"];
m17_965 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="int initialPosition = _charPos", span="1736-1736"];
m17_966 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="int endPosition", span="1737-1737"];
m17_989 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1791-1791"];
m17_967 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label=true, span="1739-1739"];
m17_968 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="1741-1741"];
m17_969 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="currentChar == '\0'", span="1742-1742"];
m17_975 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="char.IsLetterOrDigit(currentChar)", span="1758-1758"];
m17_977 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="currentChar == StringUtils.CarriageReturn", span="1762-1762"];
m17_980 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="currentChar == StringUtils.LineFeed", span="1768-1768"];
m17_983 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="char.IsWhiteSpace(currentChar)", span="1774-1774"];
m17_986 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="currentChar == '('", span="1780-1780"];
m17_988 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1787-1787"];
m17_970 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="_charsUsed == _charPos", span="1744-1744"];
m17_971 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="ReadData(true) == 0", span="1746-1746"];
m17_973 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="endPosition = _charPos", span="1753-1753"];
m17_972 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1748-1748"];
m17_974 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="_charPos++", span="1754-1754"];
m17_976 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="_charPos++", span="1760-1760"];
m17_978 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="endPosition = _charPos", span="1764-1764"];
m17_979 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(true)", span="1765-1765"];
m17_981 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="endPosition = _charPos", span="1770-1770"];
m17_982 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="1771-1771"];
m17_984 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="endPosition = _charPos", span="1776-1776"];
m17_985 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="_charPos++", span="1777-1777"];
m17_987 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="endPosition = _charPos", span="1782-1782"];
m17_990 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="string constructorName = _stringReference.ToString()", span="1792-1792"];
m17_991 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="EatWhitespace(false)", span="1794-1794"];
m17_996 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.StartConstructor, constructorName)", span="1805-1805"];
m17_992 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="_chars[_charPos] != '('", span="1796-1796"];
m17_993 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1798-1798"];
m17_994 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="_charPos++", span="1801-1801"];
m17_995 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="ClearRecentString()", span="1803-1803"];
m17_998 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730"];
m17_557 [cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="898-898"];
m17_556 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="2291-2291"];
m17_1217 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.Null)", span="2293-2293"];
m17_1218 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Null)", span="2295-2295"];
m17_1219 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="2299-2299"];
m17_1220 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="2291-2291"];
m17_1114 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.DoubleTryParse(char[], int, int, out double)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.DoubleTryParse(char[], int, int, out double)", span="1199-1199"];
m17_1277 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="1129-1129"];
m17_667 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="260-260"];
m17_263 [cluster="char.IsWhiteSpace(char)", file="JsonValidatingReader.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m17_1110 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="746-746"];
m17_830 [cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", span="48-48"];
m17_1105 [cluster="string.StartsWith(string, System.StringComparison)", file="JsonValidatingReader.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m17_83 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240"];
m17_84 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonValidatingReader.cs", label="return ReadData(append, 0);", span="242-242"];
m17_85 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240"];
m17_364 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2327-2327"];
m17_1229 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.NegativeInfinity)", span="2329-2329"];
m17_1230 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=readType, span="2331-2331"];
m17_1240 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing -Infinity value.'');", span="2349-2349"];
m17_1231 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.Read", span="2333-2333"];
m17_1236 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsString", span="2341-2341"];
m17_1232 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsDouble", span="2334-2334"];
m17_1233 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_floatParseHandling == FloatParseHandling.Double", span="2335-2335"];
m17_1234 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="2337-2337"];
m17_1239 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Cannot read -Infinity value.'');", span="2346-2346"];
m17_1235 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return double.NegativeInfinity;", span="2338-2338"];
m17_1237 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.String, JsonConvert.NegativeInfinity)", span="2342-2342"];
m17_1238 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return JsonConvert.NegativeInfinity;", span="2343-2343"];
m17_1241 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2327-2327"];
m17_186 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439"];
m17_187 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonValidatingReader.cs", label="return (string)ReadStringValue(ReadType.ReadAsString);", span="441-441"];
m17_188 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439"];
m17_1123 [cluster="Unk.Parse", file="JsonValidatingReader.cs", label="Entry Unk.Parse", span=""];
m17_17 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127"];
m17_18 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_charPos++", span="129-129"];
m17_20 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadStringIntoBuffer(quote)", span="132-132"];
m17_22 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=readType, span="135-135"];
m17_35 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_quoteChar = quote", span="159-159"];
m17_41 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="readType == ReadType.ReadAsDateTime", span="170-170"];
m17_43 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="readType == ReadType.ReadAsDateTimeOffset", span="175-175"];
m17_56 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_quoteChar = quote", span="208-208"];
m17_19 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ShiftBufferIfNeeded()", span="131-131"];
m17_21 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetPostValueState(true)", span="133-133"];
m17_23 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsBytes", span="137-137"];
m17_32 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsString", span="155-155"];
m17_36 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsInt32", span="161-161"];
m17_39 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_dateParseHandling != DateParseHandling.None", span="167-167"];
m17_24 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Guid g", span="138-138"];
m17_25 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="byte[] data", span="139-139"];
m17_26 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_stringReference.Length == 0", span="140-140"];
m17_27 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="data = new byte[0]", span="142-142"];
m17_28 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_stringReference.Length == 36 && ConvertUtils.TryConvertGuid(_stringReference.ToString(), out g)", span="144-144"];
m17_29 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="data = g.ToByteArray()", span="146-146"];
m17_30 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="150-150"];
m17_31 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="153-153"];
m17_33 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string text = _stringReference.ToString()", span="156-156"];
m17_34 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.String, text, false)", span="158-158"];
m17_37 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsDecimal", span="162-162"];
m17_38 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsBoolean", span="163-163"];
m17_40 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="DateParseHandling dateParseHandling", span="169-169"];
m17_55 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.String, _stringReference.ToString(), false)", span="207-207"];
m17_42 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="dateParseHandling = DateParseHandling.DateTime", span="172-172"];
m17_44 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="dateParseHandling = DateParseHandling.DateTimeOffset", span="177-177"];
m17_45 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="dateParseHandling = _dateParseHandling", span="182-182"];
m17_46 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="dateParseHandling == DateParseHandling.DateTime", span="185-185"];
m17_47 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="DateTime dt", span="187-187"];
m17_51 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="DateTimeOffset dt", span="197-197"];
m17_48 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="DateTimeUtils.TryParseDateTime(_stringReference, DateTimeZoneHandling, DateFormatString, Culture, out dt)", span="188-188"];
m17_49 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="190-190"];
m17_50 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return;", span="191-191"];
m17_52 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="DateTimeUtils.TryParseDateTimeOffset(_stringReference, DateFormatString, Culture, out dt)", span="198-198"];
m17_53 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="200-200"];
m17_54 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return;", span="201-201"];
m17_57 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127"];
m17_181 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830"];
m17_457 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="EnsureBuffer()", span="832-832"];
m17_475 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseString(currentChar, readType)", span="858-858"];
m17_476 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=readType, span="859-859"];
m17_483 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw new ArgumentOutOfRangeException(nameof(readType));", span="868-868"];
m17_488 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ParseNumberNaN(readType);", span="874-874"];
m17_490 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ParseNumberPositiveInfinity(readType);", span="876-876"];
m17_493 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ParseNumberNegativeInfinity(readType);", span="880-880"];
m17_494 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseNumber(readType)", span="884-884"];
m17_507 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseNumber(readType)", span="898-898"];
m17_458 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=_currentState, span="834-834"];
m17_459 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Start", span="836-836"];
m17_529 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Finished", span="937-937"];
m17_532 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="941-941"];
m17_460 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Property", span="837-837"];
m17_461 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Array", span="838-838"];
m17_462 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.ArrayStart", span="839-839"];
m17_463 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Constructor", span="840-840"];
m17_464 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.ConstructorStart", span="841-841"];
m17_465 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.PostValue", span="842-842"];
m17_466 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=true, span="843-843"];
m17_467 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="845-845"];
m17_468 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=currentChar, span="847-847"];
m17_518 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="913-913"];
m17_527 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="!char.IsWhiteSpace(currentChar)", span="928-928"];
m17_528 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="930-930"];
m17_469 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'\0'", span="849-849"];
m17_473 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="''''", span="856-856"];
m17_484 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'n'", span="870-870"];
m17_487 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'N'", span="873-873"];
m17_489 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'I'", span="875-875"];
m17_491 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'-'", span="877-877"];
m17_496 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'.'", span="887-887"];
m17_509 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'/'", span="900-900"];
m17_511 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="','", span="903-903"];
m17_513 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="']'", span="906-906"];
m17_519 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="914-914"];
m17_521 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="917-917"];
m17_523 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="' '", span="920-920"];
m17_526 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_charPos++", span="926-926"];
m17_470 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadNullChar()", span="850-850"];
m17_471 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.None, null, false)", span="852-852"];
m17_472 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return null;", span="853-853"];
m17_474 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'\''", span="857-857"];
m17_477 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsInt32", span="861-861"];
m17_479 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsDecimal", span="863-863"];
m17_481 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsDouble", span="865-865"];
m17_478 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ReadInt32String(_stringReference.ToString());", span="862-862"];
m17_480 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ReadDecimalString(_stringReference.ToString());", span="864-864"];
m17_482 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ReadDoubleString(_stringReference.ToString());", span="866-866"];
m17_485 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="HandleNull()", span="871-871"];
m17_486 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return null;", span="872-872"];
m17_492 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="878-878"];
m17_495 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return Value;", span="885-885"];
m17_497 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'0'", span="888-888"];
m17_498 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'1'", span="889-889"];
m17_499 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'2'", span="890-890"];
m17_500 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'3'", span="891-891"];
m17_501 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'4'", span="892-892"];
m17_502 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'5'", span="893-893"];
m17_503 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'6'", span="894-894"];
m17_504 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'7'", span="895-895"];
m17_505 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'8'", span="896-896"];
m17_506 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'9'", span="897-897"];
m17_508 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return Value;", span="899-899"];
m17_510 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseComment(false)", span="901-901"];
m17_512 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ProcessValueComma()", span="904-904"];
m17_514 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_charPos++", span="907-907"];
m17_515 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="908-908"];
m17_516 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndArray)", span="910-910"];
m17_517 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return null;", span="911-911"];
m17_520 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(false)", span="915-915"];
m17_522 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="918-918"];
m17_524 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="StringUtils.Tab", span="921-921"];
m17_525 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_charPos++", span="923-923"];
m17_530 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadFinished()", span="938-938"];
m17_531 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return null;", span="939-939"];
m17_533 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830"];
m17_684 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", span="1383-1383"];
m17_829 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498"];
m17_834 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="int initialPosition = _charPos", span="1500-1500"];
m17_835 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label=true, span="1503-1503"];
m17_841 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1518-1518"];
m17_847 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1530-1530"];
m17_836 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="_chars[_charPos]", span="1505-1505"];
m17_837 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="'\0'", span="1507-1507"];
m17_843 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="1521-1521"];
m17_838 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="_charsUsed == _charPos", span="1508-1508"];
m17_839 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="ReadData(true) == 0", span="1510-1510"];
m17_840 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="1512-1512"];
m17_842 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="return;", span="1519-1519"];
m17_844 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="ValidIdentifierChar(currentChar)", span="1523-1523"];
m17_846 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="1528-1528"];
m17_849 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1534-1534"];
m17_845 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="_charPos++", span="1525-1525"];
m17_848 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="return;", span="1531-1531"];
m17_850 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498"];
m17_1268 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2405-2405"];
m17_1269 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs", label="base.Close()", span="2407-2407"];
m17_1270 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs", label="_chars != null", span="2409-2409"];
m17_1271 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="2411-2411"];
m17_1273 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs", label="CloseInput && _reader != null", span="2415-2415"];
m17_1272 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs", label="_chars = null", span="2412-2412"];
m17_1274 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs", label="_reader.Close()", span="2418-2418"];
m17_1275 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs", label="_stringBuffer.Clear(_arrayPool)", span="2424-2424"];
m17_1276 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="2405-2405"];
m17_543 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969"];
m17_544 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonValidatingReader.cs", label="return (double?)ReadNumberValue(ReadType.ReadAsDouble);", span="971-971"];
m17_545 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969"];
m17_800 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437"];
m17_801 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="char firstChar = _chars[_charPos]", span="1439-1439"];
m17_802 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="char quoteChar", span="1440-1440"];
m17_803 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="firstChar == '''' || firstChar == '\''", span="1442-1442"];
m17_805 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="quoteChar = firstChar", span="1445-1445"];
m17_808 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="ValidIdentifierChar(firstChar)", span="1449-1449"];
m17_824 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="_quoteChar = quoteChar", span="1487-1487"];
m17_804 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="_charPos++", span="1444-1444"];
m17_806 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="ShiftBufferIfNeeded()", span="1446-1446"];
m17_807 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="ReadStringIntoBuffer(quoteChar)", span="1447-1447"];
m17_809 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="quoteChar = '\0'", span="1451-1451"];
m17_812 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1457-1457"];
m17_810 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="ShiftBufferIfNeeded()", span="1452-1452"];
m17_811 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="ParseUnquotedProperty()", span="1453-1453"];
m17_813 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="string propertyName", span="1460-1460"];
m17_814 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="NameTable != null", span="1462-1462"];
m17_815 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="propertyName = NameTable.Get(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="1464-1464"];
m17_818 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="propertyName = _stringReference.ToString()", span="1474-1474"];
m17_816 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="propertyName == null", span="1467-1467"];
m17_823 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.PropertyName, propertyName)", span="1486-1486"];
m17_817 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="propertyName = _stringReference.ToString()", span="1469-1469"];
m17_819 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="EatWhitespace(false)", span="1477-1477"];
m17_820 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="_chars[_charPos] != ':'", span="1479-1479"];
m17_821 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1481-1481"];
m17_822 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="_charPos++", span="1484-1484"];
m17_825 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="ClearRecentString()", span="1488-1488"];
m17_826 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="return true;", span="1490-1490"];
m17_827 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437"];
m17_675 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", span="58-58"];
m17_448 [cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="708-708"];
m17_1112 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonValidatingReader.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m17_118 [cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54"];
m17_189 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448"];
m17_190 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="EnsureBuffer()", span="450-450"];
m17_191 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="bool isWrapped = false", span="451-451"];
m17_192 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label=_currentState, span="453-453"];
m17_211 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label=isWrapped, span="479-479"];
m17_193 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="State.Start", span="455-455"];
m17_249 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="State.Finished", span="539-539"];
m17_252 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="543-543"];
m17_194 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="State.Property", span="456-456"];
m17_195 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="State.Array", span="457-457"];
m17_196 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="State.ArrayStart", span="458-458"];
m17_197 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="State.Constructor", span="459-459"];
m17_198 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="State.ConstructorStart", span="460-460"];
m17_199 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="State.PostValue", span="461-461"];
m17_200 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label=true, span="462-462"];
m17_201 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="464-464"];
m17_202 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label=currentChar, span="466-466"];
m17_209 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="ParseString(currentChar, ReadType.ReadAsBytes)", span="477-477"];
m17_238 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="515-515"];
m17_247 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="!char.IsWhiteSpace(currentChar)", span="530-530"];
m17_248 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="532-532"];
m17_203 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="'\0'", span="468-468"];
m17_207 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="''''", span="475-475"];
m17_217 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="'{'", span="489-489"];
m17_222 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="'['", span="495-495"];
m17_226 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="'n'", span="499-499"];
m17_229 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="'/'", span="502-502"];
m17_231 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="','", span="505-505"];
m17_233 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="']'", span="508-508"];
m17_239 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="516-516"];
m17_241 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="519-519"];
m17_243 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="' '", span="522-522"];
m17_246 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="_charPos++", span="528-528"];
m17_204 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="ReadNullChar()", span="469-469"];
m17_205 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.None, null, false)", span="471-471"];
m17_206 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="return null;", span="472-472"];
m17_208 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="'\''", span="476-476"];
m17_210 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="byte[] data = (byte[])Value", span="478-478"];
m17_215 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="486-486"];
m17_216 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="return data;", span="488-488"];
m17_212 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="ReaderReadAndAssert()", span="481-481"];
m17_213 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="TokenType != JsonToken.EndObject", span="482-482"];
m17_214 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="484-484"];
m17_218 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="_charPos++", span="490-490"];
m17_219 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.StartObject)", span="491-491"];
m17_220 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="ReadIntoWrappedTypeObject()", span="492-492"];
m17_221 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="isWrapped = true", span="493-493"];
m17_223 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="_charPos++", span="496-496"];
m17_224 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.StartArray)", span="497-497"];
m17_225 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="return ReadArrayIntoByteArray();", span="498-498"];
m17_227 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="HandleNull()", span="500-500"];
m17_228 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="return null;", span="501-501"];
m17_230 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="ParseComment(false)", span="503-503"];
m17_232 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="ProcessValueComma()", span="506-506"];
m17_234 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="_charPos++", span="509-509"];
m17_235 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="510-510"];
m17_236 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndArray)", span="512-512"];
m17_237 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="return null;", span="513-513"];
m17_240 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(false)", span="517-517"];
m17_242 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="520-520"];
m17_244 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="StringUtils.Tab", span="523-523"];
m17_245 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="_charPos++", span="525-525"];
m17_250 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="ReadFinished()", span="540-540"];
m17_251 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="return null;", span="541-541"];
m17_253 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448"];
m17_668 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215"];
m17_671 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs", label="writeToPosition > lastWritePosition", span="1217-1217"];
m17_672 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs", label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, writeToPosition - lastWritePosition)", span="1219-1219"];
m17_673 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs", label="_stringBuffer.Append(_arrayPool, writeChar)", span="1222-1222"];
m17_674 [cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215"];
m17_828 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493"];
m17_831 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonValidatingReader.cs", label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="1495-1495"];
m17_832 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493"];
m17_169 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034"];
m17_574 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs", label="_chars == null", span="1036-1036"];
m17_575 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs", label="_chars = BufferUtils.RentBuffer(_arrayPool, 1024)", span="1038-1038"];
m17_576 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs", label="_chars[0] = '\0'", span="1039-1039"];
m17_577 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034"];
m17_185 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547"];
m17_265 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="EnsureBuffer()", span="549-549"];
m17_283 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseString(currentChar, readType)", span="575-575"];
m17_284 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=readType, span="576-576"];
m17_297 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw new ArgumentOutOfRangeException(nameof(readType));", span="597-597"];
m17_300 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ParseNumberNegativeInfinity(readType);", span="602-602"];
m17_301 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseNumber(readType)", span="606-606"];
m17_314 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="readType != ReadType.ReadAsString", span="620-620"];
m17_321 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="readType != ReadType.ReadAsString", span="629-629"];
m17_330 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ParseNumberPositiveInfinity(readType);", span="642-642"];
m17_332 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ParseNumberNaN(readType);", span="644-644"];
m17_266 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=_currentState, span="551-551"];
m17_267 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Start", span="553-553"];
m17_356 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Finished", span="685-685"];
m17_359 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="689-689"];
m17_268 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Property", span="554-554"];
m17_269 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Array", span="555-555"];
m17_270 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.ArrayStart", span="556-556"];
m17_271 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.Constructor", span="557-557"];
m17_272 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.ConstructorStart", span="558-558"];
m17_273 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="State.PostValue", span="559-559"];
m17_274 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=true, span="560-560"];
m17_275 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="562-562"];
m17_276 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=currentChar, span="564-564"];
m17_316 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="623-623"];
m17_323 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="632-632"];
m17_324 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string expected = currentChar == 't' ? JsonConvert.True : JsonConvert.False", span="634-634"];
m17_345 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="661-661"];
m17_354 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="!char.IsWhiteSpace(currentChar)", span="676-676"];
m17_355 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="678-678"];
m17_277 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'\0'", span="566-566"];
m17_281 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="''''", span="573-573"];
m17_298 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'-'", span="599-599"];
m17_303 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'.'", span="609-609"];
m17_319 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'t'", span="627-627"];
m17_329 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'I'", span="641-641"];
m17_331 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'N'", span="643-643"];
m17_333 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'n'", span="645-645"];
m17_336 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'/'", span="648-648"];
m17_338 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="','", span="651-651"];
m17_340 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="']'", span="654-654"];
m17_346 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="662-662"];
m17_348 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="665-665"];
m17_350 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="' '", span="668-668"];
m17_353 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_charPos++", span="674-674"];
m17_278 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadNullChar()", span="567-567"];
m17_279 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.None, null, false)", span="569-569"];
m17_280 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return null;", span="570-570"];
m17_282 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'\''", span="574-574"];
m17_285 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsBytes", span="578-578"];
m17_287 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsString", span="580-580"];
m17_289 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsDateTime", span="582-582"];
m17_293 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsDateTimeOffset", span="589-589"];
m17_286 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return Value;", span="579-579"];
m17_288 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return Value;", span="581-581"];
m17_290 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Value is DateTime", span="583-583"];
m17_291 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return (DateTime)Value;", span="585-585"];
m17_292 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ReadDateTimeString((string)Value);", span="587-587"];
m17_294 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Value is DateTimeOffset", span="590-590"];
m17_295 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return (DateTimeOffset)Value;", span="592-592"];
m17_296 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return ReadDateTimeOffsetString((string)Value);", span="594-594"];
m17_299 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="600-600"];
m17_302 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return Value;", span="607-607"];
m17_304 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'0'", span="610-610"];
m17_305 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'1'", span="611-611"];
m17_306 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'2'", span="612-612"];
m17_307 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'3'", span="613-613"];
m17_308 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'4'", span="614-614"];
m17_309 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'5'", span="615-615"];
m17_310 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'6'", span="616-616"];
m17_311 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'7'", span="617-617"];
m17_312 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'8'", span="618-618"];
m17_313 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'9'", span="619-619"];
m17_315 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_charPos++", span="622-622"];
m17_317 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseNumber(ReadType.ReadAsString)", span="625-625"];
m17_318 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return Value;", span="626-626"];
m17_320 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="'f'", span="628-628"];
m17_322 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_charPos++", span="631-631"];
m17_325 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="!MatchValueWithTrailingSeparator(expected)", span="635-635"];
m17_327 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.String, expected)", span="639-639"];
m17_328 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return expected;", span="640-640"];
m17_326 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="637-637"];
m17_334 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="HandleNull()", span="646-646"];
m17_335 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return null;", span="647-647"];
m17_337 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseComment(false)", span="649-649"];
m17_339 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ProcessValueComma()", span="652-652"];
m17_341 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_charPos++", span="655-655"];
m17_342 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="656-656"];
m17_343 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndArray)", span="658-658"];
m17_344 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return null;", span="659-659"];
m17_347 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(false)", span="663-663"];
m17_349 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="666-666"];
m17_351 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="StringUtils.Tab", span="669-669"];
m17_352 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_charPos++", span="671-671"];
m17_357 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadFinished()", span="686-686"];
m17_358 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return null;", span="687-687"];
m17_360 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547"];
m17_931 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2315-2315"];
m17_1225 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.False)", span="2317-2317"];
m17_1226 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Boolean, false)", span="2319-2319"];
m17_1227 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2323-2323"];
m17_1228 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2315-2315"];
m17_1106 [cluster="System.Convert.ToInt64(string, int)", file="JsonValidatingReader.cs", label="Entry System.Convert.ToInt64(string, int)", span="0-0"];
m17_372 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702"];
m17_373 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="EnsureBuffer()", span="704-704"];
m17_374 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label=_currentState, span="706-706"];
m17_375 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="State.Start", span="708-708"];
m17_443 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="State.Finished", span="809-809"];
m17_446 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="813-813"];
m17_376 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="State.Property", span="709-709"];
m17_377 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="State.Array", span="710-710"];
m17_378 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="State.ArrayStart", span="711-711"];
m17_379 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="State.Constructor", span="712-712"];
m17_380 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="State.ConstructorStart", span="713-713"];
m17_381 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="State.PostValue", span="714-714"];
m17_382 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label=true, span="715-715"];
m17_383 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="717-717"];
m17_384 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label=currentChar, span="719-719"];
m17_391 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="ParseString(currentChar, ReadType.Read)", span="730-730"];
m17_417 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="bool isTrue = currentChar == 't'", span="763-763"];
m17_432 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="785-785"];
m17_441 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="!char.IsWhiteSpace(currentChar)", span="800-800"];
m17_442 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="802-802"];
m17_385 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'\0'", span="721-721"];
m17_389 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="''''", span="728-728"];
m17_393 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'n'", span="732-732"];
m17_396 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'-'", span="735-735"];
m17_415 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'t'", span="761-761"];
m17_423 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'/'", span="772-772"];
m17_425 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="','", span="775-775"];
m17_427 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="']'", span="778-778"];
m17_433 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="786-786"];
m17_435 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="789-789"];
m17_437 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="' '", span="792-792"];
m17_440 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="_charPos++", span="798-798"];
m17_386 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="ReadNullChar()", span="722-722"];
m17_387 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.None, null, false)", span="724-724"];
m17_388 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="return null;", span="725-725"];
m17_390 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'\''", span="729-729"];
m17_392 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="return ReadBooleanString(_stringReference.ToString());", span="731-731"];
m17_394 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="HandleNull()", span="733-733"];
m17_395 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="return null;", span="734-734"];
m17_397 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'.'", span="736-736"];
m17_398 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'0'", span="737-737"];
m17_399 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'1'", span="738-738"];
m17_400 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'2'", span="739-739"];
m17_401 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'3'", span="740-740"];
m17_402 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'4'", span="741-741"];
m17_403 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'5'", span="742-742"];
m17_404 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'6'", span="743-743"];
m17_405 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'7'", span="744-744"];
m17_406 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'8'", span="745-745"];
m17_407 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'9'", span="746-746"];
m17_408 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="ParseNumber(ReadType.Read)", span="747-747"];
m17_409 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="bool b", span="748-748"];
m17_410 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="Value is BigInteger", span="750-750"];
m17_411 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="b = (BigInteger)Value != 0", span="752-752"];
m17_412 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="757-757"];
m17_413 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Boolean, b, false)", span="759-759"];
m17_414 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="return b;", span="760-760"];
m17_416 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="'f'", span="762-762"];
m17_418 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="string expected = isTrue ? JsonConvert.True : JsonConvert.False", span="764-764"];
m17_421 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Boolean, isTrue)", span="770-770"];
m17_422 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="return isTrue;", span="771-771"];
m17_419 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="!MatchValueWithTrailingSeparator(expected)", span="766-766"];
m17_420 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="768-768"];
m17_424 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="ParseComment(false)", span="773-773"];
m17_426 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="ProcessValueComma()", span="776-776"];
m17_428 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="_charPos++", span="779-779"];
m17_429 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="780-780"];
m17_430 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndArray)", span="782-782"];
m17_431 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="return null;", span="783-783"];
m17_434 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(false)", span="787-787"];
m17_436 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="790-790"];
m17_438 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="StringUtils.Tab", span="793-793"];
m17_439 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="_charPos++", span="795-795"];
m17_444 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="ReadFinished()", span="810-810"];
m17_445 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="return null;", span="811-811"];
m17_447 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702"];
m17_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonValidatingReader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m17_670 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", span="70-70"];
m17_686 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242"];
m17_687 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="int charPos = _charPos", span="1244-1244"];
m17_688 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label=true, span="1246-1246"];
m17_689 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="_chars[charPos]", span="1248-1248"];
m17_691 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="_charPos = charPos", span="1251-1251"];
m17_692 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="_charsUsed == charPos", span="1253-1253"];
m17_723 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="charPos++", span="1292-1292"];
m17_690 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'\0'", span="1250-1250"];
m17_696 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'-'", span="1265-1265"];
m17_724 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="_charPos = charPos", span="1295-1295"];
m17_693 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="ReadData(true) == 0", span="1255-1255"];
m17_695 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="return;", span="1262-1262"];
m17_694 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="return;", span="1257-1257"];
m17_697 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'+'", span="1266-1266"];
m17_698 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'a'", span="1267-1267"];
m17_699 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'A'", span="1268-1268"];
m17_700 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'b'", span="1269-1269"];
m17_701 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'B'", span="1270-1270"];
m17_702 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'c'", span="1271-1271"];
m17_703 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'C'", span="1272-1272"];
m17_704 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'d'", span="1273-1273"];
m17_705 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'D'", span="1274-1274"];
m17_706 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'e'", span="1275-1275"];
m17_707 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'E'", span="1276-1276"];
m17_708 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'f'", span="1277-1277"];
m17_709 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'F'", span="1278-1278"];
m17_710 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'x'", span="1279-1279"];
m17_711 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'X'", span="1280-1280"];
m17_712 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'.'", span="1281-1281"];
m17_713 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'0'", span="1282-1282"];
m17_714 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'1'", span="1283-1283"];
m17_715 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'2'", span="1284-1284"];
m17_716 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'3'", span="1285-1285"];
m17_717 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'4'", span="1286-1286"];
m17_718 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'5'", span="1287-1287"];
m17_719 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'6'", span="1288-1288"];
m17_720 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'7'", span="1289-1289"];
m17_721 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'8'", span="1290-1290"];
m17_722 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="'9'", span="1291-1291"];
m17_725 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="1297-1297"];
m17_726 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ',' || currentChar == '}' || currentChar == ']' || currentChar == ')' || currentChar == '/'", span="1298-1298"];
m17_728 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing number: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1303-1303"];
m17_727 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="return;", span="1300-1300"];
m17_729 [cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242"];
m17_258 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974"];
m17_546 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="EnsureChars(1, true)", span="976-976"];
m17_547 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="char next = _chars[_charPos + 1]", span="978-978"];
m17_553 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="_charPos = _charsUsed", span="990-990"];
m17_548 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="next == 'u'", span="980-980"];
m17_549 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="ParseNull()", span="982-982"];
m17_551 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="_charPos += 2", span="986-986"];
m17_550 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="return;", span="983-983"];
m17_552 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos - 1]);", span="987-987"];
m17_554 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedEndException();", span="991-991"];
m17_555 [cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974"];
m17_174 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="946-946"];
m17_933 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2303-2303"];
m17_1221 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.Undefined)", span="2305-2305"];
m17_1222 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Undefined)", span="2307-2307"];
m17_1223 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="2311-2311"];
m17_1224 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2303-2303"];
m17_666 [cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="269-269"];
m17_1170 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2196-2196"];
m17_1171 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="!EnsureChars(value.Length - 1, true)", span="2198-2198"];
m17_1175 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="i < value.Length", span="2204-2204"];
m17_1176 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="_chars[_charPos + i] != value[i]", span="2206-2206"];
m17_1180 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="_charPos += value.Length", span="2213-2213"];
m17_1172 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="_charPos = _charsUsed", span="2200-2200"];
m17_1174 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="int i = 0", span="2204-2204"];
m17_1173 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="throw CreateUnexpectedEndException();", span="2201-2201"];
m17_1177 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="_charPos += i", span="2208-2208"];
m17_1179 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="i++", span="2204-2204"];
m17_1178 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="return false;", span="2209-2209"];
m17_1181 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="return true;", span="2215-2215"];
m17_1182 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2196-2196"];
m17_537 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950"];
m17_538 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs", label="return (DateTimeOffset?)ReadStringValue(ReadType.ReadAsDateTimeOffset);", span="952-952"];
m17_539 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950"];
m17_540 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960"];
m17_541 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonValidatingReader.cs", label="return (decimal?)ReadNumberValue(ReadType.ReadAsDecimal);", span="962-962"];
m17_542 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960"];
m17_361 [cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="808-808"];
m17_7 [cluster="Unk.nameof", file="JsonValidatingReader.cs", label="Entry Unk.nameof", span=""];
m17_449 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonValidatingReader.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m17_119 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonValidatingReader.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m17_72 [cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="JsonValidatingReader.cs", label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0"];
m17_366 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2218-2218"];
m17_1183 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs", label="bool match = MatchValue(value)", span="2221-2221"];
m17_1184 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs", label="!match", span="2223-2223"];
m17_1185 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs", label="return false;", span="2225-2225"];
m17_1186 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs", label="!EnsureChars(0, false)", span="2228-2228"];
m17_1187 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs", label="return true;", span="2230-2230"];
m17_1188 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs", label="return IsSeparator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="2233-2233"];
m17_1189 [cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2218-2218"];
m17_368 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2352-2352"];
m17_1242 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.PositiveInfinity)", span="2354-2354"];
m17_1243 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=readType, span="2356-2356"];
m17_1253 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing Infinity value.'');", span="2374-2374"];
m17_1244 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.Read", span="2358-2358"];
m17_1249 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsString", span="2366-2366"];
m17_1245 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsDouble", span="2359-2359"];
m17_1246 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_floatParseHandling == FloatParseHandling.Double", span="2360-2360"];
m17_1247 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="2362-2362"];
m17_1252 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Cannot read Infinity value.'');", span="2371-2371"];
m17_1248 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return double.PositiveInfinity;", span="2363-2363"];
m17_1250 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.String, JsonConvert.PositiveInfinity)", span="2367-2367"];
m17_1251 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return JsonConvert.PositiveInfinity;", span="2368-2368"];
m17_1254 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2352-2352"];
m17_1278 [cluster="System.IO.TextReader.Close()", file="JsonValidatingReader.cs", label="Entry System.IO.TextReader.Close()", span="0-0"];
m17_262 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666"];
m17_935 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonValidatingReader.cs", label="_charPos++", span="1668-1668"];
m17_936 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonValidatingReader.cs", label="OnNewLine(_charPos)", span="1669-1669"];
m17_937 [cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666"];
m17_369 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2377-2377"];
m17_1255 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.NaN)", span="2379-2379"];
m17_1256 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=readType, span="2381-2381"];
m17_1266 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="2399-2399"];
m17_1257 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.Read", span="2383-2383"];
m17_1262 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsString", span="2391-2391"];
m17_1258 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadType.ReadAsDouble", span="2384-2384"];
m17_1259 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_floatParseHandling == FloatParseHandling.Double", span="2385-2385"];
m17_1260 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Float, double.NaN)", span="2387-2387"];
m17_1265 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Cannot read NaN value.'');", span="2396-2396"];
m17_1261 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return double.NaN;", span="2388-2388"];
m17_1263 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.String, JsonConvert.NaN)", span="2392-2392"];
m17_1264 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="return JsonConvert.NaN;", span="2393-2393"];
m17_1267 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2377-2377"];
m17_0 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m17_1 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs", label="reader == null", span="80-80"];
m17_2 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs", label="throw new ArgumentNullException(nameof(reader));", span="82-82"];
m17_3 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs", label="_reader = reader", span="85-85"];
m17_4 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs", label="_lineNumber = 1", span="86-86"];
m17_5 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78"];
m17_1165 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2188-2188"];
m17_1166 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonValidatingReader.cs", label=setToken, span="2190-2190"];
m17_1167 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Comment, new string(_chars, initialPosition, endPosition - initialPosition))", span="2192-2192"];
m17_1168 [cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2188-2188"];
m17_66 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="343-343"];
m17_116 [cluster="System.Math.Max(int, int)", file="JsonValidatingReader.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m17_1279 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", span="82-82"];
m17_535 [cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="758-758"];
m17_1190 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2236-2236"];
m17_1191 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label=c, span="2238-2238"];
m17_1209 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="char.IsWhiteSpace(c)", span="2266-2266"];
m17_1192 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="'}'", span="2240-2240"];
m17_1196 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="'/'", span="2244-2244"];
m17_1201 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="')'", span="2254-2254"];
m17_1204 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="' '", span="2260-2260"];
m17_1193 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="']'", span="2241-2241"];
m17_1194 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="','", span="2242-2242"];
m17_1195 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="return true;", span="2243-2243"];
m17_1197 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="!EnsureChars(1, false)", span="2246-2246"];
m17_1198 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="return false;", span="2248-2248"];
m17_1199 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="var nextChart = _chars[_charPos + 1]", span="2251-2251"];
m17_1200 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="return (nextChart == '*' || nextChart == '/');", span="2253-2253"];
m17_1202 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="2255-2255"];
m17_1203 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="return true;", span="2257-2257"];
m17_1211 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="return false;", span="2273-2273"];
m17_1205 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="StringUtils.Tab", span="2261-2261"];
m17_1206 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="2262-2262"];
m17_1207 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="2263-2263"];
m17_1208 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="return true;", span="2264-2264"];
m17_1210 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="return true;", span="2268-2268"];
m17_1212 [cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2236-2236"];
m17_13 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121"];
m17_14 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonValidatingReader.cs", label="_lineNumber++", span="123-123"];
m17_15 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonValidatingReader.cs", label="_lineStartPos = pos", span="124-124"];
m17_16 [cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121"];
m17_1113 [cluster="System.Convert.ToDouble(long)", file="JsonValidatingReader.cs", label="Entry System.Convert.ToDouble(long)", span="0-0"];
m17_176 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonValidatingReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m17_734 [cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="29-29"];
m17_256 [cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="903-903"];
m17_536 [cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="647-647"];
m17_12 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="48-48"];
m17_67 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="416-416"];
m17_261 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672"];
m17_938 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="1674-1674"];
m17_939 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs", label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1676-1676"];
m17_940 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="1678-1678"];
m17_941 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs", label="OnNewLine(_charPos)", span="1681-1681"];
m17_942 [cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672"];
m17_125 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327"];
m17_126 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label=_isEndOfFile, span="329-329"];
m17_128 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="334-334"];
m17_130 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="342-342"];
m17_127 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="return false;", span="331-331"];
m17_129 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="int totalCharsRead = 0", span="336-336"];
m17_133 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="totalCharsRead < charsRequired", span="351-351"];
m17_134 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="totalCharsRead < charsRequired", span="353-353"];
m17_132 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="totalCharsRead += charsRead", span="350-350"];
m17_131 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="charsRead == 0", span="345-345"];
m17_135 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="return false;", span="355-355"];
m17_136 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="return true;", span="357-357"];
m17_137 [cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327"];
m17_1104 [cluster="char.IsDigit(char)", file="JsonValidatingReader.cs", label="Entry char.IsDigit(char)", span="0-0"];
m17_255 [cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="890-890"];
m17_930 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2276-2276"];
m17_1213 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs", label="MatchValueWithTrailingSeparator(JsonConvert.True)", span="2281-2281"];
m17_1214 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Boolean, true)", span="2283-2283"];
m17_1215 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2287-2287"];
m17_1216 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2276-2276"];
m17_62 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="1359-1359"];
m17_8 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113"];
m17_9 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonValidatingReader.cs", label="_stringBuffer.IsEmpty", span="115-115"];
m17_10 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonValidatingReader.cs", label="_stringBuffer = new StringBuffer(_arrayPool, 1024)", span="117-117"];
m17_11 [cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113"];
m17_1109 [cluster="System.Convert.ToInt32(string, int)", file="JsonValidatingReader.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m17_1169 [cluster="string.String(char[], int, int)", file="JsonValidatingReader.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m17_68 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213"];
m17_69 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonValidatingReader.cs", label="int charByteCount = 2", span="215-215"];
m17_70 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonValidatingReader.cs", label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="217-217"];
m17_71 [cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213"];
m17_685 [cluster="System.Convert.ToChar(int)", file="JsonValidatingReader.cs", label="Entry System.Convert.ToChar(int)", span="0-0"];
m17_58 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220"];
m17_73 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="int length = _chars.Length", span="224-224"];
m17_74 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="length - _charPos <= length * 0.1", span="225-225"];
m17_75 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="int count = _charsUsed - _charPos", span="227-227"];
m17_76 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="count > 0", span="228-228"];
m17_77 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="230-230"];
m17_80 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="_charsUsed = count", span="235-235"];
m17_78 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="_lineStartPos -= _charPos", span="233-233"];
m17_79 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="_charPos = 0", span="234-234"];
m17_81 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="_chars[_charsUsed] = '\0'", span="236-236"];
m17_82 [cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220"];
m17_260 [cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693"];
m17_370 [cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonValidatingReader.cs", label="return JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, c));", span="695-695"];
m17_371 [cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693"];
m17_177 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108"];
m17_1107 [cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", span="2078-2078"];
m17_1117 [cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Undefined, null, false)", span="2080-2080"];
m17_1118 [cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonValidatingReader.cs", label="return JsonReaderException.Create(this, message, ex);", span="2081-2081"];
m17_1119 [cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", span="2078-2078"];
m17_730 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308"];
m17_731 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonValidatingReader.cs", label="_stringBuffer.Position = 0", span="1310-1310"];
m17_732 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonValidatingReader.cs", label="_stringReference = new StringReference()", span="1311-1311"];
m17_733 [cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308"];
m17_264 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994"];
m17_558 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label="EnsureChars(0, false)", span="996-996"];
m17_559 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label="EatWhitespace(false)", span="998-998"];
m17_565 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.None)", span="1013-1013"];
m17_560 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label=_isEndOfFile, span="999-999"];
m17_561 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label="return;", span="1001-1001"];
m17_562 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label="_chars[_charPos] == '/'", span="1003-1003"];
m17_563 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label="ParseComment(false)", span="1005-1005"];
m17_564 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1009-1009"];
m17_566 [cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994"];
m17_64 [cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonValidatingReader.cs", label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0"];
m17_175 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2096-2096"];
m17_1124 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="2099-2099"];
m17_1142 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="EndComment(setToken, initialPosition, _charPos)", span="2139-2139"];
m17_1150 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="EndComment(setToken, initialPosition, _charPos - 1)", span="2157-2157"];
m17_1155 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="EndComment(setToken, initialPosition, _charPos)", span="2168-2168"];
m17_1160 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="EndComment(setToken, initialPosition, _charPos)", span="2176-2176"];
m17_1125 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="!EnsureChars(1, false)", span="2101-2101"];
m17_1126 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2103-2103"];
m17_1127 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="bool singlelineComment", span="2106-2106"];
m17_1128 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_chars[_charPos] == '*'", span="2108-2108"];
m17_1140 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="!singlelineComment", span="2134-2134"];
m17_1147 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="!singlelineComment", span="2151-2151"];
m17_1154 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label=singlelineComment, span="2166-2166"];
m17_1159 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label=singlelineComment, span="2174-2174"];
m17_1129 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="singlelineComment = false", span="2110-2110"];
m17_1130 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_chars[_charPos] == '/'", span="2112-2112"];
m17_1131 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="singlelineComment = true", span="2114-2114"];
m17_1132 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="2118-2118"];
m17_1133 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="2121-2121"];
m17_1134 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="int initialPosition = _charPos", span="2123-2123"];
m17_1135 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label=true, span="2125-2125"];
m17_1136 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_chars[_charPos]", span="2127-2127"];
m17_1137 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="'\0'", span="2129-2129"];
m17_1145 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="'*'", span="2148-2148"];
m17_1153 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="2165-2165"];
m17_1158 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="2173-2173"];
m17_1163 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="2182-2182"];
m17_1138 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_charsUsed == _charPos", span="2130-2130"];
m17_1139 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="ReadData(true) == 0", span="2132-2132"];
m17_1144 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="2145-2145"];
m17_1141 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2136-2136"];
m17_1143 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="return;", span="2140-2140"];
m17_1146 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="2149-2149"];
m17_1148 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="EnsureChars(0, true)", span="2153-2153"];
m17_1149 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_chars[_charPos] == '/'", span="2155-2155"];
m17_1151 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="2159-2159"];
m17_1152 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="return;", span="2160-2160"];
m17_1157 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(true)", span="2171-2171"];
m17_1156 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="return;", span="2169-2169"];
m17_1162 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="2179-2179"];
m17_1161 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="return;", span="2177-2177"];
m17_1164 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2096-2096"];
m17_60 [cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="1008-1008"];
m17_1108 [cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonValidatingReader.cs", label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0"];
m17_59 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043"];
m17_578 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="int charPos = _charPos", span="1045-1045"];
m17_589 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1062-1062"];
m17_593 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1070-1070"];
m17_653 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_chars[charPos - 1] == quote", span="1186-1186"];
m17_579 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="int initialPosition = _charPos", span="1046-1046"];
m17_583 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_chars[charPos++]", span="1052-1052"];
m17_580 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="int lastWritePosition = _charPos", span="1047-1047"];
m17_655 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="initialPosition == lastWritePosition", span="1190-1190"];
m17_656 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="1192-1192"];
m17_581 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_stringBuffer.Position = 0", span="1048-1048"];
m17_633 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="WriteCharToBuffer(highSurrogate, lastWritePosition, escapeStartPos)", span="1150-1150"];
m17_641 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="WriteCharToBuffer(writeChar, lastWritePosition, escapeStartPos)", span="1170-1170"];
m17_582 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label=true, span="1050-1050"];
m17_584 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'\0'", span="1054-1054"];
m17_590 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'\\'", span="1066-1066"];
m17_643 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="1174-1174"];
m17_647 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="1179-1179"];
m17_651 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="''''", span="1184-1184"];
m17_585 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_charsUsed == charPos - 1", span="1055-1055"];
m17_586 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="charPos--", span="1057-1057"];
m17_591 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_charPos = charPos", span="1067-1067"];
m17_594 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="int escapeStartPos = charPos - 1", span="1074-1074"];
m17_595 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="char currentChar = _chars[charPos]", span="1076-1076"];
m17_596 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="charPos++", span="1077-1077"];
m17_587 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="ReadData(true) == 0", span="1059-1059"];
m17_588 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_charPos = charPos", span="1061-1061"];
m17_592 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="!EnsureChars(0, true)", span="1068-1068"];
m17_598 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label=currentChar, span="1081-1081"];
m17_614 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = currentChar", span="1104-1104"];
m17_639 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="1166-1166"];
m17_597 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="char writeChar", span="1079-1079"];
m17_616 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_charPos = charPos", span="1107-1107"];
m17_599 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'b'", span="1083-1083"];
m17_601 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'t'", span="1086-1086"];
m17_603 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'n'", span="1089-1089"];
m17_605 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'f'", span="1092-1092"];
m17_607 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'r'", span="1095-1095"];
m17_609 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'\\'", span="1098-1098"];
m17_611 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="''''", span="1101-1101"];
m17_615 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'u'", span="1106-1106"];
m17_638 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_charPos = charPos", span="1165-1165"];
m17_600 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = '\b'", span="1084-1084"];
m17_602 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = '\t'", span="1087-1087"];
m17_604 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = '\n'", span="1090-1090"];
m17_606 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = '\f'", span="1093-1093"];
m17_608 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = '\r'", span="1096-1096"];
m17_610 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = '\\'", span="1099-1099"];
m17_612 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'\''", span="1102-1102"];
m17_613 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'/'", span="1103-1103"];
m17_617 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = ParseUnicode()", span="1108-1108"];
m17_618 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="1110-1110"];
m17_620 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="1115-1115"];
m17_624 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="char highSurrogate = writeChar", span="1127-1127"];
m17_619 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = UnicodeReplacementChar", span="1113-1113"];
m17_621 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="bool anotherHighSurrogate", span="1117-1117"];
m17_637 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="charPos = _charPos", span="1162-1162"];
m17_622 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="anotherHighSurrogate = false", span="1122-1122"];
m17_623 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="1125-1125"];
m17_636 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label=anotherHighSurrogate, span="1159-1159"];
m17_635 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = UnicodeReplacementChar", span="1157-1157"];
m17_625 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_charPos += 2", span="1129-1129"];
m17_626 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="writeChar = ParseUnicode()", span="1130-1130"];
m17_627 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="StringUtils.IsLowSurrogate(writeChar)", span="1132-1132"];
m17_628 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="StringUtils.IsHighSurrogate(writeChar)", span="1136-1136"];
m17_632 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="EnsureBufferNotEmpty()", span="1148-1148"];
m17_629 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="highSurrogate = UnicodeReplacementChar", span="1139-1139"];
m17_631 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="highSurrogate = UnicodeReplacementChar", span="1145-1145"];
m17_630 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="anotherHighSurrogate = true", span="1140-1140"];
m17_634 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="lastWritePosition = _charPos", span="1151-1151"];
m17_640 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="EnsureBufferNotEmpty()", span="1169-1169"];
m17_642 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="lastWritePosition = charPos", span="1172-1172"];
m17_644 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_charPos = charPos - 1", span="1175-1175"];
m17_645 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(true)", span="1176-1176"];
m17_646 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="charPos = _charPos", span="1177-1177"];
m17_648 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_charPos = charPos - 1", span="1180-1180"];
m17_649 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="1181-1181"];
m17_650 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="charPos = _charPos", span="1182-1182"];
m17_652 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="'\''", span="1185-1185"];
m17_654 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="charPos--", span="1188-1188"];
m17_658 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="charPos > lastWritePosition", span="1198-1198"];
m17_659 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, charPos - lastWritePosition)", span="1200-1200"];
m17_661 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="charPos++", span="1206-1206"];
m17_657 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="EnsureBufferNotEmpty()", span="1196-1196"];
m17_660 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_stringReference = new StringReference(_stringBuffer.InternalBuffer, 0, _stringBuffer.Position)", span="1203-1203"];
m17_662 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="_charPos = charPos", span="1207-1207"];
m17_663 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="return;", span="1208-1208"];
m17_664 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043"];
m17_172 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314"];
m17_735 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label=true, span="1316-1316"];
m17_736 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="1318-1318"];
m17_737 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label=currentChar, span="1320-1320"];
m17_770 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="char.IsWhiteSpace(currentChar)", span="1369-1369"];
m17_772 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1376-1376"];
m17_738 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="'\0'", span="1322-1322"];
m17_744 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="'}'", span="1336-1336"];
m17_748 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="']'", span="1340-1340"];
m17_752 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="')'", span="1344-1344"];
m17_756 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="'/'", span="1348-1348"];
m17_759 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="','", span="1351-1351"];
m17_763 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="' '", span="1357-1357"];
m17_766 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="1362-1362"];
m17_768 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="1365-1365"];
m17_739 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="_charsUsed == _charPos", span="1323-1323"];
m17_740 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="ReadData(false) == 0", span="1325-1325"];
m17_743 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1333-1333"];
m17_741 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="_currentState = State.Finished", span="1327-1327"];
m17_742 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="return false;", span="1328-1328"];
m17_745 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1337-1337"];
m17_746 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndObject)", span="1338-1338"];
m17_747 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="return true;", span="1339-1339"];
m17_749 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1341-1341"];
m17_750 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndArray)", span="1342-1342"];
m17_751 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="return true;", span="1343-1343"];
m17_753 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1345-1345"];
m17_754 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndConstructor)", span="1346-1346"];
m17_755 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="return true;", span="1347-1347"];
m17_757 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="ParseComment(true)", span="1349-1349"];
m17_758 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="return true;", span="1350-1350"];
m17_760 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1352-1352"];
m17_761 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="SetStateBasedOnCurrent()", span="1355-1355"];
m17_762 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="return false;", span="1356-1356"];
m17_764 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="StringUtils.Tab", span="1358-1358"];
m17_765 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1360-1360"];
m17_767 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(false)", span="1363-1363"];
m17_769 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="1366-1366"];
m17_771 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1372-1372"];
m17_773 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314"];
m17_254 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016"];
m17_567 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs", label="_charsUsed == _charPos", span="1018-1018"];
m17_568 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs", label="ReadData(false) == 0", span="1020-1020"];
m17_571 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs", label="_charPos++", span="1028-1028"];
m17_569 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs", label="_isEndOfFile = true", span="1022-1022"];
m17_572 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs", label="return false;", span="1031-1031"];
m17_570 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs", label="return true;", span="1023-1023"];
m17_573 [cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016"];
m17_61 [cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="62-62"];
m17_1116 [cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2090-2090"];
m17_1121 [cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonValidatingReader.cs", label="return System.Numerics.BigInteger.Parse(number, culture);", span="2092-2092"];
m17_1122 [cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2090-2090"];
m17_833 [cluster="char.IsLetterOrDigit(char)", file="JsonValidatingReader.cs", label="Entry char.IsLetterOrDigit(char)", span="0-0"];
m17_534 [cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="442-442"];
m17_173 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684"];
m17_943 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="bool finished = false", span="1686-1686"];
m17_961 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="return (!oneOrMore || ateWhitespace);", span="1727-1727"];
m17_944 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="bool ateWhitespace = false", span="1687-1687"];
m17_945 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="!finished", span="1688-1688"];
m17_946 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="1690-1690"];
m17_947 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label=currentChar, span="1692-1692"];
m17_957 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1714-1714"];
m17_948 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="'\0'", span="1694-1694"];
m17_953 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="1707-1707"];
m17_955 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="1710-1710"];
m17_949 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="_charsUsed == _charPos", span="1695-1695"];
m17_950 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="ReadData(false) == 0", span="1697-1697"];
m17_952 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="1704-1704"];
m17_951 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="finished = true", span="1699-1699"];
m17_954 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(false)", span="1708-1708"];
m17_956 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="1711-1711"];
m17_958 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="ateWhitespace = true", span="1716-1716"];
m17_960 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="finished = true", span="1721-1721"];
m17_959 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="_charPos++", span="1717-1717"];
m17_962 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684"];
m17_934 [cluster="char.IsNumber(char)", file="JsonValidatingReader.cs", label="Entry char.IsNumber(char)", span="0-0"];
m17_257 [cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="582-582"];
m17_120 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317"];
m17_121 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs", label="_charPos + relativePosition >= _charsUsed", span="319-319"];
m17_122 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs", label="return ReadChars(relativePosition, append);", span="321-321"];
m17_123 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs", label="return true;", span="324-324"];
m17_124 [cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317"];
m17_182 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430"];
m17_183 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonValidatingReader.cs", label="return (DateTime?)ReadStringValue(ReadType.ReadAsDateTime);", span="432-432"];
m17_184 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430"];
m17_117 [cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43"];
m17_86 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245"];
m17_87 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label=_isEndOfFile, span="247-247"];
m17_89 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="_charsUsed + charsRequired >= _chars.Length - 1", span="253-253"];
m17_90 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label=append, span="255-255"];
m17_91 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="258-258"];
m17_97 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="273-273"];
m17_98 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="char[] dst = BufferUtils.RentBuffer(_arrayPool, remainingCharCount + charsRequired + 1)", span="276-276"];
m17_88 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="return 0;", span="249-249"];
m17_108 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="302-302"];
m17_96 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="int remainingCharCount = _charsUsed - _charPos", span="271-271"];
m17_92 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="char[] dst = BufferUtils.RentBuffer(_arrayPool, newArrayLength)", span="261-261"];
m17_93 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="263-263"];
m17_95 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="_chars = dst", span="267-267"];
m17_94 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="265-265"];
m17_99 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="remainingCharCount > 0", span="278-278"];
m17_100 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="280-280"];
m17_103 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="remainingCharCount > 0", span="290-290"];
m17_104 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="292-292"];
m17_107 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="_charsUsed = remainingCharCount", span="298-298"];
m17_102 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="_chars = dst", span="285-285"];
m17_101 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="283-283"];
m17_105 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="_lineStartPos -= _charPos", span="296-296"];
m17_106 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="_charPos = 0", span="297-297"];
m17_109 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="304-304"];
m17_110 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="_charsUsed += charsRead", span="306-306"];
m17_111 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="charsRead == 0", span="308-308"];
m17_114 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="return charsRead;", span="314-314"];
m17_112 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="_isEndOfFile = true", span="310-310"];
m17_113 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="_chars[_charsUsed] = '\0'", span="313-313"];
m17_115 [cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245"];
m17_63 [cluster="System.Guid.ToByteArray()", file="JsonValidatingReader.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m17_456 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1055-1055"];
m17_363 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="JsonValidatingReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m17_65 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="961-961"];
m17_259 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817"];
m17_450 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs", label="_charPos++", span="819-819"];
m17_451 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs", label="_currentState != State.PostValue", span="821-821"];
m17_452 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Undefined)", span="823-823"];
m17_454 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs", label="SetStateBasedOnCurrent()", span="827-827"];
m17_453 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(',');", span="824-824"];
m17_455 [cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817"];
m17_665 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225"];
m17_676 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs", label="char writeChar", span="1227-1227"];
m17_677 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs", label="EnsureChars(4, true)", span="1228-1228"];
m17_682 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs", label="return writeChar;", span="1239-1239"];
m17_678 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs", label="char hexChar = Convert.ToChar(ConvertUtils.HexTextToInt(_chars, _charPos, _charPos + 4))", span="1230-1230"];
m17_681 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="1237-1237"];
m17_679 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs", label="writeChar = hexChar", span="1231-1231"];
m17_680 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs", label="_charPos += 4", span="1233-1233"];
m17_683 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225"];
m17_170 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539"];
m17_851 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label=true, span="1541-1541"];
m17_852 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="1543-1543"];
m17_853 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label=currentChar, span="1545-1545"];
m17_861 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseString(currentChar, ReadType.Read)", span="1562-1562"];
m17_923 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="char.IsWhiteSpace(currentChar)", span="1649-1649"];
m17_925 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1655-1655"];
m17_928 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(currentChar);", span="1661-1661"];
m17_854 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'\0'", span="1547-1547"];
m17_859 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="''''", span="1560-1560"];
m17_863 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'t'", span="1564-1564"];
m17_866 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'f'", span="1567-1567"];
m17_869 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'n'", span="1570-1570"];
m17_880 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'N'", span="1594-1594"];
m17_883 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'I'", span="1597-1597"];
m17_886 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'-'", span="1600-1600"];
m17_891 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'/'", span="1610-1610"];
m17_894 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'u'", span="1613-1613"];
m17_897 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'{'", span="1616-1616"];
m17_901 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'['", span="1620-1620"];
m17_905 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="']'", span="1624-1624"];
m17_909 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="','", span="1628-1628"];
m17_912 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="')'", span="1633-1633"];
m17_916 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="1637-1637"];
m17_918 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="1640-1640"];
m17_920 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="' '", span="1643-1643"];
m17_855 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="_charsUsed == _charPos", span="1548-1548"];
m17_856 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ReadData(false) == 0", span="1550-1550"];
m17_858 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1557-1557"];
m17_857 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return false;", span="1552-1552"];
m17_860 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="'\''", span="1561-1561"];
m17_862 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1563-1563"];
m17_864 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseTrue()", span="1565-1565"];
m17_865 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1566-1566"];
m17_867 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseFalse()", span="1568-1568"];
m17_868 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1569-1569"];
m17_870 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="EnsureChars(1, true)", span="1571-1571"];
m17_871 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="char next = _chars[_charPos + 1]", span="1573-1573"];
m17_877 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1590-1590"];
m17_872 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="next == 'u'", span="1575-1575"];
m17_874 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="next == 'e'", span="1579-1579"];
m17_873 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseNull()", span="1577-1577"];
m17_875 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseConstructor()", span="1581-1581"];
m17_876 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="1585-1585"];
m17_878 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="throw CreateUnexpectedEndException();", span="1591-1591"];
m17_879 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1593-1593"];
m17_881 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseNumberNaN(ReadType.Read)", span="1595-1595"];
m17_882 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1596-1596"];
m17_884 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseNumberPositiveInfinity(ReadType.Read)", span="1598-1598"];
m17_885 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1599-1599"];
m17_887 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="1601-1601"];
m17_888 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseNumberNegativeInfinity(ReadType.Read)", span="1603-1603"];
m17_889 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseNumber(ReadType.Read)", span="1607-1607"];
m17_890 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1609-1609"];
m17_892 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseComment(true)", span="1611-1611"];
m17_893 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1612-1612"];
m17_895 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseUndefined()", span="1614-1614"];
m17_896 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1615-1615"];
m17_898 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1617-1617"];
m17_899 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.StartObject)", span="1618-1618"];
m17_900 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1619-1619"];
m17_902 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1621-1621"];
m17_903 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.StartArray)", span="1622-1622"];
m17_904 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1623-1623"];
m17_906 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1625-1625"];
m17_907 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndArray)", span="1626-1626"];
m17_908 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1627-1627"];
m17_910 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.Undefined)", span="1631-1631"];
m17_911 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1632-1632"];
m17_913 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1634-1634"];
m17_914 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndConstructor)", span="1635-1635"];
m17_915 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1636-1636"];
m17_917 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(false)", span="1638-1638"];
m17_919 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="1641-1641"];
m17_921 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="StringUtils.Tab", span="1644-1644"];
m17_922 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1646-1646"];
m17_924 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="_charPos++", span="1652-1652"];
m17_926 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="ParseNumber(ReadType.Read)", span="1657-1657"];
m17_927 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="return true;", span="1658-1658"];
m17_929 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539"];
m17_365 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813"];
m17_999 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ShiftBufferIfNeeded()", span="1815-1815"];
m17_1009 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="readType == ReadType.ReadAsString", span="1833-1833"];
m17_1022 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="readType == ReadType.ReadAsInt32", span="1868-1868"];
m17_1039 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="readType == ReadType.ReadAsDecimal", span="1910-1910"];
m17_1054 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="readType == ReadType.ReadAsDouble", span="1950-1950"];
m17_1000 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="char firstChar = _chars[_charPos]", span="1817-1817"];
m17_1001 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="int initialPosition = _charPos", span="1818-1818"];
m17_1007 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1830-1830"];
m17_1008 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1 && _stringReference.Chars[_stringReference.StartIndex + 1] != '.' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1831-1831"];
m17_1024 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = firstChar - 48", span="1873-1873"];
m17_1041 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = (decimal)firstChar - 48", span="1915-1915"];
m17_1056 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = (double)firstChar - 48", span="1955-1955"];
m17_1070 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = (long)firstChar - 48", span="1994-1994"];
m17_1002 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ReadNumberIntoBuffer()", span="1820-1820"];
m17_1004 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1825-1825"];
m17_1003 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetPostValueState(true)", span="1823-1823"];
m17_1005 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="object numberValue", span="1827-1827"];
m17_1006 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="JsonToken numberType", span="1828-1828"];
m17_1102 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="SetToken(numberType, numberValue, false)", span="2075-2075"];
m17_1023 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=singleDigit, span="1870-1870"];
m17_1040 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=singleDigit, span="1912-1912"];
m17_1055 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=singleDigit, span="1952-1952"];
m17_1069 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=singleDigit, span="1991-1991"];
m17_1011 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=nonBase10, span="1838-1838"];
m17_1025 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=nonBase10, span="1875-1875"];
m17_1042 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=nonBase10, span="1917-1917"];
m17_1057 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=nonBase10, span="1957-1957"];
m17_1072 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=nonBase10, span="1997-1997"];
m17_1010 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string number = _stringReference.ToString()", span="1835-1835"];
m17_1012 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)", span="1842-1842"];
m17_1013 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Convert.ToInt64(number, 16)", span="1844-1844"];
m17_1014 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Convert.ToInt64(number, 8)", span="1848-1848"];
m17_1016 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1853-1853"];
m17_1018 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="!double.TryParse(number, NumberStyles.Float, CultureInfo.InvariantCulture, out value)", span="1859-1859"];
m17_1021 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = number", span="1866-1866"];
m17_1017 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="double value", span="1858-1858"];
m17_1015 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=Exception, span="1851-1851"];
m17_1020 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberType = JsonToken.String", span="1865-1865"];
m17_1019 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1861-1861"];
m17_1026 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string number = _stringReference.ToString()", span="1877-1877"];
m17_1031 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="int value", span="1892-1892"];
m17_1027 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt32(number, 16) : Convert.ToInt32(number, 8)", span="1881-1881"];
m17_1030 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1887-1887"];
m17_1028 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = integer", span="1883-1883"];
m17_1029 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=Exception, span="1885-1885"];
m17_1038 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberType = JsonToken.Integer", span="1908-1908"];
m17_1032 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1893-1893"];
m17_1033 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="parseResult == ParseResult.Success", span="1894-1894"];
m17_1034 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = value", span="1896-1896"];
m17_1035 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="parseResult == ParseResult.Overflow", span="1898-1898"];
m17_1036 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1900-1900"];
m17_1037 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1904-1904"];
m17_1043 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string number = _stringReference.ToString()", span="1919-1919"];
m17_1048 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string number = _stringReference.ToString()", span="1935-1935"];
m17_1044 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1924-1924"];
m17_1047 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1930-1930"];
m17_1045 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = Convert.ToDecimal(integer)", span="1926-1926"];
m17_1046 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=Exception, span="1928-1928"];
m17_1053 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberType = JsonToken.Float", span="1948-1948"];
m17_1049 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="decimal value", span="1937-1937"];
m17_1050 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1938-1938"];
m17_1051 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = value", span="1940-1940"];
m17_1052 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1944-1944"];
m17_1058 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string number = _stringReference.ToString()", span="1959-1959"];
m17_1063 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="double value", span="1975-1975"];
m17_1059 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1964-1964"];
m17_1062 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1970-1970"];
m17_1060 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = Convert.ToDouble(integer)", span="1966-1966"];
m17_1061 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=Exception, span="1968-1968"];
m17_1068 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberType = JsonToken.Float", span="1987-1987"];
m17_1064 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseResult parseResult = ConvertUtils.DoubleTryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1976-1976"];
m17_1065 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="parseResult == ParseResult.Success", span="1977-1977"];
m17_1066 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = value", span="1979-1979"];
m17_1067 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1983-1983"];
m17_1071 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberType = JsonToken.Integer", span="1995-1995"];
m17_1073 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string number = _stringReference.ToString()", span="1999-1999"];
m17_1078 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="long value", span="2014-2014"];
m17_1074 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="2003-2003"];
m17_1076 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="2007-2007"];
m17_1075 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label=Exception, span="2005-2005"];
m17_1077 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberType = JsonToken.Integer", span="2010-2010"];
m17_1079 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="2015-2015"];
m17_1080 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="parseResult == ParseResult.Success", span="2016-2016"];
m17_1081 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = value", span="2018-2018"];
m17_1083 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="parseResult == ParseResult.Overflow", span="2021-2021"];
m17_1082 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberType = JsonToken.Integer", span="2019-2019"];
m17_1084 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string number = _stringReference.ToString()", span="2024-2024"];
m17_1089 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="string number = _stringReference.ToString()", span="2039-2039"];
m17_1085 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="number.Length > MaximumJavascriptIntegerCharacterLength", span="2026-2026"];
m17_1087 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = BigIntegerParse(number, CultureInfo.InvariantCulture)", span="2031-2031"];
m17_1086 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''JSON integer {0} is too large to parse.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="2028-2028"];
m17_1088 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberType = JsonToken.Integer", span="2032-2032"];
m17_1090 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="_floatParseHandling == FloatParseHandling.Decimal", span="2041-2041"];
m17_1092 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="2044-2044"];
m17_1094 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2050-2050"];
m17_1099 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2063-2063"];
m17_1091 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="decimal d", span="2043-2043"];
m17_1095 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="double d", span="2055-2055"];
m17_1093 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = d", span="2046-2046"];
m17_1096 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="parseResult = ConvertUtils.DoubleTryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out d)", span="2056-2056"];
m17_1097 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="parseResult == ParseResult.Success", span="2057-2057"];
m17_1098 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberValue = d", span="2059-2059"];
m17_1100 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="numberType = JsonToken.Float", span="2067-2067"];
m17_1101 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="ClearRecentString()", span="2072-2072"];
m17_1103 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813"];
m17_1111 [cluster="System.Convert.ToDecimal(long)", file="JsonValidatingReader.cs", label="Entry System.Convert.ToDecimal(long)", span="0-0"];
m17_178 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421"];
m17_179 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonValidatingReader.cs", label="return (int?)ReadNumberValue(ReadType.ReadAsInt32);", span="423-423"];
m17_180 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421"];
m17_171 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383"];
m17_774 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label=true, span="1385-1385"];
m17_775 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="char currentChar = _chars[_charPos]", span="1387-1387"];
m17_776 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label=currentChar, span="1389-1389"];
m17_796 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="char.IsWhiteSpace(currentChar)", span="1423-1423"];
m17_777 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="'\0'", span="1391-1391"];
m17_782 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="'}'", span="1404-1404"];
m17_786 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="'/'", span="1408-1408"];
m17_789 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="StringUtils.CarriageReturn", span="1411-1411"];
m17_791 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="StringUtils.LineFeed", span="1414-1414"];
m17_793 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="' '", span="1417-1417"];
m17_778 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="_charsUsed == _charPos", span="1392-1392"];
m17_779 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="ReadData(false) == 0", span="1394-1394"];
m17_781 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="_charPos++", span="1401-1401"];
m17_780 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="return false;", span="1396-1396"];
m17_783 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="SetToken(JsonToken.EndObject)", span="1405-1405"];
m17_784 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="_charPos++", span="1406-1406"];
m17_785 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="return true;", span="1407-1407"];
m17_787 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="ParseComment(true)", span="1409-1409"];
m17_788 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="return true;", span="1410-1410"];
m17_790 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="ProcessCarriageReturn(false)", span="1412-1412"];
m17_792 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="ProcessLineFeed()", span="1415-1415"];
m17_794 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="StringUtils.Tab", span="1418-1418"];
m17_795 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="_charPos++", span="1420-1420"];
m17_797 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="_charPos++", span="1426-1426"];
m17_798 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="return ParseProperty();", span="1430-1430"];
m17_799 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383"];
m17_1120 [cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonValidatingReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113"];
m17_1283 [file="JsonValidatingReader.cs", label="Newtonsoft.Json.JsonTextReader", span=""];
m18_0 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m18_1 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs", label="this.param1 = param1", span="35-35"];
m18_2 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs", label="this.Param1 = Param1", span="36-36"];
m18_3 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs", label="this.Param2 = param2", span="37-37"];
m18_4 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m18_5 [file="JsonWriter.cs", label="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass", span=""];
m19_153 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="255-255"];
m19_161 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.AreEqual(2, a.Count())", span="274-274"];
m19_170 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.AreEqual(0, a.Count())", span="285-285"];
m19_157 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.AreEqual(6, (int)a[0])", span="268-268"];
m19_159 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.AreEqual(6, (int)a[0])", span="272-272"];
m19_164 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.AreEqual(6, (int)a[0])", span="278-278"];
m19_160 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), a[1]))", span="273-273"];
m19_155 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="258-264"];
m19_162 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="t = a[1]", span="276-276"];
m19_169 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="t.Remove()", span="284-284"];
m19_171 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.IsNull(t.Next)", span="287-287"];
m19_156 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="a[0].Remove()", span="266-266"];
m19_158 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="a[1].Remove()", span="270-270"];
m19_163 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="t.Remove()", span="277-277"];
m19_165 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.IsNull(t.Next)", span="279-279"];
m19_154 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="JToken t", span="257-257"];
m19_168 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="t = a[0]", span="283-283"];
m19_166 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.IsNull(t.Previous)", span="280-280"];
m19_167 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.IsNull(t.Parent)", span="281-281"];
m19_172 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.IsNull(t.Previous)", span="288-288"];
m19_173 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Assert.IsNull(t.Parent)", span="289-289"];
m19_174 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="255-255"];
m19_217 [cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="176-176"];
m19_55 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="95-95"];
m19_25 [cluster="System.IO.StringReader.StringReader(string)", file="JTokenReader.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m19_64 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JTokenReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m19_60 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="110-110"];
m19_54 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="69-69"];
m19_62 [cluster="Unk.AreNotEqual", file="JTokenReader.cs", label="Entry Unk.AreNotEqual", span=""];
m19_142 [cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="115-115"];
m19_238 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="299-299"];
m19_186 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="312-312"];
m19_190 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs", label="Assert.AreEqual(2, beforeTokens.Count)", span="325-325"];
m19_191 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(5), beforeTokens[0]))", span="326-326"];
m19_192 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1), beforeTokens[1]))", span="327-327"];
m19_187 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="314-320"];
m19_189 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs", label="List<JToken> beforeTokens = t.BeforeSelf().ToList()", span="323-323"];
m19_188 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs", label="JToken t = a[2]", span="322-322"];
m19_193 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="312-312"];
m19_290 [cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="282-282"];
m19_76 [cluster="Unk.IsNull", file="JTokenReader.cs", label="Entry Unk.IsNull", span=""];
m19_145 [cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="70-70"];
m19_264 [cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="307-307"];
m19_61 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="121-121"];
m19_233 [cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JContainer.CreateWriter()", span="289-289"];
m19_28 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204"];
m19_65 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="115-115"];
m19_68 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="Assert.AreEqual(6, (int)next)", span="126-126"];
m19_70 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), next))", span="129-129"];
m19_72 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), next))", span="132-132"];
m19_66 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="117-123"];
m19_67 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="JToken next = a[0].Next", span="125-125"];
m19_69 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="next = next.Next", span="128-128"];
m19_71 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="next = next.Next", span="131-131"];
m19_73 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="next = next.Next", span="134-134"];
m19_74 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="Assert.IsNull(next)", span="135-135"];
m19_75 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="115-115"];
m19_33 [cluster="Unk.IsTrue", file="JTokenReader.cs", label="Entry Unk.IsTrue", span=""];
m19_77 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="139-139"];
m19_82 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="Assert.AreEqual(6, (int)previous)", span="153-153"];
m19_84 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="Assert.AreEqual(5, (int)previous)", span="156-156"];
m19_80 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), previous))", span="150-150"];
m19_78 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="141-147"];
m19_81 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="previous = previous.Previous", span="152-152"];
m19_83 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="previous = previous.Previous", span="155-155"];
m19_85 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="previous = previous.Previous", span="158-158"];
m19_79 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="JToken previous = a[3].Previous", span="149-149"];
m19_86 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="Assert.IsNull(previous)", span="159-159"];
m19_87 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="139-139"];
m19_30 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="JTokenReader.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="110-110"];
m19_146 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="106-106"];
m19_0 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", span="38-38"];
m19_2 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(true, (bool)o[''pie''])", span="41-41"];
m19_4 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(1, (int)a[0])", span="44-44"];
m19_5 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(2, (int)a[1])", span="45-45"];
m19_6 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(3, (int)a[2])", span="46-46"];
m19_11 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(''pie'', p.Name)", span="53-53"];
m19_12 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(true, (bool)p.Value)", span="54-54"];
m19_14 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(''Date'', c.Name)", span="57-57"];
m19_18 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(''stringvalue'', (string)v)", span="63-63"];
m19_20 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(1, (int)v)", span="66-66"];
m19_22 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.AreEqual(1.1, (double)v)", span="69-69"];
m19_15 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JValue(1), c.Values().ElementAt(0)))", span="58-58"];
m19_1 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="JObject o = (JObject)JToken.ReadFrom(new JsonTextReader(new StringReader(''{'pie':true}'')))", span="40-40"];
m19_3 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="JArray a = (JArray)JToken.ReadFrom(new JsonTextReader(new StringReader(''[1,2,3]'')))", span="43-43"];
m19_7 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="JsonReader reader = new JsonTextReader(new StringReader(''{'pie':true}''))", span="48-48"];
m19_10 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="JProperty p = (JProperty)JToken.ReadFrom(reader)", span="52-52"];
m19_13 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="JConstructor c = (JConstructor)JToken.ReadFrom(new JsonTextReader(new StringReader(''new Date(1)'')))", span="56-56"];
m19_17 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''''''stringvalue'''''')))", span="62-62"];
m19_19 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''1'')))", span="65-65"];
m19_21 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''1.1'')))", span="68-68"];
m19_16 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="JValue v", span="60-60"];
m19_8 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="reader.Read()", span="49-49"];
m19_9 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="reader.Read()", span="50-50"];
m19_23 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", span="38-38"];
m19_240 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="411-411"];
m19_246 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Assert.AreEqual(5, a.Count())", span="426-426"];
m19_251 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Assert.AreEqual(6, a.Count())", span="432-432"];
m19_243 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Assert.AreEqual(''First'', (string)a[0])", span="423-423"];
m19_244 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Assert.AreEqual(a, a[0].Parent)", span="424-424"];
m19_245 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="425-425"];
m19_248 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Assert.AreEqual(''NewFirst'', (string)a[0])", span="429-429"];
m19_249 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Assert.AreEqual(a, a[0].Parent)", span="430-430"];
m19_250 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Assert.AreEqual(a[1], a[0].Next)", span="431-431"];
m19_252 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Assert.AreEqual(a[0], a[0].Next.Previous)", span="434-434"];
m19_241 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="413-419"];
m19_247 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="a.AddFirst(''NewFirst'')", span="428-428"];
m19_242 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="a.AddFirst(''First'')", span="421-421"];
m19_253 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="411-411"];
m19_59 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="120-120"];
m19_94 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="252-252"];
m19_235 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="658-658"];
m19_34 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="73-73"];
m19_48 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="JTokenReader.cs", label="JProperty o2 = new JProperty(''O2'', o)", prediction=67, span="106-106"];
m19_37 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', v),\r\n          new JProperty(''Test2'', ''Test2Value''),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="79-85"];
m19_47 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreNotEqual(null, o.Parent)", span="105-105"];
m19_49 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreNotEqual(o1.Value, o2.Value)", span="108-108"];
m19_50 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual(o1.Value.Children().Count(), o2.Value.Children().Count())", span="109-109"];
m19_51 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual(false, JToken.DeepEquals(o1, o2))", span="110-110"];
m19_52 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual(true, JToken.DeepEquals(o1.Value, o2.Value))", span="111-111"];
m19_35 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="JArray v = new JArray(new JConstructor(''TestConstructor''), new JValue(new DateTime(2000, 12, 20)))", span="75-75"];
m19_36 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual(null, v.Parent)", span="77-77"];
m19_38 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="87-87"];
m19_40 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="92-92"];
m19_43 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual(v, o[''Test1''])", span="99-99"];
m19_44 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual(null, o.Parent)", span="101-101"];
m19_45 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="JProperty o1 = new JProperty(''O1'', o)", span="102-102"];
m19_46 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual(o, o1.Value)", span="103-103"];
m19_39 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="JProperty p = new JProperty(''NewProperty'', v)", span="89-89"];
m19_41 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreNotEqual(p.Value, v)", span="95-95"];
m19_42 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Assert.AreEqual((DateTime)((JValue)p.Value[1]).Value, (DateTime)((JValue)v[1]).Value)", span="97-97"];
m19_53 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="73-73"];
m19_29 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="61-61"];
m19_255 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="438-438"];
m19_260 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs", label="Assert.AreEqual(0, a.Count())", span="452-452"];
m19_258 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs", label="Assert.AreEqual(5, (int)first)", span="449-449"];
m19_256 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="440-446"];
m19_259 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs", label="a.RemoveAll()", span="451-451"];
m19_261 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs", label="Assert.IsNull(first.Parent)", span="454-454"];
m19_257 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs", label="JToken first = a.First", span="448-448"];
m19_262 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs", label="Assert.IsNull(first.Next)", span="455-455"];
m19_263 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="438-438"];
m19_207 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="363-363"];
m19_210 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="Assert.AreEqual(10, descendants.Count())", span="374-374"];
m19_211 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="Assert.AreEqual(5, (int)descendants[0])", span="375-375"];
m19_213 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="Assert.AreEqual(1, (int)descendants[descendants.Count - 3])", span="377-377"];
m19_214 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="Assert.AreEqual(2, (int)descendants[descendants.Count - 2])", span="378-378"];
m19_215 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="Assert.AreEqual(3, (int)descendants[descendants.Count - 1])", span="379-379"];
m19_212 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 4]))", span="376-376"];
m19_208 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="365-371"];
m19_209 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="List<JToken> descendants = a.Descendants().ToList()", span="373-373"];
m19_216 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="363-363"];
m19_27 [cluster="Unk.AreEqual", file="JTokenReader.cs", label="Entry Unk.AreEqual", span=""];
m19_176 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="293-293"];
m19_180 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs", label="Assert.AreEqual(2, afterTokens.Count)", span="306-306"];
m19_181 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2), afterTokens[0]))", span="307-307"];
m19_182 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), afterTokens[1]))", span="308-308"];
m19_177 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="295-301"];
m19_179 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs", label="List<JToken> afterTokens = t.AfterSelf().ToList()", span="304-304"];
m19_178 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs", label="JToken t = a[1]", span="303-303"];
m19_183 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="293-293"];
m19_175 [cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="270-270"];
m19_198 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="345-345"];
m19_202 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs", label="Assert.AreEqual(2, ancestors.Count())", span="357-357"];
m19_203 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs", label="Assert.AreEqual(a[1], ancestors[0])", span="358-358"];
m19_204 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs", label="Assert.AreEqual(a, ancestors[1])", span="359-359"];
m19_199 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="347-353"];
m19_201 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs", label="List<JToken> ancestors = t.Ancestors().ToList()", span="356-356"];
m19_200 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs", label="JToken t = a[1][0]", span="355-355"];
m19_205 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="345-345"];
m19_88 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="163-163"];
m19_90 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs", label="Assert.AreEqual(4, a.Count())", span="173-173"];
m19_91 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs", label="Assert.AreEqual(3, a.Children<JArray>().Count())", span="174-174"];
m19_89 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="165-171"];
m19_92 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="163-163"];
m19_237 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="291-291"];
m19_95 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="178-178"];
m19_98 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs", label="Assert.AreEqual(2, a[2].BeforeSelf().Count())", span="189-189"];
m19_97 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs", label="Assert.AreEqual(5, (int)a[1].Previous)", span="188-188"];
m19_96 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1, 2, 3),\r\n          new JArray(1, 2, 3),\r\n          new JArray(1, 2, 3)\r\n        )", span="180-186"];
m19_99 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="178-178"];
m19_57 [cluster="System.DateTime.DateTime(int, int, int)", file="JTokenReader.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m19_100 [cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="192-192"];
m19_234 [cluster="Unk.IsNotNull", file="JTokenReader.cs", label="Entry Unk.IsNotNull", span=""];
m19_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JTokenReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m19_56 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="88-88"];
m19_218 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="383-383"];
m19_231 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''Property'', ''PropertyValue'')), a[5]))", span="407-407"];
m19_219 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="385-391"];
m19_230 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="Assert.AreEqual(6, a.Count())", span="406-406"];
m19_222 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="Assert.AreEqual(4, a.Count())", span="395-395"];
m19_224 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="Assert.AreEqual(5, a.Count())", span="398-398"];
m19_225 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="Assert.AreEqual(''String'', (string)a[4])", span="399-399"];
m19_220 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="JsonWriter writer = a.CreateWriter()", span="393-393"];
m19_229 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="writer.WriteEnd()", span="404-404"];
m19_221 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="Assert.IsNotNull(writer)", span="394-394"];
m19_223 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="writer.WriteValue(''String'')", span="397-397"];
m19_226 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="writer.WriteStartObject()", span="401-401"];
m19_227 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="writer.WritePropertyName(''Property'')", span="402-402"];
m19_228 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="writer.WriteValue(''PropertyValue'')", span="403-403"];
m19_232 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="383-383"];
m19_58 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="60-60"];
m19_101 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="194-194"];
m19_138 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JProperty(''Test'', new JValue(ulong.MaxValue)))", span="234-234"];
m19_137 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(ulong.MaxValue, (ulong)new JValue(ulong.MaxValue))", span="233-233"];
m19_139 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (string)new JValue((string)null))", span="235-235"];
m19_102 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20), (DateTime)new JValue(new DateTime(2000, 12, 20)))", span="196-196"];
m19_103 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="198-198"];
m19_104 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (DateTimeOffset?)new JValue((DateTimeOffset?)null))", span="199-199"];
m19_105 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="200-200"];
m19_106 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(true, (bool)new JValue(true))", span="202-202"];
m19_107 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(true, (bool?)new JValue(true))", span="203-203"];
m19_108 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (bool?)((JValue)null))", span="204-204"];
m19_109 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (bool?)new JValue((object)null))", span="205-205"];
m19_110 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(10, (long)new JValue(10))", span="206-206"];
m19_111 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (long?)new JValue((long?)null))", span="207-207"];
m19_112 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (long?)(JValue)null)", span="208-208"];
m19_113 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (int?)new JValue((int?)null))", span="209-209"];
m19_114 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (int?)(JValue)null)", span="210-210"];
m19_115 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (DateTime?)new JValue((DateTime?)null))", span="211-211"];
m19_116 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="212-212"];
m19_117 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (short?)new JValue((short?)null))", span="213-213"];
m19_118 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (short?)(JValue)null)", span="214-214"];
m19_119 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (float?)new JValue((float?)null))", span="215-215"];
m19_120 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (float?)(JValue)null)", span="216-216"];
m19_121 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (double?)new JValue((double?)null))", span="217-217"];
m19_122 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (double?)(JValue)null)", span="218-218"];
m19_123 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (decimal?)new JValue((decimal?)null))", span="219-219"];
m19_124 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (decimal?)(JValue)null)", span="220-220"];
m19_125 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="221-221"];
m19_126 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="222-222"];
m19_127 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (sbyte?)new JValue((sbyte?)null))", span="223-223"];
m19_128 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="224-224"];
m19_129 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (ulong?)new JValue((ulong?)null))", span="225-225"];
m19_130 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="226-226"];
m19_131 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="227-227"];
m19_132 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(null, (uint?)(JValue)null)", span="228-228"];
m19_133 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(11.1f, (float)new JValue(11.1))", span="229-229"];
m19_134 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(float.MinValue, (float)new JValue(float.MinValue))", span="230-230"];
m19_135 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(1.1, (double)new JValue(1.1))", span="231-231"];
m19_136 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Assert.AreEqual(uint.MaxValue, (uint)new JValue(uint.MaxValue))", span="232-232"];
m19_140 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="194-194"];
m19_143 [cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="97-97"];
m19_147 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="239-239"];
m19_149 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs", label="Assert.AreEqual(a, a.Root)", span="249-249"];
m19_150 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs", label="Assert.AreEqual(a, a[0].Root)", span="250-250"];
m19_151 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs", label="Assert.AreEqual(a, ((JArray)a[2])[0].Root)", span="251-251"];
m19_148 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="241-247"];
m19_152 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="239-239"];
m19_254 [cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="272-272"];
m19_184 [cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="179-179"];
m19_141 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JTokenReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m19_239 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="69-69"];
m19_24 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="49-49"];
m19_63 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="242-242"];
m19_93 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="78-78"];
m19_26 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="770-770"];
m19_278 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="475-475"];
m19_282 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="Assert.AreEqual(4, a.Count())", span="487-487"];
m19_287 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="Assert.AreEqual(4, a.Count())", span="494-494"];
m19_281 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="Assert.AreEqual(int.MaxValue, (int)a[0])", span="486-486"];
m19_284 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="Assert.AreEqual(''Test'', (string)a[1][0])", span="490-490"];
m19_286 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="Assert.AreEqual(int.MaxValue, (int)a[2])", span="493-493"];
m19_288 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="Assert.IsTrue(JToken.DeepEquals(new JArray(int.MaxValue, new JArray(''Test''), int.MaxValue, new JArray(1, 2, 3)), a))", span="496-496"];
m19_279 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="477-483"];
m19_283 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="a[1][0].Replace(new JValue(''Test''))", span="489-489"];
m19_280 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="a[0].Replace(new JValue(int.MaxValue))", span="485-485"];
m19_285 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="a[2].Replace(new JValue(int.MaxValue))", span="492-492"];
m19_289 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="475-475"];
m19_206 [cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Ancestors()", span="167-167"];
m19_144 [cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="79-79"];
m19_185 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JTokenReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m19_236 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="238-238"];
m19_32 [cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="116-116"];
m19_194 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="331-331"];
m19_195 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenReader.cs", label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="333-339"];
m19_196 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenReader.cs", label="Assert.IsTrue(a.HasValues)", span="341-341"];
m19_197 [cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="331-331"];
m22_8 [cluster="Unk.ToList", file="StringBuffer.cs", label="Entry Unk.ToList", span=""];
m22_7 [cluster="Unk.Select", file="StringBuffer.cs", label="Entry Unk.Select", span=""];
m22_10 [cluster="lambda expression", file="StringBuffer.cs", label="Entry lambda expression", span="40-47"];
m22_11 [cluster="lambda expression", color=green, community=0, file="StringBuffer.cs", label="new BlogPost\r\n        {\r\n          Title = (string) p[''Title''],\r\n          AuthorName = (string) p[''Author''][''Name''],\r\n          AuthorTwitter = (string) p[''Author''][''Twitter''],\r\n          PostedDate = (DateTime) p[''Date''],\r\n          Body = HttpUtility.HtmlDecode((string) p[''BodyHtml''])\r\n        }", prediction=68, span="40-47"];
m22_12 [cluster="lambda expression", file="StringBuffer.cs", label="Exit lambda expression", span="40-47"];
m22_13 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", span="12-12"];
m22_14 [cluster="Unk.HtmlDecode", file="StringBuffer.cs", label="Entry Unk.HtmlDecode", span=""];
m22_6 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="143-143"];
m22_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", span="22-22"];
m22_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", color=green, community=0, file="StringBuffer.cs", label="string json = @''[\r\n        {\r\n          'Title': 'Json.NET is awesome!',\r\n          'Author': {\r\n            'Name': 'James Newton-King',\r\n            'Twitter': '@JamesNK',\r\n            'Picture': '/jamesnk.png'\r\n          },\r\n          'Date': '2013-01-23T19:30:00',\r\n          'BodyHtml': '&lt;h3&gt;Title!&lt;/h3&gt;\r\n&lt;p&gt;Content!&lt;/p&gt;'\r\n        }\r\n      ]''", prediction=69, span="25-36"];
m22_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", color=green, community=0, file="StringBuffer.cs", label="IList<BlogPost> blogPosts = blogPostArray.Select(p => new BlogPost\r\n        {\r\n          Title = (string) p[''Title''],\r\n          AuthorName = (string) p[''Author''][''Name''],\r\n          AuthorTwitter = (string) p[''Author''][''Twitter''],\r\n          PostedDate = (DateTime) p[''Date''],\r\n          Body = HttpUtility.HtmlDecode((string) p[''BodyHtml''])\r\n        }).ToList()", prediction=70, span="40-47"];
m22_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", file="StringBuffer.cs", label="Console.WriteLine(blogPosts[0].Body)", span="49-49"];
m22_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", span="22-22"];
m22_9 [cluster="System.Console.WriteLine(string)", file="StringBuffer.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m23_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", span="11-11"];
m23_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", color=green, community=0, file="StringReference.cs", label="Console.WriteLine(o.ToString(Formatting.None, new JavaScriptDateTimeConverter()))", prediction=71, span="26-26"];
m23_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs", label="JObject o = JObject.Parse(@''{'string1':'value','integer2':99,'datetime3':'2000-05-23T00:00:00'}'')", span="14-14"];
m23_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs", label="Console.WriteLine(o.ToString(Formatting.None))", span="23-23"];
m23_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs", label="Console.WriteLine(o.ToString())", span="16-16"];
m23_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", span="11-11"];
m23_9 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="StringReference.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="424-424"];
m23_6 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="StringReference.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359"];
m23_10 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="StringReference.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m23_8 [cluster="System.Console.WriteLine(string)", file="StringReference.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m23_7 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="StringReference.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="413-413"];
n428 -> n32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n134  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n428 -> n424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonReader", style=dashed];
n117 -> n120  [color=darkseagreen4, key=1, label=result, style=dashed];
n157 -> n424  [color=darkseagreen4, key=1, label=int, style=dashed];
n160 -> n162  [color=darkseagreen4, key=1, label=token, style=dashed];
n204 -> n285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Bson.BsonType", style=dashed];
n176 -> n180  [color=darkseagreen4, key=1, label=context, style=dashed];
n176 -> n181  [color=darkseagreen4, key=1, label=context, style=dashed];
n176 -> n187  [color=darkseagreen4, key=1, label=context, style=dashed];
n176 -> n192  [color=darkseagreen4, key=1, label=context, style=dashed];
n179 -> n187  [color=darkseagreen4, key=1, label=lengthMinusEnd, style=dashed];
n224 -> n226  [color=darkseagreen4, key=1, label=d, style=dashed];
n224 -> n227  [color=darkseagreen4, key=1, label=d, style=dashed];
n297 -> n301  [color=darkseagreen4, key=1, label=dataLength, style=dashed];
n298 -> n302  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Bson.BsonBinaryType", style=dashed];
n304 -> n313  [color=darkseagreen4, key=1, label=builder, style=dashed];
n304 -> n319  [color=darkseagreen4, key=1, label=builder, style=dashed];
n304 -> n321  [color=darkseagreen4, key=1, label=builder, style=dashed];
n304 -> n327  [color=darkseagreen4, key=1, label=builder, style=dashed];
n312 -> n315  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
n312 -> n326  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
n307 -> n313  [color=darkseagreen4, key=1, label=count, style=dashed];
n307 -> n325  [color=darkseagreen4, key=1, label=count, style=dashed];
n311 -> n322  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
n310 -> n313  [color=darkseagreen4, key=1, label=count, style=dashed];
n310 -> n325  [color=darkseagreen4, key=1, label=count, style=dashed];
n317 -> n322  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
n317 -> n324  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
n314 -> n316  [color=darkseagreen4, key=1, label=length, style=dashed];
n318 -> n321  [color=darkseagreen4, key=1, label=charCount, style=dashed];
n334 -> n383  [color=darkseagreen4, key=1, label=int, style=dashed];
n334 -> n384  [color=darkseagreen4, key=1, label=int, style=dashed];
n320 -> n327  [color=darkseagreen4, key=1, label=builder, style=dashed];
n341 -> n343  [color=darkseagreen4, key=1, label=s, style=dashed];
n345 -> n358  [color=darkseagreen4, key=1, label=int, style=dashed];
n345 -> n370  [color=darkseagreen4, key=1, label=int, style=dashed];
n363 -> n365  [color=darkseagreen4, key=1, label=builder, style=dashed];
n363 -> n371  [color=darkseagreen4, key=1, label=builder, style=dashed];
n349 -> n362  [color=darkseagreen4, key=1, label=builder, style=dashed];
n349 -> n365  [color=darkseagreen4, key=1, label=builder, style=dashed];
n349 -> n371  [color=darkseagreen4, key=1, label=builder, style=dashed];
n356 -> n370  [color=darkseagreen4, key=1, label=totalBytesRead, style=dashed];
n357 -> n366  [color=darkseagreen4, key=1, label=byteCount, style=dashed];
n361 -> n366  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
n361 -> n368  [color=darkseagreen4, key=1, label=lastFullCharStop, style=dashed];
n375 -> n377  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n375 -> n380  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n375 -> n382  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n375 -> n383  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n375 -> n385  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n376 -> n383  [color=darkseagreen4, key=1, label=bis, style=dashed];
n378 -> n381  [color=darkseagreen4, key=1, label=bis, style=dashed];
n378 -> n383  [color=darkseagreen4, key=1, label=bis, style=dashed];
n380 -> n380  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n380 -> n383  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n380 -> n385  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n382 -> n382  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n382 -> n385  [color=darkseagreen4, key=1, label=lookbackPos, style=dashed];
n387 -> n390  [color=darkseagreen4, key=1, label=byte, style=dashed];
n387 -> n392  [color=darkseagreen4, key=1, label=byte, style=dashed];
n387 -> n394  [color=darkseagreen4, key=1, label=byte, style=dashed];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_6 -> m1_8  [color=darkseagreen4, key=1, label=user, style=dashed];
m1_138 -> m1_140  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m1_138 -> m1_141  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m1_138 -> m1_145  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m1_157 -> m1_159  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m1_157 -> m1_160  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m1_166 -> m1_168  [color=darkseagreen4, key=1, label=setMethod, style=dashed];
m1_84 -> m1_86  [color=green, key=1, label="System.Type", style=dashed];
m1_84 -> m1_87  [color=green, key=1, label="System.Type", style=dashed];
m1_84 -> m1_99  [color=green, key=1, label="System.Type", style=dashed];
m1_84 -> m1_95  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_84 -> m1_103  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_12 -> m1_46  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m1_12 -> m1_48  [color=darkseagreen4, key=1, label="System.Reflection.MethodBase", style=dashed];
m1_74 -> m1_180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_74 -> m1_181  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m1_74 -> m1_182  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_74 -> m1_184  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_74 -> m1_188  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m1_74 -> m1_189  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m1_183 -> m1_188  [color=darkseagreen4, key=1, label=convert, style=dashed];
m1_123 -> m1_127  [color=darkseagreen4, key=1, label="System.Reflection.FieldInfo", style=dashed];
m1_52 -> m1_54  [color=green, key=1, label=m, style=dashed];
m1_55 -> m1_65  [color=green, key=1, label=callExpression, style=dashed];
m1_55 -> m1_67  [color=green, key=1, label=callExpression, style=dashed];
m1_56 -> m1_65  [color=green, key=1, label=callExpression, style=dashed];
m1_56 -> m1_67  [color=green, key=1, label=callExpression, style=dashed];
m1_57 -> m1_65  [color=green, key=1, label=callExpression, style=dashed];
m1_57 -> m1_67  [color=green, key=1, label=callExpression, style=dashed];
m1_27 -> m1_58  [color=green, key=1, label=refParameterMap, style=dashed];
m1_27 -> m1_61  [color=green, key=1, label=refParameterMap, style=dashed];
m1_59 -> m1_64  [color=green, key=1, label=variableExpressions, style=dashed];
m1_61 -> m1_63  [color=green, key=1, label=p, style=dashed];
m1_61 -> m1_64  [color=green, key=1, label=p, style=dashed];
m1_60 -> m1_65  [color=green, key=1, label=bodyExpressions, style=dashed];
m1_60 -> m1_63  [color=green, key=1, label=bodyExpressions, style=dashed];
m1_25 -> m1_29  [color=darkseagreen4, key=1, label=parametersInfo, style=dashed];
m1_28 -> m1_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_44 -> m1_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_31 -> m1_33  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m1_32 -> m1_39  [color=darkseagreen4, key=1, label=isByRef, style=dashed];
m1_35 -> m1_39  [color=darkseagreen4, key=1, label=isByRef, style=dashed];
m1_202 -> m1_99  [color=green, key=1, label="System.Type", style=dashed];
m1_202 -> m1_103  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_2 -> m3_4  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m7_16 -> m7_19  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_23 -> m7_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_23 -> m7_27  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m7_31 -> m7_33  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m7_31 -> m7_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_31 -> m7_37  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_31 -> m7_39  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m7_31 -> m7_60  [color=darkseagreen4, key=1, label="bool[]", style=dashed];
m7_31 -> m7_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.StringEscapeHandling", style=dashed];
m7_31 -> m7_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.StringEscapeHandling", style=dashed];
m7_31 -> m7_65  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_31 -> m7_67  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_31 -> m7_75  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_31 -> m7_78  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_31 -> m7_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_31 -> m7_81  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m7_31 -> m7_84  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m7_31 -> m7_85  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m7_31 -> m7_88  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m7_31 -> m7_90  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_31 -> m7_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_31 -> m7_93  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m7_31 -> m7_94  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_31 -> m7_95  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m7_31 -> m7_96  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_38 -> m7_41  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_38 -> m7_60  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_38 -> m7_61  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_38 -> m7_63  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_38 -> m7_67  [color=darkseagreen4, key=1, label=c, style=dashed];
m7_89 -> m7_92  [color=darkseagreen4, key=1, label=length, style=dashed];
m7_89 -> m7_93  [color=darkseagreen4, key=1, label=length, style=dashed];
m7_35 -> m7_72  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m7_35 -> m7_80  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m7_35 -> m7_87  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m7_35 -> m7_92  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m7_36 -> m7_72  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_36 -> m7_86  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_73 -> m7_75  [color=darkseagreen4, key=1, label=length, style=dashed];
m7_73 -> m7_80  [color=darkseagreen4, key=1, label=length, style=dashed];
m7_73 -> m7_81  [color=darkseagreen4, key=1, label=length, style=dashed];
m7_82 -> m7_87  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m7_82 -> m7_92  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m7_86 -> m7_86  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_69 -> m7_84  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m7_62 -> m7_84  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m7_64 -> m7_84  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m7_68 -> m7_84  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m7_71 -> m7_77  [color=darkseagreen4, key=1, label=isEscapedUnicodeText, style=dashed];
m7_71 -> m7_83  [color=darkseagreen4, key=1, label=isEscapedUnicodeText, style=dashed];
m7_74 -> m7_80  [color=darkseagreen4, key=1, label=start, style=dashed];
m7_74 -> m7_81  [color=darkseagreen4, key=1, label=start, style=dashed];
m7_79 -> m7_81  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_79 -> m7_85  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_79 -> m7_90  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_79 -> m7_92  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_79 -> m7_93  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_79 -> m7_96  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_91 -> m7_93  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_91 -> m7_96  [color=darkseagreen4, key=1, label="ref char[]", style=dashed];
m7_1 -> m7_4  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m7_1 -> m7_6  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m7_1 -> m7_8  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m7_1 -> m7_10  [color=darkseagreen4, key=1, label=escapeChars, style=dashed];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_5 -> m7_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_109 -> m7_112  [color=darkseagreen4, key=1, label=w, style=dashed];
m8_63 -> m8_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_15 -> m8_17  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_19 -> m8_22  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m8_19 -> m8_27  [color=darkseagreen4, key=1, label=contextKey, style=dashed];
m8_20 -> m8_22  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m8_20 -> m8_27  [color=darkseagreen4, key=1, label=someValue, style=dashed];
m8_200 -> m8_202  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_200 -> m8_203  [color=darkseagreen4, key=1, label=c, style=dashed];
m8_97 -> m8_99  [color=darkseagreen4, key=1, label=employees, style=dashed];
m8_97 -> m8_100  [color=darkseagreen4, key=1, label=employees, style=dashed];
m8_97 -> m8_101  [color=darkseagreen4, key=1, label=employees, style=dashed];
m8_95 -> m8_102  [color=darkseagreen4, key=1, label=t1, style=dashed];
m8_96 -> m8_102  [color=darkseagreen4, key=1, label=t2, style=dashed];
m8_51 -> m8_53  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m8_51 -> m8_54  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m8_51 -> m8_55  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m8_51 -> m8_56  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m8_51 -> m8_57  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m8_87 -> m8_89  [color=darkseagreen4, key=1, label=employees, style=dashed];
m8_87 -> m8_90  [color=darkseagreen4, key=1, label=employees, style=dashed];
m8_87 -> m8_91  [color=darkseagreen4, key=1, label=employees, style=dashed];
m8_162 -> m8_164  [color=darkseagreen4, key=1, label=actual, style=dashed];
m8_165 -> m8_167  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_165 -> m8_168  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_148 -> m8_150  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_148 -> m8_151  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_148 -> m8_152  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_148 -> m8_153  [color=darkseagreen4, key=1, label=c2, style=dashed];
m8_37 -> m8_39  [color=green, key=1, label=jsonString, style=dashed];
m8_39 -> m8_41  [color=green, key=1, label=actual, style=dashed];
m8_39 -> m8_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_39 -> m8_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_39 -> m8_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_39 -> m8_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_39 -> m8_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_11 -> m8_14  [color=green, key=1, label="lambda expression", style=dashed];
m8_130 -> m8_132  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m8_126 -> m8_129  [color=darkseagreen4, key=1, label=listRef, style=dashed];
m8_133 -> m8_135  [color=darkseagreen4, key=1, label=nested, style=dashed];
m8_133 -> m8_136  [color=darkseagreen4, key=1, label=nested, style=dashed];
m8_133 -> m8_137  [color=darkseagreen4, key=1, label=nested, style=dashed];
m8_133 -> m8_138  [color=darkseagreen4, key=1, label=nested, style=dashed];
m8_133 -> m8_139  [color=darkseagreen4, key=1, label=nested, style=dashed];
m8_80 -> m8_82  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_80 -> m8_83  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_70 -> m8_72  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_70 -> m8_73  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_70 -> m8_77  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_74 -> m8_76  [color=darkseagreen4, key=1, label=child, style=dashed];
m8_74 -> m8_77  [color=darkseagreen4, key=1, label=child, style=dashed];
m8_176 -> m8_178  [color=darkseagreen4, key=1, label=actual, style=dashed];
m8_176 -> m8_179  [color=darkseagreen4, key=1, label=actual, style=dashed];
m8_176 -> m8_180  [color=darkseagreen4, key=1, label=actual, style=dashed];
m8_176 -> m8_181  [color=darkseagreen4, key=1, label=actual, style=dashed];
m8_176 -> m8_182  [color=darkseagreen4, key=1, label=actual, style=dashed];
m8_176 -> m8_183  [color=darkseagreen4, key=1, label=actual, style=dashed];
m8_176 -> m8_184  [color=darkseagreen4, key=1, label=actual, style=dashed];
m8_176 -> m8_185  [color=darkseagreen4, key=1, label=actual, style=dashed];
m8_113 -> m8_122  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_113 -> m8_123  [color=darkseagreen4, key=1, label=values, style=dashed];
m8_115 -> m8_117  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_115 -> m8_118  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_116 -> m8_119  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_116 -> m8_120  [color=darkseagreen4, key=1, label=p, style=dashed];
m8_116 -> m8_121  [color=darkseagreen4, key=1, label=p, style=dashed];
m11_1 -> m11_3  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_1 -> m11_4  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_1 -> m11_5  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_1 -> m11_6  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_1 -> m11_7  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_1 -> m11_8  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_1 -> m11_9  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_1 -> m11_10  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_12 -> m12_1  [color=green, key=1, label="Newtonsoft.Json.JsonSerializerSettings", style=dashed];
m13_657 -> m13_661  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_657 -> m13_662  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_660 -> m13_663  [color=darkseagreen4, key=1, label=output, style=dashed];
m13_139 -> m13_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_143 -> m13_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_144 -> m13_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_138 -> m13_150  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_698 -> m13_700  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1632 -> m13_1634  [color=darkseagreen4, key=1, label=r, style=dashed];
m13_1632 -> m13_1635  [color=darkseagreen4, key=1, label=r, style=dashed];
m13_2326 -> m13_2328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1935 -> m13_1935  [color=darkseagreen4, key=1, label=pair, style=dashed];
m13_627 -> m13_629  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m13_627 -> m13_630  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m13_627 -> m13_631  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m13_627 -> m13_632  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m13_627 -> m13_633  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m13_627 -> m13_634  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m13_627 -> m13_635  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m13_627 -> m13_636  [color=darkseagreen4, key=1, label=obj2, style=dashed];
m13_622 -> m13_628  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_622 -> m13_629  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_622 -> m13_630  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_622 -> m13_631  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_622 -> m13_632  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_1230 -> m13_1232  [color=darkseagreen4, key=1, label=m2, style=dashed];
m13_1226 -> m13_1231  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m13_1226 -> m13_1232  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m13_1670 -> m13_1672  [color=darkseagreen4, key=1, label=l, style=dashed];
m13_1670 -> m13_1673  [color=darkseagreen4, key=1, label=l, style=dashed];
m13_1670 -> m13_1674  [color=darkseagreen4, key=1, label=l, style=dashed];
m13_2956 -> m13_2958  [color=darkseagreen4, key=1, label=d2, style=dashed];
m13_2954 -> m13_2957  [color=darkseagreen4, key=1, label=d1, style=dashed];
m13_2954 -> m13_2958  [color=darkseagreen4, key=1, label=d1, style=dashed];
m13_1383 -> m13_1385  [color=darkseagreen4, key=1, label=aa, style=dashed];
m13_1383 -> m13_1386  [color=darkseagreen4, key=1, label=aa, style=dashed];
m13_1383 -> m13_1387  [color=darkseagreen4, key=1, label=aa, style=dashed];
m13_1383 -> m13_1388  [color=darkseagreen4, key=1, label=aa, style=dashed];
m13_1383 -> m13_1389  [color=darkseagreen4, key=1, label=aa, style=dashed];
m13_1382 -> m13_1391  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1651 -> m13_1653  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1650 -> m13_1654  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2647 -> m13_2649  [color=darkseagreen4, key=1, label=p, style=dashed];
m13_2647 -> m13_2650  [color=darkseagreen4, key=1, label=p, style=dashed];
m13_2350 -> m13_2352  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_2350 -> m13_2353  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_2340 -> m13_2342  [color=darkseagreen4, key=1, label=reference, style=dashed];
m13_2340 -> m13_2343  [color=darkseagreen4, key=1, label=reference, style=dashed];
m13_2340 -> m13_2347  [color=darkseagreen4, key=1, label=reference, style=dashed];
m13_2344 -> m13_2346  [color=darkseagreen4, key=1, label=child, style=dashed];
m13_2344 -> m13_2347  [color=darkseagreen4, key=1, label=child, style=dashed];
m13_2383 -> m13_2385  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1920 -> m13_1922  [color=darkseagreen4, key=1, label=dic, style=dashed];
m13_1920 -> m13_1923  [color=darkseagreen4, key=1, label=dic, style=dashed];
m13_1920 -> m13_1924  [color=darkseagreen4, key=1, label=dic, style=dashed];
m13_2886 -> m13_2889  [color=darkseagreen4, key=1, label=uri, style=dashed];
m13_2970 -> m13_2972  [color=darkseagreen4, key=1, label=d2, style=dashed];
m13_2968 -> m13_2971  [color=darkseagreen4, key=1, label=d1, style=dashed];
m13_2968 -> m13_2972  [color=darkseagreen4, key=1, label=d1, style=dashed];
m13_3939 -> m13_3941  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_3574 -> m13_3576  [color=darkseagreen4, key=1, label=tuple2, style=dashed];
m13_236 -> m13_238  [color=darkseagreen4, key=1, label=otc, style=dashed];
m13_236 -> m13_239  [color=darkseagreen4, key=1, label=otc, style=dashed];
m13_236 -> m13_240  [color=darkseagreen4, key=1, label=otc, style=dashed];
m13_236 -> m13_241  [color=darkseagreen4, key=1, label=otc, style=dashed];
m13_2455 -> m13_2457  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m13_3608 -> m13_3610  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3605 -> m13_3608  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_3605 -> m13_3611  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_511 -> m13_514  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_516  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_518  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_520  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_523  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_525  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_527  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_529  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_531  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_533  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_535  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_537  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_539  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_541  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_543  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_545  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_547  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_549  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_551  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_553  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_555  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_557  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_560  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_562  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_565  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_567  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_569  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_511 -> m13_524  [color=darkseagreen4, key=1, label=serializerProxy, style=dashed];
m13_512 -> m13_514  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m13_521 -> m13_523  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m13_558 -> m13_560  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m13_563 -> m13_565  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m13_1989 -> m13_1992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_1993 -> m13_1993  [color=darkseagreen4, key=1, label=entry, style=dashed];
m13_1344 -> m13_1346  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1344 -> m13_1347  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_3304 -> m13_3306  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m13_3304 -> m13_3307  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m13_1706 -> m13_1708  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1705 -> m13_1709  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_691 -> m13_693  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_2368 -> m13_2370  [color=darkseagreen4, key=1, label=dic, style=dashed];
m13_2250 -> m13_2252  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m13_2250 -> m13_2253  [color=darkseagreen4, key=1, label=newTestObject, style=dashed];
m13_2247 -> m13_2249  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2244 -> m13_2251  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m13_2244 -> m13_2252  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m13_900 -> m13_902  [color=darkseagreen4, key=1, label=p, style=dashed];
m13_1767 -> m13_1769  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1258 -> m13_1260  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3229 -> m13_3232  [color=darkseagreen4, key=1, label=a, style=dashed];
m13_3223 -> m13_3225  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_3223 -> m13_3226  [color=darkseagreen4, key=1, label=writer, style=dashed];
m13_2136 -> m13_2138  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2136 -> m13_2139  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2136 -> m13_2140  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2136 -> m13_2141  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2136 -> m13_2142  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2130 -> m13_2139  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m13_2132 -> m13_2135  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m13_1337 -> m13_1339  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_1510 -> m13_1512  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1820 -> m13_1822  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m13_1820 -> m13_1823  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m13_1820 -> m13_1824  [color=darkseagreen4, key=1, label=newFoo, style=dashed];
m13_2092 -> m13_2094  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2095  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2096  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2097  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2099  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2100  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2101  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2102  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2103  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2104  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2105  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2106  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2107  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2108  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2109  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2110  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_2092 -> m13_2098  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_1319 -> m13_1322  [color=darkseagreen4, key=1, label=boolRef, style=dashed];
m13_1325 -> m13_1328  [color=darkseagreen4, key=1, label=jsonSerializerTestRef, style=dashed];
m13_3559 -> m13_3563  [color=darkseagreen4, key=1, label=dates, style=dashed];
m13_3561 -> m13_3563  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_3561 -> m13_3564  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_3561 -> m13_3565  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_3561 -> m13_3566  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_1685 -> m13_1687  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1684 -> m13_1688  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2753 -> m13_2755  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2753 -> m13_2756  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2753 -> m13_2757  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2748 -> m13_2754  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2748 -> m13_2755  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2748 -> m13_2750  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2187 -> m13_2189  [color=darkseagreen4, key=1, label=myA, style=dashed];
m13_2187 -> m13_2190  [color=darkseagreen4, key=1, label=myA, style=dashed];
m13_2187 -> m13_2191  [color=darkseagreen4, key=1, label=myA, style=dashed];
m13_2187 -> m13_2192  [color=darkseagreen4, key=1, label=myA, style=dashed];
m13_2187 -> m13_2193  [color=darkseagreen4, key=1, label=myA, style=dashed];
m13_2187 -> m13_2194  [color=darkseagreen4, key=1, label=myA, style=dashed];
m13_2187 -> m13_2195  [color=darkseagreen4, key=1, label=myA, style=dashed];
m13_2196 -> m13_2198  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2199  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2200  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2201  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2202  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2203  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2204  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2205  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2206  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2207  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2208  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2209  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2210  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2211  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2212  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2213  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_2196 -> m13_2214  [color=darkseagreen4, key=1, label=myB, style=dashed];
m13_640 -> m13_642  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_1440 -> m13_1442  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_1440 -> m13_1443  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_1440 -> m13_1444  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_1440 -> m13_1445  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_1083 -> m13_1085  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_63 -> m13_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3728 -> m13_3730  [color=darkseagreen4, key=1, label=john, style=dashed];
m13_3728 -> m13_3731  [color=darkseagreen4, key=1, label=john, style=dashed];
m13_3729 -> m13_3731  [color=darkseagreen4, key=1, label=jane, style=dashed];
m13_3433 -> m13_3435  [color=darkseagreen4, key=1, label=uris, style=dashed];
m13_3441 -> m13_3443  [color=darkseagreen4, key=1, label=uri, style=dashed];
m13_3438 -> m13_3440  [color=darkseagreen4, key=1, label=i1, style=dashed];
m13_1028 -> m13_1030  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m13_1028 -> m13_1031  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m13_1028 -> m13_1032  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m13_1028 -> m13_1033  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m13_1028 -> m13_1034  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m13_1028 -> m13_1035  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m13_2361 -> m13_2363  [color=darkseagreen4, key=1, label=cc, style=dashed];
m13_2361 -> m13_2364  [color=darkseagreen4, key=1, label=cc, style=dashed];
m13_52 -> m13_54  [color=green, key=1, label="lambda expression", style=dashed];
m13_104 -> m13_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_105 -> m13_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_106 -> m13_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_107 -> m13_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_108 -> m13_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_109 -> m13_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2825 -> m13_2828  [color=darkseagreen4, key=1, label=classWithException, style=dashed];
m13_2263 -> m13_2265  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2259 -> m13_2267  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m13_2545 -> m13_2547  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_2545 -> m13_2548  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_3102 -> m13_3104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1945 -> m13_1947  [color=darkseagreen4, key=1, label=cISO, style=dashed];
m13_3531 -> m13_3531  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m13_3532 -> m13_3532  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m13_177 -> m13_180  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_1502 -> m13_1504  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_1502 -> m13_1505  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_1502 -> m13_1506  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_3364 -> m13_3369  [color=darkseagreen4, key=1, label=T, style=dashed];
m13_3366 -> m13_3369  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m13_3366 -> m13_3370  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m13_3367 -> m13_3369  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_3046 -> m13_3048  [color=darkseagreen4, key=1, label=actual, style=dashed];
m13_294 -> m13_296  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_294 -> m13_297  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_292 -> m13_295  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_292 -> m13_296  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_292 -> m13_297  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_3408 -> m13_3410  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3407 -> m13_3411  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_3400 -> m13_3408  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_3400 -> m13_3411  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_3403 -> m13_3405  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_3114 -> m13_3116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1880 -> m13_1882  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1880 -> m13_1883  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1880 -> m13_1884  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1880 -> m13_1885  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1880 -> m13_1886  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1880 -> m13_1887  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1880 -> m13_1888  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1880 -> m13_1889  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1713 -> m13_1715  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1712 -> m13_1716  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_345 -> m13_347  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_345 -> m13_348  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_345 -> m13_349  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_345 -> m13_350  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_345 -> m13_351  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_353 -> m13_355  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_357 -> m13_359  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_357 -> m13_360  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_344 -> m13_351  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_352 -> m13_355  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_356 -> m13_360  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_844 -> m13_846  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_844 -> m13_847  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_844 -> m13_848  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_844 -> m13_849  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_844 -> m13_850  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_3771 -> m13_3778  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_3771 -> m13_3774  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_3771 -> m13_3776  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m13_2494 -> m13_2496  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m13_2494 -> m13_2497  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m13_2494 -> m13_2498  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m13_2494 -> m13_2499  [color=darkseagreen4, key=1, label=newExpando, style=dashed];
m13_2500 -> m13_2502  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_2500 -> m13_2504  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_2500 -> m13_2503  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_2486 -> m13_2496  [color=darkseagreen4, key=1, label=expando, style=dashed];
m13_2486 -> m13_2498  [color=darkseagreen4, key=1, label=expando, style=dashed];
m13_2486 -> m13_2502  [color=darkseagreen4, key=1, label=expando, style=dashed];
m13_2486 -> m13_2504  [color=darkseagreen4, key=1, label=expando, style=dashed];
m13_3421 -> m13_3423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3897 -> m13_3903  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_1807 -> m13_1807  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m13_1807 -> m13_1809  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m13_1809 -> m13_1809  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m13_1803 -> m13_1807  [color=darkseagreen4, key=1, label=structTest, style=dashed];
m13_3021 -> m13_3023  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3915 -> m13_3921  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_961 -> m13_963  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_960 -> m13_964  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_3344 -> m13_3346  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m13_3344 -> m13_3347  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m13_683 -> m13_685  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2841 -> m13_2843  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2841 -> m13_2844  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2841 -> m13_2845  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2841 -> m13_2846  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2838 -> m13_2842  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2838 -> m13_2843  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2838 -> m13_2844  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2838 -> m13_2845  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2838 -> m13_2846  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_3719 -> m13_3721  [color=darkseagreen4, key=1, label=john, style=dashed];
m13_3719 -> m13_3722  [color=darkseagreen4, key=1, label=john, style=dashed];
m13_3720 -> m13_3722  [color=darkseagreen4, key=1, label=jane, style=dashed];
m13_1692 -> m13_1694  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1691 -> m13_1695  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_3498 -> m13_3500  [color=darkseagreen4, key=1, label=l, style=dashed];
m13_4012 -> m13_4016  [color=darkseagreen4, key=1, label=address, style=dashed];
m13_4012 -> m13_4017  [color=darkseagreen4, key=1, label=address, style=dashed];
m13_443 -> m13_446  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_448  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_450  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_452  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_455  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_456  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_457  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_459  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_461  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_463  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_465  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_467  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_469  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_471  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_473  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_475  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_477  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_479  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_481  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_483  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_485  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_487  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_489  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_492  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_493  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_495  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_497  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_500  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_502  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_443 -> m13_504  [color=darkseagreen4, key=1, label=settings, style=dashed];
m13_444 -> m13_446  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m13_453 -> m13_455  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m13_490 -> m13_492  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m13_490 -> m13_493  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m13_490 -> m13_495  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m13_490 -> m13_508  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m13_498 -> m13_500  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m13_2566 -> m13_2568  [color=darkseagreen4, key=1, label=meh, style=dashed];
m13_1720 -> m13_1722  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1719 -> m13_1723  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_303 -> m13_305  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_303 -> m13_306  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_301 -> m13_304  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_301 -> m13_305  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_301 -> m13_306  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_1154 -> m13_1158  [color=darkseagreen4, key=1, label=ts, style=dashed];
m13_578 -> m13_578  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m13_579 -> m13_579  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m13_574 -> m13_578  [color=darkseagreen4, key=1, label=ratio, style=dashed];
m13_3055 -> m13_3057  [color=darkseagreen4, key=1, label=dict, style=dashed];
m13_3462 -> m13_3462  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_3463 -> m13_3463  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_856 -> m13_858  [color=darkseagreen4, key=1, label=p, style=dashed];
m13_856 -> m13_859  [color=darkseagreen4, key=1, label=p, style=dashed];
m13_1359 -> m13_1361  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3168 -> m13_3173  [color=darkseagreen4, key=1, label=person, style=dashed];
m13_1584 -> m13_1586  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_1584 -> m13_1587  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_1584 -> m13_1588  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_1584 -> m13_1589  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_1584 -> m13_1590  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m13_828 -> m13_832  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m13_827 -> m13_830  [color=darkseagreen4, key=1, label=store, style=dashed];
m13_827 -> m13_831  [color=darkseagreen4, key=1, label=store, style=dashed];
m13_829 -> m13_831  [color=darkseagreen4, key=1, label=deserializedStore, style=dashed];
m13_2624 -> m13_2626  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_2624 -> m13_2627  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1094 -> m13_1096  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m13_1094 -> m13_1097  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m13_1094 -> m13_1098  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m13_1094 -> m13_1099  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m13_1094 -> m13_1100  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m13_1094 -> m13_1101  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m13_1088 -> m13_1090  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1088 -> m13_1091  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1088 -> m13_1092  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_2156 -> m13_2158  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2156 -> m13_2159  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2156 -> m13_2160  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2156 -> m13_2161  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2156 -> m13_2162  [color=darkseagreen4, key=1, label=o2, style=dashed];
m13_2150 -> m13_2159  [color=darkseagreen4, key=1, label=dateTimeOffset, style=dashed];
m13_2152 -> m13_2155  [color=darkseagreen4, key=1, label=dateTimeOffsetText, style=dashed];
m13_1235 -> m13_1240  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m13_1235 -> m13_1241  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m13_1239 -> m13_1241  [color=darkseagreen4, key=1, label=m2, style=dashed];
m13_1624 -> m13_1626  [color=darkseagreen4, key=1, label=content, style=dashed];
m13_1624 -> m13_1627  [color=darkseagreen4, key=1, label=content, style=dashed];
m13_1624 -> m13_1628  [color=darkseagreen4, key=1, label=content, style=dashed];
m13_3513 -> m13_3509  [color=darkseagreen4, key=1, label=obj, style=dashed];
m13_2329 -> m13_2331  [color=darkseagreen4, key=1, label=reference, style=dashed];
m13_2329 -> m13_2335  [color=darkseagreen4, key=1, label=reference, style=dashed];
m13_2332 -> m13_2334  [color=darkseagreen4, key=1, label=child, style=dashed];
m13_2332 -> m13_2335  [color=darkseagreen4, key=1, label=child, style=dashed];
m13_3425 -> m13_3430  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_3427 -> m13_3430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_3427 -> m13_3429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_3842 -> m13_3846  [color=darkseagreen4, key=1, label=originalUri, style=dashed];
m13_3599 -> m13_3601  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1773 -> m13_1775  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_252 -> m13_254  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_252 -> m13_255  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_1853 -> m13_1857  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m13_1853 -> m13_1858  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m13_1853 -> m13_1859  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m13_1853 -> m13_1856  [color=darkseagreen4, key=1, label=searchResults, style=dashed];
m13_1852 -> m13_1854  [color=darkseagreen4, key=1, label=results, style=dashed];
m13_2169 -> m13_2171  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m13_2169 -> m13_2172  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m13_2169 -> m13_2173  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m13_2169 -> m13_2174  [color=darkseagreen4, key=1, label=kvPairs, style=dashed];
m13_1401 -> m13_1405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_712 -> m13_715  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m13_712 -> m13_721  [color=darkseagreen4, key=1, label=dictStore, style=dashed];
m13_718 -> m13_721  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m13_713 -> m13_715  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_713 -> m13_716  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_719 -> m13_723  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_716 -> m13_716  [color=darkseagreen4, key=1, label=i, style=dashed];
m13_720 -> m13_722  [color=darkseagreen4, key=1, label=streamWriter, style=dashed];
m13_724 -> m13_726  [color=darkseagreen4, key=1, label=stopWatch, style=dashed];
m13_3124 -> m13_3126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3645 -> m13_3647  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3645 -> m13_3648  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3645 -> m13_3649  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3645 -> m13_3650  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_1116 -> m13_1118  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_1116 -> m13_1119  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_991 -> m13_994  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m13_997 -> m13_999  [color=darkseagreen4, key=1, label=expected, style=dashed];
m13_992 -> m13_994  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_992 -> m13_995  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_2903 -> m13_2905  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m13_2897 -> m13_2899  [color=darkseagreen4, key=1, label=bsonWriter, style=dashed];
m13_2893 -> m13_2898  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_2892 -> m13_2898  [color=darkseagreen4, key=1, label=test, style=dashed];
m13_3242 -> m13_3253  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3242 -> m13_3246  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3242 -> m13_3247  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3242 -> m13_3248  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3242 -> m13_3249  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3242 -> m13_3250  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3243 -> m13_3253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m13_163 -> m13_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_167 -> m13_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_162 -> m13_172  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_1221 -> m13_1223  [color=darkseagreen4, key=1, label=m2, style=dashed];
m13_3628 -> m13_3630  [color=darkseagreen4, key=1, label=floats, style=dashed];
m13_3628 -> m13_3631  [color=darkseagreen4, key=1, label=floats, style=dashed];
m13_3632 -> m13_3634  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m13_3632 -> m13_3635  [color=darkseagreen4, key=1, label=doubles, style=dashed];
m13_1699 -> m13_1701  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1698 -> m13_1702  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_3161 -> m13_3163  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3161 -> m13_3164  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3161 -> m13_3165  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3156 -> m13_3158  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_3156 -> m13_3159  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_3156 -> m13_3160  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_262 -> m13_264  [color=darkseagreen4, key=1, label=l, style=dashed];
m13_262 -> m13_265  [color=darkseagreen4, key=1, label=l, style=dashed];
m13_258 -> m13_266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_258 -> m13_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_260 -> m13_263  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_3970 -> m13_3972  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1201 -> m13_1203  [color=darkseagreen4, key=1, label=m2, style=dashed];
m13_1197 -> m13_1202  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m13_1197 -> m13_1203  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m13_1678 -> m13_1680  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1677 -> m13_1681  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_3258 -> m13_3262  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3258 -> m13_3268  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3258 -> m13_3263  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3258 -> m13_3264  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3258 -> m13_3265  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3259 -> m13_3268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m13_3354 -> m13_3356  [color=darkseagreen4, key=1, label=testObj, style=dashed];
m13_3355 -> m13_3357  [color=darkseagreen4, key=1, label=objDeserialized, style=dashed];
m13_2633 -> m13_2635  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2633 -> m13_2636  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3015 -> m13_3018  [color=darkseagreen4, key=1, label=w, style=dashed];
m13_1212 -> m13_1214  [color=darkseagreen4, key=1, label=m2, style=dashed];
m13_1208 -> m13_1213  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m13_1208 -> m13_1214  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m13_3080 -> m13_3083  [color=darkseagreen4, key=1, label=dict, style=dashed];
m13_769 -> m13_802  [color=darkseagreen4, key=1, label=object, style=dashed];
m13_805 -> m13_808  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m13_805 -> m13_820  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_805 -> m13_809  [color=darkseagreen4, key=1, label=dataContractJson, style=dashed];
m13_807 -> m13_823  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_807 -> m13_810  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m13_807 -> m13_811  [color=darkseagreen4, key=1, label=jsonNetJson, style=dashed];
m13_810 -> m13_810  [color=darkseagreen4, key=1, label=property, style=dashed];
m13_800 -> m13_802  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_3906 -> m13_3912  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_3272 -> m13_3276  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3272 -> m13_3277  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3272 -> m13_3278  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3272 -> m13_3279  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3272 -> m13_3283  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3273 -> m13_3283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ErrorEventArgs", style=dashed];
m13_1061 -> m13_1063  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1061 -> m13_1064  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1061 -> m13_1065  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1061 -> m13_1066  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1061 -> m13_1067  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1016 -> m13_1022  [color=darkseagreen4, key=1, label=values, style=dashed];
m13_1016 -> m13_1018  [color=darkseagreen4, key=1, label=values, style=dashed];
m13_69 -> m13_71  [color=green, key=1, label="lambda expression", style=dashed];
m13_3737 -> m13_3744  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m13_3737 -> m13_3750  [color=darkseagreen4, key=1, label=consoleWriter, style=dashed];
m13_1863 -> m13_1872  [color=darkseagreen4, key=1, label=wagePerson, style=dashed];
m13_1264 -> m13_1266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1928 -> m13_1930  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_321 -> m13_323  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_321 -> m13_324  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_319 -> m13_322  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_319 -> m13_323  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_319 -> m13_324  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_374 -> m13_377  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_379  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_381  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_383  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_386  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_388  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_390  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_392  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_394  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_396  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_398  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_400  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_402  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_404  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_406  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_408  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_410  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_412  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_414  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_416  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_418  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_420  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_423  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_425  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_428  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_430  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_432  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_374 -> m13_387  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_375 -> m13_377  [color=darkseagreen4, key=1, label=customBinder, style=dashed];
m13_384 -> m13_386  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m13_421 -> m13_423  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m13_426 -> m13_428  [color=darkseagreen4, key=1, label=traceWriter, style=dashed];
m13_2600 -> m13_2602  [color=darkseagreen4, key=1, label=deserializedResponse, style=dashed];
m13_2598 -> m13_2602  [color=darkseagreen4, key=1, label=response, style=dashed];
m13_2571 -> m13_4132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m13_2619 -> m13_2621  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_3977 -> m13_3979  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_970 -> m13_972  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m13_969 -> m13_972  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m13_36 -> m13_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m13_36 -> m13_40  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m13_864 -> m13_869  [color=darkseagreen4, key=1, label=testDictionary, style=dashed];
m13_867 -> m13_869  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_863 -> m13_874  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m13_3948 -> m13_3950  [color=darkseagreen4, key=1, label=clonedObject, style=dashed];
m13_1569 -> m13_1571  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1569 -> m13_1572  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1569 -> m13_1573  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1569 -> m13_1574  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1569 -> m13_1575  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1569 -> m13_1576  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1569 -> m13_1577  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1569 -> m13_1578  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1569 -> m13_1579  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_4046 -> m13_4049  [color=darkseagreen4, key=1, label=encodingName, style=dashed];
m13_2670 -> m13_2672  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m13_2670 -> m13_2673  [color=darkseagreen4, key=1, label=commentTestClass, style=dashed];
m13_3108 -> m13_3110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3372 -> m13_3375  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m13_3373 -> m13_3375  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_1128 -> m13_1130  [color=darkseagreen4, key=1, label=indented, style=dashed];
m13_3028 -> m13_3030  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2653 -> m13_2655  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2049 -> m13_2051  [color=darkseagreen4, key=1, label=newModelStateDictionary, style=dashed];
m13_2701 -> m13_2703  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m13_2700 -> m13_2703  [color=darkseagreen4, key=1, label=cc, style=dashed];
m13_3997 -> m13_3999  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3996 -> m13_4000  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m13_3869 -> m13_3875  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_3869 -> m13_3880  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_3877 -> m13_3880  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_3877 -> m13_3879  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_3882 -> m13_3884  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_3882 -> m13_3885  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_1785 -> m13_1787  [color=darkseagreen4, key=1, label=strings, style=dashed];
m13_1785 -> m13_1788  [color=darkseagreen4, key=1, label=strings, style=dashed];
m13_1797 -> m13_1799  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3288 -> m13_3290  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3288 -> m13_3291  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3288 -> m13_3292  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3141 -> m13_3143  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_3141 -> m13_3144  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_3141 -> m13_3145  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_3146 -> m13_3148  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3146 -> m13_3149  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_3146 -> m13_3150  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_1165 -> m13_1167  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_30 -> m13_32  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m13_30 -> m13_33  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m13_30 -> m13_34  [color=darkseagreen4, key=1, label=foo2, style=dashed];
m13_27 -> m13_31  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m13_27 -> m13_32  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m13_27 -> m13_33  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m13_27 -> m13_34  [color=darkseagreen4, key=1, label=foo1, style=dashed];
m13_1741 -> m13_1743  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1740 -> m13_1744  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_3322 -> m13_3324  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m13_3322 -> m13_3325  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m13_1639 -> m13_1641  [color=darkseagreen4, key=1, label=values, style=dashed];
m13_1639 -> m13_1642  [color=darkseagreen4, key=1, label=values, style=dashed];
m13_3849 -> m13_3855  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_3849 -> m13_3860  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_3857 -> m13_3860  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_3857 -> m13_3859  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_3862 -> m13_3864  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_3862 -> m13_3865  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_1303 -> m13_1305  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m13_1303 -> m13_1306  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m13_1303 -> m13_1307  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m13_1303 -> m13_1308  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m13_1303 -> m13_1309  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m13_1303 -> m13_1310  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m13_1779 -> m13_1781  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3581 -> m13_3584  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m13_82 -> m13_84  [color=green, key=1, label="lambda expression", style=dashed];
m13_1727 -> m13_1729  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1726 -> m13_1730  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_649 -> m13_651  [color=darkseagreen4, key=1, label=r2, style=dashed];
m13_1535 -> m13_1537  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m13_1535 -> m13_1538  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m13_1415 -> m13_1418  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m13_1416 -> m13_1419  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m13_1417 -> m13_1420  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m13_877 -> m13_883  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m13_882 -> m13_884  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m13_882 -> m13_885  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m13_882 -> m13_887  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m13_882 -> m13_886  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m13_45 -> m13_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3192 -> m13_3195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m13_2446 -> m13_2446  [color=darkseagreen4, key=1, label=newStruct, style=dashed];
m13_1452 -> m13_1454  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1455 -> m13_1457  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_3591 -> m13_3593  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2963 -> m13_2965  [color=darkseagreen4, key=1, label=d2, style=dashed];
m13_2961 -> m13_2964  [color=darkseagreen4, key=1, label=d1, style=dashed];
m13_2961 -> m13_2965  [color=darkseagreen4, key=1, label=d1, style=dashed];
m13_671 -> m13_673  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2472 -> m13_2474  [color=darkseagreen4, key=1, label=deserializeObject, style=dashed];
m13_1293 -> m13_1295  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m13_1293 -> m13_1296  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m13_1173 -> m13_1175  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_1173 -> m13_1176  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_338 -> m13_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_337 -> m13_341  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2434 -> m13_2438  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2429 -> m13_2431  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_2429 -> m13_2432  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_2429 -> m13_2433  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_2425 -> m13_2434  [color=darkseagreen4, key=1, label=classRef, style=dashed];
m13_2427 -> m13_2434  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2427 -> m13_2439  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2426 -> m13_2428  [color=darkseagreen4, key=1, label=s1, style=dashed];
m13_1956 -> m13_1958  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m13_1956 -> m13_1959  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m13_1956 -> m13_1960  [color=darkseagreen4, key=1, label=newC1, style=dashed];
m13_1139 -> m13_1143  [color=darkseagreen4, key=1, label=guid, style=dashed];
m13_3130 -> m13_3132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2418 -> m13_2420  [color=darkseagreen4, key=1, label=z, style=dashed];
m13_2418 -> m13_2421  [color=darkseagreen4, key=1, label=z, style=dashed];
m13_1109 -> m13_1111  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1109 -> m13_1112  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1105 -> m13_1108  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1595 -> m13_1597  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_1595 -> m13_1598  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_1595 -> m13_1599  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_230 -> m13_232  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_224 -> m13_226  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_2948 -> m13_2950  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1430 -> m13_1432  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m13_1430 -> m13_1433  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m13_1430 -> m13_1434  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m13_1424 -> m13_1432  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_1424 -> m13_1433  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_1424 -> m13_1434  [color=darkseagreen4, key=1, label=o, style=dashed];
m13_2879 -> m13_2882  [color=darkseagreen4, key=1, label=uri, style=dashed];
m13_1521 -> m13_1523  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_1521 -> m13_1524  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_1521 -> m13_1525  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_1521 -> m13_1526  [color=darkseagreen4, key=1, label=n, style=dashed];
m13_3709 -> m13_3711  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_2584 -> m13_2586  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_2588 -> m13_2590  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_3330 -> m13_3332  [color=green, key=1, label=o, style=dashed];
m13_3333 -> m13_3335  [color=green, key=1, label=dic2, style=dashed];
m13_3333 -> m13_3336  [color=green, key=1, label=dic2, style=dashed];
m13_3984 -> m13_3986  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_2865 -> m13_2867  [color=darkseagreen4, key=1, label=jw, style=dashed];
m13_2863 -> m13_2866  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2022 -> m13_2025  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_1071 -> m13_1073  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1071 -> m13_1074  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1071 -> m13_1075  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1071 -> m13_1076  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_1071 -> m13_1077  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m13_920 -> m13_922  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_2393 -> m13_2395  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_2393 -> m13_2396  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_2393 -> m13_2397  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_705 -> m13_707  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_705 -> m13_708  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_705 -> m13_709  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_983 -> m13_985  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m13_983 -> m13_986  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m13_982 -> m13_985  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m13_980 -> m13_986  [color=darkseagreen4, key=1, label=javaScriptSerializerResult, style=dashed];
m13_953 -> m13_955  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_330 -> m13_332  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_330 -> m13_333  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_330 -> m13_334  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_3924 -> m13_3930  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_3924 -> m13_3935  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_3932 -> m13_3935  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_3932 -> m13_3934  [color=darkseagreen4, key=1, label=v, style=dashed];
m13_2853 -> m13_2855  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2853 -> m13_2856  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2853 -> m13_2857  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2853 -> m13_2858  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2850 -> m13_2854  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2850 -> m13_2855  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2850 -> m13_2856  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2850 -> m13_2857  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2850 -> m13_2858  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2737 -> m13_2739  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2737 -> m13_2740  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2737 -> m13_2741  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_2732 -> m13_2738  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2732 -> m13_2739  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_2732 -> m13_2734  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_1659 -> m13_1661  [color=darkseagreen4, key=1, label=a, style=dashed];
m13_1659 -> m13_1662  [color=darkseagreen4, key=1, label=a, style=dashed];
m13_1562 -> m13_1564  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1562 -> m13_1565  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1748 -> m13_1752  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_1749 -> m13_1751  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_1974 -> m13_1980  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_1978 -> m13_1980  [color=darkseagreen4, key=1, label=ms, style=dashed];
m13_1829 -> m13_1831  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m13_3888 -> m13_3894  [color=darkseagreen4, key=1, label=dt, style=dashed];
m13_2402 -> m13_2404  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_2402 -> m13_2405  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_2402 -> m13_2406  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_1602 -> m13_1604  [color=darkseagreen4, key=1, label=uri, style=dashed];
m13_1602 -> m13_1606  [color=darkseagreen4, key=1, label=uri, style=dashed];
m13_2320 -> m13_2322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_2312 -> m13_2314  [color=darkseagreen4, key=1, label=reference, style=dashed];
m13_2312 -> m13_2318  [color=darkseagreen4, key=1, label=reference, style=dashed];
m13_2315 -> m13_2317  [color=darkseagreen4, key=1, label=child, style=dashed];
m13_2315 -> m13_2318  [color=darkseagreen4, key=1, label=child, style=dashed];
m13_2319 -> m13_2323  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2987 -> m13_2989  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3655 -> m13_3658  [color=darkseagreen4, key=1, label=s2, style=dashed];
m13_3653 -> m13_3656  [color=darkseagreen4, key=1, label=s1, style=dashed];
m13_3653 -> m13_3657  [color=darkseagreen4, key=1, label=s1, style=dashed];
m13_3639 -> m13_3641  [color=darkseagreen4, key=1, label=expected, style=dashed];
m13_3313 -> m13_3315  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m13_3313 -> m13_3316  [color=darkseagreen4, key=1, label=dic2, style=dashed];
m13_3208 -> m13_3216  [color=darkseagreen4, key=1, label=values, style=dashed];
m13_3208 -> m13_3217  [color=darkseagreen4, key=1, label=values, style=dashed];
m13_3208 -> m13_3218  [color=darkseagreen4, key=1, label=values, style=dashed];
m13_3208 -> m13_3215  [color=darkseagreen4, key=1, label=values, style=dashed];
m13_3209 -> m13_3212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m13_906 -> m13_908  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_2684 -> m13_2686  [color=darkseagreen4, key=1, label=withoutParameterisedConstructor, style=dashed];
m13_1039 -> m13_1046  [color=darkseagreen4, key=1, label=d, style=dashed];
m13_217 -> m13_219  [color=darkseagreen4, key=1, label=c2, style=dashed];
m13_212 -> m13_214  [color=darkseagreen4, key=1, label=c, style=dashed];
m13_3415 -> m13_3417  [color=darkseagreen4, key=1, label=exception, style=dashed];
m13_3415 -> m13_3418  [color=darkseagreen4, key=1, label=exception, style=dashed];
m13_312 -> m13_314  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_312 -> m13_315  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_310 -> m13_313  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_310 -> m13_314  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_310 -> m13_315  [color=darkseagreen4, key=1, label=input, style=dashed];
m13_592 -> m13_594  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_592 -> m13_595  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_592 -> m13_596  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_592 -> m13_597  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_592 -> m13_598  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.SerializationInfo", style=dashed];
m13_1760 -> m13_1762  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_947 -> m13_949  [color=darkseagreen4, key=1, label=test2, style=dashed];
m13_942 -> m13_948  [color=darkseagreen4, key=1, label=test, style=dashed];
m13_942 -> m13_949  [color=darkseagreen4, key=1, label=test, style=dashed];
m13_3001 -> m13_3003  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3000 -> m13_3004  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_2808 -> m13_2810  [color=darkseagreen4, key=1, label=r, style=dashed];
m13_2808 -> m13_2811  [color=darkseagreen4, key=1, label=r, style=dashed];
m13_2808 -> m13_2812  [color=darkseagreen4, key=1, label=r, style=dashed];
m13_2808 -> m13_2813  [color=darkseagreen4, key=1, label=r, style=dashed];
m13_4092 -> m13_341  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4097 -> m13_964  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4102 -> m13_1654  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4103 -> m13_1681  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4104 -> m13_1688  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4105 -> m13_1695  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4106 -> m13_1702  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4107 -> m13_1709  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4108 -> m13_1716  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4109 -> m13_1723  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4110 -> m13_1730  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4124 -> m13_2323  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4128 -> m13_2439  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4141 -> m13_3004  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4151 -> m13_3611  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4112 -> m13_1752  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4086 -> m13_150  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_4088 -> m13_172  [color=darkseagreen4, key=1, label=c1, style=dashed];
m13_4085 -> m13_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", style=dashed];
m13_4142 -> m13_3253  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_4096 -> m13_3362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", style=dashed];
m13_4145 -> m13_3411  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4146 -> m13_3411  [color=darkseagreen4, key=1, label=s, style=dashed];
m13_4143 -> m13_3268  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_4144 -> m13_3283  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_4111 -> m13_1744  [color=darkseagreen4, key=1, label=json, style=dashed];
m13_4156 -> m13_4000  [color=darkseagreen4, key=1, label=JsonMessage, style=dashed];
m13_4093 -> m13_508  [color=darkseagreen4, key=1, label=referenceResolver, style=dashed];
m13_4101 -> m13_1550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
m13_4138 -> m13_2798  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", style=dashed];
m13_4114 -> m13_1892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m13_4114 -> m13_1898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m13_4114 -> m13_1895  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", style=dashed];
m13_4116 -> m13_1935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", style=dashed];
m13_4119 -> m13_1993  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2000  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_1997  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2007  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2003  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2011  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2015  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2019  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2029  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2033  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2037  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4119 -> m13_2041  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", style=dashed];
m13_4120 -> m13_2093  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2095  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2096  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2097  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2099  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4120 -> m13_2110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", style=dashed];
m13_4094 -> m13_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m13_4094 -> m13_594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m13_4094 -> m13_595  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m13_4094 -> m13_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m13_4094 -> m13_597  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m13_4094 -> m13_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m13_4094 -> m13_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", style=dashed];
m13_4095 -> m13_745  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", style=dashed];
m13_4153 -> m13_3779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m13_4153 -> m13_3773  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m13_4153 -> m13_3775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m13_4153 -> m13_3777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m13_4153 -> m13_3802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m13_4153 -> m13_3805  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m13_4153 -> m13_3808  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", style=dashed];
m13_4089 -> m13_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", style=dashed];
m13_4133 -> m13_2574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", style=dashed];
m16_3 -> m16_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_968 -> m17_975  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_968 -> m17_977  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_968 -> m17_980  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_968 -> m17_983  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_968 -> m17_986  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_968 -> m17_988  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_990 -> m17_996  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m17_364 -> m17_1230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_17 -> m17_20  [color=darkseagreen4, key=1, label=char, style=dashed];
m17_17 -> m17_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_17 -> m17_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_17 -> m17_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_181 -> m17_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_181 -> m17_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_181 -> m17_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_181 -> m17_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_181 -> m17_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_181 -> m17_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_181 -> m17_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_181 -> m17_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_467 -> m17_475  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_467 -> m17_518  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_467 -> m17_527  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_467 -> m17_528  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_843 -> m17_846  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_843 -> m17_849  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_801 -> m17_803  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m17_801 -> m17_808  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m17_805 -> m17_807  [color=darkseagreen4, key=1, label=quoteChar, style=dashed];
m17_815 -> m17_823  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m17_818 -> m17_823  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m17_817 -> m17_823  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m17_191 -> m17_211  [color=darkseagreen4, key=1, label=isWrapped, style=dashed];
m17_201 -> m17_209  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_201 -> m17_238  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_201 -> m17_247  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_201 -> m17_248  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_210 -> m17_215  [color=darkseagreen4, key=1, label=data, style=dashed];
m17_210 -> m17_216  [color=darkseagreen4, key=1, label=data, style=dashed];
m17_668 -> m17_672  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_668 -> m17_673  [color=darkseagreen4, key=1, label=char, style=dashed];
m17_185 -> m17_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_185 -> m17_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_185 -> m17_297  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_185 -> m17_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_185 -> m17_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_185 -> m17_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_185 -> m17_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_185 -> m17_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_185 -> m17_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_275 -> m17_283  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_275 -> m17_316  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_275 -> m17_323  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_275 -> m17_345  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_275 -> m17_354  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_275 -> m17_355  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_324 -> m17_327  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_324 -> m17_328  [color=darkseagreen4, key=1, label=expected, style=dashed];
m17_383 -> m17_391  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_383 -> m17_432  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_383 -> m17_441  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_383 -> m17_442  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_417 -> m17_421  [color=darkseagreen4, key=1, label=isTrue, style=dashed];
m17_417 -> m17_422  [color=darkseagreen4, key=1, label=isTrue, style=dashed];
m17_411 -> m17_414  [color=darkseagreen4, key=1, label=b, style=dashed];
m17_412 -> m17_414  [color=darkseagreen4, key=1, label=b, style=dashed];
m17_687 -> m17_689  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_687 -> m17_692  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_687 -> m17_723  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_723 -> m17_723  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_725 -> m17_728  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_1170 -> m17_1175  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_1170 -> m17_1176  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_1174 -> m17_1176  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_1174 -> m17_1179  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_1179 -> m17_1179  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_368 -> m17_1243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_369 -> m17_1256  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_0 -> m17_2  [color=darkseagreen4, key=1, label="System.IO.TextReader", style=dashed];
m17_1165 -> m17_1167  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_1190 -> m17_1209  [color=darkseagreen4, key=1, label=char, style=dashed];
m17_261 -> m17_939  [color=darkseagreen4, key=1, label=bool, style=dashed];
m17_128 -> m17_133  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m17_128 -> m17_134  [color=darkseagreen4, key=1, label=charsRequired, style=dashed];
m17_132 -> m17_134  [color=darkseagreen4, key=1, label=totalCharsRead, style=dashed];
m17_68 -> m17_70  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m17_75 -> m17_77  [color=darkseagreen4, key=1, label=count, style=dashed];
m17_1107 -> m17_1118  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_175 -> m17_1142  [color=darkseagreen4, key=1, label=bool, style=dashed];
m17_175 -> m17_1150  [color=darkseagreen4, key=1, label=bool, style=dashed];
m17_175 -> m17_1155  [color=darkseagreen4, key=1, label=bool, style=dashed];
m17_175 -> m17_1160  [color=darkseagreen4, key=1, label=bool, style=dashed];
m17_1127 -> m17_1140  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1127 -> m17_1147  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1127 -> m17_1154  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1127 -> m17_1159  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1129 -> m17_1140  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1129 -> m17_1147  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1129 -> m17_1154  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1129 -> m17_1159  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1131 -> m17_1140  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1131 -> m17_1147  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1131 -> m17_1154  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1131 -> m17_1159  [color=darkseagreen4, key=1, label=singlelineComment, style=dashed];
m17_1134 -> m17_1142  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m17_1134 -> m17_1150  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m17_1134 -> m17_1155  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m17_1134 -> m17_1160  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m17_59 -> m17_589  [color=darkseagreen4, key=1, label=char, style=dashed];
m17_59 -> m17_593  [color=darkseagreen4, key=1, label=char, style=dashed];
m17_59 -> m17_653  [color=darkseagreen4, key=1, label=char, style=dashed];
m17_578 -> m17_583  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_579 -> m17_655  [color=darkseagreen4, key=1, label=initialPosition, style=dashed];
m17_583 -> m17_583  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_583 -> m17_585  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_583 -> m17_586  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_583 -> m17_596  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_580 -> m17_633  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m17_580 -> m17_641  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m17_586 -> m17_586  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_586 -> m17_596  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_594 -> m17_633  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m17_594 -> m17_641  [color=darkseagreen4, key=1, label=escapeStartPos, style=dashed];
m17_595 -> m17_598  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_595 -> m17_639  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_596 -> m17_596  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_617 -> m17_620  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m17_617 -> m17_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m17_624 -> m17_633  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m17_619 -> m17_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m17_622 -> m17_636  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m17_635 -> m17_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m17_626 -> m17_628  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m17_626 -> m17_641  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m17_629 -> m17_633  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m17_631 -> m17_633  [color=darkseagreen4, key=1, label=highSurrogate, style=dashed];
m17_630 -> m17_636  [color=darkseagreen4, key=1, label=anotherHighSurrogate, style=dashed];
m17_634 -> m17_641  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m17_642 -> m17_655  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m17_642 -> m17_658  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m17_642 -> m17_659  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m17_650 -> m17_653  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_650 -> m17_654  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_654 -> m17_654  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_654 -> m17_658  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_654 -> m17_659  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_654 -> m17_661  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_661 -> m17_661  [color=darkseagreen4, key=1, label=charPos, style=dashed];
m17_736 -> m17_770  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_736 -> m17_772  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_173 -> m17_961  [color=darkseagreen4, key=1, label=bool, style=dashed];
m17_943 -> m17_945  [color=darkseagreen4, key=1, label=finished, style=dashed];
m17_944 -> m17_961  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m17_946 -> m17_957  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_958 -> m17_961  [color=darkseagreen4, key=1, label=ateWhitespace, style=dashed];
m17_120 -> m17_122  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_86 -> m17_89  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_86 -> m17_90  [color=darkseagreen4, key=1, label=bool, style=dashed];
m17_86 -> m17_97  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_98 -> m17_100  [color=darkseagreen4, key=1, label=dst, style=dashed];
m17_96 -> m17_99  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m17_96 -> m17_100  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m17_96 -> m17_103  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m17_96 -> m17_104  [color=darkseagreen4, key=1, label=remainingCharCount, style=dashed];
m17_109 -> m17_111  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m17_109 -> m17_114  [color=darkseagreen4, key=1, label=charsRead, style=dashed];
m17_676 -> m17_682  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m17_679 -> m17_682  [color=darkseagreen4, key=1, label=writeChar, style=dashed];
m17_852 -> m17_861  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_852 -> m17_923  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_852 -> m17_925  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_852 -> m17_928  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_871 -> m17_874  [color=darkseagreen4, key=1, label=next, style=dashed];
m17_365 -> m17_1009  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_365 -> m17_1022  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_365 -> m17_1039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_365 -> m17_1054  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReadType", style=dashed];
m17_1007 -> m17_1023  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m17_1007 -> m17_1040  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m17_1007 -> m17_1055  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m17_1007 -> m17_1069  [color=darkseagreen4, key=1, label=singleDigit, style=dashed];
m17_1008 -> m17_1011  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m17_1008 -> m17_1025  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m17_1008 -> m17_1042  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m17_1008 -> m17_1057  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m17_1008 -> m17_1072  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m17_1024 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1041 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1056 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1070 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1005 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1010 -> m17_1012  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1010 -> m17_1013  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1010 -> m17_1014  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1010 -> m17_1016  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1010 -> m17_1018  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1021 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1020 -> m17_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m17_1026 -> m17_1030  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1028 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1038 -> m17_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m17_1032 -> m17_1035  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m17_1034 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1043 -> m17_1047  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1048 -> m17_1050  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1045 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1053 -> m17_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m17_1051 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1058 -> m17_1062  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1060 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1068 -> m17_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m17_1066 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1071 -> m17_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m17_1073 -> m17_1076  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1074 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1077 -> m17_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m17_1079 -> m17_1083  [color=darkseagreen4, key=1, label=parseResult, style=dashed];
m17_1081 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1082 -> m17_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m17_1089 -> m17_1092  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1089 -> m17_1094  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1089 -> m17_1099  [color=darkseagreen4, key=1, label=number, style=dashed];
m17_1087 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1088 -> m17_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m17_1093 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1098 -> m17_1102  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m17_1100 -> m17_1102  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m17_775 -> m17_796  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m17_1283 -> m17_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_77  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_153  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_205  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_436  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_453  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_454  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_458  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_583  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_640  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_657  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_672  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_681  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_693  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_728  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_739  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_740  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_745  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_750  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_753  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_754  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_761  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_765  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_767  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_769  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_771  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_772  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_778  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_779  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_781  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_783  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_787  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_790  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_795  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_798  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_804  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_806  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_807  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_808  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_812  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_819  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_820  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_821  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_822  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_823  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_825  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_836  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_838  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_839  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_844  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_845  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_849  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_855  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_856  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_858  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_861  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_864  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_867  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_870  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_873  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_875  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_876  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_877  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_878  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_881  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_884  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_887  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_888  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_889  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_892  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_895  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_899  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_902  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_903  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_906  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_907  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_910  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_913  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_914  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_917  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_919  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_924  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_928  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_935  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_938  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_939  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_940  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_941  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_949  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_950  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_952  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_954  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_956  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_959  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_963  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_964  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_970  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_971  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_972  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_974  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_976  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_979  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_982  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_985  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_988  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_991  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_993  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_994  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_995  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_996  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_997  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_999  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1002  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1003  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1016  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1019  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1030  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1036  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1037  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1047  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1052  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1062  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1067  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1076  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1086  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1090  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1099  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1133  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1155  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1160  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1167  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1239  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1255  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m17_1283 -> m17_1275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m19_155 -> m19_161  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_155 -> m19_170  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_155 -> m19_157  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_155 -> m19_159  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_155 -> m19_164  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_155 -> m19_160  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_155 -> m19_158  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_162 -> m19_165  [color=darkseagreen4, key=1, label=t, style=dashed];
m19_162 -> m19_166  [color=darkseagreen4, key=1, label=t, style=dashed];
m19_162 -> m19_167  [color=darkseagreen4, key=1, label=t, style=dashed];
m19_168 -> m19_171  [color=darkseagreen4, key=1, label=t, style=dashed];
m19_168 -> m19_172  [color=darkseagreen4, key=1, label=t, style=dashed];
m19_168 -> m19_173  [color=darkseagreen4, key=1, label=t, style=dashed];
m19_189 -> m19_191  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m19_189 -> m19_192  [color=darkseagreen4, key=1, label=beforeTokens, style=dashed];
m19_3 -> m19_5  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_3 -> m19_6  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_7 -> m19_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m19_10 -> m19_12  [color=darkseagreen4, key=1, label=p, style=dashed];
m19_13 -> m19_15  [color=darkseagreen4, key=1, label=c, style=dashed];
m19_241 -> m19_246  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_241 -> m19_251  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_241 -> m19_243  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_241 -> m19_244  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_241 -> m19_245  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_241 -> m19_248  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_241 -> m19_249  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_241 -> m19_250  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_241 -> m19_252  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_241 -> m19_247  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_48 -> m19_50  [color=green, key=1, label=o2, style=dashed];
m19_48 -> m19_51  [color=green, key=1, label=o2, style=dashed];
m19_48 -> m19_52  [color=green, key=1, label=o2, style=dashed];
m19_37 -> m19_40  [color=darkseagreen4, key=1, label=o, style=dashed];
m19_37 -> m19_43  [color=darkseagreen4, key=1, label=o, style=dashed];
m19_37 -> m19_44  [color=darkseagreen4, key=1, label=o, style=dashed];
m19_37 -> m19_46  [color=darkseagreen4, key=1, label=o, style=dashed];
m19_37 -> m19_47  [color=darkseagreen4, key=1, label=o, style=dashed];
m19_35 -> m19_37  [color=darkseagreen4, key=1, label=v, style=dashed];
m19_35 -> m19_38  [color=darkseagreen4, key=1, label=v, style=dashed];
m19_35 -> m19_40  [color=darkseagreen4, key=1, label=v, style=dashed];
m19_35 -> m19_41  [color=darkseagreen4, key=1, label=v, style=dashed];
m19_35 -> m19_42  [color=darkseagreen4, key=1, label=v, style=dashed];
m19_35 -> m19_43  [color=darkseagreen4, key=1, label=v, style=dashed];
m19_45 -> m19_49  [color=darkseagreen4, key=1, label=o1, style=dashed];
m19_45 -> m19_50  [color=darkseagreen4, key=1, label=o1, style=dashed];
m19_45 -> m19_51  [color=darkseagreen4, key=1, label=o1, style=dashed];
m19_45 -> m19_52  [color=darkseagreen4, key=1, label=o1, style=dashed];
m19_39 -> m19_41  [color=darkseagreen4, key=1, label=p, style=dashed];
m19_39 -> m19_42  [color=darkseagreen4, key=1, label=p, style=dashed];
m19_256 -> m19_260  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_256 -> m19_259  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_257 -> m19_261  [color=darkseagreen4, key=1, label=first, style=dashed];
m19_257 -> m19_262  [color=darkseagreen4, key=1, label=first, style=dashed];
m19_209 -> m19_211  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m19_209 -> m19_213  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m19_209 -> m19_214  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m19_209 -> m19_215  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m19_209 -> m19_212  [color=darkseagreen4, key=1, label=descendants, style=dashed];
m19_179 -> m19_181  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m19_179 -> m19_182  [color=darkseagreen4, key=1, label=afterTokens, style=dashed];
m19_199 -> m19_203  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_199 -> m19_204  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_201 -> m19_203  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m19_201 -> m19_204  [color=darkseagreen4, key=1, label=ancestors, style=dashed];
m19_89 -> m19_91  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_96 -> m19_98  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_219 -> m19_231  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_219 -> m19_222  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_219 -> m19_224  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_219 -> m19_225  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_219 -> m19_230  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_220 -> m19_223  [color=darkseagreen4, key=1, label=writer, style=dashed];
m19_220 -> m19_226  [color=darkseagreen4, key=1, label=writer, style=dashed];
m19_220 -> m19_227  [color=darkseagreen4, key=1, label=writer, style=dashed];
m19_220 -> m19_228  [color=darkseagreen4, key=1, label=writer, style=dashed];
m19_220 -> m19_229  [color=darkseagreen4, key=1, label=writer, style=dashed];
m19_148 -> m19_150  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_148 -> m19_151  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_279 -> m19_282  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_279 -> m19_287  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_279 -> m19_281  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_279 -> m19_284  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_279 -> m19_286  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_279 -> m19_288  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_279 -> m19_283  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_279 -> m19_285  [color=darkseagreen4, key=1, label=a, style=dashed];
m22_3 -> m22_10  [color=green, key=1, label="lambda expression", style=dashed];
m23_1 -> m23_4  [color=green, key=1, label=o, style=dashed];
m23_1 -> m23_3  [color=darkseagreen4, key=1, label=o, style=dashed];
}
