digraph  {
n427 [label="Newtonsoft.Json.Bson.BsonReader.ContainerContext", span=""];
n428 [label="Newtonsoft.Json.Bson.BsonReader", span=""];
n0 [label="Entry Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80", cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)"];
n1 [label="Type = type", span="82-82", cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)"];
n2 [label="Exit Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)", span="80-80", cluster="Newtonsoft.Json.Bson.BsonReader.ContainerContext.ContainerContext(Newtonsoft.Json.Bson.BsonType)"];
n3 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)"];
n4 [label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)"];
n5 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)"];
n6 [label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)", span="134-134", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader)"];
n7 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)"];
n8 [label="ValidationUtils.ArgumentNotNull(stream, ''stream'')", span="147-147", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)"];
n9 [label="_reader = new BinaryReader(stream)", span="148-148", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)"];
n11 [label="_readRootValueAsArray = readRootValueAsArray", span="150-150", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)"];
n12 [label="_dateTimeKindHandling = dateTimeKindHandling", span="151-151", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)"];
n14 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)"];
n10 [label="_stack = new List<ContainerContext>()", span="149-149", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)"];
n15 [label="Entry System.IO.BinaryReader.BinaryReader(System.IO.Stream)", span="0-0", cluster="System.IO.BinaryReader.BinaryReader(System.IO.Stream)"];
n16 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n13 [label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)", span="145-145", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream, bool, System.DateTimeKind)"];
n17 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)"];
n18 [label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="162-162", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)"];
n19 [label="_reader = reader", span="163-163", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)"];
n21 [label="_readRootValueAsArray = readRootValueAsArray", span="165-165", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)"];
n22 [label="_dateTimeKindHandling = dateTimeKindHandling", span="166-166", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)"];
n20 [label="_stack = new List<ContainerContext>()", span="164-164", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)"];
n23 [label="Exit Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)", span="160-160", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.BinaryReader, bool, System.DateTimeKind)"];
n24 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169", cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()"];
n25 [label="_currentElementType = ReadType()", span="171-171", cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()"];
n26 [label="string elementName = ReadString()", span="172-172", cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()"];
n29 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType()", span="838-838", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()"];
n27 [label="return elementName;", span="173-173", cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()"];
n30 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadString()", span="628-628", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n28 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadElement()", span="169-169", cluster="Newtonsoft.Json.Bson.BsonReader.ReadElement()"];
n31 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="182-182", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()"];
n32 [label="return ReadAsBytesInternal();", span="184-184", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()"];
n33 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()", span="182-182", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsBytes()"];
n34 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475", cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()"];
n35 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()"];
n36 [label="return ReadAsDecimalInternal();", span="193-193", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()"];
n37 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()", span="191-191", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDecimal()"];
n38 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="576-576", cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()"];
n39 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", span="200-200", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()"];
n40 [label="return ReadAsInt32Internal();", span="202-202", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()"];
n41 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()", span="200-200", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsInt32()"];
n42 [label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="633-633", cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()"];
n43 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsString()", span="209-209", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()"];
n44 [label="return ReadAsStringInternal();", span="211-211", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()"];
n45 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsString()", span="209-209", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsString()"];
n46 [label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="690-690", cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()"];
n47 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()"];
n48 [label="return ReadAsDateTimeInternal();", span="220-220", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()"];
n49 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()", span="218-218", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTime()"];
n50 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="736-736", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()"];
n51 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()"];
n52 [label="return ReadAsDateTimeOffsetInternal();", span="232-232", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()"];
n53 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()", span="230-230", cluster="Newtonsoft.Json.Bson.BsonReader.ReadAsDateTimeOffset()"];
n54 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()"];
n55 [label="Entry Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242", cluster="Newtonsoft.Json.Bson.BsonReader.Read()"];
n56 [label="_readType = Json.ReadType.Read", span="244-244", cluster="Newtonsoft.Json.Bson.BsonReader.Read()"];
n57 [label="return ReadInternal();", span="246-246", cluster="Newtonsoft.Json.Bson.BsonReader.Read()"];
n58 [label="Exit Newtonsoft.Json.Bson.BsonReader.Read()", span="242-242", cluster="Newtonsoft.Json.Bson.BsonReader.Read()"];
n59 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInternal()", span="249-249", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n60 [label="bool success", span="253-253", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n61 [label=_bsonReaderState, span="255-255", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n62 [label="BsonReaderState.Normal", span="257-257", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n64 [label="BsonReaderState.ReferenceStart", span="260-260", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n68 [label="BsonReaderState.CodeWScopeStart", span="265-265", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n74 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}''.FormatWith(CultureInfo.InvariantCulture, _bsonReaderState));", span="273-273", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n63 [label="success = ReadNormal()", span="258-258", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n65 [label="BsonReaderState.ReferenceRef", span="261-261", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n66 [label="BsonReaderState.ReferenceId", span="262-262", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n67 [label="success = ReadReference()", span="263-263", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n69 [label="BsonReaderState.CodeWScopeCode", span="266-266", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n70 [label="BsonReaderState.CodeWScopeScope", span="267-267", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n71 [label="BsonReaderState.CodeWScopeScopeObject", span="268-268", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n72 [label="BsonReaderState.CodeWScopeScopeEnd", span="269-269", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n73 [label="success = ReadCodeWScope()", span="270-270", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n75 [label="!success", span="276-276", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n85 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n83 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="404-404", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n84 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n76 [label="SetToken(JsonToken.None)", span="278-278", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n78 [label="return true;", span="282-282", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n77 [label="return false;", span="279-279", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n88 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="840-840", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)"];
n79 [label=EndOfStreamException, span="284-284", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n80 [label="SetToken(JsonToken.None)", span="286-286", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n81 [label="return false;", span="287-287", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n82 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInternal()", span="249-249", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInternal()"];
n86 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)"];
n87 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)"];
n89 [label="Entry Newtonsoft.Json.Bson.BsonReader.Close()", span="294-294", cluster="Newtonsoft.Json.Bson.BsonReader.Close()"];
n90 [label="base.Close()", span="296-296", cluster="Newtonsoft.Json.Bson.BsonReader.Close()"];
n91 [label="CloseInput && _reader != null", span="298-298", cluster="Newtonsoft.Json.Bson.BsonReader.Close()"];
n94 [label="Entry Newtonsoft.Json.JsonReader.Close()", span="1002-1002", cluster="Newtonsoft.Json.JsonReader.Close()"];
n92 [label="_reader.Close()", span="300-300", cluster="Newtonsoft.Json.Bson.BsonReader.Close()"];
n93 [label="Exit Newtonsoft.Json.Bson.BsonReader.Close()", span="294-294", cluster="Newtonsoft.Json.Bson.BsonReader.Close()"];
n95 [label="Entry System.IO.BinaryReader.Close()", span="0-0", cluster="System.IO.BinaryReader.Close()"];
n96 [label=_bsonReaderState, span="308-308", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n97 [label="BsonReaderState.CodeWScopeStart", span="310-310", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n101 [label="BsonReaderState.CodeWScopeCode", span="314-314", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n106 [label="BsonReaderState.CodeWScopeScope", span="321-321", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n116 [label="BsonReaderState.CodeWScopeScopeObject", span="338-338", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n121 [label="BsonReaderState.CodeWScopeScopeEnd", span="344-344", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n125 [label="throw new ArgumentOutOfRangeException();", span="349-349", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n98 [label="SetToken(JsonToken.PropertyName, ''$code'')", span="311-311", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n99 [label="_bsonReaderState = BsonReaderState.CodeWScopeCode", span="312-312", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n127 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="850-850", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)"];
n100 [label="return true;", span="313-313", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n102 [label="ReadInt32()", span="316-316", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n103 [label="SetToken(JsonToken.String, ReadLengthString())", span="318-318", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n128 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="826-826", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()"];
n104 [label="_bsonReaderState = BsonReaderState.CodeWScopeScope", span="319-319", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n129 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="690-690", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()"];
n105 [label="return true;", span="320-320", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n107 [label="CurrentState == State.PostValue", span="322-322", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n108 [label="SetToken(JsonToken.PropertyName, ''$scope'')", span="324-324", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n110 [label="SetToken(JsonToken.StartObject)", span="329-329", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n109 [label="return true;", span="325-325", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n111 [label="_bsonReaderState = BsonReaderState.CodeWScopeScopeObject", span="330-330", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n112 [label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="332-332", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n113 [label="PushContext(newContext)", span="333-333", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n114 [label="newContext.Length = ReadInt32()", span="334-334", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n130 [label="Entry Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="491-491", cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)"];
n115 [label="return true;", span="336-336", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n117 [label="bool result = ReadNormal()", span="339-339", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n118 [label="result && TokenType == JsonToken.EndObject", span="340-340", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n120 [label="return result;", span="343-343", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n119 [label="_bsonReaderState = BsonReaderState.CodeWScopeScopeEnd", span="341-341", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n122 [label="SetToken(JsonToken.EndObject)", span="345-345", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n123 [label="_bsonReaderState = BsonReaderState.Normal", span="346-346", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n124 [label="return true;", span="347-347", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n126 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()", span="306-306", cluster="Newtonsoft.Json.Bson.BsonReader.ReadCodeWScope()"];
n131 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()"];
n132 [label=CurrentState, span="355-355", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n133 [label="State.ObjectStart", span="357-357", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n137 [label="State.Property", span="363-363", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n145 [label="State.PostValue", span="380-380", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n155 [label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + CurrentState);", span="400-400", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n134 [label="SetToken(JsonToken.PropertyName, JsonTypeReflector.RefPropertyName)", span="359-359", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n135 [label="_bsonReaderState = BsonReaderState.ReferenceRef", span="360-360", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n136 [label="return true;", span="361-361", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n138 [label="_bsonReaderState == BsonReaderState.ReferenceRef", span="365-365", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n139 [label="SetToken(JsonToken.String, ReadLengthString())", span="367-367", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n141 [label="_bsonReaderState == BsonReaderState.ReferenceId", span="370-370", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n140 [label="return true;", span="368-368", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n142 [label="SetToken(JsonToken.Bytes, ReadBytes(12))", span="372-372", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n144 [label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="377-377", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n143 [label="return true;", span="373-373", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n157 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="849-849", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)"];
n146 [label="_bsonReaderState == BsonReaderState.ReferenceRef", span="382-382", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n147 [label="SetToken(JsonToken.PropertyName, JsonTypeReflector.IdPropertyName)", span="384-384", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n150 [label="_bsonReaderState == BsonReaderState.ReferenceId", span="388-388", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n148 [label="_bsonReaderState = BsonReaderState.ReferenceId", span="385-385", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n149 [label="return true;", span="386-386", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n151 [label="SetToken(JsonToken.EndObject)", span="390-390", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n154 [label="throw JsonReaderException.Create(this, ''Unexpected state when reading BSON reference: '' + _bsonReaderState);", span="396-396", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n152 [label="_bsonReaderState = BsonReaderState.Normal", span="391-391", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n153 [label="return true;", span="392-392", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n156 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadReference()", span="353-353", cluster="Newtonsoft.Json.Bson.BsonReader.ReadReference()"];
n158 [label=CurrentState, span="406-406", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n159 [label="State.Start", span="408-408", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n167 [label="State.Complete", span="419-419", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n170 [label="State.Property", span="422-422", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n173 [label="State.ObjectStart", span="427-427", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n197 [label="State.ConstructorStart", span="467-467", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n198 [label="State.Constructor", span="469-469", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n199 [label="State.Error", span="471-471", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n200 [label="State.Finished", span="473-473", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n201 [label="throw new ArgumentOutOfRangeException();", span="476-476", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n160 [label="JsonToken token = (!_readRootValueAsArray) ? JsonToken.StartObject : JsonToken.StartArray", span="410-410", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n161 [label="BsonType type = (!_readRootValueAsArray) ? BsonType.Object : BsonType.Array", span="411-411", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n162 [label="SetToken(token)", span="413-413", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n163 [label="ContainerContext newContext = new ContainerContext(type)", span="414-414", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n164 [label="PushContext(newContext)", span="415-415", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n165 [label="newContext.Length = ReadInt32()", span="416-416", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n166 [label="return true;", span="417-417", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n168 [label="State.Closed", span="420-420", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n169 [label="return false;", span="421-421", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n171 [label="ReadType(_currentElementType)", span="424-424", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n172 [label="return true;", span="425-425", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n204 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="503-503", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n174 [label="State.ArrayStart", span="428-428", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n175 [label="State.PostValue", span="429-429", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n176 [label="ContainerContext context = _currentContext", span="430-430", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n177 [label="context == null", span="431-431", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n179 [label="int lengthMinusEnd = context.Length - 1", span="434-434", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n180 [label="context.Position < lengthMinusEnd", span="436-436", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n181 [label="context.Type == BsonType.Array", span="438-438", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n187 [label="context.Position == lengthMinusEnd", span="450-450", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n192 [label="MovePosition(context.Length)", span="457-457", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n193 [label="JsonToken endToken = (context.Type == BsonType.Object) ? JsonToken.EndObject : JsonToken.EndArray", span="459-459", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n178 [label="return false;", span="432-432", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n182 [label="ReadElement()", span="440-440", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n185 [label="SetToken(JsonToken.PropertyName, ReadElement())", span="446-446", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n183 [label="ReadType(_currentElementType)", span="441-441", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n184 [label="return true;", span="442-442", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n186 [label="return true;", span="447-447", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n188 [label="ReadByte() != 0", span="452-452", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n196 [label="throw JsonReaderException.Create(this, ''Read past end of current container context.'');", span="465-465", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n189 [label="throw JsonReaderException.Create(this, ''Unexpected end of object byte value.'');", span="453-453", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n190 [label="PopContext()", span="455-455", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n205 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497", cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()"];
n191 [label="_currentContext != null", span="456-456", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n206 [label="Entry Newtonsoft.Json.Bson.BsonReader.PopContext()", span="482-482", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()"];
n207 [label="Entry Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="844-844", cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)"];
n194 [label="SetToken(endToken)", span="460-460", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n195 [label="return true;", span="461-461", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n202 [label="return false;", span="479-479", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n203 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadNormal()", span="404-404", cluster="Newtonsoft.Json.Bson.BsonReader.ReadNormal()"];
n208 [label="_stack.RemoveAt(_stack.Count - 1)", span="484-484", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()"];
n209 [label="_stack.Count == 0", span="485-485", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()"];
n213 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)"];
n210 [label="_currentContext = null", span="486-486", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()"];
n211 [label="_currentContext = _stack[_stack.Count - 1]", span="488-488", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()"];
n212 [label="Exit Newtonsoft.Json.Bson.BsonReader.PopContext()", span="482-482", cluster="Newtonsoft.Json.Bson.BsonReader.PopContext()"];
n214 [label="_stack.Add(newContext)", span="493-493", cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)"];
n215 [label="_currentContext = newContext", span="494-494", cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)"];
n217 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n216 [label="Exit Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)", span="491-491", cluster="Newtonsoft.Json.Bson.BsonReader.PushContext(Newtonsoft.Json.Bson.BsonReader.ContainerContext)"];
n218 [label="MovePosition(1)", span="499-499", cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()"];
n219 [label="return _reader.ReadByte();", span="500-500", cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()"];
n220 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadByte()", span="497-497", cluster="Newtonsoft.Json.Bson.BsonReader.ReadByte()"];
n221 [label="Entry System.IO.BinaryReader.ReadByte()", span="0-0", cluster="System.IO.BinaryReader.ReadByte()"];
n222 [label=type, span="505-505", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n285 [label="throw new ArgumentOutOfRangeException(''type'', ''Unexpected BsonType value: '' + type);", span="607-607", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n223 [label="BsonType.Number", span="507-507", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n228 [label="BsonType.String", span="515-515", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n231 [label="BsonType.Object", span="519-519", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n236 [label="BsonType.Array", span="528-528", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n241 [label="BsonType.Binary", span="537-537", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n246 [label="BsonType.Undefined", span="547-547", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n248 [label="BsonType.Oid", span="550-550", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n251 [label="BsonType.Boolean", span="554-554", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n254 [label="BsonType.Date", span="558-558", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n265 [label="BsonType.Null", span="578-578", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n267 [label="BsonType.Regex", span="581-581", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n272 [label="BsonType.Reference", span="588-588", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n275 [label="BsonType.Code", span="592-592", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n277 [label="BsonType.CodeWScope", span="595-595", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n280 [label="BsonType.Integer", span="599-599", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n282 [label="BsonType.TimeStamp", span="602-602", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n224 [label="double d = ReadDouble()", span="508-508", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n225 [label="_floatParseHandling == FloatParseHandling.Decimal", span="510-510", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n287 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="820-820", cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()"];
n226 [label="SetToken(JsonToken.Float, Convert.ToDecimal(d, CultureInfo.InvariantCulture))", span="511-511", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n227 [label="SetToken(JsonToken.Float, d)", span="513-513", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n229 [label="BsonType.Symbol", span="516-516", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n230 [label="SetToken(JsonToken.String, ReadLengthString())", span="517-517", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n232 [label="SetToken(JsonToken.StartObject)", span="521-521", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n233 [label="ContainerContext newContext = new ContainerContext(BsonType.Object)", span="523-523", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n234 [label="PushContext(newContext)", span="524-524", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n235 [label="newContext.Length = ReadInt32()", span="525-525", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n237 [label="SetToken(JsonToken.StartArray)", span="530-530", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n238 [label="ContainerContext newContext = new ContainerContext(BsonType.Array)", span="532-532", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n239 [label="PushContext(newContext)", span="533-533", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n240 [label="newContext.Length = ReadInt32()", span="534-534", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n242 [label="BsonBinaryType binaryType", span="538-538", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n243 [label="byte[] data = ReadBinary(out binaryType)", span="539-539", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n244 [label="object value = (binaryType != BsonBinaryType.Uuid)\r\n                        ? data\r\n                        : (object)new Guid(data)", span="541-543", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n289 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", span="611-611", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)"];
n245 [label="SetToken(JsonToken.Bytes, value)", span="545-545", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n290 [label="Entry System.Guid.Guid(byte[])", span="0-0", cluster="System.Guid.Guid(byte[])"];
n247 [label="SetToken(JsonToken.Undefined)", span="548-548", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n249 [label="byte[] oid = ReadBytes(12)", span="551-551", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n250 [label="SetToken(JsonToken.Bytes, oid)", span="552-552", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n252 [label="bool b = Convert.ToBoolean(ReadByte())", span="555-555", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n253 [label="SetToken(JsonToken.Boolean, b)", span="556-556", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n291 [label="Entry System.Convert.ToBoolean(byte)", span="0-0", cluster="System.Convert.ToBoolean(byte)"];
n255 [label="long ticks = ReadInt64()", span="559-559", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n256 [label="DateTime utcDateTime = DateTimeUtils.ConvertJavaScriptTicksToDateTime(ticks)", span="560-560", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n292 [label="Entry Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="832-832", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()"];
n257 [label="DateTime dateTime", span="562-562", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n293 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)"];
n260 [label="dateTime = DateTime.SpecifyKind(utcDateTime, DateTimeKind.Unspecified)", span="566-566", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n262 [label="dateTime = utcDateTime.ToLocalTime()", span="569-569", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n263 [label="dateTime = utcDateTime", span="572-572", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n258 [label=DateTimeKindHandling, span="563-563", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n259 [label="DateTimeKind.Unspecified", span="565-565", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n261 [label="DateTimeKind.Local", span="568-568", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n264 [label="SetToken(JsonToken.Date, dateTime)", span="576-576", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n294 [label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0", cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)"];
n295 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()"];
n266 [label="SetToken(JsonToken.Null)", span="579-579", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n268 [label="string expression = ReadString()", span="582-582", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n269 [label="string modifiers = ReadString()", span="583-583", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n270 [label="string regex = @''/'' + expression + @''/'' + modifiers", span="585-585", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n271 [label="SetToken(JsonToken.String, regex)", span="586-586", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n273 [label="SetToken(JsonToken.StartObject)", span="589-589", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n274 [label="_bsonReaderState = BsonReaderState.ReferenceStart", span="590-590", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n276 [label="SetToken(JsonToken.String, ReadLengthString())", span="593-593", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n278 [label="SetToken(JsonToken.StartObject)", span="596-596", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n279 [label="_bsonReaderState = BsonReaderState.CodeWScopeStart", span="597-597", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n281 [label="SetToken(JsonToken.Integer, (long)ReadInt32())", span="600-600", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n283 [label="BsonType.Long", span="603-603", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n284 [label="SetToken(JsonToken.Integer, ReadInt64())", span="604-604", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n286 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)", span="503-503", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType(Newtonsoft.Json.Bson.BsonType)"];
n296 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)"];
n288 [label="Entry System.Convert.ToDecimal(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(object, System.IFormatProvider)"];
n297 [label="int dataLength = ReadInt32()", span="613-613", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)"];
n298 [label="binaryType = (BsonBinaryType)ReadByte()", span="615-615", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)"];
n301 [label="return ReadBytes(dataLength);", span="625-625", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)"];
n299 [label="binaryType == BsonBinaryType.BinaryOld && !_jsonNet35BinaryCompatibility", span="619-619", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)"];
n302 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)", span="611-611", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)"];
n300 [label="dataLength = ReadInt32()", span="621-621", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBinary(out Newtonsoft.Json.Bson.BsonBinaryType)"];
n303 [label="EnsureBuffers()", span="630-630", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n304 [label="StringBuilder builder = null", span="632-632", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n331 [label="Entry Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="807-807", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()"];
n305 [label="int totalBytesRead = 0", span="634-634", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n313 [label="count < MaxCharBytesSize && builder == null", span="648-648", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n319 [label="builder == null", span="664-664", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n321 [label="builder.Append(_charBuffer, 0, charCount)", span="667-667", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n327 [label="return builder.ToString();", span="681-681", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n306 [label="int offset = 0", span="636-636", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n312 [label="totalBytesRead += byteCount", span="646-646", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n307 [label="int count = offset", span="639-639", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n311 [label="int byteCount = count - offset", span="645-645", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n308 [label="byte b", span="640-640", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n309 [label="count < MaxCharBytesSize && (b = _reader.ReadByte()) > 0", span="641-641", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n310 [label="_byteBuffer[count++] = b", span="643-643", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n317 [label="int lastFullCharStop = GetLastFullCharStop(count - 1)", span="660-660", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n325 [label="count < MaxCharBytesSize", span="678-678", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n314 [label="int length = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="652-652", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n322 [label="lastFullCharStop < byteCount - 1", span="669-669", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n323 [label="offset = byteCount - lastFullCharStop - 1", span="671-671", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n315 [label="MovePosition(totalBytesRead + 1)", span="654-654", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n326 [label="MovePosition(totalBytesRead + 1)", span="680-680", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n332 [label="Entry System.Text.Encoding.GetChars(byte[], int, int, char[], int)", span="0-0", cluster="System.Text.Encoding.GetChars(byte[], int, int, char[], int)"];
n316 [label="return new string(_charBuffer, 0, length);", span="655-655", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n318 [label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="662-662", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n334 [label="Entry Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="765-765", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n324 [label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="673-673", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n320 [label="builder = new StringBuilder(MaxCharBytesSize * 2)", span="665-665", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n335 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)"];
n336 [label="Entry System.Text.StringBuilder.Append(char[], int, int)", span="0-0", cluster="System.Text.StringBuilder.Append(char[], int, int)"];
n328 [label="offset = 0", span="684-684", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n329 [label=true, span="687-687", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n337 [label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Array.Copy(System.Array, int, System.Array, int, int)"];
n330 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadString()", span="628-628", cluster="Newtonsoft.Json.Bson.BsonReader.ReadString()"];
n333 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)"];
n338 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
n339 [label="int length = ReadInt32()", span="692-692", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()"];
n340 [label="MovePosition(length)", span="694-694", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()"];
n341 [label="string s = GetString(length - 1)", span="696-696", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()"];
n342 [label="_reader.ReadByte()", span="697-697", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()"];
n345 [label="Entry Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="702-702", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n343 [label="return s;", span="699-699", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()"];
n344 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadLengthString()", span="690-690", cluster="Newtonsoft.Json.Bson.BsonReader.ReadLengthString()"];
n346 [label="length == 0", span="704-704", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n352 [label="int count = ((length - totalBytesRead) > MaxCharBytesSize - offset)\r\n                    ? MaxCharBytesSize - offset\r\n                    : length - totalBytesRead", span="717-719", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n358 [label="byteCount == length", span="732-732", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n363 [label="builder = new StringBuilder(length)", span="744-744", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n370 [label="totalBytesRead < length", span="760-760", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n347 [label="return string.Empty;", span="705-705", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n348 [label="EnsureBuffers()", span="707-707", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n349 [label="StringBuilder builder = null", span="709-709", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n350 [label="int totalBytesRead = 0", span="711-711", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n362 [label="builder == null", span="743-743", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n365 [label="builder.Append(_charBuffer, 0, charCount)", span="747-747", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n371 [label="return builder.ToString();", span="762-762", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n351 [label="int offset = 0", span="714-714", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n356 [label="totalBytesRead += byteCount", span="726-726", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n353 [label="int byteCount = _reader.Read(_byteBuffer, offset, count)", span="721-721", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n357 [label="byteCount += offset", span="730-730", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n354 [label="byteCount == 0", span="723-723", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n373 [label="Entry System.IO.BinaryReader.Read(byte[], int, int)", span="0-0", cluster="System.IO.BinaryReader.Read(byte[], int, int)"];
n355 [label="throw new EndOfStreamException(''Unable to read beyond the end of the stream.'');", span="724-724", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n359 [label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, byteCount, _charBuffer, 0)", span="736-736", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n361 [label="int lastFullCharStop = GetLastFullCharStop(byteCount - 1)", span="741-741", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n366 [label="lastFullCharStop < byteCount - 1", span="749-749", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n367 [label="offset = byteCount - lastFullCharStop - 1", span="751-751", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n360 [label="return new string(_charBuffer, 0, charCount);", span="737-737", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n364 [label="int charCount = Encoding.UTF8.GetChars(_byteBuffer, 0, lastFullCharStop + 1, _charBuffer, 0)", span="746-746", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n368 [label="Array.Copy(_byteBuffer, lastFullCharStop + 1, _byteBuffer, 0, offset)", span="753-753", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n369 [label="offset = 0", span="757-757", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n372 [label="Exit Newtonsoft.Json.Bson.BsonReader.GetString(int)", span="702-702", cluster="Newtonsoft.Json.Bson.BsonReader.GetString(int)"];
n374 [label="Entry System.IO.EndOfStreamException.EndOfStreamException(string)", span="0-0", cluster="System.IO.EndOfStreamException.EndOfStreamException(string)"];
n375 [label="int lookbackPos = start", span="767-767", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n383 [label="bis == start - lookbackPos", span="787-787", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n384 [label="return start;", span="790-790", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n376 [label="int bis = 0", span="768-768", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n377 [label="lookbackPos >= 0", span="769-769", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n378 [label="bis = BytesInSequence(_byteBuffer[lookbackPos])", span="771-771", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n380 [label="lookbackPos--", span="774-774", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n382 [label="lookbackPos--", span="783-783", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n385 [label="return lookbackPos;", span="794-794", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n379 [label="bis == 0", span="772-772", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n387 [label="Entry Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="798-798", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n381 [label="bis == 1", span="777-777", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n386 [label="Exit Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)", span="765-765", cluster="Newtonsoft.Json.Bson.BsonReader.GetLastFullCharStop(int)"];
n388 [label="b <= SeqRange1[1]", span="800-800", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n390 [label="b >= SeqRange2[0] && b <= SeqRange2[1]", span="801-801", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n392 [label="b >= SeqRange3[0] && b <= SeqRange3[1]", span="802-802", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n394 [label="b >= SeqRange4[0] && b <= SeqRange4[1]", span="803-803", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n389 [label="return 1;", span="800-800", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n391 [label="return 2;", span="801-801", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n393 [label="return 3;", span="802-802", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n395 [label="return 4;", span="803-803", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n396 [label="return 0;", span="804-804", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n397 [label="Exit Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)", span="798-798", cluster="Newtonsoft.Json.Bson.BsonReader.BytesInSequence(byte)"];
n398 [label="_byteBuffer == null", span="809-809", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()"];
n399 [label="_byteBuffer = new byte[MaxCharBytesSize]", span="811-811", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()"];
n400 [label="_charBuffer == null", span="813-813", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()"];
n401 [label="int charBufferSize = Encoding.UTF8.GetMaxCharCount(MaxCharBytesSize)", span="815-815", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()"];
n403 [label="Exit Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()", span="807-807", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()"];
n402 [label="_charBuffer = new char[charBufferSize]", span="816-816", cluster="Newtonsoft.Json.Bson.BsonReader.EnsureBuffers()"];
n404 [label="Entry System.Text.Encoding.GetMaxCharCount(int)", span="0-0", cluster="System.Text.Encoding.GetMaxCharCount(int)"];
n405 [label="MovePosition(8)", span="822-822", cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()"];
n406 [label="return _reader.ReadDouble();", span="823-823", cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()"];
n407 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadDouble()", span="820-820", cluster="Newtonsoft.Json.Bson.BsonReader.ReadDouble()"];
n408 [label="Entry System.IO.BinaryReader.ReadDouble()", span="0-0", cluster="System.IO.BinaryReader.ReadDouble()"];
n409 [label="MovePosition(4)", span="828-828", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()"];
n410 [label="return _reader.ReadInt32();", span="829-829", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()"];
n411 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt32()", span="826-826", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt32()"];
n412 [label="Entry System.IO.BinaryReader.ReadInt32()", span="0-0", cluster="System.IO.BinaryReader.ReadInt32()"];
n413 [label="MovePosition(8)", span="834-834", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()"];
n414 [label="return _reader.ReadInt64();", span="835-835", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()"];
n415 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadInt64()", span="832-832", cluster="Newtonsoft.Json.Bson.BsonReader.ReadInt64()"];
n416 [label="Entry System.IO.BinaryReader.ReadInt64()", span="0-0", cluster="System.IO.BinaryReader.ReadInt64()"];
n417 [label="MovePosition(1)", span="840-840", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()"];
n418 [label="return (BsonType)_reader.ReadSByte();", span="841-841", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()"];
n419 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadType()", span="838-838", cluster="Newtonsoft.Json.Bson.BsonReader.ReadType()"];
n420 [label="Entry System.IO.BinaryReader.ReadSByte()", span="0-0", cluster="System.IO.BinaryReader.ReadSByte()"];
n421 [label="_currentContext.Position += count", span="846-846", cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)"];
n422 [label="Exit Newtonsoft.Json.Bson.BsonReader.MovePosition(int)", span="844-844", cluster="Newtonsoft.Json.Bson.BsonReader.MovePosition(int)"];
n423 [label="MovePosition(count)", span="851-851", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)"];
n424 [label="return _reader.ReadBytes(count);", span="852-852", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)"];
n425 [label="Exit Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)", span="849-849", cluster="Newtonsoft.Json.Bson.BsonReader.ReadBytes(int)"];
n426 [label="Entry System.IO.BinaryReader.ReadBytes(int)", span="0-0", cluster="System.IO.BinaryReader.ReadBytes(int)"];
m0_5 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Vessel.Vessel()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Vessel.Vessel()", file="ConvertUtils.cs"];
m0_6 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="ConvertUtils.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", span="20-20", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs"];
m0_1 [label="Vessel vessel = new Vessel\r\n        {\r\n          Name = ''Red October'',\r\n          Class = ''Typhoon''\r\n        }", span="23-27", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs"];
m0_2 [label="string json = JsonConvert.SerializeObject(vessel, Formatting.Indented)", span="29-29", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs"];
m0_3 [label="Console.WriteLine(json)", span="31-31", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs"];
m0_4 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", span="20-20", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonPropertyPropertyLevelSetting.Example()", file="ConvertUtils.cs"];
m0_7 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ConvertUtils.cs"];
m1_72 [label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0", cluster="System.Linq.Expressions.Expression.Constant(object)", file="ConvertUtilsTests.cs"];
m1_198 [label="Entry System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0", cluster="System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs"];
m1_73 [label="Entry System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0", cluster="System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs"];
m1_156 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="77-77", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_80 [label="Entry System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression, System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="ConvertUtilsTests.cs"];
m1_10 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ConvertUtilsTests.cs"];
m1_122 [label="Entry System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)", span="0-0", cluster="System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression, System.Reflection.MemberInfo)", file="ConvertUtilsTests.cs"];
m1_135 [label="Entry System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)", span="0-0", cluster="System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression, System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_137 [label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0", cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="ConvertUtilsTests.cs"];
m1_75 [label="Entry System.Linq.Expressions.Expression.Variable(System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Variable(System.Type)", file="ConvertUtilsTests.cs"];
m1_82 [label="Entry System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0", cluster="System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs"];
m1_121 [label="Entry System.Reflection.PropertyInfo.GetGetMethod(bool)", span="0-0", cluster="System.Reflection.PropertyInfo.GetGetMethod(bool)", file="ConvertUtilsTests.cs"];
m1_81 [label="Entry System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0", cluster="System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs"];
m1_194 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="ConvertUtilsTests.cs"];
m1_11 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", span="28-28", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", file="ConvertUtilsTests.cs"];
m1_193 [label="Entry System.Type.IsPrimitive()", span="544-544", cluster="System.Type.IsPrimitive()", file="ConvertUtilsTests.cs"];
m1_69 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="ConvertUtilsTests.cs"];
m1_83 [label="Entry System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", span="0-0", cluster="System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable<System.Linq.Expressions.ParameterExpression>, System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="ConvertUtilsTests.cs"];
m1_176 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="78-78", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_14 [label="Entry System.Linq.Expressions.LambdaExpression.Compile()", span="0-0", cluster="System.Linq.Expressions.LambdaExpression.Compile()", file="ConvertUtilsTests.cs"];
m1_15 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="61-61", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_16 [label="ValidationUtils.ArgumentNotNull(method, nameof(method))", span="63-63", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_17 [label="Type type = typeof(object)", span="65-65", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_18 [label="ParameterExpression targetParameterExpression = Expression.Parameter(type, ''target'')", span="67-67", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_5 [label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(ObjectConstructor<object>), callExpression, argsParameterExpression)", span="55-55", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_6 [label="ObjectConstructor<object> compiled = (ObjectConstructor<object>)lambdaExpression.Compile()", span="57-57", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_7 [label="return compiled;", span="58-58", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_8 [label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="45-45", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_9 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="ConvertUtilsTests.cs"];
m1_138 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="266-266", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_147 [label="Expression sourceExpression = EnsureCastExpression(sourceParameterExpression, fieldInfo.DeclaringType)", span="287-287", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_149 [label="Expression valueExpression = EnsureCastExpression(valueParameterExpression, fieldExpression.Type)", span="292-292", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_150 [label="BinaryExpression assignExpression = Expression.Assign(fieldExpression, valueExpression)", span="294-294", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_139 [label="ValidationUtils.ArgumentNotNull(fieldInfo, nameof(fieldInfo))", span="268-268", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_145 [label="fieldInfo.IsStatic", span="281-281", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_142 [label="ParameterExpression sourceParameterExpression = Expression.Parameter(typeof(T), ''source'')", span="277-277", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_148 [label="fieldExpression = Expression.Field(sourceExpression, fieldInfo)", span="289-289", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_146 [label="fieldExpression = Expression.Field(null, fieldInfo)", span="283-283", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_143 [label="ParameterExpression valueParameterExpression = Expression.Parameter(typeof(object), ''value'')", span="278-278", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_151 [label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Action<T, object>), assignExpression, sourceParameterExpression, valueParameterExpression)", span="296-296", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_140 [label="fieldInfo.DeclaringType.IsValueType() || fieldInfo.IsInitOnly", span="272-272", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_141 [label="return LateBoundReflectionDelegateFactory.Instance.CreateSet<T>(fieldInfo);", span="274-274", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_144 [label="Expression fieldExpression", span="280-280", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_152 [label="Action<T, object> compiled = (Action<T, object>)lambdaExpression.Compile()", span="298-298", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_153 [label="return compiled;", span="299-299", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_154 [label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", span="266-266", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_155 [label="Entry System.Type.IsValueType()", span="535-535", cluster="System.Type.IsValueType()", file="ConvertUtilsTests.cs"];
m1_0 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="45-45", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_1 [label="ValidationUtils.ArgumentNotNull(method, nameof(method))", span="47-47", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_2 [label="Type type = typeof(object)", span="49-49", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_3 [label="ParameterExpression argsParameterExpression = Expression.Parameter(typeof(object[]), ''args'')", span="51-51", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_4 [label="Expression callExpression = BuildMethodCall(method, type, null, argsParameterExpression)", span="53-53", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_20 [label="Expression callExpression = BuildMethodCall(method, type, targetParameterExpression, argsParameterExpression)", span="70-70", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_196 [label="Entry System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", span="0-0", cluster="System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs"];
m1_97 [label="Entry System.Linq.Expressions.Expression.New(System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.New(System.Type)", file="ConvertUtilsTests.cs"];
m1_13 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", span="28-28", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", file="ConvertUtilsTests.cs"];
m1_157 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="302-302", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_171 [label="setExpression = Expression.Call(readInstanceParameter, setMethod, readValueParameter)", span="332-332", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_165 [label="Expression readValueParameter = EnsureCastExpression(valueParameter, propertyInfo.PropertyType)", span="319-319", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_170 [label="Expression readInstanceParameter = EnsureCastExpression(instanceParameter, propertyInfo.DeclaringType)", span="330-330", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_158 [label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="304-304", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_166 [label="MethodInfo setMethod = propertyInfo.GetSetMethod(true)", span="321-321", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_172 [label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Action<T, object>), setExpression, instanceParameter, valueParameter)", span="335-335", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_164 [label="ParameterExpression valueParameter = Expression.Parameter(valueType, ''value'')", span="318-318", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_169 [label="setExpression = Expression.Call(setMethod, readValueParameter)", span="326-326", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_163 [label="ParameterExpression instanceParameter = Expression.Parameter(instanceType, ''instance'')", span="316-316", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_168 [label="setMethod.IsStatic", span="324-324", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_159 [label="propertyInfo.DeclaringType.IsValueType()", span="308-308", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_167 [label="Expression setExpression", span="323-323", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_173 [label="Action<T, object> compiled = (Action<T, object>)lambdaExpression.Compile()", span="337-337", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_160 [label="return LateBoundReflectionDelegateFactory.Instance.CreateSet<T>(propertyInfo);", span="310-310", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_162 [label="Type valueType = typeof(object)", span="314-314", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_161 [label="Type instanceType = typeof(T)", span="313-313", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_174 [label="return compiled;", span="338-338", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_175 [label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", span="302-302", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateSet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_19 [label="ParameterExpression argsParameterExpression = Expression.Parameter(typeof(object[]), ''args'')", span="68-68", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_84 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="180-180", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs"];
m1_85 [label="ValidationUtils.ArgumentNotNull(type, ''type'')", span="182-182", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_86 [label="type.IsAbstract()", span="185-185", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_87 [label="return () => (T)Activator.CreateInstance(type);", span="187-187", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_88 [label="Type resultType = typeof(T)", span="192-192", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_89 [label="Expression expression = Expression.New(type)", span="194-194", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs"];
m1_90 [label="expression = EnsureCastExpression(expression, resultType)", span="196-196", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs"];
m1_95 [label="return () => (T)Activator.CreateInstance(type);", span="207-207", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs"];
m1_93 [label="return compiled;", span="201-201", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs"];
m1_91 [label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Func<T>), expression)", span="198-198", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs"];
m1_92 [label="Func<T> compiled = (Func<T>)lambdaExpression.Compile()", span="200-200", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs"];
m1_94 [label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="180-180", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ConvertUtilsTests.cs"];
m1_136 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ConvertUtilsTests.cs"];
m1_79 [label="Entry System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, params System.Linq.Expressions.Expression[])", file="ConvertUtilsTests.cs"];
m1_12 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", span="85-85", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_77 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ConvertUtilsTests.cs"];
m1_74 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", span="341-341", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_179 [label="Type expressionType = expression.Type", span="343-343", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_180 [label="expressionType == targetType || (!expressionType.IsValueType() && targetType.IsAssignableFrom(expressionType))", span="346-346", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_181 [label="return expression;", span="348-348", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_182 [label="targetType.IsValueType()", span="351-351", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_183 [label="Expression convert = Expression.Unbox(expression, targetType)", span="353-353", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_184 [label="allowWidening && targetType.IsPrimitive()", span="355-355", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_185 [label="MethodInfo toTargetTypeMethod = typeof(Convert)\r\n                        .GetMethod(''To'' + targetType.Name, new[] { typeof(object) })", span="357-358", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_187 [label="convert = Expression.Condition(\r\n                            Expression.TypeIs(expression, targetType),\r\n                            convert,\r\n                            Expression.Call(toTargetTypeMethod, expression))", span="362-365", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_188 [label="return Expression.Condition(\r\n                    Expression.Equal(expression, Expression.Constant(null, typeof(object))),\r\n                    Expression.Default(targetType), \r\n                    convert);", span="369-372", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_189 [label="return Expression.Convert(expression, targetType);", span="375-375", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_186 [label="toTargetTypeMethod != null", span="360-360", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_190 [label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", span="341-341", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.EnsureCastExpression(System.Linq.Expressions.Expression, System.Type, bool)", file="ConvertUtilsTests.cs"];
m1_192 [label="Entry System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression, System.Type)", file="ConvertUtilsTests.cs"];
m1_96 [label="Entry System.Type.IsAbstract()", span="517-517", cluster="System.Type.IsAbstract()", file="ConvertUtilsTests.cs"];
m1_200 [label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="ConvertUtilsTests.cs"];
m1_199 [label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="ConvertUtilsTests.cs"];
m1_101 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="ConvertUtilsTests.cs"];
m1_191 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ConvertUtilsTests.cs"];
m1_105 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", span="211-211", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_114 [label="Expression readParameter = EnsureCastExpression(parameterExpression, propertyInfo.DeclaringType)", span="229-229", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_116 [label="resultExpression = EnsureCastExpression(resultExpression, resultType)", span="234-234", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_106 [label="ValidationUtils.ArgumentNotNull(propertyInfo, nameof(propertyInfo))", span="213-213", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_109 [label="ParameterExpression parameterExpression = Expression.Parameter(instanceType, ''instance'')", span="218-218", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_112 [label="getMethod.IsStatic", span="223-223", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_115 [label="resultExpression = Expression.MakeMemberAccess(readParameter, propertyInfo)", span="231-231", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_113 [label="resultExpression = Expression.MakeMemberAccess(null, propertyInfo)", span="225-225", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_108 [label="Type resultType = typeof(object)", span="216-216", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_117 [label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(Func<T, object>), resultExpression, parameterExpression)", span="236-236", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_107 [label="Type instanceType = typeof(T)", span="215-215", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_111 [label="MethodInfo getMethod = propertyInfo.GetGetMethod(true)", span="221-221", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_110 [label="Expression resultExpression", span="219-219", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_118 [label="Func<T, object> compiled = (Func<T, object>)lambdaExpression.Compile()", span="238-238", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_119 [label="return compiled;", span="239-239", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_120 [label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", span="211-211", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.PropertyInfo)", file="ConvertUtilsTests.cs"];
m1_21 [label="LambdaExpression lambdaExpression = Expression.Lambda(typeof(MethodCall<T, object>), callExpression, targetParameterExpression, argsParameterExpression)", span="72-72", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_22 [label="MethodCall<T, object> compiled = (MethodCall<T, object>)lambdaExpression.Compile()", span="74-74", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_23 [label="return compiled;", span="75-75", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_24 [label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="61-61", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtilsTests.cs"];
m1_78 [label="Entry System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", span="0-0", cluster="System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo, params System.Linq.Expressions.Expression[])", file="ConvertUtilsTests.cs"];
m1_197 [label="Entry System.Linq.Expressions.Expression.Constant(object, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Constant(object, System.Type)", file="ConvertUtilsTests.cs"];
m1_76 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.ByRefParameter.ByRefParameter()", span="78-78", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.ByRefParameter.ByRefParameter()", file="ConvertUtilsTests.cs"];
m1_102 [label="Entry lambda expression", span="207-207", cluster="lambda expression", file="ConvertUtilsTests.cs"];
m1_99 [label="(T)Activator.CreateInstance(type)", span="187-187", cluster="lambda expression", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_98 [label="Entry lambda expression", span="187-187", cluster="lambda expression", file="ConvertUtilsTests.cs"];
m1_100 [label="Exit lambda expression", span="187-187", cluster="lambda expression", file="ConvertUtilsTests.cs"];
m1_103 [label="(T)Activator.CreateInstance(type)", span="207-207", cluster="lambda expression", file="ConvertUtilsTests.cs"];
m1_104 [label="Exit lambda expression", span="207-207", cluster="lambda expression", file="ConvertUtilsTests.cs"];
m1_178 [label="Entry System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)", span="0-0", cluster="System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo, System.Linq.Expressions.Expression)", file="ConvertUtilsTests.cs"];
m1_71 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()", file="ConvertUtilsTests.cs"];
m1_123 [label="Entry Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", span="242-242", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_129 [label="Expression sourceExpression = EnsureCastExpression(sourceParameter, fieldInfo.DeclaringType)", span="255-255", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_131 [label="fieldExpression = EnsureCastExpression(fieldExpression, typeof(object))", span="260-260", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_124 [label="ValidationUtils.ArgumentNotNull(fieldInfo, nameof(fieldInfo))", span="244-244", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_127 [label="fieldInfo.IsStatic", span="249-249", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_125 [label="ParameterExpression sourceParameter = Expression.Parameter(typeof(T), ''source'')", span="246-246", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_130 [label="fieldExpression = Expression.Field(sourceExpression, fieldInfo)", span="257-257", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_128 [label="fieldExpression = Expression.Field(null, fieldInfo)", span="251-251", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_132 [label="Func<T, object> compiled = Expression.Lambda<Func<T, object>>(fieldExpression, sourceParameter).Compile()", span="262-262", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_126 [label="Expression fieldExpression", span="248-248", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_133 [label="return compiled;", span="263-263", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_134 [label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", span="242-242", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.CreateGet<T>(System.Reflection.FieldInfo)", file="ConvertUtilsTests.cs"];
m1_195 [label="Entry System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression, System.Type)", file="ConvertUtilsTests.cs"];
m1_51 [label="callExpression = Expression.Call(readParameter, (MethodInfo)method, argsExpression)", span="138-138", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_50 [label="Expression readParameter = EnsureCastExpression(targetParameterExpression, method.DeclaringType)", span="136-136", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_26 [label="Expression[] argsExpression = new Expression[parametersInfo.Length]", span="89-89", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_52 [label="MethodInfo m = method as MethodInfo", span="141-141", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_55 [label="callExpression = EnsureCastExpression(callExpression, type)", span="146-146", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_56 [label="callExpression = Expression.Block(callExpression, Expression.Constant(null))", span="150-150", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_57 [label="callExpression = EnsureCastExpression(callExpression, type)", span="155-155", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_47 [label="callExpression = Expression.New((ConstructorInfo)method, argsExpression)", span="128-128", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_49 [label="callExpression = Expression.Call((MethodInfo)method, argsExpression)", span="132-132", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_53 [label="m != null", span="142-142", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_54 [label="m.ReturnType != typeof(void)", span="144-144", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_58 [label="refParameterMap.Count > 0", span="158-158", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_65 [label="bodyExpressions.Add(callExpression)", span="172-172", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_67 [label="return callExpression;", span="177-177", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_27 [label="IList<ByRefParameter> refParameterMap = new List<ByRefParameter>()", span="90-90", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_59 [label="IList<ParameterExpression> variableExpressions = new List<ParameterExpression>()", span="160-160", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_61 [label=refParameterMap, span="162-162", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_60 [label="IList<Expression> bodyExpressions = new List<Expression>()", span="161-161", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_64 [label="variableExpressions.Add(p.Variable)", span="169-169", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_62 [label="!p.IsOut", span="164-164", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_63 [label="bodyExpressions.Add(Expression.Assign(p.Variable, p.Value))", span="166-166", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_66 [label="callExpression = Expression.Block(variableExpressions, bodyExpressions)", span="174-174", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", color=green, community=0, file="ConvertUtilsTests.cs"];
m1_25 [label="ParameterInfo[] parametersInfo = method.GetParameters()", span="87-87", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_37 [label="Expression paramAccessorExpression = Expression.ArrayIndex(argsParameterExpression, indexExpression)", span="105-105", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_46 [label="method.IsConstructor", span="126-126", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_48 [label="method.IsStatic", span="130-130", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_43 [label="argsExpression[i] = argExpression", span="122-122", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_38 [label="Expression argExpression = EnsureCastExpression(paramAccessorExpression, parameterType, !isByRef)", span="107-107", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_28 [label="int i = 0", span="92-92", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_41 [label="refParameterMap.Add(new ByRefParameter\r\n                    {\r\n                        Value = argExpression,\r\n                        Variable = variable,\r\n                        IsOut = parameter.IsOut\r\n                    })", span="112-117", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_36 [label="Expression indexExpression = Expression.Constant(i)", span="103-103", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_29 [label="i < parametersInfo.Length", span="92-92", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_30 [label="ParameterInfo parameter = parametersInfo[i]", span="94-94", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_45 [label="Expression callExpression", span="125-125", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_39 [label=isByRef, span="109-109", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_42 [label="argExpression = variable", span="119-119", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_44 [label="i++", span="92-92", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_31 [label="Type parameterType = parameter.ParameterType", span="95-95", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_32 [label="bool isByRef = false", span="96-96", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_34 [label="parameterType = parameterType.GetElementType()", span="99-99", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_35 [label="isByRef = true", span="100-100", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_40 [label="ParameterExpression variable = Expression.Variable(parameterType)", span="111-111", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_33 [label="parameterType.IsByRef", span="97-97", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_68 [label="Exit Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", span="85-85", cluster="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory.BuildMethodCall(System.Reflection.MethodBase, System.Type, System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.ParameterExpression)", file="ConvertUtilsTests.cs"];
m1_177 [label="Entry System.Reflection.PropertyInfo.GetSetMethod(bool)", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod(bool)", file="ConvertUtilsTests.cs"];
m1_201 [label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory", span="", file="ConvertUtilsTests.cs"];
m1_202 [label="System.Type", span="", file="ConvertUtilsTests.cs"];
m3_7 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DateTimeUtils.cs"];
m3_6 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="DateTimeUtils.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", span="18-18", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs"];
m3_1 [label="string json = @''{\r\n        'FullName': 'Dan Deleted',\r\n        'Deleted': true,\r\n        'DeletedDate': '2013-01-20T00:00:00'\r\n      }''", span="21-25", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs"];
m3_2 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="27-27", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs"];
m3_3 [label="Account account = JsonConvert.DeserializeObject<Account>(json, new JsonSerializerSettings\r\n        {\r\n          TraceWriter = traceWriter\r\n        })", span="29-32", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs"];
m3_4 [label="Console.WriteLine(traceWriter.ToString())", span="34-34", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs"];
m3_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", span="18-18", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.TraceWriter.Example()", file="DateTimeUtils.cs"];
m3_8 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="910-910", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DateTimeUtils.cs"];
m3_9 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", span="66-66", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.ToString()", file="DateTimeUtils.cs"];
m3_10 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="DateTimeUtils.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="DateTimeUtilsTests.cs"];
m4_1 [label="Exit Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="DateTimeUtilsTests.cs"];
m6_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="IsoDateTimeConverterTests.cs"];
m6_1 [label="bar = new List<Int64>() { int.MaxValue }", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="IsoDateTimeConverterTests.cs"];
m6_2 [label="Exit Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="IsoDateTimeConverterTests.cs"];
m6_4 [label="Newtonsoft.Json.Tests.TestObjects.ClassWithArray", span="", file="IsoDateTimeConverterTests.cs"];
m7_116 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JavaScriptUtils.cs"];
m7_100 [label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0", cluster="System.Array.Copy(System.Array, System.Array, int)", file="JavaScriptUtils.cs"];
m7_99 [label="Entry string.Equals(string, string)", span="0-0", cluster="string.Equals(string, string)", file="JavaScriptUtils.cs"];
m7_16 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="76-76", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_17 [label="stringEscapeHandling == StringEscapeHandling.EscapeHtml", span="78-78", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_19 [label="quoteChar == ''''", span="81-81", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_18 [label="return HtmlCharEscapeFlags;", span="79-79", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_20 [label="return DoubleQuoteCharEscapeFlags;", span="82-82", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_21 [label="return SingleQuoteCharEscapeFlags;", span="84-84", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_22 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", span="76-76", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.GetCharEscapeFlags(Newtonsoft.Json.StringEscapeHandling, char)", file="JavaScriptUtils.cs"];
m7_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JavaScriptUtils.cs"];
m7_23 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", span="87-87", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_24 [label="s == null", span="89-89", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_26 [label=s, span="92-92", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_27 [label="c >= charEscapeFlags.Length || charEscapeFlags[c]", span="94-94", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_25 [label="return false;", span="90-90", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_29 [label="return false;", span="98-98", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_28 [label="return true;", span="95-95", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_30 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", span="87-87", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ShouldEscapeJavaScriptString(string, bool[])", file="JavaScriptUtils.cs"];
m7_31 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="101-101", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_32 [label=appendDelimiters, span="105-105", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_33 [label="writer.Write(delimiter)", span="106-106", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_34 [label="s != null", span="108-108", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_37 [label="i < s.Length", span="112-112", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_38 [label="var c = s[i]", span="114-114", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_39 [label="c < charEscapeFlags.Length && !charEscapeFlags[c]", span="116-116", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_60 [label="c < charEscapeFlags.Length || stringEscapeHandling == StringEscapeHandling.EscapeNonAscii", span="151-151", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_61 [label="c == '\'' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="153-153", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_63 [label="c == '''' && stringEscapeHandling != StringEscapeHandling.EscapeHtml", span="157-157", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_65 [label="writeBuffer == null || writeBuffer.Length < UnicodeTextLength", span="163-163", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_67 [label="StringUtils.ToCharAsUnicode(c, writeBuffer)", span="166-166", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_75 [label="writeBuffer == null || writeBuffer.Length < length", span="189-189", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_78 [label="Array.Copy(writeBuffer, newBuffer, UnicodeTextLength)", span="196-196", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_80 [label="s.CopyTo(lastWritePosition, writeBuffer, start, length - start)", span="201-201", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_81 [label="writer.Write(writeBuffer, start, length - start)", span="204-204", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_84 [label="writer.Write(escapedValue)", span="209-209", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_85 [label="writer.Write(writeBuffer, 0, UnicodeTextLength)", span="211-211", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_88 [label="writer.Write(s)", span="217-217", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_89 [label="int length = s.Length - lastWritePosition", span="221-221", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_90 [label="writeBuffer == null || writeBuffer.Length < length", span="223-223", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_92 [label="s.CopyTo(lastWritePosition, writeBuffer, 0, length)", span="226-226", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_93 [label="writer.Write(writeBuffer, 0, length)", span="229-229", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_94 [label=appendDelimiters, span="234-234", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_95 [label="writer.Write(delimiter)", span="235-235", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_35 [label="int lastWritePosition = 0", span="110-110", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_36 [label="int i = 0", span="112-112", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_72 [label="i > lastWritePosition", span="184-184", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_73 [label="int length = i - lastWritePosition + ((isEscapedUnicodeText) ? UnicodeTextLength : 0)", span="186-186", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_87 [label="lastWritePosition == 0", span="214-214", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_82 [label="lastWritePosition = i + 1", span="207-207", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_86 [label="i++", span="112-112", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_41 [label=c, span="121-121", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_40 [label="string escapedValue", span="119-119", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_42 [label="'\t'", span="123-123", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_44 [label="'\n'", span="126-126", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_46 [label="'\r'", span="129-129", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_48 [label="'\f'", span="132-132", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_50 [label="'\b'", span="135-135", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_52 [label="'\\'", span="138-138", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_54 [label="'\u0085'", span="141-141", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_56 [label="'\u2028'", span="144-144", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_58 [label="'\u2029'", span="147-147", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_43 [label="escapedValue = @''\t''", span="124-124", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_45 [label="escapedValue = @''\n''", span="127-127", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_47 [label="escapedValue = @''\r''", span="130-130", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_49 [label="escapedValue = @''\f''", span="133-133", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_51 [label="escapedValue = @''\b''", span="136-136", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_53 [label="escapedValue = @''\\''", span="139-139", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_55 [label="escapedValue = @''\u0085''", span="142-142", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_57 [label="escapedValue = @''\u2028''", span="145-145", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_59 [label="escapedValue = @''\u2029''", span="148-148", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_69 [label="escapedValue = null", span="174-174", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_62 [label="escapedValue = @''\'''", span="155-155", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_64 [label="escapedValue = @''\''''''", span="159-159", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_66 [label="writeBuffer = new char[UnicodeTextLength]", span="164-164", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", color=red, community=0, file="JavaScriptUtils.cs"];
m7_68 [label="escapedValue = EscapedUnicodeText", span="169-169", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_70 [label="escapedValue == null", span="179-179", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_71 [label="bool isEscapedUnicodeText = string.Equals(escapedValue, EscapedUnicodeText)", span="182-182", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_74 [label="int start = (isEscapedUnicodeText) ? UnicodeTextLength : 0", span="187-187", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_77 [label=isEscapedUnicodeText, span="195-195", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_83 [label="!isEscapedUnicodeText", span="208-208", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_76 [label="char[] newBuffer = new char[length]", span="191-191", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", color=red, community=0, file="JavaScriptUtils.cs"];
m7_79 [label="writeBuffer = newBuffer", span="198-198", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_91 [label="writeBuffer = new char[length]", span="224-224", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_96 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="101-101", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JavaScriptUtils.cs"];
m7_114 [label="Entry Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="118-118", cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="JavaScriptUtils.cs"];
m7_115 [label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="110-110", cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="JavaScriptUtils.cs"];
m7_101 [label="Entry string.CopyTo(int, char[], int, int)", span="0-0", cluster="string.CopyTo(int, char[], int, int)", file="JavaScriptUtils.cs"];
m7_98 [label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="126-126", cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JavaScriptUtils.cs"];
m7_14 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JavaScriptUtils.cs"];
m7_102 [label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0", cluster="System.IO.TextWriter.Write(char[], int, int)", file="JavaScriptUtils.cs"];
m7_97 [label="Entry System.IO.TextWriter.Write(char)", span="0-0", cluster="System.IO.TextWriter.Write(char)", file="JavaScriptUtils.cs"];
m7_103 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="JavaScriptUtils.cs"];
m7_0 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="49-49", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_1 [label="IList<char> escapeChars = new List<char>\r\n            {\r\n                '\n', '\r', '\t', '\\', '\f', '\b',\r\n            }", span="51-54", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_2 [label="int i = 0", span="55-55", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_4 [label="escapeChars.Add((char)i)", span="57-57", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_6 [label="escapeChars.Union(new[] { '\'' })", span="60-60", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_8 [label="escapeChars.Union(new[] { '''' })", span="64-64", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_10 [label="escapeChars.Union(new[] { '''', '\'', '<', '>', '&' })", span="68-68", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_3 [label="i < ' '", span="55-55", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_5 [label="i++", span="55-55", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_7 [label="SingleQuoteCharEscapeFlags[escapeChar] = true", span="62-62", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_9 [label="DoubleQuoteCharEscapeFlags[escapeChar] = true", span="66-66", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_11 [label="HtmlCharEscapeFlags[escapeChar] = true", span="70-70", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_12 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", span="49-49", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.JavaScriptUtils()", file="JavaScriptUtils.cs"];
m7_107 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="243-243", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_108 [label="bool[] charEscapeFlags = GetCharEscapeFlags(stringEscapeHandling, delimiter)", span="245-245", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_109 [label="StringWriter w = StringUtils.CreateStringWriter(StringUtils.GetLength(value) ?? 16)", span="247-247", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_111 [label="WriteEscapedJavaScriptString(w, value, delimiter, appendDelimiters, charEscapeFlags, stringEscapeHandling, ref buffer)", span="250-250", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", color=red, community=0, file="JavaScriptUtils.cs"];
m7_110 [label="char[] buffer = null", span="249-249", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_112 [label="return w.ToString();", span="251-251", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_113 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", span="243-243", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool, Newtonsoft.Json.StringEscapeHandling)", file="JavaScriptUtils.cs"];
m7_104 [label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="238-238", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptUtils.cs"];
m7_105 [label="return ToEscapedJavaScriptString(value, delimiter, appendDelimiters, StringEscapeHandling.Default);", span="240-240", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptUtils.cs"];
m7_106 [label="Exit Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="238-238", cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JavaScriptUtils.cs"];
m8_61 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="224-224", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonPropertyCollection.cs"];
m8_63 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                });\r\n            }, ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 55.'')", span="233-240", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonPropertyCollection.cs"];
m8_62 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="226-231", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonPropertyCollection.cs"];
m8_64 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="224-224", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonPropertyCollection.cs"];
m8_6 [label="IsTypeGenericCollectionInterface(UnderlyingType)", span="65-65", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs"];
m8_143 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="311-311", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonPropertyCollection.cs"];
m8_29 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonPropertyCollection.cs"];
m8_12 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", span="75-75", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_31 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonPropertyCollection.cs"];
m8_15 [label="JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                        MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                    })", span="105-110", cluster="lambda expression", file="JsonPropertyCollection.cs", color=green, community=0];
m8_16 [label="Exit lambda expression", span="103-111", cluster="lambda expression", file="JsonPropertyCollection.cs"];
m8_17 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonPropertyCollection.cs"];
m8_23 [label="JsonSerializerSettings jsonSerializerSettings = new JsonSerializerSettings()\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                TypeNameHandling = TypeNameHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            }", span="123-128", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs"];
m8_24 [label="string serializedString = JsonConvert.SerializeObject(inputContext, jsonSerializerSettings)", span="129-129", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs", color=green, community=0];
m8_18 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="115-115", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs"];
m8_19 [label="string contextKey = ''k1''", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs"];
m8_20 [label="var someValue = new Guid(''5dd2dba0-20c0-49f8-a054-1fa3b0a8d774'')", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs"];
m8_21 [label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="120-120", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs"];
m8_22 [label="inputContext.Add(contextKey, someValue)", span="121-121", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs"];
m8_25 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(Dictionary<string, Guid>), 0, DefaultSerializationBinder.Instance) + @'''''',\r\n  ''''k1'''': ''''5dd2dba0-20c0-49f8-a054-1fa3b0a8d774''''\r\n}'', serializedString)", span="131-134", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs", color=green, community=0];
m8_198 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", span="633-633", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs"];
m8_201 [label="JsonConvert.PopulateObject(json, c, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="642-645", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs"];
m8_199 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass''''\r\n}''", span="635-638", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs"];
m8_200 [label="MetadataPropertyDisabledTestClass c = new MetadataPropertyDisabledTestClass()", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs"];
m8_202 [label="Assert.AreEqual(''1'', c.Id)", span="647-647", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs"];
m8_203 [label="Assert.AreEqual(''CircularReferenceClass'', c.Type)", span="648-648", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs"];
m8_204 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", span="633-633", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonPropertyCollection.cs"];
m8_10 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="77-101", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeArraysWithPreserveObjectReferences()", file="JsonPropertyCollection.cs", color=green, community=0];
m8_205 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="836-836", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonPropertyCollection.cs"];
m8_33 [label="!type.IsGenericType", span="97-97", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs"];
m8_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonPropertyCollection.cs"];
m8_93 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_97 [label="List<EmployeeReference> employees = t1.ToObject<List<EmployeeReference>>(JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            }))", span="328-331", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_95 [label="JToken t1 = JToken.Parse(json)", span="325-325", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_96 [label="JToken t2 = t1.CloneToken()", span="326-326", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_98 [label="Assert.AreEqual(2, employees.Count)", span="333-333", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_99 [label="Assert.AreEqual(''Mike Manager'', employees[0].Name)", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_100 [label="Assert.AreEqual(''Joe User'', employees[1].Name)", span="335-335", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_101 [label="Assert.AreEqual(employees[0], employees[1].Manager)", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_94 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''$id'''': ''''2'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="310-323", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_102 [label="Assert.IsTrue(JToken.DeepEquals(t1, t2))", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_103 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeFromJToken()", file="JsonPropertyCollection.cs"];
m8_45 [label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonPropertyCollection.cs"];
m8_26 [label="var deserializedObject = (Dictionary<string, Guid>)JsonConvert.DeserializeObject(serializedString, jsonSerializerSettings)", span="136-136", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonPropertyCollection.cs"];
m8_49 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_51 [label="PreserveReferencesHandlingTests.CircularList circularList = JsonConvert.DeserializeObject<PreserveReferencesHandlingTests.CircularList>(json,\r\n                new JsonSerializerSettings\r\n                {\r\n                    PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="208-213", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_50 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="182-206", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_52 [label="Assert.AreEqual(3, circularList.Count)", span="215-215", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_53 [label="Assert.AreEqual(null, circularList[0])", span="216-216", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_54 [label="Assert.AreEqual(1, circularList[1].Count)", span="217-217", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_55 [label="Assert.AreEqual(1, circularList[2].Count)", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_56 [label="Assert.AreEqual(1, circularList[2][0].Count)", span="219-219", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_57 [label="Assert.IsTrue(ReferenceEquals(circularList, circularList[2][0][0]))", span="220-220", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_58 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonPropertyCollection.cs"];
m8_7 [label="CreatedType = ReflectionUtils.MakeGenericType(typeof(List<>), CollectionItemType)", span="67-67", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs"];
m8_104 [label="Entry Newtonsoft.Json.Linq.JToken.Parse(string)", span="2184-2184", cluster="Newtonsoft.Json.Linq.JToken.Parse(string)", file="JsonPropertyCollection.cs"];
m8_155 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyDisabledTestClass.MetadataPropertyDisabledTestClass()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyDisabledTestClass.MetadataPropertyDisabledTestClass()", file="JsonPropertyCollection.cs"];
m8_68 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="797-797", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonPropertyCollection.cs"];
m8_141 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="738-738", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="JsonPropertyCollection.cs"];
m8_106 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="579-579", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonPropertyCollection.cs"];
m8_85 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs"];
m8_87 [label="List<EmployeeReference> employees = JsonConvert.DeserializeObject<List<EmployeeReference>>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="296-299", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs"];
m8_86 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''$id'''': ''''2'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="281-294", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs"];
m8_88 [label="Assert.AreEqual(2, employees.Count)", span="301-301", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs"];
m8_89 [label="Assert.AreEqual(''Mike Manager'', employees[0].Name)", span="302-302", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs"];
m8_90 [label="Assert.AreEqual(''Joe User'', employees[1].Name)", span="303-303", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs"];
m8_91 [label="Assert.AreEqual(employees[0], employees[1].Manager)", span="304-304", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs"];
m8_92 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonPropertyCollection.cs"];
m8_107 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", span="2070-2070", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>(Newtonsoft.Json.JsonSerializer)", file="JsonPropertyCollection.cs"];
m8_60 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonPropertyCollection.cs"];
m8_156 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs"];
m8_158 [label="MetadataPropertyDisabledTestClass c = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="496-499", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs"];
m8_157 [label="string json = @''{}''", span="494-494", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs"];
m8_159 [label="Assert.AreEqual(null, c.Id)", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs"];
m8_160 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore_EmptyObject()", file="JsonPropertyCollection.cs"];
m8_161 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs"];
m8_162 [label="Item actual = JsonConvert.DeserializeObject<Item>(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n                })", span="507-521", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs"];
m8_163 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="523-523", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs"];
m8_164 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="524-524", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs"];
m8_165 [label="JObject o = (JObject)actual.Payload", span="525-525", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs"];
m8_166 [label="Assert.AreEqual(''System.Byte[], mscorlib'', (string)o[''$type''])", span="526-526", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs"];
m8_167 [label="Assert.AreEqual(''AAECAwQFBgcICQ=='', (string)o[''$value''])", span="527-527", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs"];
m8_168 [label="Assert.AreEqual(null, o.Parent)", span="528-528", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs"];
m8_169 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonPropertyCollection.cs"];
m8_170 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs"];
m8_171 [label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {}\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="534-540", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs"];
m8_172 [label="JObject o = (JObject)actual.Payload", span="542-542", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs"];
m8_173 [label="Assert.AreEqual(null, o.Parent)", span="543-543", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs"];
m8_174 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonPropertyCollection.cs"];
m8_27 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JsonPropertyCollection.cs"];
m8_28 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="59-59", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="JsonPropertyCollection.cs"];
m8_0 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="50-50", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs"];
m8_2 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="55-55", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs"];
m8_1 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="53-53", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs"];
m8_3 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="59-59", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs"];
m8_4 [label="CollectionItemType != null", span="62-62", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs"];
m8_5 [label="_isCollectionItemTypeNullableType = ReflectionUtils.IsNullableType(CollectionItemType)", span="63-63", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs"];
m8_30 [label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", span="56-56", cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.Generic.ICollection<T>)", file="JsonPropertyCollection.cs"];
m8_59 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="JsonPropertyCollection.cs"];
m8_14 [label="Entry lambda expression", span="103-111", cluster="lambda expression", file="JsonPropertyCollection.cs"];
m8_144 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", span="458-458", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_148 [label="MetadataPropertyDisabledTestClass c2 = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="479-482", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_147 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''Id!'''',\r\n  ''''$ref'''': ''''Ref!'''',\r\n  ''''$value'''': ''''Value!'''',\r\n  ''''$values'''': ''''Values!'''',\r\n  ''''$type'''': ''''Type!''''\r\n}'', json)", span="471-477", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_146 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="469-469", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_149 [label="Assert.AreEqual(''Id!'', c2.Id)", span="484-484", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_150 [label="Assert.AreEqual(''Ref!'', c2.Ref)", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_151 [label="Assert.AreEqual(''Type!'', c2.Type)", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_152 [label="Assert.AreEqual(''Value!'', c2.Value)", span="487-487", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_153 [label="Assert.AreEqual(''Values!'', c2.Values)", span="488-488", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_145 [label="MetadataPropertyDisabledTestClass c1 = new MetadataPropertyDisabledTestClass\r\n            {\r\n                Id = ''Id!'',\r\n                Ref = ''Ref!'',\r\n                Type = ''Type!'',\r\n                Value = ''Value!'',\r\n                Values = ''Values!''\r\n            }", span="460-467", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_154 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", span="458-458", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonPropertyCollection.cs"];
m8_8 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="50-50", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonPropertyCollection.cs"];
m8_47 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonPropertyCollection.cs"];
m8_48 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonPropertyCollection.cs"];
m8_35 [label="Type genericDefinition = type.GetGenericTypeDefinition()", span="100-100", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs"];
m8_38 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", color=green, community=0, file="JsonPropertyCollection.cs"];
m8_37 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="95-95", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs"];
m8_39 [label="Newtonsoft.Json.Serialization.JsonArrayContract", span="", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", color=green, community=0, file="JsonPropertyCollection.cs"];
m8_40 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs"];
m8_41 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="174-174", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs"];
m8_42 [label="byte[] bytes = (byte[])actual.Payload", span="175-175", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs"];
m8_36 [label="return (genericDefinition == typeof(IList<>)\r\n              || genericDefinition == typeof(ICollection<>)\r\n              || genericDefinition == typeof(IEnumerable<>));", span="102-104", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs"];
m8_43 [label="CollectionAssert.AreEquivalent(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }, bytes)", span="176-176", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs"];
m8_44 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="142-142", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonPropertyCollection.cs"];
m8_9 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="220-220", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonPropertyCollection.cs"];
m8_11 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="338-338", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", color=green, community=0, file="JsonPropertyCollection.cs"];
m8_125 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="396-396", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_130 [label="TypeNameHandlingTests.TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameHandlingTests.TypeNameProperty>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="422-425", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_126 [label="string listRef = ReflectionUtils.GetTypeName(typeof(List<int>), TypeNameAssemblyFormatHandling.Simple, null)", span="398-398", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_129 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="408-420", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_128 [label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="406-406", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_131 [label="Assert.AreEqual(''Name!'', deserialized.Name)", span="426-426", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_132 [label="CustomAssert.IsInstanceOfType(typeof(List<int>), deserialized.Value)", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_133 [label="List<int> nested = (List<int>)deserialized.Value", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_127 [label="TypeNameHandlingTests.TypeNameProperty typeNameProperty = new TypeNameHandlingTests.TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new List<int> { 1, 2, 3, 4, 5 }\r\n            }", span="400-404", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_134 [label="Assert.AreEqual(5, nested.Count)", span="430-430", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_135 [label="Assert.AreEqual(1, nested[0])", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_136 [label="Assert.AreEqual(2, nested[1])", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_137 [label="Assert.AreEqual(3, nested[2])", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_138 [label="Assert.AreEqual(4, nested[3])", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_139 [label="Assert.AreEqual(5, nested[4])", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_140 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="396-396", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonPropertyCollection.cs"];
m8_69 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_80 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="268-271", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_79 [label="StringAssert.AreEqual(@''{\r\n  ''''_id'''': 2,\r\n  ''''Name'''': ''''Isabell'''',\r\n  ''''Father'''': {\r\n    ''''blah'''': ''''blah!'''',\r\n    ''''$ref'''': null,\r\n    ''''$id'''': null\r\n  }\r\n}'', json)", span="258-266", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_78 [label="string json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_81 [label="Assert.AreEqual(3, result.Count)", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_82 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="274-274", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_83 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="275-275", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_70 [label="var reference = new Dictionary<string, object>()", span="246-246", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_74 [label="var child = new Dictionary<string, object>()", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_77 [label="child.Add(''Father'', reference)", span="254-254", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_71 [label="reference.Add(''blah'', ''blah!'')", span="247-247", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_72 [label="reference.Add(''$ref'', null)", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_73 [label="reference.Add(''$id'', null)", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_75 [label="child.Add(''_id'', 2)", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_76 [label="child.Add(''Name'', ''Isabell'')", span="253-253", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_84 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonPropertyCollection.cs"];
m8_46 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonPropertyCollection.cs"];
m8_34 [label="return false;", span="98-98", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonPropertyCollection.cs"];
m8_65 [label="Entry lambda expression", span="233-240", cluster="lambda expression", file="JsonPropertyCollection.cs"];
m8_66 [label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="235-239", cluster="lambda expression", file="JsonPropertyCollection.cs"];
m8_67 [label="Exit lambda expression", span="233-240", cluster="lambda expression", file="JsonPropertyCollection.cs"];
m8_187 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs"];
m8_188 [label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': [1]\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="584-590", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs"];
m8_189 [label="JArray o = (JArray)actual.Payload", span="592-592", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs"];
m8_190 [label="Assert.AreEqual(null, o.Parent)", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs"];
m8_191 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JArray_NoParent()", file="JsonPropertyCollection.cs"];
m8_13 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="367-367", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonPropertyCollection.cs"];
m8_175 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="554-554", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_176 [label="ItemWithJTokens actual = (ItemWithJTokens)JsonConvert.DeserializeObject(@''{\r\n  ''''Payload1'''': 1,\r\n  ''''Payload2'''': {'prop1':1,'prop2':[2]},\r\n  ''''Payload3'''': [1],\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests+ItemWithJTokens, Newtonsoft.Json.Tests''''\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                    TypeNameHandling = TypeNameHandling.All\r\n                })", span="556-566", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_177 [label="Assert.AreEqual(JTokenType.Integer, actual.Payload1.Type)", span="568-568", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_178 [label="Assert.AreEqual(1, (int)actual.Payload1)", span="569-569", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_179 [label="Assert.AreEqual(null, actual.Payload1.Parent)", span="570-570", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_180 [label="Assert.AreEqual(JTokenType.Object, actual.Payload2.Type)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_181 [label="Assert.AreEqual(1, (int)actual.Payload2[''prop1''])", span="573-573", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_182 [label="Assert.AreEqual(2, (int)actual.Payload2[''prop2''][0])", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_183 [label="Assert.AreEqual(null, actual.Payload2.Parent)", span="575-575", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_184 [label="Assert.AreEqual(1, (int)actual.Payload3[0])", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_185 [label="Assert.AreEqual(null, actual.Payload3.Parent)", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_186 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="554-554", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonPropertyCollection.cs"];
m8_109 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_113 [label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n#pragma warning disable 618\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n#pragma warning restore 618\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="370-377", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_112 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''Name'''': null,\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="348-368", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_114 [label="Assert.AreEqual(4, values.Count)", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_115 [label="EmployeeReference e = (EmployeeReference)values[0]", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_116 [label="Person p = (Person)values[1]", span="382-382", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_122 [label="Assert.AreEqual(''String!'', values[2])", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_123 [label="Assert.AreEqual((long)int.MinValue, values[3])", span="392-392", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_117 [label="Assert.AreEqual(''Bob'', e.Name)", span="384-384", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_118 [label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_119 [label="Assert.AreEqual(null, p.Name)", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_120 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="388-388", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_121 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="389-389", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_110 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="345-345", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_111 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="346-346", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_124 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonPropertyCollection.cs"];
m8_105 [label="Entry Newtonsoft.Json.Linq.JToken.CloneToken()", span="132-132", cluster="Newtonsoft.Json.Linq.JToken.CloneToken()", file="JsonPropertyCollection.cs"];
m8_192 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs"];
m8_193 [label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto\r\n                })", span="604-613", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs"];
m8_195 [label="actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n                })", span="617-627", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs"];
m8_194 [label="Assert.AreEqual(5f, actual.Payload)", span="615-615", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs"];
m8_196 [label="Assert.IsTrue(actual.Payload is JObject)", span="629-629", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs"];
m8_197 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonPropertyCollection.cs"];
m8_108 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonPropertyCollection.cs"];
m8_206 [label=json, span="", file="JsonPropertyCollection.cs"];
m8_207 [label=json, span="", file="JsonPropertyCollection.cs"];
m11_14 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonSerializerInternalWriter.cs"];
m11_19 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", span="270-270", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", file="JsonSerializerInternalWriter.cs"];
m11_22 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerInternalWriter.cs"];
m11_15 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="105-105", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonSerializerInternalWriter.cs"];
m11_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", span="35-35", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_1 [label="JTokenWriter writer = new JTokenWriter()", span="38-38", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_2 [label="writer.WriteStartObject()", span="39-39", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_3 [label="writer.WritePropertyName(''name1'')", span="40-40", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_4 [label="writer.WriteValue(''value1'')", span="41-41", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_5 [label="writer.WritePropertyName(''name2'')", span="42-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_6 [label="writer.WriteStartArray()", span="43-43", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_7 [label="writer.WriteValue(1)", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_8 [label="writer.WriteValue(2)", span="45-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_9 [label="writer.WriteEndArray()", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_10 [label="writer.WriteEndObject()", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_11 [label="JObject o = (JObject)writer.Token", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_12 [label="Console.WriteLine(o.ToString())", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_13 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", span="35-35", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="JsonSerializerInternalWriter.cs"];
m11_16 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="166-166", cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JsonSerializerInternalWriter.cs"];
m11_17 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="260-260", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="JsonSerializerInternalWriter.cs"];
m11_20 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerInternalWriter.cs"];
m11_23 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerInternalWriter.cs"];
m11_18 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", span="135-135", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="JsonSerializerInternalWriter.cs"];
m11_21 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalWriter.cs"];
m12_8 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_9 [label="Converters = new List<JsonConverter>()", span="392-392", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_10 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m12_0 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m12_1 [label=value, span="227-227", cluster="lambda expression", color=green, community=1, file="JsonSerializerSettings.cs"];
m12_2 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m12_12 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSerializerSettings.cs"];
m13_2270 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonSerializerTest.cs"];
m13_1380 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs"];
m13_3767 [label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonSerializerTest.cs"];
m13_2028 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4577-4577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_2029 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4579-4579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_2030 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4577-4577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m13_583 [label="_stringValue = stringValue", span="1312-1312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m13_584 [label="_intValue = intValue", span="1313-1313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m13_585 [label="_person1 = p1", span="1314-1314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m13_586 [label="_person2 = p2", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m13_587 [label="_person3 = p3", span="1316-1316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m13_588 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m13_655 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1441-1441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_661 [label="Assert.AreEqual(null, v.Value)", span="1454-1454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_662 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="1455-1455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_663 [label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1457-1459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_656 [label="string s = null", span="1443-1443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_657 [label="var v = new JValue(s)", span="1444-1444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_660 [label="string output = o.ToString()", span="1452-1452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_658 [label="var o = JObject.FromObject(new { title = v })", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_659 [label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1447-1450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1441-1441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m13_137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="414-414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_139 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="418-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_143 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="431-433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_144 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}''),\r\n                ''Required property 'Name' expects a value but got null. Path '', line 1, position 13.'')", span="435-437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_145 [label="RequiredPropertyTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':''''Name!''''}'')", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_141 [label="string json = JsonConvert.SerializeObject(c2)", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_142 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_146 [label="Assert.AreEqual(''Name!'', c3.Name)", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_138 [label="RequiredPropertyTestClass c1 = new RequiredPropertyTestClass()", span="416-416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_140 [label="RequiredPropertyTestClass c2 = new RequiredPropertyTestClass\r\n            {\r\n                Name = ''Name!''\r\n            }", span="422-425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_147 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="414-414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m13_688 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1471-1471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonSerializerTest.cs"];
m13_1986 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4432-4432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonSerializerTest.cs"];
m13_1543 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3348-3348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1544 [label="_name = name", span="3350-3350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1545 [label="Age = age", span="3351-3351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1546 [label="Rank = rank", span="3352-3352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1547 [label="Title = title", span="3353-3353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1548 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3348-3348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m13_1048 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs"];
m13_3220 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="343-343", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonSerializerTest.cs"];
m13_2271 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JsonSerializerTest.cs"];
m13_739 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="684-684", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs"];
m13_3757 [label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35", cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonSerializerTest.cs"];
m13_439 [label="Entry System.Globalization.CultureInfo.ToString()", span="0-0", cluster="System.Globalization.CultureInfo.ToString()", file="JsonSerializerTest.cs"];
m13_731 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="489-489", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_2115 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonSerializerTest.cs"];
m13_696 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1524-1524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_698 [label="var json = JsonConvert.SerializeObject(original)", span="1527-1527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_700 [label="Assert.AreEqual(expectedJson, json)", span="1529-1529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_697 [label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1526-1526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_699 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1528-1528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_701 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1524-1524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_1186 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs"];
m13_1630 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3582-3582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1632 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3586-3586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1633 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3588-3588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1634 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="3589-3589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1635 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3590-3590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1631 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3584-3584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_1636 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3582-3582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m13_364 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="371-371", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs"];
m13_1133 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_1135 [label="string json = JsonConvert.SerializeObject(date)", span="2482-2482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_1136 [label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2483-2483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_1134 [label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2480-2480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_1137 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m13_816 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs"];
m13_440 [label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonSerializerTest.cs"];
m13_852 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs"];
m13_2325 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5259-5259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m13_2326 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 13.'')", span="5261-5276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m13_2327 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5259-5259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m13_1933 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4259-4259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m13_1935 [label="Add(pair.Key, pair.Value)", span="4263-4263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m13_1934 [label=initial, span="4261-4261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m13_1936 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4259-4259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m13_789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1686-1686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonSerializerTest.cs"];
m13_617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1352-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_627 [label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="1403-1403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_624 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="1369-1373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_625 [label="string json = JsonConvert.SerializeObject(obj, settings)", span="1375-1375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_628 [label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_629 [label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="1406-1406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_630 [label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="1407-1407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_631 [label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="1408-1408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_632 [label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="1409-1409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_633 [label="Assert.AreEqual(obj2._person1, obj2._person3)", span="1410-1410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_634 [label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_635 [label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="1412-1412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_636 [label="Assert.AreEqual(obj2._parent, obj2)", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_618 [label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="1354-1357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_619 [label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="1358-1361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_626 [label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="1377-1401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_623 [label="obj._parent = obj", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_622 [label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="1366-1366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_620 [label="p1.Spouse = p2", span="1363-1363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_621 [label="p2.Spouse = p1", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_637 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1352-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m13_1037 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="755-755", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs"];
m13_1765 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="188-188", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerTest.cs"];
m13_1225 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2635-2635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1230 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2646-2646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1228 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2640-2643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1231 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2648-2648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1232 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2649-2649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1229 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2644-2644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1227 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2638-2638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1226 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2637-2637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1233 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2635-2635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1669 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3645-3645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1670 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3647-3647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1671 [label="Assert.AreEqual(3, l.Count)", span="3648-3648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1672 [label="Assert.AreEqual(3.3m, l[0])", span="3650-3650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1673 [label="Assert.AreEqual(null, l[1])", span="3651-3651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1674 [label="Assert.AreEqual(1.1m, l[2])", span="3652-3652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_1675 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3645-3645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m13_2953 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6789-6789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2956 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6795-6795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2955 [label="string json = JsonConvert.SerializeObject(d1)", span="6793-6793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2957 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6797-6797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2958 [label="Assert.AreEqual(d1[0], d2[0])", span="6798-6798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2954 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6791-6791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_2959 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6789-6789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m13_1610 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3514-3514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_1612 [label="string json = JsonConvert.SerializeObject(value)", span="3521-3521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_1613 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3523-3523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_1611 [label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3516-3519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_1614 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3514-3514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m13_2476 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5586-5586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m13_2477 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5588-5588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m13_2478 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5589-5589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m13_2479 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5586-5586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m13_1381 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2933-2933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1383 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1390 [label="string after = JsonConvert.SerializeObject(aa)", span="2946-2946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1391 [label="Assert.AreEqual(json, after)", span="2948-2948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1384 [label="Assert.AreEqual(''Before!'', aa.Before)", span="2939-2939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1385 [label="Assert.AreEqual(''After!'', aa.After)", span="2940-2940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1386 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2941-2941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1387 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2942-2942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1388 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2943-2943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1389 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2944-2944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1382 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2935-2935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1392 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2933-2933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1649 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3617-3617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m13_1651 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3621-3621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m13_1650 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3619-3619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m13_1652 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3617-3617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m13_3191 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7274-7274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonSerializerTest.cs"];
m13_3975 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="9220-9220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonSerializerTest.cs"];
m13_3069 [label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonSerializerTest.cs"];
m13_326 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="JsonSerializerTest.cs"];
m13_1250 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs"];
m13_1608 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs"];
m13_2550 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5717-5717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonSerializerTest.cs"];
m13_2116 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonSerializerTest.cs"];
m13_940 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs"];
m13_2645 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5966-5966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2647 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5975-5975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2648 [label="Assert.AreEqual(40, p.Age)", span="5976-5976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2649 [label="Assert.AreEqual(44.4, p.Height)", span="5977-5977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2650 [label="Assert.AreEqual(4m, p.Price)", span="5978-5978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2646 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5968-5973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5966-5966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m13_2339 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5280-5280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2350 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5296-5296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2348 [label="string json = JsonConvert.SerializeObject(child)", span="5292-5292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2349 [label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5294-5294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2351 [label="Assert.AreEqual(3, result.Count)", span="5298-5298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2352 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5299-5299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2353 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5300-5300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2340 [label="var reference = new Dictionary<string, object>()", span="5282-5282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2344 [label="var child = new Dictionary<string, object>()", span="5287-5287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2347 [label="child.Add(''Father'', reference)", span="5290-5290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2341 [label="reference.Add(''$ref'', null)", span="5283-5283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2342 [label="reference.Add(''$id'', null)", span="5284-5284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2343 [label="reference.Add(''blah'', ''blah!'')", span="5285-5285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2345 [label="child.Add(''_id'', 2)", span="5288-5288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2346 [label="child.Add(''Name'', ''Isabell'')", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_2354 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5280-5280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m13_1055 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2332-2332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m13_1056 [label="string json = JsonConvert.SerializeObject(null)", span="2334-2334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m13_1057 [label="Assert.AreEqual(''null'', json)", span="2335-2335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m13_1058 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2332-2332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m13_3828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8886-8886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_3831 [label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="8890-8893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_3830 [label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="8889-8889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_3829 [label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="8888-8888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_3832 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8886-8886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m13_3176 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7216-7216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3182 [label="string json = JsonConvert.SerializeObject(product)", span="7224-7224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3183 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7232-7237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3186 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7257-7262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3184 [label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="7238-7247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3187 [label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7264-7271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3177 [label="Product product = new Product()", span="7218-7218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3181 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="7222-7222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3185 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7255-7255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3179 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="7220-7220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3178 [label="product.Name = ''Apple''", span="7219-7219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3180 [label="product.Price = 3.99M", span="7221-7221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_3188 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7216-7216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m13_1372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2920-2920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1377 [label="string json = JsonConvert.SerializeObject(aa)", span="2927-2927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1378 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2929-2929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1373 [label="JaggedArray aa = new JaggedArray()", span="2922-2922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1376 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2925-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1374 [label="aa.Before = ''Before!''", span="2923-2923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1375 [label="aa.After = ''After!''", span="2924-2924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_1379 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2920-2920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m13_3835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8898-8898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m13_3837 [label="JObject o = JsonConvert.DeserializeObject<JObject>(content)", span="8901-8901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m13_3839 [label="Assert.AreEqual(1408188593, time)", span="8904-8904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m13_3836 [label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="8900-8900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m13_3838 [label="int time = (int)o[''result''][''time'']", span="8902-8902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m13_3840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8898-8898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m13_2379 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5362-5362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2385 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5376-5377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2386 [label="Assert.AreEqual(2, newDictionary.Count)", span="5379-5379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2380 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5364-5364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2384 [label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5371-5374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2383 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5369-5369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2381 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5366-5366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2382 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5367-5367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_2387 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5362-5362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m13_667 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs"];
m13_2874 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m13_1918 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4233-4233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1920 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="4237-4237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1921 [label="Assert.AreEqual(3, dic.Count)", span="4239-4239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1922 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="4240-4240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1923 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="4241-4241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1924 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="4242-4242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1919 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="4235-4235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1925 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4233-4233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1251 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs"];
m13_2884 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6639-6639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2888 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6644-6644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2887 [label="string json = JsonConvert.SerializeObject(uri)", span="6643-6643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2889 [label="Assert.AreEqual(uri, output)", span="6646-6646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2886 [label="Uri uri = new Uri(input)", span="6642-6642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2885 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="6641-6641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_2890 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6639-6639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m13_271 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="635-635", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerTest.cs"];
m13_1132 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JsonSerializerTest.cs"];
m13_2797 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6431-6431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m13_2798 [label="return _readonlyString;", span="6433-6433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m13_2799 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6431-6431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m13_2036 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4587-4587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m13_2037 [label="return _innerDictionary.TryGetValue(key, out value);", span="4589-4589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m13_2038 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4587-4587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m13_2119 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonSerializerTest.cs"];
m13_158 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs"];
m13_159 [label="Name = name", span="448-448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs"];
m13_160 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="446-446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs"];
m13_4051 [label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0", cluster="System.Text.Encoding.GetEncoding(string)", file="JsonSerializerTest.cs"];
m13_2967 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6815-6815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2970 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6821-6821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2969 [label="string json = JsonConvert.SerializeObject(d1)", span="6819-6819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2971 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6823-6823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2972 [label="Assert.AreEqual(d1[0], d2[0])", span="6824-6824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2968 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="6817-6817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_2973 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6815-6815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m13_3937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9145-9145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m13_3941 [label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="9155-9155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m13_3940 [label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="9151-9153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m13_3939 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="9149-9149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m13_3938 [label="ConstantTestClass c1 = new ConstantTestClass()", span="9147-9147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m13_3942 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9145-9145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m13_3570 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8226-8226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3574 [label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="8232-8232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3572 [label="string json = JsonConvert.SerializeObject(tuple)", span="8229-8229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3573 [label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="8230-8230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3575 [label="Assert.AreEqual(500, tuple2.Item1)", span="8233-8233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3576 [label="Assert.AreEqual(20, tuple2.Item2)", span="8234-8234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3571 [label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="8228-8228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_3577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8226-8226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m13_1891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4144-4144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_1892 [label="_dict1.Add(item.Key, item)", span="4146-4146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_1893 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4144-4144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_2506 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs"];
m13_2614 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5905-5905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2615 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5907-5907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2616 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5908-5908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2617 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5905-5905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_3523 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8060-8060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m13_3524 [label="IgnoreSerializableAttribute = false", span="8062-8062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m13_3525 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8060-8060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m13_730 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_3339 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonSerializerTest.cs"];
m13_1962 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs"];
m13_1964 [label="C2 = c2", span="4397-4397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs"];
m13_1965 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs"];
m13_235 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m13_236 [label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="699-705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m13_237 [label="Assert.IsNull(otc.Value1)", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m13_241 [label="Assert.IsNull(otc.Value5)", span="710-710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m13_238 [label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="707-707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m13_239 [label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m13_240 [label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="709-709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m13_242 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m13_183 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="228-228", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m13_1615 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs"];
m13_2688 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6098-6098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_2690 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="6101-6101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_2689 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="6100-6100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_2691 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6098-6098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_2449 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5537-5537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2450 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5539-5542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2451 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5544-5544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2456 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5553-5553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2457 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5554-5554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2452 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5546-5546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2455 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5551-5551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2453 [label="reader.DateParseHandling = DateParseHandling.None", span="5547-5547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2454 [label="JsonSerializer serializer = new JsonSerializer()", span="5549-5549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2458 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5537-5537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m13_2516 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5672-5672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2522 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5681-5681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2521 [label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5680-5680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2518 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5675-5675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2520 [label="JsonSerializer serializer = new JsonSerializer()", span="5678-5678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2517 [label="string json = ''{Amount:123456789876543.21}''", span="5674-5674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2519 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5676-5676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_2523 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5672-5672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m13_759 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1710-1710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_766 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1727-1734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_765 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1725-1725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_760 [label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1712-1718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_764 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1723-1723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_761 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1720-1720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_762 [label="baseWith.Virtual = ''Virtual2!''", span="1721-1721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_763 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1722-1722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_767 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1710-1710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_2551 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5705-5705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonSerializerTest.cs"];
m13_3604 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8296-8296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3608 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8304-8304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3606 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8300-8300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3607 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8302-8302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3605 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8298-8298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_3609 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8296-8296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m13_675 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1466-1466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonSerializerTest.cs"];
m13_510 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1191-1191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_514 [label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1197-1197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_516 [label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="1200-1200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_518 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="1203-1203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_520 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="1207-1207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_523 [label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="1212-1212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_525 [label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="1215-1215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_527 [label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="1218-1218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_529 [label="Assert.AreEqual(EqualityComparer<object>.Default, serializerProxy.EqualityComparer)", span="1221-1221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_531 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="1224-1224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_533 [label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="1227-1227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_535 [label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="1230-1230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_537 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="1233-1233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_539 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="1236-1236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_541 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="1239-1239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_543 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="1242-1242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_545 [label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="1245-1245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_547 [label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="1248-1248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_549 [label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="1251-1251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_551 [label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="1254-1254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_553 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="1257-1257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_555 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_557 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="1263-1263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_560 [label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="1267-1267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_562 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="1270-1270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_565 [label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="1274-1274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_567 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="1278-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_569 [label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="1282-1282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_526 [label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="1217-1217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_511 [label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="1193-1193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_512 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1195-1195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_513 [label="serializerProxy.Binder = customBinder", span="1196-1196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_515 [label="serializerProxy.CheckAdditionalContent = true", span="1199-1199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_517 [label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1202-1202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_519 [label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="1206-1206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_521 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1210-1210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_522 [label="serializerProxy.ContractResolver = resolver", span="1211-1211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_524 [label="serializerProxy.Converters.Add(new StringEnumConverter())", span="1214-1214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_528 [label="serializerProxy.EqualityComparer = EqualityComparer<object>.Default", span="1220-1220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_530 [label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1223-1223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_532 [label="serializerProxy.DateFormatString = ''yyyy''", span="1226-1226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_534 [label="serializerProxy.DateParseHandling = DateParseHandling.None", span="1229-1229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_536 [label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_538 [label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1235-1235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_540 [label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="1238-1238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_542 [label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="1241-1241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_544 [label="serializerProxy.Formatting = Formatting.Indented", span="1244-1244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_546 [label="serializerProxy.MaxDepth = 9001", span="1247-1247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_548 [label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="1250-1250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_550 [label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="1253-1253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_552 [label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1256-1256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_554 [label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1259-1259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_556 [label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1262-1262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_558 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_559 [label="serializerProxy.ReferenceResolver = referenceResolver", span="1266-1266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_561 [label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1269-1269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_563 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1272-1272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_564 [label="serializerProxy.TraceWriter = traceWriter", span="1273-1273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_566 [label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1277-1277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_568 [label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="1281-1281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_570 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1191-1191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m13_2992 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6866-6866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2995 [label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6877-6881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2994 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6875-6875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2993 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="6868-6873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_2996 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6866-6866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m13_1103 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs"];
m13_3012 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonSerializerTest.cs"];
m13_2662 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5996-5996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_2665 [label="Assert.AreEqual(@''{}'', json)", span="6002-6002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_2664 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6000-6000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_2663 [label="MultiIndexSuper e = new MultiIndexSuper()", span="5998-5998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_2666 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5996-5996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m13_1989 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4485-4485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1993 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="4494-4494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1992 [label=dictionary, span="4492-4492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1990 [label="dictionary == null", span="4487-4487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1991 [label="throw new ArgumentNullException(''dictionary'');", span="4489-4489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_1994 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4485-4485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_221 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="621-621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonSerializerTest.cs"];
m13_3617 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8329-8329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m13_3619 [label="string json = JsonConvert.SerializeObject(p)", span="8333-8333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m13_3623 [label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8341-8344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m13_3620 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8335-8335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m13_3624 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8346-8346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m13_3618 [label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8331-8331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m13_3621 [label="DefaultContractResolver r = new DefaultContractResolver()", span="8338-8338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m13_3622 [label="r.IgnoreSerializableAttribute = false", span="8339-8339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m13_3625 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8329-8329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m13_1342 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2847-2847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_1344 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2856-2856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_1345 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="2858-2858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_1346 [label="Assert.AreEqual(null, c.MiddleName)", span="2859-2859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_1347 [label="Assert.AreEqual(null, c.LastName)", span="2860-2860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_1343 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2849-2854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_1348 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2847-2847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m13_3300 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7473-7473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_3304 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7488-7488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_3305 [label="Assert.AreEqual(2, dic2.Count)", span="7490-7490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_3306 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7491-7491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_3307 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7492-7492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_3301 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7475-7479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_3303 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7483-7486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_3302 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7481-7481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_3308 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7473-7473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m13_3199 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JsonSerializerTest.cs"];
m13_3465 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7886-7886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m13_3466 [label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="7888-7892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m13_3467 [label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7894-7897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m13_3468 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7886-7886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m13_3445 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs"];
m13_1827 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs"];
m13_1357 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="JsonSerializerTest.cs"];
m13_3382 [label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonSerializerTest.cs"];
m13_1704 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3699-3699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m13_1706 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3703-3707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m13_1705 [label="string json = @''[]''", span="3701-3701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m13_1707 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3699-3699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m13_1194 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs"];
m13_779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1677-1677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonSerializerTest.cs"];
m13_2005 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs"];
m13_2053 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4635-4635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_2054 [label="_stringValue = stringValue", span="4637-4637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_2055 [label="_intValue = intValue", span="4638-4638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_2056 [label="_dateTimeOffsetValue = dateTimeOffset", span="4639-4639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_2057 [label="_personValue = personValue", span="4640-4640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_2058 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4641-4641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_2059 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4635-4635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonSerializerTest.cs"];
m13_689 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1515-1515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_691 [label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1518-1518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_693 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1520-1520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_690 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1517-1517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_692 [label="Assert.IsNotNull(deserialized.foo)", span="1519-1519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_694 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1515-1515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_818 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSerializerTest.cs"];
m13_2508 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5658-5658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m13_2509 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5660-5660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m13_2510 [label="Assert.AreEqual(123456789876543.21m, d)", span="5661-5661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m13_2511 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5658-5658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m13_2366 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5330-5330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_2368 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5334-5338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_2369 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5340-5340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_2370 [label="Assert.AreEqual(9.9m, dic[''value''])", span="5341-5341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_2367 [label="string json = @''{'value':9.9}''", span="5332-5332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_2371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5330-5330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m13_2714 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="6173-6173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonSerializerTest.cs"];
m13_1996 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4529-4529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_1997 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4531-4531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_1998 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4529-4529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_102 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_2243 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5111-5111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2250 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="5132-5132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2253 [label="Assert.IsNull(newTestObject.Element.Parent)", span="5136-5136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2251 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="5133-5133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2252 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="5134-5134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2249 [label="StringAssert.AreEqual(expected, json)", span="5130-5130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2247 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5117-5117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2244 [label="XNodeTestObject testObject = new XNodeTestObject()", span="5113-5113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2248 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="5118-5129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2246 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="5115-5115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2245 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="5114-5114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_2254 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5111-5111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m13_898 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1979-1979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_901 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1985-1985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_902 [label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1986-1988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_900 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1983-1983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_899 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1981-1981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_903 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1979-1979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_2002 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4539-4539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m13_2003 [label="_innerDictionary.Clear()", span="4541-4541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m13_2004 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4539-4539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m13_702 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1476-1476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonSerializerTest.cs"];
m13_889 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_2667 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="6005-6005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs"];
m13_2707 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JsonSerializerTest.cs"];
m13_1766 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3802-3802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m13_1767 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3804-3815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m13_1768 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3802-3802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m13_1252 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2687-2687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1257 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2694-2694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1259 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2698-2698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1260 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2699-2699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1256 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2693-2693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1258 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2696-2696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1253 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2689-2689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1255 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2691-2691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1254 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2690-2690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1261 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2687-2687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m13_3221 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7331-7331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3231 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7348-7348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3232 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7349-7351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3230 [label="JValue v = (JValue)a[0]", span="7346-7346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3229 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7345-7345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3222 [label="MemoryStream ms = new MemoryStream()", span="7333-7333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3228 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7340-7343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3223 [label="BsonWriter writer = new BsonWriter(ms)", span="7334-7334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3227 [label="byte[] data = ms.ToArray()", span="7339-7339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3224 [label="writer.WriteStartArray()", span="7335-7335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3225 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3226 [label="writer.WriteEndArray()", span="7337-7337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_3233 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7331-7331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m13_2185 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5078-5078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2232 [label="BB_field1 = g", span="5081-5081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2233 [label="BB_field2 = g", span="5082-5082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2234 [label="BB_property1 = g", span="5083-5083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2235 [label="BB_property2 = g", span="5084-5084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2236 [label="BB_property3 = g", span="5085-5085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2237 [label="BB_property4 = g", span="5086-5086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2238 [label="BB_property5 = g", span="5087-5087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2239 [label="BB_property6 = g", span="5088-5088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2240 [label="BB_property7 = g", span="5089-5089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2241 [label="BB_property8 = g", span="5090-5090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_2242 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5078-5078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m13_747 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m13_749 [label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1588-1588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m13_748 [label="var strings = dictionaryKey.Split(' ')", span="1587-1587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m13_750 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m13_1276 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2720-2720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_1278 [label="json = JsonConvert.SerializeObject((int?)null)", span="2724-2724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_1280 [label="json = JsonConvert.SerializeObject((int?)1)", span="2727-2727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_1279 [label="Assert.AreEqual(''null'', json)", span="2725-2725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_1281 [label="Assert.AreEqual(''1'', json)", span="2728-2728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_1277 [label="string json", span="2722-2722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_1282 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2720-2720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m13_1616 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3527-3527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1617 [label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3529-3537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1619 [label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3541-3553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1618 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1620 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3527-3527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_210 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs"];
m13_1910 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="4138-4138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs"];
m13_2085 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonSerializerTest.cs"];
m13_3683 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8506-8506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m13_3685 [label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8509-8509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m13_3686 [label="Assert.AreEqual(''my value'', foo.Bar)", span="8510-8510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m13_3684 [label="string json = @''{''''something_else'''':''''my value''''}''", span="8508-8508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m13_3687 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8506-8506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m13_2124 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4770-4770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2136 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4814-4814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2139 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4817-4817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2137 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4815-4815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2138 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4816-4816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2140 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4818-4818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2141 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4819-4819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2142 [label="Assert.AreEqual(null, o2._nullableInt)", span="4820-4820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2126 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4773-4773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2135 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4789-4812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2134 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4788-4788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2130 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4778-4778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2125 [label="Person person = new Person()", span="4772-4772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2127 [label="person.LastModified = person.BirthDate", span="4774-4774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2132 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4781-4781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2133 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4786-4786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2129 [label="person.Name = ''Name!''", span="4776-4776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2131 [label="string dateTimeOffsetText", span="4779-4779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2128 [label="person.Department = ''Department!''", span="4775-4775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2143 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4770-4770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m13_2974 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6828-6828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2981 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6839-6839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2979 [label="string json = JsonConvert.SerializeObject(b)", span="6835-6835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2980 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6837-6837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2982 [label="Assert.AreEqual(true, b2.no)", span="6841-6841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2975 [label="Bb b = new Bb()", span="6830-6830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2978 [label="a.no = int.MaxValue", span="6833-6833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2977 [label="Aa a = b", span="6832-6832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2976 [label="b.no = true", span="6831-6831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_2983 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6828-6828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m13_1333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2821-2821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_1337 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2840-2840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_1338 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="2842-2842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_1339 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="2843-2843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_1334 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="2823-2829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_1336 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="2833-2838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_1335 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2831-2831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_1340 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2821-2821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_2727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6250-6250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m13_2729 [label="Categories = new List<string>()", span="6253-6253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m13_2728 [label="Title = title", span="6252-6252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m13_2730 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6250-6250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m13_814 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JsonSerializerTest.cs"];
m13_1275 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs"];
m13_2875 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerTest.cs"];
m13_3235 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonSerializerTest.cs"];
m13_308 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="823-823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_1937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4303-4303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1940 [label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4308-4313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1939 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4306-4306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1938 [label="B value = new B()", span="4305-4305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4303-4303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m13_1508 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m13_1510 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3252-3258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m13_1509 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3250-3250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m13_1511 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m13_1349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2864-2864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_1351 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2875-2875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_1350 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2868-2873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_1352 [label="Assert.Fail()", span="2876-2876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_1353 [label=JsonSerializationException, span="2878-2878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_1354 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="2880-2880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_1355 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2864-2864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_2280 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="5193-5193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonSerializerTest.cs"];
m13_3542 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8144-8144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m13_3543 [label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8146-8146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3544 [label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8147-8147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3545 [label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8148-8148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3547 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture\r\n            })", span="8156-8160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3546 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8150-8154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m13_3548 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8162-8165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m13_3549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8144-8144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m13_17 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs"];
m13_75 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs"];
m13_76 [label="string json = JsonConvert.SerializeObject(new Binding_DisallowNull(), new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", span="288-291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", color=green, community=3, file="JsonSerializerTest.cs"];
m13_77 [label="Assert.AreEqual(''{}'', json)", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_78 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs"];
m13_1999 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4534-4534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m13_2000 [label="_innerDictionary.Add(key, value)", span="4536-4536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m13_2001 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4534-4534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m13_506 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JsonSerializerTest.cs"];
m13_733 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs"];
m13_744 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1580-1580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs"];
m13_745 [label="return _name + '' '' + _number;", span="1582-1582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs"];
m13_746 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1580-1580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs"];
m13_2039 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs"];
m13_1813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3908-3908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1820 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3924-3924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1821 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3925-3925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1822 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3926-3926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1823 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3927-3927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1824 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3928-3928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1819 [label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3916-3922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1818 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3915-3915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1814 [label="Foo f = new Foo()", span="3910-3910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1817 [label="f.Bars.Add(new Bar { Id = 2 })", span="3913-3913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1815 [label="f.Bars.Add(new Bar { Id = 0 })", span="3911-3911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1816 [label="f.Bars.Add(new Bar { Id = 1 })", span="3912-3912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_1825 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3908-3908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m13_2092 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4667-4667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2093 [label="info.AddValue(''stringValue'', _stringValue)", span="4669-4669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2094 [label="info.AddValue(''intValue'', _intValue)", span="4670-4670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2095 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4671-4671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2096 [label="info.AddValue(''personValue'', _personValue)", span="4672-4672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2097 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4673-4673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2099 [label="info.AddValue(''booleanValue'', _booleanValue)", span="4676-4676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2100 [label="info.AddValue(''byteValue'', _byteValue)", span="4677-4677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2101 [label="info.AddValue(''charValue'', _charValue)", span="4678-4678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2102 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4679-4679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2103 [label="info.AddValue(''decimalValue'', _decimalValue)", span="4680-4680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2104 [label="info.AddValue(''shortValue'', _shortValue)", span="4681-4681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2105 [label="info.AddValue(''longValue'', _longValue)", span="4682-4682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2106 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4683-4683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2107 [label="info.AddValue(''floatValue'', _floatValue)", span="4684-4684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2108 [label="info.AddValue(''ushortValue'', _ushortValue)", span="4685-4685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2109 [label="info.AddValue(''uintValue'', _uintValue)", span="4686-4686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2110 [label="info.AddValue(''ulongValue'', _ulongValue)", span="4687-4687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2098 [label="info.AddValue(''nullableInt'', null)", span="4674-4674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2111 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4667-4667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2821 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6527-6527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m13_2822 [label="Exceptions = new List<Exception>()", span="6529-6529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m13_2823 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6527-6527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m13_1318 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2799-2799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1323 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2807-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1329 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2816-2816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1321 [label="string json = JsonConvert.SerializeObject(typeClass)", span="2804-2804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1327 [label="json = JsonConvert.SerializeObject(typeClass)", span="2813-2813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1322 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2805-2805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1324 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2808-2808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1328 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2814-2814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1330 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2817-2817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1320 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2802-2802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1326 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2811-2811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1319 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2801-2801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1325 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2810-2810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_1331 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2799-2799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m13_3816 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8858-8858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3817 [label="throw new InvalidCastException();", span="8860-8860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3818 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8858-8858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3555 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8189-8189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3556 [label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8191-8191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3557 [label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8192-8192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3558 [label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8193-8193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3562 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture,\r\n                Formatting = Formatting.Indented\r\n            })", span="8204-8209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3559 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8195-8199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3561 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8202-8202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3563 [label="serializer.Serialize(jsonWriter, dates)", span="8210-8210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3564 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="8212-8212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3565 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8213-8213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3566 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8214-8214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3560 [label="StringWriter sw = new StringWriter()", span="8201-8201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3568 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8218-8221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3567 [label="string json = sw.ToString()", span="8216-8216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_3569 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8189-8189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m13_1683 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3666-3666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m13_1685 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3670-3672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m13_1684 [label="string json = @''[]''", span="3668-3668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m13_1686 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3666-3666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m13_42 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs"];
m13_2747 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6293-6293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2753 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6308-6308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2754 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6309-6309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2755 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6310-6310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2756 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="6311-6311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2757 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="6312-6312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2752 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6300-6306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2751 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6299-6299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2748 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6295-6295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2750 [label="c1.Categories.Add(''two'', 2)", span="6297-6297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2749 [label="c1.Categories.Add(''one'', 1)", span="6296-6296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_2758 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6293-6293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m13_434 [label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36", cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonSerializerTest.cs"];
m13_441 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonSerializerTest.cs"];
m13_738 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs"];
m13_195 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", span="491-491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", file="JsonSerializerTest.cs"];
m13_2186 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4941-4941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2187 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4943-4953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2196 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4964-4984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2188 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4955-4955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2189 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4956-4956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2190 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4957-4957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2191 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4958-4958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2192 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4959-4959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2193 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4960-4960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2194 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4961-4961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2195 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4962-4962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2197 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4986-4986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2198 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4987-4987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2199 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4988-4988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2200 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4989-4989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2201 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4990-4990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2202 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4991-4991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2203 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4992-4992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2204 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4993-4993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2205 [label="Assert.AreEqual(4, myB.BB_field1)", span="4995-4995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2206 [label="Assert.AreEqual(4, myB.BB_field2)", span="4996-4996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2207 [label="Assert.AreEqual(3, myB.BB_property1)", span="4997-4997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2208 [label="Assert.AreEqual(3, myB.BB_property2)", span="4998-4998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2209 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4999-4999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2210 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5000-5000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2211 [label="Assert.AreEqual(0, myB.BB_property5)", span="5001-5001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2212 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5002-5002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2213 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5003-5003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2214 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5004-5004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2215 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4941-4941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_639 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_642 [label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1424-1424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_641 [label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1422-1422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_640 [label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1420-1420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m13_16 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs"];
m13_3190 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonSerializerTest.cs"];
m13_3804 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8838-8838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3805 [label="return Value;", span="8840-8840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3806 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8838-8838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_87 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", span="296-296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", file="JsonSerializerTest.cs"];
m13_1438 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1440 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="3095-3095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1442 [label="Assert.AreEqual(''firstName'', o.firstName)", span="3098-3098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1443 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="3099-3099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1444 [label="Assert.AreEqual(''LastName'', o.LastName)", span="3100-3100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1445 [label="Assert.AreEqual(''lastName'', o.lastName)", span="3101-3101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1439 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="3088-3093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1441 [label="Assert.IsNotNull(o)", span="3096-3096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1446 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m13_1488 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3207-3207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1496 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3226-3226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1495 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3217-3224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1497 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3228-3232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1489 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3209-3209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1494 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3215-3215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1490 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3210-3210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1491 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3211-3211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1492 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3212-3212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1493 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3213-3213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1498 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3207-3207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1079 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2367-2367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_1084 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2376-2376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_1085 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="2378-2378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_1083 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2374-2374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_1080 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2369-2369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_1081 [label="JsonSerializer s = new JsonSerializer()", span="2371-2371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_1082 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2372-2372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_1086 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2367-2367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m13_1243 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs"];
m13_2118 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonSerializerTest.cs"];
m13_62 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs"];
m13_63 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'');\r\n            }, ''Required property 'Bars' expects a value but got null. Path '', line 1, position 9.'')", span="258-261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs"];
m13_64 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs"];
m13_1195 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs"];
m13_3724 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8671-8671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m13_3726 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8690-8695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m13_3727 [label="Assert.AreEqual(2, people.Count)", span="8697-8697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m13_3730 [label="Assert.AreEqual(john, jane.Spouse)", span="8702-8702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m13_3731 [label="Assert.AreEqual(jane, john.Spouse)", span="8703-8703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m13_3725 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8673-8688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m13_3728 [label="PersonReference john = people[0]", span="8699-8699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m13_3729 [label="PersonReference jane = people[1]", span="8700-8700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m13_3732 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8671-8671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m13_1001 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m13_638 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonSerializerTest.cs"];
m13_3432 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7824-7824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3433 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="7826-7826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3436 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="7830-7830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3441 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="7837-7837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3434 [label="Assert.AreEqual(1, uris.Count)", span="7827-7827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3435 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="7828-7828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3440 [label="Assert.AreEqual(i1, i2)", span="7835-7835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3443 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="7839-7839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3437 [label="Assert.IsNotNull(uri)", span="7831-7831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3442 [label="Assert.IsNotNull(uri)", span="7838-7838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3438 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="7833-7833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3439 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="7834-7834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_3444 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7824-7824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m13_1024 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2275-2275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1026 [label="string json = JsonConvert.SerializeObject(anonymous)", span="2287-2287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1027 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2288-2288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1029 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2291-2291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1030 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2292-2292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1031 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2293-2293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1032 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2294-2294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1033 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2295-2295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1034 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2296-2296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1035 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1025 [label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2277-2285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1028 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_1036 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2275-2275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m13_2359 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5319-5319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_2361 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5323-5323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_2362 [label="Assert.AreEqual(''First'', cc.First)", span="5324-5324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_2363 [label="Assert.AreEqual(2, cc.Second)", span="5325-5325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_2364 [label="Assert.AreEqual(null, cc.Ignored)", span="5326-5326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_2360 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5321-5321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_2365 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5319-5319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m13_299 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="818-818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonSerializerTest.cs"];
m13_737 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonSerializerTest.cs"];
m13_51 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs"];
m13_52 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'');\r\n            }, ''Required property 'RequiredProperty' expects a non-null value. Path '', line 1, position 21.'')", span="242-245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", color=green, community=3, file="JsonSerializerTest.cs"];
m13_53 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs"];
m13_103 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="357-357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m13_104 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="359-361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m13_105 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 2.'')", span="363-365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m13_106 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="367-369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m13_107 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="371-373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m13_108 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="375-377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m13_109 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="379-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m13_110 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="357-357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m13_2824 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6535-6535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2830 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6547-6547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2833 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6552-6552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2829 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="6546-6546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2831 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6548-6548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2834 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6553-6553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2832 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6550-6550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2825 [label="ClassWithException classWithException = new ClassWithException()", span="6537-6537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2826 [label="throw new Exception(''Test Exception'');", span="6540-6540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2828 [label="classWithException.Exceptions.Add(ex)", span="6544-6544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2827 [label=Exception, span="6542-6542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2835 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6535-6535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m13_2815 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6505-6505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_2818 [label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6510-6519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_2817 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6508-6508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_2816 [label="DerivedType d = new DerivedType()", span="6507-6507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_2819 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6505-6505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m13_3578 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonSerializerTest.cs"];
m13_3383 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="190-190", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerTest.cs"];
m13_2281 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="5216-5216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs"];
m13_2436 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5463-5463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs"];
m13_194 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", span="479-479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", file="JsonSerializerTest.cs"];
m13_2258 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5142-5142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2266 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="5157-5157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2267 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="5158-5158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2265 [label="StringAssert.AreEqual(expected, json)", span="5155-5155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2263 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5149-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2259 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="5144-5144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2264 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="5150-5154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2262 [label="testObject.Document = document", span="5147-5147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2260 [label="XmlDocument document = new XmlDocument()", span="5145-5145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2261 [label="document.LoadXml(''<root>hehe, root</root>'')", span="5146-5146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_2268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5142-5142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m13_47 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerTest.cs"];
m13_2018 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4559-4559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2019 [label="return _innerDictionary.GetEnumerator();", span="4561-4561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2020 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4559-4559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_3360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7617-7617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m13_3361 [label="var json = Serialize(obj)", span="7620-7620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m13_3362 [label="return Deserialize<T>(json);", span="7621-7621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m13_3363 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7617-7617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5723-5723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2545 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5730-5730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2544 [label="string str = JsonConvert.SerializeObject(obj)", span="5728-5728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2546 [label="Assert.AreEqual(1, obj.Position.X)", span="5732-5732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2547 [label="Assert.AreEqual(2, obj.Position.Y)", span="5733-5733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2548 [label="Assert.AreEqual(3, obj.Position.Z)", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2542 [label="VectorParent obj = new VectorParent()", span="5725-5725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2543 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5726-5726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_2549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5723-5723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m13_1552 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3378-3378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1557 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3391-3391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1558 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3392-3392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1556 [label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3384-3389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1555 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3382-3382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1553 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3380-3380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1554 [label="c.NotIncluded = ''Hi''", span="3381-3381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_1559 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3378-3378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m13_3101 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7087-7087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m13_3102 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="7089-7089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m13_3103 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7087-7087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m13_1145 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs"];
m13_3153 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonSerializerTest.cs"];
m13_2789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6410-6410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2790 [label="_privateString = privateString", span="6412-6412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2791 [label="_readonlyString = readonlyString", span="6413-6413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2792 [label="_internalString = internalString", span="6414-6414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2793 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6410-6410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m13_2698 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="6115-6115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonSerializerTest.cs"];
m13_1943 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4325-4325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m13_1945 [label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4330-4337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m13_1946 [label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4338-4341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m13_1947 [label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4343-4343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m13_1944 [label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4327-4328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m13_1948 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4325-4325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m13_3526 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8092-8092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3528 [label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="8096-8096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3531 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8102-8102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3532 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8103-8103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3527 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8094-8094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3529 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8098-8098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3530 [label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="8100-8100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3533 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8092-8092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2928 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9564-9564", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs"];
m13_1124 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs"];
m13_752 [label="Entry System.Convert.ToInt32(string)", span="0-0", cluster="System.Convert.ToInt32(string)", file="JsonSerializerTest.cs"];
m13_1179 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2555-2555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_1183 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2562-2562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_1181 [label="string json = JsonConvert.SerializeObject(c1)", span="2559-2559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_1182 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2560-2560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_1184 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2564-2564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_1180 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2557-2557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_1185 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2555-2555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m13_177 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="493-493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m13_179 [label="throw new Exception(''Error!'');", span="496-496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m13_178 [label="type == typeof(Version)", span="495-495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m13_180 [label="return base.ResolveContract(type);", span="498-498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m13_181 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="493-493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m13_3154 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m13_1500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3236-3236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1501 [label="string json = ''{}''", span="3238-3238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1502 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3240-3240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1503 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3241-3241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1504 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3242-3242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1505 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3243-3243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1506 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3244-3244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_1507 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3236-3236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_366 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonSerializerTest.cs"];
m13_834 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs"];
m13_3175 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs"];
m13_3364 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7624-7624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_3368 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7629-7632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_3366 [label="var stringWriter = new StringWriter()", span="7627-7627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_3367 [label="var serializer = new JsonSerializer()", span="7628-7628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_3369 [label="serializer.Serialize(stringWriter, obj)", span="7633-7633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_3370 [label="return stringWriter.ToString();", span="7635-7635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_3371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7624-7624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m13_2604 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="5871-5871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonSerializerTest.cs"];
m13_3042 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6960-6960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_3046 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6986-6986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_3047 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6988-6988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_3048 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6989-6989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_3043 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="6962-6970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_3045 [label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6974-6984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_3044 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6972-6972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_3049 [label="byte[] bytes = (byte[])actual.Payload", span="6990-6990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_3050 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6991-6991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_3051 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6960-6960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m13_291 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="851-851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_294 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_293 [label="var json = JsonConvert.SerializeObject(input)", span="860-860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_295 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_296 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="864-864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_297 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_292 [label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="853-858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_298 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="851-851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m13_3399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7751-7751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3408 [label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="7764-7764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3401 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="7755-7755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3405 [label="Assert.AreEqual(1, o[''one''])", span="7760-7760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3402 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="7756-7756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3407 [label="s = JsonSerializer.Create(settings)", span="7763-7763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3400 [label="string json = ''{one:1}{}''", span="7753-7753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3406 [label="settings.CheckAdditionalContent = true", span="7762-7762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3403 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7757-7757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3404 [label="Assert.IsNotNull(o)", span="7759-7759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_3409 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7751-7751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2176 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4908-4908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2179 [label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="4912-4918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2182 [label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="4922-4936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2178 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="4911-4911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2180 [label="BB myB = new BB(3, 4)", span="4920-4920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2181 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="4921-4921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2177 [label="AA myA = new AA(2)", span="4910-4910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_2183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4908-4908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m13_3672 [label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="45-45", cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs"];
m13_3798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8828-8828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3799 [label="throw new InvalidCastException();", span="8830-8830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3800 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8828-8828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_897 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonSerializerTest.cs"];
m13_687 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1483-1483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonSerializerTest.cs"];
m13_2759 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_2594 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5859-5859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m13_2595 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="5861-5867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m13_2596 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5859-5859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m13_3113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7099-7099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m13_3114 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="7101-7101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m13_3115 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7099-7099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m13_602 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="JsonSerializerTest.cs"];
m13_1393 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2952-2952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m13_1395 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="2991-2991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m13_1394 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="2954-2989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m13_1396 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2952-2952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m13_3697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8565-8565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3698 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8567-8571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs"];
m13_3699 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8573-8577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs"];
m13_3700 [label="john.Spouse = jane", span="8579-8579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3701 [label="jane.Spouse = john", span="8580-8580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3702 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8582-8586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs"];
m13_3703 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = null,\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8588-8595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs"];
m13_3704 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="8597-8612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", color=green, community=1, file="JsonSerializerTest.cs"];
m13_3705 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8565-8565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m13_1879 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4108-4108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1880 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="4110-4110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1883 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="4114-4114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1884 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="4115-4115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1885 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="4116-4116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1886 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="4117-4117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1887 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="4118-4118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1888 [label="Assert.AreEqual(1, d.List.Count)", span="4119-4119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1889 [label="Assert.AreEqual(''existing'', d.List[0])", span="4120-4120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1881 [label="Assert.IsNotNull(d)", span="4112-4112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1882 [label="Assert.IsNotNull(d.Dictionary)", span="4113-4113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_1890 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4108-4108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m13_2123 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonSerializerTest.cs"];
m13_861 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs"];
m13_1711 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3712-3712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m13_1713 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3716-3722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m13_1712 [label="string json = @''[]''", span="3714-3714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m13_1714 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3712-3712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m13_343 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="946-946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_346 [label="Assert.AreEqual(3, o.Count)", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_347 [label="Assert.AreEqual(true, (bool)o[''A''])", span="960-960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_348 [label="Assert.AreEqual(false, (bool)o[''B''])", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_349 [label="Assert.AreEqual(1, o[''C''].Count())", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_350 [label="Assert.AreEqual(1, (int)o[''C''][0])", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_354 [label="Assert.AreEqual(0, o.Count)", span="969-969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_358 [label="Assert.AreEqual(1, o.Count)", span="974-974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_359 [label="Assert.AreEqual(true, (bool)o[''A''])", span="975-975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_351 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_355 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="970-970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_360 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_345 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_353 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_357 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_344 [label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="948-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_352 [label="json = @''{/* Test */}''", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_356 [label="json = @''{''''A'''': true/* Test */}''", span="972-972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_361 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="946-946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m13_2605 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs"];
m13_3234 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs"];
m13_837 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1863-1863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_843 [label="string output = JsonConvert.SerializeObject(product)", span="1872-1872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_845 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1886-1886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_846 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="1887-1887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_847 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1888-1888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_848 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1889-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_849 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1890-1890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_850 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_838 [label="Product product = new Product()", span="1865-1865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_842 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="1870-1870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_844 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="1884-1884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_839 [label="product.Name = ''Apple''", span="1867-1867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_840 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="1868-1868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_841 [label="product.Price = 3.99M", span="1869-1869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_851 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1863-1863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_3771 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8782-8782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3779 [label="return Value.ToString(CultureInfo.InvariantCulture);", span="8798-8798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3778 [label="conversionType == typeof(string)", span="8796-8796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3773 [label="return this;", span="8786-8786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3775 [label="return (int)Value;", span="8790-8790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3777 [label="return (long)Value;", span="8794-8794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3776 [label="conversionType == typeof(long)", span="8792-8792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3780 [label="throw new InvalidCastException();", span="8800-8800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3772 [label="conversionType == typeof(object)", span="8784-8784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3774 [label="conversionType == typeof(int)", span="8788-8788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3781 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8782-8782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_2485 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5619-5619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2494 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5638-5638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2496 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5641-5641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2498 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5644-5644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2502 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5650-5650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2504 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5653-5653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2491 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5626-5626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2493 [label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5629-5636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2492 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5628-5628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2495 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5640-5640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2497 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2499 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5646-5646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2500 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5647-5647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2486 [label="dynamic expando = new ExpandoObject()", span="5621-5621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2501 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5649-5649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2503 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5652-5652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2490 [label="expando.Complex.String = ''I am a string''", span="5625-5625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2487 [label="expando.Int = 1", span="5622-5622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2488 [label="expando.Decimal = 99.9d", span="5623-5623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2489 [label="expando.Complex = new ExpandoObject()", span="5624-5624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_2505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5619-5619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m13_589 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1319-1319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_590 [label="_serializationInfo = info", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_591 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1319-1319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_3786 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8808-8808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3787 [label="throw new InvalidCastException();", span="8810-8810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3788 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8808-8808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1290 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerTest.cs"];
m13_1754 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3776-3776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_1756 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3780-3780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_1757 [label="Assert.AreEqual('''', p.Name)", span="3781-3781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_1755 [label="string json = @''{''''Name'''':''''''''}''", span="3778-3778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_1758 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3776-3776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m13_3398 [label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonSerializerTest.cs"];
m13_3834 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="8773-8773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonSerializerTest.cs"];
m13_2638 [label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="9538-9538", cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs"];
m13_3420 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7806-7806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m13_3421 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object.'')", span="7808-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m13_3422 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7806-7806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m13_95 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m13_97 [label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DictionaryKeyContractResolver()\r\n            })", span="341-344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m13_98 [label="Assert.AreEqual(@''{\r\n  ''''NAME'''': ''''James'''',\r\n  ''''AGE'''': 1,\r\n  ''''ROLENAMES'''': {\r\n    ''''IsAdmin'''': true,\r\n    ''''IsModerator'''': false\r\n  }\r\n}'', json)", span="346-353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m13_96 [label="var person = new\r\n            {\r\n                Name = ''James'',\r\n                Age = 1,\r\n                RoleNames = new Dictionary<string, bool>\r\n                {\r\n                    { ''IsAdmin'', true },\r\n                    { ''IsModerator'', false }\r\n                }\r\n            }", span="330-339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m13_99 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m13_182 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs"];
m13_3359 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs"];
m13_3896 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9030-9030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3899 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9034-9039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3900 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9041-9044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3903 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9052-9052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3902 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9050-9050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3901 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9046-9048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3898 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9033-9033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3897 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9032-9032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9030-9030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m13_1802 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3881-3881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1806 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="3900-3900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1807 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="3901-3901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1808 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="3902-3902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1809 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="3903-3903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1810 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="3904-3904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1805 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="3893-3898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1804 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="3891-3891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1803 [label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="3883-3889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_1811 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3881-3881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m13_205 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="564-564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonSerializerTest.cs"];
m13_3020 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6920-6920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m13_3021 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 21.'')", span="6922-6930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m13_3022 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6920-6920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m13_136 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs"];
m13_2593 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5791-5791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs"];
m13_3756 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="85-85", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonSerializerTest.cs"];
m13_614 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs"];
m13_2009 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs"];
m13_3397 [label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonSerializerTest.cs"];
m13_4037 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonSerializerTest.cs"];
m13_2089 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonSerializerTest.cs"];
m13_988 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="JsonSerializerTest.cs"];
m13_3914 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9082-9082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3917 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9086-9091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3918 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9093-9096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3921 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9104-9104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3920 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9102-9102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3919 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9098-9100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3916 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9085-9085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3915 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9084-9084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m13_3922 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9082-9082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m13_0 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs"];
m13_1 [label="return new Subclass\r\n                {\r\n                    ID = 123,\r\n                    Name = ''ABC'',\r\n                    P1 = true,\r\n                    P2 = 44\r\n                };", span="133-139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs"];
m13_2 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs"];
m13_959 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2158-2158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m13_961 [label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2162-2162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m13_960 [label="string json = @''[''''vvv\jvvv'''']''", span="2160-2160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m13_962 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2158-2158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m13_616 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonSerializerTest.cs"];
m13_3076 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonSerializerTest.cs"];
m13_1206 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs"];
m13_1469 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3167-3167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1474 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="3175-3175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1472 [label="string json = JsonConvert.SerializeObject(i)", span="3172-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1475 [label="string newJson = JsonConvert.SerializeObject(ii)", span="3177-3177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1473 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3173-3173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1476 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3178-3178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1470 [label="SubKlass i = new SubKlass(''my subprop'')", span="3169-3169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1471 [label="i.SuperProp = ''overrided superprop''", span="3170-3170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3167-3167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_3340 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7574-7574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_3344 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7592-7592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_3342 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7582-7585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_3345 [label="Assert.AreEqual(2, dic2.Count)", span="7594-7594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_3346 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7595-7595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_3347 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7596-7596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_3341 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7576-7580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_3343 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7587-7590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_3348 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7574-7574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m13_681 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_683 [label="var json = JsonConvert.SerializeObject(original)", span="1509-1509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_685 [label="Assert.AreEqual(expectedJson, json)", span="1511-1511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_682 [label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1508-1508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_684 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1510-1510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_686 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_1008 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs"];
m13_2837 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6558-6558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2841 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6571-6571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2842 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6572-6572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2843 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6573-6573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2844 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6574-6574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2845 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6575-6575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2846 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6576-6576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2840 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6563-6569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2839 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6561-6561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2838 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6560-6560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_2847 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6558-6558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m13_3715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8633-8633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3717 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8652-8659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3718 [label="Assert.AreEqual(2, people.Count)", span="8661-8661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3721 [label="Assert.AreEqual(john, jane.Spouse)", span="8666-8666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3722 [label="Assert.AreEqual(jane, john.Spouse)", span="8667-8667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3716 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8635-8650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3719 [label="PersonReference john = people[0]", span="8663-8663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3720 [label="PersonReference jane = people[1]", span="8664-8664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3723 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8633-8633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_1690 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m13_1692 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3681-3683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m13_1691 [label="string json = @''[]''", span="3679-3679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m13_1693 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m13_910 [label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs"];
m13_3496 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7984-7984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3498 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7991-7991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3499 [label="Assert.AreEqual(1, l[0])", span="7993-7993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3500 [label="Assert.AreEqual(null, l[1])", span="7994-7994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3497 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7986-7989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_3501 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7984-7984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m13_4008 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9336-9336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4009 [label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9338-9338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4011 [label="return null;", span="9341-9341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4016 [label="return new System.Net.Mail.MailAddress(address, displayName);", span="9351-9351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4017 [label="return new System.Net.Mail.MailAddress(address);", span="9354-9354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4010 [label="messageJObject == null", span="9339-9339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4012 [label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="9344-9344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4015 [label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="9348-9349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4013 [label="JToken displayNameToken", span="9346-9346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4014 [label="string displayName", span="9347-9347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4018 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9336-9336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_1732 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3742-3742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1733 [label="string json = @''{}''", span="3744-3744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1734 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3748-3748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1735 [label="Assert.Fail()", span="3749-3749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1736 [label=JsonSerializationException, span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1737 [label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3753-3755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1738 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3742-3742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_442 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1090-1090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_443 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1092-1092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_446 [label="Assert.AreEqual(customBinder, settings.Binder)", span="1096-1096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_448 [label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_450 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="1102-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_452 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="1106-1106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_455 [label="Assert.AreEqual(resolver, settings.ContractResolver)", span="1111-1111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_457 [label="Assert.AreEqual(1, settings.Converters.Count)", span="1114-1114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_459 [label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_461 [label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="1120-1120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_463 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="1123-1123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_465 [label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="1126-1126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_467 [label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_469 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_471 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="1135-1135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_473 [label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="1138-1138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_475 [label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="1141-1141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_477 [label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="1144-1144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_479 [label="Assert.AreEqual(9001, settings.MaxDepth)", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_481 [label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="1150-1150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_483 [label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="1153-1153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_485 [label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="1156-1156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_487 [label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="1159-1159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_489 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="1162-1162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_492 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="1167-1167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_493 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1169-1169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_495 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1172-1172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_497 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="1175-1175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_500 [label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="1179-1179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_502 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="1183-1183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_504 [label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="1187-1187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_458 [label="settings.Culture = new CultureInfo(''en-nz'')", span="1116-1116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_444 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1094-1094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_445 [label="settings.Binder = customBinder", span="1095-1095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_447 [label="settings.CheckAdditionalContent = true", span="1098-1098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_449 [label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_451 [label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="1105-1105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_454 [label="settings.ContractResolver = resolver", span="1110-1110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_456 [label="settings.Converters.Add(new StringEnumConverter())", span="1113-1113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_460 [label="settings.EqualityComparer = EqualityComparer<object>.Default", span="1119-1119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_462 [label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1122-1122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_464 [label="settings.DateFormatString = ''yyyy''", span="1125-1125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_466 [label="settings.DateParseHandling = DateParseHandling.None", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_468 [label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1131-1131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_470 [label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1134-1134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_472 [label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="1137-1137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_474 [label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="1140-1140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_476 [label="settings.Formatting = Formatting.Indented", span="1143-1143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_478 [label="settings.MaxDepth = 9001", span="1146-1146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_480 [label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="1149-1149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_482 [label="settings.NullValueHandling = NullValueHandling.Ignore", span="1152-1152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_484 [label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1155-1155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_486 [label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1158-1158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_488 [label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1161-1161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_491 [label="settings.ReferenceResolver = referenceResolver", span="1166-1166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_494 [label="settings.ReferenceResolverProvider = () => referenceResolver", span="1171-1171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_496 [label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1174-1174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_499 [label="settings.TraceWriter = traceWriter", span="1178-1178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_501 [label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1182-1182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_503 [label="settings.TypeNameHandling = TypeNameHandling.All", span="1186-1186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_453 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_490 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1164-1164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_498 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1177-1177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1090-1090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m13_728 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1574-1574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m13_741 [label="_name = name", span="1576-1576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m13_742 [label="_number = number", span="1577-1577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m13_743 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1574-1574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m13_2562 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5771-5771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2564 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5775-5779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2567 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5785-5785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2568 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5786-5786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2565 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5781-5781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2566 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5783-5783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2563 [label="var derived = new Derived(''meh'', ''woo'')", span="5773-5773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_2569 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5771-5771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m13_1718 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3726-3726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m13_1720 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'')", span="3730-3730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m13_1719 [label="string json = @''new Constructor(123)''", span="3728-3728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m13_1721 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3726-3726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m13_2090 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonSerializerTest.cs"];
m13_300 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="869-869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_303 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="879-879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_302 [label="var json = JsonConvert.SerializeObject(input)", span="878-878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_304 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="881-881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_305 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="882-882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_306 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="883-883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_301 [label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="871-876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_307 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="869-869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m13_1262 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs"];
m13_4036 [label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0", cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonSerializerTest.cs"];
m13_732 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs"];
m13_3678 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8496-8496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m13_3680 [label="throw new ArgumentNullException(''bar'');", span="8499-8499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m13_3679 [label="bar == null", span="8498-8498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m13_3681 [label="Bar = bar", span="8501-8501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m13_3682 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8496-8496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m13_3338 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="JsonSerializerTest.cs"];
m13_3792 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8818-8818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3793 [label="throw new InvalidCastException();", span="8820-8820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3794 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8818-8818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3470 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7905-7905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m13_3471 [label="m_Item1 = item1", span="7907-7907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m13_3472 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7905-7905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m13_2788 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6330-6330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonSerializerTest.cs"];
m13_3 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", span="115-115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", file="JsonSerializerTest.cs"];
m13_2743 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6285-6285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m13_2745 [label="Categories = new Dictionary<string, int>()", span="6288-6288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m13_2744 [label="Title = title", span="6287-6287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m13_2746 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6285-6285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m13_3541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8106-8106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonSerializerTest.cs"];
m13_2529 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5693-5693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2535 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5702-5702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2534 [label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5701-5701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2531 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5696-5696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2533 [label="JsonSerializer serializer = new JsonSerializer()", span="5699-5699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2530 [label="string json = ''{'Value':123456789876543.21}''", span="5695-5695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2532 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5697-5697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2536 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5693-5693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m13_2794 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6417-6417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m13_2795 [label="_readonlyString = ''default!''", span="6419-6419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m13_2796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6417-6417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m13_736 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs"];
m13_2083 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonSerializerTest.cs"];
m13_958 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs"];
m13_1153 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2514-2514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_1157 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2523-2523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_1158 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="2524-2524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_1156 [label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2519-2521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_1155 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2518-2518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_1154 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2516-2516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_1159 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2514-2514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m13_653 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonSerializerTest.cs"];
m13_3502 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7999-7999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3504 [label="var json = JsonConvert.SerializeObject(tuple)", span="8002-8002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3505 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8003-8003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3509 [label="Assert.AreEqual(500, obj.Item1)", span="8011-8011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3506 [label="MyTuple<int> obj = null", span="8005-8005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3503 [label="var tuple = new MyTuple<int>(500)", span="8001-8001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3507 [label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="8007-8007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3508 [label="doStuff()", span="8010-8010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7999-7999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_2060 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4644-4644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2061 [label="_stringValue = info.GetString(''stringValue'')", span="4646-4646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2062 [label="_intValue = info.GetInt32(''intValue'')", span="4647-4647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2063 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4648-4648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2064 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4649-4649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2065 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4650-4650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2066 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4651-4651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2067 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4653-4653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2068 [label="_byteValue = info.GetByte(''byteValue'')", span="4654-4654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2069 [label="_charValue = info.GetChar(''charValue'')", span="4655-4655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2070 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4656-4656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2071 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4657-4657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2072 [label="_shortValue = info.GetInt16(''shortValue'')", span="4658-4658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2073 [label="_longValue = info.GetInt64(''longValue'')", span="4659-4659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2074 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4660-4660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2075 [label="_floatValue = info.GetSingle(''floatValue'')", span="4661-4661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2076 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4662-4662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2077 [label="_uintValue = info.GetUInt32(''uintValue'')", span="4663-4663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2078 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4664-4664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2079 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4644-4644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_573 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1287-1287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_577 [label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_575 [label="string json = JsonConvert.SerializeObject(ratio)", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_578 [label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1296-1296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_576 [label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_579 [label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1297-1297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_574 [label="Ratio ratio = new Ratio(2, 1)", span="1289-1289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1287-1287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m13_3053 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6995-6995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_3054 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6997-6997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_3056 [label="Assert.AreEqual('''', dict[''k1''])", span="7000-7000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_3057 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="7001-7001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_3055 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6998-6998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_3058 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6995-6995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m13_57 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs"];
m13_58 [label="Binding_DisallowNull o = JsonConvert.DeserializeObject<Binding_DisallowNull>(''{}'')", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_59 [label="Assert.IsNull(o.RequiredProperty)", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_60 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="249-249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs"];
m13_3349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7600-7600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m13_3351 [label="Assert.AreEqual('''', s)", span="7603-7603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m13_3350 [label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7602-7602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m13_3352 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7600-7600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m13_3460 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7874-7874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_3461 [label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="7876-7879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_3462 [label="Assert.AreEqual(123, result.Key)", span="7881-7881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_3463 [label="Assert.AreEqual(''test value'', result.Value)", span="7882-7882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_3464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7874-7874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m13_1123 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs"];
m13_101 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="310-310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="JsonSerializerTest.cs"];
m13_1987 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4481-4481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs"];
m13_1988 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4481-4481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs"];
m13_2860 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JsonSerializerTest.cs"];
m13_854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1913-1913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_857 [label="Assert.AreEqual(''Orange'', p.Name)", span="1919-1919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_858 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="1920-1920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_859 [label="Assert.AreEqual(3.99m, p.Price)", span="1921-1921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_856 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="1917-1917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_855 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1915-1915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_860 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1913-1913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m13_1408 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3004-3004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m13_1409 [label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="3006-3012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m13_1410 [label="return person;", span="3013-3013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m13_1411 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3004-3004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m13_668 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs"];
m13_916 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs"];
m13_3713 [label="Entry Size.cstr", span="", cluster="Size.cstr", file="JsonSerializerTest.cs"];
m13_1462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3151-3151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1464 [label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="3156-3156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1463 [label="string json = ''{ 'testProperty1': 'value' }''", span="3155-3155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1465 [label="Assert.Fail()", span="3158-3158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1466 [label=JsonSerializationException, span="3160-3160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1467 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="3162-3162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1468 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3151-3151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_2908 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="882-882", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs"];
m13_1365 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2902-2902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1367 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2910-2910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1366 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="2906-2908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1368 [label="Assert.Fail()", span="2911-2911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1369 [label=JsonSerializationException, span="2913-2913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1370 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="2915-2915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_1371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2902-2902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m13_317 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="828-828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonSerializerTest.cs"];
m13_4019 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="460-460", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonSerializerTest.cs"];
m13_1358 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2885-2885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_1359 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="2887-2898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_1360 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2885-2885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m13_665 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs"];
m13_2573 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5807-5807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2574 [label="info.AddValue(''Name'', _name)", span="5809-5809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2575 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5807-5807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_3822 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8868-8868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3823 [label="throw new InvalidCastException();", span="8870-8870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3824 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8868-8868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1792 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_2278 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="5181-5181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonSerializerTest.cs"];
m13_836 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs"];
m13_3511 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="JsonSerializerTest.cs"];
m13_3782 [label="Entry System.InvalidCastException.InvalidCastException()", span="0-0", cluster="System.InvalidCastException.InvalidCastException()", file="JsonSerializerTest.cs"];
m13_3167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7201-7201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_3172 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="7208-7208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_3171 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="7207-7207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_3173 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="7210-7210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_3168 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="7203-7203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_3170 [label="person.Age = 25", span="7205-7205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_3169 [label="person.Name = ''John Doe''", span="7204-7204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_3174 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7201-7201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m13_1582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3453-3453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1585 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3468-3468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1586 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3469-3469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1587 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3470-3470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1588 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3471-3471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1589 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3472-3472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1590 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3473-3473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1584 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3466-3466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1583 [label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3455-3464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_1591 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3453-3453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m13_826 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1848-1848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_828 [label="string jsonText = JsonConvert.SerializeObject(store)", span="1852-1852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_830 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="1856-1856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_831 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="1857-1857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_827 [label="Store store = new Store()", span="1850-1850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_829 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="1854-1854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_832 [label="Console.WriteLine(jsonText)", span="1859-1859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_833 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1848-1848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m13_2257 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonSerializerTest.cs"];
m13_3377 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7653-7653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_3378 [label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="7655-7665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_3380 [label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7678-7692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_3379 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7667-7667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_3381 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7653-7653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_2623 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5920-5920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2624 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5922-5922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2625 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5923-5923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2626 [label="Assert.AreEqual(''value!'', c.Value)", span="5924-5924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2627 [label="Assert.AreEqual(1, c.Age)", span="5925-5925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2628 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5920-5920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_1087 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2382-2382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1094 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2391-2391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1093 [label="string json = JsonConvert.SerializeObject(wibble)", span="2389-2389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1095 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2392-2392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1096 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2394-2394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1097 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2395-2395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1098 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2396-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1099 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2397-2397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1100 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2398-2398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1101 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2399-2399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1088 [label="ClassWithArray wibble = new ClassWithArray()", span="2384-2384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1092 [label="wibble.Bar.Add(3)", span="2388-2388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1089 [label="wibble.Foo = ''hello''", span="2385-2385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1090 [label="wibble.Bar.Add(1)", span="2386-2386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1091 [label="wibble.Bar.Add(2)", span="2387-2387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_1102 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2382-2382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m13_2144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4824-4824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2156 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4871-4871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2154 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="4842-4845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2159 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4874-4874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2157 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4872-4872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2158 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4873-4873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2160 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4875-4875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2161 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4876-4876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2162 [label="Assert.AreEqual(null, o2._nullableInt)", span="4877-4877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2146 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4827-4827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2155 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4846-4869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2153 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4840-4840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2150 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4832-4832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2145 [label="Person person = new Person()", span="4826-4826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2147 [label="person.LastModified = person.BirthDate", span="4828-4828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2152 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="4835-4835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2149 [label="person.Name = ''Name!''", span="4830-4830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2151 [label="string dateTimeOffsetText", span="4833-4833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2148 [label="person.Department = ''Department!''", span="4829-4829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_2163 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4824-4824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m13_3536 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8117-8117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_3538 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="8128-8131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_3539 [label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8133-8140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_3537 [label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="8119-8126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_3540 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8117-8117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m13_3034 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6946-6946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_3036 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6949-6949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_3039 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6954-6954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_3037 [label="Assert.AreEqual(null, c.Id)", span="6951-6951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_3040 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6956-6956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_3035 [label="string json = @''{''''Id'''':null}''", span="6948-6948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_3038 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6953-6953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_3041 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6946-6946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m13_1234 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2653-2653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1240 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2663-2663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1241 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2664-2664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1238 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2659-2659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1235 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2655-2655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1239 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2661-2661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1237 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2658-2658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1236 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2656-2656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1242 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2653-2653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1478 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs"];
m13_2872 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs"];
m13_1622 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3557-3557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1624 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3573-3573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1625 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3575-3575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1626 [label="Assert.AreEqual(2, content.Children.Count)", span="3576-3576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1627 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3577-3577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1628 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3578-3578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1623 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3559-3571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_1629 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3557-3557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m13_819 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonSerializerTest.cs"];
m13_813 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs"];
m13_1894 [label="Entry lambda expression", span="4157-4157", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_54 [label="Entry lambda expression", span="242-245", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_55 [label="JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'')", span="244-244", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m13_56 [label="Exit lambda expression", span="242-245", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_71 [label="Entry lambda expression", span="279-282", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_72 [label="JsonConvert.SerializeObject(new Binding_DisallowNull())", span="281-281", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m13_73 [label="Exit lambda expression", span="279-282", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_84 [label="Entry lambda expression", span="304-307", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_85 [label="JsonConvert.SerializeObject(new DictionaryWithNoNull())", span="306-306", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m13_86 [label="Exit lambda expression", span="304-307", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_49 [label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="235-235", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_66 [label="JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'')", span="260-260", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_112 [label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="360-360", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_115 [label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="364-364", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_118 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="368-368", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_121 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="372-372", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_124 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="376-376", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_127 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="380-380", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_153 [label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}'')", span="432-432", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_156 [label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="436-436", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_175 [label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="471-471", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_341 [label="JsonConvert.DeserializeObject<List<Version>>(json)", span="941-941", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_964 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="2162-2162", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1654 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="3621-3621", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1681 [label="JsonConvert.DeserializeObject<Person>(json)", span="3660-3660", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1688 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3670-3670", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1695 [label="JsonConvert.DeserializeObject<Exception>(json)", span="3681-3681", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1702 [label="JsonConvert.DeserializeObject<double>(json)", span="3692-3692", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1709 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3704-3704", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1716 [label="JsonConvert.DeserializeObject<JObject>(json)", span="3717-3717", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1723 [label="JsonConvert.DeserializeObject<Person>(json)", span="3730-3730", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1730 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3738-3738", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2323 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5255-5255", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2337 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5275-5275", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2439 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5497-5497", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2990 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="6854-6854", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3004 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="6893-6893", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3025 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6929-6929", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3032 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6941-6941", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3105 [label="JsonConvert.DeserializeObject<double>('''')", span="7089-7089", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3111 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="7095-7095", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3117 [label="JsonConvert.DeserializeObject<int>('''')", span="7101-7101", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3127 [label="JsonConvert.DeserializeObject<double>(null)", span="7115-7115", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3513 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="8007-8007", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3594 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="8275-8275", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3602 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8290-8290", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3611 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8304-8304", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3980 [label="JsonConvert.DeserializeObject<string>(''020474068'')", span="9233-9233", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1752 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="3772-3772", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_150 [label="JsonConvert.SerializeObject(c1)", span="419-419", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_172 [label="JsonConvert.SerializeObject(c1)", span="461-461", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_956 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="2154-2154", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1268 [label="JsonConvert.SerializeObject(c)", span="2708-2708", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1363 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="2897-2897", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3973 [label="JsonConvert.SerializeObject(new ErroringTestClass())", span="9227-9227", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1515 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3257-3257", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1763 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3789-3797", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1770 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3806-3814", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1776 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3823-3831", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1782 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3840-3848", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1931 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4250-4254", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2329 [label="var reference = new Dictionary<string, object>()", span="5265-5265", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2332 [label="var child = new Dictionary<string, object>()", span="5269-5269", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1362 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="2889-2895", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_48 [label="Entry lambda expression", span="233-236", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_65 [label="Entry lambda expression", span="258-261", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_111 [label="Entry lambda expression", span="360-360", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_114 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_117 [label="Entry lambda expression", span="368-368", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_120 [label="Entry lambda expression", span="372-372", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_123 [label="Entry lambda expression", span="376-376", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_126 [label="Entry lambda expression", span="380-380", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_149 [label="Entry lambda expression", span="419-419", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_152 [label="Entry lambda expression", span="432-432", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_155 [label="Entry lambda expression", span="436-436", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_171 [label="Entry lambda expression", span="461-461", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_174 [label="Entry lambda expression", span="471-471", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_340 [label="Entry lambda expression", span="939-942", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_955 [label="Entry lambda expression", span="2154-2154", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_963 [label="Entry lambda expression", span="2162-2162", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1266 [label="Entry lambda expression", span="2705-2709", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1361 [label="Entry lambda expression", span="2887-2898", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1405 [label="Entry lambda expression", span="3001-3001", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1512 [label="Entry lambda expression", span="3252-3258", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1653 [label="Entry lambda expression", span="3621-3621", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1680 [label="Entry lambda expression", span="3660-3660", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1687 [label="Entry lambda expression", span="3670-3670", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1694 [label="Entry lambda expression", span="3681-3681", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1701 [label="Entry lambda expression", span="3692-3692", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1708 [label="Entry lambda expression", span="3704-3704", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1715 [label="Entry lambda expression", span="3717-3717", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1722 [label="Entry lambda expression", span="3730-3730", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1729 [label="Entry lambda expression", span="3738-3738", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1743 [label="Entry lambda expression", span="3764-3764", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1751 [label="Entry lambda expression", span="3772-3772", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1762 [label="Entry lambda expression", span="3787-3798", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1769 [label="Entry lambda expression", span="3804-3815", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1775 [label="Entry lambda expression", span="3821-3832", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1781 [label="Entry lambda expression", span="3838-3849", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1930 [label="Entry lambda expression", span="4250-4254", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2322 [label="Entry lambda expression", span="5255-5255", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2328 [label="Entry lambda expression", span="5261-5276", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2438 [label="Entry lambda expression", span="5497-5497", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2655 [label="Entry lambda expression", span="5984-5984", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2989 [label="Entry lambda expression", span="6854-6854", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3003 [label="Entry lambda expression", span="6893-6893", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3023 [label="Entry lambda expression", span="6922-6930", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3030 [label="Entry lambda expression", span="6936-6942", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3104 [label="Entry lambda expression", span="7089-7089", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3110 [label="Entry lambda expression", span="7095-7095", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3116 [label="Entry lambda expression", span="7101-7101", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3126 [label="Entry lambda expression", span="7115-7115", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3132 [label="Entry lambda expression", span="7126-7126", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3410 [label="Entry lambda expression", span="7764-7764", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3423 [label="Entry lambda expression", span="7808-7820", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3593 [label="Entry lambda expression", span="8275-8275", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3601 [label="Entry lambda expression", span="8290-8290", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3610 [label="Entry lambda expression", span="8304-8304", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3972 [label="Entry lambda expression", span="9227-9227", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3979 [label="Entry lambda expression", span="9233-9233", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3999 [label="Entry lambda expression", span="9318-9325", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_50 [label="Exit lambda expression", span="233-236", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_67 [label="Exit lambda expression", span="258-261", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_113 [label="Exit lambda expression", span="360-360", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_116 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_119 [label="Exit lambda expression", span="368-368", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_122 [label="Exit lambda expression", span="372-372", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_125 [label="Exit lambda expression", span="376-376", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_128 [label="Exit lambda expression", span="380-380", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_154 [label="Exit lambda expression", span="432-432", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_157 [label="Exit lambda expression", span="436-436", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_176 [label="Exit lambda expression", span="471-471", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_342 [label="Exit lambda expression", span="939-942", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_965 [label="Exit lambda expression", span="2162-2162", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1655 [label="Exit lambda expression", span="3621-3621", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1682 [label="Exit lambda expression", span="3660-3660", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1689 [label="Exit lambda expression", span="3670-3670", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1696 [label="Exit lambda expression", span="3681-3681", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1703 [label="Exit lambda expression", span="3692-3692", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1710 [label="Exit lambda expression", span="3704-3704", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1717 [label="Exit lambda expression", span="3717-3717", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1724 [label="Exit lambda expression", span="3730-3730", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1731 [label="Exit lambda expression", span="3738-3738", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2324 [label="Exit lambda expression", span="5255-5255", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2336 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5274-5274", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2338 [label="Exit lambda expression", span="5261-5276", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2440 [label="Exit lambda expression", span="5497-5497", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2991 [label="Exit lambda expression", span="6854-6854", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3005 [label="Exit lambda expression", span="6893-6893", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3024 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6924-6927", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3026 [label="Exit lambda expression", span="6922-6930", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3031 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6938-6939", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3033 [label="Exit lambda expression", span="6936-6942", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3106 [label="Exit lambda expression", span="7089-7089", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3112 [label="Exit lambda expression", span="7095-7095", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3118 [label="Exit lambda expression", span="7101-7101", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3128 [label="Exit lambda expression", span="7115-7115", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3512 [label="Entry lambda expression", span="8007-8007", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3514 [label="Exit lambda expression", span="8007-8007", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3595 [label="Exit lambda expression", span="8275-8275", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3603 [label="Exit lambda expression", span="8290-8290", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3612 [label="Exit lambda expression", span="8304-8304", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3981 [label="Exit lambda expression", span="9233-9233", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1753 [label="Exit lambda expression", span="3772-3772", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3253 [label="errors.Add(e.ErrorContext.Error.Message)", span="7362-7362", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_151 [label="Exit lambda expression", span="419-419", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_173 [label="Exit lambda expression", span="461-461", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_957 [label="Exit lambda expression", span="2154-2154", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1267 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2707-2707", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1269 [label="Exit lambda expression", span="2705-2709", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1364 [label="Exit lambda expression", span="2887-2898", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1406 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="3001-3001", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3974 [label="Exit lambda expression", span="9227-9227", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_249 [label="a.ErrorContext.Handled = true", span="742-742", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1513 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3254-3254", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1514 [label="o.ReferenceLoopHandlingErrorProperty = o", span="3255-3255", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1516 [label="Exit lambda expression", span="3252-3258", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1764 [label="Exit lambda expression", span="3787-3798", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1771 [label="Exit lambda expression", span="3804-3815", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1777 [label="Exit lambda expression", span="3821-3832", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1783 [label="Exit lambda expression", span="3838-3849", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1932 [label="Exit lambda expression", span="4250-4254", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2330 [label="reference.Add(''$ref'', 1)", span="5266-5266", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2331 [label="reference.Add(''$id'', 1)", span="5267-5267", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2335 [label="child.Add(''Father'', reference)", span="5272-5272", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2333 [label="child.Add(''_id'', 2)", span="5270-5270", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2334 [label="child.Add(''Name'', ''Isabell'')", span="5271-5271", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_820 [label="Entry lambda expression", span="1828-1828", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_823 [label="Entry lambda expression", span="1831-1831", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3411 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7764-7764", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3268 [label="errors.Add(e.ErrorContext.Error.Message)", span="7387-7387", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3283 [label="errors.Add(e.ErrorContext.Error.Message)", span="7410-7410", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1407 [label="Exit lambda expression", span="3001-3001", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1744 [label="JsonConvert.PopulateObject(json, new Person())", span="3764-3764", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1745 [label="Exit lambda expression", span="3764-3764", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2657 [label="Exit lambda expression", span="5984-5984", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_2656 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5984-5984", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3134 [label="Exit lambda expression", span="7126-7126", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3133 [label="JsonConvert.DeserializeObject(null)", span="7126-7126", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3412 [label="Exit lambda expression", span="7764-7764", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3431 [label="Exit lambda expression", span="7808-7820", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3424 [label="string json = ''[{},1]''", span="7810-7810", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_4000 [label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="9320-9324", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_4001 [label="Exit lambda expression", span="9318-9325", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3254 [label="e.ErrorContext.Handled = true", span="7363-7363", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3252 [label="Entry lambda expression", span="7360-7364", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_248 [label="Entry lambda expression", span="742-742", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_250 [label="Exit lambda expression", span="742-742", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3269 [label="e.ErrorContext.Handled = true", span="7388-7388", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3284 [label="e.ErrorContext.Handled = true", span="7411-7411", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3734 [label="new IdReferenceResolver()", span="8692-8692", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_508 [label=referenceResolver, span="1171-1171", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_822 [label="Exit lambda expression", span="1828-1828", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_821 [label="p.Name", span="1828-1828", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_825 [label="Exit lambda expression", span="1831-1831", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_824 [label="p.Name", span="1831-1831", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3267 [label="Entry lambda expression", span="7385-7389", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3282 [label="Entry lambda expression", span="7408-7412", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3430 [label="serializer.Deserialize(reader, typeof(MyType))", span="7819-7819", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3425 [label="JsonSerializer serializer = new JsonSerializer()", span="7812-7812", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3427 [label="var reader = new JsonTextReader(new StringReader(json))", span="7815-7815", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3255 [label="Exit lambda expression", span="7360-7364", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3270 [label="Exit lambda expression", span="7385-7389", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3285 [label="Exit lambda expression", span="7408-7412", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3733 [label="Entry lambda expression", span="8692-8692", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3735 [label="Exit lambda expression", span="8692-8692", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_507 [label="Entry lambda expression", span="1171-1171", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_509 [label="Exit lambda expression", span="1171-1171", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3428 [label="reader.Read()", span="7816-7816", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3429 [label="reader.Read()", span="7817-7817", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_3426 [label="serializer.CheckAdditionalContent = true", span="7813-7813", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1895 [label="x.Id == id", span="4157-4157", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_1896 [label="Exit lambda expression", span="4157-4157", cluster="lambda expression", file="JsonSerializerTest.cs"];
m13_272 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonSerializerTest.cs"];
m13_3476 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7933-7933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3479 [label="json = JsonConvert.SerializeObject(d)", span="7938-7938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3480 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7941-7941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3481 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="7944-7944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3482 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7947-7947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3478 [label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="7936-7936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3477 [label="string json", span="7935-7935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3483 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7933-7933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m13_3841 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8908-8908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3845 [label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="8916-8916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3844 [label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="8914-8914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3846 [label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="8918-8918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3843 [label="Uri uriWithPlus = new Uri(originalUri)", span="8912-8912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3842 [label="string originalUri = ''https://test.com?m=a%2bb''", span="8910-8910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3847 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8908-8908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m13_3598 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8288-8288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs"];
m13_3599 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8290-8290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs"];
m13_3600 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8288-8288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs"];
m13_1244 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2668-2668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_1248 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2680-2683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_1247 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2678-2678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_1246 [label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2672-2676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_1245 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2670-2670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_1249 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2668-2668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m13_1772 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3819-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m13_1773 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="3821-3832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m13_1774 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3819-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m13_327 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs"];
m13_135 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="59-59", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerTest.cs"];
m13_243 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="733-733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m13_245 [label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="740-743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m13_246 [label="Assert.AreEqual(0, l.ChildId)", span="745-745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m13_244 [label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="735-738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m13_247 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="733-733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m13_251 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m13_252 [label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="753-753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m13_253 [label="Assert.AreEqual(2, s.Count)", span="754-754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m13_254 [label="Assert.AreEqual(''1'', s[0])", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m13_255 [label="Assert.AreEqual(''2'', s[1])", span="756-756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m13_256 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m13_1849 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3981-3981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1855 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="4044-4044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1857 [label="Assert.AreEqual(2, searchResults.Count)", span="4056-4056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1858 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="4057-4057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1859 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="4058-4058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1851 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="4035-4035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1853 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="4041-4041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1854 [label=results, span="4042-4042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1856 [label="searchResults.Add(searchResult)", span="4045-4045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1850 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="3983-4033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1852 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="4038-4038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_1860 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3981-3981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m13_2168 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4894-4894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_2169 [label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="4896-4898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_2170 [label="Assert.AreEqual(2, kvPairs.Count)", span="4900-4900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_2171 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="4901-4901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_2172 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="4902-4902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_2173 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="4903-4903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_2174 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="4904-4904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_2175 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4894-4894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m13_3456 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7867-7867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m13_3457 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7869-7869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m13_3458 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7870-7870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m13_3459 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7867-7867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m13_1397 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2995-2995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1401 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="3001-3001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1400 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="2999-2999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1398 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="2997-2997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1399 [label="testClass.co = new Co()", span="2998-2998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_1402 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2995-2995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m13_711 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1545-1545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_717 [label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1553-1553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_712 [label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1548-1548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_718 [label="var jsonSerializer = JsonSerializer.Create(settings)", span="1554-1554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_714 [label="i < 800", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_713 [label="var i = 0", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_715 [label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1551-1551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_721 [label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1558-1558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_719 [label="var ms = new MemoryStream()", span="1555-1555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_725 [label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1564-1564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_716 [label="i++", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_720 [label="var streamWriter = new StreamWriter(ms)", span="1557-1557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_722 [label="streamWriter.Flush()", span="1559-1559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_723 [label="ms.Seek(0, SeekOrigin.Begin)", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_724 [label="var stopWatch = Stopwatch.StartNew()", span="1563-1563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_726 [label="stopWatch.Stop()", span="1565-1565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_727 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1545-1545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m13_43 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m13_2017 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs"];
m13_3801 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8833-8833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3802 [label="return (short)Value;", span="8835-8835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3803 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8833-8833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1963 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4406-4406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs"];
m13_1966 [label="C1 = c1", span="4408-4408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs"];
m13_1967 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4406-4406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs"];
m13_3123 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7112-7112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m13_3124 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7114-7119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m13_3125 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7112-7112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m13_654 [label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0", cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonSerializerTest.cs"];
m13_1835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3946-3946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1836 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="3948-3948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1840 [label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="3954-3957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1837 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="3949-3949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1838 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="3950-3950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1839 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3952-3952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1841 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3946-3946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1826 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs"];
m13_572 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="59-59", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_2122 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonSerializerTest.cs"];
m13_367 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="985-985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m13_368 [label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="987-987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m13_370 [label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m13_369 [label="Assert.AreEqual(null, o.A)", span="988-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m13_371 [label="Assert.AreEqual(true, o.A)", span="991-991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m13_372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="985-985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m13_1147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2499-2499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_1150 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2504-2504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_1148 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2501-2501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_1149 [label="Assert.AreEqual(@''1'', json)", span="2502-2502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_1151 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2505-2505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_1152 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2499-2499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m13_3085 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7057-7057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3086 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="7059-7059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3088 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="7062-7062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3090 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="7065-7065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3092 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="7068-7068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3094 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="7071-7071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3096 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="7074-7074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3098 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="7077-7077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3087 [label="Assert.IsNull(v)", span="7060-7060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3089 [label="Assert.IsNull(v)", span="7063-7063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3091 [label="Assert.IsNull(v)", span="7066-7066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3093 [label="Assert.IsNull(v)", span="7069-7069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3095 [label="Assert.IsNull(v)", span="7072-7072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3097 [label="Assert.IsNull(v)", span="7075-7075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3099 [label="Assert.IsNull(v)", span="7078-7078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_3100 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7057-7057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m13_1801 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs"];
m13_3643 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8405-8405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3645 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8415-8415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3646 [label="Assert.IsNull(c2.MyNullableBool)", span="8416-8416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3647 [label="Assert.IsNull(c2.MyNullableInteger)", span="8417-8417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3648 [label="Assert.IsNull(c2.MyNullableDateTime)", span="8418-8418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3649 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8419-8419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3650 [label="Assert.IsNull(c2.MyNullableDecimal)", span="8420-8420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3644 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8407-8413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8405-8405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m13_3006 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6898-6898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3008 [label="string json = JsonConvert.SerializeObject(widget)", span="6902-6902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3009 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="6904-6904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3007 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="6900-6900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3010 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6898-6898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_1115 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2454-2454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_1120 [label="string json = JsonConvert.SerializeObject(s)", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_1121 [label="Assert.AreEqual(''[3,2,1]'', json)", span="2462-2462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_1116 [label="Stack<object> s = new Stack<object>()", span="2456-2456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_1119 [label="s.Push(3)", span="2459-2459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_1117 [label="s.Push(1)", span="2457-2457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_1118 [label="s.Push(2)", span="2458-2458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_1122 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2454-2454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m13_990 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_998 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2223-2223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_999 [label="Assert.AreEqual(expected, result)", span="2224-2224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_991 [label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2205-2213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_997 [label="string expected = sr.ReadToEnd()", span="2221-2221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_992 [label="MemoryStream ms = new MemoryStream()", span="2215-2215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_994 [label="s.WriteObject(ms, testDates)", span="2217-2217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_996 [label="StreamReader sr = new StreamReader(ms)", span="2219-2219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_993 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2216-2216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_995 [label="ms.Seek(0, SeekOrigin.Begin)", span="2218-2218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_1000 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m13_1341 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m13_1549 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3371-3371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m13_1550 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3373-3373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m13_1551 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3371-3371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m13_2891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6650-6650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2904 [label="Assert.AreEqual(''Test'', newObject.Name)", span="6673-6673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2903 [label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="6671-6671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2905 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6674-6674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2897 [label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="6659-6659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2898 [label="serializer.Serialize(bsonWriter, test)", span="6661-6661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2896 [label="MemoryStream bsonStream = new MemoryStream()", span="6658-6658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2893 [label="JsonSerializer serializer = new JsonSerializer()", span="6654-6654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2902 [label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="6668-6668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2899 [label="bsonWriter.Flush()", span="6662-6662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2892 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6652-6652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2901 [label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="6667-6667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2895 [label="byte[] objectBytes", span="6657-6657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2900 [label="objectBytes = bsonStream.ToArray()", span="6664-6664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2894 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="6655-6655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_2906 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6650-6650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m13_976 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonSerializerTest.cs"];
m13_1404 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs"];
m13_2255 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="5095-5095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs"];
m13_2006 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4544-4544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_2007 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4546-4546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_2008 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4544-4544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m13_911 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2004-2004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_913 [label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="2008-2008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_912 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="2006-2006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_914 [label="Assert.AreEqual(c.Field, ''Field'')", span="2010-2010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_915 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2004-2004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_24 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs"];
m13_1911 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="4131-4131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs"];
m13_3240 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7355-7355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3241 [label="string json = ''{}''", span="7357-7357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3242 [label="IList<string> errors = new List<string>()", span="7358-7358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3244 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7366-7369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3246 [label="Assert.AreEqual(4, errors.Count)", span="7372-7372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3243 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7360-7364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3247 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7373-7373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3248 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7374-7374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3249 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7375-7375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3250 [label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7376-7376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3245 [label="Assert.IsNotNull(o)", span="7371-7371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_3251 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7355-7355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m13_161 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_163 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="460-462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_167 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="470-472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_168 [label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="474-474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_165 [label="string json = JsonConvert.SerializeObject(c2)", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_166 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_169 [label="Assert.AreEqual(''Name!'', c3.Name)", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_162 [label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="458-458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_164 [label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="464-464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_170 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m13_3758 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="121-121", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonSerializerTest.cs"];
m13_2929 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6724-6724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2934 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6734-6737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2936 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6745-6753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2937 [label="Assert.AreEqual(-1, c2.x)", span="6755-6755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2938 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6756-6756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2939 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6757-6757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2935 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6739-6743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2930 [label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="6726-6726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2931 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6728-6731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2933 [label="StaticTestClass.z = 3", span="6733-6733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2932 [label="StaticTestClass.y = 2", span="6732-6732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_2940 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6724-6724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m13_3994 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="9264-9264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonSerializerTest.cs"];
m13_3077 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonSerializerTest.cs"];
m13_3189 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonSerializerTest.cs"];
m13_3833 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="8879-8879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonSerializerTest.cs"];
m13_1298 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="800-800", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs"];
m13_1422 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs"];
m13_768 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1663-1663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonSerializerTest.cs"];
m13_1216 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2614-2614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1219 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2619-2622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1221 [label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2625-2628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1220 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2623-2623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1222 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2630-2630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1223 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2631-2631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1218 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2617-2617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1217 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2616-2616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_1224 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2614-2614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m13_3626 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8351-8351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3628 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8359-8359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3632 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8364-8364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3629 [label="Assert.AreEqual(float.NaN, floats[0])", span="8360-8360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3630 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8361-8361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3631 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8362-8362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3633 [label="Assert.AreEqual(float.NaN, doubles[0])", span="8365-8365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3634 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8366-8366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3635 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8367-8367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3627 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8353-8357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_3636 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8351-8351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m13_2032 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4582-4582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m13_2033 [label="return _innerDictionary.Remove(key);", span="4584-4584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m13_2034 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4582-4582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m13_2639 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5954-5954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_2642 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5960-5962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_2641 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5958-5958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_2640 [label="ComplexItem i = new ComplexItem()", span="5956-5956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_2643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5954-5954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m13_365 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m13_1697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3688-3688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m13_1699 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3692-3694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m13_1698 [label="string json = @''[]''", span="3690-3690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m13_1700 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3688-3688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m13_3155 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7175-7175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3161 [label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="7190-7192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3156 [label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7177-7183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3157 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7185-7185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3158 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7186-7186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3159 [label="Assert.AreEqual(''Pre'', c.PreField)", span="7187-7187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3160 [label="Assert.AreEqual(''Post'', c.PostField)", span="7188-7188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3162 [label="Assert.AreEqual(null, c2.DateTimeField)", span="7194-7194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3163 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="7195-7195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3164 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="7196-7196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3165 [label="Assert.AreEqual(''Post'', c2.PostField)", span="7197-7197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3166 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7175-7175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m13_735 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="JsonSerializerTest.cs"];
m13_257 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_259 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="765-765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_266 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_264 [label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="773-773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_265 [label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="774-774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_262 [label="IList<object> l = new List<object>()", span="770-770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_258 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="764-764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_260 [label="JsonSerializer serializer = new JsonSerializer()", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_263 [label="serializer.Populate(reader, l)", span="771-771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_261 [label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="768-768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_267 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m13_924 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs"];
m13_1984 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4443-4443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs"];
m13_3969 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9225-9225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs"];
m13_3970 [label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="9227-9227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs"];
m13_3971 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9225-9225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs"];
m13_61 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonSerializerTest.cs"];
m13_3052 [label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonSerializerTest.cs"];
m13_1196 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2581-2581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_1201 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2589-2589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_1199 [label="string json = JsonConvert.SerializeObject(m1)", span="2586-2586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_1202 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2591-2591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_1203 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2592-2592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_1200 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2587-2587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_1198 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2584-2584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_1197 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2583-2583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_1204 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2581-2581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m13_3825 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8873-8873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3826 [label="throw new InvalidCastException();", span="8875-8875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3827 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8873-8873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_2010 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4549-4549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m13_2011 [label="return _innerDictionary.ContainsKey(key);", span="4551-4551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m13_2012 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4549-4549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m13_438 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs"];
m13_581 [label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonSerializerTest.cs"];
m13_2997 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="6858-6858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonSerializerTest.cs"];
m13_3203 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="JsonSerializerTest.cs"];
m13_436 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs"];
m13_2998 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1607-1607", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs"];
m13_1676 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3656-3656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1678 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3660-3662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1677 [label="string json = @''[]''", span="3658-3658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1679 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3656-3656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_3256 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7380-7380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3260 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7391-7394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3262 [label="Assert.AreEqual(3, errors.Count)", span="7397-7397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3258 [label="IList<string> errors = new List<string>()", span="7383-7383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3257 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7382-7382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3259 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7385-7389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3261 [label="Assert.IsNotNull(o)", span="7396-7396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3263 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7398-7398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3264 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7399-7399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3265 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7400-7400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_3266 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7380-7380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m13_274 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_276 [label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="795-795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_275 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="793-793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_277 [label="Assert.AreEqual(true, childClass.IsTransient)", span="796-796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_278 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m13_2437 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs"];
m13_1002 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs"];
m13_601 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonSerializerTest.cs"];
m13_3353 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7608-7608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_3356 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7613-7613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_3357 [label="Assert.AreEqual(0, objDeserialized.Age)", span="7614-7614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_3354 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7610-7610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_3355 [label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7611-7611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_3358 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7608-7608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m13_1875 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4094-4094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m13_1876 [label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="4096-4099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m13_1877 [label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="4100-4103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m13_1878 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4094-4094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m13_1664 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs"];
m13_2629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5929-5929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2633 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5946-5946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2634 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5948-5948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2635 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5949-5949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2636 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5950-5950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2630 [label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="5931-5934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2632 [label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5938-5944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2631 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5936-5936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_2637 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5929-5929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m13_3013 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6908-6908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3015 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="6912-6912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3016 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="6914-6914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3017 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3018 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6916-6916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3014 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="6910-6910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_3019 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6908-6908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m13_2984 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonSerializerTest.cs"];
m13_2876 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs"];
m13_1207 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2596-2596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_1212 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2607-2607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_1210 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2601-2604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_1213 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2609-2609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_1214 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2610-2610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_1211 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2605-2605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_1209 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2599-2599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_1208 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2598-2598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_1215 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2596-2596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m13_3078 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7045-7045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_3079 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7047-7047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_3083 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="7053-7053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_3080 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7048-7048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_3082 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="7051-7051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_3081 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="7050-7050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_3084 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7045-7045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m13_2378 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5346-5346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs"];
m13_817 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs"];
m13_769 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1820-1820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_806 [label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="1830-1830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_808 [label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="1837-1837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_804 [label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="1827-1827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_805 [label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="1828-1828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_807 [label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="1831-1831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_809 [label=dataContractJson, span="1838-1838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_803 [label="var data = ms.ToArray()", span="1826-1826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_810 [label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="1840-1840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_811 [label="return jsonNetJson.ToString();", span="1843-1843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_800 [label="MemoryStream ms = new MemoryStream()", span="1822-1822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_801 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="1823-1823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_802 [label="s.WriteObject(ms, o)", span="1824-1824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1820-1820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m13_3905 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9057-9057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3908 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9061-9065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3909 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9067-9070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3912 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9078-9078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3911 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9076-9076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3910 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9072-9074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3907 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9060-9060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3906 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9059-9059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3913 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9057-9057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3271 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7404-7404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_3274 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7414-7418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_3276 [label="Assert.AreEqual(3, errors.Count)", span="7425-7425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_3277 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7426-7426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_3278 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7427-7427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_3279 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7428-7428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_3272 [label="IList<string> errors = new List<string>()", span="7406-7406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_3275 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7420-7423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_3273 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7408-7412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_3280 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7404-7404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m13_1059 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2339-2339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1061 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2342-2342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1062 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2343-2343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1063 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2345-2345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1064 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2346-2346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1065 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2347-2347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1066 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2348-2348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1067 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2349-2349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1060 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2341-2341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1068 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2339-2339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_2423 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="708-708", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs"];
m13_207 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs"];
m13_208 [label="this.Sections = new HashSet<FaqSection>()", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs"];
m13_209 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs"];
m13_1270 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs"];
m13_740 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonSerializerTest.cs"];
m13_3522 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="JsonSerializerTest.cs"];
m13_2120 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonSerializerTest.cs"];
m13_279 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="785-785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonSerializerTest.cs"];
m13_79 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="390-390", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs"];
m13_2082 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonSerializerTest.cs"];
m13_1015 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2259-2259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_1021 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2269-2269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_1019 [label="string json = JsonConvert.SerializeObject(values)", span="2265-2265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_1022 [label="CollectionAssert.AreEqual(values, newValues)", span="2271-2271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_1020 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2267-2267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_1016 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2261-2261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_1018 [label="values.Add(int.MinValue, int.MaxValue)", span="2263-2263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_1017 [label="values.Add(-5, 6)", span="2262-2262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_1023 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2259-2259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m13_2408 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs"];
m13_3388 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7696-7696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonSerializerTest.cs"];
m13_68 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs"];
m13_69 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new Binding_DisallowNull());\r\n            }, ''Cannot write a null value for property 'RequiredProperty'. Property requires a non-null value. Path ''.'')", span="279-282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", color=green, community=3, file="JsonSerializerTest.cs"];
m13_70 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs"];
m13_3736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8708-8708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3738 [label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="8713-8717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3740 [label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="8724-8724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3742 [label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="8727-8727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3748 [label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="8742-8742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3754 [label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="8757-8757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3743 [label="var dict2 = new Dictionary<IMyInterface, string>()", span="8733-8733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3749 [label="var dict3 = new Dictionary<string, IMyInterface>()", span="8748-8748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3739 [label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="8723-8723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3745 [label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="8736-8736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3751 [label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="8751-8751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3741 [label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="8726-8726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3747 [label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="8741-8741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3753 [label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="8756-8756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3746 [label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="8737-8739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3752 [label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="8752-8754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3737 [label="var consoleWriter = new ConsoleWriter()", span="8710-8710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3744 [label="dict2.Add(consoleWriter, ''Console'')", span="8734-8734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3750 [label="dict3.Add(''Console'', consoleWriter)", span="8749-8749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_3755 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8708-8708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m13_1861 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4062-4062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1871 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="4085-4085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1872 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="4086-4086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1864 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4067-4067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1867 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4070-4070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1870 [label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="4074-4083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1869 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="4073-4073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1863 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="4065-4065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1865 [label="wagePerson.Department = ''McDees''", span="4068-4068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1866 [label="wagePerson.HourlyWage = 12.50m", span="4069-4069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1868 [label="wagePerson.Name = ''Jim Bob''", span="4071-4071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1862 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="4064-4064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1873 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4062-4062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m13_1436 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1263 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2703-2703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m13_1264 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2705-2709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m13_1265 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2703-2703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m13_1926 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4246-4246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m13_1928 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4250-4254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m13_1927 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4248-4248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m13_1929 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4246-4246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m13_931 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2113-2113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_934 [label="Assert.AreEqual(4, o.Children().Count())", span="2127-2127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_937 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="2131-2131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_933 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="2126-2126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_935 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="2129-2129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_936 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="2130-2130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_932 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="2115-2124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_938 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2113-2113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m13_3534 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_318 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_321 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="915-915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_320 [label="var json = JsonConvert.SerializeObject(input)", span="914-914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_322 [label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_323 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="918-918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_324 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="919-919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_319 [label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="907-912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_325 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m13_2035 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs"];
m13_2613 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9447-9447", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m13_4057 [label="Value = val", span="9449-9449", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m13_4058 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9447-9447", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m13_3484 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7953-7953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3486 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7959-7959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3488 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7964-7964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3485 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7955-7957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3487 [label="BigInteger nineQuindecillion = l[0]", span="7961-7961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_3489 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7953-7953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m13_1479 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3182-3182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1482 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3187-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1484 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3194-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1485 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3199-3202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1483 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3192-3192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1486 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3203-3203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1480 [label="SubKlass i = new SubKlass(''my subprop'')", span="3184-3184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1481 [label="i.SuperProp = ''overrided superprop''", span="3185-3185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_1487 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3182-3182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m13_2086 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonSerializerTest.cs"];
m13_3135 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7134-7134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_3138 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="7140-7140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_3137 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="7139-7139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_3136 [label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="7136-7137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_3139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7134-7134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m13_3281 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonSerializerTest.cs"];
m13_373 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="995-995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_377 [label="Assert.AreEqual(customBinder, serializer.Binder)", span="1001-1001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_379 [label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_381 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_383 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="1011-1011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_386 [label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="1016-1016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_388 [label="Assert.AreEqual(1, serializer.Converters.Count)", span="1019-1019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_390 [label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="1022-1022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_392 [label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="1025-1025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_394 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="1028-1028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_396 [label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="1031-1031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_398 [label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="1034-1034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_400 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="1037-1037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_402 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_404 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="1043-1043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_406 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="1046-1046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_408 [label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="1049-1049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_410 [label="Assert.AreEqual(9001, serializer.MaxDepth)", span="1052-1052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_412 [label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="1055-1055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_414 [label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="1058-1058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_416 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_418 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="1064-1064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_420 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_423 [label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="1071-1071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_425 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="1074-1074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_428 [label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="1078-1078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_430 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="1082-1082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_432 [label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_389 [label="serializer.Culture = new CultureInfo(''en-nz'')", span="1021-1021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_374 [label="JsonSerializer serializer = new JsonSerializer()", span="997-997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_375 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="999-999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_376 [label="serializer.Binder = customBinder", span="1000-1000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_378 [label="serializer.CheckAdditionalContent = true", span="1003-1003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_380 [label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1006-1006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_382 [label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="1010-1010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_384 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1014-1014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_385 [label="serializer.ContractResolver = resolver", span="1015-1015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_387 [label="serializer.Converters.Add(new StringEnumConverter())", span="1018-1018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_391 [label="serializer.EqualityComparer = EqualityComparer<object>.Default", span="1024-1024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_393 [label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1027-1027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_395 [label="serializer.DateFormatString = ''yyyy''", span="1030-1030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_397 [label="serializer.DateParseHandling = DateParseHandling.None", span="1033-1033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_399 [label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1036-1036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_401 [label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1039-1039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_403 [label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_405 [label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="1045-1045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_407 [label="serializer.Formatting = Formatting.Indented", span="1048-1048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_409 [label="serializer.MaxDepth = 9001", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_411 [label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="1054-1054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_413 [label="serializer.NullValueHandling = NullValueHandling.Ignore", span="1057-1057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_415 [label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1060-1060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_417 [label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_419 [label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1066-1066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_421 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1069-1069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_422 [label="serializer.ReferenceResolver = referenceResolver", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_424 [label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_426 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1076-1076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_427 [label="serializer.TraceWriter = traceWriter", span="1077-1077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_429 [label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1081-1081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_431 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="1085-1085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_433 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="995-995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m13_2597 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5878-5878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2600 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="5888-5888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2601 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="5890-5890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2599 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="5886-5886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2602 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="5891-5891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2598 [label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="5880-5884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5878-5878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m13_2644 [label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="9550-9550", cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs"];
m13_600 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs"];
m13_2570 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5795-5795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2571 [label="_name = info.GetString(''Name'')", span="5797-5797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2572 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5795-5795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_1842 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3961-3961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1844 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="3971-3971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1843 [label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="3965-3969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1845 [label="Assert.Fail()", span="3972-3972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1846 [label=JsonSerializationException, span="3974-3974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1847 [label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'''))", span="3976-3976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1848 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3961-3961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_3550 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8169-8169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_3552 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="8177-8180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_3551 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8171-8175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_3553 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8182-8185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_3554 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8169-8169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m13_2618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5912-5912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2619 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5914-5914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2620 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5915-5915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2621 [label="Assert.AreEqual(''value!'', c.Value)", span="5916-5916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_2622 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5912-5912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m13_3795 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8823-8823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3796 [label="throw new InvalidCastException();", span="8825-8825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8823-8823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3976 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9231-9231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs"];
m13_3977 [label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="9233-9233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs"];
m13_3978 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9231-9231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs"];
m13_966 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2167-2167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_970 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2174-2174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_972 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2177-2177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_971 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="2176-2176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_967 [label="string json = @''[''''PRE\u003cPOST'''']''", span="2169-2169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_969 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2172-2172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_968 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2171-2171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_973 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2167-2167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m13_1054 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonSerializerTest.cs"];
m13_3768 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8777-8777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs"];
m13_3769 [label="return TypeCode.Object;", span="8779-8779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs"];
m13_3770 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8777-8777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs"];
m13_2088 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonSerializerTest.cs"];
m13_2721 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6229-6229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_2722 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="6231-6235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_2724 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="6239-6242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_2723 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6237-6237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_2725 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6229-6229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m13_2916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6687-6687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2921 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6697-6700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2923 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6708-6716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2924 [label="Assert.AreEqual(-1, c2.x)", span="6718-6718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2925 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6719-6719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2926 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6720-6720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2922 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6702-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2917 [label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6689-6689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2918 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6691-6694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2920 [label="StaticTestClass.z = 3", span="6696-6696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2919 [label="StaticTestClass.y = 2", span="6695-6695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_2927 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6687-6687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m13_268 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs"];
m13_36 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="220-220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m13_38 [label="Bars = new List<string>()", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m13_39 [label="bars != null", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m13_40 [label="Bars.AddRange(bars)", span="225-225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m13_41 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="220-220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m13_753 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1615-1615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_755 [label="string result = JsonConvert.SerializeObject(cc)", span="1624-1624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_756 [label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1625-1625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_754 [label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1617-1622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_757 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1615-1615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m13_862 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1925-1925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_866 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="1931-1931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_874 [label="Assert.AreEqual(dateValue, deserializedDate)", span="1945-1945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_864 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="1928-1928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_865 [label="testDictionary[''date''] = dateValue", span="1929-1929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_867 [label="MemoryStream ms = new MemoryStream()", span="1934-1934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_872 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="1942-1942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_863 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="1927-1927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_873 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="1943-1943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_869 [label="serializer.WriteObject(ms, testDictionary)", span="1936-1936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_868 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="1935-1935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_870 [label="byte[] data = ms.ToArray()", span="1938-1938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_871 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="1939-1939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_875 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1925-1925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m13_2021 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_891 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="311-311", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerTest.cs"];
m13_890 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JsonSerializerTest.cs"];
m13_2040 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4592-4592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2041 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4594-4594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_2042 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4592-4592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_80 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_3944 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9160-9160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m13_3946 [label="var serializerSettings = new JsonSerializerSettings()", span="9164-9164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m13_3947 [label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="9165-9165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m13_3949 [label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="9169-9169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m13_3950 [label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="9170-9170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m13_3948 [label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="9167-9167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m13_3945 [label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="9162-9162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m13_3951 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9160-9160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m13_1567 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3416-3416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1569 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3437-3438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1570 [label="Assert.AreEqual(''Name!'', c.Name)", span="3440-3440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1571 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="3441-3441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1572 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3442-3442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1573 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3443-3443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1574 [label="Assert.AreEqual(4, c.Collection.Count)", span="3444-3444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1575 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3445-3445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1576 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3446-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1577 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3447-3447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1578 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3448-3448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1568 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3418-3435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1579 [label="Assert.IsNotNull(c.Random)", span="3449-3449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_1580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3416-3416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m13_615 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonSerializerTest.cs"];
m13_2112 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonSerializerTest.cs"];
m13_1283 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2732-2732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1286 [label="json = JsonConvert.SerializeObject(personRaw)", span="2743-2743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1287 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2744-2744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1284 [label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2734-2739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1285 [label="string json", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1288 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2732-2732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_989 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonSerializerTest.cs"];
m13_790 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1794-1794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_797 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1811-1817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_796 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1809-1809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_791 [label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1796-1802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_795 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1807-1807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_792 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1804-1804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_793 [label="baseWith.Virtual = ''Virtual2!''", span="1805-1805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_794 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1806-1806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_798 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1794-1794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_2014 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4554-4554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m13_2015 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4556-4556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m13_2016 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4554-4554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m13_4020 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1695-1695", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonSerializerTest.cs"];
m13_1499 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m13_3389 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7712-7712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3392 [label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7729-7732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3395 [label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7743-7746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3391 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7728-7728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3393 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7734-7740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3394 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="7742-7742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3390 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7714-7720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_3396 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7712-7712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m13_4045 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9405-9405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4046 [label="var encodingName = serializer.Deserialize<string>(reader)", span="9407-9407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4049 [label="return Encoding.GetEncoding(encodingName);", span="9411-9411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4048 [label="return null;", span="9409-9409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4047 [label="encodingName == null", span="9408-9408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4050 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9405-9405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_780 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1764-1764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_787 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1781-1790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_786 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1779-1779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_781 [label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1766-1772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_785 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1777-1777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_782 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1774-1774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_783 [label="baseWith.Virtual = ''Virtual2!''", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_784 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1776-1776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_788 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1764-1764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m13_2462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5558-5558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m13_2463 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5560-5560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m13_2464 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5561-5561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m13_2465 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5558-5558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m13_2668 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6032-6032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2670 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="6045-6045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2671 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="6047-6047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2672 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="6048-6048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2673 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="6049-6049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2669 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="6034-6043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2674 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6032-6032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m13_2873 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1649-1649", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs"];
m13_1644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3607-3607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_1646 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3611-3611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_1647 [label="Assert.AreEqual(null, c.DateTimeField)", span="3612-3612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_1645 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="3609-3609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_1648 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3607-3607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m13_666 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="404-404", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs"];
m13_437 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_3107 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7093-7093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m13_3108 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="7095-7095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m13_3109 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7093-7093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m13_100 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs"];
m13_1003 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2228-2228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_1005 [label="string result = JsonConvert.SerializeObject(testDates)", span="2238-2238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_1006 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2239-2239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_1004 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2230-2236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_1007 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2228-2228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m13_3365 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7638-7638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_3374 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7643-7646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_3372 [label="var jsonReader = new JsonTextReader(new StringReader(json))", span="7641-7641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_3373 [label="var serializer = new JsonSerializer()", span="7642-7642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_3375 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7648-7648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_3376 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7638-7638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m13_25 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerTest.cs"];
m13_3059 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7005-7005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_3062 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7015-7015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_3066 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7027-7027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_3060 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="7007-7011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_3064 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="7019-7023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_3061 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="7013-7013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_3063 [label="Assert.AreEqual(null, e.NullableEnum)", span="7017-7017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_3065 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="7025-7025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_3067 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="7029-7029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_3068 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7005-7005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m13_1010 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2243-2243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_1012 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2253-2253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_1013 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2254-2254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_1011 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2245-2251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_1014 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2243-2243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_3760 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8762-8762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3765 [label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="8769-8769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3763 [label="string json = JsonConvert.SerializeObject(product)", span="8766-8766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3764 [label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="8768-8768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3762 [label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="8765-8765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3761 [label="ParticipantEntity product = new ParticipantEntity()", span="8764-8764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_3766 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8762-8762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m13_2911 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs"];
m13_2218 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m13_695 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSerializerTest.cs"];
m13_1125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2466-2466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_1127 [label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2470-2470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_1128 [label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2471-2471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_1129 [label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2473-2473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_1126 [label="var obj = new { Formatting = ''test'' }", span="2468-2468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_1130 [label="Assert.AreNotEqual(indented, none)", span="2474-2474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_1131 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2466-2466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m13_3668 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8455-8455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m13_3669 [label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8457-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m13_3670 [label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8466-8473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m13_3671 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8455-8455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m13_3237 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs"];
m13_222 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs"];
m13_3027 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6934-6934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m13_3028 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="6936-6942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m13_3029 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6934-6934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m13_951 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs"];
m13_2652 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5982-5982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2653 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="5984-5984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2654 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5982-5982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2044 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4599-4599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_2049 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4608-4608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_2047 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4604-4604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_2048 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4606-4606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_2050 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4609-4609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_2051 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4610-4610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_2045 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4601-4601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_2046 [label="modelStateDictionary.Add(''key'', ''value'')", span="4602-4602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_2052 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4599-4599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m13_3952 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9175-9175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs"];
m13_3953 [label="DerivedProperty = derivedProperty", span="9178-9178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs"];
m13_3954 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9175-9175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs"];
m13_2217 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="473-473", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs"];
m13_3239 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m13_2699 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6144-6144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2705 [label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="6159-6159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2704 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="6157-6157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2702 [label="MemoryStream ms = new MemoryStream()", span="6154-6154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2703 [label="serializer.WriteObject(ms, cc)", span="6155-6155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2701 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="6152-6152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2700 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6146-6150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_2706 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6144-6144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m13_1161 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2508-2508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs"];
m13_2708 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="JsonSerializerTest.cs"];
m13_2709 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6186-6186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_2711 [label="string result = JsonConvert.SerializeObject(cc)", span="6194-6194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_2712 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6195-6195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_2710 [label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6188-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_2713 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6186-6186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m13_3995 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9276-9276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs"];
m13_3997 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 14.'')", span="9318-9326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs"];
m13_3996 [label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="9278-9316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs"];
m13_3998 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9276-9276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs"];
m13_3867 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8961-8961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3871 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8967-8971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3872 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8973-8973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3875 [label="Assert.AreEqual(dt, dt1)", span="8979-8979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3880 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8990-8990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3873 [label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="8975-8975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3878 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8988-8988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3879 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8989-8989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3883 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8999-8999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3884 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9000-9000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3885 [label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="9001-9001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3874 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8977-8977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3868 [label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="8963-8963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3870 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8966-8966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3869 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8965-8965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3876 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8981-8985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3877 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8986-8986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3881 [label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8992-8996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3882 [label="v = (JValue)JToken.ReadFrom(reader)", span="8997-8997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_3886 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8961-8961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m13_1160 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs"];
m13_644 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs"];
m13_1784 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3853-3853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1789 [label="string json = JsonConvert.SerializeObject(strings)", span="3861-3861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1790 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="3862-3862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1785 [label="List<String> strings = new List<String>()", span="3855-3855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1788 [label="strings.Add(''str_3'')", span="3859-3859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1786 [label="strings.Add(''str_1'')", span="3857-3857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1787 [label="strings.Add(''str_2'')", span="3858-3858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1791 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3853-3853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m13_1793 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3866-3866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1797 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="3875-3875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1798 [label="Assert.AreEqual(''String!'', c2.A)", span="3876-3876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1799 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="3877-3877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1796 [label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="3870-3873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1795 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="3869-3869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1794 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="3868-3868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_1800 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3866-3866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m13_3070 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7033-7033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_3073 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="7039-7039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_3071 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="7035-7035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_3072 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="7037-7037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_3074 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="7041-7041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_3075 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7033-7033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m13_3286 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7432-7432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3288 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7445-7445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3290 [label="Assert.AreEqual(2, c2.Data.Count)", span="7448-7448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3291 [label="Assert.AreEqual(''one'', c2.Data[0])", span="7449-7449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3292 [label="Assert.AreEqual(''two'', c2.Data[1])", span="7450-7450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3287 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7434-7443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3289 [label="Assert.IsNotNull(c2)", span="7447-7447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3293 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7432-7432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_8 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="153-153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m13_12 [label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 123,\r\n  ''''Name'''': ''''ABC'''',\r\n  ''''P1'''': true,\r\n  ''''P2'''': 44\r\n}'', strJsonSubclass)", span="161-166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m13_14 [label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 567,\r\n  ''''Name'''': ''''XYZ'''',\r\n  ''''Subclass'''': {\r\n    ''''ID'''': 123,\r\n    ''''Name'''': ''''ABC'''',\r\n    ''''P1'''': true,\r\n    ''''P2'''': 44\r\n  }\r\n}'', strJsonMainClass)", span="171-180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m13_11 [label="var strJsonSubclass = JsonConvert.SerializeObject(mySubclass, Formatting.Indented)", span="159-159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m13_13 [label="var strJsonMainClass = JsonConvert.SerializeObject(myMainClass, Formatting.Indented)", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m13_9 [label="var mySubclass = MyFactory.InstantiateSubclass()", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m13_10 [label="var myMainClass = MyFactory.InstantiateManiClass()", span="156-156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m13_15 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="153-153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m13_269 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs"];
m13_234 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonSerializerTest.cs"];
m13_7 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", span="122-122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", file="JsonSerializerTest.cs"];
m13_3140 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7145-7145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3141 [label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7147-7153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3146 [label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7160-7166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3142 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7155-7155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3143 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7156-7156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3144 [label="Assert.AreEqual(''Pre'', c.PreField)", span="7157-7157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3145 [label="Assert.AreEqual(''Post'', c.PostField)", span="7158-7158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3147 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="7168-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3148 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="7169-7169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3149 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="7170-7170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3150 [label="Assert.AreEqual(''Post'', c2.PostField)", span="7171-7171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_3151 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7145-7145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m13_2460 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs"];
m13_1162 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2528-2528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_1165 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2534-2534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_1163 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2530-2530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_1164 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2532-2532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_1166 [label="Assert.AreEqual(0, c.IgnoredField)", span="2536-2536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_1167 [label="Assert.AreEqual(99, c.Field)", span="2537-2537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_1168 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2528-2528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m13_2781 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6382-6382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2783 [label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6391-6394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2785 [label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6402-6405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2782 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6384-6389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2784 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6396-6400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_2786 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6382-6382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m13_193 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="JsonSerializerTest.cs"];
m13_26 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="201-201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_30 [label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="208-208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_28 [label="string json = JsonConvert.SerializeObject(foo1)", span="204-204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_31 [label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="209-209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_32 [label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_33 [label="Assert.AreEqual(foo1.Bars[1], foo2.Bars[1])", span="211-211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_34 [label="Assert.AreEqual(foo1.Bars[2], foo2.Bars[2])", span="212-212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_29 [label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="206-206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_27 [label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="203-203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_35 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="201-201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m13_1739 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3760-3760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1741 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'')", span="3764-3764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1740 [label="string json = @''[]''", span="3762-3762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_1742 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3760-3760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m13_197 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="576-576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m13_202 [label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="585-585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m13_200 [label="string json = JsonConvert.SerializeObject(c)", span="581-581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m13_201 [label="Assert.AreEqual(''{}'', json)", span="583-583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m13_203 [label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m13_198 [label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m13_199 [label="c.UpdatedBy_Id = Guid.NewGuid()", span="579-579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m13_204 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="576-576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m13_2114 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonSerializerTest.cs"];
m13_3318 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7523-7523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_3322 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7538-7538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_3323 [label="Assert.AreEqual(2, dic2.Count)", span="7540-7540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_3324 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7541-7541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_3325 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7542-7542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_3319 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7525-7529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_3321 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7533-7536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_3320 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7531-7531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_3326 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7523-7523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m13_1637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3594-3594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1639 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3598-3598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1640 [label="Assert.AreEqual(2, values.Count)", span="3600-3600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1641 [label="Assert.AreEqual(''value1'', values[''key1''])", span="3601-3601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1642 [label="Assert.AreEqual(''value2'', values[''key2''])", span="3602-3602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1638 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3596-3596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3594-3594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m13_1897 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4169-4169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m13_1898 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="4171-4171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m13_1899 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4169-4169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m13_2871 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs"];
m13_3848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8922-8922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3851 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8926-8929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3852 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8931-8931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3855 [label="Assert.AreEqual(dt, dt1)", span="8937-8937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3860 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8947-8947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3853 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8933-8933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3858 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8945-8945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3859 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8946-8946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3863 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8955-8955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3864 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8956-8956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3865 [label="Assert.AreEqual(''abc'', v.Value)", span="8957-8957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3854 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8935-8935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3850 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8925-8925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3849 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8924-8924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3856 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8939-8942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3857 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8943-8943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3861 [label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8949-8952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3862 [label="v = (JValue)JToken.ReadFrom(reader)", span="8953-8953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_3866 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8922-8922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m13_2524 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5685-5685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_2526 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5688-5688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_2527 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="5689-5689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_2525 [label="string json = ''[123456789876543.21]''", span="5687-5687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_2528 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5685-5685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m13_1665 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3637-3637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m13_1667 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3641-3641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m13_1666 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3639-3639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m13_1668 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3637-3637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m13_1874 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs"];
m13_1187 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2568-2568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1190 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2573-2573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1192 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2577-2577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1189 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2572-2572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1191 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2575-2575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1188 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2570-2570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_1193 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2568-2568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m13_3515 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8042-8042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3517 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8045-8048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3519 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8051-8054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3518 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8049-8049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3520 [label="Assert.AreEqual(500, obj.Item1)", span="8055-8055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3516 [label="var tuple = Tuple.Create(500)", span="8044-8044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_3521 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8042-8042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m13_2121 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonSerializerTest.cs"];
m13_1299 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2761-2761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1303 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2778-2778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1301 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="2774-2774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1302 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2776-2776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1304 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2780-2780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1305 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2781-2781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1306 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2782-2782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1307 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2783-2783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1308 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2784-2784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1309 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2785-2785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1310 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2786-2786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1300 [label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2763-2772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1311 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2761-2761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m13_1169 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs"];
m13_1778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3836-3836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m13_1779 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="3838-3849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m13_1780 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3836-3836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m13_2800 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6438-6438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2804 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6449-6449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2805 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6450-6450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2803 [label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6443-6447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2802 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6442-6442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2801 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6440-6440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_2806 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6438-6438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m13_3579 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8244-8244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3582 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="8249-8253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3584 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8256-8256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3586 [label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8260-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3581 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8247-8247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3583 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8254-8254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3585 [label="string json = sw.ToString()", span="8258-8258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3580 [label="StringWriter sw = new StringWriter()", span="8246-8246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_3587 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8244-8244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m13_81 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="302-302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs"];
m13_82 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new DictionaryWithNoNull());\r\n            }, ''Cannot write a null value for property 'Name'. Property requires a non-null value. Path ''.'')", span="304-307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", color=green, community=3, file="JsonSerializerTest.cs"];
m13_83 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="302-302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs"];
m13_2484 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5599-5599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs"];
m13_2117 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonSerializerTest.cs"];
m13_1725 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3734-3734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m13_1727 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'')", span="3738-3738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m13_1726 [label="string json = @''[new Constructor(123)]''", span="3736-3736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m13_1728 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3734-3734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m13_1812 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs"];
m13_3152 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m13_646 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1428-1428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_649 [label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1434-1434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_650 [label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1436-1436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_651 [label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_648 [label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1432-1432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_647 [label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1430-1430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_652 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1428-1428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m13_1528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3315-3315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1535 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3329-3333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1536 [label="Assert.AreEqual(26, newOptInClass.Age)", span="3334-3334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1537 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3335-3335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1538 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3336-3336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1534 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3324-3327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1533 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3322-3322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1529 [label="OptInClass optInClass = new OptInClass()", span="3317-3317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1532 [label="optInClass.NotIncluded = ''Poor me :(''", span="3320-3320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1530 [label="optInClass.Age = 26", span="3318-3318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1531 [label="optInClass.Name = ''James NK''", span="3319-3319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_1539 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3315-3315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m13_975 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs"];
m13_1413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3017-3017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1415 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="3025-3025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1418 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="3034-3034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1419 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="3035-3035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1420 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="3036-3036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1414 [label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="3019-3023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1416 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="3028-3028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1417 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="3031-3031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_1421 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3017-3017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m13_876 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1949-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_881 [label="string output = JsonConvert.SerializeObject(executorObject)", span="1956-1956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_884 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="1961-1961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_885 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="1962-1962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_887 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="1964-1964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_877 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="1951-1951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_880 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="1954-1954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_882 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="1958-1958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_883 [label="Assert.AreNotSame(executorObject, executorObject2)", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_886 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="1963-1963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_878 [label="executorObject.serverClassName = ''BanSubs''", span="1952-1952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_879 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="1953-1953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1949-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m13_44 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs"];
m13_45 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'');\r\n            }, ''Required property 'RequiredProperty' expects a value but got null. Path '', line 1, position 21.'')", span="233-236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs"];
m13_46 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="231-231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs"];
m13_1114 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs"];
m13_2787 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6322-6322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonSerializerTest.cs"];
m13_2084 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonSerializerTest.cs"];
m13_676 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1498-1498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_678 [label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1501-1501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_679 [label="Assert.AreEqual(''value'', deserialized.foo)", span="1502-1502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_677 [label="var json = @''{''''foo'''':''''value''''}''", span="1500-1500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_680 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1498-1498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_2848 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonSerializerTest.cs"];
m13_3192 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7276-7276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3195 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7281-7281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3194 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7279-7279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3193 [label="Color color = (Color)value", span="7278-7278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3196 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7276-7276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_815 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs"];
m13_3819 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8863-8863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3820 [label="throw new InvalidCastException();", span="8865-8865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3821 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8863-8863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_2441 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5512-5512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2445 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5525-5525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2446 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5527-5527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2444 [label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5521-5523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2443 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5519-5519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2442 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5514-5517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_2447 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5512-5512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m13_206 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JsonSerializerTest.cs"];
m13_2091 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonSerializerTest.cs"];
m13_1450 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3118-3118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1452 [label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="3122-3125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1455 [label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="3129-3132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1453 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="3126-3126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1454 [label="Assert.AreEqual(21, c.TestProperty2)", span="3127-3127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1456 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="3133-3133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1457 [label="Assert.AreEqual(21, c.TestProperty2)", span="3134-3134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1451 [label="string json = ''{ 'testProperty1': 'value' }''", span="3120-3120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_1458 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3118-3118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m13_835 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="728-728", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs"];
m13_1412 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs"];
m13_3714 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonSerializerTest.cs"];
m13_2269 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="5103-5103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs"];
m13_2606 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="129-129", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m13_2658 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5988-5988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2660 [label="Assert.IsNull(dateTime)", span="5992-5992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2659 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5990-5990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_2661 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5988-5988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m13_3384 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7703-7703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m13_3386 [label="Assert.AreEqual(@''{}'', json)", span="7706-7706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m13_3385 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7705-7705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m13_3387 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7703-7703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m13_3590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8273-8273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs"];
m13_3591 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="8275-8275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs"];
m13_3592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8273-8273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs"];
m13_2960 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6802-6802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2963 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6808-6808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2962 [label="string json = JsonConvert.SerializeObject(d1)", span="6806-6806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2964 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6810-6810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2965 [label="Assert.AreEqual(d1[0], d2[0])", span="6811-6811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2961 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6804-6804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2966 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6802-6802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_571 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerTest.cs"];
m13_2087 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonSerializerTest.cs"];
m13_3490 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7969-7969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3492 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7975-7975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3494 [label="Assert.AreEqual(900, i)", span="7980-7980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3491 [label="string json = @''[\r\n        900\r\n      ]''", span="7971-7973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3493 [label="int i = l[0]", span="7977-7977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_3495 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7969-7969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m13_669 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1489-1489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_671 [label="var json = JsonConvert.SerializeObject(original)", span="1492-1492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_673 [label="Assert.AreEqual(expectedJson, json)", span="1494-1494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_670 [label="var original = new Foo1 { foo = ''value'' }", span="1491-1491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_672 [label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1493-1493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_674 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1489-1489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m13_2466 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5565-5565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2467 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5567-5570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2468 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5572-5572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2473 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5581-5581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2474 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5582-5582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2469 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5574-5574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2472 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5579-5579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2470 [label="JsonSerializer serializer = new JsonSerializer()", span="5576-5576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2471 [label="serializer.DateParseHandling = DateParseHandling.None", span="5577-5577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_2475 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5565-5565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m13_1291 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2748-2748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1293 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2752-2752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1294 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2754-2754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1295 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2755-2755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1296 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2756-2756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1292 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2750-2750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_1297 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2748-2748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m13_435 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonSerializerTest.cs"];
m13_2507 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonSerializerTest.cs"];
m13_2184 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5034-5034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2221 [label="AA_field1 = f", span="5036-5036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2222 [label="AA_field2 = f", span="5037-5037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2223 [label="AA_property1 = f", span="5038-5038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2224 [label="AA_property2 = f", span="5039-5039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2225 [label="AA_property3 = f", span="5040-5040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2226 [label="AA_property4 = f", span="5041-5041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2227 [label="AA_property5 = f", span="5042-5042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2228 [label="AA_property6 = f", span="5043-5043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_2229 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5034-5034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m13_603 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1335-1335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_604 [label="_serializationInfo == null", span="1337-1337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_606 [label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1340-1340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_607 [label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1341-1341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_608 [label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1342-1342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_609 [label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1343-1343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_610 [label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1344-1344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_611 [label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1345-1345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_612 [label="_serializationInfo = null", span="1347-1347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_605 [label="return;", span="1338-1338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_613 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1335-1335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_2388 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5383-5383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2390 [label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5387-5391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2389 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5385-5385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2391 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5383-5383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2013 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs"];
m13_3294 [label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m13_1170 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2541-2541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_1173 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2547-2547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_1172 [label="string json = JsonConvert.SerializeObject(c)", span="2545-2545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_1174 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="2549-2549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_1175 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2550-2550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_1176 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2551-2551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_1171 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2543-2543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_1177 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2541-2541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m13_336 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="935-935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs"];
m13_338 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<List<Version>>(json);\r\n            }, @''Error converting value ''''1.2.3.4444444444444444444444'''' to type 'System.Version'. Path '[0]', line 1, position 31.'')", span="939-942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs"];
m13_337 [label="string json = ''['1.2.3.4444444444444444444444']''", span="937-937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs"];
m13_339 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="935-935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs"];
m13_2424 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5469-5469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2434 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 31.'')", span="5497-5497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2429 [label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5488-5488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2430 [label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5490-5490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2431 [label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5491-5491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2432 [label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5492-5492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2433 [label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5493-5493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2425 [label="string classRef = typeof(StringDictionary).FullName", span="5471-5471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2427 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5483-5483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2428 [label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5486-5486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2426 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5473-5481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_2435 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5469-5469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m13_1949 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4348-4348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1956 [label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4376-4382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1954 [label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4363-4367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1957 [label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4384-4384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1958 [label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4385-4385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1959 [label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4386-4386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1960 [label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1955 [label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4369-4374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1950 [label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4350-4353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1953 [label="c2.C1 = c1", span="4361-4361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1951 [label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4355-4358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1952 [label="c1.C2 = c2", span="4360-4360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1961 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4348-4348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m13_1138 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2487-2487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_1142 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2494-2494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_1140 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2491-2491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_1143 [label="Assert.AreEqual(guid, c.GuidField)", span="2495-2495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_1141 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2492-2492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_1139 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2489-2489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_1144 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2487-2487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m13_4004 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="9398-9398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonSerializerTest.cs"];
m13_2554 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5747-5747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m13_2555 [label="IDoWork = doWork", span="5750-5750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m13_2556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5747-5747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m13_3129 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7123-7123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m13_3130 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7125-7130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m13_3131 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7123-7123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m13_2720 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="6179-6179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonSerializerTest.cs"];
m13_3011 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonSerializerTest.cs"];
m13_1050 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2325-2325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m13_1051 [label="string json = JsonConvert.SerializeObject(new object())", span="2327-2327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m13_1052 [label="Assert.AreEqual(''{}'', json)", span="2328-2328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m13_1053 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2325-2325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m13_2256 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonSerializerTest.cs"];
m13_1540 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3295-3295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs"];
m13_1205 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m13_2375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5355-5355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m13_2376 [label="return new DictionaryKey() { Value = value };", span="5357-5357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m13_2377 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5355-5355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m13_2693 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6122-6122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2696 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="6137-6140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2695 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6130-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2694 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6124-6128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2697 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6122-6122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m13_2692 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="6085-6085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonSerializerTest.cs"];
m13_2909 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs"];
m13_1621 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs"];
m13_4 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="141-141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs"];
m13_5 [label="return new MainClass\r\n                {\r\n                    ID = 567,\r\n                    Name = ''XYZ'',\r\n                    Subclass = InstantiateSubclass()\r\n                };", span="143-148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs"];
m13_6 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="141-141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs"];
m13_1985 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs"];
m13_2216 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m13_3236 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonSerializerTest.cs"];
m13_2412 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5446-5446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2419 [label="Assert.AreEqual(2, z.Length)", span="5457-5457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2420 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5458-5458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2421 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5459-5459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2418 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5456-5456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2414 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5449-5449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2413 [label="JsonSerializer serializer1 = new JsonSerializer()", span="5448-5448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2417 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5454-5454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2415 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5450-5450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2416 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5452-5452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_2422 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5446-5446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m13_1104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2403-2403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1109 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2445-2445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1110 [label="Assert.AreEqual(''string'', c.String)", span="2446-2446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1111 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="2447-2447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1112 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2449-2449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1108 [label="StringAssert.AreEqual(expected, json)", span="2443-2443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1106 [label="string expected = null", span="2407-2407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1105 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1107 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2409-2424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1113 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2403-2403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m13_1592 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3477-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1595 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3493-3493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1597 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3496-3496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1598 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3497-3497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1599 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3498-3498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1594 [label="JObject o = JObject.Parse(json)", span="3491-3491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1596 [label="Assert.IsNotNull(s)", span="3494-3494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1593 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3479-3489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_1600 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3477-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m13_223 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_230 [label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_231 [label="Assert.AreEqual(1, c2.FaqId)", span="682-682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_232 [label="Assert.AreEqual(1, c2.Sections.Count)", span="683-683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_229 [label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="670-678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_228 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="668-668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_224 [label="FaqItemProxy c = new FaqItemProxy()", span="663-663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_227 [label="c.IsProxy = true", span="666-666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_225 [label="c.FaqId = 1", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_226 [label="c.Sections.Add(new FaqSection())", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_233 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m13_2942 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6762-6762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2948 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6775-6775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2949 [label="Assert.AreEqual(1.5m, c.Quantity)", span="6777-6777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2950 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6778-6778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2947 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6773-6773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2946 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6771-6771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2944 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6768-6768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2945 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="6770-6770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2943 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6764-6764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_2951 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6762-6762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m13_1423 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3039-3039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1430 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="3077-3077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1432 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="3080-3080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1433 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="3081-3081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1434 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="3082-3082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1429 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="3059-3075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1425 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="3042-3047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1426 [label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="3048-3051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1427 [label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="3052-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1428 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3057-3057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1431 [label="Assert.IsNotNull(deserializedObject)", span="3078-3078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1424 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="3041-3041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_1435 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3039-3039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m13_2877 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6628-6628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2881 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6633-6633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2880 [label="string json = JsonConvert.SerializeObject(uri)", span="6632-6632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2882 [label="Assert.AreEqual(uri, output)", span="6635-6635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2879 [label="Uri uri = new Uri(input)", span="6631-6631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2878 [label="string input = ''http://test.com/%22foo+bar%22''", span="6630-6630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_2883 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6628-6628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m13_4003 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="9363-9363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonSerializerTest.cs"];
m13_3807 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8843-8843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3808 [label="return (long)Value;", span="8845-8845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3809 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8843-8843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_2279 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="5187-5187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonSerializerTest.cs"];
m13_1517 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3262-3262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1519 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3282-3282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1521 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3285-3285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1520 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3283-3283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1522 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3286-3286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1523 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3287-3287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1524 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="3288-3288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1525 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3289-3289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1526 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3290-3290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1518 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3264-3280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_1527 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3262-3262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m13_3706 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8617-8617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3709 [label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="8625-8625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3707 [label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="8619-8621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3708 [label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="8623-8623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3710 [label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="8627-8627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3711 [label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="8628-8628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_3712 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8617-8617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m13_2576 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5835-5835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2583 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2587 [label="s = JsonConvert.SerializeObject(barWithNull)", span="5852-5852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2585 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5848-5848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2586 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="5849-5849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2589 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5854-5854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2590 [label="Assert.AreEqual(deserialized.Foo2, null)", span="5855-5855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2577 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="5837-5837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2582 [label="barWithNull.Foo2 = null", span="5843-5843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2584 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="5847-5847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2580 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="5841-5841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2588 [label="deserialized = deserialize(s)", span="5853-5853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2578 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5838-5838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2579 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="5839-5839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2581 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5842-5842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_2591 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5835-5835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m13_1332 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs"];
m13_1313 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2790-2790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_1315 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2794-2794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_1316 [label="Assert.AreEqual(1, c.Height)", span="2795-2795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_1314 [label="string json = @''{''''Height'''':1}''", span="2792-2792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_1317 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2790-2790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m13_362 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs"];
m13_363 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs"];
m13_3327 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7546-7546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m13_3328 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7548-7552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=2, file="JsonSerializerTest.cs"];
m13_3329 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", span="7554-7557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=2, file="JsonSerializerTest.cs"];
m13_3330 [label="JObject o = JObject.Parse(json)", span="7559-7559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3333 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", span="7563-7566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=2, file="JsonSerializerTest.cs"];
m13_3331 [label="Assert.IsFalse(o.Properties().ElementAt(0).Name.Contains(''Z''))", span="7560-7560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3332 [label="Assert.IsFalse(o.Properties().ElementAt(1).Name.Contains(''Z''))", span="7561-7561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3334 [label="Assert.AreEqual(2, dic2.Count)", span="7568-7568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3335 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7569-7569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3336 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7570-7570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", color=green, community=0, file="JsonSerializerTest.cs"];
m13_3337 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7546-7546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m13_3982 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9237-9237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m13_3984 [label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="9244-9244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m13_3985 [label="Assert.AreEqual(''base'', d.BaseProperty)", span="9246-9246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m13_3986 [label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="9247-9247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m13_3983 [label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="9239-9242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m13_3987 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9237-9237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m13_2607 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5895-5895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2609 [label="var json = JsonConvert.SerializeObject(data)", span="5898-5898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2610 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="5899-5899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2611 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="5901-5901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2608 [label="var data = new DecimalTest(decimal.MinValue)", span="5897-5897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2612 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5895-5895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m13_2272 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5163-5163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_2275 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="5172-5172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_2274 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="5171-5171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_2273 [label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="5165-5169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_2276 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5163-5163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m13_1995 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs"];
m13_2861 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6609-6609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2869 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6623-6623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2868 [label="string result = sw.ToString()", span="6622-6622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2865 [label="var jw = new JsonTextWriter(sw)", span="6617-6617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2864 [label="var sw = new StringWriter()", span="6616-6616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2867 [label="jw.Flush()", span="6620-6620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2866 [label="jw.WriteToken(json.CreateReader())", span="6619-6619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2863 [label="var json = JObject.FromObject(o)", span="6614-6614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2862 [label="object o = new { p = 1 }", span="6612-6612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_2870 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6609-6609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m13_3197 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="JsonSerializerTest.cs"];
m13_2277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="5175-5175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonSerializerTest.cs"];
m13_1437 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs"];
m13_4002 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="9329-9329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonSerializerTest.cs"];
m13_3943 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="9138-9138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonSerializerTest.cs"];
m13_4024 [label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonSerializerTest.cs"];
m13_2080 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonSerializerTest.cs"];
m13_758 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1605-1605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonSerializerTest.cs"];
m13_2031 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs"];
m13_2022 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4564-4564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_2026 [label="this[entry.Key] = entry.Value", span="4573-4573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_2025 [label=dictionary, span="4571-4571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_2023 [label="dictionary == null", span="4566-4566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_2024 [label="return;", span="4568-4568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_2027 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4564-4564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m13_2480 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5608-5608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m13_2482 [label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5612-5614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m13_2481 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5610-5610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m13_2483 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5608-5608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m13_148 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="407-407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonSerializerTest.cs"];
m13_1746 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="924-924", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs"];
m13_4021 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="492-492", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m13_1069 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1071 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2356-2356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1072 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2357-2357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1073 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2359-2359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1074 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1075 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2361-2361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1076 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2362-2362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1077 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2363-2363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1070 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2355-2355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_1078 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m13_917 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_920 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="2020-2020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_918 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="2016-2016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_919 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="2018-2018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_921 [label="Assert.AreEqual(0, c.IgnoredField)", span="2022-2022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_922 [label="Assert.AreEqual(99, c.Field)", span="2023-2023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_923 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m13_184 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="503-503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m13_187 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="521-524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m13_190 [label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="554-557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m13_188 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="526-528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m13_191 [label="Assert.AreEqual(''Name!'', c2.Name)", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m13_186 [label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="507-519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m13_189 [label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="530-552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m13_185 [label="Version v = new Version(1, 2, 3, 4)", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m13_192 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="503-503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m13_1609 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonSerializerTest.cs"];
m13_2392 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5395-5395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2394 [label="Assert.AreEqual(3, d.Length)", span="5403-5403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2395 [label="Assert.AreEqual(2.4, d[0])", span="5404-5404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2396 [label="Assert.AreEqual(4.3, d[1])", span="5405-5405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2397 [label="Assert.AreEqual(null, d[2])", span="5406-5406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2393 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5397-5401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_2398 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5395-5395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m13_703 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1533-1533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_705 [label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1536-1536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_707 [label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1538-1538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_709 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1540-1540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_704 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1535-1535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_706 [label="Assert.IsNotNull(deserialized.foo2)", span="1537-1537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_708 [label="Assert.IsNotNull(deserialized.foo)", span="1539-1539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_710 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1533-1533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m13_977 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2181-2181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_983 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2193-2193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_986 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2198-2198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_985 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2196-2196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_984 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_978 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="2183-2183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_982 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2191-2191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_980 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="2187-2187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_979 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="2186-2186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_981 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2190-2190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_987 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2181-2181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m13_2448 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5503-5503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs"];
m13_1581 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs"];
m13_2592 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5814-5814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs"];
m13_2461 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="696-696", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m13_3813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8853-8853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3814 [label="throw new InvalidCastException();", span="8855-8855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3815 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8853-8853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1356 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="JsonSerializerTest.cs"];
m13_952 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2152-2152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_953 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="2154-2154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_954 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2152-2152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_1178 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs"];
m13_1146 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs"];
m13_734 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="839-839", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs"];
m13_3200 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7284-7284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3201 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7286-7286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_3202 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7284-7284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_196 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_770 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1738-1738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_777 [label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1755-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_776 [label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1753-1753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_771 [label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1740-1746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_775 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1751-1751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_772 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1748-1748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_773 [label="baseWith.Virtual = ''Virtual2!''", span="1749-1749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_774 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1750-1750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_778 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1738-1738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m13_328 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="923-923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m13_330 [label="List<Version> deserialized = JsonConvert.DeserializeObject<List<Version>>(json)", span="926-926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m13_331 [label="Assert.AreEqual(1, deserialized[0].Major)", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m13_332 [label="Assert.AreEqual(2, deserialized[0].Minor)", span="929-929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m13_333 [label="Assert.AreEqual(3, deserialized[0].Build)", span="930-930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m13_334 [label="Assert.AreEqual(4, deserialized[0].Revision)", span="931-931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m13_329 [label="string json = ''['1.2.3.4']''", span="925-925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m13_335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="923-923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m13_3923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9108-9108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3926 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9112-9115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3927 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="9117-9117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3930 [label="Assert.AreEqual(dt, dt1)", span="9123-9123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3935 [label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="9134-9134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3928 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9119-9119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3933 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9132-9132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3934 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="9133-9133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3929 [label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="9121-9121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3925 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9111-9111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3924 [label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="9110-9110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3931 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="9125-9129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3932 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9130-9130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_3936 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9108-9108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m13_2907 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs"];
m13_3613 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8314-8314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs"];
m13_3614 [label="this.First = first", span="8317-8317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs"];
m13_3615 [label="this.Second = second", span="8318-8318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs"];
m13_3616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8314-8314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs"];
m13_4031 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9370-9370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4033 [label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="9374-9379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4032 [label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="9372-9372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4034 [label="return attachment;", span="9380-9380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_4035 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9370-9370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m13_2849 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6580-6580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2853 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6600-6600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2854 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6601-6601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2855 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6602-6602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2856 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6603-6603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2857 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6604-6604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2858 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6605-6605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2850 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6582-6589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2852 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6592-6598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2851 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6590-6590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_2859 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6580-6580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m13_129 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m13_130 [label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="399-399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m13_131 [label="Assert.AreEqual(EnumA.ValueA, e1)", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m13_133 [label="Assert.AreEqual(EnumA.ValueA, e2)", span="403-403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m13_132 [label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m13_134 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m13_2081 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonSerializerTest.cs"];
m13_729 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_2731 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6258-6258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2737 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6273-6273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2738 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6274-6274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2739 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6275-6275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2740 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="6276-6276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2741 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="6277-6277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2736 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6265-6271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2735 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6264-6264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2732 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6260-6260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2734 [label="c1.Categories.Add(''two'')", span="6262-6262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2733 [label="c1.Categories.Add(''one'')", span="6261-6261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2742 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6258-6258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m13_2836 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JsonSerializerTest.cs"];
m13_270 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs"];
m13_1656 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3625-3625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1658 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3629-3629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1660 [label="Assert.AreEqual(5, a.Count)", span="3631-3631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1661 [label="Assert.AreEqual(1, (int)a[0])", span="3632-3632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1662 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3633-3633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1657 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3627-3627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1659 [label="JArray a = (JArray)setOnly.GetValue()", span="3630-3630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1663 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3625-3625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_1560 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1562 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3406-3408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1563 [label="Assert.AreEqual(''Name!'', c.Name)", span="3410-3410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1564 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="3411-3411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1565 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3412-3412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1561 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3399-3404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_1566 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m13_3688 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8514-8514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3694 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8537-8544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3689 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8516-8520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3690 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8522-8526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3693 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8531-8535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3695 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="8546-8561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3691 [label="john.Spouse = jane", span="8528-8528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3692 [label="jane.Spouse = john", span="8529-8529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_3696 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8514-8514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m13_1968 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4419-4419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_1970 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4422-4422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_1971 [label="Assert.AreEqual(123L, item.Value)", span="4424-4424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_1969 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="4421-4421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_1972 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4419-4419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m13_3660 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m13_1747 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3768-3768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1748 [label="string json = @''{}''", span="3770-3770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1749 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'')", span="3772-3772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_1750 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3768-3768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m13_3988 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9252-9252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m13_3991 [label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="9259-9259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m13_3990 [label="string output = JsonConvert.SerializeObject(instance)", span="9258-9258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m13_3992 [label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="9261-9261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m13_3989 [label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="9254-9257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m13_3993 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9252-9252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m13_2952 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonSerializerTest.cs"];
m13_18 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m13_19 [label="var largeBrokenNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 43443333222211111117 }'')", span="187-187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m13_21 [label="var largeOddWorkingNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 53443333222211111117 }'')", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m13_20 [label="Assert.AreEqual(''43443333222211111117'', largeBrokenNumber.Blah)", span="188-188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m13_22 [label="Assert.AreEqual(''53443333222211111117'', largeOddWorkingNumber.Blah)", span="191-191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m13_23 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="185-185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m13_751 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="JsonSerializerTest.cs"];
m13_3535 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3783 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8803-8803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3784 [label="throw new InvalidCastException();", span="8805-8805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3785 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8803-8803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1973 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4451-4451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1976 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4455-4455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1974 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4453-4453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1975 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4454-4454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1977 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4456-4456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1978 [label="MemoryStream ms = new MemoryStream()", span="4458-4458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1982 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4465-4465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1980 [label="serializer.WriteObject(ms, c)", span="4462-4462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1979 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4459-4461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1981 [label="byte[] jsonBytes = ms.ToArray()", span="4464-4464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_1983 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4451-4451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m13_3661 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8443-8443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3663 [label="var settings = new JsonSerializerSettings()", span="8446-8446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3666 [label="Assert.AreEqual(1234567890.123456m, d)", span="8450-8450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3664 [label="var serialiser = JsonSerializer.Create(settings)", span="8447-8447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3662 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8445-8445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3665 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8448-8448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_3667 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8443-8443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m13_853 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs"];
m13_2820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6480-6480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonSerializerTest.cs"];
m13_892 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1969-1969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_895 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="1975-1975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_894 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="1973-1973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_893 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1971-1971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_896 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1969-1969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m13_1828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3932-3932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1829 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="3934-3934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1830 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="3935-3935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1831 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="3936-3936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1833 [label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="3939-3942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1832 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3938-3938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_1834 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3932-3932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m13_2512 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5665-5665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m13_2513 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5667-5667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m13_2514 [label="Assert.AreEqual(123456789876543.21m, d)", span="5668-5668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m13_2515 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5665-5665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m13_3887 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9005-9005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m13_3890 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9009-9013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m13_3891 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9015-9018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m13_3894 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9026-9026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m13_3893 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9024-9024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m13_3892 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9020-9022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m13_3889 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9008-9008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m13_3888 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9007-9007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m13_3895 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9005-9005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m13_2113 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonSerializerTest.cs"];
m13_2399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5411-5411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2402 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5426-5426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2403 [label="Assert.AreEqual(3, d.Count)", span="5428-5428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2401 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5420-5424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2400 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5413-5418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2404 [label="Assert.IsTrue(d.Contains(''One''))", span="5429-5429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2405 [label="Assert.IsTrue(d.Contains(''2''))", span="5430-5430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2406 [label="Assert.IsTrue(d.Contains(''III''))", span="5431-5431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_2407 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5411-5411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m13_273 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m13_1049 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="775-775", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m13_939 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="258-258", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs"];
m13_1601 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3502-3502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1605 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3509-3509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1603 [label="string json = JsonConvert.SerializeObject(uri)", span="3505-3505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1604 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3507-3507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1606 [label="Assert.AreEqual(uri, newUri)", span="3510-3510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1602 [label="Uri uri = new Uri(''http://codeplex.com'')", span="3504-3504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_1607 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3502-3502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m13_2311 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5240-5240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2320 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 10.'')", span="5255-5255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2312 [label="var reference = new Dictionary<string, object>()", span="5244-5244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2315 [label="var child = new Dictionary<string, object>()", span="5248-5248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2319 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5253-5253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2313 [label="reference.Add(''$ref'', ''Persons'')", span="5245-5245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2314 [label="reference.Add(''$id'', 1)", span="5246-5246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2318 [label="child.Add(''Father'', reference)", span="5251-5251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2316 [label="child.Add(''_id'', 2)", span="5249-5249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2317 [label="child.Add(''Name'', ''Isabell'')", span="5250-5250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_2321 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5240-5240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m13_4022 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonSerializerTest.cs"];
m13_3295 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7454-7454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3297 [label="string json = JsonConvert.SerializeObject(c)", span="7466-7466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3298 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7468-7468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3296 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7456-7464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_3299 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7454-7454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m13_2985 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m13_2987 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 6.'')", span="6854-6854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m13_2986 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="6847-6852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m13_2988 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m13_285 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonSerializerTest.cs"];
m13_3789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8813-8813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3790 [label="throw new InvalidCastException();", span="8815-8815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3791 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8813-8813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_1312 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs"];
m13_1403 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs"];
m13_645 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonSerializerTest.cs"];
m13_3652 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8426-8426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3655 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8432-8432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3654 [label="string json = JsonConvert.SerializeObject(s1)", span="8430-8430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3656 [label="Assert.AreEqual(s1.Count, s2.Count)", span="8434-8434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3658 [label="Assert.IsTrue(s2.Contains(s))", span="8437-8437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3653 [label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8428-8428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3657 [label=s1, span="8435-8435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_3659 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8426-8426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m13_1942 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4285-4285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonSerializerTest.cs"];
m13_1009 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs"];
m13_925 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_927 [label="object o = JsonConvert.DeserializeObject(json)", span="2107-2107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_926 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="2029-2106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_928 [label="string s = string.Empty", span="2108-2108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_929 [label="s += s", span="2109-2109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_930 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m13_3810 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8848-8848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3811 [label="throw new InvalidCastException();", span="8850-8850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_3812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8848-8848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m13_2459 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5530-5530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs"];
m13_3198 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="JsonSerializerTest.cs"];
m13_2941 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6678-6678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonSerializerTest.cs"];
m13_1912 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4223-4223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1913 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="4225-4225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1915 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="4228-4228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1914 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="4226-4226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1916 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="4229-4229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_1917 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4223-4223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m13_3637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8371-8371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3640 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8385-8388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3641 [label="Assert.AreEqual(expected, actual)", span="8390-8390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3638 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8373-8381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3639 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8383-8383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3642 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8371-8371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m13_3309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7496-7496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_3313 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7514-7514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_3311 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7504-7507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_3314 [label="Assert.AreEqual(2, dic2.Count)", span="7516-7516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_3315 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7517-7517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_3316 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7518-7518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_3310 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7498-7502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_3312 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7509-7512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_3317 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7496-7496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m13_2726 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="6219-6219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonSerializerTest.cs"];
m13_3207 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7302-7302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3216 [label="Assert.AreEqual(2, values.Count)", span="7320-7320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3217 [label="Assert.AreEqual(''bar'', values[0].Name)", span="7321-7321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3218 [label="Assert.AreEqual(''baz'', values[1].Name)", span="7322-7322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3208 [label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7304-7304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3212 [label="!reader.Read()", span="7311-7311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3211 [label=true, span="7309-7309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3209 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7306-7306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3215 [label="values.Add(foo)", span="7317-7317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3213 [label="JsonSerializer serializer = new JsonSerializer()", span="7314-7314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3210 [label="reader.SupportMultipleContent = true", span="7307-7307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3214 [label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7315-7315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_3219 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7302-7302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m13_2910 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="672-672", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m13_904 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1993-1993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_906 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="1997-1997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_905 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="1995-1995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_907 [label="Assert.AreEqual(c.Field, ''Field'')", span="1999-1999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_908 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="2000-2000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_909 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1993-1993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m13_2682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6076-6076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2684 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="6080-6080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2685 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="6081-6081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2686 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="6082-6082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2683 [label="string json = @''{A:''''Test''''}''", span="6078-6078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_2687 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6076-6076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m13_1038 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_1041 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2311-2311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_1043 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2317-2317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_1046 [label="Assert.AreEqual(d, anonymous.DateValue)", span="2321-2321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_1044 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2318-2318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_1040 [label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2305-2309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_1042 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2312-2315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_1045 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2320-2320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_1039 [label="DateTime d = new DateTime(2000, 1, 1)", span="2303-2303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_1047 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m13_799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1702-1702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonSerializerTest.cs"];
m13_211 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="637-637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_217 [label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_218 [label="Assert.AreEqual(1, c2.FaqId)", span="656-656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_219 [label="Assert.AreEqual(1, c2.Sections.Count)", span="657-657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_216 [label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="645-652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_215 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="643-643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_212 [label="FaqItem c = new FaqItem()", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_214 [label="c.Sections.Add(new FaqSection())", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_213 [label="c.FaqId = 1", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_220 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="637-637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m13_3413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7769-7769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3415 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="7797-7797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3418 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="7801-7801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3414 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="7771-7795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3416 [label="Assert.IsNotNull(exception)", span="7798-7798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3417 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="7799-7799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3419 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7769-7769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m13_3469 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs"];
m13_309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="887-887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_312 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="897-897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_311 [label="var json = JsonConvert.SerializeObject(input)", span="896-896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_313 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="899-899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_314 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_315 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="901-901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_310 [label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="889-894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_316 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="887-887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m13_1289 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs"];
m13_1900 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4186-4186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1907 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="4213-4213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1908 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="4214-4214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1906 [label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="4197-4211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1905 [label="string json = g.ToJson()", span="4195-4195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1901 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="4188-4188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1904 [label="g.MyProperty = ''some value''", span="4193-4193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1902 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="4190-4190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1903 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="4191-4191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_1909 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4186-4186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m13_37 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs"];
m13_4023 [label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonSerializerTest.cs"];
m13_592 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1324-1324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_593 [label="info.AddValue(''stringValue'', _stringValue)", span="1326-1326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_594 [label="info.AddValue(''intValue'', _intValue)", span="1327-1327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_595 [label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_596 [label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1329-1329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_597 [label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1330-1330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_598 [label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1331-1331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_599 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1324-1324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m13_74 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", file="JsonSerializerTest.cs"];
m13_1271 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2713-2713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m13_1272 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2715-2715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m13_1273 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2716-2716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m13_1274 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2713-2713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m13_3673 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8479-8479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_3676 [label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8485-8487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_3675 [label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8483-8483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_3674 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8481-8481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_3677 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8479-8479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m13_280 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="810-810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_282 [label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="814-814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_281 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="812-812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_283 [label="Assert.AreEqual(true, childClass.IsTransient)", span="815-815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_284 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="810-810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m13_1759 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3785-3785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m13_1760 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3787-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m13_1761 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3785-3785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m13_2043 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m13_941 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2135-2135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_947 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="2145-2145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_945 [label="string jsonText = JsonConvert.SerializeObject(test)", span="2141-2141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_948 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="2147-2147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_949 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="2148-2148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_946 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="2143-2143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_942 [label="JsonPropertyClass test = new JsonPropertyClass()", span="2137-2137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_944 [label="test.SweetCakesCount = int.MaxValue", span="2139-2139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_943 [label="test.Pie = ''Delicious''", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2135-2135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m13_3119 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7105-7105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m13_3120 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="7107-7107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m13_3121 [label="Assert.IsNull(b)", span="7108-7108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m13_3122 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7105-7105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m13_2715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6199-6199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2717 [label="string result = JsonConvert.SerializeObject(cc)", span="6207-6207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2718 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6208-6208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2716 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6201-6205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2719 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6199-6199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m13_2999 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6885-6885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m13_3001 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 14.'')", span="6893-6893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m13_3000 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="6887-6891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m13_3002 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6885-6885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m13_974 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs"];
m13_3759 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonSerializerTest.cs"];
m13_2807 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6460-6460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2808 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6462-6462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2813 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="6468-6468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2809 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6464-6464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2810 [label="Assert.AreEqual(3, r.Departures.Count())", span="6465-6465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2811 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6466-6466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2812 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6467-6467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_2814 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6460-6460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m13_4092 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4097 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4102 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4103 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4104 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4105 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4106 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4107 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4108 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4109 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4110 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4124 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4128 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4140 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4141 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4149 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4151 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4112 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4086 [label=c1, span="", file="JsonSerializerTest.cs"];
m13_4088 [label=c1, span="", file="JsonSerializerTest.cs"];
m13_4115 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4113 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="JsonSerializerTest.cs"];
m13_4137 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="JsonSerializerTest.cs"];
m13_4085 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", span="", file="JsonSerializerTest.cs"];
m13_4136 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="JsonSerializerTest.cs"];
m13_4139 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="JsonSerializerTest.cs"];
m13_4142 [label=errors, span="", file="JsonSerializerTest.cs"];
m13_4098 [label=strFromTest, span="", file="JsonSerializerTest.cs"];
m13_4096 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="JsonSerializerTest.cs"];
m13_4145 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4146 [label=s, span="", file="JsonSerializerTest.cs"];
m13_4143 [label=errors, span="", file="JsonSerializerTest.cs"];
m13_4144 [label=errors, span="", file="JsonSerializerTest.cs"];
m13_4111 [label=json, span="", file="JsonSerializerTest.cs"];
m13_4156 [label=JsonMessage, span="", file="JsonSerializerTest.cs"];
m13_4150 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="JsonSerializerTest.cs"];
m13_4093 [label=referenceResolver, span="", file="JsonSerializerTest.cs"];
m13_4101 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonSerializerTest.cs"];
m13_4138 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="JsonSerializerTest.cs"];
m13_4114 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="JsonSerializerTest.cs"];
m13_4116 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="JsonSerializerTest.cs"];
m13_4119 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="JsonSerializerTest.cs"];
m13_4087 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span="", file="JsonSerializerTest.cs"];
m13_4090 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span="", file="JsonSerializerTest.cs"];
m13_4157 [label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span="", file="JsonSerializerTest.cs"];
m13_4147 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="JsonSerializerTest.cs"];
m13_4117 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span="", file="JsonSerializerTest.cs"];
m13_4120 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="JsonSerializerTest.cs"];
m13_4130 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="JsonSerializerTest.cs"];
m13_4154 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span="", file="JsonSerializerTest.cs"];
m13_4094 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span="", file="JsonSerializerTest.cs"];
m13_4095 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span="", file="JsonSerializerTest.cs"];
m13_4153 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span="", file="JsonSerializerTest.cs"];
m13_4123 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="JsonSerializerTest.cs"];
m13_4118 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span="", file="JsonSerializerTest.cs"];
m13_4122 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="JsonSerializerTest.cs"];
m13_4089 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span="", file="JsonSerializerTest.cs"];
m13_4132 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonSerializerTest.cs"];
m13_4133 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonSerializerTest.cs"];
m13_4152 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span="", file="JsonSerializerTest.cs"];
m14_10 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1684-1684", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="JsonTextReader.cs"];
m14_9 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextReader.cs"];
m14_12 [label="Entry System.Console.WriteLine(decimal)", span="0-0", cluster="System.Console.WriteLine(decimal)", file="JsonTextReader.cs"];
m14_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs"];
m14_1 [label="JObject o = JObject.Parse(@''{\r\n        'Stores': [\r\n          'Lambton Quay',\r\n          'Willis Street'\r\n        ],\r\n        'Manufacturers': [\r\n          {\r\n            'Name': 'Acme Co',\r\n            'Products': [\r\n              {\r\n                'Name': 'Anvil',\r\n                'Price': 50\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            'Name': 'Contoso',\r\n            'Products': [\r\n              {\r\n                'Name': 'Elbow Grease',\r\n                'Price': 99.95\r\n              },\r\n              {\r\n                'Name': 'Headlight Fluid',\r\n                'Price': 4\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      }'')", span="13-42", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs"];
m14_2 [label="string name = (string)o.SelectToken(''Manufacturers[0].Name'')", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs"];
m14_4 [label="decimal productPrice = (decimal)o.SelectToken(''Manufacturers[0].Products[0].Price'')", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs"];
m14_6 [label="string productName = (string)o.SelectToken(''Manufacturers[1].Products[0].Name'')", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs"];
m14_3 [label="Console.WriteLine(name)", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs"];
m14_5 [label="Console.WriteLine(productPrice)", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs"];
m14_7 [label="Console.WriteLine(productName)", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs"];
m14_8 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", span="10-10", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.QueryJsonSelectToken.Example()", file="JsonTextReader.cs"];
m14_11 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonTextReader.cs"];
m15_12 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonTextWriter.cs"];
m15_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs"];
m15_1 [label="Stockholder stockholder = new Stockholder\r\n            {\r\n                FullName = ''Steve Stockholder'',\r\n                Businesses = new List<Business>\r\n                {\r\n                    new Hotel\r\n                    {\r\n                        Name = ''Hudson Hotel'',\r\n                        Stars = 4\r\n                    }\r\n                }\r\n            }", span="55-66", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", color=green, community=0, file="JsonTextWriter.cs"];
m15_2 [label="string jsonTypeNameAll = JsonConvert.SerializeObject(stockholder, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="68-71", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", color=green, community=0, file="JsonTextWriter.cs"];
m15_4 [label="string jsonTypeNameAuto = JsonConvert.SerializeObject(stockholder, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="89-92", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs"];
m15_3 [label="Console.WriteLine(jsonTypeNameAll)", span="73-73", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", color=green, community=0, file="JsonTextWriter.cs"];
m15_5 [label="Console.WriteLine(jsonTypeNameAuto)", span="94-94", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs"];
m15_6 [label="Stockholder newStockholder = JsonConvert.DeserializeObject<Stockholder>(jsonTypeNameAuto, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Auto\r\n            })", span="107-110", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs"];
m15_7 [label="Console.WriteLine(newStockholder.Businesses[0].GetType().Name)", span="112-112", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs"];
m15_8 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Example()", file="JsonTextWriter.cs"];
m15_15 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriter.cs"];
m15_11 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Hotel.Hotel()", span="40-40", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Hotel.Hotel()", file="JsonTextWriter.cs"];
m15_16 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonTextWriter.cs"];
m15_9 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Stockholder.Stockholder()", span="45-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeTypeNameHandling.Stockholder.Stockholder()", file="JsonTextWriter.cs"];
m15_13 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriter.cs"];
m15_14 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonTextWriter.cs"];
m16_8 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JsonTextWriterTest.cs"];
m16_13 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", file="JsonTextWriterTest.cs"];
m16_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs"];
m16_1 [label="string json = @''[\r\n              {\r\n                'Title': 'Json.NET is awesome!',\r\n                'Author': {\r\n                  'Name': 'James Newton-King',\r\n                  'Twitter': '@JamesNK',\r\n                  'Picture': '/jamesnk.png'\r\n                },\r\n                'Date': '2013-01-23T19:30:00',\r\n                'BodyHtml': '&lt;h3&gt;Title!&lt;/h3&gt;\r\n&lt;p&gt;Content!&lt;/p&gt;'\r\n              }\r\n            ]''", span="50-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs"];
m16_2 [label="JArray blogPostArray = JArray.Parse(json)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs"];
m16_3 [label="IList<BlogPost> blogPosts = blogPostArray.Select(p => new BlogPost\r\n            {\r\n                Title = (string)p[''Title''],\r\n                AuthorName = (string)p[''Author''][''Name''],\r\n                AuthorTwitter = (string)p[''Author''][''Twitter''],\r\n                PostedDate = (DateTime)p[''Date''],\r\n                Body = HttpUtility.HtmlDecode((string)p[''BodyHtml''])\r\n            }).ToList()", span="65-72", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs"];
m16_4 [label="Console.WriteLine(blogPosts[0].Body)", span="74-74", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs"];
m16_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JsonTextWriterTest.cs"];
m16_7 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JsonTextWriterTest.cs"];
m16_10 [label="Entry lambda expression", span="65-72", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m16_11 [label="new BlogPost\r\n            {\r\n                Title = (string)p[''Title''],\r\n                AuthorName = (string)p[''Author''][''Name''],\r\n                AuthorTwitter = (string)p[''Author''][''Twitter''],\r\n                PostedDate = (DateTime)p[''Date''],\r\n                Body = HttpUtility.HtmlDecode((string)p[''BodyHtml''])\r\n            }", span="65-72", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m16_12 [label="Exit lambda expression", span="65-72", cluster="lambda expression", file="JsonTextWriterTest.cs"];
m16_14 [label="Entry Unk.HtmlDecode", span="", cluster="Unk.HtmlDecode", file="JsonTextWriterTest.cs"];
m16_6 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonTextWriterTest.cs"];
m16_9 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonTextWriterTest.cs"];
m17_362 [label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", span="864-864", cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="JsonValidatingReader.cs"];
m17_669 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="55-55", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonValidatingReader.cs"];
m17_1115 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="840-840", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="JsonValidatingReader.cs"];
m17_1280 [label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2433-2433", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonValidatingReader.cs"];
m17_1281 [label="return true;", span="2435-2435", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonValidatingReader.cs"];
m17_1282 [label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2433-2433", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonValidatingReader.cs"];
m17_138 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_139 [label="EnsureBuffer()", span="368-368", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_140 [label=true, span="370-370", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_141 [label=_currentState, span="372-372", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_142 [label="State.Start", span="374-374", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_149 [label="State.Object", span="381-381", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_152 [label="State.PostValue", span="384-384", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_155 [label="State.Finished", span="392-392", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_167 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="412-412", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_143 [label="State.Property", span="375-375", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_144 [label="State.Array", span="376-376", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_145 [label="State.ArrayStart", span="377-377", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_146 [label="State.Constructor", span="378-378", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_147 [label="State.ConstructorStart", span="379-379", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_148 [label="return ParseValue();", span="380-380", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_150 [label="State.ObjectStart", span="382-382", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_151 [label="return ParseObject();", span="383-383", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_153 [label="ParsePostValue()", span="387-387", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_154 [label="return true;", span="389-389", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_156 [label="EnsureChars(0, false)", span="393-393", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_157 [label="EatWhitespace(false)", span="395-395", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_165 [label="SetToken(JsonToken.None)", span="409-409", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_158 [label=_isEndOfFile, span="396-396", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_159 [label="SetToken(JsonToken.None)", span="398-398", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_161 [label="_chars[_charPos] == '/'", span="401-401", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_160 [label="return false;", span="399-399", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_162 [label="ParseComment(true)", span="403-403", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_164 [label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="407-407", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_163 [label="return true;", span="404-404", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_166 [label="return false;", span="410-410", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_168 [label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonValidatingReader.cs"];
m17_932 [label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_963 [label="MatchValueWithTrailingSeparator(''new'')", span="1732-1732", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_964 [label="EatWhitespace(false)", span="1734-1734", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_997 [label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1809-1809", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_965 [label="int initialPosition = _charPos", span="1736-1736", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_966 [label="int endPosition", span="1737-1737", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_989 [label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1791-1791", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_967 [label=true, span="1739-1739", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_968 [label="char currentChar = _chars[_charPos]", span="1741-1741", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_969 [label="currentChar == '\0'", span="1742-1742", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_975 [label="char.IsLetterOrDigit(currentChar)", span="1758-1758", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_977 [label="currentChar == StringUtils.CarriageReturn", span="1762-1762", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_980 [label="currentChar == StringUtils.LineFeed", span="1768-1768", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_983 [label="char.IsWhiteSpace(currentChar)", span="1774-1774", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_986 [label="currentChar == '('", span="1780-1780", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_988 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1787-1787", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_970 [label="_charsUsed == _charPos", span="1744-1744", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_971 [label="ReadData(true) == 0", span="1746-1746", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_973 [label="endPosition = _charPos", span="1753-1753", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_972 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1748-1748", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_974 [label="_charPos++", span="1754-1754", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_976 [label="_charPos++", span="1760-1760", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_978 [label="endPosition = _charPos", span="1764-1764", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_979 [label="ProcessCarriageReturn(true)", span="1765-1765", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_981 [label="endPosition = _charPos", span="1770-1770", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_982 [label="ProcessLineFeed()", span="1771-1771", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_984 [label="endPosition = _charPos", span="1776-1776", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_985 [label="_charPos++", span="1777-1777", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_987 [label="endPosition = _charPos", span="1782-1782", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_990 [label="string constructorName = _stringReference.ToString()", span="1792-1792", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_991 [label="EatWhitespace(false)", span="1794-1794", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_996 [label="SetToken(JsonToken.StartConstructor, constructorName)", span="1805-1805", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_992 [label="_chars[_charPos] != '('", span="1796-1796", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_993 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1798-1798", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_994 [label="_charPos++", span="1801-1801", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_995 [label="ClearRecentString()", span="1803-1803", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_998 [label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1730-1730", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonValidatingReader.cs"];
m17_557 [label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="898-898", cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="JsonValidatingReader.cs"];
m17_556 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="2291-2291", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs"];
m17_1217 [label="MatchValueWithTrailingSeparator(JsonConvert.Null)", span="2293-2293", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs"];
m17_1218 [label="SetToken(JsonToken.Null)", span="2295-2295", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs"];
m17_1219 [label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="2299-2299", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs"];
m17_1220 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="2291-2291", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonValidatingReader.cs"];
m17_1114 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.DoubleTryParse(char[], int, int, out double)", span="1199-1199", cluster="Newtonsoft.Json.Utilities.ConvertUtils.DoubleTryParse(char[], int, int, out double)", file="JsonValidatingReader.cs"];
m17_1277 [label="Entry Newtonsoft.Json.JsonReader.Close()", span="1129-1129", cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonValidatingReader.cs"];
m17_667 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="260-260", cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="JsonValidatingReader.cs"];
m17_263 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="JsonValidatingReader.cs"];
m17_1110 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="746-746", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="JsonValidatingReader.cs"];
m17_830 [label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", file="JsonValidatingReader.cs"];
m17_1105 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="JsonValidatingReader.cs"];
m17_83 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonValidatingReader.cs"];
m17_84 [label="return ReadData(append, 0);", span="242-242", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonValidatingReader.cs"];
m17_85 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonValidatingReader.cs"];
m17_364 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2327-2327", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1229 [label="MatchValueWithTrailingSeparator(JsonConvert.NegativeInfinity)", span="2329-2329", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1230 [label=readType, span="2331-2331", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1240 [label="throw JsonReaderException.Create(this, ''Error parsing -Infinity value.'');", span="2349-2349", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1231 [label="ReadType.Read", span="2333-2333", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1236 [label="ReadType.ReadAsString", span="2341-2341", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1232 [label="ReadType.ReadAsDouble", span="2334-2334", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1233 [label="_floatParseHandling == FloatParseHandling.Double", span="2335-2335", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1234 [label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="2337-2337", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1239 [label="throw JsonReaderException.Create(this, ''Cannot read -Infinity value.'');", span="2346-2346", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1235 [label="return double.NegativeInfinity;", span="2338-2338", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1237 [label="SetToken(JsonToken.String, JsonConvert.NegativeInfinity)", span="2342-2342", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1238 [label="return JsonConvert.NegativeInfinity;", span="2343-2343", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1241 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", span="2327-2327", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_186 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonValidatingReader.cs"];
m17_187 [label="return (string)ReadStringValue(ReadType.ReadAsString);", span="441-441", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonValidatingReader.cs"];
m17_188 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonValidatingReader.cs"];
m17_1123 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonValidatingReader.cs"];
m17_17 [label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_18 [label="_charPos++", span="129-129", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_20 [label="ReadStringIntoBuffer(quote)", span="132-132", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_22 [label=readType, span="135-135", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_35 [label="_quoteChar = quote", span="159-159", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_41 [label="readType == ReadType.ReadAsDateTime", span="170-170", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_43 [label="readType == ReadType.ReadAsDateTimeOffset", span="175-175", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_56 [label="_quoteChar = quote", span="208-208", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_19 [label="ShiftBufferIfNeeded()", span="131-131", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_21 [label="SetPostValueState(true)", span="133-133", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_23 [label="ReadType.ReadAsBytes", span="137-137", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_32 [label="ReadType.ReadAsString", span="155-155", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_36 [label="ReadType.ReadAsInt32", span="161-161", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_39 [label="_dateParseHandling != DateParseHandling.None", span="167-167", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_24 [label="Guid g", span="138-138", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_25 [label="byte[] data", span="139-139", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_26 [label="_stringReference.Length == 0", span="140-140", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_27 [label="data = new byte[0]", span="142-142", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_28 [label="_stringReference.Length == 36 && ConvertUtils.TryConvertGuid(_stringReference.ToString(), out g)", span="144-144", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_29 [label="data = g.ToByteArray()", span="146-146", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_30 [label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="150-150", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_31 [label="SetToken(JsonToken.Bytes, data, false)", span="153-153", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_33 [label="string text = _stringReference.ToString()", span="156-156", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_34 [label="SetToken(JsonToken.String, text, false)", span="158-158", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_37 [label="ReadType.ReadAsDecimal", span="162-162", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_38 [label="ReadType.ReadAsBoolean", span="163-163", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_40 [label="DateParseHandling dateParseHandling", span="169-169", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_55 [label="SetToken(JsonToken.String, _stringReference.ToString(), false)", span="207-207", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_42 [label="dateParseHandling = DateParseHandling.DateTime", span="172-172", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_44 [label="dateParseHandling = DateParseHandling.DateTimeOffset", span="177-177", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_45 [label="dateParseHandling = _dateParseHandling", span="182-182", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_46 [label="dateParseHandling == DateParseHandling.DateTime", span="185-185", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_47 [label="DateTime dt", span="187-187", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_51 [label="DateTimeOffset dt", span="197-197", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_48 [label="DateTimeUtils.TryParseDateTime(_stringReference, DateTimeZoneHandling, DateFormatString, Culture, out dt)", span="188-188", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_49 [label="SetToken(JsonToken.Date, dt, false)", span="190-190", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_50 [label="return;", span="191-191", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_52 [label="DateTimeUtils.TryParseDateTimeOffset(_stringReference, DateFormatString, Culture, out dt)", span="198-198", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_53 [label="SetToken(JsonToken.Date, dt, false)", span="200-200", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_54 [label="return;", span="201-201", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_57 [label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_181 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_457 [label="EnsureBuffer()", span="832-832", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_475 [label="ParseString(currentChar, readType)", span="858-858", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_476 [label=readType, span="859-859", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_483 [label="throw new ArgumentOutOfRangeException(nameof(readType));", span="868-868", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_488 [label="return ParseNumberNaN(readType);", span="874-874", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_490 [label="return ParseNumberPositiveInfinity(readType);", span="876-876", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_493 [label="return ParseNumberNegativeInfinity(readType);", span="880-880", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_494 [label="ParseNumber(readType)", span="884-884", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_507 [label="ParseNumber(readType)", span="898-898", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_458 [label=_currentState, span="834-834", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_459 [label="State.Start", span="836-836", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_529 [label="State.Finished", span="937-937", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_532 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="941-941", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_460 [label="State.Property", span="837-837", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_461 [label="State.Array", span="838-838", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_462 [label="State.ArrayStart", span="839-839", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_463 [label="State.Constructor", span="840-840", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_464 [label="State.ConstructorStart", span="841-841", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_465 [label="State.PostValue", span="842-842", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_466 [label=true, span="843-843", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_467 [label="char currentChar = _chars[_charPos]", span="845-845", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_468 [label=currentChar, span="847-847", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_518 [label="throw CreateUnexpectedCharacterException(currentChar);", span="913-913", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_527 [label="!char.IsWhiteSpace(currentChar)", span="928-928", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_528 [label="throw CreateUnexpectedCharacterException(currentChar);", span="930-930", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_469 [label="'\0'", span="849-849", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_473 [label="''''", span="856-856", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_484 [label="'n'", span="870-870", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_487 [label="'N'", span="873-873", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_489 [label="'I'", span="875-875", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_491 [label="'-'", span="877-877", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_496 [label="'.'", span="887-887", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_509 [label="'/'", span="900-900", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_511 [label="','", span="903-903", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_513 [label="']'", span="906-906", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_519 [label="StringUtils.CarriageReturn", span="914-914", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_521 [label="StringUtils.LineFeed", span="917-917", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_523 [label="' '", span="920-920", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_526 [label="_charPos++", span="926-926", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_470 [label="ReadNullChar()", span="850-850", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_471 [label="SetToken(JsonToken.None, null, false)", span="852-852", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_472 [label="return null;", span="853-853", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_474 [label="'\''", span="857-857", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_477 [label="ReadType.ReadAsInt32", span="861-861", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_479 [label="ReadType.ReadAsDecimal", span="863-863", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_481 [label="ReadType.ReadAsDouble", span="865-865", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_478 [label="return ReadInt32String(_stringReference.ToString());", span="862-862", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_480 [label="return ReadDecimalString(_stringReference.ToString());", span="864-864", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_482 [label="return ReadDoubleString(_stringReference.ToString());", span="866-866", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_485 [label="HandleNull()", span="871-871", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_486 [label="return null;", span="872-872", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_492 [label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="878-878", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_495 [label="return Value;", span="885-885", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_497 [label="'0'", span="888-888", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_498 [label="'1'", span="889-889", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_499 [label="'2'", span="890-890", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_500 [label="'3'", span="891-891", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_501 [label="'4'", span="892-892", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_502 [label="'5'", span="893-893", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_503 [label="'6'", span="894-894", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_504 [label="'7'", span="895-895", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_505 [label="'8'", span="896-896", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_506 [label="'9'", span="897-897", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_508 [label="return Value;", span="899-899", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_510 [label="ParseComment(false)", span="901-901", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_512 [label="ProcessValueComma()", span="904-904", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_514 [label="_charPos++", span="907-907", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_515 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="908-908", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_516 [label="SetToken(JsonToken.EndArray)", span="910-910", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_517 [label="return null;", span="911-911", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_520 [label="ProcessCarriageReturn(false)", span="915-915", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_522 [label="ProcessLineFeed()", span="918-918", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_524 [label="StringUtils.Tab", span="921-921", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_525 [label="_charPos++", span="923-923", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_530 [label="ReadFinished()", span="938-938", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_531 [label="return null;", span="939-939", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_533 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="830-830", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_684 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", span="1383-1383", cluster="Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", file="JsonValidatingReader.cs"];
m17_829 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_834 [label="int initialPosition = _charPos", span="1500-1500", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_835 [label=true, span="1503-1503", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_841 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1518-1518", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_847 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1530-1530", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_836 [label="_chars[_charPos]", span="1505-1505", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_837 [label="'\0'", span="1507-1507", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_843 [label="char currentChar = _chars[_charPos]", span="1521-1521", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_838 [label="_charsUsed == _charPos", span="1508-1508", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_839 [label="ReadData(true) == 0", span="1510-1510", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_840 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="1512-1512", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_842 [label="return;", span="1519-1519", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_844 [label="ValidIdentifierChar(currentChar)", span="1523-1523", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_846 [label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="1528-1528", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_849 [label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1534-1534", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_845 [label="_charPos++", span="1525-1525", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_848 [label="return;", span="1531-1531", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_850 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1498-1498", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonValidatingReader.cs"];
m17_1268 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2405-2405", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs"];
m17_1269 [label="base.Close()", span="2407-2407", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs"];
m17_1270 [label="_chars != null", span="2409-2409", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs"];
m17_1271 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="2411-2411", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs"];
m17_1273 [label="CloseInput && _reader != null", span="2415-2415", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs"];
m17_1272 [label="_chars = null", span="2412-2412", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs"];
m17_1274 [label="_reader.Close()", span="2418-2418", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs"];
m17_1275 [label="_stringBuffer.Clear(_arrayPool)", span="2424-2424", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs"];
m17_1276 [label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="2405-2405", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonValidatingReader.cs"];
m17_543 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonValidatingReader.cs"];
m17_544 [label="return (double?)ReadNumberValue(ReadType.ReadAsDouble);", span="971-971", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonValidatingReader.cs"];
m17_545 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="969-969", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="JsonValidatingReader.cs"];
m17_800 [label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_801 [label="char firstChar = _chars[_charPos]", span="1439-1439", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_802 [label="char quoteChar", span="1440-1440", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_803 [label="firstChar == '''' || firstChar == '\''", span="1442-1442", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_805 [label="quoteChar = firstChar", span="1445-1445", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_808 [label="ValidIdentifierChar(firstChar)", span="1449-1449", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_824 [label="_quoteChar = quoteChar", span="1487-1487", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_804 [label="_charPos++", span="1444-1444", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_806 [label="ShiftBufferIfNeeded()", span="1446-1446", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_807 [label="ReadStringIntoBuffer(quoteChar)", span="1447-1447", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_809 [label="quoteChar = '\0'", span="1451-1451", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_812 [label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1457-1457", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_810 [label="ShiftBufferIfNeeded()", span="1452-1452", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_811 [label="ParseUnquotedProperty()", span="1453-1453", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_813 [label="string propertyName", span="1460-1460", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_814 [label="NameTable != null", span="1462-1462", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_815 [label="propertyName = NameTable.Get(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="1464-1464", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_818 [label="propertyName = _stringReference.ToString()", span="1474-1474", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_816 [label="propertyName == null", span="1467-1467", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_823 [label="SetToken(JsonToken.PropertyName, propertyName)", span="1486-1486", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_817 [label="propertyName = _stringReference.ToString()", span="1469-1469", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_819 [label="EatWhitespace(false)", span="1477-1477", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_820 [label="_chars[_charPos] != ':'", span="1479-1479", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_821 [label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1481-1481", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_822 [label="_charPos++", span="1484-1484", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_825 [label="ClearRecentString()", span="1488-1488", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_826 [label="return true;", span="1490-1490", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_827 [label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1437-1437", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonValidatingReader.cs"];
m17_675 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", span="58-58", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", file="JsonValidatingReader.cs"];
m17_448 [label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="708-708", cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="JsonValidatingReader.cs"];
m17_1112 [label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0", cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonValidatingReader.cs"];
m17_118 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54", cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="JsonValidatingReader.cs"];
m17_189 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_190 [label="EnsureBuffer()", span="450-450", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_191 [label="bool isWrapped = false", span="451-451", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_192 [label=_currentState, span="453-453", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_211 [label=isWrapped, span="479-479", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_193 [label="State.Start", span="455-455", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_249 [label="State.Finished", span="539-539", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_252 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="543-543", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_194 [label="State.Property", span="456-456", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_195 [label="State.Array", span="457-457", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_196 [label="State.ArrayStart", span="458-458", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_197 [label="State.Constructor", span="459-459", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_198 [label="State.ConstructorStart", span="460-460", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_199 [label="State.PostValue", span="461-461", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_200 [label=true, span="462-462", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_201 [label="char currentChar = _chars[_charPos]", span="464-464", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_202 [label=currentChar, span="466-466", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_209 [label="ParseString(currentChar, ReadType.ReadAsBytes)", span="477-477", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_238 [label="throw CreateUnexpectedCharacterException(currentChar);", span="515-515", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_247 [label="!char.IsWhiteSpace(currentChar)", span="530-530", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_248 [label="throw CreateUnexpectedCharacterException(currentChar);", span="532-532", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_203 [label="'\0'", span="468-468", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_207 [label="''''", span="475-475", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_217 [label="'{'", span="489-489", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_222 [label="'['", span="495-495", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_226 [label="'n'", span="499-499", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_229 [label="'/'", span="502-502", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_231 [label="','", span="505-505", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_233 [label="']'", span="508-508", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_239 [label="StringUtils.CarriageReturn", span="516-516", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_241 [label="StringUtils.LineFeed", span="519-519", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_243 [label="' '", span="522-522", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_246 [label="_charPos++", span="528-528", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_204 [label="ReadNullChar()", span="469-469", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_205 [label="SetToken(JsonToken.None, null, false)", span="471-471", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_206 [label="return null;", span="472-472", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_208 [label="'\''", span="476-476", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_210 [label="byte[] data = (byte[])Value", span="478-478", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_215 [label="SetToken(JsonToken.Bytes, data, false)", span="486-486", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_216 [label="return data;", span="488-488", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_212 [label="ReaderReadAndAssert()", span="481-481", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_213 [label="TokenType != JsonToken.EndObject", span="482-482", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_214 [label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="484-484", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_218 [label="_charPos++", span="490-490", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_219 [label="SetToken(JsonToken.StartObject)", span="491-491", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_220 [label="ReadIntoWrappedTypeObject()", span="492-492", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_221 [label="isWrapped = true", span="493-493", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_223 [label="_charPos++", span="496-496", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_224 [label="SetToken(JsonToken.StartArray)", span="497-497", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_225 [label="return ReadArrayIntoByteArray();", span="498-498", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_227 [label="HandleNull()", span="500-500", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_228 [label="return null;", span="501-501", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_230 [label="ParseComment(false)", span="503-503", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_232 [label="ProcessValueComma()", span="506-506", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_234 [label="_charPos++", span="509-509", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_235 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="510-510", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_236 [label="SetToken(JsonToken.EndArray)", span="512-512", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_237 [label="return null;", span="513-513", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_240 [label="ProcessCarriageReturn(false)", span="517-517", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_242 [label="ProcessLineFeed()", span="520-520", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_244 [label="StringUtils.Tab", span="523-523", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_245 [label="_charPos++", span="525-525", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_250 [label="ReadFinished()", span="540-540", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_251 [label="return null;", span="541-541", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_253 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonValidatingReader.cs"];
m17_668 [label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs"];
m17_671 [label="writeToPosition > lastWritePosition", span="1217-1217", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs"];
m17_672 [label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, writeToPosition - lastWritePosition)", span="1219-1219", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs"];
m17_673 [label="_stringBuffer.Append(_arrayPool, writeChar)", span="1222-1222", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs"];
m17_674 [label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1215-1215", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="JsonValidatingReader.cs"];
m17_828 [label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonValidatingReader.cs"];
m17_831 [label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="1495-1495", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonValidatingReader.cs"];
m17_832 [label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1493-1493", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonValidatingReader.cs"];
m17_169 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs"];
m17_574 [label="_chars == null", span="1036-1036", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs"];
m17_575 [label="_chars = BufferUtils.RentBuffer(_arrayPool, 1024)", span="1038-1038", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs"];
m17_576 [label="_chars[0] = '\0'", span="1039-1039", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs"];
m17_577 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1034-1034", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="JsonValidatingReader.cs"];
m17_185 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_265 [label="EnsureBuffer()", span="549-549", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_283 [label="ParseString(currentChar, readType)", span="575-575", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_284 [label=readType, span="576-576", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_297 [label="throw new ArgumentOutOfRangeException(nameof(readType));", span="597-597", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_300 [label="return ParseNumberNegativeInfinity(readType);", span="602-602", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_301 [label="ParseNumber(readType)", span="606-606", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_314 [label="readType != ReadType.ReadAsString", span="620-620", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_321 [label="readType != ReadType.ReadAsString", span="629-629", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_330 [label="return ParseNumberPositiveInfinity(readType);", span="642-642", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_332 [label="return ParseNumberNaN(readType);", span="644-644", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_266 [label=_currentState, span="551-551", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_267 [label="State.Start", span="553-553", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_356 [label="State.Finished", span="685-685", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_359 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="689-689", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_268 [label="State.Property", span="554-554", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_269 [label="State.Array", span="555-555", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_270 [label="State.ArrayStart", span="556-556", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_271 [label="State.Constructor", span="557-557", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_272 [label="State.ConstructorStart", span="558-558", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_273 [label="State.PostValue", span="559-559", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_274 [label=true, span="560-560", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_275 [label="char currentChar = _chars[_charPos]", span="562-562", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_276 [label=currentChar, span="564-564", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_316 [label="throw CreateUnexpectedCharacterException(currentChar);", span="623-623", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_323 [label="throw CreateUnexpectedCharacterException(currentChar);", span="632-632", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_324 [label="string expected = currentChar == 't' ? JsonConvert.True : JsonConvert.False", span="634-634", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_345 [label="throw CreateUnexpectedCharacterException(currentChar);", span="661-661", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_354 [label="!char.IsWhiteSpace(currentChar)", span="676-676", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_355 [label="throw CreateUnexpectedCharacterException(currentChar);", span="678-678", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_277 [label="'\0'", span="566-566", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_281 [label="''''", span="573-573", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_298 [label="'-'", span="599-599", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_303 [label="'.'", span="609-609", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_319 [label="'t'", span="627-627", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_329 [label="'I'", span="641-641", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_331 [label="'N'", span="643-643", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_333 [label="'n'", span="645-645", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_336 [label="'/'", span="648-648", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_338 [label="','", span="651-651", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_340 [label="']'", span="654-654", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_346 [label="StringUtils.CarriageReturn", span="662-662", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_348 [label="StringUtils.LineFeed", span="665-665", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_350 [label="' '", span="668-668", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_353 [label="_charPos++", span="674-674", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_278 [label="ReadNullChar()", span="567-567", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_279 [label="SetToken(JsonToken.None, null, false)", span="569-569", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_280 [label="return null;", span="570-570", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_282 [label="'\''", span="574-574", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_285 [label="ReadType.ReadAsBytes", span="578-578", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_287 [label="ReadType.ReadAsString", span="580-580", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_289 [label="ReadType.ReadAsDateTime", span="582-582", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_293 [label="ReadType.ReadAsDateTimeOffset", span="589-589", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_286 [label="return Value;", span="579-579", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_288 [label="return Value;", span="581-581", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_290 [label="Value is DateTime", span="583-583", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_291 [label="return (DateTime)Value;", span="585-585", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_292 [label="return ReadDateTimeString((string)Value);", span="587-587", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_294 [label="Value is DateTimeOffset", span="590-590", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_295 [label="return (DateTimeOffset)Value;", span="592-592", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_296 [label="return ReadDateTimeOffsetString((string)Value);", span="594-594", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_299 [label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="600-600", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_302 [label="return Value;", span="607-607", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_304 [label="'0'", span="610-610", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_305 [label="'1'", span="611-611", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_306 [label="'2'", span="612-612", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_307 [label="'3'", span="613-613", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_308 [label="'4'", span="614-614", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_309 [label="'5'", span="615-615", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_310 [label="'6'", span="616-616", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_311 [label="'7'", span="617-617", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_312 [label="'8'", span="618-618", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_313 [label="'9'", span="619-619", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_315 [label="_charPos++", span="622-622", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_317 [label="ParseNumber(ReadType.ReadAsString)", span="625-625", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_318 [label="return Value;", span="626-626", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_320 [label="'f'", span="628-628", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_322 [label="_charPos++", span="631-631", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_325 [label="!MatchValueWithTrailingSeparator(expected)", span="635-635", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_327 [label="SetToken(JsonToken.String, expected)", span="639-639", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_328 [label="return expected;", span="640-640", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_326 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="637-637", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_334 [label="HandleNull()", span="646-646", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_335 [label="return null;", span="647-647", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_337 [label="ParseComment(false)", span="649-649", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_339 [label="ProcessValueComma()", span="652-652", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_341 [label="_charPos++", span="655-655", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_342 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="656-656", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_343 [label="SetToken(JsonToken.EndArray)", span="658-658", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_344 [label="return null;", span="659-659", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_347 [label="ProcessCarriageReturn(false)", span="663-663", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_349 [label="ProcessLineFeed()", span="666-666", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_351 [label="StringUtils.Tab", span="669-669", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_352 [label="_charPos++", span="671-671", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_357 [label="ReadFinished()", span="686-686", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_358 [label="return null;", span="687-687", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_360 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_931 [label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2315-2315", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs"];
m17_1225 [label="MatchValueWithTrailingSeparator(JsonConvert.False)", span="2317-2317", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs"];
m17_1226 [label="SetToken(JsonToken.Boolean, false)", span="2319-2319", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs"];
m17_1227 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2323-2323", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs"];
m17_1228 [label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2315-2315", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonValidatingReader.cs"];
m17_1106 [label="Entry System.Convert.ToInt64(string, int)", span="0-0", cluster="System.Convert.ToInt64(string, int)", file="JsonValidatingReader.cs"];
m17_372 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_373 [label="EnsureBuffer()", span="704-704", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_374 [label=_currentState, span="706-706", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_375 [label="State.Start", span="708-708", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_443 [label="State.Finished", span="809-809", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_446 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="813-813", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_376 [label="State.Property", span="709-709", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_377 [label="State.Array", span="710-710", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_378 [label="State.ArrayStart", span="711-711", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_379 [label="State.Constructor", span="712-712", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_380 [label="State.ConstructorStart", span="713-713", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_381 [label="State.PostValue", span="714-714", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_382 [label=true, span="715-715", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_383 [label="char currentChar = _chars[_charPos]", span="717-717", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_384 [label=currentChar, span="719-719", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_391 [label="ParseString(currentChar, ReadType.Read)", span="730-730", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_417 [label="bool isTrue = currentChar == 't'", span="763-763", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_432 [label="throw CreateUnexpectedCharacterException(currentChar);", span="785-785", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_441 [label="!char.IsWhiteSpace(currentChar)", span="800-800", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_442 [label="throw CreateUnexpectedCharacterException(currentChar);", span="802-802", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_385 [label="'\0'", span="721-721", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_389 [label="''''", span="728-728", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_393 [label="'n'", span="732-732", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_396 [label="'-'", span="735-735", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_415 [label="'t'", span="761-761", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_423 [label="'/'", span="772-772", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_425 [label="','", span="775-775", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_427 [label="']'", span="778-778", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_433 [label="StringUtils.CarriageReturn", span="786-786", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_435 [label="StringUtils.LineFeed", span="789-789", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_437 [label="' '", span="792-792", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_440 [label="_charPos++", span="798-798", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_386 [label="ReadNullChar()", span="722-722", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_387 [label="SetToken(JsonToken.None, null, false)", span="724-724", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_388 [label="return null;", span="725-725", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_390 [label="'\''", span="729-729", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_392 [label="return ReadBooleanString(_stringReference.ToString());", span="731-731", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_394 [label="HandleNull()", span="733-733", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_395 [label="return null;", span="734-734", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_397 [label="'.'", span="736-736", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_398 [label="'0'", span="737-737", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_399 [label="'1'", span="738-738", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_400 [label="'2'", span="739-739", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_401 [label="'3'", span="740-740", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_402 [label="'4'", span="741-741", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_403 [label="'5'", span="742-742", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_404 [label="'6'", span="743-743", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_405 [label="'7'", span="744-744", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_406 [label="'8'", span="745-745", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_407 [label="'9'", span="746-746", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_408 [label="ParseNumber(ReadType.Read)", span="747-747", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_409 [label="bool b", span="748-748", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_410 [label="Value is BigInteger", span="750-750", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_411 [label="b = (BigInteger)Value != 0", span="752-752", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_412 [label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="757-757", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_413 [label="SetToken(JsonToken.Boolean, b, false)", span="759-759", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_414 [label="return b;", span="760-760", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_416 [label="'f'", span="762-762", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_418 [label="string expected = isTrue ? JsonConvert.True : JsonConvert.False", span="764-764", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_421 [label="SetToken(JsonToken.Boolean, isTrue)", span="770-770", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_422 [label="return isTrue;", span="771-771", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_419 [label="!MatchValueWithTrailingSeparator(expected)", span="766-766", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_420 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="768-768", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_424 [label="ParseComment(false)", span="773-773", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_426 [label="ProcessValueComma()", span="776-776", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_428 [label="_charPos++", span="779-779", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_429 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="780-780", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_430 [label="SetToken(JsonToken.EndArray)", span="782-782", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_431 [label="return null;", span="783-783", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_434 [label="ProcessCarriageReturn(false)", span="787-787", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_436 [label="ProcessLineFeed()", span="790-790", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_438 [label="StringUtils.Tab", span="793-793", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_439 [label="_charPos++", span="795-795", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_444 [label="ReadFinished()", span="810-810", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_445 [label="return null;", span="811-811", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_447 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="702-702", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="JsonValidatingReader.cs"];
m17_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonValidatingReader.cs"];
m17_670 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", span="70-70", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", file="JsonValidatingReader.cs"];
m17_686 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_687 [label="int charPos = _charPos", span="1244-1244", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_688 [label=true, span="1246-1246", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_689 [label="_chars[charPos]", span="1248-1248", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_691 [label="_charPos = charPos", span="1251-1251", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_692 [label="_charsUsed == charPos", span="1253-1253", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_723 [label="charPos++", span="1292-1292", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_690 [label="'\0'", span="1250-1250", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_696 [label="'-'", span="1265-1265", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_724 [label="_charPos = charPos", span="1295-1295", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_693 [label="ReadData(true) == 0", span="1255-1255", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_695 [label="return;", span="1262-1262", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_694 [label="return;", span="1257-1257", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_697 [label="'+'", span="1266-1266", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_698 [label="'a'", span="1267-1267", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_699 [label="'A'", span="1268-1268", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_700 [label="'b'", span="1269-1269", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_701 [label="'B'", span="1270-1270", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_702 [label="'c'", span="1271-1271", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_703 [label="'C'", span="1272-1272", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_704 [label="'d'", span="1273-1273", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_705 [label="'D'", span="1274-1274", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_706 [label="'e'", span="1275-1275", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_707 [label="'E'", span="1276-1276", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_708 [label="'f'", span="1277-1277", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_709 [label="'F'", span="1278-1278", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_710 [label="'x'", span="1279-1279", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_711 [label="'X'", span="1280-1280", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_712 [label="'.'", span="1281-1281", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_713 [label="'0'", span="1282-1282", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_714 [label="'1'", span="1283-1283", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_715 [label="'2'", span="1284-1284", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_716 [label="'3'", span="1285-1285", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_717 [label="'4'", span="1286-1286", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_718 [label="'5'", span="1287-1287", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_719 [label="'6'", span="1288-1288", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_720 [label="'7'", span="1289-1289", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_721 [label="'8'", span="1290-1290", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_722 [label="'9'", span="1291-1291", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_725 [label="char currentChar = _chars[_charPos]", span="1297-1297", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_726 [label="char.IsWhiteSpace(currentChar) || currentChar == ',' || currentChar == '}' || currentChar == ']' || currentChar == ')' || currentChar == '/'", span="1298-1298", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_728 [label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing number: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1303-1303", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_727 [label="return;", span="1300-1300", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_729 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1242-1242", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonValidatingReader.cs"];
m17_258 [label="Entry Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_546 [label="EnsureChars(1, true)", span="976-976", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_547 [label="char next = _chars[_charPos + 1]", span="978-978", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_553 [label="_charPos = _charsUsed", span="990-990", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_548 [label="next == 'u'", span="980-980", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_549 [label="ParseNull()", span="982-982", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_551 [label="_charPos += 2", span="986-986", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_550 [label="return;", span="983-983", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_552 [label="throw CreateUnexpectedCharacterException(_chars[_charPos - 1]);", span="987-987", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_554 [label="throw CreateUnexpectedEndException();", span="991-991", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_555 [label="Exit Newtonsoft.Json.JsonTextReader.HandleNull()", span="974-974", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="JsonValidatingReader.cs"];
m17_174 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="946-946", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonValidatingReader.cs"];
m17_933 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2303-2303", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs"];
m17_1221 [label="MatchValueWithTrailingSeparator(JsonConvert.Undefined)", span="2305-2305", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs"];
m17_1222 [label="SetToken(JsonToken.Undefined)", span="2307-2307", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs"];
m17_1223 [label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="2311-2311", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs"];
m17_1224 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2303-2303", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonValidatingReader.cs"];
m17_666 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="269-269", cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="JsonValidatingReader.cs"];
m17_1170 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2196-2196", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1171 [label="!EnsureChars(value.Length - 1, true)", span="2198-2198", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1175 [label="i < value.Length", span="2204-2204", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1176 [label="_chars[_charPos + i] != value[i]", span="2206-2206", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1180 [label="_charPos += value.Length", span="2213-2213", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1172 [label="_charPos = _charsUsed", span="2200-2200", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1174 [label="int i = 0", span="2204-2204", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1173 [label="throw CreateUnexpectedEndException();", span="2201-2201", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1177 [label="_charPos += i", span="2208-2208", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1179 [label="i++", span="2204-2204", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1178 [label="return false;", span="2209-2209", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1181 [label="return true;", span="2215-2215", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_1182 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2196-2196", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonValidatingReader.cs"];
m17_537 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs"];
m17_538 [label="return (DateTimeOffset?)ReadStringValue(ReadType.ReadAsDateTimeOffset);", span="952-952", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs"];
m17_539 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="950-950", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonValidatingReader.cs"];
m17_540 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonValidatingReader.cs"];
m17_541 [label="return (decimal?)ReadNumberValue(ReadType.ReadAsDecimal);", span="962-962", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonValidatingReader.cs"];
m17_542 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="960-960", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonValidatingReader.cs"];
m17_361 [label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="808-808", cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="JsonValidatingReader.cs"];
m17_7 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonValidatingReader.cs"];
m17_449 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="JsonValidatingReader.cs"];
m17_119 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonValidatingReader.cs"];
m17_72 [label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="JsonValidatingReader.cs"];
m17_366 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2218-2218", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs"];
m17_1183 [label="bool match = MatchValue(value)", span="2221-2221", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs"];
m17_1184 [label="!match", span="2223-2223", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs"];
m17_1185 [label="return false;", span="2225-2225", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs"];
m17_1186 [label="!EnsureChars(0, false)", span="2228-2228", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs"];
m17_1187 [label="return true;", span="2230-2230", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs"];
m17_1188 [label="return IsSeparator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="2233-2233", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs"];
m17_1189 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2218-2218", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonValidatingReader.cs"];
m17_368 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2352-2352", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1242 [label="MatchValueWithTrailingSeparator(JsonConvert.PositiveInfinity)", span="2354-2354", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1243 [label=readType, span="2356-2356", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1253 [label="throw JsonReaderException.Create(this, ''Error parsing Infinity value.'');", span="2374-2374", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1244 [label="ReadType.Read", span="2358-2358", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1249 [label="ReadType.ReadAsString", span="2366-2366", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1245 [label="ReadType.ReadAsDouble", span="2359-2359", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1246 [label="_floatParseHandling == FloatParseHandling.Double", span="2360-2360", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1247 [label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="2362-2362", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1252 [label="throw JsonReaderException.Create(this, ''Cannot read Infinity value.'');", span="2371-2371", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1248 [label="return double.PositiveInfinity;", span="2363-2363", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1250 [label="SetToken(JsonToken.String, JsonConvert.PositiveInfinity)", span="2367-2367", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1251 [label="return JsonConvert.PositiveInfinity;", span="2368-2368", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1254 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", span="2352-2352", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1278 [label="Entry System.IO.TextReader.Close()", span="0-0", cluster="System.IO.TextReader.Close()", file="JsonValidatingReader.cs"];
m17_262 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonValidatingReader.cs"];
m17_935 [label="_charPos++", span="1668-1668", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonValidatingReader.cs"];
m17_936 [label="OnNewLine(_charPos)", span="1669-1669", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonValidatingReader.cs"];
m17_937 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1666-1666", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonValidatingReader.cs"];
m17_369 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2377-2377", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1255 [label="MatchValueWithTrailingSeparator(JsonConvert.NaN)", span="2379-2379", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1256 [label=readType, span="2381-2381", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1266 [label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="2399-2399", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1257 [label="ReadType.Read", span="2383-2383", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1262 [label="ReadType.ReadAsString", span="2391-2391", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1258 [label="ReadType.ReadAsDouble", span="2384-2384", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1259 [label="_floatParseHandling == FloatParseHandling.Double", span="2385-2385", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1260 [label="SetToken(JsonToken.Float, double.NaN)", span="2387-2387", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1265 [label="throw JsonReaderException.Create(this, ''Cannot read NaN value.'');", span="2396-2396", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1261 [label="return double.NaN;", span="2388-2388", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1263 [label="SetToken(JsonToken.String, JsonConvert.NaN)", span="2392-2392", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1264 [label="return JsonConvert.NaN;", span="2393-2393", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1267 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", span="2377-2377", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_0 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs"];
m17_1 [label="reader == null", span="80-80", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs"];
m17_2 [label="throw new ArgumentNullException(nameof(reader));", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs"];
m17_3 [label="_reader = reader", span="85-85", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs"];
m17_4 [label="_lineNumber = 1", span="86-86", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs"];
m17_5 [label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonValidatingReader.cs"];
m17_1165 [label="Entry Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2188-2188", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonValidatingReader.cs"];
m17_1166 [label=setToken, span="2190-2190", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonValidatingReader.cs"];
m17_1167 [label="SetToken(JsonToken.Comment, new string(_chars, initialPosition, endPosition - initialPosition))", span="2192-2192", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonValidatingReader.cs"];
m17_1168 [label="Exit Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2188-2188", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="JsonValidatingReader.cs"];
m17_66 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="343-343", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="JsonValidatingReader.cs"];
m17_116 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="JsonValidatingReader.cs"];
m17_1279 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", span="82-82", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", file="JsonValidatingReader.cs"];
m17_535 [label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="758-758", cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="JsonValidatingReader.cs"];
m17_1190 [label="Entry Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2236-2236", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1191 [label=c, span="2238-2238", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1209 [label="char.IsWhiteSpace(c)", span="2266-2266", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1192 [label="'}'", span="2240-2240", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1196 [label="'/'", span="2244-2244", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1201 [label="')'", span="2254-2254", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1204 [label="' '", span="2260-2260", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1193 [label="']'", span="2241-2241", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1194 [label="','", span="2242-2242", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1195 [label="return true;", span="2243-2243", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1197 [label="!EnsureChars(1, false)", span="2246-2246", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1198 [label="return false;", span="2248-2248", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1199 [label="var nextChart = _chars[_charPos + 1]", span="2251-2251", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1200 [label="return (nextChart == '*' || nextChart == '/');", span="2253-2253", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1202 [label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="2255-2255", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1203 [label="return true;", span="2257-2257", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1211 [label="return false;", span="2273-2273", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1205 [label="StringUtils.Tab", span="2261-2261", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1206 [label="StringUtils.LineFeed", span="2262-2262", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1207 [label="StringUtils.CarriageReturn", span="2263-2263", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1208 [label="return true;", span="2264-2264", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1210 [label="return true;", span="2268-2268", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_1212 [label="Exit Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2236-2236", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonValidatingReader.cs"];
m17_13 [label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonValidatingReader.cs"];
m17_14 [label="_lineNumber++", span="123-123", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonValidatingReader.cs"];
m17_15 [label="_lineStartPos = pos", span="124-124", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonValidatingReader.cs"];
m17_16 [label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonValidatingReader.cs"];
m17_1113 [label="Entry System.Convert.ToDouble(long)", span="0-0", cluster="System.Convert.ToDouble(long)", file="JsonValidatingReader.cs"];
m17_176 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonValidatingReader.cs"];
m17_734 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="29-29", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="JsonValidatingReader.cs"];
m17_256 [label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="903-903", cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="JsonValidatingReader.cs"];
m17_536 [label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="647-647", cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="JsonValidatingReader.cs"];
m17_12 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonValidatingReader.cs"];
m17_67 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="416-416", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="JsonValidatingReader.cs"];
m17_261 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs"];
m17_938 [label="_charPos++", span="1674-1674", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs"];
m17_939 [label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1676-1676", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs"];
m17_940 [label="_charPos++", span="1678-1678", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs"];
m17_941 [label="OnNewLine(_charPos)", span="1681-1681", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs"];
m17_942 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1672-1672", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonValidatingReader.cs"];
m17_125 [label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_126 [label=_isEndOfFile, span="329-329", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_128 [label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="334-334", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_130 [label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="342-342", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_127 [label="return false;", span="331-331", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_129 [label="int totalCharsRead = 0", span="336-336", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_133 [label="totalCharsRead < charsRequired", span="351-351", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_134 [label="totalCharsRead < charsRequired", span="353-353", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_132 [label="totalCharsRead += charsRead", span="350-350", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_131 [label="charsRead == 0", span="345-345", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_135 [label="return false;", span="355-355", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_136 [label="return true;", span="357-357", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_137 [label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonValidatingReader.cs"];
m17_1104 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="JsonValidatingReader.cs"];
m17_255 [label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="890-890", cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="JsonValidatingReader.cs"];
m17_930 [label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2276-2276", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs"];
m17_1213 [label="MatchValueWithTrailingSeparator(JsonConvert.True)", span="2281-2281", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs"];
m17_1214 [label="SetToken(JsonToken.Boolean, true)", span="2283-2283", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs"];
m17_1215 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2287-2287", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs"];
m17_1216 [label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2276-2276", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonValidatingReader.cs"];
m17_62 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="1359-1359", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="JsonValidatingReader.cs"];
m17_8 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonValidatingReader.cs"];
m17_9 [label="_stringBuffer.IsEmpty", span="115-115", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonValidatingReader.cs"];
m17_10 [label="_stringBuffer = new StringBuffer(_arrayPool, 1024)", span="117-117", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonValidatingReader.cs"];
m17_11 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="JsonValidatingReader.cs"];
m17_1109 [label="Entry System.Convert.ToInt32(string, int)", span="0-0", cluster="System.Convert.ToInt32(string, int)", file="JsonValidatingReader.cs"];
m17_1169 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="JsonValidatingReader.cs"];
m17_68 [label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonValidatingReader.cs"];
m17_69 [label="int charByteCount = 2", span="215-215", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonValidatingReader.cs"];
m17_70 [label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="217-217", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonValidatingReader.cs"];
m17_71 [label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonValidatingReader.cs"];
m17_685 [label="Entry System.Convert.ToChar(int)", span="0-0", cluster="System.Convert.ToChar(int)", file="JsonValidatingReader.cs"];
m17_58 [label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_73 [label="int length = _chars.Length", span="224-224", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_74 [label="length - _charPos <= length * 0.1", span="225-225", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_75 [label="int count = _charsUsed - _charPos", span="227-227", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_76 [label="count > 0", span="228-228", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_77 [label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="230-230", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_80 [label="_charsUsed = count", span="235-235", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_78 [label="_lineStartPos -= _charPos", span="233-233", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_79 [label="_charPos = 0", span="234-234", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_81 [label="_chars[_charsUsed] = '\0'", span="236-236", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_82 [label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonValidatingReader.cs"];
m17_260 [label="Entry Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonValidatingReader.cs"];
m17_370 [label="return JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, c));", span="695-695", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonValidatingReader.cs"];
m17_371 [label="Exit Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="693-693", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="JsonValidatingReader.cs"];
m17_177 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonValidatingReader.cs"];
m17_1107 [label="Entry Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", span="2078-2078", cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonValidatingReader.cs"];
m17_1117 [label="SetToken(JsonToken.Undefined, null, false)", span="2080-2080", cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonValidatingReader.cs"];
m17_1118 [label="return JsonReaderException.Create(this, message, ex);", span="2081-2081", cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonValidatingReader.cs"];
m17_1119 [label="Exit Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", span="2078-2078", cluster="Newtonsoft.Json.JsonTextReader.ThrowReaderError(string, System.Exception)", file="JsonValidatingReader.cs"];
m17_730 [label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonValidatingReader.cs"];
m17_731 [label="_stringBuffer.Position = 0", span="1310-1310", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonValidatingReader.cs"];
m17_732 [label="_stringReference = new StringReference()", span="1311-1311", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonValidatingReader.cs"];
m17_733 [label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1308-1308", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonValidatingReader.cs"];
m17_264 [label="Entry Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_558 [label="EnsureChars(0, false)", span="996-996", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_559 [label="EatWhitespace(false)", span="998-998", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_565 [label="SetToken(JsonToken.None)", span="1013-1013", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_560 [label=_isEndOfFile, span="999-999", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_561 [label="return;", span="1001-1001", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_562 [label="_chars[_charPos] == '/'", span="1003-1003", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_563 [label="ParseComment(false)", span="1005-1005", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_564 [label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1009-1009", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_566 [label="Exit Newtonsoft.Json.JsonTextReader.ReadFinished()", span="994-994", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="JsonValidatingReader.cs"];
m17_64 [label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0", cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonValidatingReader.cs"];
m17_175 [label="Entry Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2096-2096", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1124 [label="_charPos++", span="2099-2099", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1142 [label="EndComment(setToken, initialPosition, _charPos)", span="2139-2139", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1150 [label="EndComment(setToken, initialPosition, _charPos - 1)", span="2157-2157", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1155 [label="EndComment(setToken, initialPosition, _charPos)", span="2168-2168", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1160 [label="EndComment(setToken, initialPosition, _charPos)", span="2176-2176", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1125 [label="!EnsureChars(1, false)", span="2101-2101", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1126 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2103-2103", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1127 [label="bool singlelineComment", span="2106-2106", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1128 [label="_chars[_charPos] == '*'", span="2108-2108", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1140 [label="!singlelineComment", span="2134-2134", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1147 [label="!singlelineComment", span="2151-2151", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1154 [label=singlelineComment, span="2166-2166", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1159 [label=singlelineComment, span="2174-2174", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1129 [label="singlelineComment = false", span="2110-2110", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1130 [label="_chars[_charPos] == '/'", span="2112-2112", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1131 [label="singlelineComment = true", span="2114-2114", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1132 [label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="2118-2118", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1133 [label="_charPos++", span="2121-2121", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1134 [label="int initialPosition = _charPos", span="2123-2123", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1135 [label=true, span="2125-2125", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1136 [label="_chars[_charPos]", span="2127-2127", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1137 [label="'\0'", span="2129-2129", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1145 [label="'*'", span="2148-2148", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1153 [label="StringUtils.CarriageReturn", span="2165-2165", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1158 [label="StringUtils.LineFeed", span="2173-2173", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1163 [label="_charPos++", span="2182-2182", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1138 [label="_charsUsed == _charPos", span="2130-2130", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1139 [label="ReadData(true) == 0", span="2132-2132", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1144 [label="_charPos++", span="2145-2145", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1141 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2136-2136", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1143 [label="return;", span="2140-2140", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1146 [label="_charPos++", span="2149-2149", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1148 [label="EnsureChars(0, true)", span="2153-2153", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1149 [label="_chars[_charPos] == '/'", span="2155-2155", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1151 [label="_charPos++", span="2159-2159", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1152 [label="return;", span="2160-2160", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1157 [label="ProcessCarriageReturn(true)", span="2171-2171", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1156 [label="return;", span="2169-2169", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1162 [label="ProcessLineFeed()", span="2179-2179", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1161 [label="return;", span="2177-2177", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_1164 [label="Exit Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2096-2096", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="JsonValidatingReader.cs"];
m17_60 [label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="1008-1008", cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonValidatingReader.cs"];
m17_1108 [label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0", cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonValidatingReader.cs"];
m17_59 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_578 [label="int charPos = _charPos", span="1045-1045", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_589 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1062-1062", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_593 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1070-1070", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_653 [label="_chars[charPos - 1] == quote", span="1186-1186", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_579 [label="int initialPosition = _charPos", span="1046-1046", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_583 [label="_chars[charPos++]", span="1052-1052", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_580 [label="int lastWritePosition = _charPos", span="1047-1047", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_655 [label="initialPosition == lastWritePosition", span="1190-1190", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_656 [label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="1192-1192", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_581 [label="_stringBuffer.Position = 0", span="1048-1048", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_633 [label="WriteCharToBuffer(highSurrogate, lastWritePosition, escapeStartPos)", span="1150-1150", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_641 [label="WriteCharToBuffer(writeChar, lastWritePosition, escapeStartPos)", span="1170-1170", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_582 [label=true, span="1050-1050", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_584 [label="'\0'", span="1054-1054", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_590 [label="'\\'", span="1066-1066", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_643 [label="StringUtils.CarriageReturn", span="1174-1174", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_647 [label="StringUtils.LineFeed", span="1179-1179", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_651 [label="''''", span="1184-1184", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_585 [label="_charsUsed == charPos - 1", span="1055-1055", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_586 [label="charPos--", span="1057-1057", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_591 [label="_charPos = charPos", span="1067-1067", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_594 [label="int escapeStartPos = charPos - 1", span="1074-1074", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_595 [label="char currentChar = _chars[charPos]", span="1076-1076", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_596 [label="charPos++", span="1077-1077", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_587 [label="ReadData(true) == 0", span="1059-1059", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_588 [label="_charPos = charPos", span="1061-1061", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_592 [label="!EnsureChars(0, true)", span="1068-1068", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_598 [label=currentChar, span="1081-1081", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_614 [label="writeChar = currentChar", span="1104-1104", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_639 [label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="1166-1166", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_597 [label="char writeChar", span="1079-1079", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_616 [label="_charPos = charPos", span="1107-1107", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_599 [label="'b'", span="1083-1083", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_601 [label="'t'", span="1086-1086", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_603 [label="'n'", span="1089-1089", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_605 [label="'f'", span="1092-1092", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_607 [label="'r'", span="1095-1095", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_609 [label="'\\'", span="1098-1098", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_611 [label="''''", span="1101-1101", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_615 [label="'u'", span="1106-1106", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_638 [label="_charPos = charPos", span="1165-1165", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_600 [label="writeChar = '\b'", span="1084-1084", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_602 [label="writeChar = '\t'", span="1087-1087", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_604 [label="writeChar = '\n'", span="1090-1090", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_606 [label="writeChar = '\f'", span="1093-1093", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_608 [label="writeChar = '\r'", span="1096-1096", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_610 [label="writeChar = '\\'", span="1099-1099", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_612 [label="'\''", span="1102-1102", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_613 [label="'/'", span="1103-1103", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_617 [label="writeChar = ParseUnicode()", span="1108-1108", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_618 [label="StringUtils.IsLowSurrogate(writeChar)", span="1110-1110", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_620 [label="StringUtils.IsHighSurrogate(writeChar)", span="1115-1115", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_624 [label="char highSurrogate = writeChar", span="1127-1127", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_619 [label="writeChar = UnicodeReplacementChar", span="1113-1113", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_621 [label="bool anotherHighSurrogate", span="1117-1117", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_637 [label="charPos = _charPos", span="1162-1162", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_622 [label="anotherHighSurrogate = false", span="1122-1122", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_623 [label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="1125-1125", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_636 [label=anotherHighSurrogate, span="1159-1159", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_635 [label="writeChar = UnicodeReplacementChar", span="1157-1157", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_625 [label="_charPos += 2", span="1129-1129", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_626 [label="writeChar = ParseUnicode()", span="1130-1130", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_627 [label="StringUtils.IsLowSurrogate(writeChar)", span="1132-1132", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_628 [label="StringUtils.IsHighSurrogate(writeChar)", span="1136-1136", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_632 [label="EnsureBufferNotEmpty()", span="1148-1148", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_629 [label="highSurrogate = UnicodeReplacementChar", span="1139-1139", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_631 [label="highSurrogate = UnicodeReplacementChar", span="1145-1145", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_630 [label="anotherHighSurrogate = true", span="1140-1140", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_634 [label="lastWritePosition = _charPos", span="1151-1151", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_640 [label="EnsureBufferNotEmpty()", span="1169-1169", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_642 [label="lastWritePosition = charPos", span="1172-1172", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_644 [label="_charPos = charPos - 1", span="1175-1175", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_645 [label="ProcessCarriageReturn(true)", span="1176-1176", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_646 [label="charPos = _charPos", span="1177-1177", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_648 [label="_charPos = charPos - 1", span="1180-1180", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_649 [label="ProcessLineFeed()", span="1181-1181", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_650 [label="charPos = _charPos", span="1182-1182", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_652 [label="'\''", span="1185-1185", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_654 [label="charPos--", span="1188-1188", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_658 [label="charPos > lastWritePosition", span="1198-1198", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_659 [label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, charPos - lastWritePosition)", span="1200-1200", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_661 [label="charPos++", span="1206-1206", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_657 [label="EnsureBufferNotEmpty()", span="1196-1196", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_660 [label="_stringReference = new StringReference(_stringBuffer.InternalBuffer, 0, _stringBuffer.Position)", span="1203-1203", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_662 [label="_charPos = charPos", span="1207-1207", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_663 [label="return;", span="1208-1208", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_664 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1043-1043", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonValidatingReader.cs"];
m17_172 [label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_735 [label=true, span="1316-1316", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_736 [label="char currentChar = _chars[_charPos]", span="1318-1318", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_737 [label=currentChar, span="1320-1320", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_770 [label="char.IsWhiteSpace(currentChar)", span="1369-1369", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_772 [label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1376-1376", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_738 [label="'\0'", span="1322-1322", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_744 [label="'}'", span="1336-1336", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_748 [label="']'", span="1340-1340", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_752 [label="')'", span="1344-1344", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_756 [label="'/'", span="1348-1348", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_759 [label="','", span="1351-1351", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_763 [label="' '", span="1357-1357", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_766 [label="StringUtils.CarriageReturn", span="1362-1362", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_768 [label="StringUtils.LineFeed", span="1365-1365", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_739 [label="_charsUsed == _charPos", span="1323-1323", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_740 [label="ReadData(false) == 0", span="1325-1325", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_743 [label="_charPos++", span="1333-1333", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_741 [label="_currentState = State.Finished", span="1327-1327", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_742 [label="return false;", span="1328-1328", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_745 [label="_charPos++", span="1337-1337", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_746 [label="SetToken(JsonToken.EndObject)", span="1338-1338", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_747 [label="return true;", span="1339-1339", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_749 [label="_charPos++", span="1341-1341", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_750 [label="SetToken(JsonToken.EndArray)", span="1342-1342", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_751 [label="return true;", span="1343-1343", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_753 [label="_charPos++", span="1345-1345", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_754 [label="SetToken(JsonToken.EndConstructor)", span="1346-1346", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_755 [label="return true;", span="1347-1347", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_757 [label="ParseComment(true)", span="1349-1349", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_758 [label="return true;", span="1350-1350", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_760 [label="_charPos++", span="1352-1352", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_761 [label="SetStateBasedOnCurrent()", span="1355-1355", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_762 [label="return false;", span="1356-1356", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_764 [label="StringUtils.Tab", span="1358-1358", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_765 [label="_charPos++", span="1360-1360", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_767 [label="ProcessCarriageReturn(false)", span="1363-1363", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_769 [label="ProcessLineFeed()", span="1366-1366", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_771 [label="_charPos++", span="1372-1372", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_773 [label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1314-1314", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonValidatingReader.cs"];
m17_254 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs"];
m17_567 [label="_charsUsed == _charPos", span="1018-1018", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs"];
m17_568 [label="ReadData(false) == 0", span="1020-1020", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs"];
m17_571 [label="_charPos++", span="1028-1028", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs"];
m17_569 [label="_isEndOfFile = true", span="1022-1022", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs"];
m17_572 [label="return false;", span="1031-1031", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs"];
m17_570 [label="return true;", span="1023-1023", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs"];
m17_573 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="1016-1016", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="JsonValidatingReader.cs"];
m17_61 [label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="62-62", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonValidatingReader.cs"];
m17_1116 [label="Entry Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2090-2090", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonValidatingReader.cs"];
m17_1121 [label="return System.Numerics.BigInteger.Parse(number, culture);", span="2092-2092", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonValidatingReader.cs"];
m17_1122 [label="Exit Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2090-2090", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonValidatingReader.cs"];
m17_833 [label="Entry char.IsLetterOrDigit(char)", span="0-0", cluster="char.IsLetterOrDigit(char)", file="JsonValidatingReader.cs"];
m17_534 [label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="442-442", cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="JsonValidatingReader.cs"];
m17_173 [label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_943 [label="bool finished = false", span="1686-1686", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_961 [label="return (!oneOrMore || ateWhitespace);", span="1727-1727", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_944 [label="bool ateWhitespace = false", span="1687-1687", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_945 [label="!finished", span="1688-1688", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_946 [label="char currentChar = _chars[_charPos]", span="1690-1690", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_947 [label=currentChar, span="1692-1692", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_957 [label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1714-1714", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_948 [label="'\0'", span="1694-1694", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_953 [label="StringUtils.CarriageReturn", span="1707-1707", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_955 [label="StringUtils.LineFeed", span="1710-1710", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_949 [label="_charsUsed == _charPos", span="1695-1695", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_950 [label="ReadData(false) == 0", span="1697-1697", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_952 [label="_charPos++", span="1704-1704", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_951 [label="finished = true", span="1699-1699", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_954 [label="ProcessCarriageReturn(false)", span="1708-1708", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_956 [label="ProcessLineFeed()", span="1711-1711", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_958 [label="ateWhitespace = true", span="1716-1716", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_960 [label="finished = true", span="1721-1721", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_959 [label="_charPos++", span="1717-1717", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_962 [label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1684-1684", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonValidatingReader.cs"];
m17_934 [label="Entry char.IsNumber(char)", span="0-0", cluster="char.IsNumber(char)", file="JsonValidatingReader.cs"];
m17_257 [label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="582-582", cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="JsonValidatingReader.cs"];
m17_120 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs"];
m17_121 [label="_charPos + relativePosition >= _charsUsed", span="319-319", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs"];
m17_122 [label="return ReadChars(relativePosition, append);", span="321-321", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs"];
m17_123 [label="return true;", span="324-324", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs"];
m17_124 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonValidatingReader.cs"];
m17_182 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonValidatingReader.cs"];
m17_183 [label="return (DateTime?)ReadStringValue(ReadType.ReadAsDateTime);", span="432-432", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonValidatingReader.cs"];
m17_184 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonValidatingReader.cs"];
m17_117 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43", cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="JsonValidatingReader.cs"];
m17_86 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_87 [label=_isEndOfFile, span="247-247", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_89 [label="_charsUsed + charsRequired >= _chars.Length - 1", span="253-253", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_90 [label=append, span="255-255", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_91 [label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="258-258", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_97 [label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="273-273", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_98 [label="char[] dst = BufferUtils.RentBuffer(_arrayPool, remainingCharCount + charsRequired + 1)", span="276-276", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_88 [label="return 0;", span="249-249", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_108 [label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="302-302", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_96 [label="int remainingCharCount = _charsUsed - _charPos", span="271-271", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_92 [label="char[] dst = BufferUtils.RentBuffer(_arrayPool, newArrayLength)", span="261-261", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_93 [label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="263-263", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_95 [label="_chars = dst", span="267-267", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_94 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="265-265", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_99 [label="remainingCharCount > 0", span="278-278", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_100 [label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="280-280", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_103 [label="remainingCharCount > 0", span="290-290", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_104 [label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="292-292", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_107 [label="_charsUsed = remainingCharCount", span="298-298", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_102 [label="_chars = dst", span="285-285", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_101 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="283-283", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_105 [label="_lineStartPos -= _charPos", span="296-296", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_106 [label="_charPos = 0", span="297-297", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_109 [label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="304-304", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_110 [label="_charsUsed += charsRead", span="306-306", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_111 [label="charsRead == 0", span="308-308", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_114 [label="return charsRead;", span="314-314", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_112 [label="_isEndOfFile = true", span="310-310", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_113 [label="_chars[_charsUsed] = '\0'", span="313-313", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_115 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonValidatingReader.cs"];
m17_63 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="JsonValidatingReader.cs"];
m17_456 [label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1055-1055", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonValidatingReader.cs"];
m17_363 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="JsonValidatingReader.cs"];
m17_65 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="961-961", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonValidatingReader.cs"];
m17_259 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs"];
m17_450 [label="_charPos++", span="819-819", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs"];
m17_451 [label="_currentState != State.PostValue", span="821-821", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs"];
m17_452 [label="SetToken(JsonToken.Undefined)", span="823-823", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs"];
m17_454 [label="SetStateBasedOnCurrent()", span="827-827", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs"];
m17_453 [label="throw CreateUnexpectedCharacterException(',');", span="824-824", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs"];
m17_455 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="817-817", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="JsonValidatingReader.cs"];
m17_665 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs"];
m17_676 [label="char writeChar", span="1227-1227", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs"];
m17_677 [label="EnsureChars(4, true)", span="1228-1228", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs"];
m17_682 [label="return writeChar;", span="1239-1239", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs"];
m17_678 [label="char hexChar = Convert.ToChar(ConvertUtils.HexTextToInt(_chars, _charPos, _charPos + 4))", span="1230-1230", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs"];
m17_681 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="1237-1237", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs"];
m17_679 [label="writeChar = hexChar", span="1231-1231", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs"];
m17_680 [label="_charPos += 4", span="1233-1233", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs"];
m17_683 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1225-1225", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonValidatingReader.cs"];
m17_170 [label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_851 [label=true, span="1541-1541", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_852 [label="char currentChar = _chars[_charPos]", span="1543-1543", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_853 [label=currentChar, span="1545-1545", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_861 [label="ParseString(currentChar, ReadType.Read)", span="1562-1562", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_923 [label="char.IsWhiteSpace(currentChar)", span="1649-1649", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_925 [label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1655-1655", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_928 [label="throw CreateUnexpectedCharacterException(currentChar);", span="1661-1661", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_854 [label="'\0'", span="1547-1547", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_859 [label="''''", span="1560-1560", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_863 [label="'t'", span="1564-1564", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_866 [label="'f'", span="1567-1567", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_869 [label="'n'", span="1570-1570", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_880 [label="'N'", span="1594-1594", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_883 [label="'I'", span="1597-1597", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_886 [label="'-'", span="1600-1600", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_891 [label="'/'", span="1610-1610", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_894 [label="'u'", span="1613-1613", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_897 [label="'{'", span="1616-1616", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_901 [label="'['", span="1620-1620", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_905 [label="']'", span="1624-1624", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_909 [label="','", span="1628-1628", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_912 [label="')'", span="1633-1633", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_916 [label="StringUtils.CarriageReturn", span="1637-1637", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_918 [label="StringUtils.LineFeed", span="1640-1640", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_920 [label="' '", span="1643-1643", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_855 [label="_charsUsed == _charPos", span="1548-1548", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_856 [label="ReadData(false) == 0", span="1550-1550", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_858 [label="_charPos++", span="1557-1557", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_857 [label="return false;", span="1552-1552", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_860 [label="'\''", span="1561-1561", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_862 [label="return true;", span="1563-1563", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_864 [label="ParseTrue()", span="1565-1565", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_865 [label="return true;", span="1566-1566", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_867 [label="ParseFalse()", span="1568-1568", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_868 [label="return true;", span="1569-1569", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_870 [label="EnsureChars(1, true)", span="1571-1571", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_871 [label="char next = _chars[_charPos + 1]", span="1573-1573", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_877 [label="_charPos++", span="1590-1590", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_872 [label="next == 'u'", span="1575-1575", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_874 [label="next == 'e'", span="1579-1579", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_873 [label="ParseNull()", span="1577-1577", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_875 [label="ParseConstructor()", span="1581-1581", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_876 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="1585-1585", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_878 [label="throw CreateUnexpectedEndException();", span="1591-1591", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_879 [label="return true;", span="1593-1593", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_881 [label="ParseNumberNaN(ReadType.Read)", span="1595-1595", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_882 [label="return true;", span="1596-1596", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_884 [label="ParseNumberPositiveInfinity(ReadType.Read)", span="1598-1598", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_885 [label="return true;", span="1599-1599", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_887 [label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="1601-1601", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_888 [label="ParseNumberNegativeInfinity(ReadType.Read)", span="1603-1603", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_889 [label="ParseNumber(ReadType.Read)", span="1607-1607", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_890 [label="return true;", span="1609-1609", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_892 [label="ParseComment(true)", span="1611-1611", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_893 [label="return true;", span="1612-1612", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_895 [label="ParseUndefined()", span="1614-1614", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_896 [label="return true;", span="1615-1615", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_898 [label="_charPos++", span="1617-1617", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_899 [label="SetToken(JsonToken.StartObject)", span="1618-1618", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_900 [label="return true;", span="1619-1619", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_902 [label="_charPos++", span="1621-1621", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_903 [label="SetToken(JsonToken.StartArray)", span="1622-1622", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_904 [label="return true;", span="1623-1623", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_906 [label="_charPos++", span="1625-1625", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_907 [label="SetToken(JsonToken.EndArray)", span="1626-1626", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_908 [label="return true;", span="1627-1627", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_910 [label="SetToken(JsonToken.Undefined)", span="1631-1631", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_911 [label="return true;", span="1632-1632", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_913 [label="_charPos++", span="1634-1634", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_914 [label="SetToken(JsonToken.EndConstructor)", span="1635-1635", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_915 [label="return true;", span="1636-1636", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_917 [label="ProcessCarriageReturn(false)", span="1638-1638", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_919 [label="ProcessLineFeed()", span="1641-1641", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_921 [label="StringUtils.Tab", span="1644-1644", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_922 [label="_charPos++", span="1646-1646", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_924 [label="_charPos++", span="1652-1652", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_926 [label="ParseNumber(ReadType.Read)", span="1657-1657", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_927 [label="return true;", span="1658-1658", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_929 [label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="1539-1539", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonValidatingReader.cs"];
m17_365 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_999 [label="ShiftBufferIfNeeded()", span="1815-1815", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1009 [label="readType == ReadType.ReadAsString", span="1833-1833", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1022 [label="readType == ReadType.ReadAsInt32", span="1868-1868", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1039 [label="readType == ReadType.ReadAsDecimal", span="1910-1910", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1054 [label="readType == ReadType.ReadAsDouble", span="1950-1950", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1000 [label="char firstChar = _chars[_charPos]", span="1817-1817", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1001 [label="int initialPosition = _charPos", span="1818-1818", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1007 [label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1830-1830", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1008 [label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1 && _stringReference.Chars[_stringReference.StartIndex + 1] != '.' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1831-1831", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1024 [label="numberValue = firstChar - 48", span="1873-1873", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1041 [label="numberValue = (decimal)firstChar - 48", span="1915-1915", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1056 [label="numberValue = (double)firstChar - 48", span="1955-1955", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1070 [label="numberValue = (long)firstChar - 48", span="1994-1994", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1002 [label="ReadNumberIntoBuffer()", span="1820-1820", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1004 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1825-1825", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1003 [label="SetPostValueState(true)", span="1823-1823", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1005 [label="object numberValue", span="1827-1827", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1006 [label="JsonToken numberType", span="1828-1828", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1102 [label="SetToken(numberType, numberValue, false)", span="2075-2075", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1023 [label=singleDigit, span="1870-1870", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1040 [label=singleDigit, span="1912-1912", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1055 [label=singleDigit, span="1952-1952", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1069 [label=singleDigit, span="1991-1991", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1011 [label=nonBase10, span="1838-1838", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1025 [label=nonBase10, span="1875-1875", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1042 [label=nonBase10, span="1917-1917", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1057 [label=nonBase10, span="1957-1957", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1072 [label=nonBase10, span="1997-1997", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1010 [label="string number = _stringReference.ToString()", span="1835-1835", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1012 [label="number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)", span="1842-1842", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1013 [label="Convert.ToInt64(number, 16)", span="1844-1844", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1014 [label="Convert.ToInt64(number, 8)", span="1848-1848", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1016 [label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1853-1853", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1018 [label="!double.TryParse(number, NumberStyles.Float, CultureInfo.InvariantCulture, out value)", span="1859-1859", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1021 [label="numberValue = number", span="1866-1866", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1017 [label="double value", span="1858-1858", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1015 [label=Exception, span="1851-1851", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1020 [label="numberType = JsonToken.String", span="1865-1865", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1019 [label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1861-1861", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1026 [label="string number = _stringReference.ToString()", span="1877-1877", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1031 [label="int value", span="1892-1892", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1027 [label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt32(number, 16) : Convert.ToInt32(number, 8)", span="1881-1881", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1030 [label="throw ThrowReaderError(''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1887-1887", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1028 [label="numberValue = integer", span="1883-1883", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1029 [label=Exception, span="1885-1885", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1038 [label="numberType = JsonToken.Integer", span="1908-1908", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1032 [label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1893-1893", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1033 [label="parseResult == ParseResult.Success", span="1894-1894", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1034 [label="numberValue = value", span="1896-1896", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1035 [label="parseResult == ParseResult.Overflow", span="1898-1898", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1036 [label="throw ThrowReaderError(''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1900-1900", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1037 [label="throw ThrowReaderError(''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1904-1904", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1043 [label="string number = _stringReference.ToString()", span="1919-1919", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1048 [label="string number = _stringReference.ToString()", span="1935-1935", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1044 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1924-1924", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1047 [label="throw ThrowReaderError(''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1930-1930", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1045 [label="numberValue = Convert.ToDecimal(integer)", span="1926-1926", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1046 [label=Exception, span="1928-1928", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1053 [label="numberType = JsonToken.Float", span="1948-1948", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1049 [label="decimal value", span="1937-1937", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1050 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1938-1938", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1051 [label="numberValue = value", span="1940-1940", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1052 [label="throw ThrowReaderError(''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1944-1944", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1058 [label="string number = _stringReference.ToString()", span="1959-1959", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1063 [label="double value", span="1975-1975", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1059 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1964-1964", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1062 [label="throw ThrowReaderError(''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1970-1970", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1060 [label="numberValue = Convert.ToDouble(integer)", span="1966-1966", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1061 [label=Exception, span="1968-1968", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1068 [label="numberType = JsonToken.Float", span="1987-1987", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1064 [label="ParseResult parseResult = ConvertUtils.DoubleTryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1976-1976", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1065 [label="parseResult == ParseResult.Success", span="1977-1977", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1066 [label="numberValue = value", span="1979-1979", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1067 [label="throw ThrowReaderError(''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1983-1983", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1071 [label="numberType = JsonToken.Integer", span="1995-1995", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1073 [label="string number = _stringReference.ToString()", span="1999-1999", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1078 [label="long value", span="2014-2014", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1074 [label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="2003-2003", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1076 [label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="2007-2007", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1075 [label=Exception, span="2005-2005", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1077 [label="numberType = JsonToken.Integer", span="2010-2010", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1079 [label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="2015-2015", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1080 [label="parseResult == ParseResult.Success", span="2016-2016", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1081 [label="numberValue = value", span="2018-2018", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1083 [label="parseResult == ParseResult.Overflow", span="2021-2021", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1082 [label="numberType = JsonToken.Integer", span="2019-2019", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1084 [label="string number = _stringReference.ToString()", span="2024-2024", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1089 [label="string number = _stringReference.ToString()", span="2039-2039", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1085 [label="number.Length > MaximumJavascriptIntegerCharacterLength", span="2026-2026", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1087 [label="numberValue = BigIntegerParse(number, CultureInfo.InvariantCulture)", span="2031-2031", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1086 [label="throw ThrowReaderError(''JSON integer {0} is too large to parse.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="2028-2028", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1088 [label="numberType = JsonToken.Integer", span="2032-2032", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1090 [label="_floatParseHandling == FloatParseHandling.Decimal", span="2041-2041", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1092 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="2044-2044", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1094 [label="throw ThrowReaderError(''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2050-2050", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1099 [label="throw ThrowReaderError(''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2063-2063", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1091 [label="decimal d", span="2043-2043", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1095 [label="double d", span="2055-2055", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1093 [label="numberValue = d", span="2046-2046", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1096 [label="parseResult = ConvertUtils.DoubleTryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out d)", span="2056-2056", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1097 [label="parseResult == ParseResult.Success", span="2057-2057", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1098 [label="numberValue = d", span="2059-2059", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1100 [label="numberType = JsonToken.Float", span="2067-2067", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1101 [label="ClearRecentString()", span="2072-2072", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1103 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1813-1813", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="JsonValidatingReader.cs"];
m17_1111 [label="Entry System.Convert.ToDecimal(long)", span="0-0", cluster="System.Convert.ToDecimal(long)", file="JsonValidatingReader.cs"];
m17_178 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonValidatingReader.cs"];
m17_179 [label="return (int?)ReadNumberValue(ReadType.ReadAsInt32);", span="423-423", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonValidatingReader.cs"];
m17_180 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonValidatingReader.cs"];
m17_171 [label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_774 [label=true, span="1385-1385", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_775 [label="char currentChar = _chars[_charPos]", span="1387-1387", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_776 [label=currentChar, span="1389-1389", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_796 [label="char.IsWhiteSpace(currentChar)", span="1423-1423", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_777 [label="'\0'", span="1391-1391", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_782 [label="'}'", span="1404-1404", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_786 [label="'/'", span="1408-1408", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_789 [label="StringUtils.CarriageReturn", span="1411-1411", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_791 [label="StringUtils.LineFeed", span="1414-1414", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_793 [label="' '", span="1417-1417", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_778 [label="_charsUsed == _charPos", span="1392-1392", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_779 [label="ReadData(false) == 0", span="1394-1394", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_781 [label="_charPos++", span="1401-1401", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_780 [label="return false;", span="1396-1396", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_783 [label="SetToken(JsonToken.EndObject)", span="1405-1405", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_784 [label="_charPos++", span="1406-1406", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_785 [label="return true;", span="1407-1407", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_787 [label="ParseComment(true)", span="1409-1409", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_788 [label="return true;", span="1410-1410", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_790 [label="ProcessCarriageReturn(false)", span="1412-1412", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_792 [label="ProcessLineFeed()", span="1415-1415", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_794 [label="StringUtils.Tab", span="1418-1418", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_795 [label="_charPos++", span="1420-1420", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_797 [label="_charPos++", span="1426-1426", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_798 [label="return ParseProperty();", span="1430-1430", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_799 [label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="1383-1383", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonValidatingReader.cs"];
m17_1120 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonValidatingReader.cs"];
m17_1283 [label="Newtonsoft.Json.JsonTextReader", span="", file="JsonValidatingReader.cs"];
m18_0 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs"];
m18_1 [label="this.param1 = param1", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs"];
m18_2 [label="this.Param1 = Param1", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs"];
m18_3 [label="this.Param2 = param2", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs"];
m18_4 [label="Exit Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonWriter.cs"];
m18_5 [label="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass", span="", file="JsonWriter.cs"];
m19_153 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="255-255", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_161 [label="Assert.AreEqual(2, a.Count())", span="274-274", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_170 [label="Assert.AreEqual(0, a.Count())", span="285-285", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_157 [label="Assert.AreEqual(6, (int)a[0])", span="268-268", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_159 [label="Assert.AreEqual(6, (int)a[0])", span="272-272", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_164 [label="Assert.AreEqual(6, (int)a[0])", span="278-278", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_160 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), a[1]))", span="273-273", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_155 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="258-264", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_162 [label="t = a[1]", span="276-276", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_169 [label="t.Remove()", span="284-284", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_171 [label="Assert.IsNull(t.Next)", span="287-287", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_156 [label="a[0].Remove()", span="266-266", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_158 [label="a[1].Remove()", span="270-270", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_163 [label="t.Remove()", span="277-277", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_165 [label="Assert.IsNull(t.Next)", span="279-279", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_154 [label="JToken t", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_168 [label="t = a[0]", span="283-283", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_166 [label="Assert.IsNull(t.Previous)", span="280-280", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_167 [label="Assert.IsNull(t.Parent)", span="281-281", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_172 [label="Assert.IsNull(t.Previous)", span="288-288", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_173 [label="Assert.IsNull(t.Parent)", span="289-289", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_174 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", span="255-255", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Remove()", file="JTokenReader.cs"];
m19_217 [label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="176-176", cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="JTokenReader.cs"];
m19_55 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="95-95", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JTokenReader.cs"];
m19_25 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JTokenReader.cs"];
m19_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JTokenReader.cs"];
m19_60 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="110-110", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JTokenReader.cs"];
m19_54 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="69-69", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JTokenReader.cs"];
m19_62 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JTokenReader.cs"];
m19_142 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(object)", span="115-115", cluster="Newtonsoft.Json.Linq.JValue.JValue(object)", file="JTokenReader.cs"];
m19_238 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="299-299", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JTokenReader.cs"];
m19_186 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="312-312", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs"];
m19_190 [label="Assert.AreEqual(2, beforeTokens.Count)", span="325-325", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs"];
m19_191 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(5), beforeTokens[0]))", span="326-326", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs"];
m19_192 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1), beforeTokens[1]))", span="327-327", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs"];
m19_187 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="314-320", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs"];
m19_189 [label="List<JToken> beforeTokens = t.BeforeSelf().ToList()", span="323-323", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs"];
m19_188 [label="JToken t = a[2]", span="322-322", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs"];
m19_193 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", span="312-312", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeSelf()", file="JTokenReader.cs"];
m19_290 [label="Entry Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", span="282-282", cluster="Newtonsoft.Json.Linq.JToken.Replace(Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs"];
m19_76 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JTokenReader.cs"];
m19_145 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(ulong)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(ulong)", file="JTokenReader.cs"];
m19_264 [label="Entry Newtonsoft.Json.Linq.JContainer.RemoveAll()", span="307-307", cluster="Newtonsoft.Json.Linq.JContainer.RemoveAll()", file="JTokenReader.cs"];
m19_61 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="121-121", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JTokenReader.cs"];
m19_233 [label="Entry Newtonsoft.Json.Linq.JContainer.CreateWriter()", span="289-289", cluster="Newtonsoft.Json.Linq.JContainer.CreateWriter()", file="JTokenReader.cs"];
m19_28 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="204-204", cluster="Newtonsoft.Json.JsonReader.Read()", file="JTokenReader.cs"];
m19_65 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="115-115", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_68 [label="Assert.AreEqual(6, (int)next)", span="126-126", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_70 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), next))", span="129-129", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_72 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(9, 10), next))", span="132-132", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_66 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="117-123", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_67 [label="JToken next = a[0].Next", span="125-125", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_69 [label="next = next.Next", span="128-128", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_71 [label="next = next.Next", span="131-131", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_73 [label="next = next.Next", span="134-134", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_74 [label="Assert.IsNull(next)", span="135-135", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_75 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", span="115-115", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Next()", file="JTokenReader.cs"];
m19_33 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JTokenReader.cs"];
m19_77 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="139-139", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_82 [label="Assert.AreEqual(6, (int)previous)", span="153-153", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_84 [label="Assert.AreEqual(5, (int)previous)", span="156-156", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_80 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(7, 8), previous))", span="150-150", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_78 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="141-147", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_81 [label="previous = previous.Previous", span="152-152", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_83 [label="previous = previous.Previous", span="155-155", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_85 [label="previous = previous.Previous", span="158-158", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_79 [label="JToken previous = a[3].Previous", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_86 [label="Assert.IsNull(previous)", span="159-159", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_87 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", span="139-139", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Previous()", file="JTokenReader.cs"];
m19_30 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="110-110", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="JTokenReader.cs"];
m19_146 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="106-106", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JTokenReader.cs"];
m19_0 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", span="38-38", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_2 [label="Assert.AreEqual(true, (bool)o[''pie''])", span="41-41", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_4 [label="Assert.AreEqual(1, (int)a[0])", span="44-44", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_5 [label="Assert.AreEqual(2, (int)a[1])", span="45-45", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_6 [label="Assert.AreEqual(3, (int)a[2])", span="46-46", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_11 [label="Assert.AreEqual(''pie'', p.Name)", span="53-53", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_12 [label="Assert.AreEqual(true, (bool)p.Value)", span="54-54", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_14 [label="Assert.AreEqual(''Date'', c.Name)", span="57-57", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_18 [label="Assert.AreEqual(''stringvalue'', (string)v)", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_20 [label="Assert.AreEqual(1, (int)v)", span="66-66", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_22 [label="Assert.AreEqual(1.1, (double)v)", span="69-69", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_15 [label="Assert.IsTrue(JToken.DeepEquals(new JValue(1), c.Values().ElementAt(0)))", span="58-58", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_1 [label="JObject o = (JObject)JToken.ReadFrom(new JsonTextReader(new StringReader(''{'pie':true}'')))", span="40-40", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_3 [label="JArray a = (JArray)JToken.ReadFrom(new JsonTextReader(new StringReader(''[1,2,3]'')))", span="43-43", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_7 [label="JsonReader reader = new JsonTextReader(new StringReader(''{'pie':true}''))", span="48-48", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_10 [label="JProperty p = (JProperty)JToken.ReadFrom(reader)", span="52-52", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_13 [label="JConstructor c = (JConstructor)JToken.ReadFrom(new JsonTextReader(new StringReader(''new Date(1)'')))", span="56-56", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_17 [label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''''''stringvalue'''''')))", span="62-62", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_19 [label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''1'')))", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_21 [label="v = (JValue)JToken.ReadFrom(new JsonTextReader(new StringReader(@''1.1'')))", span="68-68", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_16 [label="JValue v", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_8 [label="reader.Read()", span="49-49", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_9 [label="reader.Read()", span="50-50", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_23 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", span="38-38", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.ReadFrom()", file="JTokenReader.cs"];
m19_240 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="411-411", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_246 [label="Assert.AreEqual(5, a.Count())", span="426-426", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_251 [label="Assert.AreEqual(6, a.Count())", span="432-432", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_243 [label="Assert.AreEqual(''First'', (string)a[0])", span="423-423", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_244 [label="Assert.AreEqual(a, a[0].Parent)", span="424-424", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_245 [label="Assert.AreEqual(a[1], a[0].Next)", span="425-425", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_248 [label="Assert.AreEqual(''NewFirst'', (string)a[0])", span="429-429", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_249 [label="Assert.AreEqual(a, a[0].Parent)", span="430-430", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_250 [label="Assert.AreEqual(a[1], a[0].Next)", span="431-431", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_252 [label="Assert.AreEqual(a[0], a[0].Next.Previous)", span="434-434", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_241 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="413-419", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_247 [label="a.AddFirst(''NewFirst'')", span="428-428", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_242 [label="a.AddFirst(''First'')", span="421-421", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_253 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", span="411-411", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AddFirst()", file="JTokenReader.cs"];
m19_59 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="120-120", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JTokenReader.cs"];
m19_94 [label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="252-252", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JTokenReader.cs"];
m19_235 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="658-658", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JTokenReader.cs"];
m19_34 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_48 [label="JProperty o2 = new JProperty(''O2'', o)", span="106-106", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", color=green, community=0, file="JTokenReader.cs"];
m19_37 [label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', v),\r\n          new JProperty(''Test2'', ''Test2Value''),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="79-85", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_47 [label="Assert.AreNotEqual(null, o.Parent)", span="105-105", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_49 [label="Assert.AreNotEqual(o1.Value, o2.Value)", span="108-108", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_50 [label="Assert.AreEqual(o1.Value.Children().Count(), o2.Value.Children().Count())", span="109-109", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_51 [label="Assert.AreEqual(false, JToken.DeepEquals(o1, o2))", span="110-110", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_52 [label="Assert.AreEqual(true, JToken.DeepEquals(o1.Value, o2.Value))", span="111-111", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_35 [label="JArray v = new JArray(new JConstructor(''TestConstructor''), new JValue(new DateTime(2000, 12, 20)))", span="75-75", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_36 [label="Assert.AreEqual(null, v.Parent)", span="77-77", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_38 [label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="87-87", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_40 [label="Assert.AreEqual(o.Property(''Test1''), v.Parent)", span="92-92", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_43 [label="Assert.AreEqual(v, o[''Test1''])", span="99-99", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_44 [label="Assert.AreEqual(null, o.Parent)", span="101-101", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_45 [label="JProperty o1 = new JProperty(''O1'', o)", span="102-102", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_46 [label="Assert.AreEqual(o, o1.Value)", span="103-103", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_39 [label="JProperty p = new JProperty(''NewProperty'', v)", span="89-89", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_41 [label="Assert.AreNotEqual(p.Value, v)", span="95-95", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_42 [label="Assert.AreEqual((DateTime)((JValue)p.Value[1]).Value, (DateTime)((JValue)v[1]).Value)", span="97-97", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_53 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Parent()", file="JTokenReader.cs"];
m19_29 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="61-61", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="JTokenReader.cs"];
m19_255 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="438-438", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs"];
m19_260 [label="Assert.AreEqual(0, a.Count())", span="452-452", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs"];
m19_258 [label="Assert.AreEqual(5, (int)first)", span="449-449", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs"];
m19_256 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="440-446", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs"];
m19_259 [label="a.RemoveAll()", span="451-451", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs"];
m19_261 [label="Assert.IsNull(first.Parent)", span="454-454", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs"];
m19_257 [label="JToken first = a.First", span="448-448", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs"];
m19_262 [label="Assert.IsNull(first.Next)", span="455-455", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs"];
m19_263 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", span="438-438", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.RemoveAll()", file="JTokenReader.cs"];
m19_207 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="363-363", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_210 [label="Assert.AreEqual(10, descendants.Count())", span="374-374", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_211 [label="Assert.AreEqual(5, (int)descendants[0])", span="375-375", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_213 [label="Assert.AreEqual(1, (int)descendants[descendants.Count - 3])", span="377-377", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_214 [label="Assert.AreEqual(2, (int)descendants[descendants.Count - 2])", span="378-378", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_215 [label="Assert.AreEqual(3, (int)descendants[descendants.Count - 1])", span="379-379", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_212 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), descendants[descendants.Count - 4]))", span="376-376", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_208 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="365-371", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_209 [label="List<JToken> descendants = a.Descendants().ToList()", span="373-373", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_216 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", span="363-363", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Descendants()", file="JTokenReader.cs"];
m19_27 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JTokenReader.cs"];
m19_176 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="293-293", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs"];
m19_180 [label="Assert.AreEqual(2, afterTokens.Count)", span="306-306", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs"];
m19_181 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2), afterTokens[0]))", span="307-307", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs"];
m19_182 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), afterTokens[1]))", span="308-308", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs"];
m19_177 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="295-301", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs"];
m19_179 [label="List<JToken> afterTokens = t.AfterSelf().ToList()", span="304-304", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs"];
m19_178 [label="JToken t = a[1]", span="303-303", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs"];
m19_183 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", span="293-293", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.AfterSelf()", file="JTokenReader.cs"];
m19_175 [label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="270-270", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="JTokenReader.cs"];
m19_198 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="345-345", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs"];
m19_202 [label="Assert.AreEqual(2, ancestors.Count())", span="357-357", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs"];
m19_203 [label="Assert.AreEqual(a[1], ancestors[0])", span="358-358", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs"];
m19_204 [label="Assert.AreEqual(a, ancestors[1])", span="359-359", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs"];
m19_199 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="347-353", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs"];
m19_201 [label="List<JToken> ancestors = t.Ancestors().ToList()", span="356-356", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs"];
m19_200 [label="JToken t = a[1][0]", span="355-355", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs"];
m19_205 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", span="345-345", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Ancestors()", file="JTokenReader.cs"];
m19_88 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="163-163", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs"];
m19_90 [label="Assert.AreEqual(4, a.Count())", span="173-173", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs"];
m19_91 [label="Assert.AreEqual(3, a.Children<JArray>().Count())", span="174-174", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs"];
m19_89 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="165-171", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs"];
m19_92 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", span="163-163", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Children()", file="JTokenReader.cs"];
m19_237 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="291-291", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JTokenReader.cs"];
m19_95 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="178-178", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs"];
m19_98 [label="Assert.AreEqual(2, a[2].BeforeSelf().Count())", span="189-189", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs"];
m19_97 [label="Assert.AreEqual(5, (int)a[1].Previous)", span="188-188", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs"];
m19_96 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1, 2, 3),\r\n          new JArray(1, 2, 3),\r\n          new JArray(1, 2, 3)\r\n        )", span="180-186", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs"];
m19_99 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", span="178-178", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.BeforeAfter()", file="JTokenReader.cs"];
m19_57 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JTokenReader.cs"];
m19_100 [label="Entry Newtonsoft.Json.Linq.JToken.BeforeSelf()", span="192-192", cluster="Newtonsoft.Json.Linq.JToken.BeforeSelf()", file="JTokenReader.cs"];
m19_234 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JTokenReader.cs"];
m19_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JTokenReader.cs"];
m19_56 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="88-88", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JTokenReader.cs"];
m19_218 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="383-383", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_231 [label="Assert.IsTrue(JToken.DeepEquals(new JObject(new JProperty(''Property'', ''PropertyValue'')), a[5]))", span="407-407", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_219 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="385-391", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_230 [label="Assert.AreEqual(6, a.Count())", span="406-406", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_222 [label="Assert.AreEqual(4, a.Count())", span="395-395", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_224 [label="Assert.AreEqual(5, a.Count())", span="398-398", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_225 [label="Assert.AreEqual(''String'', (string)a[4])", span="399-399", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_220 [label="JsonWriter writer = a.CreateWriter()", span="393-393", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_229 [label="writer.WriteEnd()", span="404-404", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_221 [label="Assert.IsNotNull(writer)", span="394-394", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_223 [label="writer.WriteValue(''String'')", span="397-397", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_226 [label="writer.WriteStartObject()", span="401-401", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_227 [label="writer.WritePropertyName(''Property'')", span="402-402", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_228 [label="writer.WriteValue(''PropertyValue'')", span="403-403", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_232 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", span="383-383", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.CreateWriter()", file="JTokenReader.cs"];
m19_58 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="60-60", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JTokenReader.cs"];
m19_101 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="194-194", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_138 [label="Assert.AreEqual(ulong.MaxValue, (ulong)new JProperty(''Test'', new JValue(ulong.MaxValue)))", span="234-234", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_137 [label="Assert.AreEqual(ulong.MaxValue, (ulong)new JValue(ulong.MaxValue))", span="233-233", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_139 [label="Assert.AreEqual(null, (string)new JValue((string)null))", span="235-235", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_102 [label="Assert.AreEqual(new DateTime(2000, 12, 20), (DateTime)new JValue(new DateTime(2000, 12, 20)))", span="196-196", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_103 [label="Assert.AreEqual(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero), (DateTimeOffset)new JValue(new DateTimeOffset(2000, 12, 20, 23, 50, 10, TimeSpan.Zero)))", span="198-198", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_104 [label="Assert.AreEqual(null, (DateTimeOffset?)new JValue((DateTimeOffset?)null))", span="199-199", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_105 [label="Assert.AreEqual(null, (DateTimeOffset?)(JValue)null)", span="200-200", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_106 [label="Assert.AreEqual(true, (bool)new JValue(true))", span="202-202", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_107 [label="Assert.AreEqual(true, (bool?)new JValue(true))", span="203-203", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_108 [label="Assert.AreEqual(null, (bool?)((JValue)null))", span="204-204", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_109 [label="Assert.AreEqual(null, (bool?)new JValue((object)null))", span="205-205", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_110 [label="Assert.AreEqual(10, (long)new JValue(10))", span="206-206", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_111 [label="Assert.AreEqual(null, (long?)new JValue((long?)null))", span="207-207", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_112 [label="Assert.AreEqual(null, (long?)(JValue)null)", span="208-208", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_113 [label="Assert.AreEqual(null, (int?)new JValue((int?)null))", span="209-209", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_114 [label="Assert.AreEqual(null, (int?)(JValue)null)", span="210-210", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_115 [label="Assert.AreEqual(null, (DateTime?)new JValue((DateTime?)null))", span="211-211", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_116 [label="Assert.AreEqual(null, (DateTime?)(JValue)null)", span="212-212", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_117 [label="Assert.AreEqual(null, (short?)new JValue((short?)null))", span="213-213", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_118 [label="Assert.AreEqual(null, (short?)(JValue)null)", span="214-214", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_119 [label="Assert.AreEqual(null, (float?)new JValue((float?)null))", span="215-215", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_120 [label="Assert.AreEqual(null, (float?)(JValue)null)", span="216-216", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_121 [label="Assert.AreEqual(null, (double?)new JValue((double?)null))", span="217-217", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_122 [label="Assert.AreEqual(null, (double?)(JValue)null)", span="218-218", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_123 [label="Assert.AreEqual(null, (decimal?)new JValue((decimal?)null))", span="219-219", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_124 [label="Assert.AreEqual(null, (decimal?)(JValue)null)", span="220-220", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_125 [label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="221-221", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_126 [label="Assert.AreEqual(null, (uint?)(JValue)null)", span="222-222", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_127 [label="Assert.AreEqual(null, (sbyte?)new JValue((sbyte?)null))", span="223-223", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_128 [label="Assert.AreEqual(null, (sbyte?)(JValue)null)", span="224-224", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_129 [label="Assert.AreEqual(null, (ulong?)new JValue((ulong?)null))", span="225-225", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_130 [label="Assert.AreEqual(null, (ulong?)(JValue)null)", span="226-226", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_131 [label="Assert.AreEqual(null, (uint?)new JValue((uint?)null))", span="227-227", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_132 [label="Assert.AreEqual(null, (uint?)(JValue)null)", span="228-228", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_133 [label="Assert.AreEqual(11.1f, (float)new JValue(11.1))", span="229-229", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_134 [label="Assert.AreEqual(float.MinValue, (float)new JValue(float.MinValue))", span="230-230", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_135 [label="Assert.AreEqual(1.1, (double)new JValue(1.1))", span="231-231", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_136 [label="Assert.AreEqual(uint.MaxValue, (uint)new JValue(uint.MaxValue))", span="232-232", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_140 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", span="194-194", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Casting()", file="JTokenReader.cs"];
m19_143 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(bool)", span="97-97", cluster="Newtonsoft.Json.Linq.JValue.JValue(bool)", file="JTokenReader.cs"];
m19_147 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="239-239", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs"];
m19_149 [label="Assert.AreEqual(a, a.Root)", span="249-249", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs"];
m19_150 [label="Assert.AreEqual(a, a[0].Root)", span="250-250", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs"];
m19_151 [label="Assert.AreEqual(a, ((JArray)a[2])[0].Root)", span="251-251", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs"];
m19_148 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          6,\r\n          new JArray(7, 8),\r\n          new JArray(9, 10)\r\n        )", span="241-247", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs"];
m19_152 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", span="239-239", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Root()", file="JTokenReader.cs"];
m19_254 [label="Entry Newtonsoft.Json.Linq.JContainer.AddFirst(object)", span="272-272", cluster="Newtonsoft.Json.Linq.JContainer.AddFirst(object)", file="JTokenReader.cs"];
m19_184 [label="Entry Newtonsoft.Json.Linq.JToken.AfterSelf()", span="179-179", cluster="Newtonsoft.Json.Linq.JToken.AfterSelf()", file="JTokenReader.cs"];
m19_141 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JTokenReader.cs"];
m19_239 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="69-69", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JTokenReader.cs"];
m19_24 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="49-49", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JTokenReader.cs"];
m19_63 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="242-242", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JTokenReader.cs"];
m19_93 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="78-78", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="JTokenReader.cs"];
m19_26 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="770-770", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JTokenReader.cs"];
m19_278 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="475-475", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_282 [label="Assert.AreEqual(4, a.Count())", span="487-487", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_287 [label="Assert.AreEqual(4, a.Count())", span="494-494", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_281 [label="Assert.AreEqual(int.MaxValue, (int)a[0])", span="486-486", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_284 [label="Assert.AreEqual(''Test'', (string)a[1][0])", span="490-490", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_286 [label="Assert.AreEqual(int.MaxValue, (int)a[2])", span="493-493", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_288 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(int.MaxValue, new JArray(''Test''), int.MaxValue, new JArray(1, 2, 3)), a))", span="496-496", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_279 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="477-483", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_283 [label="a[1][0].Replace(new JValue(''Test''))", span="489-489", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_280 [label="a[0].Replace(new JValue(int.MaxValue))", span="485-485", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_285 [label="a[2].Replace(new JValue(int.MaxValue))", span="492-492", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_289 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", span="475-475", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.Replace()", file="JTokenReader.cs"];
m19_206 [label="Entry Newtonsoft.Json.Linq.JToken.Ancestors()", span="167-167", cluster="Newtonsoft.Json.Linq.JToken.Ancestors()", file="JTokenReader.cs"];
m19_144 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(double)", span="79-79", cluster="Newtonsoft.Json.Linq.JValue.JValue(double)", file="JTokenReader.cs"];
m19_185 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JTokenReader.cs"];
m19_236 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="238-238", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JTokenReader.cs"];
m19_32 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="116-116", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JTokenReader.cs"];
m19_194 [label="Entry Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="331-331", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenReader.cs"];
m19_195 [label="JArray a =\r\n        new JArray(\r\n          5,\r\n          new JArray(1),\r\n          new JArray(1, 2),\r\n          new JArray(1, 2, 3)\r\n        )", span="333-339", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenReader.cs"];
m19_196 [label="Assert.IsTrue(a.HasValues)", span="341-341", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenReader.cs"];
m19_197 [label="Exit Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", span="331-331", cluster="Newtonsoft.Json.Tests.Linq.JTokenTests.HasValues()", file="JTokenReader.cs"];
m22_8 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="StringBuffer.cs"];
m22_7 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StringBuffer.cs"];
m22_10 [label="Entry lambda expression", span="40-47", cluster="lambda expression", file="StringBuffer.cs"];
m22_11 [label="new BlogPost\r\n        {\r\n          Title = (string) p[''Title''],\r\n          AuthorName = (string) p[''Author''][''Name''],\r\n          AuthorTwitter = (string) p[''Author''][''Twitter''],\r\n          PostedDate = (DateTime) p[''Date''],\r\n          Body = HttpUtility.HtmlDecode((string) p[''BodyHtml''])\r\n        }", span="40-47", cluster="lambda expression", color=green, community=0, file="StringBuffer.cs"];
m22_12 [label="Exit lambda expression", span="40-47", cluster="lambda expression", file="StringBuffer.cs"];
m22_13 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", span="12-12", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", file="StringBuffer.cs"];
m22_14 [label="Entry Unk.HtmlDecode", span="", cluster="Unk.HtmlDecode", file="StringBuffer.cs"];
m22_6 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="143-143", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="StringBuffer.cs"];
m22_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", file="StringBuffer.cs"];
m22_1 [label="string json = @''[\r\n        {\r\n          'Title': 'Json.NET is awesome!',\r\n          'Author': {\r\n            'Name': 'James Newton-King',\r\n            'Twitter': '@JamesNK',\r\n            'Picture': '/jamesnk.png'\r\n          },\r\n          'Date': '2013-01-23T19:30:00',\r\n          'BodyHtml': '&lt;h3&gt;Title!&lt;/h3&gt;\r\n&lt;p&gt;Content!&lt;/p&gt;'\r\n        }\r\n      ]''", span="25-36", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", color=green, community=0, file="StringBuffer.cs"];
m22_2 [label="JArray blogPostArray = JArray.Parse(json)", span="38-38", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", color=red, community=0, file="StringBuffer.cs"];
m22_3 [label="IList<BlogPost> blogPosts = blogPostArray.Select(p => new BlogPost\r\n        {\r\n          Title = (string) p[''Title''],\r\n          AuthorName = (string) p[''Author''][''Name''],\r\n          AuthorTwitter = (string) p[''Author''][''Twitter''],\r\n          PostedDate = (DateTime) p[''Date''],\r\n          Body = HttpUtility.HtmlDecode((string) p[''BodyHtml''])\r\n        }).ToList()", span="40-47", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", color=green, community=0, file="StringBuffer.cs"];
m22_4 [label="Console.WriteLine(blogPosts[0].Body)", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", file="StringBuffer.cs"];
m22_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", span="22-22", cluster="Newtonsoft.Json.Tests.Documentation.Examples.Linq.DeserializeWithLinq.Example()", file="StringBuffer.cs"];
m22_9 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="StringBuffer.cs"];
m23_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", span="11-11", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs"];
m23_4 [label="Console.WriteLine(o.ToString(Formatting.None, new JavaScriptDateTimeConverter()))", span="26-26", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", color=green, community=0, file="StringReference.cs"];
m23_1 [label="JObject o = JObject.Parse(@''{'string1':'value','integer2':99,'datetime3':'2000-05-23T00:00:00'}'')", span="14-14", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs"];
m23_3 [label="Console.WriteLine(o.ToString(Formatting.None))", span="23-23", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs"];
m23_2 [label="Console.WriteLine(o.ToString())", span="16-16", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs"];
m23_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", span="11-11", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="StringReference.cs"];
m23_9 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="424-424", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="StringReference.cs"];
m23_6 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="StringReference.cs"];
m23_10 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="StringReference.cs"];
m23_8 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="StringReference.cs"];
m23_7 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="413-413", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="StringReference.cs"];
n427 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext"];
n428 -> n9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n264  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n276  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n360  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n414  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n428 -> n424  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n4  [key=0, style=solid];
n4 -> n3  [key=0, style=bold, color=blue];
n5 -> n6  [key=0, style=solid];
n6 -> n5  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
n7 -> n11  [key=1, style=dashed, color=darkseagreen4, label=bool];
n7 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeKind"];
n8 -> n9  [key=0, style=solid];
n8 -> n14  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n9 -> n15  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [key=2, style=dotted];
n13 -> n7  [key=0, style=bold, color=blue];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=1, style=dashed, color=darkseagreen4, label="System.IO.BinaryReader"];
n17 -> n21  [key=1, style=dashed, color=darkseagreen4, label=bool];
n17 -> n22  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeKind"];
n18 -> n19  [key=0, style=solid];
n18 -> n14  [key=2, style=dotted];
n19 -> n20  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n16  [key=2, style=dotted];
n23 -> n17  [key=0, style=bold, color=blue];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadElement"];
n25 -> n26  [key=0, style=solid];
n25 -> n29  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n30  [key=2, style=dotted];
n29 -> n417  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n30 -> n303  [key=0, style=solid];
n28 -> n24  [key=0, style=bold, color=blue];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=2, style=dotted];
n33 -> n31  [key=0, style=bold, color=blue];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n38  [key=2, style=dotted];
n37 -> n35  [key=0, style=bold, color=blue];
n39 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=2, style=dotted];
n41 -> n39  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=2, style=dotted];
n45 -> n43  [key=0, style=bold, color=blue];
n46 -> n341  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadLengthString"];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [key=2, style=dotted];
n49 -> n47  [key=0, style=bold, color=blue];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=2, style=dotted];
n53 -> n51  [key=0, style=bold, color=blue];
n55 -> n56  [key=0, style=solid];
n55 -> n59  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=2, style=dotted];
n58 -> n55  [key=0, style=bold, color=blue];
n59 -> n60  [key=0, style=solid];
n59 -> n77  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadInternal"];
n59 -> n78  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadInternal"];
n60 -> n61  [key=0, style=solid];
n60 -> n83  [key=3, color=darkorchid, style=bold, label="Local variable bool success"];
n60 -> n84  [key=3, color=darkorchid, style=bold, label="Local variable bool success"];
n60 -> n85  [key=3, color=darkorchid, style=bold, label="Local variable bool success"];
n61 -> n62  [key=0, style=solid];
n61 -> n64  [key=0, style=solid];
n61 -> n68  [key=0, style=solid];
n61 -> n74  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n74 -> n82  [key=0, style=solid];
n74 -> n86  [key=2, style=dotted];
n74 -> n87  [key=2, style=dotted];
n63 -> n75  [key=0, style=solid];
n63 -> n83  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n67 -> n75  [key=0, style=solid];
n67 -> n84  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n73 -> n75  [key=0, style=solid];
n73 -> n85  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n78  [key=0, style=solid];
n85 -> n96  [key=0, style=solid];
n85 -> n78  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadCodeWScope"];
n85 -> n117  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadCodeWScope"];
n83 -> n158  [key=0, style=solid];
n83 -> n78  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNormal"];
n83 -> n77  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNormal"];
n84 -> n132  [key=0, style=solid];
n84 -> n78  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadReference"];
n76 -> n77  [key=0, style=solid];
n76 -> n88  [key=2, style=dotted];
n78 -> n82  [key=0, style=solid];
n77 -> n82  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n80 -> n88  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n82 -> n59  [key=0, style=bold, color=blue];
n86 -> n17  [key=3, color=darkorchid, style=bold, label="Field variable System.IO.BinaryReader _reader"];
n89 -> n90  [key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n90 -> n94  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n93  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n92 -> n95  [key=2, style=dotted];
n93 -> n89  [key=0, style=bold, color=blue];
n96 -> n97  [key=0, style=solid];
n96 -> n101  [key=0, style=solid];
n96 -> n106  [key=0, style=solid];
n96 -> n116  [key=0, style=solid];
n96 -> n121  [key=0, style=solid];
n96 -> n125  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n116 -> n117  [key=0, style=solid];
n121 -> n122  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n125 -> n131  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n127  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n100 -> n126  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n102 -> n128  [key=2, style=dotted];
n103 -> n104  [key=0, style=solid];
n103 -> n129  [key=2, style=dotted];
n103 -> n127  [key=2, style=dotted];
n128 -> n409  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n129 -> n339  [key=0, style=solid];
n105 -> n126  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n110  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n108 -> n127  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n110 -> n88  [key=2, style=dotted];
n109 -> n126  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n0  [key=2, style=dotted];
n112 -> n114  [key=1, style=dashed, color=darkseagreen4, label=newContext];
n113 -> n114  [key=0, style=solid];
n113 -> n130  [key=2, style=dotted];
n114 -> n115  [key=0, style=solid];
n114 -> n128  [key=2, style=dotted];
n130 -> n214  [key=0, style=solid];
n130 -> n215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonReader.ContainerContext"];
n130 -> n112  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext"];
n130 -> n163  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext"];
n130 -> n233  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext"];
n130 -> n238  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonReader.ContainerContext newContext"];
n115 -> n126  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n117 -> n83  [key=2, style=dotted];
n117 -> n120  [key=1, style=dashed, color=darkseagreen4, label=result];
n118 -> n119  [key=0, style=solid];
n118 -> n120  [key=0, style=solid];
n120 -> n126  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n88  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n124 -> n126  [key=0, style=solid];
n126 -> n85  [key=0, style=bold, color=blue];
n132 -> n133  [key=0, style=solid];
n132 -> n137  [key=0, style=solid];
n132 -> n145  [key=0, style=solid];
n132 -> n155  [key=0, style=solid];
n133 -> n134  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n145 -> n146  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n87  [key=2, style=dotted];
n134 -> n135  [key=0, style=solid];
n134 -> n127  [key=2, style=dotted];
n135 -> n136  [key=0, style=solid];
n136 -> n156  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n138 -> n141  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n139 -> n129  [key=2, style=dotted];
n139 -> n127  [key=2, style=dotted];
n141 -> n142  [key=0, style=solid];
n141 -> n144  [key=0, style=solid];
n140 -> n156  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n142 -> n157  [key=2, style=dotted];
n142 -> n127  [key=2, style=dotted];
n144 -> n156  [key=0, style=solid];
n144 -> n87  [key=2, style=dotted];
n143 -> n156  [key=0, style=solid];
n157 -> n423  [key=0, style=solid];
n157 -> n424  [key=1, style=dashed, color=darkseagreen4, label=int];
n157 -> n247  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n157 -> n297  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n146 -> n147  [key=0, style=solid];
n146 -> n150  [key=0, style=solid];
n147 -> n148  [key=0, style=solid];
n147 -> n127  [key=2, style=dotted];
n150 -> n151  [key=0, style=solid];
n150 -> n154  [key=0, style=solid];
n148 -> n149  [key=0, style=solid];
n149 -> n156  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n151 -> n88  [key=2, style=dotted];
n154 -> n156  [key=0, style=solid];
n154 -> n87  [key=2, style=dotted];
n152 -> n153  [key=0, style=solid];
n153 -> n156  [key=0, style=solid];
n156 -> n84  [key=0, style=bold, color=blue];
n158 -> n159  [key=0, style=solid];
n158 -> n167  [key=0, style=solid];
n158 -> n170  [key=0, style=solid];
n158 -> n173  [key=0, style=solid];
n158 -> n197  [key=0, style=solid];
n158 -> n198  [key=0, style=solid];
n158 -> n199  [key=0, style=solid];
n158 -> n200  [key=0, style=solid];
n158 -> n201  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n197 -> n202  [key=0, style=solid];
n198 -> n202  [key=0, style=solid];
n199 -> n202  [key=0, style=solid];
n200 -> n202  [key=0, style=solid];
n201 -> n203  [key=0, style=solid];
n201 -> n131  [key=2, style=dotted];
n160 -> n161  [key=0, style=solid];
n160 -> n162  [key=1, style=dashed, color=darkseagreen4, label=token];
n161 -> n162  [key=0, style=solid];
n161 -> n163  [key=1, style=dashed, color=darkseagreen4, label=type];
n162 -> n163  [key=0, style=solid];
n162 -> n88  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n0  [key=2, style=dotted];
n163 -> n165  [key=1, style=dashed, color=darkseagreen4, label=newContext];
n164 -> n165  [key=0, style=solid];
n164 -> n130  [key=2, style=dotted];
n165 -> n166  [key=0, style=solid];
n165 -> n128  [key=2, style=dotted];
n166 -> n203  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n169 -> n203  [key=0, style=solid];
n171 -> n172  [key=0, style=solid];
n171 -> n204  [key=2, style=dotted];
n172 -> n203  [key=0, style=solid];
n204 -> n222  [key=0, style=solid];
n204 -> n285  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonType"];
n174 -> n175  [key=0, style=solid];
n175 -> n176  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n176 -> n179  [key=1, style=dashed, color=darkseagreen4, label=context];
n176 -> n180  [key=1, style=dashed, color=darkseagreen4, label=context];
n176 -> n181  [key=1, style=dashed, color=darkseagreen4, label=context];
n176 -> n187  [key=1, style=dashed, color=darkseagreen4, label=context];
n176 -> n192  [key=1, style=dashed, color=darkseagreen4, label=context];
n176 -> n193  [key=1, style=dashed, color=darkseagreen4, label=context];
n177 -> n178  [key=0, style=solid];
n177 -> n179  [key=0, style=solid];
n179 -> n180  [key=0, style=solid];
n179 -> n187  [key=1, style=dashed, color=darkseagreen4, label=lengthMinusEnd];
n180 -> n181  [key=0, style=solid];
n180 -> n187  [key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n181 -> n185  [key=0, style=solid];
n187 -> n188  [key=0, style=solid];
n187 -> n196  [key=0, style=solid];
n192 -> n193  [key=0, style=solid];
n192 -> n207  [key=2, style=dotted];
n193 -> n194  [key=0, style=solid];
n178 -> n203  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n182 -> n24  [key=2, style=dotted];
n185 -> n186  [key=0, style=solid];
n185 -> n24  [key=2, style=dotted];
n185 -> n127  [key=2, style=dotted];
n183 -> n184  [key=0, style=solid];
n183 -> n204  [key=2, style=dotted];
n184 -> n203  [key=0, style=solid];
n186 -> n203  [key=0, style=solid];
n188 -> n189  [key=0, style=solid];
n188 -> n190  [key=0, style=solid];
n188 -> n205  [key=2, style=dotted];
n196 -> n203  [key=0, style=solid];
n196 -> n87  [key=2, style=dotted];
n189 -> n203  [key=0, style=solid];
n189 -> n87  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid];
n190 -> n206  [key=2, style=dotted];
n205 -> n218  [key=0, style=solid];
n191 -> n192  [key=0, style=solid];
n191 -> n193  [key=0, style=solid];
n206 -> n208  [key=0, style=solid];
n207 -> n421  [key=0, style=solid];
n207 -> n110  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n207 -> n339  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n207 -> n226  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n207 -> n98  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n207 -> n157  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n194 -> n195  [key=0, style=solid];
n194 -> n88  [key=2, style=dotted];
n195 -> n203  [key=0, style=solid];
n202 -> n203  [key=0, style=solid];
n203 -> n83  [key=0, style=bold, color=blue];
n208 -> n209  [key=0, style=solid];
n208 -> n213  [key=2, style=dotted];
n209 -> n210  [key=0, style=solid];
n209 -> n211  [key=0, style=solid];
n210 -> n212  [key=0, style=solid];
n211 -> n212  [key=0, style=solid];
n212 -> n206  [key=0, style=bold, color=blue];
n214 -> n215  [key=0, style=solid];
n214 -> n217  [key=2, style=dotted];
n215 -> n216  [key=0, style=solid];
n216 -> n130  [key=0, style=bold, color=blue];
n218 -> n219  [key=0, style=solid];
n218 -> n207  [key=2, style=dotted];
n219 -> n220  [key=0, style=solid];
n219 -> n221  [key=2, style=dotted];
n220 -> n205  [key=0, style=bold, color=blue];
n222 -> n223  [key=0, style=solid];
n222 -> n228  [key=0, style=solid];
n222 -> n231  [key=0, style=solid];
n222 -> n236  [key=0, style=solid];
n222 -> n241  [key=0, style=solid];
n222 -> n246  [key=0, style=solid];
n222 -> n248  [key=0, style=solid];
n222 -> n251  [key=0, style=solid];
n222 -> n254  [key=0, style=solid];
n222 -> n265  [key=0, style=solid];
n222 -> n267  [key=0, style=solid];
n222 -> n272  [key=0, style=solid];
n222 -> n275  [key=0, style=solid];
n222 -> n277  [key=0, style=solid];
n222 -> n280  [key=0, style=solid];
n222 -> n282  [key=0, style=solid];
n222 -> n285  [key=0, style=solid];
n285 -> n286  [key=0, style=solid];
n285 -> n296  [key=2, style=dotted];
n223 -> n224  [key=0, style=solid];
n228 -> n229  [key=0, style=solid];
n231 -> n232  [key=0, style=solid];
n236 -> n237  [key=0, style=solid];
n241 -> n242  [key=0, style=solid];
n246 -> n247  [key=0, style=solid];
n248 -> n249  [key=0, style=solid];
n251 -> n252  [key=0, style=solid];
n254 -> n255  [key=0, style=solid];
n265 -> n266  [key=0, style=solid];
n267 -> n268  [key=0, style=solid];
n272 -> n273  [key=0, style=solid];
n275 -> n276  [key=0, style=solid];
n277 -> n278  [key=0, style=solid];
n280 -> n281  [key=0, style=solid];
n282 -> n283  [key=0, style=solid];
n224 -> n225  [key=0, style=solid];
n224 -> n287  [key=2, style=dotted];
n224 -> n226  [key=1, style=dashed, color=darkseagreen4, label=d];
n224 -> n227  [key=1, style=dashed, color=darkseagreen4, label=d];
n225 -> n226  [key=0, style=solid];
n225 -> n227  [key=0, style=solid];
n287 -> n405  [key=0, style=solid];
n226 -> n286  [key=0, style=solid];
n226 -> n288  [key=2, style=dotted];
n226 -> n127  [key=2, style=dotted];
n227 -> n286  [key=0, style=solid];
n227 -> n127  [key=2, style=dotted];
n229 -> n230  [key=0, style=solid];
n230 -> n286  [key=0, style=solid];
n230 -> n129  [key=2, style=dotted];
n230 -> n127  [key=2, style=dotted];
n232 -> n233  [key=0, style=solid];
n232 -> n88  [key=2, style=dotted];
n233 -> n234  [key=0, style=solid];
n233 -> n0  [key=2, style=dotted];
n233 -> n235  [key=1, style=dashed, color=darkseagreen4, label=newContext];
n234 -> n235  [key=0, style=solid];
n234 -> n130  [key=2, style=dotted];
n235 -> n286  [key=0, style=solid];
n235 -> n128  [key=2, style=dotted];
n237 -> n238  [key=0, style=solid];
n237 -> n88  [key=2, style=dotted];
n238 -> n239  [key=0, style=solid];
n238 -> n0  [key=2, style=dotted];
n238 -> n240  [key=1, style=dashed, color=darkseagreen4, label=newContext];
n239 -> n240  [key=0, style=solid];
n239 -> n130  [key=2, style=dotted];
n240 -> n286  [key=0, style=solid];
n240 -> n128  [key=2, style=dotted];
n242 -> n243  [key=0, style=solid];
n243 -> n244  [key=0, style=solid];
n243 -> n289  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n244 -> n290  [key=2, style=dotted];
n289 -> n297  [key=0, style=solid];
n289 -> n242  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Bson.BsonBinaryType binaryType"];
n289 -> n157  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadBinary"];
n245 -> n286  [key=0, style=solid];
n245 -> n127  [key=2, style=dotted];
n247 -> n286  [key=0, style=solid];
n247 -> n88  [key=2, style=dotted];
n249 -> n250  [key=0, style=solid];
n249 -> n157  [key=2, style=dotted];
n250 -> n286  [key=0, style=solid];
n250 -> n127  [key=2, style=dotted];
n252 -> n253  [key=0, style=solid];
n252 -> n205  [key=2, style=dotted];
n252 -> n291  [key=2, style=dotted];
n253 -> n286  [key=0, style=solid];
n253 -> n127  [key=2, style=dotted];
n255 -> n256  [key=0, style=solid];
n255 -> n292  [key=2, style=dotted];
n256 -> n257  [key=0, style=solid];
n256 -> n293  [key=2, style=dotted];
n256 -> n260  [key=1, style=dashed, color=darkseagreen4, label=utcDateTime];
n256 -> n262  [key=1, style=dashed, color=darkseagreen4, label=utcDateTime];
n256 -> n263  [key=1, style=dashed, color=darkseagreen4, label=utcDateTime];
n292 -> n413  [key=0, style=solid];
n257 -> n258  [key=0, style=solid];
n257 -> n256  [key=3, color=darkorchid, style=bold, label="Local variable System.DateTime dateTime"];
n260 -> n264  [key=0, style=solid];
n260 -> n294  [key=2, style=dotted];
n262 -> n264  [key=0, style=solid];
n262 -> n295  [key=2, style=dotted];
n263 -> n264  [key=0, style=solid];
n258 -> n259  [key=0, style=solid];
n258 -> n261  [key=0, style=solid];
n258 -> n263  [key=0, style=solid];
n259 -> n260  [key=0, style=solid];
n261 -> n262  [key=0, style=solid];
n264 -> n286  [key=0, style=solid];
n264 -> n127  [key=2, style=dotted];
n266 -> n286  [key=0, style=solid];
n266 -> n88  [key=2, style=dotted];
n268 -> n269  [key=0, style=solid];
n268 -> n30  [key=2, style=dotted];
n268 -> n270  [key=1, style=dashed, color=darkseagreen4, label=expression];
n269 -> n270  [key=0, style=solid];
n269 -> n30  [key=2, style=dotted];
n270 -> n271  [key=0, style=solid];
n271 -> n286  [key=0, style=solid];
n271 -> n127  [key=2, style=dotted];
n273 -> n274  [key=0, style=solid];
n273 -> n88  [key=2, style=dotted];
n274 -> n286  [key=0, style=solid];
n276 -> n286  [key=0, style=solid];
n276 -> n129  [key=2, style=dotted];
n276 -> n127  [key=2, style=dotted];
n278 -> n279  [key=0, style=solid];
n278 -> n88  [key=2, style=dotted];
n279 -> n286  [key=0, style=solid];
n281 -> n286  [key=0, style=solid];
n281 -> n128  [key=2, style=dotted];
n281 -> n127  [key=2, style=dotted];
n283 -> n284  [key=0, style=solid];
n284 -> n286  [key=0, style=solid];
n284 -> n292  [key=2, style=dotted];
n284 -> n127  [key=2, style=dotted];
n286 -> n204  [key=0, style=bold, color=blue];
n297 -> n298  [key=0, style=solid];
n297 -> n128  [key=2, style=dotted];
n297 -> n301  [key=1, style=dashed, color=darkseagreen4, label=dataLength];
n298 -> n299  [key=0, style=solid];
n298 -> n205  [key=2, style=dotted];
n298 -> n302  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Bson.BsonBinaryType"];
n301 -> n302  [key=0, style=solid];
n301 -> n157  [key=2, style=dotted];
n299 -> n300  [key=0, style=solid];
n299 -> n301  [key=0, style=solid];
n302 -> n289  [key=0, style=bold, color=blue];
n300 -> n301  [key=0, style=solid];
n300 -> n128  [key=2, style=dotted];
n303 -> n304  [key=0, style=solid];
n303 -> n331  [key=2, style=dotted];
n304 -> n305  [key=0, style=solid];
n304 -> n313  [key=1, style=dashed, color=darkseagreen4, label=builder];
n304 -> n319  [key=1, style=dashed, color=darkseagreen4, label=builder];
n304 -> n321  [key=1, style=dashed, color=darkseagreen4, label=builder];
n304 -> n327  [key=1, style=dashed, color=darkseagreen4, label=builder];
n304 -> n304  [key=3, color=darkorchid, style=bold, label="Local variable System.Text.StringBuilder builder"];
n331 -> n398  [key=0, style=solid];
n305 -> n306  [key=0, style=solid];
n305 -> n312  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
n305 -> n76  [key=3, color=darkorchid, style=bold, label="Local variable int totalBytesRead"];
n305 -> n311  [key=3, color=darkorchid, style=bold, label="Local variable int totalBytesRead"];
n313 -> n314  [key=0, style=solid];
n313 -> n317  [key=0, style=solid];
n319 -> n320  [key=0, style=solid];
n319 -> n321  [key=0, style=solid];
n321 -> n322  [key=0, style=solid];
n321 -> n336  [key=2, style=dotted];
n327 -> n330  [key=0, style=solid];
n327 -> n338  [key=2, style=dotted];
n306 -> n307  [key=0, style=solid];
n306 -> n311  [key=1, style=dashed, color=darkseagreen4, label=offset];
n306 -> n76  [key=3, color=darkorchid, style=bold, label="Local variable int offset"];
n312 -> n313  [key=0, style=solid];
n312 -> n312  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
n312 -> n315  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
n312 -> n326  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
n307 -> n308  [key=0, style=solid];
n307 -> n309  [key=1, style=dashed, color=darkseagreen4, label=count];
n307 -> n310  [key=1, style=dashed, color=darkseagreen4, label=count];
n307 -> n311  [key=1, style=dashed, color=darkseagreen4, label=count];
n307 -> n313  [key=1, style=dashed, color=darkseagreen4, label=count];
n307 -> n317  [key=1, style=dashed, color=darkseagreen4, label=count];
n307 -> n325  [key=1, style=dashed, color=darkseagreen4, label=count];
n307 -> n306  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
n311 -> n312  [key=0, style=solid];
n311 -> n314  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n311 -> n322  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n311 -> n323  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n308 -> n309  [key=0, style=solid];
n309 -> n310  [key=0, style=solid];
n309 -> n311  [key=0, style=solid];
n309 -> n221  [key=2, style=dotted];
n310 -> n309  [key=0, style=solid];
n310 -> n310  [key=1, style=dashed, color=darkseagreen4, label=count];
n310 -> n311  [key=1, style=dashed, color=darkseagreen4, label=count];
n310 -> n313  [key=1, style=dashed, color=darkseagreen4, label=count];
n310 -> n317  [key=1, style=dashed, color=darkseagreen4, label=count];
n310 -> n325  [key=1, style=dashed, color=darkseagreen4, label=count];
n317 -> n318  [key=0, style=solid];
n317 -> n334  [key=2, style=dotted];
n317 -> n322  [key=1, style=dashed, color=darkseagreen4, label=lastFullCharStop];
n317 -> n323  [key=1, style=dashed, color=darkseagreen4, label=lastFullCharStop];
n317 -> n324  [key=1, style=dashed, color=darkseagreen4, label=lastFullCharStop];
n325 -> n326  [key=0, style=solid];
n325 -> n328  [key=0, style=solid];
n314 -> n315  [key=0, style=solid];
n314 -> n332  [key=2, style=dotted];
n314 -> n316  [key=1, style=dashed, color=darkseagreen4, label=length];
n322 -> n323  [key=0, style=solid];
n322 -> n325  [key=0, style=solid];
n323 -> n324  [key=0, style=solid];
n315 -> n316  [key=0, style=solid];
n315 -> n207  [key=2, style=dotted];
n326 -> n327  [key=0, style=solid];
n326 -> n207  [key=2, style=dotted];
n316 -> n330  [key=0, style=solid];
n316 -> n333  [key=2, style=dotted];
n318 -> n319  [key=0, style=solid];
n318 -> n332  [key=2, style=dotted];
n318 -> n321  [key=1, style=dashed, color=darkseagreen4, label=charCount];
n334 -> n375  [key=0, style=solid];
n334 -> n383  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n384  [key=1, style=dashed, color=darkseagreen4, label=int];
n334 -> n334  [key=3, color=darkorchid, style=bold, label="method methodReturn int GetLastFullCharStop"];
n324 -> n329  [key=0, style=solid];
n324 -> n337  [key=2, style=dotted];
n320 -> n321  [key=0, style=solid];
n320 -> n335  [key=2, style=dotted];
n320 -> n327  [key=1, style=dashed, color=darkseagreen4, label=builder];
n328 -> n329  [key=0, style=solid];
n329 -> n306  [key=0, style=solid];
n329 -> n330  [key=0, style=solid];
n330 -> n30  [key=0, style=bold, color=blue];
n339 -> n340  [key=0, style=solid];
n339 -> n128  [key=2, style=dotted];
n339 -> n341  [key=1, style=dashed, color=darkseagreen4, label=length];
n340 -> n341  [key=0, style=solid];
n340 -> n207  [key=2, style=dotted];
n341 -> n342  [key=0, style=solid];
n341 -> n345  [key=2, style=dotted];
n341 -> n343  [key=1, style=dashed, color=darkseagreen4, label=s];
n342 -> n343  [key=0, style=solid];
n342 -> n221  [key=2, style=dotted];
n345 -> n346  [key=0, style=solid];
n345 -> n352  [key=1, style=dashed, color=darkseagreen4, label=int];
n345 -> n358  [key=1, style=dashed, color=darkseagreen4, label=int];
n345 -> n363  [key=1, style=dashed, color=darkseagreen4, label=int];
n345 -> n370  [key=1, style=dashed, color=darkseagreen4, label=int];
n343 -> n344  [key=0, style=solid];
n344 -> n129  [key=0, style=bold, color=blue];
n346 -> n347  [key=0, style=solid];
n346 -> n348  [key=0, style=solid];
n352 -> n353  [key=0, style=solid];
n358 -> n359  [key=0, style=solid];
n358 -> n361  [key=0, style=solid];
n363 -> n364  [key=0, style=solid];
n363 -> n335  [key=2, style=dotted];
n363 -> n365  [key=1, style=dashed, color=darkseagreen4, label=builder];
n363 -> n371  [key=1, style=dashed, color=darkseagreen4, label=builder];
n370 -> n351  [key=0, style=solid];
n370 -> n371  [key=0, style=solid];
n347 -> n372  [key=0, style=solid];
n348 -> n349  [key=0, style=solid];
n348 -> n331  [key=2, style=dotted];
n349 -> n350  [key=0, style=solid];
n349 -> n362  [key=1, style=dashed, color=darkseagreen4, label=builder];
n349 -> n365  [key=1, style=dashed, color=darkseagreen4, label=builder];
n349 -> n371  [key=1, style=dashed, color=darkseagreen4, label=builder];
n349 -> n304  [key=3, color=darkorchid, style=bold, label="Local variable System.Text.StringBuilder builder"];
n350 -> n351  [key=0, style=solid];
n350 -> n352  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
n350 -> n356  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
n350 -> n76  [key=3, color=darkorchid, style=bold, label="Local variable int totalBytesRead"];
n350 -> n353  [key=3, color=darkorchid, style=bold, label="Local variable int totalBytesRead"];
n362 -> n363  [key=0, style=solid];
n362 -> n364  [key=0, style=solid];
n365 -> n366  [key=0, style=solid];
n365 -> n336  [key=2, style=dotted];
n371 -> n372  [key=0, style=solid];
n371 -> n338  [key=2, style=dotted];
n351 -> n352  [key=0, style=solid];
n351 -> n353  [key=1, style=dashed, color=darkseagreen4, label=offset];
n351 -> n357  [key=1, style=dashed, color=darkseagreen4, label=offset];
n351 -> n76  [key=3, color=darkorchid, style=bold, label="Local variable int offset"];
n356 -> n357  [key=0, style=solid];
n356 -> n356  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
n356 -> n370  [key=1, style=dashed, color=darkseagreen4, label=totalBytesRead];
n353 -> n354  [key=0, style=solid];
n353 -> n373  [key=2, style=dotted];
n353 -> n356  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n353 -> n357  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n353 -> n351  [key=3, color=darkorchid, style=bold, label="Local variable int byteCount"];
n357 -> n358  [key=0, style=solid];
n357 -> n357  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n357 -> n359  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n357 -> n361  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n357 -> n366  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n357 -> n367  [key=1, style=dashed, color=darkseagreen4, label=byteCount];
n354 -> n355  [key=0, style=solid];
n354 -> n356  [key=0, style=solid];
n355 -> n372  [key=0, style=solid];
n355 -> n374  [key=2, style=dotted];
n359 -> n360  [key=0, style=solid];
n359 -> n332  [key=2, style=dotted];
n361 -> n362  [key=0, style=solid];
n361 -> n334  [key=2, style=dotted];
n361 -> n364  [key=1, style=dashed, color=darkseagreen4, label=lastFullCharStop];
n361 -> n366  [key=1, style=dashed, color=darkseagreen4, label=lastFullCharStop];
n361 -> n367  [key=1, style=dashed, color=darkseagreen4, label=lastFullCharStop];
n361 -> n368  [key=1, style=dashed, color=darkseagreen4, label=lastFullCharStop];
n366 -> n367  [key=0, style=solid];
n366 -> n369  [key=0, style=solid];
n367 -> n368  [key=0, style=solid];
n360 -> n372  [key=0, style=solid];
n360 -> n333  [key=2, style=dotted];
n364 -> n365  [key=0, style=solid];
n364 -> n332  [key=2, style=dotted];
n368 -> n370  [key=0, style=solid];
n368 -> n337  [key=2, style=dotted];
n369 -> n370  [key=0, style=solid];
n372 -> n345  [key=0, style=bold, color=blue];
n375 -> n376  [key=0, style=solid];
n375 -> n377  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n375 -> n378  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n375 -> n380  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n375 -> n382  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n375 -> n383  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n375 -> n385  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n375 -> n334  [key=3, color=darkorchid, style=bold, label="Local variable int lookbackPos"];
n383 -> n384  [key=0, style=solid];
n383 -> n385  [key=0, style=solid];
n384 -> n386  [key=0, style=solid];
n376 -> n377  [key=0, style=solid];
n376 -> n383  [key=1, style=dashed, color=darkseagreen4, label=bis];
n376 -> n76  [key=3, color=darkorchid, style=bold, label="Local variable int bis"];
n376 -> n387  [key=3, color=darkorchid, style=bold, label="Local variable int bis"];
n377 -> n378  [key=0, style=solid];
n377 -> n383  [key=0, style=solid];
n378 -> n379  [key=0, style=solid];
n378 -> n387  [key=2, style=dotted];
n378 -> n381  [key=1, style=dashed, color=darkseagreen4, label=bis];
n378 -> n383  [key=1, style=dashed, color=darkseagreen4, label=bis];
n380 -> n377  [key=0, style=solid];
n380 -> n380  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n380 -> n383  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n380 -> n385  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n382 -> n383  [key=0, style=solid];
n382 -> n382  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n382 -> n385  [key=1, style=dashed, color=darkseagreen4, label=lookbackPos];
n385 -> n386  [key=0, style=solid];
n379 -> n380  [key=0, style=solid];
n379 -> n381  [key=0, style=solid];
n387 -> n388  [key=0, style=solid];
n387 -> n390  [key=1, style=dashed, color=darkseagreen4, label=byte];
n387 -> n392  [key=1, style=dashed, color=darkseagreen4, label=byte];
n387 -> n394  [key=1, style=dashed, color=darkseagreen4, label=byte];
n387 -> n110  [key=3, color=darkorchid, style=bold, label="method methodReturn int BytesInSequence"];
n387 -> n237  [key=3, color=darkorchid, style=bold, label="method methodReturn int BytesInSequence"];
n387 -> n98  [key=3, color=darkorchid, style=bold, label="method methodReturn int BytesInSequence"];
n387 -> n76  [key=3, color=darkorchid, style=bold, label="method methodReturn int BytesInSequence"];
n381 -> n382  [key=0, style=solid];
n381 -> n383  [key=0, style=solid];
n386 -> n334  [key=0, style=bold, color=blue];
n388 -> n389  [key=0, style=solid];
n388 -> n390  [key=0, style=solid];
n390 -> n391  [key=0, style=solid];
n390 -> n392  [key=0, style=solid];
n392 -> n393  [key=0, style=solid];
n392 -> n394  [key=0, style=solid];
n394 -> n395  [key=0, style=solid];
n394 -> n396  [key=0, style=solid];
n389 -> n397  [key=0, style=solid];
n391 -> n397  [key=0, style=solid];
n393 -> n397  [key=0, style=solid];
n395 -> n397  [key=0, style=solid];
n396 -> n397  [key=0, style=solid];
n397 -> n387  [key=0, style=bold, color=blue];
n398 -> n399  [key=0, style=solid];
n398 -> n400  [key=0, style=solid];
n399 -> n400  [key=0, style=solid];
n400 -> n401  [key=0, style=solid];
n400 -> n403  [key=0, style=solid];
n401 -> n402  [key=0, style=solid];
n401 -> n404  [key=2, style=dotted];
n403 -> n331  [key=0, style=bold, color=blue];
n402 -> n403  [key=0, style=solid];
n405 -> n406  [key=0, style=solid];
n405 -> n207  [key=2, style=dotted];
n406 -> n407  [key=0, style=solid];
n406 -> n408  [key=2, style=dotted];
n407 -> n287  [key=0, style=bold, color=blue];
n409 -> n410  [key=0, style=solid];
n409 -> n207  [key=2, style=dotted];
n410 -> n411  [key=0, style=solid];
n410 -> n412  [key=2, style=dotted];
n411 -> n128  [key=0, style=bold, color=blue];
n413 -> n414  [key=0, style=solid];
n413 -> n207  [key=2, style=dotted];
n414 -> n415  [key=0, style=solid];
n414 -> n416  [key=2, style=dotted];
n415 -> n292  [key=0, style=bold, color=blue];
n417 -> n418  [key=0, style=solid];
n417 -> n207  [key=2, style=dotted];
n418 -> n419  [key=0, style=solid];
n418 -> n420  [key=2, style=dotted];
n419 -> n29  [key=0, style=bold, color=blue];
n421 -> n422  [key=0, style=solid];
n422 -> n207  [key=0, style=bold, color=blue];
n423 -> n424  [key=0, style=solid];
n423 -> n207  [key=2, style=dotted];
n424 -> n425  [key=0, style=solid];
n424 -> n426  [key=2, style=dotted];
n425 -> n157  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_7  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_10  [key=2, style=dotted];
m1_15 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodBase"];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [key=2, style=dotted];
m1_16 -> m1_10  [key=2, style=dotted];
m1_16 -> m1_9  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_20  [key=2, style=dotted];
m1_18 -> m1_14  [key=0, style=bold, color=blue];
m1_18 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=targetParameterExpression];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_11  [key=2, style=dotted];
m1_18 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=targetParameterExpression];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_5 -> m1_13  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=user];
m1_6 -> m1_14  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_0  [key=0, style=bold, color=blue];
m1_9 -> m1_5  [key=0, style=bold, color=blue];
m1_138 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_138 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_138 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_138 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_138 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_147 -> m1_74  [key=2, style=dotted];
m1_147 -> m1_148  [key=0, style=solid];
m1_149 -> m1_74  [key=2, style=dotted];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_82  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_139 -> m1_10  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_9  [key=2, style=dotted];
m1_145 -> m1_147  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_142 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=sourceParameterExpression];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_11  [key=2, style=dotted];
m1_142 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=sourceParameterExpression];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label=fieldExpression];
m1_148 -> m1_135  [key=2, style=dotted];
m1_146 -> m1_149  [key=0, style=solid];
m1_146 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label=fieldExpression];
m1_146 -> m1_135  [key=2, style=dotted];
m1_143 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label=valueParameterExpression];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_11  [key=2, style=dotted];
m1_143 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=valueParameterExpression];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_13  [key=2, style=dotted];
m1_140 -> m1_142  [key=0, style=solid];
m1_140 -> m1_155  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_154  [key=0, style=solid];
m1_141 -> m1_156  [key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_14  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_154 -> m1_138  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m1_0 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodBase"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_10  [key=2, style=dotted];
m1_1 -> m1_9  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=2, style=dotted];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=argsParameterExpression];
m1_4 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_20 -> m1_12  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_13 -> m1_11  [key=0, style=bold, color=blue];
m1_157 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m1_157 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m1_157 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m1_157 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m1_171 -> m1_80  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_165 -> m1_74  [key=2, style=dotted];
m1_165 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=readValueParameter];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=readValueParameter];
m1_170 -> m1_74  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_158 -> m1_10  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_9  [key=2, style=dotted];
m1_166 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=setMethod];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_177  [key=2, style=dotted];
m1_166 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label=setMethod];
m1_166 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label=setMethod];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_13  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label=valueParameter];
m1_164 -> m1_11  [key=2, style=dotted];
m1_169 -> m1_172  [key=0, style=solid];
m1_169 -> m1_178  [key=2, style=dotted];
m1_163 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=instanceParameter];
m1_163 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label=instanceParameter];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_11  [key=2, style=dotted];
m1_168 -> m1_170  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_159 -> m1_155  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_161  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_14  [key=2, style=dotted];
m1_160 -> m1_175  [key=0, style=solid];
m1_160 -> m1_176  [key=2, style=dotted];
m1_162 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m1_162 -> m1_163  [key=0, style=solid];
m1_161 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=instanceType];
m1_161 -> m1_162  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_175 -> m1_157  [key=0, style=bold, color=blue];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_11  [key=2, style=dotted];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=argsParameterExpression];
m1_84 -> m1_85  [key=0, style=solid, color=green];
m1_84 -> m1_86  [key=1, style=dashed, color=green, label="System.Type"];
m1_84 -> m1_87  [key=1, style=dashed, color=green, label="System.Type"];
m1_84 -> m1_99  [key=1, style=dashed, color=green, label="System.Type"];
m1_84 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_84 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_84 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_85 -> m1_86  [key=0, style=solid, color=green];
m1_85 -> m1_10  [key=2, style=dotted, color=green];
m1_86 -> m1_87  [key=0, style=solid, color=green];
m1_86 -> m1_88  [key=0, style=solid, color=green];
m1_86 -> m1_96  [key=2, style=dotted, color=green];
m1_87 -> m1_94  [key=0, style=solid, color=green];
m1_88 -> m1_89  [key=0, style=solid, color=green];
m1_88 -> m1_90  [key=1, style=dashed, color=green, label=resultType];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_97  [key=2, style=dotted];
m1_90 -> m1_74  [key=2, style=dotted];
m1_90 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=expression];
m1_90 -> m1_91  [key=0, style=solid];
m1_95 -> m1_94  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_13  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_14  [key=2, style=dotted];
m1_94 -> m1_84  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_51  [key=1, style=dashed, color=green, label="System.Reflection.MethodBase"];
m1_12 -> m1_52  [key=1, style=dashed, color=green, label="System.Reflection.MethodBase"];
m1_12 -> m1_55  [key=1, style=dashed, color=green, label="System.Type"];
m1_12 -> m1_57  [key=1, style=dashed, color=green, label="System.Type"];
m1_12 -> m1_25  [key=0, style=solid];
m1_12 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.ParameterExpression"];
m1_12 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodBase"];
m1_12 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodBase"];
m1_12 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodBase"];
m1_12 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodBase"];
m1_12 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodBase"];
m1_74 -> m1_179  [key=0, style=solid];
m1_74 -> m1_180  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_74 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m1_74 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_74 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m1_74 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_74 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_74 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m1_74 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m1_74 -> m1_189  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m1_179 -> m1_180  [key=0, style=solid];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_182  [key=0, style=solid];
m1_180 -> m1_155  [key=2, style=dotted];
m1_180 -> m1_191  [key=2, style=dotted];
m1_181 -> m1_190  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_189  [key=0, style=solid];
m1_182 -> m1_155  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_192  [key=2, style=dotted];
m1_183 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=convert];
m1_183 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label=convert];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_188  [key=0, style=solid];
m1_184 -> m1_193  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_194  [key=2, style=dotted];
m1_185 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=toTargetTypeMethod];
m1_187 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=convert];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_195  [key=2, style=dotted];
m1_187 -> m1_178  [key=2, style=dotted];
m1_187 -> m1_196  [key=2, style=dotted];
m1_188 -> m1_190  [key=0, style=solid];
m1_188 -> m1_197  [key=2, style=dotted];
m1_188 -> m1_198  [key=2, style=dotted];
m1_188 -> m1_199  [key=2, style=dotted];
m1_188 -> m1_196  [key=2, style=dotted];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_200  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_188  [key=0, style=solid];
m1_190 -> m1_74  [key=0, style=bold, color=blue];
m1_105 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m1_105 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m1_105 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.PropertyInfo"];
m1_114 -> m1_74  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_116 -> m1_74  [key=2, style=dotted];
m1_116 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=resultExpression];
m1_116 -> m1_117  [key=0, style=solid];
m1_106 -> m1_10  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_9  [key=2, style=dotted];
m1_109 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=parameterExpression];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_11  [key=2, style=dotted];
m1_109 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label=parameterExpression];
m1_112 -> m1_114  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_122  [key=2, style=dotted];
m1_113 -> m1_116  [key=0, style=solid];
m1_113 -> m1_122  [key=2, style=dotted];
m1_108 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=resultType];
m1_108 -> m1_109  [key=0, style=solid];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_13  [key=2, style=dotted];
m1_107 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=instanceType];
m1_107 -> m1_108  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_121  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_14  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_120 -> m1_105  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_13  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_14  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_15  [key=0, style=bold, color=blue];
m1_102 -> m1_103  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid, color=green];
m1_99 -> m1_101  [key=2, style=dotted, color=green];
m1_98 -> m1_99  [key=0, style=solid, color=green];
m1_100 -> m1_98  [key=0, style=bold, color=blue];
m1_103 -> m1_101  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_104 -> m1_102  [key=0, style=bold, color=blue];
m1_123 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_123 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_123 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.FieldInfo"];
m1_129 -> m1_74  [key=2, style=dotted];
m1_129 -> m1_130  [key=0, style=solid];
m1_131 -> m1_74  [key=2, style=dotted];
m1_131 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=fieldExpression];
m1_131 -> m1_132  [key=0, style=solid];
m1_124 -> m1_10  [key=2, style=dotted];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_9  [key=2, style=dotted];
m1_127 -> m1_129  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_125 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label=sourceParameter];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_11  [key=2, style=dotted];
m1_125 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=sourceParameter];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_135  [key=2, style=dotted];
m1_128 -> m1_131  [key=0, style=solid];
m1_128 -> m1_135  [key=2, style=dotted];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_136  [key=2, style=dotted];
m1_132 -> m1_137  [key=2, style=dotted];
m1_126 -> m1_127  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_134 -> m1_123  [key=0, style=bold, color=blue];
m1_51 -> m1_52  [key=0, style=solid, color=green];
m1_51 -> m1_80  [key=2, style=dotted, color=green];
m1_51 -> m1_55  [key=1, style=dashed, color=green, label=callExpression];
m1_51 -> m1_56  [key=1, style=dashed, color=green, label=callExpression];
m1_51 -> m1_57  [key=1, style=dashed, color=green, label=callExpression];
m1_50 -> m1_51  [key=0, style=solid, color=green];
m1_50 -> m1_74  [key=2, style=dotted];
m1_26 -> m1_51  [key=1, style=dashed, color=green, label=argsExpression];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=argsExpression];
m1_26 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label=argsExpression];
m1_26 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label=argsExpression];
m1_52 -> m1_53  [key=0, style=solid, color=green];
m1_52 -> m1_54  [key=1, style=dashed, color=green, label=m];
m1_55 -> m1_55  [key=1, style=dashed, color=green, label=callExpression];
m1_55 -> m1_58  [key=0, style=solid, color=green];
m1_55 -> m1_74  [key=2, style=dotted, color=green];
m1_55 -> m1_65  [key=1, style=dashed, color=green, label=callExpression];
m1_55 -> m1_67  [key=1, style=dashed, color=green, label=callExpression];
m1_56 -> m1_58  [key=0, style=solid, color=green];
m1_56 -> m1_56  [key=1, style=dashed, color=green, label=callExpression];
m1_56 -> m1_72  [key=2, style=dotted, color=green];
m1_56 -> m1_81  [key=2, style=dotted, color=green];
m1_56 -> m1_65  [key=1, style=dashed, color=green, label=callExpression];
m1_56 -> m1_67  [key=1, style=dashed, color=green, label=callExpression];
m1_57 -> m1_57  [key=1, style=dashed, color=green, label=callExpression];
m1_57 -> m1_58  [key=0, style=solid, color=green];
m1_57 -> m1_74  [key=2, style=dotted, color=green];
m1_57 -> m1_65  [key=1, style=dashed, color=green, label=callExpression];
m1_57 -> m1_67  [key=1, style=dashed, color=green, label=callExpression];
m1_47 -> m1_52  [key=0, style=solid, color=green];
m1_47 -> m1_55  [key=1, style=dashed, color=green, label=callExpression];
m1_47 -> m1_57  [key=1, style=dashed, color=green, label=callExpression];
m1_47 -> m1_56  [key=1, style=dashed, color=green, label=callExpression];
m1_47 -> m1_78  [key=2, style=dotted];
m1_49 -> m1_52  [key=0, style=solid, color=green];
m1_49 -> m1_55  [key=1, style=dashed, color=green, label=callExpression];
m1_49 -> m1_57  [key=1, style=dashed, color=green, label=callExpression];
m1_49 -> m1_56  [key=1, style=dashed, color=green, label=callExpression];
m1_49 -> m1_79  [key=2, style=dotted];
m1_53 -> m1_57  [key=0, style=solid, color=green];
m1_53 -> m1_54  [key=0, style=solid, color=green];
m1_54 -> m1_55  [key=0, style=solid, color=green];
m1_54 -> m1_56  [key=0, style=solid, color=green];
m1_58 -> m1_59  [key=0, style=solid, color=green];
m1_58 -> m1_67  [key=0, style=solid, color=green];
m1_65 -> m1_66  [key=0, style=solid, color=green];
m1_65 -> m1_77  [key=2, style=dotted, color=green];
m1_67 -> m1_68  [key=0, style=solid, color=green];
m1_27 -> m1_58  [key=1, style=dashed, color=green, label=refParameterMap];
m1_27 -> m1_61  [key=1, style=dashed, color=green, label=refParameterMap];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> n16  [key=2, style=dotted];
m1_27 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=refParameterMap];
m1_59 -> m1_60  [key=0, style=solid, color=green];
m1_59 -> n16  [key=2, style=dotted, color=green];
m1_59 -> m1_64  [key=1, style=dashed, color=green, label=variableExpressions];
m1_59 -> m1_66  [key=1, style=dashed, color=green, label=variableExpressions];
m1_61 -> m1_62  [key=0, style=solid, color=green];
m1_61 -> m1_65  [key=0, style=solid, color=green];
m1_61 -> m1_63  [key=1, style=dashed, color=green, label=p];
m1_61 -> m1_64  [key=1, style=dashed, color=green, label=p];
m1_60 -> m1_61  [key=0, style=solid, color=green];
m1_60 -> m1_65  [key=1, style=dashed, color=green, label=bodyExpressions];
m1_60 -> n16  [key=2, style=dotted, color=green];
m1_60 -> m1_63  [key=1, style=dashed, color=green, label=bodyExpressions];
m1_60 -> m1_66  [key=1, style=dashed, color=green, label=bodyExpressions];
m1_64 -> m1_61  [key=0, style=solid, color=green];
m1_64 -> m1_77  [key=2, style=dotted, color=green];
m1_62 -> m1_64  [key=0, style=solid, color=green];
m1_62 -> m1_63  [key=0, style=solid, color=green];
m1_63 -> m1_64  [key=0, style=solid, color=green];
m1_63 -> m1_82  [key=2, style=dotted, color=green];
m1_63 -> m1_77  [key=2, style=dotted, color=green];
m1_66 -> m1_67  [key=0, style=solid, color=green];
m1_66 -> m1_83  [key=2, style=dotted, color=green];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_69  [key=2, style=dotted];
m1_25 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=parametersInfo];
m1_25 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=parametersInfo];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_73  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_48  [key=0, style=solid];
m1_48 -> m1_50  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_38 -> m1_74  [key=2, style=dotted];
m1_38 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=argExpression];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=argExpression];
m1_28 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_28 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_28 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_41 -> m1_77  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_76  [key=2, style=dotted];
m1_36 -> m1_72  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_45  [key=0, style=solid];
m1_30 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m1_30 -> m1_31  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_39 -> m1_43  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_44 -> m1_29  [key=0, style=solid];
m1_44 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_31 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=parameterType];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=parameterType];
m1_31 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=parameterType];
m1_31 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=parameterType];
m1_32 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=isByRef];
m1_32 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=isByRef];
m1_32 -> m1_33  [key=0, style=solid];
m1_34 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=parameterType];
m1_34 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=parameterType];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_71  [key=2, style=dotted];
m1_34 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=parameterType];
m1_35 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=isByRef];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=isByRef];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=variable];
m1_40 -> m1_75  [key=2, style=dotted];
m1_33 -> m1_36  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_68 -> m1_12  [key=0, style=bold, color=blue];
m1_201 -> m1_55  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_57  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_201 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory"];
m1_202 -> m1_99  [key=1, style=dashed, color=green, label="System.Type"];
m1_202 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1 -> m3_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_6  [key=2, style=dotted];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_7  [key=2, style=dotted];
m3_3 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_9  [key=2, style=dotted];
m3_4 -> m3_10  [key=2, style=dotted];
m3_4 -> m3_4  [key=3, color=darkorchid, style=bold, label="Field variable long InitialJavaScriptDateTicks"];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> n16  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_4 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ClassWithArray"];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=char];
m7_16 -> m7_107  [key=3, color=darkorchid, style=bold, label="Parameter variable char quoteChar"];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_21  [key=0, style=solid];
m7_18 -> m7_22  [key=0, style=solid];
m7_20 -> m7_22  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_16  [key=0, style=bold, color=blue];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_23 -> m7_27  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m7_23 -> m7_25  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldEscapeJavaScriptString"];
m7_23 -> m7_28  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldEscapeJavaScriptString"];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_26  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_29  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_26  [key=0, style=solid];
m7_25 -> m7_30  [key=0, style=solid];
m7_29 -> m7_30  [key=0, style=solid];
m7_28 -> m7_30  [key=0, style=solid];
m7_30 -> m7_23  [key=0, style=bold, color=blue];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m7_31 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label="bool[]"];
m7_31 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.StringEscapeHandling"];
m7_31 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.StringEscapeHandling"];
m7_31 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_78  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_85  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_88  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_31 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label=bool];
m7_31 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m7_31 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_31 -> m7_109  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.TextWriter writer"];
m7_31 -> m7_107  [key=3, color=darkorchid, style=bold, label="Parameter variable bool appendDelimiters"];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_97  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_94  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_87  [key=0, style=solid];
m7_37 -> m7_2  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_38 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_38 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_38 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_38 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label=c];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_37  [key=0, style=solid];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_69  [key=0, style=solid];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_63  [key=0, style=solid];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_65  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid, color=red];
m7_65 -> m7_67  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_98  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid, color=red];
m7_75 -> m7_80  [key=0, style=solid];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_100  [key=2, style=dotted];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_101  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_102  [key=2, style=dotted];
m7_84 -> m7_86  [key=0, style=solid];
m7_84 -> m7_103  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_102  [key=2, style=dotted];
m7_88 -> m7_94  [key=0, style=solid];
m7_88 -> m7_103  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_91  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_89 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_89 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_92  [key=0, style=solid];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_101  [key=2, style=dotted];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_102  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_96  [key=0, style=solid];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_97  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_35 -> m7_2  [key=3, color=darkorchid, style=bold, label="Local variable int lastWritePosition"];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_36 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_36 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_36 -> m7_82  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_36 -> m7_86  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_82  [key=0, style=solid];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_73 -> m7_76  [key=1, style=dashed, color=red, label=length];
m7_73 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_73 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label=length];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_89  [key=0, style=solid];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_82 -> m7_89  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_82 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m7_86 -> m7_37  [key=0, style=solid];
m7_86 -> m7_86  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_44  [key=0, style=solid];
m7_41 -> m7_46  [key=0, style=solid];
m7_41 -> m7_48  [key=0, style=solid];
m7_41 -> m7_50  [key=0, style=solid];
m7_41 -> m7_52  [key=0, style=solid];
m7_41 -> m7_54  [key=0, style=solid];
m7_41 -> m7_56  [key=0, style=solid];
m7_41 -> m7_58  [key=0, style=solid];
m7_41 -> m7_60  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid];
m7_42 -> m7_43  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_54 -> m7_55  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_43 -> m7_70  [key=0, style=solid];
m7_45 -> m7_70  [key=0, style=solid];
m7_47 -> m7_70  [key=0, style=solid];
m7_49 -> m7_70  [key=0, style=solid];
m7_51 -> m7_70  [key=0, style=solid];
m7_53 -> m7_70  [key=0, style=solid];
m7_55 -> m7_70  [key=0, style=solid];
m7_57 -> m7_70  [key=0, style=solid];
m7_59 -> m7_70  [key=0, style=solid];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_69 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_62 -> m7_70  [key=0, style=solid];
m7_62 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_62 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_64 -> m7_70  [key=0, style=solid];
m7_64 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_64 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_66 -> m7_67  [key=0, style=solid, color=red];
m7_66 -> m7_75  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_78  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_80  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_81  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_85  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_90  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_92  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_93  [key=1, style=dashed, color=red, label="ref char[]"];
m7_66 -> m7_96  [key=1, style=dashed, color=red, label="ref char[]"];
m7_68 -> m7_70  [key=0, style=solid];
m7_68 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_68 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=escapedValue];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_37  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_99  [key=2, style=dotted];
m7_71 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m7_71 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m7_71 -> m7_77  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m7_71 -> m7_83  [key=1, style=dashed, color=darkseagreen4, label=isEscapedUnicodeText];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=start];
m7_74 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label=start];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_79  [key=0, style=solid];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_85  [key=0, style=solid];
m7_76 -> m7_77  [key=0, style=solid, color=red];
m7_76 -> m7_78  [key=1, style=dashed, color=red, label=newBuffer];
m7_76 -> m7_79  [key=1, style=dashed, color=red, label=newBuffer];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_85  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_79 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_91 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label="ref char[]"];
m7_96 -> m7_31  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> n16  [key=2, style=dotted];
m7_1 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m7_1 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m7_1 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m7_1 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=escapeChars];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_2 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_2 -> m7_2  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_14  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_8  [key=0, style=solid];
m7_6 -> m7_15  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_10  [key=0, style=solid];
m7_8 -> m7_15  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [key=0, style=solid];
m7_10 -> m7_15  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_6  [key=0, style=solid];
m7_5 -> m7_3  [key=0, style=solid];
m7_5 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_7 -> m7_6  [key=0, style=solid];
m7_9 -> m7_8  [key=0, style=solid];
m7_11 -> m7_10  [key=0, style=solid];
m7_12 -> m7_0  [key=0, style=bold, color=blue];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_107 -> m7_111  [key=1, style=dashed, color=red, label=string];
m7_107 -> m7_104  [key=3, color=darkorchid, style=bold, label="Parameter variable bool appendDelimiters"];
m7_107 -> m7_2  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.StringEscapeHandling stringEscapeHandling"];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_16  [key=2, style=dotted];
m7_108 -> m7_111  [key=1, style=dashed, color=red, label=charEscapeFlags];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_114  [key=2, style=dotted];
m7_109 -> m7_115  [key=2, style=dotted];
m7_109 -> m7_111  [key=1, style=dashed, color=red, label=w];
m7_109 -> m7_112  [key=1, style=dashed, color=darkseagreen4, label=w];
m7_111 -> m7_112  [key=0, style=solid, color=red];
m7_111 -> m7_31  [key=2, style=dotted, color=red];
m7_111 -> m7_111  [key=1, style=dashed, color=red, label=buffer];
m7_110 -> m7_111  [key=0, style=solid, color=red];
m7_110 -> m7_110  [key=3, color=darkorchid, style=bold, label="Local variable char[] buffer"];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_116  [key=2, style=dotted];
m7_113 -> m7_107  [key=0, style=bold, color=blue];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_107  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToEscapedJavaScriptString"];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_107  [key=2, style=dotted];
m7_106 -> m7_104  [key=0, style=bold, color=blue];
m8_61 -> m8_62  [key=0, style=solid];
m8_63 -> m8_13  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_64 -> m8_61  [key=0, style=bold, color=blue];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_8  [key=0, style=solid];
m8_6 -> m8_13  [key=2, style=dotted];
m8_12 -> m8_9  [key=0, style=bold, color=blue];
m8_15 -> m8_16  [key=0, style=solid, color=green];
m8_15 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_15 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_15 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_15 -> m8_6  [key=2, style=dotted, color=green];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_18  [key=0, style=solid];
m8_16 -> m8_14  [key=0, style=bold, color=blue];
m8_17 -> m8_25  [key=0, style=solid];
m8_17 -> m8_26  [key=2, style=dotted];
m8_23 -> m8_25  [key=0, style=solid];
m8_23 -> m8_29  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid, color=green];
m8_23 -> m8_6  [key=2, style=dotted];
m8_23 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerSettings];
m8_24 -> m8_25  [key=0, style=solid, color=green];
m8_24 -> m8_30  [key=2, style=dotted];
m8_24 -> m8_31  [key=2, style=dotted];
m8_24 -> m8_32  [key=2, style=dotted, color=green];
m8_24 -> m8_26  [key=1, style=dashed, color=green, label=serializedString];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_24  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_23  [key=0, style=solid];
m8_19 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m8_19 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_14  [key=2, style=dotted];
m8_20 -> m8_29  [key=2, style=dotted];
m8_20 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m8_20 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_27  [key=2, style=dotted];
m8_21 -> m8_24  [key=1, style=dashed, color=green, label=inputContext];
m8_21 -> m8_30  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_28  [key=2, style=dotted];
m8_22 -> m8_31  [key=2, style=dotted];
m8_25 -> m8_15  [key=0, style=bold, color=blue];
m8_25 -> m8_26  [key=0, style=solid, color=green];
m8_25 -> m8_33  [key=2, style=dotted, color=green];
m8_25 -> m8_34  [key=2, style=dotted, color=green];
m8_198 -> m8_199  [key=0, style=solid];
m8_201 -> m8_6  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_205  [key=2, style=dotted];
m8_199 -> m8_201  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_199 -> m8_200  [key=0, style=solid];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_155  [key=2, style=dotted];
m8_200 -> m8_202  [key=1, style=dashed, color=darkseagreen4, label=c];
m8_200 -> m8_203  [key=1, style=dashed, color=darkseagreen4, label=c];
m8_202 -> m8_8  [key=2, style=dotted];
m8_202 -> m8_203  [key=0, style=solid];
m8_203 -> m8_8  [key=2, style=dotted];
m8_203 -> m8_204  [key=0, style=solid];
m8_204 -> m8_198  [key=0, style=bold, color=blue];
m8_10 -> m8_11  [key=0, style=solid, color=green];
m8_10 -> m8_15  [key=1, style=dashed, color=green, label=json];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_35  [key=0, style=solid];
m8_93 -> m8_94  [key=0, style=solid];
m8_97 -> m8_6  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_106  [key=2, style=dotted];
m8_97 -> m8_107  [key=2, style=dotted];
m8_97 -> m8_99  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_97 -> m8_100  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_97 -> m8_101  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_95 -> m8_97  [key=1, style=dashed, color=darkseagreen4, label=t1];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_104  [key=2, style=dotted];
m8_95 -> m8_102  [key=1, style=dashed, color=darkseagreen4, label=t1];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_105  [key=2, style=dotted];
m8_96 -> m8_102  [key=1, style=dashed, color=darkseagreen4, label=t2];
m8_98 -> m8_8  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_99 -> m8_8  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_100 -> m8_8  [key=2, style=dotted];
m8_100 -> m8_101  [key=0, style=solid];
m8_101 -> m8_8  [key=2, style=dotted];
m8_101 -> m8_102  [key=0, style=solid];
m8_94 -> m8_95  [key=0, style=solid];
m8_102 -> m8_60  [key=2, style=dotted];
m8_102 -> m8_103  [key=0, style=solid];
m8_102 -> m8_108  [key=2, style=dotted];
m8_103 -> m8_93  [key=0, style=bold, color=blue];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_7  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_51 -> m8_6  [key=2, style=dotted];
m8_51 -> m8_17  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_51 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_51 -> m8_55  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_51 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_51 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label=circularList];
m8_50 -> m8_51  [key=0, style=solid];
m8_52 -> m8_8  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_53 -> m8_8  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_54 -> m8_8  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_55 -> m8_8  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_56 -> m8_8  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_59  [key=2, style=dotted];
m8_57 -> m8_60  [key=2, style=dotted];
m8_58 -> m8_49  [key=0, style=bold, color=blue];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_14  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_87 -> m8_6  [key=2, style=dotted];
m8_87 -> m8_17  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_89  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_87 -> m8_90  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_87 -> m8_91  [key=1, style=dashed, color=darkseagreen4, label=employees];
m8_86 -> m8_87  [key=0, style=solid];
m8_88 -> m8_8  [key=2, style=dotted];
m8_88 -> m8_89  [key=0, style=solid];
m8_89 -> m8_8  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_90 -> m8_8  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_91 -> m8_8  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_92 -> m8_85  [key=0, style=bold, color=blue];
m8_156 -> m8_157  [key=0, style=solid];
m8_158 -> m8_6  [key=2, style=dotted];
m8_158 -> m8_17  [key=2, style=dotted];
m8_158 -> m8_159  [key=0, style=solid];
m8_157 -> m8_158  [key=0, style=solid];
m8_159 -> m8_8  [key=2, style=dotted];
m8_159 -> m8_160  [key=0, style=solid];
m8_160 -> m8_156  [key=0, style=bold, color=blue];
m8_161 -> m8_162  [key=0, style=solid];
m8_162 -> m8_6  [key=2, style=dotted];
m8_162 -> m8_17  [key=2, style=dotted];
m8_162 -> m8_163  [key=0, style=solid];
m8_162 -> m8_164  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_162 -> m8_165  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_163 -> m8_29  [key=2, style=dotted];
m8_163 -> m8_8  [key=2, style=dotted];
m8_163 -> m8_164  [key=0, style=solid];
m8_164 -> m8_29  [key=2, style=dotted];
m8_164 -> m8_8  [key=2, style=dotted];
m8_164 -> m8_165  [key=0, style=solid];
m8_165 -> m8_166  [key=0, style=solid];
m8_165 -> m8_167  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_165 -> m8_168  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_166 -> m8_8  [key=2, style=dotted];
m8_166 -> m8_167  [key=0, style=solid];
m8_167 -> m8_8  [key=2, style=dotted];
m8_167 -> m8_168  [key=0, style=solid];
m8_168 -> m8_8  [key=2, style=dotted];
m8_168 -> m8_169  [key=0, style=solid];
m8_169 -> m8_161  [key=0, style=bold, color=blue];
m8_170 -> m8_171  [key=0, style=solid];
m8_171 -> m8_6  [key=2, style=dotted];
m8_171 -> m8_17  [key=2, style=dotted];
m8_171 -> m8_172  [key=0, style=solid];
m8_172 -> m8_173  [key=0, style=solid];
m8_173 -> m8_8  [key=2, style=dotted];
m8_173 -> m8_174  [key=0, style=solid];
m8_174 -> m8_170  [key=0, style=bold, color=blue];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_8  [key=2, style=dotted];
m8_28 -> m8_18  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_2 -> m8_6  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_7  [key=2, style=dotted];
m8_2 -> m8_4  [key=0, style=solid];
m8_2 -> m8_10  [key=2, style=dotted];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=0, style=solid];
m8_1 -> m8_9  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_11  [key=2, style=dotted];
m8_4 -> m8_8  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_6  [key=0, style=solid];
m8_5 -> m8_0  [key=0, style=bold, color=blue];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_12  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid, color=green];
m8_144 -> m8_145  [key=0, style=solid];
m8_148 -> m8_6  [key=2, style=dotted];
m8_148 -> m8_17  [key=2, style=dotted];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_150  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_148 -> m8_151  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_148 -> m8_152  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_148 -> m8_153  [key=1, style=dashed, color=darkseagreen4, label=c2];
m8_147 -> m8_34  [key=2, style=dotted];
m8_147 -> m8_148  [key=0, style=solid];
m8_146 -> m8_148  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_47  [key=2, style=dotted];
m8_149 -> m8_8  [key=2, style=dotted];
m8_149 -> m8_150  [key=0, style=solid];
m8_150 -> m8_8  [key=2, style=dotted];
m8_150 -> m8_151  [key=0, style=solid];
m8_151 -> m8_8  [key=2, style=dotted];
m8_151 -> m8_152  [key=0, style=solid];
m8_152 -> m8_8  [key=2, style=dotted];
m8_152 -> m8_153  [key=0, style=solid];
m8_153 -> m8_8  [key=2, style=dotted];
m8_153 -> m8_154  [key=0, style=solid];
m8_145 -> m8_146  [key=0, style=solid];
m8_145 -> m8_155  [key=2, style=dotted];
m8_154 -> m8_144  [key=0, style=bold, color=blue];
m8_8 -> m8_0  [key=0, style=bold, color=blue];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_38  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid, color=green];
m8_38 -> m8_33  [key=2, style=dotted, color=green];
m8_38 -> m8_34  [key=2, style=dotted, color=green];
m8_37 -> m8_38  [key=0, style=solid, color=green];
m8_37 -> m8_39  [key=1, style=dashed, color=green, label=jsonString];
m8_37 -> m8_47  [key=2, style=dotted];
m8_37 -> m8_13  [key=0, style=bold, color=blue];
m8_39 -> m8_40  [key=0, style=solid, color=green];
m8_39 -> m8_6  [key=2, style=dotted, color=green];
m8_39 -> m8_17  [key=2, style=dotted, color=green];
m8_39 -> m8_41  [key=1, style=dashed, color=green, label=actual];
m8_39 -> m8_42  [key=1, style=dashed, color=green, label=actual];
m8_39 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_39 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_29  [key=2, style=dotted];
m8_40 -> m8_8  [key=2, style=dotted];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_29  [key=2, style=dotted];
m8_41 -> m8_8  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_45  [key=2, style=dotted];
m8_36 -> m8_29  [key=2, style=dotted];
m8_36 -> m8_46  [key=2, style=dotted];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_48  [key=2, style=dotted];
m8_44 -> m8_35  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid, color=green];
m8_11 -> m8_12  [key=0, style=solid, color=green];
m8_11 -> m8_13  [key=2, style=dotted, color=green];
m8_11 -> m8_14  [key=1, style=dashed, color=green, label="lambda expression"];
m8_125 -> m8_126  [key=0, style=solid];
m8_130 -> m8_6  [key=2, style=dotted];
m8_130 -> m8_17  [key=2, style=dotted];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_132  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m8_130 -> m8_133  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m8_126 -> m8_33  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_129  [key=1, style=dashed, color=darkseagreen4, label=listRef];
m8_129 -> m8_34  [key=2, style=dotted];
m8_129 -> m8_130  [key=0, style=solid];
m8_128 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_47  [key=2, style=dotted];
m8_131 -> m8_8  [key=2, style=dotted];
m8_131 -> m8_132  [key=0, style=solid];
m8_132 -> m8_133  [key=0, style=solid];
m8_132 -> m8_143  [key=2, style=dotted];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_135  [key=1, style=dashed, color=darkseagreen4, label=nested];
m8_133 -> m8_136  [key=1, style=dashed, color=darkseagreen4, label=nested];
m8_133 -> m8_137  [key=1, style=dashed, color=darkseagreen4, label=nested];
m8_133 -> m8_138  [key=1, style=dashed, color=darkseagreen4, label=nested];
m8_133 -> m8_139  [key=1, style=dashed, color=darkseagreen4, label=nested];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_141  [key=2, style=dotted];
m8_127 -> n16  [key=2, style=dotted];
m8_134 -> m8_8  [key=2, style=dotted];
m8_134 -> m8_135  [key=0, style=solid];
m8_135 -> m8_8  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_136 -> m8_8  [key=2, style=dotted];
m8_136 -> m8_137  [key=0, style=solid];
m8_137 -> m8_8  [key=2, style=dotted];
m8_137 -> m8_138  [key=0, style=solid];
m8_138 -> m8_8  [key=2, style=dotted];
m8_138 -> m8_139  [key=0, style=solid];
m8_139 -> m8_8  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_140 -> m8_125  [key=0, style=bold, color=blue];
m8_69 -> m8_70  [key=0, style=solid];
m8_80 -> m8_6  [key=2, style=dotted];
m8_80 -> m8_17  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_82  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_80 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label=result];
m8_79 -> m8_34  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_78 -> m8_80  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_47  [key=2, style=dotted];
m8_81 -> m8_8  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_82 -> m8_8  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_83 -> m8_8  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_70 -> m8_30  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label=reference];
m8_70 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label=reference];
m8_70 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label=reference];
m8_74 -> m8_30  [key=2, style=dotted];
m8_74 -> m8_78  [key=1, style=dashed, color=darkseagreen4, label=child];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label=child];
m8_74 -> m8_77  [key=1, style=dashed, color=darkseagreen4, label=child];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_31  [key=2, style=dotted];
m8_71 -> m8_31  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_72 -> m8_31  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_73 -> m8_31  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_75 -> m8_31  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_76 -> m8_31  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_84 -> m8_69  [key=0, style=bold, color=blue];
m8_34 -> m8_37  [key=0, style=solid];
m8_65 -> m8_66  [key=0, style=solid];
m8_66 -> m8_6  [key=2, style=dotted];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_68  [key=2, style=dotted];
m8_67 -> m8_65  [key=0, style=bold, color=blue];
m8_187 -> m8_188  [key=0, style=solid];
m8_188 -> m8_6  [key=2, style=dotted];
m8_188 -> m8_17  [key=2, style=dotted];
m8_188 -> m8_189  [key=0, style=solid];
m8_189 -> m8_190  [key=0, style=solid];
m8_190 -> m8_8  [key=2, style=dotted];
m8_190 -> m8_191  [key=0, style=solid];
m8_191 -> m8_187  [key=0, style=bold, color=blue];
m8_13 -> m8_33  [key=0, style=solid];
m8_13 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_13 -> m8_34  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsTypeGenericCollectionInterface"];
m8_175 -> m8_176  [key=0, style=solid];
m8_176 -> m8_6  [key=2, style=dotted];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_7  [key=2, style=dotted];
m8_176 -> m8_178  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_176 -> m8_179  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_176 -> m8_180  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_176 -> m8_181  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_176 -> m8_182  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_176 -> m8_183  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_176 -> m8_184  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_176 -> m8_185  [key=1, style=dashed, color=darkseagreen4, label=actual];
m8_177 -> m8_8  [key=2, style=dotted];
m8_177 -> m8_178  [key=0, style=solid];
m8_178 -> m8_8  [key=2, style=dotted];
m8_178 -> m8_179  [key=0, style=solid];
m8_179 -> m8_8  [key=2, style=dotted];
m8_179 -> m8_180  [key=0, style=solid];
m8_180 -> m8_8  [key=2, style=dotted];
m8_180 -> m8_181  [key=0, style=solid];
m8_181 -> m8_8  [key=2, style=dotted];
m8_181 -> m8_182  [key=0, style=solid];
m8_182 -> m8_8  [key=2, style=dotted];
m8_182 -> m8_183  [key=0, style=solid];
m8_183 -> m8_8  [key=2, style=dotted];
m8_183 -> m8_184  [key=0, style=solid];
m8_184 -> m8_8  [key=2, style=dotted];
m8_184 -> m8_185  [key=0, style=solid];
m8_185 -> m8_8  [key=2, style=dotted];
m8_185 -> m8_186  [key=0, style=solid];
m8_186 -> m8_175  [key=0, style=bold, color=blue];
m8_109 -> m8_110  [key=0, style=solid];
m8_113 -> m8_6  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_68  [key=2, style=dotted];
m8_113 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label=values];
m8_113 -> m8_116  [key=1, style=dashed, color=darkseagreen4, label=values];
m8_113 -> m8_122  [key=1, style=dashed, color=darkseagreen4, label=values];
m8_113 -> m8_123  [key=1, style=dashed, color=darkseagreen4, label=values];
m8_112 -> m8_113  [key=0, style=solid];
m8_114 -> m8_8  [key=2, style=dotted];
m8_114 -> m8_115  [key=0, style=solid];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_117  [key=1, style=dashed, color=darkseagreen4, label=e];
m8_115 -> m8_118  [key=1, style=dashed, color=darkseagreen4, label=e];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_119  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_116 -> m8_120  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_116 -> m8_121  [key=1, style=dashed, color=darkseagreen4, label=p];
m8_122 -> m8_8  [key=2, style=dotted];
m8_122 -> m8_123  [key=0, style=solid];
m8_123 -> m8_8  [key=2, style=dotted];
m8_123 -> m8_124  [key=0, style=solid];
m8_117 -> m8_8  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_118 -> m8_8  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_119 -> m8_8  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_120 -> m8_8  [key=2, style=dotted];
m8_120 -> m8_46  [key=2, style=dotted];
m8_120 -> m8_121  [key=0, style=solid];
m8_121 -> m8_8  [key=2, style=dotted];
m8_121 -> m8_122  [key=0, style=solid];
m8_121 -> m8_46  [key=2, style=dotted];
m8_110 -> m8_112  [key=1, style=dashed, color=darkseagreen4, label=employeeRef];
m8_110 -> m8_111  [key=0, style=solid];
m8_111 -> m8_112  [key=0, style=solid];
m8_124 -> m8_109  [key=0, style=bold, color=blue];
m8_192 -> m8_193  [key=0, style=solid];
m8_193 -> m8_6  [key=2, style=dotted];
m8_193 -> m8_17  [key=2, style=dotted];
m8_193 -> m8_194  [key=0, style=solid];
m8_195 -> m8_6  [key=2, style=dotted];
m8_195 -> m8_17  [key=2, style=dotted];
m8_195 -> m8_196  [key=0, style=solid];
m8_194 -> m8_195  [key=0, style=solid];
m8_194 -> m8_8  [key=2, style=dotted];
m8_196 -> m8_197  [key=0, style=solid];
m8_196 -> m8_60  [key=2, style=dotted];
m8_197 -> m8_192  [key=0, style=bold, color=blue];
m8_206 -> m8_15  [key=1, style=dashed, color=green, label=json];
m8_207 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=json];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_14  [key=2, style=dotted];
m11_1 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label=writer];
m11_1 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label=writer];
m11_1 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label=writer];
m11_1 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label=writer];
m11_1 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=writer];
m11_1 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label=writer];
m11_1 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=writer];
m11_1 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=writer];
m11_1 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=writer];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_15  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_16  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_17  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_16  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_18  [key=2, style=dotted];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_19  [key=2, style=dotted];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_19  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_20  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_21  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_22  [key=2, style=dotted];
m11_12 -> m11_23  [key=2, style=dotted];
m11_13 -> m11_0  [key=0, style=bold, color=blue];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> n16  [key=2, style=dotted];
m12_10 -> m12_8  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid, color=green];
m12_1 -> m12_2  [key=0, style=solid, color=green];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_12 -> m12_1  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonSerializerSettings"];
m12_12 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m13_2028 -> m13_2029  [key=0, style=solid];
m13_2029 -> m13_2030  [key=0, style=solid];
m13_2029 -> m13_2031  [key=2, style=dotted];
m13_2030 -> m13_2028  [key=0, style=bold, color=blue];
m13_582 -> m13_583  [key=0, style=solid];
m13_582 -> m13_584  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_582 -> m13_585  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m13_582 -> m13_586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m13_582 -> m13_587  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m13_583 -> m13_584  [key=0, style=solid];
m13_584 -> m13_585  [key=0, style=solid];
m13_585 -> m13_586  [key=0, style=solid];
m13_586 -> m13_587  [key=0, style=solid];
m13_587 -> m13_588  [key=0, style=solid];
m13_588 -> m13_582  [key=0, style=bold, color=blue];
m13_655 -> m13_656  [key=0, style=solid];
m13_661 -> m13_25  [key=2, style=dotted];
m13_661 -> m13_662  [key=0, style=solid];
m13_662 -> m13_25  [key=2, style=dotted];
m13_662 -> m13_663  [key=0, style=solid];
m13_663 -> m13_17  [key=2, style=dotted];
m13_663 -> m13_664  [key=0, style=solid];
m13_656 -> m13_3124  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m13_656 -> m13_657  [key=0, style=solid];
m13_657 -> m13_661  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_657 -> m13_662  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_657 -> m13_658  [key=0, style=solid];
m13_657 -> m13_665  [key=2, style=dotted];
m13_657 -> m13_659  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_660 -> m13_661  [key=0, style=solid];
m13_660 -> m13_663  [key=1, style=dashed, color=darkseagreen4, label=output];
m13_660 -> m13_668  [key=2, style=dotted];
m13_658 -> m13_660  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_658 -> m13_659  [key=0, style=solid];
m13_658 -> m13_666  [key=2, style=dotted];
m13_659 -> m13_660  [key=0, style=solid];
m13_659 -> m13_667  [key=2, style=dotted];
m13_664 -> m13_655  [key=0, style=bold, color=blue];
m13_137 -> m13_138  [key=0, style=solid];
m13_139 -> m13_47  [key=2, style=dotted];
m13_139 -> m13_140  [key=0, style=solid];
m13_139 -> m13_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_143 -> m13_47  [key=2, style=dotted];
m13_143 -> m13_144  [key=0, style=solid];
m13_143 -> m13_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_144 -> m13_47  [key=2, style=dotted];
m13_144 -> m13_145  [key=0, style=solid];
m13_144 -> m13_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_145 -> m13_24  [key=2, style=dotted];
m13_145 -> m13_146  [key=0, style=solid];
m13_141 -> m13_37  [key=2, style=dotted];
m13_141 -> m13_142  [key=0, style=solid];
m13_142 -> m13_25  [key=2, style=dotted];
m13_142 -> m13_143  [key=0, style=solid];
m13_146 -> m13_25  [key=2, style=dotted];
m13_146 -> m13_147  [key=0, style=solid];
m13_138 -> m13_139  [key=0, style=solid];
m13_138 -> m13_150  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_138 -> m13_148  [key=2, style=dotted];
m13_140 -> m13_141  [key=0, style=solid];
m13_140 -> m13_148  [key=2, style=dotted];
m13_147 -> m13_137  [key=0, style=bold, color=blue];
m13_1543 -> m13_1544  [key=0, style=solid];
m13_1543 -> m13_1545  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1543 -> m13_1546  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_1543 -> m13_1547  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_1544 -> m13_1545  [key=0, style=solid];
m13_1545 -> m13_1546  [key=0, style=solid];
m13_1546 -> m13_1547  [key=0, style=solid];
m13_1547 -> m13_1548  [key=0, style=solid];
m13_1548 -> m13_1543  [key=0, style=bold, color=blue];
m13_696 -> m13_697  [key=0, style=solid];
m13_698 -> m13_37  [key=2, style=dotted];
m13_698 -> m13_699  [key=0, style=solid];
m13_698 -> m13_700  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_700 -> m13_25  [key=2, style=dotted];
m13_700 -> m13_701  [key=0, style=solid];
m13_697 -> m13_698  [key=0, style=solid];
m13_697 -> m13_702  [key=2, style=dotted];
m13_697 -> m13_688  [key=2, style=dotted];
m13_699 -> m13_700  [key=0, style=solid];
m13_699 -> m13_699  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m13_701 -> m13_696  [key=0, style=bold, color=blue];
m13_1630 -> m13_1631  [key=0, style=solid];
m13_1632 -> m13_24  [key=2, style=dotted];
m13_1632 -> m13_1633  [key=0, style=solid];
m13_1632 -> m13_1634  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_1632 -> m13_1635  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_1633 -> m13_25  [key=2, style=dotted];
m13_1633 -> m13_1634  [key=0, style=solid];
m13_1634 -> m13_25  [key=2, style=dotted];
m13_1634 -> m13_1635  [key=0, style=solid];
m13_1635 -> m13_25  [key=2, style=dotted];
m13_1635 -> m13_1636  [key=0, style=solid];
m13_1631 -> m13_1632  [key=0, style=solid];
m13_1631 -> m13_1631  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1636 -> m13_1630  [key=0, style=bold, color=blue];
m13_1133 -> m13_1134  [key=0, style=solid];
m13_1135 -> m13_37  [key=2, style=dotted];
m13_1135 -> m13_1136  [key=0, style=solid];
m13_1136 -> m13_25  [key=2, style=dotted];
m13_1136 -> m13_1137  [key=0, style=solid];
m13_1134 -> m13_1001  [key=2, style=dotted];
m13_1134 -> m13_1135  [key=0, style=solid];
m13_1137 -> m13_1133  [key=0, style=bold, color=blue];
m13_2325 -> m13_2326  [key=0, style=solid];
m13_2326 -> m13_47  [key=2, style=dotted];
m13_2326 -> m13_2327  [key=0, style=solid];
m13_2326 -> m13_2328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2327 -> m13_2325  [key=0, style=bold, color=blue];
m13_1933 -> m13_1934  [key=0, style=solid];
m13_1935 -> m13_730  [key=2, style=dotted];
m13_1935 -> m13_1935  [key=1, style=dashed, color=darkseagreen4, label=pair];
m13_1935 -> m13_1934  [key=0, style=solid];
m13_1934 -> m13_1935  [key=0, style=solid];
m13_1934 -> m13_1936  [key=0, style=solid];
m13_1936 -> m13_1933  [key=0, style=bold, color=blue];
m13_617 -> m13_618  [key=0, style=solid];
m13_627 -> m13_24  [key=2, style=dotted];
m13_627 -> m13_628  [key=0, style=solid];
m13_627 -> m13_629  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m13_627 -> m13_630  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m13_627 -> m13_631  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m13_627 -> m13_632  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m13_627 -> m13_633  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m13_627 -> m13_634  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m13_627 -> m13_635  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m13_627 -> m13_636  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m13_624 -> m13_79  [key=2, style=dotted];
m13_624 -> m13_625  [key=0, style=solid];
m13_625 -> m13_80  [key=2, style=dotted];
m13_625 -> m13_627  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_625 -> m13_626  [key=0, style=solid];
m13_628 -> m13_25  [key=2, style=dotted];
m13_628 -> m13_629  [key=0, style=solid];
m13_629 -> m13_25  [key=2, style=dotted];
m13_629 -> m13_630  [key=0, style=solid];
m13_630 -> m13_25  [key=2, style=dotted];
m13_630 -> m13_631  [key=0, style=solid];
m13_631 -> m13_25  [key=2, style=dotted];
m13_631 -> m13_632  [key=0, style=solid];
m13_632 -> m13_25  [key=2, style=dotted];
m13_632 -> m13_633  [key=0, style=solid];
m13_633 -> m13_25  [key=2, style=dotted];
m13_633 -> m13_634  [key=0, style=solid];
m13_634 -> m13_25  [key=2, style=dotted];
m13_634 -> m13_635  [key=0, style=solid];
m13_635 -> m13_25  [key=2, style=dotted];
m13_635 -> m13_636  [key=0, style=solid];
m13_636 -> m13_25  [key=2, style=dotted];
m13_636 -> m13_637  [key=0, style=solid];
m13_618 -> m13_638  [key=2, style=dotted];
m13_618 -> m13_619  [key=0, style=solid];
m13_618 -> m13_620  [key=1, style=dashed, color=darkseagreen4, label=p1];
m13_618 -> m13_621  [key=1, style=dashed, color=darkseagreen4, label=p1];
m13_618 -> m13_622  [key=1, style=dashed, color=darkseagreen4, label=p1];
m13_619 -> m13_638  [key=2, style=dotted];
m13_619 -> m13_620  [key=0, style=solid];
m13_619 -> m13_621  [key=1, style=dashed, color=darkseagreen4, label=p2];
m13_619 -> m13_622  [key=1, style=dashed, color=darkseagreen4, label=p2];
m13_626 -> m13_17  [key=2, style=dotted];
m13_626 -> m13_627  [key=0, style=solid];
m13_623 -> m13_624  [key=0, style=solid];
m13_622 -> m13_625  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_622 -> m13_628  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_622 -> m13_629  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_622 -> m13_630  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_622 -> m13_631  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_622 -> m13_632  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_622 -> m13_623  [key=0, style=solid];
m13_622 -> m13_582  [key=2, style=dotted];
m13_620 -> m13_621  [key=0, style=solid];
m13_621 -> m13_622  [key=0, style=solid];
m13_637 -> m13_617  [key=0, style=bold, color=blue];
m13_1225 -> m13_1226  [key=0, style=solid];
m13_1230 -> m13_24  [key=2, style=dotted];
m13_1230 -> m13_1231  [key=0, style=solid];
m13_1230 -> m13_1232  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_1228 -> m13_79  [key=2, style=dotted];
m13_1228 -> m13_80  [key=2, style=dotted];
m13_1228 -> m13_1230  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1228 -> m13_1229  [key=0, style=solid];
m13_1231 -> m13_25  [key=2, style=dotted];
m13_1231 -> m13_1232  [key=0, style=solid];
m13_1232 -> m13_25  [key=2, style=dotted];
m13_1232 -> m13_1233  [key=0, style=solid];
m13_1229 -> m13_25  [key=2, style=dotted];
m13_1229 -> m13_1230  [key=0, style=solid];
m13_1227 -> m13_1228  [key=0, style=solid];
m13_1227 -> m13_1206  [key=2, style=dotted];
m13_1226 -> m13_1231  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_1226 -> m13_1232  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_1226 -> m13_1227  [key=0, style=solid];
m13_1226 -> m13_1205  [key=2, style=dotted];
m13_1233 -> m13_1225  [key=0, style=bold, color=blue];
m13_1669 -> m13_1670  [key=0, style=solid];
m13_1670 -> m13_24  [key=2, style=dotted];
m13_1670 -> m13_1671  [key=0, style=solid];
m13_1670 -> m13_1672  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_1670 -> m13_1673  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_1670 -> m13_1674  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_1671 -> m13_25  [key=2, style=dotted];
m13_1671 -> m13_1672  [key=0, style=solid];
m13_1672 -> m13_25  [key=2, style=dotted];
m13_1672 -> m13_1673  [key=0, style=solid];
m13_1673 -> m13_25  [key=2, style=dotted];
m13_1673 -> m13_1674  [key=0, style=solid];
m13_1674 -> m13_25  [key=2, style=dotted];
m13_1674 -> m13_1675  [key=0, style=solid];
m13_1675 -> m13_1669  [key=0, style=bold, color=blue];
m13_2953 -> m13_2954  [key=0, style=solid];
m13_2956 -> m13_24  [key=2, style=dotted];
m13_2956 -> m13_2957  [key=0, style=solid];
m13_2956 -> m13_2958  [key=1, style=dashed, color=darkseagreen4, label=d2];
m13_2955 -> m13_37  [key=2, style=dotted];
m13_2955 -> m13_2956  [key=0, style=solid];
m13_2957 -> m13_25  [key=2, style=dotted];
m13_2957 -> m13_2958  [key=0, style=solid];
m13_2958 -> m13_25  [key=2, style=dotted];
m13_2958 -> m13_2959  [key=0, style=solid];
m13_2954 -> m13_42  [key=2, style=dotted];
m13_2954 -> m13_2955  [key=0, style=solid];
m13_2954 -> m13_2957  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2954 -> m13_2958  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2959 -> m13_2953  [key=0, style=bold, color=blue];
m13_1610 -> m13_1611  [key=0, style=solid];
m13_1612 -> m13_37  [key=2, style=dotted];
m13_1612 -> m13_1613  [key=0, style=solid];
m13_1613 -> m13_25  [key=2, style=dotted];
m13_1613 -> m13_1614  [key=0, style=solid];
m13_1611 -> m13_1612  [key=0, style=solid];
m13_1611 -> m13_817  [key=2, style=dotted];
m13_1611 -> m13_1615  [key=2, style=dotted];
m13_1614 -> m13_1610  [key=0, style=bold, color=blue];
m13_2476 -> m13_2477  [key=0, style=solid];
m13_2477 -> m13_24  [key=2, style=dotted];
m13_2477 -> m13_2478  [key=0, style=solid];
m13_2478 -> m13_25  [key=2, style=dotted];
m13_2478 -> m13_2479  [key=0, style=solid];
m13_2478 -> m13_2460  [key=2, style=dotted];
m13_2478 -> m13_853  [key=2, style=dotted];
m13_2478 -> m13_1009  [key=2, style=dotted];
m13_2479 -> m13_2476  [key=0, style=bold, color=blue];
m13_1381 -> m13_1382  [key=0, style=solid];
m13_1383 -> m13_24  [key=2, style=dotted];
m13_1383 -> m13_1384  [key=0, style=solid];
m13_1383 -> m13_1385  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1383 -> m13_1386  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1383 -> m13_1387  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1383 -> m13_1388  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1383 -> m13_1389  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1383 -> m13_1390  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1390 -> m13_37  [key=2, style=dotted];
m13_1390 -> m13_1391  [key=0, style=solid];
m13_1391 -> m13_25  [key=2, style=dotted];
m13_1391 -> m13_1392  [key=0, style=solid];
m13_1384 -> m13_25  [key=2, style=dotted];
m13_1384 -> m13_1385  [key=0, style=solid];
m13_1385 -> m13_25  [key=2, style=dotted];
m13_1385 -> m13_1386  [key=0, style=solid];
m13_1386 -> m13_25  [key=2, style=dotted];
m13_1386 -> m13_1387  [key=0, style=solid];
m13_1387 -> m13_25  [key=2, style=dotted];
m13_1387 -> m13_1388  [key=0, style=solid];
m13_1388 -> m13_25  [key=2, style=dotted];
m13_1388 -> m13_1389  [key=0, style=solid];
m13_1389 -> m13_25  [key=2, style=dotted];
m13_1389 -> m13_1390  [key=0, style=solid];
m13_1382 -> m13_1383  [key=0, style=solid];
m13_1382 -> m13_1391  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1382 -> m13_1382  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1392 -> m13_1381  [key=0, style=bold, color=blue];
m13_1649 -> m13_1650  [key=0, style=solid];
m13_1651 -> m13_47  [key=2, style=dotted];
m13_1651 -> m13_1652  [key=0, style=solid];
m13_1651 -> m13_1653  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1650 -> m13_1651  [key=0, style=solid];
m13_1650 -> m13_1654  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1650 -> m13_1650  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1652 -> m13_1649  [key=0, style=bold, color=blue];
m13_2645 -> m13_2646  [key=0, style=solid];
m13_2647 -> m13_24  [key=2, style=dotted];
m13_2647 -> m13_2648  [key=0, style=solid];
m13_2647 -> m13_2649  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_2647 -> m13_2650  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_2648 -> m13_25  [key=2, style=dotted];
m13_2648 -> m13_2649  [key=0, style=solid];
m13_2649 -> m13_25  [key=2, style=dotted];
m13_2649 -> m13_2650  [key=0, style=solid];
m13_2650 -> m13_25  [key=2, style=dotted];
m13_2650 -> m13_2651  [key=0, style=solid];
m13_2646 -> m13_2647  [key=0, style=solid];
m13_2646 -> m13_2646  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2651 -> m13_2645  [key=0, style=bold, color=blue];
m13_2339 -> m13_2340  [key=0, style=solid];
m13_2350 -> m13_24  [key=2, style=dotted];
m13_2350 -> m13_2351  [key=0, style=solid];
m13_2350 -> m13_2352  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_2350 -> m13_2353  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_2348 -> m13_37  [key=2, style=dotted];
m13_2348 -> m13_2350  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2348 -> m13_2349  [key=0, style=solid];
m13_2349 -> m13_25  [key=2, style=dotted];
m13_2349 -> m13_2350  [key=0, style=solid];
m13_2351 -> m13_25  [key=2, style=dotted];
m13_2351 -> m13_2352  [key=0, style=solid];
m13_2352 -> m13_25  [key=2, style=dotted];
m13_2352 -> m13_2353  [key=0, style=solid];
m13_2353 -> m13_25  [key=2, style=dotted];
m13_2353 -> m13_2354  [key=0, style=solid];
m13_2340 -> m13_100  [key=2, style=dotted];
m13_2340 -> m13_2341  [key=0, style=solid];
m13_2340 -> m13_2342  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_2340 -> m13_2343  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_2340 -> m13_2347  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_2344 -> m13_100  [key=2, style=dotted];
m13_2344 -> m13_2348  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_2344 -> m13_2345  [key=0, style=solid];
m13_2344 -> m13_2346  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_2344 -> m13_2347  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_2347 -> m13_2348  [key=0, style=solid];
m13_2347 -> m13_730  [key=2, style=dotted];
m13_2341 -> m13_2342  [key=0, style=solid];
m13_2341 -> m13_730  [key=2, style=dotted];
m13_2342 -> m13_2343  [key=0, style=solid];
m13_2342 -> m13_730  [key=2, style=dotted];
m13_2343 -> m13_2344  [key=0, style=solid];
m13_2343 -> m13_730  [key=2, style=dotted];
m13_2345 -> m13_2346  [key=0, style=solid];
m13_2345 -> m13_730  [key=2, style=dotted];
m13_2346 -> m13_2347  [key=0, style=solid];
m13_2346 -> m13_730  [key=2, style=dotted];
m13_2354 -> m13_2339  [key=0, style=bold, color=blue];
m13_1055 -> m13_1056  [key=0, style=solid];
m13_1056 -> m13_37  [key=2, style=dotted];
m13_1056 -> m13_1057  [key=0, style=solid];
m13_1057 -> m13_25  [key=2, style=dotted];
m13_1057 -> m13_1058  [key=0, style=solid];
m13_1058 -> m13_1055  [key=0, style=bold, color=blue];
m13_3828 -> m13_3829  [key=0, style=solid];
m13_3831 -> m13_17  [key=2, style=dotted];
m13_3831 -> m13_3832  [key=0, style=solid];
m13_3830 -> m13_3831  [key=0, style=solid];
m13_3830 -> m13_16  [key=2, style=dotted];
m13_3829 -> m13_3830  [key=0, style=solid];
m13_3829 -> m13_3833  [key=2, style=dotted];
m13_3829 -> m13_3834  [key=2, style=dotted];
m13_3832 -> m13_3828  [key=0, style=bold, color=blue];
m13_3176 -> m13_3177  [key=0, style=solid];
m13_3182 -> m13_37  [key=2, style=dotted];
m13_3182 -> m13_3183  [key=0, style=solid];
m13_3183 -> m13_79  [key=2, style=dotted];
m13_3183 -> m13_80  [key=2, style=dotted];
m13_3183 -> m13_3184  [key=0, style=solid];
m13_3183 -> m13_3189  [key=2, style=dotted];
m13_3183 -> m13_3190  [key=2, style=dotted];
m13_3186 -> m13_79  [key=2, style=dotted];
m13_3186 -> m13_80  [key=2, style=dotted];
m13_3186 -> m13_3187  [key=0, style=solid];
m13_3186 -> m13_3189  [key=2, style=dotted];
m13_3186 -> m13_3190  [key=2, style=dotted];
m13_3186 -> m13_3191  [key=2, style=dotted];
m13_3184 -> m13_17  [key=2, style=dotted];
m13_3184 -> m13_3185  [key=0, style=solid];
m13_3187 -> m13_17  [key=2, style=dotted];
m13_3187 -> m13_3188  [key=0, style=solid];
m13_3177 -> m13_3182  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_3177 -> m13_3183  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_3177 -> m13_3178  [key=0, style=solid];
m13_3177 -> m13_852  [key=2, style=dotted];
m13_3177 -> m13_3179  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_3177 -> m13_3180  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_3177 -> m13_3181  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_3181 -> m13_3182  [key=0, style=solid];
m13_3185 -> m13_3186  [key=0, style=solid];
m13_3179 -> m13_853  [key=2, style=dotted];
m13_3179 -> m13_3180  [key=0, style=solid];
m13_3178 -> m13_3179  [key=0, style=solid];
m13_3180 -> m13_3181  [key=0, style=solid];
m13_3188 -> m13_3176  [key=0, style=bold, color=blue];
m13_1372 -> m13_1373  [key=0, style=solid];
m13_1377 -> m13_37  [key=2, style=dotted];
m13_1377 -> m13_1378  [key=0, style=solid];
m13_1378 -> m13_25  [key=2, style=dotted];
m13_1378 -> m13_1379  [key=0, style=solid];
m13_1373 -> m13_1377  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1373 -> m13_1374  [key=0, style=solid];
m13_1373 -> m13_1380  [key=2, style=dotted];
m13_1373 -> m13_1375  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1373 -> m13_1376  [key=1, style=dashed, color=darkseagreen4, label=aa];
m13_1376 -> m13_1377  [key=0, style=solid];
m13_1374 -> m13_1375  [key=0, style=solid];
m13_1375 -> m13_1376  [key=0, style=solid];
m13_1379 -> m13_1372  [key=0, style=bold, color=blue];
m13_3835 -> m13_3836  [key=0, style=solid];
m13_3837 -> m13_24  [key=2, style=dotted];
m13_3837 -> m13_3838  [key=0, style=solid];
m13_3839 -> m13_25  [key=2, style=dotted];
m13_3839 -> m13_3840  [key=0, style=solid];
m13_3836 -> m13_3837  [key=0, style=solid];
m13_3836 -> m13_3836  [key=3, color=darkorchid, style=bold, label="Local variable string content"];
m13_3838 -> m13_3839  [key=0, style=solid];
m13_3840 -> m13_3835  [key=0, style=bold, color=blue];
m13_2379 -> m13_2380  [key=0, style=solid];
m13_2385 -> m13_24  [key=2, style=dotted];
m13_2385 -> m13_2386  [key=0, style=solid];
m13_2386 -> m13_25  [key=2, style=dotted];
m13_2386 -> m13_2387  [key=0, style=solid];
m13_2380 -> m13_100  [key=2, style=dotted];
m13_2380 -> m13_2381  [key=0, style=solid];
m13_2380 -> m13_2382  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_2380 -> m13_2383  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_2384 -> m13_17  [key=2, style=dotted];
m13_2384 -> m13_2385  [key=0, style=solid];
m13_2383 -> m13_2385  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2383 -> m13_2384  [key=0, style=solid];
m13_2383 -> m13_16  [key=2, style=dotted];
m13_2381 -> m13_2382  [key=0, style=solid];
m13_2381 -> m13_2378  [key=2, style=dotted];
m13_2381 -> m13_730  [key=2, style=dotted];
m13_2382 -> m13_2383  [key=0, style=solid];
m13_2382 -> m13_2378  [key=2, style=dotted];
m13_2382 -> m13_730  [key=2, style=dotted];
m13_2387 -> m13_2379  [key=0, style=bold, color=blue];
m13_1918 -> m13_1919  [key=0, style=solid];
m13_1920 -> m13_24  [key=2, style=dotted];
m13_1920 -> m13_1921  [key=0, style=solid];
m13_1920 -> m13_1922  [key=1, style=dashed, color=darkseagreen4, label=dic];
m13_1920 -> m13_1923  [key=1, style=dashed, color=darkseagreen4, label=dic];
m13_1920 -> m13_1924  [key=1, style=dashed, color=darkseagreen4, label=dic];
m13_1921 -> m13_25  [key=2, style=dotted];
m13_1921 -> m13_1922  [key=0, style=solid];
m13_1922 -> m13_25  [key=2, style=dotted];
m13_1922 -> m13_1923  [key=0, style=solid];
m13_1923 -> m13_25  [key=2, style=dotted];
m13_1923 -> m13_1924  [key=0, style=solid];
m13_1924 -> m13_25  [key=2, style=dotted];
m13_1924 -> m13_1925  [key=0, style=solid];
m13_1919 -> m13_1920  [key=0, style=solid];
m13_1919 -> m13_1919  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1925 -> m13_1918  [key=0, style=bold, color=blue];
m13_2884 -> m13_2885  [key=0, style=solid];
m13_2888 -> m13_24  [key=2, style=dotted];
m13_2888 -> m13_2889  [key=0, style=solid];
m13_2887 -> m13_37  [key=2, style=dotted];
m13_2887 -> m13_2888  [key=0, style=solid];
m13_2889 -> m13_25  [key=2, style=dotted];
m13_2889 -> m13_2890  [key=0, style=solid];
m13_2886 -> m13_2887  [key=0, style=solid];
m13_2886 -> m13_2889  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_2886 -> m13_1608  [key=2, style=dotted];
m13_2885 -> m13_2886  [key=0, style=solid];
m13_2885 -> m13_2885  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m13_2890 -> m13_2884  [key=0, style=bold, color=blue];
m13_2797 -> m13_2798  [key=0, style=solid];
m13_2798 -> m13_2799  [key=0, style=solid];
m13_2799 -> m13_2797  [key=0, style=bold, color=blue];
m13_2036 -> m13_2037  [key=0, style=solid];
m13_2037 -> m13_2038  [key=0, style=solid];
m13_2037 -> m13_2039  [key=2, style=dotted];
m13_2038 -> m13_2036  [key=0, style=bold, color=blue];
m13_158 -> m13_159  [key=0, style=solid];
m13_159 -> m13_160  [key=0, style=solid];
m13_160 -> m13_158  [key=0, style=bold, color=blue];
m13_2967 -> m13_2968  [key=0, style=solid];
m13_2970 -> m13_24  [key=2, style=dotted];
m13_2970 -> m13_2971  [key=0, style=solid];
m13_2970 -> m13_2972  [key=1, style=dashed, color=darkseagreen4, label=d2];
m13_2969 -> m13_37  [key=2, style=dotted];
m13_2969 -> m13_2970  [key=0, style=solid];
m13_2971 -> m13_25  [key=2, style=dotted];
m13_2971 -> m13_2972  [key=0, style=solid];
m13_2972 -> m13_25  [key=2, style=dotted];
m13_2972 -> m13_2973  [key=0, style=solid];
m13_2968 -> m13_42  [key=2, style=dotted];
m13_2968 -> m13_2969  [key=0, style=solid];
m13_2968 -> m13_2971  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2968 -> m13_2972  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2973 -> m13_2967  [key=0, style=bold, color=blue];
m13_3937 -> m13_3938  [key=0, style=solid];
m13_3941 -> m13_24  [key=2, style=dotted];
m13_3941 -> m13_3942  [key=0, style=solid];
m13_3940 -> m13_17  [key=2, style=dotted];
m13_3940 -> m13_3941  [key=0, style=solid];
m13_3939 -> m13_3941  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3939 -> m13_3940  [key=0, style=solid];
m13_3939 -> m13_16  [key=2, style=dotted];
m13_3938 -> m13_3939  [key=0, style=solid];
m13_3938 -> m13_3943  [key=2, style=dotted];
m13_3942 -> m13_3937  [key=0, style=bold, color=blue];
m13_3570 -> m13_3571  [key=0, style=solid];
m13_3574 -> m13_24  [key=2, style=dotted];
m13_3574 -> m13_3575  [key=0, style=solid];
m13_3574 -> m13_3576  [key=1, style=dashed, color=darkseagreen4, label=tuple2];
m13_3572 -> m13_37  [key=2, style=dotted];
m13_3572 -> m13_3574  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3572 -> m13_3573  [key=0, style=solid];
m13_3573 -> m13_25  [key=2, style=dotted];
m13_3573 -> m13_3574  [key=0, style=solid];
m13_3575 -> m13_25  [key=2, style=dotted];
m13_3575 -> m13_3576  [key=0, style=solid];
m13_3576 -> m13_25  [key=2, style=dotted];
m13_3576 -> m13_3577  [key=0, style=solid];
m13_3571 -> m13_3572  [key=0, style=solid];
m13_3571 -> m13_3578  [key=2, style=dotted];
m13_3577 -> m13_3570  [key=0, style=bold, color=blue];
m13_1891 -> m13_1892  [key=0, style=solid];
m13_1892 -> m13_730  [key=2, style=dotted];
m13_1892 -> m13_1893  [key=0, style=solid];
m13_1893 -> m13_1891  [key=0, style=bold, color=blue];
m13_2614 -> m13_2615  [key=0, style=solid];
m13_2615 -> m13_24  [key=2, style=dotted];
m13_2615 -> m13_2616  [key=0, style=solid];
m13_2616 -> m13_25  [key=2, style=dotted];
m13_2616 -> m13_2617  [key=0, style=solid];
m13_2617 -> m13_2614  [key=0, style=bold, color=blue];
m13_3523 -> m13_3524  [key=0, style=solid];
m13_3524 -> m13_3525  [key=0, style=solid];
m13_3525 -> m13_3523  [key=0, style=bold, color=blue];
m13_1962 -> m13_1964  [key=0, style=solid];
m13_1964 -> m13_1965  [key=0, style=solid];
m13_1965 -> m13_1962  [key=0, style=bold, color=blue];
m13_235 -> m13_236  [key=0, style=solid];
m13_236 -> m13_24  [key=2, style=dotted];
m13_236 -> m13_237  [key=0, style=solid];
m13_236 -> m13_238  [key=1, style=dashed, color=darkseagreen4, label=otc];
m13_236 -> m13_239  [key=1, style=dashed, color=darkseagreen4, label=otc];
m13_236 -> m13_240  [key=1, style=dashed, color=darkseagreen4, label=otc];
m13_236 -> m13_241  [key=1, style=dashed, color=darkseagreen4, label=otc];
m13_237 -> m13_61  [key=2, style=dotted];
m13_237 -> m13_238  [key=0, style=solid];
m13_241 -> m13_61  [key=2, style=dotted];
m13_241 -> m13_242  [key=0, style=solid];
m13_238 -> m13_25  [key=2, style=dotted];
m13_238 -> m13_239  [key=0, style=solid];
m13_239 -> m13_25  [key=2, style=dotted];
m13_239 -> m13_240  [key=0, style=solid];
m13_240 -> m13_25  [key=2, style=dotted];
m13_240 -> m13_241  [key=0, style=solid];
m13_242 -> m13_235  [key=0, style=bold, color=blue];
m13_2688 -> m13_2689  [key=0, style=solid];
m13_2690 -> m13_24  [key=2, style=dotted];
m13_2690 -> m13_2691  [key=0, style=solid];
m13_2689 -> m13_37  [key=2, style=dotted];
m13_2689 -> m13_2690  [key=0, style=solid];
m13_2689 -> m13_2692  [key=2, style=dotted];
m13_2691 -> m13_2688  [key=0, style=bold, color=blue];
m13_2449 -> m13_2450  [key=0, style=solid];
m13_2450 -> m13_37  [key=2, style=dotted];
m13_2450 -> m13_2451  [key=0, style=solid];
m13_2450 -> m13_2459  [key=2, style=dotted];
m13_2450 -> m13_2460  [key=2, style=dotted];
m13_2450 -> m13_853  [key=2, style=dotted];
m13_2450 -> m13_1009  [key=2, style=dotted];
m13_2450 -> m13_2452  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m13_2451 -> m13_25  [key=2, style=dotted];
m13_2451 -> m13_2452  [key=0, style=solid];
m13_2456 -> m13_25  [key=2, style=dotted];
m13_2456 -> m13_2457  [key=0, style=solid];
m13_2456 -> m13_1009  [key=2, style=dotted];
m13_2457 -> m13_25  [key=2, style=dotted];
m13_2457 -> m13_2458  [key=0, style=solid];
m13_2457 -> m13_853  [key=2, style=dotted];
m13_2452 -> m13_2453  [key=0, style=solid];
m13_2452 -> m13_268  [key=2, style=dotted];
m13_2452 -> m13_269  [key=2, style=dotted];
m13_2452 -> m13_2455  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2455 -> m13_2456  [key=0, style=solid];
m13_2455 -> m13_2457  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m13_2455 -> m13_2461  [key=2, style=dotted];
m13_2453 -> m13_2454  [key=0, style=solid];
m13_2454 -> m13_2455  [key=0, style=solid];
m13_2454 -> m13_270  [key=2, style=dotted];
m13_2458 -> m13_2449  [key=0, style=bold, color=blue];
m13_2516 -> m13_2517  [key=0, style=solid];
m13_2522 -> m13_25  [key=2, style=dotted];
m13_2522 -> m13_2523  [key=0, style=solid];
m13_2521 -> m13_2522  [key=0, style=solid];
m13_2521 -> m13_2461  [key=2, style=dotted];
m13_2518 -> m13_2521  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2518 -> m13_268  [key=2, style=dotted];
m13_2518 -> m13_269  [key=2, style=dotted];
m13_2518 -> m13_2519  [key=0, style=solid];
m13_2520 -> m13_2521  [key=0, style=solid];
m13_2520 -> m13_270  [key=2, style=dotted];
m13_2517 -> m13_2518  [key=0, style=solid];
m13_2517 -> m13_2517  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2519 -> m13_2520  [key=0, style=solid];
m13_2523 -> m13_2516  [key=0, style=bold, color=blue];
m13_759 -> m13_760  [key=0, style=solid];
m13_766 -> m13_17  [key=2, style=dotted];
m13_766 -> m13_767  [key=0, style=solid];
m13_765 -> m13_766  [key=0, style=solid];
m13_765 -> m13_769  [key=2, style=dotted];
m13_760 -> m13_765  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_760 -> m13_761  [key=0, style=solid];
m13_760 -> m13_768  [key=2, style=dotted];
m13_760 -> m13_762  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_760 -> m13_763  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_760 -> m13_764  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_764 -> m13_765  [key=0, style=solid];
m13_761 -> m13_762  [key=0, style=solid];
m13_762 -> m13_763  [key=0, style=solid];
m13_763 -> m13_764  [key=0, style=solid];
m13_767 -> m13_759  [key=0, style=bold, color=blue];
m13_3604 -> m13_3605  [key=0, style=solid];
m13_3608 -> m13_47  [key=2, style=dotted];
m13_3608 -> m13_3609  [key=0, style=solid];
m13_3608 -> m13_3610  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3606 -> m13_24  [key=2, style=dotted];
m13_3606 -> m13_3607  [key=0, style=solid];
m13_3607 -> m13_25  [key=2, style=dotted];
m13_3607 -> m13_3608  [key=0, style=solid];
m13_3607 -> m13_2256  [key=2, style=dotted];
m13_3605 -> m13_3608  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3605 -> m13_3606  [key=0, style=solid];
m13_3605 -> m13_3611  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3605 -> m13_3605  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3609 -> m13_3604  [key=0, style=bold, color=blue];
m13_510 -> m13_511  [key=0, style=solid];
m13_514 -> m13_25  [key=2, style=dotted];
m13_514 -> m13_515  [key=0, style=solid];
m13_516 -> m13_25  [key=2, style=dotted];
m13_516 -> m13_517  [key=0, style=solid];
m13_518 -> m13_25  [key=2, style=dotted];
m13_518 -> m13_519  [key=0, style=solid];
m13_520 -> m13_25  [key=2, style=dotted];
m13_520 -> m13_521  [key=0, style=solid];
m13_520 -> m13_435  [key=2, style=dotted];
m13_523 -> m13_25  [key=2, style=dotted];
m13_523 -> m13_524  [key=0, style=solid];
m13_525 -> m13_25  [key=2, style=dotted];
m13_525 -> m13_526  [key=0, style=solid];
m13_527 -> m13_25  [key=2, style=dotted];
m13_527 -> m13_528  [key=0, style=solid];
m13_527 -> m13_439  [key=2, style=dotted];
m13_529 -> m13_25  [key=2, style=dotted];
m13_529 -> m13_530  [key=0, style=solid];
m13_531 -> m13_25  [key=2, style=dotted];
m13_531 -> m13_532  [key=0, style=solid];
m13_533 -> m13_25  [key=2, style=dotted];
m13_533 -> m13_534  [key=0, style=solid];
m13_535 -> m13_25  [key=2, style=dotted];
m13_535 -> m13_536  [key=0, style=solid];
m13_537 -> m13_25  [key=2, style=dotted];
m13_537 -> m13_538  [key=0, style=solid];
m13_539 -> m13_25  [key=2, style=dotted];
m13_539 -> m13_540  [key=0, style=solid];
m13_541 -> m13_25  [key=2, style=dotted];
m13_541 -> m13_542  [key=0, style=solid];
m13_543 -> m13_25  [key=2, style=dotted];
m13_543 -> m13_544  [key=0, style=solid];
m13_545 -> m13_25  [key=2, style=dotted];
m13_545 -> m13_546  [key=0, style=solid];
m13_547 -> m13_25  [key=2, style=dotted];
m13_547 -> m13_548  [key=0, style=solid];
m13_549 -> m13_25  [key=2, style=dotted];
m13_549 -> m13_550  [key=0, style=solid];
m13_551 -> m13_25  [key=2, style=dotted];
m13_551 -> m13_552  [key=0, style=solid];
m13_553 -> m13_25  [key=2, style=dotted];
m13_553 -> m13_554  [key=0, style=solid];
m13_555 -> m13_25  [key=2, style=dotted];
m13_555 -> m13_556  [key=0, style=solid];
m13_557 -> m13_25  [key=2, style=dotted];
m13_557 -> m13_558  [key=0, style=solid];
m13_560 -> m13_25  [key=2, style=dotted];
m13_560 -> m13_561  [key=0, style=solid];
m13_562 -> m13_25  [key=2, style=dotted];
m13_562 -> m13_563  [key=0, style=solid];
m13_565 -> m13_25  [key=2, style=dotted];
m13_565 -> m13_566  [key=0, style=solid];
m13_567 -> m13_25  [key=2, style=dotted];
m13_567 -> m13_568  [key=0, style=solid];
m13_569 -> m13_25  [key=2, style=dotted];
m13_569 -> m13_570  [key=0, style=solid];
m13_526 -> m13_438  [key=2, style=dotted];
m13_526 -> m13_527  [key=0, style=solid];
m13_511 -> m13_514  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_516  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_518  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_520  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_523  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_525  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_527  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_529  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_531  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_533  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_535  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_537  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_539  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_541  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_543  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_545  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_547  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_549  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_551  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_553  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_555  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_557  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_560  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_562  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_565  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_567  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_569  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_526  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_512  [key=0, style=solid];
m13_511 -> m13_571  [key=2, style=dotted];
m13_511 -> m13_572  [key=2, style=dotted];
m13_511 -> m13_270  [key=2, style=dotted];
m13_511 -> m13_513  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_515  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_517  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_519  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_522  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_524  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_528  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_530  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_532  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_534  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_536  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_538  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_540  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_542  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_544  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_546  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_548  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_550  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_552  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_554  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_556  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_559  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_561  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_564  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_566  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_511 -> m13_568  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m13_512 -> m13_514  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m13_512 -> m13_513  [key=0, style=solid];
m13_512 -> m13_434  [key=2, style=dotted];
m13_513 -> m13_514  [key=0, style=solid];
m13_515 -> m13_516  [key=0, style=solid];
m13_517 -> m13_518  [key=0, style=solid];
m13_519 -> m13_520  [key=0, style=solid];
m13_519 -> m13_435  [key=2, style=dotted];
m13_521 -> m13_523  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m13_521 -> m13_436  [key=2, style=dotted];
m13_521 -> m13_522  [key=0, style=solid];
m13_522 -> m13_523  [key=0, style=solid];
m13_524 -> m13_525  [key=0, style=solid];
m13_524 -> m13_135  [key=2, style=dotted];
m13_524 -> m13_437  [key=2, style=dotted];
m13_528 -> m13_529  [key=0, style=solid];
m13_530 -> m13_531  [key=0, style=solid];
m13_532 -> m13_533  [key=0, style=solid];
m13_534 -> m13_535  [key=0, style=solid];
m13_536 -> m13_537  [key=0, style=solid];
m13_538 -> m13_539  [key=0, style=solid];
m13_540 -> m13_541  [key=0, style=solid];
m13_542 -> m13_543  [key=0, style=solid];
m13_544 -> m13_545  [key=0, style=solid];
m13_546 -> m13_547  [key=0, style=solid];
m13_548 -> m13_549  [key=0, style=solid];
m13_550 -> m13_551  [key=0, style=solid];
m13_552 -> m13_553  [key=0, style=solid];
m13_554 -> m13_555  [key=0, style=solid];
m13_556 -> m13_557  [key=0, style=solid];
m13_558 -> m13_560  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_558 -> m13_440  [key=2, style=dotted];
m13_558 -> m13_559  [key=0, style=solid];
m13_559 -> m13_560  [key=0, style=solid];
m13_561 -> m13_562  [key=0, style=solid];
m13_563 -> m13_565  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m13_563 -> m13_564  [key=0, style=solid];
m13_563 -> m13_441  [key=2, style=dotted];
m13_564 -> m13_565  [key=0, style=solid];
m13_566 -> m13_567  [key=0, style=solid];
m13_568 -> m13_569  [key=0, style=solid];
m13_570 -> m13_510  [key=0, style=bold, color=blue];
m13_2992 -> m13_2993  [key=0, style=solid];
m13_2995 -> m13_17  [key=2, style=dotted];
m13_2995 -> m13_2996  [key=0, style=solid];
m13_2994 -> m13_2995  [key=0, style=solid];
m13_2994 -> m13_16  [key=2, style=dotted];
m13_2993 -> m13_2994  [key=0, style=solid];
m13_2993 -> m13_2997  [key=2, style=dotted];
m13_2993 -> m13_2998  [key=2, style=dotted];
m13_2996 -> m13_2992  [key=0, style=bold, color=blue];
m13_2662 -> m13_2663  [key=0, style=solid];
m13_2665 -> m13_25  [key=2, style=dotted];
m13_2665 -> m13_2666  [key=0, style=solid];
m13_2664 -> m13_2665  [key=0, style=solid];
m13_2664 -> m13_16  [key=2, style=dotted];
m13_2663 -> m13_2664  [key=0, style=solid];
m13_2663 -> m13_2667  [key=2, style=dotted];
m13_2666 -> m13_2662  [key=0, style=bold, color=blue];
m13_1989 -> m13_1992  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_1989 -> m13_1990  [key=0, style=solid];
m13_1993 -> m13_730  [key=2, style=dotted];
m13_1993 -> m13_1993  [key=1, style=dashed, color=darkseagreen4, label=entry];
m13_1993 -> m13_1992  [key=0, style=solid];
m13_1992 -> m13_1993  [key=0, style=solid];
m13_1992 -> m13_1994  [key=0, style=solid];
m13_1990 -> m13_1992  [key=0, style=solid];
m13_1990 -> m13_1991  [key=0, style=solid];
m13_1991 -> m13_1994  [key=0, style=solid];
m13_1991 -> m13_1995  [key=2, style=dotted];
m13_1994 -> m13_1989  [key=0, style=bold, color=blue];
m13_3617 -> m13_3618  [key=0, style=solid];
m13_3619 -> m13_37  [key=2, style=dotted];
m13_3619 -> m13_3620  [key=0, style=solid];
m13_3623 -> m13_79  [key=2, style=dotted];
m13_3623 -> m13_80  [key=2, style=dotted];
m13_3623 -> m13_3624  [key=0, style=solid];
m13_3620 -> m13_25  [key=2, style=dotted];
m13_3620 -> m13_3621  [key=0, style=solid];
m13_3624 -> m13_25  [key=2, style=dotted];
m13_3624 -> m13_3625  [key=0, style=solid];
m13_3618 -> m13_3619  [key=0, style=solid];
m13_3618 -> m13_3623  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_3618 -> m13_3613  [key=2, style=dotted];
m13_3621 -> m13_3623  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_3621 -> m13_1765  [key=2, style=dotted];
m13_3621 -> m13_3622  [key=0, style=solid];
m13_3622 -> m13_3623  [key=0, style=solid];
m13_3625 -> m13_3617  [key=0, style=bold, color=blue];
m13_1342 -> m13_1343  [key=0, style=solid];
m13_1344 -> m13_24  [key=2, style=dotted];
m13_1344 -> m13_1345  [key=0, style=solid];
m13_1344 -> m13_1346  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1344 -> m13_1347  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1345 -> m13_25  [key=2, style=dotted];
m13_1345 -> m13_1346  [key=0, style=solid];
m13_1346 -> m13_25  [key=2, style=dotted];
m13_1346 -> m13_1347  [key=0, style=solid];
m13_1347 -> m13_25  [key=2, style=dotted];
m13_1347 -> m13_1348  [key=0, style=solid];
m13_1343 -> m13_1344  [key=0, style=solid];
m13_1343 -> m13_1343  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1348 -> m13_1342  [key=0, style=bold, color=blue];
m13_3300 -> m13_3301  [key=0, style=solid];
m13_3304 -> m13_24  [key=2, style=dotted];
m13_3304 -> m13_3305  [key=0, style=solid];
m13_3304 -> m13_3306  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_3304 -> m13_3307  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_3305 -> m13_25  [key=2, style=dotted];
m13_3305 -> m13_3306  [key=0, style=solid];
m13_3306 -> m13_25  [key=2, style=dotted];
m13_3306 -> m13_3307  [key=0, style=solid];
m13_3306 -> m13_273  [key=2, style=dotted];
m13_3307 -> m13_25  [key=2, style=dotted];
m13_3307 -> m13_3308  [key=0, style=solid];
m13_3307 -> m13_273  [key=2, style=dotted];
m13_3301 -> m13_100  [key=2, style=dotted];
m13_3301 -> m13_3302  [key=0, style=solid];
m13_3301 -> m13_273  [key=2, style=dotted];
m13_3303 -> m13_17  [key=2, style=dotted];
m13_3303 -> m13_3304  [key=0, style=solid];
m13_3302 -> m13_3304  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3302 -> m13_3303  [key=0, style=solid];
m13_3302 -> m13_16  [key=2, style=dotted];
m13_3308 -> m13_3300  [key=0, style=bold, color=blue];
m13_3465 -> m13_3466  [key=0, style=solid];
m13_3466 -> m13_79  [key=2, style=dotted];
m13_3466 -> m13_102  [key=2, style=dotted];
m13_3466 -> m13_3467  [key=0, style=solid];
m13_3466 -> m13_3469  [key=2, style=dotted];
m13_3466 -> m13_436  [key=2, style=dotted];
m13_3467 -> m13_17  [key=2, style=dotted];
m13_3467 -> m13_3468  [key=0, style=solid];
m13_3468 -> m13_3465  [key=0, style=bold, color=blue];
m13_1704 -> m13_1705  [key=0, style=solid];
m13_1706 -> m13_47  [key=2, style=dotted];
m13_1706 -> m13_1707  [key=0, style=solid];
m13_1706 -> m13_1708  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1705 -> m13_1706  [key=0, style=solid];
m13_1705 -> m13_1709  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1705 -> m13_1677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1707 -> m13_1704  [key=0, style=bold, color=blue];
m13_2053 -> m13_2054  [key=0, style=solid];
m13_2053 -> m13_2055  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2053 -> m13_2056  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m13_2053 -> m13_2057  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m13_2054 -> m13_2055  [key=0, style=solid];
m13_2055 -> m13_2056  [key=0, style=solid];
m13_2056 -> m13_2057  [key=0, style=solid];
m13_2057 -> m13_2058  [key=0, style=solid];
m13_2058 -> m13_1205  [key=2, style=dotted];
m13_2058 -> m13_2059  [key=0, style=solid];
m13_2059 -> m13_2053  [key=0, style=bold, color=blue];
m13_689 -> m13_690  [key=0, style=solid];
m13_691 -> m13_24  [key=2, style=dotted];
m13_691 -> m13_692  [key=0, style=solid];
m13_691 -> m13_693  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_693 -> m13_25  [key=2, style=dotted];
m13_693 -> m13_694  [key=0, style=solid];
m13_690 -> m13_691  [key=0, style=solid];
m13_690 -> m13_684  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_692 -> m13_693  [key=0, style=solid];
m13_692 -> m13_695  [key=2, style=dotted];
m13_694 -> m13_689  [key=0, style=bold, color=blue];
m13_2508 -> m13_2509  [key=0, style=solid];
m13_2509 -> m13_24  [key=2, style=dotted];
m13_2509 -> m13_2510  [key=0, style=solid];
m13_2510 -> m13_25  [key=2, style=dotted];
m13_2510 -> m13_2511  [key=0, style=solid];
m13_2511 -> m13_2508  [key=0, style=bold, color=blue];
m13_2366 -> m13_2367  [key=0, style=solid];
m13_2368 -> m13_79  [key=2, style=dotted];
m13_2368 -> m13_196  [key=2, style=dotted];
m13_2368 -> m13_2369  [key=0, style=solid];
m13_2368 -> m13_2370  [key=1, style=dashed, color=darkseagreen4, label=dic];
m13_2369 -> m13_25  [key=2, style=dotted];
m13_2369 -> m13_2370  [key=0, style=solid];
m13_2369 -> m13_272  [key=2, style=dotted];
m13_2370 -> m13_25  [key=2, style=dotted];
m13_2370 -> m13_2371  [key=0, style=solid];
m13_2367 -> m13_2368  [key=0, style=solid];
m13_2367 -> m13_2367  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2371 -> m13_2366  [key=0, style=bold, color=blue];
m13_1996 -> m13_1997  [key=0, style=solid];
m13_1997 -> m13_222  [key=2, style=dotted];
m13_1997 -> m13_1998  [key=0, style=solid];
m13_1998 -> m13_1996  [key=0, style=bold, color=blue];
m13_2243 -> m13_2244  [key=0, style=solid];
m13_2250 -> m13_24  [key=2, style=dotted];
m13_2250 -> m13_2251  [key=0, style=solid];
m13_2250 -> m13_2252  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m13_2250 -> m13_2253  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m13_2253 -> m13_61  [key=2, style=dotted];
m13_2253 -> m13_2254  [key=0, style=solid];
m13_2251 -> m13_25  [key=2, style=dotted];
m13_2251 -> m13_2252  [key=0, style=solid];
m13_2251 -> m13_2257  [key=2, style=dotted];
m13_2252 -> m13_25  [key=2, style=dotted];
m13_2252 -> m13_2253  [key=0, style=solid];
m13_2252 -> m13_2257  [key=2, style=dotted];
m13_2249 -> m13_17  [key=2, style=dotted];
m13_2249 -> m13_2250  [key=0, style=solid];
m13_2247 -> m13_2250  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2247 -> m13_2249  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2247 -> m13_2248  [key=0, style=solid];
m13_2247 -> m13_16  [key=2, style=dotted];
m13_2244 -> m13_2251  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_2244 -> m13_2252  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_2244 -> m13_2247  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_2244 -> m13_2245  [key=0, style=solid];
m13_2244 -> m13_2255  [key=2, style=dotted];
m13_2244 -> m13_2246  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_2248 -> m13_2249  [key=0, style=solid];
m13_2248 -> m13_2248  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m13_2246 -> m13_2247  [key=0, style=solid];
m13_2246 -> m13_2256  [key=2, style=dotted];
m13_2245 -> m13_2256  [key=2, style=dotted];
m13_2245 -> m13_2246  [key=0, style=solid];
m13_2254 -> m13_2243  [key=0, style=bold, color=blue];
m13_898 -> m13_899  [key=0, style=solid];
m13_901 -> m13_25  [key=2, style=dotted];
m13_901 -> m13_902  [key=0, style=solid];
m13_901 -> m13_897  [key=2, style=dotted];
m13_902 -> m13_17  [key=2, style=dotted];
m13_902 -> m13_903  [key=0, style=solid];
m13_902 -> m13_897  [key=2, style=dotted];
m13_900 -> m13_901  [key=0, style=solid];
m13_900 -> m13_902  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_900 -> m13_835  [key=2, style=dotted];
m13_899 -> m13_900  [key=0, style=solid];
m13_899 -> m13_899  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m13_903 -> m13_898  [key=0, style=bold, color=blue];
m13_2002 -> m13_2003  [key=0, style=solid];
m13_2003 -> m13_2004  [key=0, style=solid];
m13_2003 -> m13_2005  [key=2, style=dotted];
m13_2004 -> m13_2002  [key=0, style=bold, color=blue];
m13_1766 -> m13_1767  [key=0, style=solid];
m13_1767 -> m13_47  [key=2, style=dotted];
m13_1767 -> m13_1768  [key=0, style=solid];
m13_1767 -> m13_1769  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1768 -> m13_1766  [key=0, style=bold, color=blue];
m13_1252 -> m13_1253  [key=0, style=solid];
m13_1257 -> m13_25  [key=2, style=dotted];
m13_1257 -> m13_1258  [key=0, style=solid];
m13_1259 -> m13_25  [key=2, style=dotted];
m13_1259 -> m13_1260  [key=0, style=solid];
m13_1260 -> m13_25  [key=2, style=dotted];
m13_1260 -> m13_1261  [key=0, style=solid];
m13_1256 -> m13_1257  [key=0, style=solid];
m13_1256 -> m13_1194  [key=2, style=dotted];
m13_1256 -> m13_1195  [key=2, style=dotted];
m13_1256 -> m13_1258  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1258 -> m13_1259  [key=0, style=solid];
m13_1258 -> m13_1260  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_1258 -> m13_1194  [key=2, style=dotted];
m13_1258 -> m13_136  [key=2, style=dotted];
m13_1253 -> m13_1256  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_1253 -> m13_1254  [key=0, style=solid];
m13_1253 -> m13_1262  [key=2, style=dotted];
m13_1253 -> m13_1255  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_1255 -> m13_1256  [key=0, style=solid];
m13_1255 -> m13_1186  [key=2, style=dotted];
m13_1254 -> m13_1186  [key=2, style=dotted];
m13_1254 -> m13_1255  [key=0, style=solid];
m13_1261 -> m13_1252  [key=0, style=bold, color=blue];
m13_3221 -> m13_3222  [key=0, style=solid];
m13_3231 -> m13_25  [key=2, style=dotted];
m13_3231 -> m13_3232  [key=0, style=solid];
m13_3231 -> m13_272  [key=2, style=dotted];
m13_3232 -> m13_17  [key=2, style=dotted];
m13_3232 -> m13_3233  [key=0, style=solid];
m13_3232 -> m13_668  [key=2, style=dotted];
m13_3230 -> m13_3231  [key=0, style=solid];
m13_3229 -> m13_3232  [key=1, style=dashed, color=darkseagreen4, label=a];
m13_3229 -> m13_3230  [key=0, style=solid];
m13_3229 -> m13_3239  [key=2, style=dotted];
m13_3222 -> m13_732  [key=2, style=dotted];
m13_3222 -> m13_3223  [key=0, style=solid];
m13_3222 -> m13_3227  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_3228 -> m13_3229  [key=0, style=solid];
m13_3228 -> m13_974  [key=2, style=dotted];
m13_3228 -> n3  [key=2, style=dotted];
m13_3223 -> m13_3224  [key=0, style=solid];
m13_3223 -> m13_3234  [key=2, style=dotted];
m13_3223 -> m13_3225  [key=1, style=dashed, color=darkseagreen4, label=writer];
m13_3223 -> m13_3226  [key=1, style=dashed, color=darkseagreen4, label=writer];
m13_3227 -> m13_815  [key=2, style=dotted];
m13_3227 -> m13_3228  [key=0, style=solid];
m13_3224 -> m13_3225  [key=0, style=solid];
m13_3224 -> m13_3235  [key=2, style=dotted];
m13_3225 -> m13_3226  [key=0, style=solid];
m13_3225 -> m13_3236  [key=2, style=dotted];
m13_3226 -> m13_3227  [key=0, style=solid];
m13_3226 -> m13_3237  [key=2, style=dotted];
m13_3233 -> m13_3221  [key=0, style=bold, color=blue];
m13_2185 -> m13_2232  [key=0, style=solid];
m13_2185 -> m13_2233  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2185 -> m13_2234  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2185 -> m13_2235  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2185 -> m13_2236  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2185 -> m13_2237  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2185 -> m13_2238  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2185 -> m13_2239  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2185 -> m13_2240  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2185 -> m13_2241  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2232 -> m13_2233  [key=0, style=solid];
m13_2233 -> m13_2234  [key=0, style=solid];
m13_2234 -> m13_2235  [key=0, style=solid];
m13_2235 -> m13_2236  [key=0, style=solid];
m13_2236 -> m13_2237  [key=0, style=solid];
m13_2237 -> m13_2238  [key=0, style=solid];
m13_2238 -> m13_2239  [key=0, style=solid];
m13_2239 -> m13_2240  [key=0, style=solid];
m13_2240 -> m13_2241  [key=0, style=solid];
m13_2241 -> m13_2242  [key=0, style=solid];
m13_2242 -> m13_2185  [key=0, style=bold, color=blue];
m13_747 -> m13_748  [key=0, style=solid];
m13_749 -> m13_728  [key=2, style=dotted];
m13_749 -> m13_750  [key=0, style=solid];
m13_749 -> m13_752  [key=2, style=dotted];
m13_748 -> m13_749  [key=0, style=solid];
m13_748 -> m13_751  [key=2, style=dotted];
m13_750 -> m13_747  [key=0, style=bold, color=blue];
m13_1276 -> m13_1277  [key=0, style=solid];
m13_1278 -> m13_37  [key=2, style=dotted];
m13_1278 -> m13_1279  [key=0, style=solid];
m13_1280 -> m13_37  [key=2, style=dotted];
m13_1280 -> m13_1281  [key=0, style=solid];
m13_1279 -> m13_25  [key=2, style=dotted];
m13_1279 -> m13_1280  [key=0, style=solid];
m13_1281 -> m13_25  [key=2, style=dotted];
m13_1281 -> m13_1282  [key=0, style=solid];
m13_1277 -> m13_1278  [key=0, style=solid];
m13_1282 -> m13_1276  [key=0, style=bold, color=blue];
m13_1616 -> m13_1617  [key=0, style=solid];
m13_1617 -> m13_42  [key=2, style=dotted];
m13_1617 -> m13_1618  [key=0, style=solid];
m13_1617 -> m13_1621  [key=2, style=dotted];
m13_1619 -> m13_17  [key=2, style=dotted];
m13_1619 -> m13_1620  [key=0, style=solid];
m13_1618 -> m13_1619  [key=0, style=solid];
m13_1618 -> m13_16  [key=2, style=dotted];
m13_1620 -> m13_1616  [key=0, style=bold, color=blue];
m13_3683 -> m13_3684  [key=0, style=solid];
m13_3685 -> m13_24  [key=2, style=dotted];
m13_3685 -> m13_3686  [key=0, style=solid];
m13_3686 -> m13_25  [key=2, style=dotted];
m13_3686 -> m13_3687  [key=0, style=solid];
m13_3684 -> m13_3685  [key=0, style=solid];
m13_3684 -> m13_3684  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3687 -> m13_3683  [key=0, style=bold, color=blue];
m13_2124 -> m13_2125  [key=0, style=solid];
m13_2136 -> m13_24  [key=2, style=dotted];
m13_2136 -> m13_2137  [key=0, style=solid];
m13_2136 -> m13_2138  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2136 -> m13_2139  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2136 -> m13_2140  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2136 -> m13_2141  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2136 -> m13_2142  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2139 -> m13_25  [key=2, style=dotted];
m13_2139 -> m13_2140  [key=0, style=solid];
m13_2137 -> m13_25  [key=2, style=dotted];
m13_2137 -> m13_2138  [key=0, style=solid];
m13_2138 -> m13_25  [key=2, style=dotted];
m13_2138 -> m13_2139  [key=0, style=solid];
m13_2140 -> m13_25  [key=2, style=dotted];
m13_2140 -> m13_2141  [key=0, style=solid];
m13_2141 -> m13_25  [key=2, style=dotted];
m13_2141 -> m13_2142  [key=0, style=solid];
m13_2142 -> m13_25  [key=2, style=dotted];
m13_2142 -> m13_2143  [key=0, style=solid];
m13_2126 -> m13_1001  [key=2, style=dotted];
m13_2126 -> m13_2127  [key=0, style=solid];
m13_2135 -> m13_17  [key=2, style=dotted];
m13_2135 -> m13_2136  [key=0, style=solid];
m13_2134 -> m13_2136  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2134 -> m13_2135  [key=0, style=solid];
m13_2134 -> m13_16  [key=2, style=dotted];
m13_2130 -> m13_2139  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_2130 -> m13_273  [key=2, style=dotted];
m13_2130 -> m13_1009  [key=2, style=dotted];
m13_2130 -> m13_2131  [key=0, style=solid];
m13_2130 -> m13_2133  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_2125 -> m13_2126  [key=0, style=solid];
m13_2125 -> m13_1412  [key=2, style=dotted];
m13_2125 -> m13_2127  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2125 -> m13_2128  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2125 -> m13_2129  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2125 -> m13_2133  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2127 -> m13_2128  [key=0, style=solid];
m13_2132 -> m13_2135  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m13_2132 -> m13_2133  [key=0, style=solid];
m13_2133 -> m13_2134  [key=0, style=solid];
m13_2133 -> m13_2053  [key=2, style=dotted];
m13_2129 -> m13_2130  [key=0, style=solid];
m13_2131 -> m13_2132  [key=0, style=solid];
m13_2128 -> m13_2129  [key=0, style=solid];
m13_2143 -> m13_2124  [key=0, style=bold, color=blue];
m13_2974 -> m13_2975  [key=0, style=solid];
m13_2981 -> m13_24  [key=2, style=dotted];
m13_2981 -> m13_2982  [key=0, style=solid];
m13_2979 -> m13_37  [key=2, style=dotted];
m13_2979 -> m13_2981  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2979 -> m13_2980  [key=0, style=solid];
m13_2980 -> m13_25  [key=2, style=dotted];
m13_2980 -> m13_2981  [key=0, style=solid];
m13_2982 -> m13_25  [key=2, style=dotted];
m13_2982 -> m13_2983  [key=0, style=solid];
m13_2975 -> m13_2979  [key=1, style=dashed, color=darkseagreen4, label=b];
m13_2975 -> m13_2976  [key=0, style=solid];
m13_2975 -> m13_2984  [key=2, style=dotted];
m13_2975 -> m13_2977  [key=1, style=dashed, color=darkseagreen4, label=b];
m13_2978 -> m13_2979  [key=0, style=solid];
m13_2977 -> m13_2975  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.TestObjects.Aa a"];
m13_2977 -> m13_2978  [key=0, style=solid];
m13_2976 -> m13_2977  [key=0, style=solid];
m13_2983 -> m13_2974  [key=0, style=bold, color=blue];
m13_1333 -> m13_1334  [key=0, style=solid];
m13_1337 -> m13_24  [key=2, style=dotted];
m13_1337 -> m13_1338  [key=0, style=solid];
m13_1337 -> m13_1339  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_1338 -> m13_25  [key=2, style=dotted];
m13_1338 -> m13_1339  [key=0, style=solid];
m13_1339 -> m13_25  [key=2, style=dotted];
m13_1339 -> m13_1001  [key=2, style=dotted];
m13_1339 -> m13_1340  [key=0, style=solid];
m13_1334 -> m13_1001  [key=2, style=dotted];
m13_1334 -> m13_1335  [key=0, style=solid];
m13_1334 -> m13_1341  [key=2, style=dotted];
m13_1336 -> m13_17  [key=2, style=dotted];
m13_1336 -> m13_1337  [key=0, style=solid];
m13_1335 -> m13_1337  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1335 -> m13_1336  [key=0, style=solid];
m13_1335 -> m13_16  [key=2, style=dotted];
m13_1340 -> m13_1333  [key=0, style=bold, color=blue];
m13_2727 -> m13_2728  [key=0, style=solid];
m13_2729 -> m13_42  [key=2, style=dotted];
m13_2729 -> m13_2730  [key=0, style=solid];
m13_2728 -> m13_2729  [key=0, style=solid];
m13_2730 -> m13_2727  [key=0, style=bold, color=blue];
m13_1937 -> m13_1938  [key=0, style=solid];
m13_1940 -> m13_17  [key=2, style=dotted];
m13_1940 -> m13_1941  [key=0, style=solid];
m13_1939 -> m13_1940  [key=0, style=solid];
m13_1939 -> m13_16  [key=2, style=dotted];
m13_1938 -> m13_1939  [key=0, style=solid];
m13_1938 -> m13_1942  [key=2, style=dotted];
m13_1941 -> m13_1937  [key=0, style=bold, color=blue];
m13_1508 -> m13_1509  [key=0, style=solid];
m13_1510 -> m13_47  [key=2, style=dotted];
m13_1510 -> m13_1511  [key=0, style=solid];
m13_1510 -> m13_1512  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1509 -> m13_1510  [key=0, style=solid];
m13_1511 -> m13_1508  [key=0, style=bold, color=blue];
m13_1349 -> m13_1350  [key=0, style=solid];
m13_1351 -> m13_24  [key=2, style=dotted];
m13_1351 -> m13_1352  [key=0, style=solid];
m13_1350 -> m13_1351  [key=0, style=solid];
m13_1350 -> m13_1350  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1352 -> m13_1353  [key=0, style=solid];
m13_1352 -> m13_1355  [key=0, style=solid];
m13_1352 -> m13_1356  [key=2, style=dotted];
m13_1353 -> m13_1354  [key=0, style=solid];
m13_1354 -> m13_366  [key=2, style=dotted];
m13_1354 -> m13_1355  [key=0, style=solid];
m13_1354 -> m13_1357  [key=2, style=dotted];
m13_1355 -> m13_1349  [key=0, style=bold, color=blue];
m13_3542 -> m13_3543  [key=0, style=solid, color=green];
m13_3543 -> m13_3544  [key=0, style=solid, color=green];
m13_3543 -> m13_438  [key=2, style=dotted, color=green];
m13_3543 -> m13_3545  [key=1, style=dashed, color=green, label=culture];
m13_3543 -> m13_3547  [key=1, style=dashed, color=green, label=culture];
m13_3544 -> m13_3545  [key=0, style=solid, color=green];
m13_3545 -> m13_3546  [key=0, style=solid, color=green];
m13_3547 -> m13_3548  [key=0, style=solid, color=green];
m13_3547 -> m13_79  [key=2, style=dotted, color=green];
m13_3547 -> m13_102  [key=2, style=dotted, color=green];
m13_3546 -> m13_3547  [key=0, style=solid, color=green];
m13_3546 -> m13_1001  [key=2, style=dotted];
m13_3546 -> m13_42  [key=2, style=dotted];
m13_3546 -> m13_273  [key=2, style=dotted];
m13_3546 -> m13_1009  [key=2, style=dotted];
m13_3548 -> m13_3549  [key=0, style=solid];
m13_3548 -> m13_17  [key=2, style=dotted];
m13_3549 -> m13_3542  [key=0, style=bold, color=blue];
m13_75 -> m13_76  [key=0, style=solid, color=green];
m13_76 -> m13_77  [key=0, style=solid, color=green];
m13_76 -> m13_74  [key=2, style=dotted, color=green];
m13_76 -> m13_79  [key=2, style=dotted, color=green];
m13_76 -> m13_80  [key=2, style=dotted, color=green];
m13_77 -> m13_78  [key=0, style=solid, color=green];
m13_77 -> m13_25  [key=2, style=dotted, color=green];
m13_78 -> m13_75  [key=0, style=bold, color=blue];
m13_1999 -> m13_2046  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m13_1999 -> m13_2000  [key=0, style=solid];
m13_2000 -> m13_730  [key=2, style=dotted];
m13_2000 -> m13_2001  [key=0, style=solid];
m13_2001 -> m13_1999  [key=0, style=bold, color=blue];
m13_744 -> m13_745  [key=0, style=solid];
m13_745 -> m13_746  [key=0, style=solid];
m13_746 -> m13_744  [key=0, style=bold, color=blue];
m13_1813 -> m13_1814  [key=0, style=solid];
m13_1820 -> m13_24  [key=2, style=dotted];
m13_1820 -> m13_1821  [key=0, style=solid];
m13_1820 -> m13_1822  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m13_1820 -> m13_1823  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m13_1820 -> m13_1824  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m13_1821 -> m13_25  [key=2, style=dotted];
m13_1821 -> m13_1822  [key=0, style=solid];
m13_1822 -> m13_25  [key=2, style=dotted];
m13_1822 -> m13_1823  [key=0, style=solid];
m13_1823 -> m13_25  [key=2, style=dotted];
m13_1823 -> m13_1824  [key=0, style=solid];
m13_1824 -> m13_25  [key=2, style=dotted];
m13_1824 -> m13_1825  [key=0, style=solid];
m13_1819 -> m13_17  [key=2, style=dotted];
m13_1819 -> m13_1820  [key=0, style=solid];
m13_1818 -> m13_1820  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1818 -> m13_1819  [key=0, style=solid];
m13_1818 -> m13_16  [key=2, style=dotted];
m13_1814 -> m13_1818  [key=1, style=dashed, color=darkseagreen4, label=f];
m13_1814 -> m13_1815  [key=0, style=solid];
m13_1814 -> m13_1826  [key=2, style=dotted];
m13_1814 -> m13_1816  [key=1, style=dashed, color=darkseagreen4, label=f];
m13_1814 -> m13_1817  [key=1, style=dashed, color=darkseagreen4, label=f];
m13_1817 -> m13_1818  [key=0, style=solid];
m13_1817 -> m13_1827  [key=2, style=dotted];
m13_1817 -> m13_1792  [key=2, style=dotted];
m13_1815 -> m13_1792  [key=2, style=dotted];
m13_1815 -> m13_1816  [key=0, style=solid];
m13_1815 -> m13_1827  [key=2, style=dotted];
m13_1816 -> m13_1817  [key=0, style=solid];
m13_1816 -> m13_1792  [key=2, style=dotted];
m13_1816 -> m13_1827  [key=2, style=dotted];
m13_1825 -> m13_1813  [key=0, style=bold, color=blue];
m13_2092 -> m13_2093  [key=0, style=solid];
m13_2092 -> m13_2094  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2095  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2096  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2097  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2099  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2100  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2101  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2102  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2103  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2104  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2105  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2106  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2107  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2108  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2109  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2110  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2092 -> m13_2098  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2093 -> m13_2094  [key=0, style=solid];
m13_2093 -> m13_600  [key=2, style=dotted];
m13_2094 -> m13_2095  [key=0, style=solid];
m13_2094 -> m13_601  [key=2, style=dotted];
m13_2095 -> m13_2096  [key=0, style=solid];
m13_2095 -> m13_600  [key=2, style=dotted];
m13_2096 -> m13_2097  [key=0, style=solid];
m13_2096 -> m13_600  [key=2, style=dotted];
m13_2097 -> m13_2098  [key=0, style=solid];
m13_2097 -> m13_600  [key=2, style=dotted];
m13_2099 -> m13_2100  [key=0, style=solid];
m13_2099 -> m13_2112  [key=2, style=dotted];
m13_2100 -> m13_2101  [key=0, style=solid];
m13_2100 -> m13_2113  [key=2, style=dotted];
m13_2101 -> m13_2102  [key=0, style=solid];
m13_2101 -> m13_2114  [key=2, style=dotted];
m13_2102 -> m13_2103  [key=0, style=solid];
m13_2102 -> m13_2115  [key=2, style=dotted];
m13_2103 -> m13_2104  [key=0, style=solid];
m13_2103 -> m13_2116  [key=2, style=dotted];
m13_2104 -> m13_2105  [key=0, style=solid];
m13_2104 -> m13_2117  [key=2, style=dotted];
m13_2105 -> m13_2106  [key=0, style=solid];
m13_2105 -> m13_2118  [key=2, style=dotted];
m13_2106 -> m13_2107  [key=0, style=solid];
m13_2106 -> m13_2119  [key=2, style=dotted];
m13_2107 -> m13_2108  [key=0, style=solid];
m13_2107 -> m13_2120  [key=2, style=dotted];
m13_2108 -> m13_2109  [key=0, style=solid];
m13_2108 -> m13_2121  [key=2, style=dotted];
m13_2109 -> m13_2110  [key=0, style=solid];
m13_2109 -> m13_2122  [key=2, style=dotted];
m13_2110 -> m13_2111  [key=0, style=solid];
m13_2110 -> m13_2123  [key=2, style=dotted];
m13_2098 -> m13_2099  [key=0, style=solid];
m13_2098 -> m13_600  [key=2, style=dotted];
m13_2111 -> m13_2092  [key=0, style=bold, color=blue];
m13_2821 -> m13_2822  [key=0, style=solid];
m13_2822 -> m13_42  [key=2, style=dotted];
m13_2822 -> m13_2823  [key=0, style=solid];
m13_2823 -> m13_2821  [key=0, style=bold, color=blue];
m13_1318 -> m13_1319  [key=0, style=solid];
m13_1323 -> m13_24  [key=2, style=dotted];
m13_1323 -> m13_1324  [key=0, style=solid];
m13_1329 -> m13_24  [key=2, style=dotted];
m13_1329 -> m13_1330  [key=0, style=solid];
m13_1321 -> m13_37  [key=2, style=dotted];
m13_1321 -> m13_1323  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1321 -> m13_1322  [key=0, style=solid];
m13_1327 -> m13_37  [key=2, style=dotted];
m13_1327 -> m13_1329  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1327 -> m13_1328  [key=0, style=solid];
m13_1322 -> m13_25  [key=2, style=dotted];
m13_1322 -> m13_1323  [key=0, style=solid];
m13_1324 -> m13_25  [key=2, style=dotted];
m13_1324 -> m13_1325  [key=0, style=solid];
m13_1328 -> m13_25  [key=2, style=dotted];
m13_1328 -> m13_1329  [key=0, style=solid];
m13_1330 -> m13_25  [key=2, style=dotted];
m13_1330 -> m13_1331  [key=0, style=solid];
m13_1320 -> m13_1321  [key=0, style=solid];
m13_1320 -> m13_1332  [key=2, style=dotted];
m13_1326 -> m13_1327  [key=0, style=solid];
m13_1326 -> m13_1332  [key=2, style=dotted];
m13_1319 -> m13_1322  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m13_1319 -> m13_1320  [key=0, style=solid];
m13_1325 -> m13_1328  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m13_1325 -> m13_1326  [key=0, style=solid];
m13_1331 -> m13_1318  [key=0, style=bold, color=blue];
m13_3816 -> m13_3817  [key=0, style=solid];
m13_3817 -> m13_3782  [key=2, style=dotted];
m13_3817 -> m13_3818  [key=0, style=solid];
m13_3818 -> m13_3816  [key=0, style=bold, color=blue];
m13_3555 -> m13_3556  [key=0, style=solid, color=green];
m13_3556 -> m13_3557  [key=0, style=solid, color=green];
m13_3556 -> m13_438  [key=2, style=dotted, color=green];
m13_3556 -> m13_3558  [key=1, style=dashed, color=green, label=culture];
m13_3556 -> m13_3562  [key=1, style=dashed, color=green, label=culture];
m13_3557 -> m13_3558  [key=0, style=solid, color=green];
m13_3558 -> m13_3559  [key=0, style=solid, color=green];
m13_3562 -> m13_3563  [key=0, style=solid, color=green];
m13_3562 -> m13_79  [key=2, style=dotted, color=green];
m13_3562 -> m13_731  [key=2, style=dotted, color=green];
m13_3559 -> m13_1001  [key=2, style=dotted];
m13_3559 -> m13_3560  [key=0, style=solid];
m13_3559 -> m13_42  [key=2, style=dotted];
m13_3559 -> m13_273  [key=2, style=dotted];
m13_3559 -> m13_1009  [key=2, style=dotted];
m13_3559 -> m13_3563  [key=1, style=dashed, color=darkseagreen4, label=dates];
m13_3561 -> m13_3562  [key=0, style=solid, color=green];
m13_3561 -> m13_2872  [key=2, style=dotted];
m13_3561 -> m13_3563  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3561 -> m13_3564  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3561 -> m13_3565  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3561 -> m13_3566  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3563 -> m13_3564  [key=0, style=solid];
m13_3563 -> m13_2908  [key=2, style=dotted];
m13_3564 -> m13_61  [key=2, style=dotted];
m13_3564 -> m13_3565  [key=0, style=solid];
m13_3565 -> m13_25  [key=2, style=dotted];
m13_3565 -> m13_3566  [key=0, style=solid];
m13_3566 -> m13_25  [key=2, style=dotted];
m13_3566 -> m13_3567  [key=0, style=solid];
m13_3560 -> m13_3561  [key=0, style=solid];
m13_3560 -> m13_2871  [key=2, style=dotted];
m13_3560 -> m13_3567  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_3568 -> m13_17  [key=2, style=dotted];
m13_3568 -> m13_3569  [key=0, style=solid];
m13_3567 -> m13_3568  [key=0, style=solid];
m13_3567 -> m13_2876  [key=2, style=dotted];
m13_3569 -> m13_3555  [key=0, style=bold, color=blue];
m13_1683 -> m13_1684  [key=0, style=solid];
m13_1685 -> m13_47  [key=2, style=dotted];
m13_1685 -> m13_1686  [key=0, style=solid];
m13_1685 -> m13_1687  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1684 -> m13_1685  [key=0, style=solid];
m13_1684 -> m13_1688  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1684 -> m13_1677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1686 -> m13_1683  [key=0, style=bold, color=blue];
m13_2747 -> m13_2748  [key=0, style=solid];
m13_2753 -> m13_24  [key=2, style=dotted];
m13_2753 -> m13_2754  [key=0, style=solid];
m13_2753 -> m13_2755  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2753 -> m13_2756  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2753 -> m13_2757  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2754 -> m13_25  [key=2, style=dotted];
m13_2754 -> m13_2755  [key=0, style=solid];
m13_2755 -> m13_25  [key=2, style=dotted];
m13_2755 -> m13_2756  [key=0, style=solid];
m13_2756 -> m13_25  [key=2, style=dotted];
m13_2756 -> m13_2757  [key=0, style=solid];
m13_2757 -> m13_25  [key=2, style=dotted];
m13_2757 -> m13_2758  [key=0, style=solid];
m13_2752 -> m13_17  [key=2, style=dotted];
m13_2752 -> m13_2753  [key=0, style=solid];
m13_2751 -> m13_2753  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2751 -> m13_2752  [key=0, style=solid];
m13_2751 -> m13_16  [key=2, style=dotted];
m13_2748 -> m13_2754  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2748 -> m13_2755  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2748 -> m13_2751  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2748 -> m13_2749  [key=0, style=solid];
m13_2748 -> m13_2743  [key=2, style=dotted];
m13_2748 -> m13_2750  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2750 -> m13_2751  [key=0, style=solid];
m13_2750 -> m13_2759  [key=2, style=dotted];
m13_2749 -> m13_2750  [key=0, style=solid];
m13_2749 -> m13_2759  [key=2, style=dotted];
m13_2758 -> m13_2747  [key=0, style=bold, color=blue];
m13_2186 -> m13_2187  [key=0, style=solid];
m13_2187 -> m13_24  [key=2, style=dotted];
m13_2187 -> m13_2188  [key=0, style=solid];
m13_2187 -> m13_2189  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_2187 -> m13_2190  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_2187 -> m13_2191  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_2187 -> m13_2192  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_2187 -> m13_2193  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_2187 -> m13_2194  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_2187 -> m13_2195  [key=1, style=dashed, color=darkseagreen4, label=myA];
m13_2196 -> m13_24  [key=2, style=dotted];
m13_2196 -> m13_2197  [key=0, style=solid];
m13_2196 -> m13_2198  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2199  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2200  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2201  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2202  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2203  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2204  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2205  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2206  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2207  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2208  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2209  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2210  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2211  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2212  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2213  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2196 -> m13_2214  [key=1, style=dashed, color=darkseagreen4, label=myB];
m13_2188 -> m13_25  [key=2, style=dotted];
m13_2188 -> m13_2189  [key=0, style=solid];
m13_2188 -> m13_2216  [key=2, style=dotted];
m13_2188 -> m13_2217  [key=2, style=dotted];
m13_2189 -> m13_25  [key=2, style=dotted];
m13_2189 -> m13_2190  [key=0, style=solid];
m13_2189 -> m13_2216  [key=2, style=dotted];
m13_2189 -> m13_2217  [key=2, style=dotted];
m13_2190 -> m13_25  [key=2, style=dotted];
m13_2190 -> m13_2191  [key=0, style=solid];
m13_2190 -> m13_2218  [key=2, style=dotted];
m13_2190 -> m13_2217  [key=2, style=dotted];
m13_2191 -> m13_25  [key=2, style=dotted];
m13_2191 -> m13_2192  [key=0, style=solid];
m13_2191 -> m13_2218  [key=2, style=dotted];
m13_2191 -> m13_2217  [key=2, style=dotted];
m13_2192 -> m13_25  [key=2, style=dotted];
m13_2192 -> m13_2193  [key=0, style=solid];
m13_2192 -> m13_2218  [key=2, style=dotted];
m13_2192 -> m13_2217  [key=2, style=dotted];
m13_2193 -> m13_25  [key=2, style=dotted];
m13_2193 -> m13_2194  [key=0, style=solid];
m13_2193 -> m13_2218  [key=2, style=dotted];
m13_2193 -> m13_2217  [key=2, style=dotted];
m13_2194 -> m13_25  [key=2, style=dotted];
m13_2194 -> m13_2195  [key=0, style=solid];
m13_2194 -> m13_2218  [key=2, style=dotted];
m13_2194 -> m13_2217  [key=2, style=dotted];
m13_2195 -> m13_25  [key=2, style=dotted];
m13_2195 -> m13_2196  [key=0, style=solid];
m13_2195 -> m13_2218  [key=2, style=dotted];
m13_2195 -> m13_2217  [key=2, style=dotted];
m13_2197 -> m13_25  [key=2, style=dotted];
m13_2197 -> m13_2198  [key=0, style=solid];
m13_2197 -> m13_2216  [key=2, style=dotted];
m13_2197 -> m13_2217  [key=2, style=dotted];
m13_2198 -> m13_25  [key=2, style=dotted];
m13_2198 -> m13_2199  [key=0, style=solid];
m13_2198 -> m13_2216  [key=2, style=dotted];
m13_2198 -> m13_2217  [key=2, style=dotted];
m13_2199 -> m13_25  [key=2, style=dotted];
m13_2199 -> m13_2200  [key=0, style=solid];
m13_2199 -> m13_2218  [key=2, style=dotted];
m13_2199 -> m13_2217  [key=2, style=dotted];
m13_2200 -> m13_25  [key=2, style=dotted];
m13_2200 -> m13_2201  [key=0, style=solid];
m13_2200 -> m13_2218  [key=2, style=dotted];
m13_2200 -> m13_2217  [key=2, style=dotted];
m13_2201 -> m13_25  [key=2, style=dotted];
m13_2201 -> m13_2202  [key=0, style=solid];
m13_2201 -> m13_2218  [key=2, style=dotted];
m13_2201 -> m13_2217  [key=2, style=dotted];
m13_2202 -> m13_25  [key=2, style=dotted];
m13_2202 -> m13_2203  [key=0, style=solid];
m13_2202 -> m13_2218  [key=2, style=dotted];
m13_2202 -> m13_2217  [key=2, style=dotted];
m13_2203 -> m13_25  [key=2, style=dotted];
m13_2203 -> m13_2204  [key=0, style=solid];
m13_2203 -> m13_2218  [key=2, style=dotted];
m13_2203 -> m13_2217  [key=2, style=dotted];
m13_2204 -> m13_25  [key=2, style=dotted];
m13_2204 -> m13_2205  [key=0, style=solid];
m13_2204 -> m13_2218  [key=2, style=dotted];
m13_2204 -> m13_2217  [key=2, style=dotted];
m13_2205 -> m13_25  [key=2, style=dotted];
m13_2205 -> m13_2206  [key=0, style=solid];
m13_2206 -> m13_25  [key=2, style=dotted];
m13_2206 -> m13_2207  [key=0, style=solid];
m13_2207 -> m13_25  [key=2, style=dotted];
m13_2207 -> m13_2208  [key=0, style=solid];
m13_2208 -> m13_25  [key=2, style=dotted];
m13_2208 -> m13_2209  [key=0, style=solid];
m13_2209 -> m13_25  [key=2, style=dotted];
m13_2209 -> m13_2210  [key=0, style=solid];
m13_2209 -> m13_2218  [key=2, style=dotted];
m13_2209 -> m13_2217  [key=2, style=dotted];
m13_2210 -> m13_25  [key=2, style=dotted];
m13_2210 -> m13_2211  [key=0, style=solid];
m13_2210 -> m13_2218  [key=2, style=dotted];
m13_2210 -> m13_2217  [key=2, style=dotted];
m13_2211 -> m13_25  [key=2, style=dotted];
m13_2211 -> m13_2212  [key=0, style=solid];
m13_2212 -> m13_25  [key=2, style=dotted];
m13_2212 -> m13_2213  [key=0, style=solid];
m13_2212 -> m13_2218  [key=2, style=dotted];
m13_2212 -> m13_2217  [key=2, style=dotted];
m13_2213 -> m13_25  [key=2, style=dotted];
m13_2213 -> m13_2214  [key=0, style=solid];
m13_2213 -> m13_2218  [key=2, style=dotted];
m13_2213 -> m13_2217  [key=2, style=dotted];
m13_2214 -> m13_25  [key=2, style=dotted];
m13_2214 -> m13_2215  [key=0, style=solid];
m13_2214 -> m13_2218  [key=2, style=dotted];
m13_2214 -> m13_2217  [key=2, style=dotted];
m13_2215 -> m13_2186  [key=0, style=bold, color=blue];
m13_639 -> m13_640  [key=0, style=solid];
m13_642 -> m13_366  [key=2, style=dotted];
m13_642 -> m13_643  [key=0, style=solid];
m13_642 -> m13_645  [key=2, style=dotted];
m13_641 -> m13_644  [key=2, style=dotted];
m13_641 -> m13_642  [key=0, style=solid];
m13_640 -> m13_362  [key=2, style=dotted];
m13_640 -> m13_642  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_640 -> m13_641  [key=0, style=solid];
m13_643 -> m13_639  [key=0, style=bold, color=blue];
m13_3804 -> m13_3805  [key=0, style=solid];
m13_3805 -> m13_3806  [key=0, style=solid];
m13_3806 -> m13_3804  [key=0, style=bold, color=blue];
m13_1438 -> m13_1439  [key=0, style=solid];
m13_1440 -> m13_24  [key=2, style=dotted];
m13_1440 -> m13_1441  [key=0, style=solid];
m13_1440 -> m13_1442  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1440 -> m13_1443  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1440 -> m13_1444  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1440 -> m13_1445  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1442 -> m13_25  [key=2, style=dotted];
m13_1442 -> m13_1443  [key=0, style=solid];
m13_1443 -> m13_25  [key=2, style=dotted];
m13_1443 -> m13_1444  [key=0, style=solid];
m13_1444 -> m13_25  [key=2, style=dotted];
m13_1444 -> m13_1445  [key=0, style=solid];
m13_1445 -> m13_25  [key=2, style=dotted];
m13_1445 -> m13_1446  [key=0, style=solid];
m13_1439 -> m13_1440  [key=0, style=solid];
m13_1439 -> m13_1439  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1441 -> m13_1442  [key=0, style=solid];
m13_1441 -> m13_695  [key=2, style=dotted];
m13_1446 -> m13_1438  [key=0, style=bold, color=blue];
m13_1488 -> m13_1489  [key=0, style=solid];
m13_1496 -> m13_79  [key=2, style=dotted];
m13_1496 -> m13_102  [key=2, style=dotted];
m13_1496 -> m13_1497  [key=0, style=solid];
m13_1495 -> m13_17  [key=2, style=dotted];
m13_1495 -> m13_1496  [key=0, style=solid];
m13_1497 -> m13_17  [key=2, style=dotted];
m13_1497 -> m13_1498  [key=0, style=solid];
m13_1489 -> m13_1496  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1489 -> m13_1490  [key=0, style=solid];
m13_1489 -> m13_1499  [key=2, style=dotted];
m13_1489 -> m13_1491  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1489 -> m13_1492  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1489 -> m13_1493  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1489 -> m13_1494  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1494 -> m13_1495  [key=0, style=solid];
m13_1494 -> m13_16  [key=2, style=dotted];
m13_1490 -> m13_1491  [key=0, style=solid];
m13_1491 -> m13_1492  [key=0, style=solid];
m13_1492 -> m13_1493  [key=0, style=solid];
m13_1493 -> m13_1494  [key=0, style=solid];
m13_1498 -> m13_1488  [key=0, style=bold, color=blue];
m13_1079 -> m13_1080  [key=0, style=solid];
m13_1084 -> m13_25  [key=2, style=dotted];
m13_1084 -> m13_1085  [key=0, style=solid];
m13_1085 -> m13_25  [key=2, style=dotted];
m13_1085 -> m13_1086  [key=0, style=solid];
m13_1083 -> m13_1084  [key=0, style=solid];
m13_1083 -> m13_1085  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1083 -> m13_269  [key=2, style=dotted];
m13_1083 -> m13_739  [key=2, style=dotted];
m13_1080 -> m13_1070  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1080 -> m13_1083  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1080 -> m13_1081  [key=0, style=solid];
m13_1081 -> m13_1083  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1081 -> m13_270  [key=2, style=dotted];
m13_1081 -> m13_1082  [key=0, style=solid];
m13_1082 -> m13_1083  [key=0, style=solid];
m13_1086 -> m13_1079  [key=0, style=bold, color=blue];
m13_62 -> m13_63  [key=0, style=solid];
m13_63 -> m13_47  [key=2, style=dotted];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_64 -> m13_62  [key=0, style=bold, color=blue];
m13_3724 -> m13_3725  [key=0, style=solid];
m13_3726 -> m13_79  [key=2, style=dotted];
m13_3726 -> m13_196  [key=2, style=dotted];
m13_3726 -> m13_3727  [key=0, style=solid];
m13_3726 -> m13_3728  [key=1, style=dashed, color=darkseagreen4, label=people];
m13_3726 -> m13_3729  [key=1, style=dashed, color=darkseagreen4, label=people];
m13_3727 -> m13_25  [key=2, style=dotted];
m13_3727 -> m13_3728  [key=0, style=solid];
m13_3730 -> m13_25  [key=2, style=dotted];
m13_3730 -> m13_3731  [key=0, style=solid];
m13_3731 -> m13_25  [key=2, style=dotted];
m13_3731 -> m13_3732  [key=0, style=solid];
m13_3725 -> m13_3726  [key=0, style=solid];
m13_3725 -> m13_3695  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3728 -> m13_3730  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3728 -> m13_3731  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3728 -> m13_3729  [key=0, style=solid];
m13_3729 -> m13_3730  [key=0, style=solid];
m13_3729 -> m13_3731  [key=1, style=dashed, color=darkseagreen4, label=jane];
m13_3732 -> m13_3724  [key=0, style=bold, color=blue];
m13_3432 -> m13_3433  [key=0, style=solid];
m13_3433 -> m13_24  [key=2, style=dotted];
m13_3433 -> m13_3434  [key=0, style=solid];
m13_3433 -> m13_3435  [key=1, style=dashed, color=darkseagreen4, label=uris];
m13_3436 -> m13_24  [key=2, style=dotted];
m13_3436 -> m13_3437  [key=0, style=solid];
m13_3441 -> m13_24  [key=2, style=dotted];
m13_3441 -> m13_3442  [key=0, style=solid];
m13_3441 -> m13_3443  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_3434 -> m13_25  [key=2, style=dotted];
m13_3434 -> m13_3435  [key=0, style=solid];
m13_3435 -> m13_25  [key=2, style=dotted];
m13_3435 -> m13_3436  [key=0, style=solid];
m13_3435 -> m13_1608  [key=2, style=dotted];
m13_3440 -> m13_25  [key=2, style=dotted];
m13_3440 -> m13_3441  [key=0, style=solid];
m13_3443 -> m13_25  [key=2, style=dotted];
m13_3443 -> m13_3444  [key=0, style=solid];
m13_3443 -> m13_3445  [key=2, style=dotted];
m13_3437 -> m13_3438  [key=0, style=solid];
m13_3437 -> m13_695  [key=2, style=dotted];
m13_3442 -> m13_3443  [key=0, style=solid];
m13_3442 -> m13_695  [key=2, style=dotted];
m13_3438 -> m13_3440  [key=1, style=dashed, color=darkseagreen4, label=i1];
m13_3438 -> m13_3439  [key=0, style=solid];
m13_3438 -> m13_3445  [key=2, style=dotted];
m13_3439 -> m13_3440  [key=0, style=solid];
m13_3439 -> m13_1608  [key=2, style=dotted];
m13_3444 -> m13_3432  [key=0, style=bold, color=blue];
m13_1024 -> m13_1025  [key=0, style=solid];
m13_1026 -> m13_37  [key=2, style=dotted];
m13_1026 -> m13_1027  [key=0, style=solid];
m13_1026 -> m13_1028  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1027 -> m13_25  [key=2, style=dotted];
m13_1027 -> m13_1028  [key=0, style=solid];
m13_1029 -> m13_25  [key=2, style=dotted];
m13_1029 -> m13_1030  [key=0, style=solid];
m13_1030 -> m13_25  [key=2, style=dotted];
m13_1030 -> m13_1031  [key=0, style=solid];
m13_1031 -> m13_25  [key=2, style=dotted];
m13_1031 -> m13_1032  [key=0, style=solid];
m13_1032 -> m13_25  [key=2, style=dotted];
m13_1032 -> m13_1033  [key=0, style=solid];
m13_1033 -> m13_25  [key=2, style=dotted];
m13_1033 -> m13_1034  [key=0, style=solid];
m13_1034 -> m13_25  [key=2, style=dotted];
m13_1034 -> m13_1035  [key=0, style=solid];
m13_1035 -> m13_25  [key=2, style=dotted];
m13_1035 -> m13_1036  [key=0, style=solid];
m13_1025 -> m13_1026  [key=0, style=solid];
m13_1025 -> m13_852  [key=2, style=dotted];
m13_1025 -> m13_1028  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1028 -> m13_1029  [key=0, style=solid];
m13_1028 -> m13_1030  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1028 -> m13_1031  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1028 -> m13_1032  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1028 -> m13_1033  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1028 -> m13_1034  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1028 -> m13_1035  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1028 -> m13_1028  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1028 -> m13_1037  [key=2, style=dotted];
m13_1036 -> m13_1024  [key=0, style=bold, color=blue];
m13_2359 -> m13_2360  [key=0, style=solid];
m13_2361 -> m13_24  [key=2, style=dotted];
m13_2361 -> m13_2362  [key=0, style=solid];
m13_2361 -> m13_2363  [key=1, style=dashed, color=darkseagreen4, label=cc];
m13_2361 -> m13_2364  [key=1, style=dashed, color=darkseagreen4, label=cc];
m13_2362 -> m13_25  [key=2, style=dotted];
m13_2362 -> m13_2363  [key=0, style=solid];
m13_2363 -> m13_25  [key=2, style=dotted];
m13_2363 -> m13_2364  [key=0, style=solid];
m13_2364 -> m13_25  [key=2, style=dotted];
m13_2364 -> m13_2365  [key=0, style=solid];
m13_2360 -> m13_2361  [key=0, style=solid];
m13_2360 -> m13_2360  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2365 -> m13_2359  [key=0, style=bold, color=blue];
m13_51 -> m13_52  [key=0, style=solid, color=green];
m13_52 -> m13_53  [key=0, style=solid, color=green];
m13_52 -> m13_47  [key=2, style=dotted, color=green];
m13_52 -> m13_54  [key=1, style=dashed, color=green, label="lambda expression"];
m13_53 -> m13_51  [key=0, style=bold, color=blue];
m13_103 -> m13_104  [key=0, style=solid];
m13_104 -> m13_47  [key=2, style=dotted];
m13_104 -> m13_105  [key=0, style=solid];
m13_104 -> m13_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_105 -> m13_47  [key=2, style=dotted];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_106 -> m13_47  [key=2, style=dotted];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_117  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_107 -> m13_47  [key=2, style=dotted];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_108 -> m13_47  [key=2, style=dotted];
m13_108 -> m13_109  [key=0, style=solid];
m13_108 -> m13_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_109 -> m13_47  [key=2, style=dotted];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_110 -> m13_103  [key=0, style=bold, color=blue];
m13_2824 -> m13_2825  [key=0, style=solid];
m13_2830 -> m13_24  [key=2, style=dotted];
m13_2830 -> m13_2831  [key=0, style=solid];
m13_2833 -> m13_24  [key=2, style=dotted];
m13_2833 -> m13_2834  [key=0, style=solid];
m13_2829 -> m13_37  [key=2, style=dotted];
m13_2829 -> m13_2830  [key=0, style=solid];
m13_2831 -> m13_25  [key=2, style=dotted];
m13_2831 -> m13_2832  [key=0, style=solid];
m13_2831 -> m13_2836  [key=2, style=dotted];
m13_2834 -> m13_25  [key=2, style=dotted];
m13_2834 -> m13_2835  [key=0, style=solid];
m13_2834 -> m13_2836  [key=2, style=dotted];
m13_2832 -> m13_2833  [key=0, style=solid];
m13_2832 -> m13_16  [key=2, style=dotted];
m13_2825 -> m13_2829  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m13_2825 -> m13_2832  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m13_2825 -> m13_2826  [key=0, style=solid];
m13_2825 -> m13_2821  [key=2, style=dotted];
m13_2825 -> m13_2828  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m13_2826 -> m13_2829  [key=0, style=solid];
m13_2826 -> m13_182  [key=2, style=dotted];
m13_2828 -> m13_2829  [key=0, style=solid];
m13_2828 -> m13_222  [key=2, style=dotted];
m13_2827 -> m13_2828  [key=0, style=solid];
m13_2835 -> m13_2824  [key=0, style=bold, color=blue];
m13_2815 -> m13_2816  [key=0, style=solid];
m13_2818 -> m13_17  [key=2, style=dotted];
m13_2818 -> m13_2819  [key=0, style=solid];
m13_2817 -> m13_2818  [key=0, style=solid];
m13_2817 -> m13_16  [key=2, style=dotted];
m13_2816 -> m13_2817  [key=0, style=solid];
m13_2816 -> m13_2820  [key=2, style=dotted];
m13_2819 -> m13_2815  [key=0, style=bold, color=blue];
m13_2258 -> m13_2259  [key=0, style=solid];
m13_2266 -> m13_24  [key=2, style=dotted];
m13_2266 -> m13_2267  [key=0, style=solid];
m13_2267 -> m13_25  [key=2, style=dotted];
m13_2267 -> m13_2268  [key=0, style=solid];
m13_2265 -> m13_17  [key=2, style=dotted];
m13_2265 -> m13_2266  [key=0, style=solid];
m13_2263 -> m13_2266  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2263 -> m13_2265  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2263 -> m13_2264  [key=0, style=solid];
m13_2263 -> m13_16  [key=2, style=dotted];
m13_2259 -> m13_2267  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_2259 -> m13_2263  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_2259 -> m13_2260  [key=0, style=solid];
m13_2259 -> m13_2269  [key=2, style=dotted];
m13_2259 -> m13_2262  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m13_2264 -> m13_2265  [key=0, style=solid];
m13_2264 -> m13_2264  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m13_2262 -> m13_2263  [key=0, style=solid];
m13_2260 -> m13_2262  [key=1, style=dashed, color=darkseagreen4, label=document];
m13_2260 -> m13_2261  [key=0, style=solid];
m13_2260 -> m13_2270  [key=2, style=dotted];
m13_2261 -> m13_2262  [key=0, style=solid];
m13_2261 -> m13_2271  [key=2, style=dotted];
m13_2268 -> m13_2258  [key=0, style=bold, color=blue];
m13_2018 -> m13_2019  [key=0, style=solid];
m13_2019 -> m13_2020  [key=0, style=solid];
m13_2019 -> m13_2021  [key=2, style=dotted];
m13_2020 -> m13_2018  [key=0, style=bold, color=blue];
m13_3360 -> m13_3354  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m13_3360 -> m13_3361  [key=0, style=solid];
m13_3360 -> m13_3365  [key=3, color=darkorchid, style=bold, label="method methodReturn T SerializeAndDeserialize"];
m13_3361 -> m13_3364  [key=2, style=dotted];
m13_3361 -> m13_3362  [key=0, style=solid];
m13_3362 -> m13_3363  [key=0, style=solid];
m13_3362 -> m13_3365  [key=2, style=dotted];
m13_3363 -> m13_3360  [key=0, style=bold, color=blue];
m13_2541 -> m13_2542  [key=0, style=solid];
m13_2545 -> m13_24  [key=2, style=dotted];
m13_2545 -> m13_2546  [key=0, style=solid];
m13_2545 -> m13_2547  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_2545 -> m13_2548  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_2544 -> m13_37  [key=2, style=dotted];
m13_2544 -> m13_2545  [key=0, style=solid];
m13_2546 -> m13_25  [key=2, style=dotted];
m13_2546 -> m13_2547  [key=0, style=solid];
m13_2547 -> m13_25  [key=2, style=dotted];
m13_2547 -> m13_2548  [key=0, style=solid];
m13_2548 -> m13_25  [key=2, style=dotted];
m13_2548 -> m13_2549  [key=0, style=solid];
m13_2542 -> m13_2544  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_2542 -> m13_2543  [key=0, style=solid];
m13_2542 -> m13_2550  [key=2, style=dotted];
m13_2543 -> m13_2544  [key=0, style=solid];
m13_2543 -> m13_2551  [key=2, style=dotted];
m13_2549 -> m13_2541  [key=0, style=bold, color=blue];
m13_1552 -> m13_1553  [key=0, style=solid];
m13_1557 -> m13_24  [key=2, style=dotted];
m13_1557 -> m13_1558  [key=0, style=solid];
m13_1558 -> m13_25  [key=2, style=dotted];
m13_1558 -> m13_1559  [key=0, style=solid];
m13_1558 -> m13_1549  [key=2, style=dotted];
m13_1556 -> m13_17  [key=2, style=dotted];
m13_1556 -> m13_1557  [key=0, style=solid];
m13_1555 -> m13_1557  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1555 -> m13_1556  [key=0, style=solid];
m13_1555 -> m13_16  [key=2, style=dotted];
m13_1553 -> m13_1555  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1553 -> m13_1554  [key=0, style=solid];
m13_1553 -> m13_1543  [key=2, style=dotted];
m13_1554 -> m13_1555  [key=0, style=solid];
m13_1559 -> m13_1552  [key=0, style=bold, color=blue];
m13_3101 -> m13_3102  [key=0, style=solid];
m13_3102 -> m13_47  [key=2, style=dotted];
m13_3102 -> m13_3103  [key=0, style=solid];
m13_3102 -> m13_3104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3103 -> m13_3101  [key=0, style=bold, color=blue];
m13_2789 -> m13_2790  [key=0, style=solid];
m13_2789 -> m13_2791  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_2789 -> m13_2792  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_2790 -> m13_2791  [key=0, style=solid];
m13_2791 -> m13_2792  [key=0, style=solid];
m13_2792 -> m13_2793  [key=0, style=solid];
m13_2793 -> m13_2789  [key=0, style=bold, color=blue];
m13_1943 -> m13_1944  [key=0, style=solid];
m13_1945 -> m13_79  [key=2, style=dotted];
m13_1945 -> m13_196  [key=2, style=dotted];
m13_1945 -> m13_1946  [key=0, style=solid];
m13_1945 -> m13_1048  [key=2, style=dotted];
m13_1945 -> m13_1947  [key=1, style=dashed, color=darkseagreen4, label=cISO];
m13_1946 -> m13_79  [key=2, style=dotted];
m13_1946 -> m13_196  [key=2, style=dotted];
m13_1946 -> m13_1947  [key=0, style=solid];
m13_1947 -> m13_25  [key=2, style=dotted];
m13_1947 -> m13_1948  [key=0, style=solid];
m13_1944 -> m13_1945  [key=0, style=solid];
m13_1944 -> m13_1946  [key=1, style=dashed, color=darkseagreen4, label=jsonIsoText];
m13_1944 -> m13_1944  [key=3, color=darkorchid, style=bold, label="Local variable string jsonIsoText"];
m13_1948 -> m13_1943  [key=0, style=bold, color=blue];
m13_3526 -> m13_3527  [key=0, style=solid];
m13_3528 -> m13_79  [key=2, style=dotted];
m13_3528 -> m13_3529  [key=0, style=solid];
m13_3531 -> m13_25  [key=2, style=dotted];
m13_3531 -> m13_3531  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_3531 -> m13_3532  [key=0, style=solid];
m13_3531 -> m13_1009  [key=2, style=dotted];
m13_3532 -> m13_25  [key=2, style=dotted];
m13_3532 -> m13_3532  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_3532 -> m13_3533  [key=0, style=solid];
m13_3532 -> m13_3535  [key=2, style=dotted];
m13_3527 -> m13_3528  [key=0, style=solid];
m13_3527 -> m13_3527  [key=3, color=darkorchid, style=bold, label="Local variable string content"];
m13_3527 -> m13_3529  [key=1, style=dashed, color=darkseagreen4, label=content];
m13_3529 -> m13_3530  [key=0, style=solid];
m13_3529 -> m13_3534  [key=2, style=dotted];
m13_3530 -> m13_3531  [key=0, style=solid];
m13_3533 -> m13_3526  [key=0, style=bold, color=blue];
m13_1179 -> m13_1180  [key=0, style=solid];
m13_1183 -> m13_24  [key=2, style=dotted];
m13_1183 -> m13_1184  [key=0, style=solid];
m13_1181 -> m13_37  [key=2, style=dotted];
m13_1181 -> m13_1183  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1181 -> m13_1182  [key=0, style=solid];
m13_1182 -> m13_25  [key=2, style=dotted];
m13_1182 -> m13_1183  [key=0, style=solid];
m13_1184 -> m13_25  [key=2, style=dotted];
m13_1184 -> m13_1185  [key=0, style=solid];
m13_1180 -> m13_1181  [key=0, style=solid];
m13_1180 -> m13_1186  [key=2, style=dotted];
m13_1185 -> m13_1179  [key=0, style=bold, color=blue];
m13_177 -> m13_178  [key=0, style=solid];
m13_177 -> m13_180  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_179 -> m13_182  [key=2, style=dotted];
m13_179 -> m13_181  [key=0, style=solid];
m13_178 -> m13_179  [key=0, style=solid];
m13_178 -> m13_180  [key=0, style=solid];
m13_180 -> m13_181  [key=0, style=solid];
m13_180 -> m13_183  [key=2, style=dotted];
m13_181 -> m13_177  [key=0, style=bold, color=blue];
m13_1500 -> m13_1501  [key=0, style=solid];
m13_1501 -> m13_58  [key=3, color=green, style=bold, label="Local variable string json"];
m13_1501 -> m13_1502  [key=0, style=solid];
m13_1502 -> m13_24  [key=2, style=dotted];
m13_1502 -> m13_1503  [key=0, style=solid];
m13_1502 -> m13_1504  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1502 -> m13_1505  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1502 -> m13_1506  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1503 -> m13_25  [key=2, style=dotted];
m13_1503 -> m13_1504  [key=0, style=solid];
m13_1504 -> m13_25  [key=2, style=dotted];
m13_1504 -> m13_1505  [key=0, style=solid];
m13_1505 -> m13_25  [key=2, style=dotted];
m13_1505 -> m13_1506  [key=0, style=solid];
m13_1506 -> m13_25  [key=2, style=dotted];
m13_1506 -> m13_1507  [key=0, style=solid];
m13_1507 -> m13_1500  [key=0, style=bold, color=blue];
m13_3364 -> m13_3360  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m13_3364 -> m13_3366  [key=0, style=solid];
m13_3364 -> m13_3369  [key=1, style=dashed, color=darkseagreen4, label=T];
m13_3368 -> m13_1765  [key=2, style=dotted];
m13_3368 -> m13_3369  [key=0, style=solid];
m13_3366 -> m13_2871  [key=2, style=dotted];
m13_3366 -> m13_3367  [key=0, style=solid];
m13_3366 -> m13_3369  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m13_3366 -> m13_3370  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m13_3367 -> m13_3368  [key=0, style=solid];
m13_3367 -> m13_270  [key=2, style=dotted];
m13_3367 -> m13_3369  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_3369 -> m13_734  [key=2, style=dotted];
m13_3369 -> m13_3370  [key=0, style=solid];
m13_3370 -> m13_2876  [key=2, style=dotted];
m13_3370 -> m13_3371  [key=0, style=solid];
m13_3371 -> m13_3364  [key=0, style=bold, color=blue];
m13_3042 -> m13_3043  [key=0, style=solid];
m13_3046 -> m13_24  [key=2, style=dotted];
m13_3046 -> m13_3047  [key=0, style=solid];
m13_3046 -> m13_3048  [key=1, style=dashed, color=darkseagreen4, label=actual];
m13_3046 -> m13_3049  [key=1, style=dashed, color=darkseagreen4, label=actual];
m13_3047 -> m13_25  [key=2, style=dotted];
m13_3047 -> m13_1145  [key=2, style=dotted];
m13_3047 -> m13_3048  [key=0, style=solid];
m13_3048 -> m13_25  [key=2, style=dotted];
m13_3048 -> m13_1145  [key=2, style=dotted];
m13_3048 -> m13_3049  [key=0, style=solid];
m13_3043 -> m13_1001  [key=2, style=dotted];
m13_3043 -> m13_1145  [key=2, style=dotted];
m13_3043 -> m13_3044  [key=0, style=solid];
m13_3043 -> m13_3052  [key=2, style=dotted];
m13_3045 -> m13_17  [key=2, style=dotted];
m13_3045 -> m13_3046  [key=0, style=solid];
m13_3044 -> m13_3046  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m13_3044 -> m13_3045  [key=0, style=solid];
m13_3044 -> m13_16  [key=2, style=dotted];
m13_3049 -> m13_3050  [key=0, style=solid];
m13_3050 -> m13_3051  [key=0, style=solid];
m13_3050 -> m13_327  [key=2, style=dotted];
m13_3050 -> m13_2911  [key=2, style=dotted];
m13_3051 -> m13_3042  [key=0, style=bold, color=blue];
m13_291 -> m13_292  [key=0, style=solid];
m13_294 -> m13_24  [key=2, style=dotted];
m13_294 -> m13_295  [key=0, style=solid];
m13_294 -> m13_296  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_294 -> m13_297  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_293 -> m13_37  [key=2, style=dotted];
m13_293 -> m13_294  [key=0, style=solid];
m13_295 -> m13_25  [key=2, style=dotted];
m13_295 -> m13_296  [key=0, style=solid];
m13_296 -> m13_25  [key=2, style=dotted];
m13_296 -> m13_297  [key=0, style=solid];
m13_297 -> m13_25  [key=2, style=dotted];
m13_297 -> m13_298  [key=0, style=solid];
m13_292 -> m13_293  [key=0, style=solid];
m13_292 -> m13_295  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_292 -> m13_296  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_292 -> m13_297  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_292 -> m13_299  [key=2, style=dotted];
m13_298 -> m13_291  [key=0, style=bold, color=blue];
m13_3399 -> m13_3400  [key=0, style=solid];
m13_3408 -> m13_47  [key=2, style=dotted];
m13_3408 -> m13_3409  [key=0, style=solid];
m13_3408 -> m13_3410  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3401 -> m13_79  [key=2, style=dotted];
m13_3401 -> m13_3402  [key=0, style=solid];
m13_3401 -> m13_3406  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3401 -> m13_3407  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3405 -> m13_25  [key=2, style=dotted];
m13_3405 -> m13_3406  [key=0, style=solid];
m13_3402 -> m13_731  [key=2, style=dotted];
m13_3402 -> m13_3403  [key=0, style=solid];
m13_3407 -> m13_731  [key=2, style=dotted];
m13_3407 -> m13_3408  [key=0, style=solid];
m13_3407 -> m13_3411  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_3400 -> m13_3408  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3400 -> m13_3401  [key=0, style=solid];
m13_3400 -> m13_3400  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3400 -> m13_3403  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3400 -> m13_3411  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3406 -> m13_3407  [key=0, style=solid];
m13_3403 -> m13_3405  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_3403 -> m13_3404  [key=0, style=solid];
m13_3403 -> m13_268  [key=2, style=dotted];
m13_3403 -> m13_269  [key=2, style=dotted];
m13_3403 -> m13_2461  [key=2, style=dotted];
m13_3404 -> m13_3405  [key=0, style=solid];
m13_3404 -> m13_695  [key=2, style=dotted];
m13_3409 -> m13_3399  [key=0, style=bold, color=blue];
m13_2176 -> m13_2177  [key=0, style=solid];
m13_2179 -> m13_17  [key=2, style=dotted];
m13_2179 -> m13_2180  [key=0, style=solid];
m13_2182 -> m13_17  [key=2, style=dotted];
m13_2182 -> m13_2183  [key=0, style=solid];
m13_2178 -> m13_2179  [key=0, style=solid];
m13_2178 -> m13_16  [key=2, style=dotted];
m13_2180 -> m13_2181  [key=0, style=solid];
m13_2180 -> m13_2185  [key=2, style=dotted];
m13_2181 -> m13_2182  [key=0, style=solid];
m13_2181 -> m13_16  [key=2, style=dotted];
m13_2177 -> m13_2178  [key=0, style=solid];
m13_2177 -> m13_2184  [key=2, style=dotted];
m13_2183 -> m13_2176  [key=0, style=bold, color=blue];
m13_3798 -> m13_3799  [key=0, style=solid];
m13_3799 -> m13_3782  [key=2, style=dotted];
m13_3799 -> m13_3800  [key=0, style=solid];
m13_3800 -> m13_3798  [key=0, style=bold, color=blue];
m13_2594 -> m13_2583  [key=3, color=darkorchid, style=bold, label="Parameter variable string serStr"];
m13_2594 -> m13_2595  [key=0, style=solid];
m13_2595 -> m13_79  [key=2, style=dotted];
m13_2595 -> m13_196  [key=2, style=dotted];
m13_2595 -> m13_2596  [key=0, style=solid];
m13_2596 -> m13_2594  [key=0, style=bold, color=blue];
m13_3113 -> m13_3114  [key=0, style=solid];
m13_3114 -> m13_47  [key=2, style=dotted];
m13_3114 -> m13_3115  [key=0, style=solid];
m13_3114 -> m13_3116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3115 -> m13_3113  [key=0, style=bold, color=blue];
m13_1393 -> m13_1394  [key=0, style=solid];
m13_1395 -> m13_24  [key=2, style=dotted];
m13_1395 -> m13_1396  [key=0, style=solid];
m13_1394 -> m13_1395  [key=0, style=solid];
m13_1394 -> m13_1394  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1396 -> m13_1393  [key=0, style=bold, color=blue];
m13_3697 -> m13_3698  [key=0, style=solid, color=green];
m13_3698 -> m13_3699  [key=0, style=solid, color=green];
m13_3698 -> m13_638  [key=2, style=dotted, color=green];
m13_3698 -> m13_1145  [key=2, style=dotted, color=green];
m13_3698 -> m13_3700  [key=1, style=dashed, color=green, label=john];
m13_3698 -> m13_3701  [key=1, style=dashed, color=green, label=john];
m13_3698 -> m13_3702  [key=1, style=dashed, color=green, label=john];
m13_3699 -> m13_3700  [key=0, style=solid, color=green];
m13_3699 -> m13_638  [key=2, style=dotted, color=green];
m13_3699 -> m13_1145  [key=2, style=dotted, color=green];
m13_3699 -> m13_3701  [key=1, style=dashed, color=green, label=jane];
m13_3699 -> m13_3702  [key=1, style=dashed, color=green, label=jane];
m13_3700 -> m13_3701  [key=0, style=solid, color=green];
m13_3701 -> m13_3702  [key=0, style=solid, color=green];
m13_3702 -> m13_3703  [key=0, style=solid, color=green];
m13_3702 -> m13_42  [key=2, style=dotted, color=green];
m13_3703 -> m13_3704  [key=0, style=solid, color=green];
m13_3703 -> m13_79  [key=2, style=dotted, color=green];
m13_3703 -> m13_80  [key=2, style=dotted, color=green];
m13_3704 -> m13_3705  [key=0, style=solid, color=green];
m13_3704 -> m13_17  [key=2, style=dotted, color=green];
m13_3705 -> m13_3697  [key=0, style=bold, color=blue];
m13_1879 -> m13_1880  [key=0, style=solid];
m13_1880 -> m13_24  [key=2, style=dotted];
m13_1880 -> m13_1881  [key=0, style=solid];
m13_1880 -> m13_1882  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1880 -> m13_1883  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1880 -> m13_1884  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1880 -> m13_1885  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1880 -> m13_1886  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1880 -> m13_1887  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1880 -> m13_1888  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1880 -> m13_1889  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1883 -> m13_25  [key=2, style=dotted];
m13_1883 -> m13_1884  [key=0, style=solid];
m13_1883 -> m13_272  [key=2, style=dotted];
m13_1884 -> m13_25  [key=2, style=dotted];
m13_1884 -> m13_1885  [key=0, style=solid];
m13_1884 -> m13_272  [key=2, style=dotted];
m13_1885 -> m13_25  [key=2, style=dotted];
m13_1885 -> m13_1886  [key=0, style=solid];
m13_1886 -> m13_25  [key=2, style=dotted];
m13_1886 -> m13_1887  [key=0, style=solid];
m13_1887 -> m13_25  [key=2, style=dotted];
m13_1887 -> m13_1888  [key=0, style=solid];
m13_1888 -> m13_25  [key=2, style=dotted];
m13_1888 -> m13_1889  [key=0, style=solid];
m13_1889 -> m13_25  [key=2, style=dotted];
m13_1889 -> m13_1890  [key=0, style=solid];
m13_1881 -> m13_1882  [key=0, style=solid];
m13_1881 -> m13_695  [key=2, style=dotted];
m13_1882 -> m13_1883  [key=0, style=solid];
m13_1882 -> m13_695  [key=2, style=dotted];
m13_1890 -> m13_1879  [key=0, style=bold, color=blue];
m13_1711 -> m13_1712  [key=0, style=solid];
m13_1713 -> m13_47  [key=2, style=dotted];
m13_1713 -> m13_1714  [key=0, style=solid];
m13_1713 -> m13_1715  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1712 -> m13_1713  [key=0, style=solid];
m13_1712 -> m13_1716  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1712 -> m13_1677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1714 -> m13_1711  [key=0, style=bold, color=blue];
m13_343 -> m13_344  [key=0, style=solid];
m13_346 -> m13_25  [key=2, style=dotted];
m13_346 -> m13_347  [key=0, style=solid];
m13_347 -> m13_25  [key=2, style=dotted];
m13_347 -> m13_348  [key=0, style=solid];
m13_348 -> m13_25  [key=2, style=dotted];
m13_348 -> m13_349  [key=0, style=solid];
m13_349 -> m13_25  [key=2, style=dotted];
m13_349 -> m13_350  [key=0, style=solid];
m13_349 -> m13_363  [key=2, style=dotted];
m13_350 -> m13_25  [key=2, style=dotted];
m13_350 -> m13_351  [key=0, style=solid];
m13_354 -> m13_25  [key=2, style=dotted];
m13_354 -> m13_355  [key=0, style=solid];
m13_358 -> m13_25  [key=2, style=dotted];
m13_358 -> m13_359  [key=0, style=solid];
m13_359 -> m13_25  [key=2, style=dotted];
m13_359 -> m13_360  [key=0, style=solid];
m13_351 -> m13_364  [key=2, style=dotted];
m13_351 -> m13_352  [key=0, style=solid];
m13_351 -> m13_365  [key=2, style=dotted];
m13_351 -> m13_366  [key=2, style=dotted];
m13_355 -> m13_364  [key=2, style=dotted];
m13_355 -> m13_356  [key=0, style=solid];
m13_355 -> m13_365  [key=2, style=dotted];
m13_355 -> m13_366  [key=2, style=dotted];
m13_360 -> m13_364  [key=2, style=dotted];
m13_360 -> m13_361  [key=0, style=solid];
m13_360 -> m13_365  [key=2, style=dotted];
m13_360 -> m13_366  [key=2, style=dotted];
m13_345 -> m13_346  [key=0, style=solid];
m13_345 -> m13_347  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_345 -> m13_348  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_345 -> m13_349  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_345 -> m13_350  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_345 -> m13_351  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_345 -> m13_362  [key=2, style=dotted];
m13_353 -> m13_354  [key=0, style=solid];
m13_353 -> m13_355  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_353 -> m13_362  [key=2, style=dotted];
m13_357 -> m13_358  [key=0, style=solid];
m13_357 -> m13_359  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_357 -> m13_360  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_357 -> m13_362  [key=2, style=dotted];
m13_344 -> m13_351  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_344 -> m13_345  [key=0, style=solid];
m13_344 -> m13_344  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_352 -> m13_355  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_352 -> m13_353  [key=0, style=solid];
m13_356 -> m13_360  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_356 -> m13_357  [key=0, style=solid];
m13_361 -> m13_343  [key=0, style=bold, color=blue];
m13_837 -> m13_838  [key=0, style=solid];
m13_843 -> m13_37  [key=2, style=dotted];
m13_843 -> m13_844  [key=0, style=solid];
m13_845 -> m13_25  [key=2, style=dotted];
m13_845 -> m13_846  [key=0, style=solid];
m13_846 -> m13_25  [key=2, style=dotted];
m13_846 -> m13_847  [key=0, style=solid];
m13_846 -> m13_853  [key=2, style=dotted];
m13_847 -> m13_25  [key=2, style=dotted];
m13_847 -> m13_848  [key=0, style=solid];
m13_848 -> m13_25  [key=2, style=dotted];
m13_848 -> m13_849  [key=0, style=solid];
m13_849 -> m13_25  [key=2, style=dotted];
m13_849 -> m13_850  [key=0, style=solid];
m13_850 -> m13_25  [key=2, style=dotted];
m13_850 -> m13_851  [key=0, style=solid];
m13_838 -> m13_843  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_838 -> m13_839  [key=0, style=solid];
m13_838 -> m13_852  [key=2, style=dotted];
m13_838 -> m13_840  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_838 -> m13_841  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_838 -> m13_842  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_842 -> m13_843  [key=0, style=solid];
m13_844 -> m13_845  [key=0, style=solid];
m13_844 -> m13_846  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_844 -> m13_847  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_844 -> m13_848  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_844 -> m13_849  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_844 -> m13_850  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_844 -> m13_835  [key=2, style=dotted];
m13_839 -> m13_840  [key=0, style=solid];
m13_840 -> m13_853  [key=2, style=dotted];
m13_840 -> m13_841  [key=0, style=solid];
m13_841 -> m13_842  [key=0, style=solid];
m13_851 -> m13_837  [key=0, style=bold, color=blue];
m13_3771 -> m13_3778  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_3771 -> m13_3772  [key=0, style=solid];
m13_3771 -> m13_3774  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_3771 -> m13_3776  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m13_3779 -> m13_729  [key=2, style=dotted];
m13_3779 -> m13_3781  [key=0, style=solid];
m13_3778 -> m13_3779  [key=0, style=solid];
m13_3778 -> m13_3780  [key=0, style=solid];
m13_3773 -> m13_3781  [key=0, style=solid];
m13_3775 -> m13_3781  [key=0, style=solid];
m13_3777 -> m13_3781  [key=0, style=solid];
m13_3776 -> m13_3778  [key=0, style=solid];
m13_3776 -> m13_3777  [key=0, style=solid];
m13_3780 -> m13_3781  [key=0, style=solid];
m13_3780 -> m13_3782  [key=2, style=dotted];
m13_3772 -> m13_3773  [key=0, style=solid];
m13_3772 -> m13_3774  [key=0, style=solid];
m13_3774 -> m13_3775  [key=0, style=solid];
m13_3774 -> m13_3776  [key=0, style=solid];
m13_3781 -> m13_3771  [key=0, style=bold, color=blue];
m13_2485 -> m13_2486  [key=0, style=solid];
m13_2494 -> m13_24  [key=2, style=dotted];
m13_2494 -> m13_2495  [key=0, style=solid];
m13_2494 -> m13_2496  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2494 -> m13_2497  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2494 -> m13_2498  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2494 -> m13_2499  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2494 -> m13_2500  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m13_2496 -> m13_25  [key=2, style=dotted];
m13_2496 -> m13_2497  [key=0, style=solid];
m13_2498 -> m13_25  [key=2, style=dotted];
m13_2498 -> m13_2499  [key=0, style=solid];
m13_2502 -> m13_25  [key=2, style=dotted];
m13_2502 -> m13_2503  [key=0, style=solid];
m13_2504 -> m13_25  [key=2, style=dotted];
m13_2504 -> m13_2505  [key=0, style=solid];
m13_2491 -> m13_1001  [key=2, style=dotted];
m13_2491 -> m13_2492  [key=0, style=solid];
m13_2493 -> m13_17  [key=2, style=dotted];
m13_2493 -> m13_2494  [key=0, style=solid];
m13_2492 -> m13_2494  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2492 -> m13_2493  [key=0, style=solid];
m13_2492 -> m13_2507  [key=2, style=dotted];
m13_2495 -> m13_2496  [key=0, style=solid];
m13_2495 -> m13_644  [key=2, style=dotted];
m13_2497 -> m13_2498  [key=0, style=solid];
m13_2497 -> m13_644  [key=2, style=dotted];
m13_2499 -> m13_2500  [key=0, style=solid];
m13_2499 -> m13_644  [key=2, style=dotted];
m13_2500 -> m13_2502  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_2500 -> m13_2504  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_2500 -> m13_2501  [key=0, style=solid];
m13_2500 -> m13_2503  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_2486 -> m13_2496  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2486 -> m13_2498  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2486 -> m13_2502  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2486 -> m13_2504  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2486 -> m13_2491  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2486 -> m13_2492  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2486 -> m13_2487  [key=0, style=solid];
m13_2486 -> m13_2506  [key=2, style=dotted];
m13_2486 -> m13_2488  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2486 -> m13_2489  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2486 -> m13_2490  [key=1, style=dashed, color=darkseagreen4, label=expando];
m13_2501 -> m13_2502  [key=0, style=solid];
m13_2501 -> m13_644  [key=2, style=dotted];
m13_2503 -> m13_2504  [key=0, style=solid];
m13_2503 -> m13_644  [key=2, style=dotted];
m13_2490 -> m13_2491  [key=0, style=solid];
m13_2487 -> m13_2488  [key=0, style=solid];
m13_2488 -> m13_2489  [key=0, style=solid];
m13_2489 -> m13_2490  [key=0, style=solid];
m13_2489 -> m13_2506  [key=2, style=dotted];
m13_2505 -> m13_2485  [key=0, style=bold, color=blue];
m13_589 -> m13_590  [key=0, style=solid];
m13_590 -> m13_591  [key=0, style=solid];
m13_591 -> m13_589  [key=0, style=bold, color=blue];
m13_3786 -> m13_3787  [key=0, style=solid];
m13_3787 -> m13_3782  [key=2, style=dotted];
m13_3787 -> m13_3788  [key=0, style=solid];
m13_3788 -> m13_3786  [key=0, style=bold, color=blue];
m13_1754 -> m13_1755  [key=0, style=solid];
m13_1756 -> m13_24  [key=2, style=dotted];
m13_1756 -> m13_1757  [key=0, style=solid];
m13_1757 -> m13_25  [key=2, style=dotted];
m13_1757 -> m13_1758  [key=0, style=solid];
m13_1755 -> m13_1756  [key=0, style=solid];
m13_1755 -> m13_1755  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1758 -> m13_1754  [key=0, style=bold, color=blue];
m13_3420 -> m13_3421  [key=0, style=solid];
m13_3421 -> m13_47  [key=2, style=dotted];
m13_3421 -> m13_3421  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3421 -> m13_3422  [key=0, style=solid];
m13_3421 -> m13_3423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3422 -> m13_3420  [key=0, style=bold, color=blue];
m13_95 -> m13_96  [key=0, style=solid];
m13_97 -> m13_79  [key=2, style=dotted];
m13_97 -> m13_102  [key=2, style=dotted];
m13_97 -> m13_98  [key=0, style=solid];
m13_97 -> m13_101  [key=2, style=dotted];
m13_98 -> m13_25  [key=2, style=dotted];
m13_98 -> m13_99  [key=0, style=solid];
m13_96 -> m13_100  [key=2, style=dotted];
m13_96 -> m13_97  [key=0, style=solid];
m13_99 -> m13_95  [key=0, style=bold, color=blue];
m13_3896 -> m13_3897  [key=0, style=solid];
m13_3899 -> m13_79  [key=2, style=dotted];
m13_3899 -> m13_3900  [key=0, style=solid];
m13_3899 -> m13_3902  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3900 -> m13_80  [key=2, style=dotted];
m13_3900 -> m13_100  [key=2, style=dotted];
m13_3900 -> m13_3901  [key=0, style=solid];
m13_3900 -> m13_3902  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3903 -> m13_25  [key=2, style=dotted];
m13_3903 -> m13_1581  [key=2, style=dotted];
m13_3903 -> m13_3904  [key=0, style=solid];
m13_3902 -> m13_196  [key=2, style=dotted];
m13_3902 -> m13_3903  [key=0, style=solid];
m13_3901 -> m13_17  [key=2, style=dotted];
m13_3901 -> m13_3902  [key=0, style=solid];
m13_3898 -> m13_3899  [key=0, style=solid];
m13_3898 -> m13_3850  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3897 -> m13_3900  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3897 -> m13_3903  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3897 -> m13_853  [key=2, style=dotted];
m13_3897 -> m13_3898  [key=0, style=solid];
m13_3904 -> m13_3896  [key=0, style=bold, color=blue];
m13_1802 -> m13_1803  [key=0, style=solid];
m13_1806 -> m13_24  [key=2, style=dotted];
m13_1806 -> m13_1807  [key=0, style=solid];
m13_1807 -> m13_25  [key=2, style=dotted];
m13_1807 -> m13_1807  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m13_1807 -> m13_1808  [key=0, style=solid];
m13_1807 -> m13_1809  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m13_1808 -> m13_25  [key=2, style=dotted];
m13_1808 -> m13_1809  [key=0, style=solid];
m13_1809 -> m13_25  [key=2, style=dotted];
m13_1809 -> m13_1809  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m13_1809 -> m13_1810  [key=0, style=solid];
m13_1810 -> m13_25  [key=2, style=dotted];
m13_1810 -> m13_1811  [key=0, style=solid];
m13_1805 -> m13_17  [key=2, style=dotted];
m13_1805 -> m13_1806  [key=0, style=solid];
m13_1804 -> m13_1806  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1804 -> m13_1805  [key=0, style=solid];
m13_1804 -> m13_16  [key=2, style=dotted];
m13_1803 -> m13_1807  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m13_1803 -> m13_1804  [key=0, style=solid];
m13_1803 -> m13_1812  [key=2, style=dotted];
m13_1811 -> m13_1802  [key=0, style=bold, color=blue];
m13_3020 -> m13_3021  [key=0, style=solid];
m13_3021 -> m13_47  [key=2, style=dotted];
m13_3021 -> m13_3021  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3021 -> m13_3022  [key=0, style=solid];
m13_3021 -> m13_3023  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3022 -> m13_3020  [key=0, style=bold, color=blue];
m13_3914 -> m13_3915  [key=0, style=solid];
m13_3917 -> m13_79  [key=2, style=dotted];
m13_3917 -> m13_3918  [key=0, style=solid];
m13_3917 -> m13_3920  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3918 -> m13_80  [key=2, style=dotted];
m13_3918 -> m13_100  [key=2, style=dotted];
m13_3918 -> m13_3919  [key=0, style=solid];
m13_3918 -> m13_3920  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3921 -> m13_25  [key=2, style=dotted];
m13_3921 -> m13_1581  [key=2, style=dotted];
m13_3921 -> m13_3922  [key=0, style=solid];
m13_3920 -> m13_196  [key=2, style=dotted];
m13_3920 -> m13_3921  [key=0, style=solid];
m13_3919 -> m13_17  [key=2, style=dotted];
m13_3919 -> m13_3920  [key=0, style=solid];
m13_3916 -> m13_3917  [key=0, style=solid];
m13_3916 -> m13_3907  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3915 -> m13_3918  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3915 -> m13_3921  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3915 -> m13_273  [key=2, style=dotted];
m13_3915 -> m13_3916  [key=0, style=solid];
m13_3922 -> m13_3914  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_959 -> m13_960  [key=0, style=solid];
m13_961 -> m13_47  [key=2, style=dotted];
m13_961 -> m13_962  [key=0, style=solid];
m13_961 -> m13_963  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_960 -> m13_961  [key=0, style=solid];
m13_960 -> m13_964  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_960 -> m13_960  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_962 -> m13_959  [key=0, style=bold, color=blue];
m13_1469 -> m13_1470  [key=0, style=solid];
m13_1474 -> m13_24  [key=2, style=dotted];
m13_1474 -> m13_1475  [key=0, style=solid];
m13_1472 -> m13_37  [key=2, style=dotted];
m13_1472 -> m13_1474  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1472 -> m13_1473  [key=0, style=solid];
m13_1475 -> m13_37  [key=2, style=dotted];
m13_1475 -> m13_1476  [key=0, style=solid];
m13_1473 -> m13_25  [key=2, style=dotted];
m13_1473 -> m13_1474  [key=0, style=solid];
m13_1476 -> m13_25  [key=2, style=dotted];
m13_1476 -> m13_1477  [key=0, style=solid];
m13_1470 -> m13_1472  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_1470 -> m13_1471  [key=0, style=solid];
m13_1470 -> m13_1478  [key=2, style=dotted];
m13_1471 -> m13_1472  [key=0, style=solid];
m13_1477 -> m13_1469  [key=0, style=bold, color=blue];
m13_3340 -> m13_3341  [key=0, style=solid];
m13_3344 -> m13_24  [key=2, style=dotted];
m13_3344 -> m13_3345  [key=0, style=solid];
m13_3344 -> m13_3346  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_3344 -> m13_3347  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_3342 -> m13_79  [key=2, style=dotted];
m13_3342 -> m13_102  [key=2, style=dotted];
m13_3342 -> m13_3344  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3342 -> m13_3343  [key=0, style=solid];
m13_3345 -> m13_25  [key=2, style=dotted];
m13_3345 -> m13_3346  [key=0, style=solid];
m13_3346 -> m13_25  [key=2, style=dotted];
m13_3346 -> m13_1001  [key=2, style=dotted];
m13_3346 -> m13_3347  [key=0, style=solid];
m13_3347 -> m13_25  [key=2, style=dotted];
m13_3347 -> m13_1001  [key=2, style=dotted];
m13_3347 -> m13_3348  [key=0, style=solid];
m13_3341 -> m13_100  [key=2, style=dotted];
m13_3341 -> m13_1001  [key=2, style=dotted];
m13_3341 -> m13_3342  [key=0, style=solid];
m13_3343 -> m13_17  [key=2, style=dotted];
m13_3343 -> m13_3344  [key=0, style=solid];
m13_3348 -> m13_3340  [key=0, style=bold, color=blue];
m13_681 -> m13_682  [key=0, style=solid];
m13_683 -> m13_37  [key=2, style=dotted];
m13_683 -> m13_684  [key=0, style=solid];
m13_683 -> m13_685  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_685 -> m13_25  [key=2, style=dotted];
m13_685 -> m13_686  [key=0, style=solid];
m13_682 -> m13_683  [key=0, style=solid];
m13_682 -> m13_687  [key=2, style=dotted];
m13_682 -> m13_688  [key=2, style=dotted];
m13_684 -> m13_685  [key=0, style=solid];
m13_684 -> m13_684  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m13_686 -> m13_681  [key=0, style=bold, color=blue];
m13_2837 -> m13_2838  [key=0, style=solid];
m13_2841 -> m13_24  [key=2, style=dotted];
m13_2841 -> m13_2842  [key=0, style=solid];
m13_2841 -> m13_2843  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2841 -> m13_2844  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2841 -> m13_2845  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2841 -> m13_2846  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2842 -> m13_25  [key=2, style=dotted];
m13_2842 -> m13_2843  [key=0, style=solid];
m13_2843 -> m13_25  [key=2, style=dotted];
m13_2843 -> m13_2844  [key=0, style=solid];
m13_2844 -> m13_25  [key=2, style=dotted];
m13_2844 -> m13_2845  [key=0, style=solid];
m13_2845 -> m13_25  [key=2, style=dotted];
m13_2845 -> m13_2846  [key=0, style=solid];
m13_2846 -> m13_25  [key=2, style=dotted];
m13_2846 -> m13_2847  [key=0, style=solid];
m13_2840 -> m13_17  [key=2, style=dotted];
m13_2840 -> m13_2841  [key=0, style=solid];
m13_2839 -> m13_2841  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2839 -> m13_2840  [key=0, style=solid];
m13_2839 -> m13_16  [key=2, style=dotted];
m13_2838 -> m13_2842  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2838 -> m13_2843  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2838 -> m13_2844  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2838 -> m13_2845  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2838 -> m13_2846  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2838 -> m13_2839  [key=0, style=solid];
m13_2838 -> m13_2848  [key=2, style=dotted];
m13_2847 -> m13_2837  [key=0, style=bold, color=blue];
m13_3715 -> m13_3716  [key=0, style=solid];
m13_3717 -> m13_79  [key=2, style=dotted];
m13_3717 -> m13_196  [key=2, style=dotted];
m13_3717 -> m13_3718  [key=0, style=solid];
m13_3717 -> m13_440  [key=2, style=dotted];
m13_3717 -> m13_3719  [key=1, style=dashed, color=darkseagreen4, label=people];
m13_3717 -> m13_3720  [key=1, style=dashed, color=darkseagreen4, label=people];
m13_3718 -> m13_25  [key=2, style=dotted];
m13_3718 -> m13_3719  [key=0, style=solid];
m13_3721 -> m13_25  [key=2, style=dotted];
m13_3721 -> m13_3722  [key=0, style=solid];
m13_3722 -> m13_25  [key=2, style=dotted];
m13_3722 -> m13_3723  [key=0, style=solid];
m13_3716 -> m13_3717  [key=0, style=solid];
m13_3716 -> m13_3695  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3719 -> m13_3721  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3719 -> m13_3722  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3719 -> m13_3720  [key=0, style=solid];
m13_3720 -> m13_3721  [key=0, style=solid];
m13_3720 -> m13_3722  [key=1, style=dashed, color=darkseagreen4, label=jane];
m13_3723 -> m13_3715  [key=0, style=bold, color=blue];
m13_1690 -> m13_1691  [key=0, style=solid];
m13_1692 -> m13_47  [key=2, style=dotted];
m13_1692 -> m13_1693  [key=0, style=solid];
m13_1692 -> m13_1694  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1691 -> m13_1692  [key=0, style=solid];
m13_1691 -> m13_1695  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1691 -> m13_1677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1693 -> m13_1690  [key=0, style=bold, color=blue];
m13_3496 -> m13_3497  [key=0, style=solid];
m13_3498 -> m13_24  [key=2, style=dotted];
m13_3498 -> m13_3499  [key=0, style=solid];
m13_3498 -> m13_3500  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_3499 -> m13_25  [key=2, style=dotted];
m13_3499 -> m13_3500  [key=0, style=solid];
m13_3500 -> m13_25  [key=2, style=dotted];
m13_3500 -> m13_3501  [key=0, style=solid];
m13_3497 -> m13_3498  [key=0, style=solid];
m13_3497 -> m13_3497  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3501 -> m13_3496  [key=0, style=bold, color=blue];
m13_4008 -> m13_3124  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m13_4008 -> m13_4009  [key=0, style=solid];
m13_4009 -> m13_4010  [key=0, style=solid];
m13_4009 -> m13_2461  [key=2, style=dotted];
m13_4009 -> m13_4012  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m13_4009 -> m13_4015  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m13_4011 -> m13_4018  [key=0, style=solid];
m13_4016 -> m13_4018  [key=0, style=solid];
m13_4016 -> m13_4023  [key=2, style=dotted];
m13_4017 -> m13_4018  [key=0, style=solid];
m13_4017 -> m13_4024  [key=2, style=dotted];
m13_4010 -> m13_4011  [key=0, style=solid];
m13_4010 -> m13_4012  [key=0, style=solid];
m13_4012 -> m13_4016  [key=1, style=dashed, color=darkseagreen4, label=address];
m13_4012 -> m13_4017  [key=1, style=dashed, color=darkseagreen4, label=address];
m13_4012 -> m13_4013  [key=0, style=solid];
m13_4012 -> m13_4019  [key=2, style=dotted];
m13_4012 -> m13_4020  [key=2, style=dotted];
m13_4015 -> m13_4016  [key=0, style=solid];
m13_4015 -> m13_4017  [key=0, style=solid];
m13_4015 -> m13_4015  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m13_4015 -> m13_4021  [key=2, style=dotted];
m13_4015 -> m13_4020  [key=2, style=dotted];
m13_4015 -> m13_4022  [key=2, style=dotted];
m13_4013 -> m13_4015  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m13_4013 -> m13_4014  [key=0, style=solid];
m13_4014 -> m13_4015  [key=0, style=solid];
m13_4018 -> m13_4008  [key=0, style=bold, color=blue];
m13_1732 -> m13_1733  [key=0, style=solid];
m13_1733 -> m13_58  [key=3, color=green, style=bold, label="Local variable string json"];
m13_1733 -> m13_1734  [key=0, style=solid];
m13_1734 -> m13_24  [key=2, style=dotted];
m13_1734 -> m13_1735  [key=0, style=solid];
m13_1735 -> m13_1736  [key=0, style=solid];
m13_1735 -> m13_1738  [key=0, style=solid];
m13_1735 -> m13_1356  [key=2, style=dotted];
m13_1736 -> m13_1737  [key=0, style=solid];
m13_1737 -> m13_1738  [key=0, style=solid];
m13_1737 -> m13_366  [key=2, style=dotted];
m13_1737 -> m13_1357  [key=2, style=dotted];
m13_1738 -> m13_1732  [key=0, style=bold, color=blue];
m13_442 -> m13_443  [key=0, style=solid];
m13_443 -> m13_79  [key=2, style=dotted];
m13_443 -> m13_444  [key=0, style=solid];
m13_443 -> m13_445  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_446  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_447  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_448  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_449  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_450  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_451  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_452  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_454  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_455  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_456  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_457  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_458  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_459  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_460  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_461  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_462  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_463  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_464  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_465  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_466  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_467  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_468  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_469  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_470  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_471  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_472  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_473  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_474  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_475  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_476  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_477  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_478  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_479  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_480  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_481  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_482  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_483  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_484  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_485  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_486  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_487  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_488  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_489  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_491  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_492  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_493  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_494  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_495  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_496  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_497  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_499  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_500  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_501  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_502  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_503  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_443 -> m13_504  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_446 -> m13_25  [key=2, style=dotted];
m13_446 -> m13_447  [key=0, style=solid];
m13_448 -> m13_25  [key=2, style=dotted];
m13_448 -> m13_449  [key=0, style=solid];
m13_450 -> m13_25  [key=2, style=dotted];
m13_450 -> m13_451  [key=0, style=solid];
m13_452 -> m13_25  [key=2, style=dotted];
m13_452 -> m13_453  [key=0, style=solid];
m13_452 -> m13_435  [key=2, style=dotted];
m13_455 -> m13_25  [key=2, style=dotted];
m13_455 -> m13_456  [key=0, style=solid];
m13_457 -> m13_25  [key=2, style=dotted];
m13_457 -> m13_458  [key=0, style=solid];
m13_459 -> m13_25  [key=2, style=dotted];
m13_459 -> m13_460  [key=0, style=solid];
m13_459 -> m13_439  [key=2, style=dotted];
m13_461 -> m13_25  [key=2, style=dotted];
m13_461 -> m13_462  [key=0, style=solid];
m13_463 -> m13_25  [key=2, style=dotted];
m13_463 -> m13_464  [key=0, style=solid];
m13_465 -> m13_25  [key=2, style=dotted];
m13_465 -> m13_466  [key=0, style=solid];
m13_467 -> m13_25  [key=2, style=dotted];
m13_467 -> m13_468  [key=0, style=solid];
m13_469 -> m13_25  [key=2, style=dotted];
m13_469 -> m13_470  [key=0, style=solid];
m13_471 -> m13_25  [key=2, style=dotted];
m13_471 -> m13_472  [key=0, style=solid];
m13_473 -> m13_25  [key=2, style=dotted];
m13_473 -> m13_474  [key=0, style=solid];
m13_475 -> m13_25  [key=2, style=dotted];
m13_475 -> m13_476  [key=0, style=solid];
m13_477 -> m13_25  [key=2, style=dotted];
m13_477 -> m13_478  [key=0, style=solid];
m13_479 -> m13_25  [key=2, style=dotted];
m13_479 -> m13_480  [key=0, style=solid];
m13_481 -> m13_25  [key=2, style=dotted];
m13_481 -> m13_482  [key=0, style=solid];
m13_483 -> m13_25  [key=2, style=dotted];
m13_483 -> m13_484  [key=0, style=solid];
m13_485 -> m13_25  [key=2, style=dotted];
m13_485 -> m13_486  [key=0, style=solid];
m13_487 -> m13_25  [key=2, style=dotted];
m13_487 -> m13_488  [key=0, style=solid];
m13_489 -> m13_25  [key=2, style=dotted];
m13_489 -> m13_490  [key=0, style=solid];
m13_492 -> m13_25  [key=2, style=dotted];
m13_492 -> m13_493  [key=0, style=solid];
m13_493 -> m13_25  [key=2, style=dotted];
m13_493 -> m13_494  [key=0, style=solid];
m13_493 -> m13_506  [key=2, style=dotted];
m13_495 -> m13_25  [key=2, style=dotted];
m13_495 -> m13_496  [key=0, style=solid];
m13_495 -> m13_506  [key=2, style=dotted];
m13_497 -> m13_25  [key=2, style=dotted];
m13_497 -> m13_498  [key=0, style=solid];
m13_500 -> m13_25  [key=2, style=dotted];
m13_500 -> m13_501  [key=0, style=solid];
m13_502 -> m13_25  [key=2, style=dotted];
m13_502 -> m13_503  [key=0, style=solid];
m13_504 -> m13_25  [key=2, style=dotted];
m13_504 -> m13_505  [key=0, style=solid];
m13_458 -> m13_438  [key=2, style=dotted];
m13_458 -> m13_459  [key=0, style=solid];
m13_444 -> m13_446  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m13_444 -> m13_445  [key=0, style=solid];
m13_444 -> m13_434  [key=2, style=dotted];
m13_445 -> m13_446  [key=0, style=solid];
m13_447 -> m13_448  [key=0, style=solid];
m13_449 -> m13_450  [key=0, style=solid];
m13_451 -> m13_452  [key=0, style=solid];
m13_451 -> m13_435  [key=2, style=dotted];
m13_454 -> m13_455  [key=0, style=solid];
m13_456 -> m13_457  [key=0, style=solid];
m13_456 -> m13_135  [key=2, style=dotted];
m13_456 -> m13_222  [key=2, style=dotted];
m13_460 -> m13_461  [key=0, style=solid];
m13_462 -> m13_463  [key=0, style=solid];
m13_464 -> m13_465  [key=0, style=solid];
m13_466 -> m13_467  [key=0, style=solid];
m13_468 -> m13_469  [key=0, style=solid];
m13_470 -> m13_471  [key=0, style=solid];
m13_472 -> m13_473  [key=0, style=solid];
m13_474 -> m13_475  [key=0, style=solid];
m13_476 -> m13_477  [key=0, style=solid];
m13_478 -> m13_479  [key=0, style=solid];
m13_480 -> m13_481  [key=0, style=solid];
m13_482 -> m13_483  [key=0, style=solid];
m13_484 -> m13_485  [key=0, style=solid];
m13_486 -> m13_487  [key=0, style=solid];
m13_488 -> m13_489  [key=0, style=solid];
m13_491 -> m13_492  [key=0, style=solid];
m13_494 -> m13_495  [key=0, style=solid];
m13_496 -> m13_497  [key=0, style=solid];
m13_499 -> m13_500  [key=0, style=solid];
m13_501 -> m13_502  [key=0, style=solid];
m13_503 -> m13_504  [key=0, style=solid];
m13_453 -> m13_455  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m13_453 -> m13_454  [key=0, style=solid];
m13_453 -> m13_436  [key=2, style=dotted];
m13_490 -> m13_492  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_490 -> m13_493  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_490 -> m13_495  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_490 -> m13_491  [key=0, style=solid];
m13_490 -> m13_494  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_490 -> m13_440  [key=2, style=dotted];
m13_490 -> m13_508  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_498 -> m13_500  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m13_498 -> m13_499  [key=0, style=solid];
m13_498 -> m13_441  [key=2, style=dotted];
m13_505 -> m13_442  [key=0, style=bold, color=blue];
m13_728 -> m13_741  [key=0, style=solid];
m13_728 -> m13_742  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_741 -> m13_742  [key=0, style=solid];
m13_742 -> m13_743  [key=0, style=solid];
m13_743 -> m13_728  [key=0, style=bold, color=blue];
m13_2562 -> m13_2563  [key=0, style=solid];
m13_2564 -> m13_79  [key=2, style=dotted];
m13_2564 -> m13_2565  [key=0, style=solid];
m13_2564 -> m13_2566  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_2567 -> m13_25  [key=2, style=dotted];
m13_2567 -> m13_2568  [key=0, style=solid];
m13_2568 -> m13_25  [key=2, style=dotted];
m13_2568 -> m13_2569  [key=0, style=solid];
m13_2565 -> m13_102  [key=2, style=dotted];
m13_2565 -> m13_2566  [key=0, style=solid];
m13_2566 -> m13_196  [key=2, style=dotted];
m13_2566 -> m13_2567  [key=0, style=solid];
m13_2566 -> m13_2568  [key=1, style=dashed, color=darkseagreen4, label=meh];
m13_2563 -> m13_2564  [key=0, style=solid];
m13_2563 -> m13_2565  [key=1, style=dashed, color=darkseagreen4, label=derived];
m13_2563 -> m13_2554  [key=2, style=dotted];
m13_2569 -> m13_2562  [key=0, style=bold, color=blue];
m13_1718 -> m13_1719  [key=0, style=solid];
m13_1720 -> m13_47  [key=2, style=dotted];
m13_1720 -> m13_1721  [key=0, style=solid];
m13_1720 -> m13_1722  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1719 -> m13_1720  [key=0, style=solid];
m13_1719 -> m13_1723  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1719 -> m13_1719  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1721 -> m13_1718  [key=0, style=bold, color=blue];
m13_300 -> m13_301  [key=0, style=solid];
m13_303 -> m13_24  [key=2, style=dotted];
m13_303 -> m13_304  [key=0, style=solid];
m13_303 -> m13_305  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_303 -> m13_306  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_302 -> m13_37  [key=2, style=dotted];
m13_302 -> m13_303  [key=0, style=solid];
m13_304 -> m13_25  [key=2, style=dotted];
m13_304 -> m13_305  [key=0, style=solid];
m13_305 -> m13_25  [key=2, style=dotted];
m13_305 -> m13_306  [key=0, style=solid];
m13_306 -> m13_25  [key=2, style=dotted];
m13_306 -> m13_307  [key=0, style=solid];
m13_301 -> m13_302  [key=0, style=solid];
m13_301 -> m13_304  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_301 -> m13_305  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_301 -> m13_306  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_301 -> m13_308  [key=2, style=dotted];
m13_307 -> m13_300  [key=0, style=bold, color=blue];
m13_3678 -> m13_3679  [key=0, style=solid];
m13_3678 -> m13_3681  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_3680 -> m13_1995  [key=2, style=dotted];
m13_3680 -> m13_3682  [key=0, style=solid];
m13_3679 -> m13_3680  [key=0, style=solid];
m13_3679 -> m13_3681  [key=0, style=solid];
m13_3681 -> m13_3682  [key=0, style=solid];
m13_3682 -> m13_3678  [key=0, style=bold, color=blue];
m13_3792 -> m13_3793  [key=0, style=solid];
m13_3793 -> m13_3782  [key=2, style=dotted];
m13_3793 -> m13_3794  [key=0, style=solid];
m13_3794 -> m13_3792  [key=0, style=bold, color=blue];
m13_3470 -> m13_3471  [key=0, style=solid];
m13_3471 -> m13_3472  [key=0, style=solid];
m13_3472 -> m13_3470  [key=0, style=bold, color=blue];
m13_2743 -> m13_2744  [key=0, style=solid];
m13_2745 -> m13_100  [key=2, style=dotted];
m13_2745 -> m13_2746  [key=0, style=solid];
m13_2744 -> m13_2745  [key=0, style=solid];
m13_2746 -> m13_2743  [key=0, style=bold, color=blue];
m13_2529 -> m13_2530  [key=0, style=solid];
m13_2535 -> m13_25  [key=2, style=dotted];
m13_2535 -> m13_2536  [key=0, style=solid];
m13_2534 -> m13_2535  [key=0, style=solid];
m13_2534 -> m13_2461  [key=2, style=dotted];
m13_2531 -> m13_2534  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2531 -> m13_268  [key=2, style=dotted];
m13_2531 -> m13_269  [key=2, style=dotted];
m13_2531 -> m13_2532  [key=0, style=solid];
m13_2533 -> m13_2534  [key=0, style=solid];
m13_2533 -> m13_270  [key=2, style=dotted];
m13_2530 -> m13_2531  [key=0, style=solid];
m13_2530 -> m13_2530  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2532 -> m13_2533  [key=0, style=solid];
m13_2536 -> m13_2529  [key=0, style=bold, color=blue];
m13_2794 -> m13_2795  [key=0, style=solid];
m13_2795 -> m13_2796  [key=0, style=solid];
m13_2796 -> m13_2794  [key=0, style=bold, color=blue];
m13_1153 -> m13_1154  [key=0, style=solid];
m13_1157 -> m13_24  [key=2, style=dotted];
m13_1157 -> m13_1158  [key=0, style=solid];
m13_1158 -> m13_25  [key=2, style=dotted];
m13_1158 -> m13_1159  [key=0, style=solid];
m13_1156 -> m13_17  [key=2, style=dotted];
m13_1156 -> m13_1157  [key=0, style=solid];
m13_1155 -> m13_1157  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1155 -> m13_1156  [key=0, style=solid];
m13_1155 -> m13_1161  [key=2, style=dotted];
m13_1155 -> m13_16  [key=2, style=dotted];
m13_1154 -> m13_1158  [key=1, style=dashed, color=darkseagreen4, label=ts];
m13_1154 -> m13_1155  [key=0, style=solid];
m13_1154 -> m13_1160  [key=2, style=dotted];
m13_1159 -> m13_1153  [key=0, style=bold, color=blue];
m13_3502 -> m13_3503  [key=0, style=solid];
m13_3504 -> m13_37  [key=2, style=dotted];
m13_3504 -> m13_3513  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3504 -> m13_3505  [key=0, style=solid];
m13_3504 -> m13_3507  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3505 -> m13_25  [key=2, style=dotted];
m13_3505 -> m13_3506  [key=0, style=solid];
m13_3509 -> m13_25  [key=2, style=dotted];
m13_3509 -> m13_3510  [key=0, style=solid];
m13_3506 -> m13_3124  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<int> obj"];
m13_3506 -> m13_3507  [key=0, style=solid];
m13_3503 -> m13_3504  [key=0, style=solid];
m13_3503 -> m13_3470  [key=2, style=dotted];
m13_3507 -> m13_3507  [key=3, color=darkorchid, style=bold, label="Local variable System.Action doStuff"];
m13_3507 -> m13_3508  [key=0, style=solid];
m13_3508 -> m13_3509  [key=0, style=solid];
m13_3508 -> m13_3511  [key=2, style=dotted];
m13_3510 -> m13_3502  [key=0, style=bold, color=blue];
m13_2060 -> m13_2061  [key=0, style=solid];
m13_2060 -> m13_2062  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2063  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2064  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2065  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2066  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2067  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2068  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2069  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2070  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2071  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2072  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2073  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2074  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2075  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2076  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2077  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2060 -> m13_2078  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_2061 -> m13_2062  [key=0, style=solid];
m13_2061 -> m13_614  [key=2, style=dotted];
m13_2062 -> m13_2063  [key=0, style=solid];
m13_2062 -> m13_615  [key=2, style=dotted];
m13_2063 -> m13_2064  [key=0, style=solid];
m13_2063 -> m13_616  [key=2, style=dotted];
m13_2064 -> m13_2065  [key=0, style=solid];
m13_2064 -> m13_616  [key=2, style=dotted];
m13_2065 -> m13_2066  [key=0, style=solid];
m13_2065 -> m13_616  [key=2, style=dotted];
m13_2066 -> m13_2067  [key=0, style=solid];
m13_2066 -> m13_616  [key=2, style=dotted];
m13_2067 -> m13_2068  [key=0, style=solid];
m13_2067 -> m13_2080  [key=2, style=dotted];
m13_2068 -> m13_2069  [key=0, style=solid];
m13_2068 -> m13_2081  [key=2, style=dotted];
m13_2069 -> m13_2070  [key=0, style=solid];
m13_2069 -> m13_2082  [key=2, style=dotted];
m13_2070 -> m13_2071  [key=0, style=solid];
m13_2070 -> m13_2083  [key=2, style=dotted];
m13_2071 -> m13_2072  [key=0, style=solid];
m13_2071 -> m13_2084  [key=2, style=dotted];
m13_2072 -> m13_2073  [key=0, style=solid];
m13_2072 -> m13_2085  [key=2, style=dotted];
m13_2073 -> m13_2074  [key=0, style=solid];
m13_2073 -> m13_2086  [key=2, style=dotted];
m13_2074 -> m13_2075  [key=0, style=solid];
m13_2074 -> m13_2087  [key=2, style=dotted];
m13_2075 -> m13_2076  [key=0, style=solid];
m13_2075 -> m13_2088  [key=2, style=dotted];
m13_2076 -> m13_2077  [key=0, style=solid];
m13_2076 -> m13_2089  [key=2, style=dotted];
m13_2077 -> m13_2078  [key=0, style=solid];
m13_2077 -> m13_2090  [key=2, style=dotted];
m13_2078 -> m13_2079  [key=0, style=solid];
m13_2078 -> m13_2091  [key=2, style=dotted];
m13_2079 -> m13_2060  [key=0, style=bold, color=blue];
m13_573 -> m13_574  [key=0, style=solid];
m13_577 -> m13_24  [key=2, style=dotted];
m13_577 -> m13_578  [key=0, style=solid];
m13_575 -> m13_37  [key=2, style=dotted];
m13_575 -> m13_577  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_575 -> m13_576  [key=0, style=solid];
m13_578 -> m13_25  [key=2, style=dotted];
m13_578 -> m13_578  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m13_578 -> m13_579  [key=0, style=solid];
m13_576 -> m13_25  [key=2, style=dotted];
m13_576 -> m13_577  [key=0, style=solid];
m13_579 -> m13_25  [key=2, style=dotted];
m13_579 -> m13_579  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m13_579 -> m13_580  [key=0, style=solid];
m13_574 -> m13_575  [key=0, style=solid];
m13_574 -> m13_578  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m13_574 -> m13_581  [key=2, style=dotted];
m13_580 -> m13_573  [key=0, style=bold, color=blue];
m13_3053 -> m13_3054  [key=0, style=solid];
m13_3054 -> m13_79  [key=2, style=dotted];
m13_3054 -> m13_731  [key=2, style=dotted];
m13_3054 -> m13_3055  [key=0, style=solid];
m13_3056 -> m13_25  [key=2, style=dotted];
m13_3056 -> m13_3057  [key=0, style=solid];
m13_3057 -> m13_25  [key=2, style=dotted];
m13_3057 -> m13_3058  [key=0, style=solid];
m13_3055 -> m13_3056  [key=0, style=solid];
m13_3055 -> m13_3057  [key=1, style=dashed, color=darkseagreen4, label=dict];
m13_3055 -> m13_268  [key=2, style=dotted];
m13_3055 -> m13_269  [key=2, style=dotted];
m13_3055 -> m13_2461  [key=2, style=dotted];
m13_3058 -> m13_3053  [key=0, style=bold, color=blue];
m13_57 -> m13_58  [key=0, style=solid, color=green];
m13_58 -> m13_59  [key=0, style=solid, color=green];
m13_58 -> m13_24  [key=2, style=dotted, color=green];
m13_59 -> m13_60  [key=0, style=solid, color=green];
m13_59 -> m13_61  [key=2, style=dotted, color=green];
m13_60 -> m13_57  [key=0, style=bold, color=blue];
m13_3349 -> m13_3350  [key=0, style=solid];
m13_3351 -> m13_25  [key=2, style=dotted];
m13_3351 -> m13_3352  [key=0, style=solid];
m13_3350 -> m13_3351  [key=0, style=solid];
m13_3350 -> m13_270  [key=2, style=dotted];
m13_3350 -> m13_268  [key=2, style=dotted];
m13_3350 -> m13_269  [key=2, style=dotted];
m13_3350 -> m13_2910  [key=2, style=dotted];
m13_3352 -> m13_3349  [key=0, style=bold, color=blue];
m13_3460 -> m13_3461  [key=0, style=solid];
m13_3461 -> m13_24  [key=2, style=dotted];
m13_3461 -> m13_3462  [key=0, style=solid];
m13_3462 -> m13_25  [key=2, style=dotted];
m13_3462 -> m13_3462  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_3462 -> m13_3463  [key=0, style=solid];
m13_3463 -> m13_25  [key=2, style=dotted];
m13_3463 -> m13_3463  [key=1, style=dashed, color=darkseagreen4, label=result];
m13_3463 -> m13_3464  [key=0, style=solid];
m13_3464 -> m13_3460  [key=0, style=bold, color=blue];
m13_1987 -> m13_1988  [key=0, style=solid];
m13_1988 -> m13_1987  [key=0, style=bold, color=blue];
m13_854 -> m13_855  [key=0, style=solid];
m13_857 -> m13_25  [key=2, style=dotted];
m13_857 -> m13_858  [key=0, style=solid];
m13_858 -> m13_25  [key=2, style=dotted];
m13_858 -> m13_859  [key=0, style=solid];
m13_858 -> m13_861  [key=2, style=dotted];
m13_859 -> m13_25  [key=2, style=dotted];
m13_859 -> m13_860  [key=0, style=solid];
m13_856 -> m13_857  [key=0, style=solid];
m13_856 -> m13_858  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_856 -> m13_859  [key=1, style=dashed, color=darkseagreen4, label=p];
m13_856 -> m13_835  [key=2, style=dotted];
m13_855 -> m13_856  [key=0, style=solid];
m13_855 -> m13_855  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m13_860 -> m13_854  [key=0, style=bold, color=blue];
m13_1408 -> m13_1409  [key=0, style=solid];
m13_1409 -> m13_1001  [key=2, style=dotted];
m13_1409 -> m13_1410  [key=0, style=solid];
m13_1409 -> m13_1412  [key=2, style=dotted];
m13_1410 -> m13_1411  [key=0, style=solid];
m13_1411 -> m13_1408  [key=0, style=bold, color=blue];
m13_1462 -> m13_1463  [key=0, style=solid];
m13_1464 -> m13_24  [key=2, style=dotted];
m13_1464 -> m13_1465  [key=0, style=solid];
m13_1463 -> m13_1464  [key=0, style=solid];
m13_1463 -> m13_1451  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1465 -> m13_1466  [key=0, style=solid];
m13_1465 -> m13_1468  [key=0, style=solid];
m13_1465 -> m13_1356  [key=2, style=dotted];
m13_1466 -> m13_1467  [key=0, style=solid];
m13_1467 -> m13_366  [key=2, style=dotted];
m13_1467 -> m13_1468  [key=0, style=solid];
m13_1467 -> m13_1357  [key=2, style=dotted];
m13_1468 -> m13_1462  [key=0, style=bold, color=blue];
m13_1365 -> m13_1366  [key=0, style=solid];
m13_1367 -> m13_24  [key=2, style=dotted];
m13_1367 -> m13_1368  [key=0, style=solid];
m13_1366 -> m13_1367  [key=0, style=solid];
m13_1366 -> m13_1366  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1368 -> m13_1369  [key=0, style=solid];
m13_1368 -> m13_1371  [key=0, style=solid];
m13_1368 -> m13_1356  [key=2, style=dotted];
m13_1369 -> m13_1370  [key=0, style=solid];
m13_1370 -> m13_366  [key=2, style=dotted];
m13_1370 -> m13_1371  [key=0, style=solid];
m13_1370 -> m13_1357  [key=2, style=dotted];
m13_1371 -> m13_1365  [key=0, style=bold, color=blue];
m13_1358 -> m13_1359  [key=0, style=solid];
m13_1359 -> m13_47  [key=2, style=dotted];
m13_1359 -> m13_1360  [key=0, style=solid];
m13_1359 -> m13_1361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1360 -> m13_1358  [key=0, style=bold, color=blue];
m13_2573 -> m13_2574  [key=0, style=solid];
m13_2574 -> m13_600  [key=2, style=dotted];
m13_2574 -> m13_2575  [key=0, style=solid];
m13_2575 -> m13_2573  [key=0, style=bold, color=blue];
m13_3822 -> m13_3823  [key=0, style=solid];
m13_3823 -> m13_3782  [key=2, style=dotted];
m13_3823 -> m13_3824  [key=0, style=solid];
m13_3824 -> m13_3822  [key=0, style=bold, color=blue];
m13_3167 -> m13_3168  [key=0, style=solid];
m13_3172 -> m13_24  [key=2, style=dotted];
m13_3172 -> m13_3173  [key=0, style=solid];
m13_3171 -> m13_37  [key=2, style=dotted];
m13_3171 -> m13_3172  [key=0, style=solid];
m13_3173 -> m13_25  [key=2, style=dotted];
m13_3173 -> m13_3174  [key=0, style=solid];
m13_3168 -> m13_3171  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_3168 -> m13_3173  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_3168 -> m13_3169  [key=0, style=solid];
m13_3168 -> m13_3175  [key=2, style=dotted];
m13_3168 -> m13_3170  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_3170 -> m13_3171  [key=0, style=solid];
m13_3169 -> m13_3170  [key=0, style=solid];
m13_3174 -> m13_3167  [key=0, style=bold, color=blue];
m13_1582 -> m13_1583  [key=0, style=solid];
m13_1585 -> m13_25  [key=2, style=dotted];
m13_1585 -> m13_1586  [key=0, style=solid];
m13_1586 -> m13_25  [key=2, style=dotted];
m13_1586 -> m13_1001  [key=2, style=dotted];
m13_1586 -> m13_1587  [key=0, style=solid];
m13_1587 -> m13_25  [key=2, style=dotted];
m13_1587 -> m13_1588  [key=0, style=solid];
m13_1588 -> m13_25  [key=2, style=dotted];
m13_1588 -> m13_1589  [key=0, style=solid];
m13_1589 -> m13_25  [key=2, style=dotted];
m13_1589 -> m13_1590  [key=0, style=solid];
m13_1590 -> m13_25  [key=2, style=dotted];
m13_1590 -> m13_1591  [key=0, style=solid];
m13_1584 -> m13_1585  [key=0, style=solid];
m13_1584 -> m13_1586  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1584 -> m13_1587  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1584 -> m13_1588  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1584 -> m13_1589  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1584 -> m13_1590  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m13_1584 -> m13_835  [key=2, style=dotted];
m13_1583 -> m13_1584  [key=0, style=solid];
m13_1583 -> m13_1583  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1591 -> m13_1582  [key=0, style=bold, color=blue];
m13_826 -> m13_827  [key=0, style=solid];
m13_828 -> m13_37  [key=2, style=dotted];
m13_828 -> m13_829  [key=0, style=solid];
m13_828 -> m13_832  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m13_830 -> m13_25  [key=2, style=dotted];
m13_830 -> m13_831  [key=0, style=solid];
m13_831 -> m13_25  [key=2, style=dotted];
m13_831 -> m13_832  [key=0, style=solid];
m13_827 -> m13_828  [key=0, style=solid];
m13_827 -> m13_830  [key=1, style=dashed, color=darkseagreen4, label=store];
m13_827 -> m13_831  [key=1, style=dashed, color=darkseagreen4, label=store];
m13_827 -> m13_834  [key=2, style=dotted];
m13_829 -> m13_830  [key=0, style=solid];
m13_829 -> m13_831  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m13_829 -> m13_835  [key=2, style=dotted];
m13_832 -> m13_833  [key=0, style=solid];
m13_832 -> m13_836  [key=2, style=dotted];
m13_833 -> m13_826  [key=0, style=bold, color=blue];
m13_3377 -> m13_3378  [key=0, style=solid];
m13_3378 -> m13_42  [key=2, style=dotted];
m13_3378 -> m13_3379  [key=0, style=solid];
m13_3378 -> m13_3382  [key=2, style=dotted];
m13_3378 -> m13_3383  [key=2, style=dotted];
m13_3380 -> m13_17  [key=2, style=dotted];
m13_3380 -> m13_3381  [key=0, style=solid];
m13_3379 -> m13_3380  [key=0, style=solid];
m13_3379 -> m13_16  [key=2, style=dotted];
m13_3381 -> m13_3377  [key=0, style=bold, color=blue];
m13_2623 -> m13_2624  [key=0, style=solid];
m13_2624 -> m13_24  [key=2, style=dotted];
m13_2624 -> m13_2625  [key=0, style=solid];
m13_2624 -> m13_2626  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2624 -> m13_2627  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2625 -> m13_25  [key=2, style=dotted];
m13_2625 -> m13_2626  [key=0, style=solid];
m13_2626 -> m13_25  [key=2, style=dotted];
m13_2626 -> m13_2627  [key=0, style=solid];
m13_2627 -> m13_25  [key=2, style=dotted];
m13_2627 -> m13_2628  [key=0, style=solid];
m13_2628 -> m13_2623  [key=0, style=bold, color=blue];
m13_1087 -> m13_1088  [key=0, style=solid];
m13_1094 -> m13_24  [key=2, style=dotted];
m13_1094 -> m13_1095  [key=0, style=solid];
m13_1094 -> m13_1096  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_1094 -> m13_1097  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_1094 -> m13_1098  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_1094 -> m13_1099  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_1094 -> m13_1100  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_1094 -> m13_1101  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m13_1093 -> m13_37  [key=2, style=dotted];
m13_1093 -> m13_1094  [key=0, style=solid];
m13_1095 -> m13_25  [key=2, style=dotted];
m13_1095 -> m13_1096  [key=0, style=solid];
m13_1096 -> m13_25  [key=2, style=dotted];
m13_1096 -> m13_1097  [key=0, style=solid];
m13_1097 -> m13_25  [key=2, style=dotted];
m13_1097 -> m13_1098  [key=0, style=solid];
m13_1098 -> m13_25  [key=2, style=dotted];
m13_1098 -> m13_1099  [key=0, style=solid];
m13_1099 -> m13_25  [key=2, style=dotted];
m13_1099 -> m13_1100  [key=0, style=solid];
m13_1100 -> m13_25  [key=2, style=dotted];
m13_1100 -> m13_1101  [key=0, style=solid];
m13_1101 -> m13_25  [key=2, style=dotted];
m13_1101 -> m13_1102  [key=0, style=solid];
m13_1088 -> m13_1093  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1088 -> m13_1089  [key=0, style=solid];
m13_1088 -> m13_1103  [key=2, style=dotted];
m13_1088 -> m13_1090  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1088 -> m13_1091  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1088 -> m13_1092  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1092 -> m13_1093  [key=0, style=solid];
m13_1092 -> m13_222  [key=2, style=dotted];
m13_1089 -> m13_1090  [key=0, style=solid];
m13_1090 -> m13_222  [key=2, style=dotted];
m13_1090 -> m13_1091  [key=0, style=solid];
m13_1091 -> m13_1092  [key=0, style=solid];
m13_1091 -> m13_222  [key=2, style=dotted];
m13_1102 -> m13_1087  [key=0, style=bold, color=blue];
m13_2144 -> m13_2145  [key=0, style=solid];
m13_2156 -> m13_24  [key=2, style=dotted];
m13_2156 -> m13_2157  [key=0, style=solid];
m13_2156 -> m13_2158  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2156 -> m13_2159  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2156 -> m13_2160  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2156 -> m13_2161  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2156 -> m13_2162  [key=1, style=dashed, color=darkseagreen4, label=o2];
m13_2154 -> m13_79  [key=2, style=dotted];
m13_2154 -> m13_102  [key=2, style=dotted];
m13_2154 -> m13_2156  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2154 -> m13_2155  [key=0, style=solid];
m13_2159 -> m13_25  [key=2, style=dotted];
m13_2159 -> m13_2160  [key=0, style=solid];
m13_2157 -> m13_25  [key=2, style=dotted];
m13_2157 -> m13_2158  [key=0, style=solid];
m13_2158 -> m13_25  [key=2, style=dotted];
m13_2158 -> m13_2159  [key=0, style=solid];
m13_2160 -> m13_25  [key=2, style=dotted];
m13_2160 -> m13_2161  [key=0, style=solid];
m13_2161 -> m13_25  [key=2, style=dotted];
m13_2161 -> m13_2162  [key=0, style=solid];
m13_2162 -> m13_25  [key=2, style=dotted];
m13_2162 -> m13_2163  [key=0, style=solid];
m13_2146 -> m13_1001  [key=2, style=dotted];
m13_2146 -> m13_2147  [key=0, style=solid];
m13_2155 -> m13_17  [key=2, style=dotted];
m13_2155 -> m13_2156  [key=0, style=solid];
m13_2153 -> m13_2154  [key=0, style=solid];
m13_2153 -> m13_2053  [key=2, style=dotted];
m13_2150 -> m13_2159  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_2150 -> m13_273  [key=2, style=dotted];
m13_2150 -> m13_1009  [key=2, style=dotted];
m13_2150 -> m13_2153  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m13_2150 -> m13_2151  [key=0, style=solid];
m13_2145 -> m13_2146  [key=0, style=solid];
m13_2145 -> m13_2153  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2145 -> m13_1412  [key=2, style=dotted];
m13_2145 -> m13_2147  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2145 -> m13_2148  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2145 -> m13_2149  [key=1, style=dashed, color=darkseagreen4, label=person];
m13_2147 -> m13_2148  [key=0, style=solid];
m13_2152 -> m13_2155  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m13_2152 -> m13_2153  [key=0, style=solid];
m13_2149 -> m13_2150  [key=0, style=solid];
m13_2151 -> m13_2152  [key=0, style=solid];
m13_2148 -> m13_2149  [key=0, style=solid];
m13_2163 -> m13_2144  [key=0, style=bold, color=blue];
m13_3536 -> m13_3537  [key=0, style=solid];
m13_3538 -> m13_79  [key=2, style=dotted];
m13_3538 -> m13_102  [key=2, style=dotted];
m13_3538 -> m13_3539  [key=0, style=solid];
m13_3539 -> m13_17  [key=2, style=dotted];
m13_3539 -> m13_3540  [key=0, style=solid];
m13_3537 -> m13_3538  [key=0, style=solid];
m13_3537 -> m13_3541  [key=2, style=dotted];
m13_3540 -> m13_3536  [key=0, style=bold, color=blue];
m13_3034 -> m13_3035  [key=0, style=solid];
m13_3036 -> m13_24  [key=2, style=dotted];
m13_3036 -> m13_3037  [key=0, style=solid];
m13_3039 -> m13_24  [key=2, style=dotted];
m13_3039 -> m13_3040  [key=0, style=solid];
m13_3037 -> m13_25  [key=2, style=dotted];
m13_3037 -> m13_3038  [key=0, style=solid];
m13_3040 -> m13_25  [key=2, style=dotted];
m13_3040 -> m13_1145  [key=2, style=dotted];
m13_3040 -> m13_3041  [key=0, style=solid];
m13_3035 -> m13_3036  [key=0, style=solid];
m13_3035 -> m13_3035  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3038 -> m13_3039  [key=0, style=solid];
m13_3041 -> m13_3034  [key=0, style=bold, color=blue];
m13_1234 -> m13_1235  [key=0, style=solid];
m13_1240 -> m13_25  [key=2, style=dotted];
m13_1240 -> m13_1241  [key=0, style=solid];
m13_1241 -> m13_25  [key=2, style=dotted];
m13_1241 -> m13_1242  [key=0, style=solid];
m13_1238 -> m13_25  [key=2, style=dotted];
m13_1238 -> m13_1239  [key=0, style=solid];
m13_1235 -> m13_1240  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_1235 -> m13_1241  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_1235 -> m13_1236  [key=0, style=solid];
m13_1235 -> m13_1205  [key=2, style=dotted];
m13_1239 -> m13_1240  [key=0, style=solid];
m13_1239 -> m13_1241  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_1239 -> m13_1243  [key=2, style=dotted];
m13_1239 -> m13_136  [key=2, style=dotted];
m13_1237 -> m13_1238  [key=0, style=solid];
m13_1237 -> m13_1239  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1237 -> m13_1243  [key=2, style=dotted];
m13_1237 -> m13_1195  [key=2, style=dotted];
m13_1236 -> m13_1237  [key=0, style=solid];
m13_1236 -> m13_1206  [key=2, style=dotted];
m13_1242 -> m13_1234  [key=0, style=bold, color=blue];
m13_1622 -> m13_1623  [key=0, style=solid];
m13_1624 -> m13_24  [key=2, style=dotted];
m13_1624 -> m13_1625  [key=0, style=solid];
m13_1624 -> m13_1626  [key=1, style=dashed, color=darkseagreen4, label=content];
m13_1624 -> m13_1627  [key=1, style=dashed, color=darkseagreen4, label=content];
m13_1624 -> m13_1628  [key=1, style=dashed, color=darkseagreen4, label=content];
m13_1625 -> m13_25  [key=2, style=dotted];
m13_1625 -> m13_1626  [key=0, style=solid];
m13_1626 -> m13_25  [key=2, style=dotted];
m13_1626 -> m13_1627  [key=0, style=solid];
m13_1627 -> m13_25  [key=2, style=dotted];
m13_1627 -> m13_1628  [key=0, style=solid];
m13_1628 -> m13_25  [key=2, style=dotted];
m13_1628 -> m13_1629  [key=0, style=solid];
m13_1623 -> m13_1624  [key=0, style=solid];
m13_1623 -> m13_1619  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1629 -> m13_1622  [key=0, style=bold, color=blue];
m13_1894 -> m13_1895  [key=0, style=solid];
m13_54 -> m13_55  [key=0, style=solid, color=green];
m13_55 -> m13_56  [key=0, style=solid, color=green];
m13_55 -> m13_24  [key=2, style=dotted, color=green];
m13_56 -> m13_54  [key=0, style=bold, color=blue];
m13_71 -> m13_72  [key=0, style=solid, color=green];
m13_72 -> m13_73  [key=0, style=solid, color=green];
m13_72 -> m13_74  [key=2, style=dotted, color=green];
m13_72 -> m13_37  [key=2, style=dotted, color=green];
m13_73 -> m13_71  [key=0, style=bold, color=blue];
m13_84 -> m13_85  [key=0, style=solid, color=green];
m13_85 -> m13_86  [key=0, style=solid, color=green];
m13_85 -> m13_87  [key=2, style=dotted, color=green];
m13_85 -> m13_37  [key=2, style=dotted, color=green];
m13_86 -> m13_84  [key=0, style=bold, color=blue];
m13_49 -> m13_24  [key=2, style=dotted];
m13_49 -> m13_50  [key=0, style=solid];
m13_66 -> m13_24  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_112 -> m13_24  [key=2, style=dotted];
m13_112 -> m13_113  [key=0, style=solid];
m13_115 -> m13_24  [key=2, style=dotted];
m13_115 -> m13_116  [key=0, style=solid];
m13_118 -> m13_24  [key=2, style=dotted];
m13_118 -> m13_119  [key=0, style=solid];
m13_121 -> m13_24  [key=2, style=dotted];
m13_121 -> m13_122  [key=0, style=solid];
m13_124 -> m13_24  [key=2, style=dotted];
m13_124 -> m13_125  [key=0, style=solid];
m13_127 -> m13_24  [key=2, style=dotted];
m13_127 -> m13_128  [key=0, style=solid];
m13_153 -> m13_24  [key=2, style=dotted];
m13_153 -> m13_154  [key=0, style=solid];
m13_156 -> m13_24  [key=2, style=dotted];
m13_156 -> m13_157  [key=0, style=solid];
m13_175 -> m13_24  [key=2, style=dotted];
m13_175 -> m13_176  [key=0, style=solid];
m13_341 -> m13_24  [key=2, style=dotted];
m13_341 -> m13_342  [key=0, style=solid];
m13_964 -> m13_24  [key=2, style=dotted];
m13_964 -> m13_965  [key=0, style=solid];
m13_1654 -> m13_24  [key=2, style=dotted];
m13_1654 -> m13_1655  [key=0, style=solid];
m13_1681 -> m13_24  [key=2, style=dotted];
m13_1681 -> m13_1682  [key=0, style=solid];
m13_1688 -> m13_24  [key=2, style=dotted];
m13_1688 -> m13_1689  [key=0, style=solid];
m13_1695 -> m13_24  [key=2, style=dotted];
m13_1695 -> m13_1696  [key=0, style=solid];
m13_1702 -> m13_24  [key=2, style=dotted];
m13_1702 -> m13_1703  [key=0, style=solid];
m13_1709 -> m13_24  [key=2, style=dotted];
m13_1709 -> m13_1710  [key=0, style=solid];
m13_1716 -> m13_24  [key=2, style=dotted];
m13_1716 -> m13_1717  [key=0, style=solid];
m13_1723 -> m13_24  [key=2, style=dotted];
m13_1723 -> m13_1724  [key=0, style=solid];
m13_1730 -> m13_24  [key=2, style=dotted];
m13_1730 -> m13_1731  [key=0, style=solid];
m13_2323 -> m13_24  [key=2, style=dotted];
m13_2323 -> m13_2324  [key=0, style=solid];
m13_2337 -> m13_24  [key=2, style=dotted];
m13_2337 -> m13_2338  [key=0, style=solid];
m13_2439 -> m13_24  [key=2, style=dotted];
m13_2439 -> m13_2440  [key=0, style=solid];
m13_2990 -> m13_24  [key=2, style=dotted];
m13_2990 -> m13_2991  [key=0, style=solid];
m13_3004 -> m13_24  [key=2, style=dotted];
m13_3004 -> m13_3005  [key=0, style=solid];
m13_3025 -> m13_24  [key=2, style=dotted];
m13_3025 -> m13_3026  [key=0, style=solid];
m13_3032 -> m13_24  [key=2, style=dotted];
m13_3032 -> m13_3033  [key=0, style=solid];
m13_3105 -> m13_24  [key=2, style=dotted];
m13_3105 -> m13_3106  [key=0, style=solid];
m13_3111 -> m13_24  [key=2, style=dotted];
m13_3111 -> m13_3112  [key=0, style=solid];
m13_3117 -> m13_24  [key=2, style=dotted];
m13_3117 -> m13_3118  [key=0, style=solid];
m13_3127 -> m13_24  [key=2, style=dotted];
m13_3127 -> m13_3128  [key=0, style=solid];
m13_3513 -> m13_24  [key=2, style=dotted];
m13_3513 -> m13_3514  [key=0, style=solid];
m13_3513 -> m13_3509  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_3594 -> m13_24  [key=2, style=dotted];
m13_3594 -> m13_3595  [key=0, style=solid];
m13_3602 -> m13_24  [key=2, style=dotted];
m13_3602 -> m13_3603  [key=0, style=solid];
m13_3611 -> m13_24  [key=2, style=dotted];
m13_3611 -> m13_3612  [key=0, style=solid];
m13_3980 -> m13_24  [key=2, style=dotted];
m13_3980 -> m13_3981  [key=0, style=solid];
m13_1752 -> m13_42  [key=2, style=dotted];
m13_1752 -> m13_1753  [key=0, style=solid];
m13_1752 -> m13_1746  [key=2, style=dotted];
m13_150 -> m13_37  [key=2, style=dotted];
m13_150 -> m13_151  [key=0, style=solid];
m13_172 -> m13_37  [key=2, style=dotted];
m13_172 -> m13_173  [key=0, style=solid];
m13_956 -> m13_37  [key=2, style=dotted];
m13_956 -> m13_957  [key=0, style=solid];
m13_956 -> m13_958  [key=2, style=dotted];
m13_1268 -> m13_37  [key=2, style=dotted];
m13_1268 -> m13_1269  [key=0, style=solid];
m13_1363 -> m13_37  [key=2, style=dotted];
m13_1363 -> m13_1364  [key=0, style=solid];
m13_3973 -> m13_37  [key=2, style=dotted];
m13_3973 -> m13_3974  [key=0, style=solid];
m13_3973 -> m13_3975  [key=2, style=dotted];
m13_1515 -> m13_79  [key=2, style=dotted];
m13_1515 -> m13_102  [key=2, style=dotted];
m13_1515 -> m13_1516  [key=0, style=solid];
m13_1763 -> m13_79  [key=2, style=dotted];
m13_1763 -> m13_80  [key=2, style=dotted];
m13_1763 -> m13_1764  [key=0, style=solid];
m13_1763 -> m13_732  [key=2, style=dotted];
m13_1763 -> m13_1765  [key=2, style=dotted];
m13_1770 -> m13_79  [key=2, style=dotted];
m13_1770 -> m13_196  [key=2, style=dotted];
m13_1770 -> m13_1771  [key=0, style=solid];
m13_1770 -> m13_1765  [key=2, style=dotted];
m13_1776 -> m13_79  [key=2, style=dotted];
m13_1776 -> m13_196  [key=2, style=dotted];
m13_1776 -> m13_1777  [key=0, style=solid];
m13_1776 -> m13_1765  [key=2, style=dotted];
m13_1782 -> m13_79  [key=2, style=dotted];
m13_1782 -> m13_196  [key=2, style=dotted];
m13_1782 -> m13_1783  [key=0, style=solid];
m13_1782 -> m13_1765  [key=2, style=dotted];
m13_1931 -> m13_79  [key=2, style=dotted];
m13_1931 -> m13_196  [key=2, style=dotted];
m13_1931 -> m13_1932  [key=0, style=solid];
m13_2329 -> m13_100  [key=2, style=dotted];
m13_2329 -> m13_2330  [key=0, style=solid];
m13_2329 -> m13_2331  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_2329 -> m13_2335  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_2332 -> m13_100  [key=2, style=dotted];
m13_2332 -> m13_2333  [key=0, style=solid];
m13_2332 -> m13_2334  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_2332 -> m13_2335  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_2332 -> m13_2336  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_1362 -> m13_1001  [key=2, style=dotted];
m13_1362 -> m13_1363  [key=0, style=solid];
m13_1362 -> m13_1341  [key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_65 -> m13_66  [key=0, style=solid];
m13_111 -> m13_112  [key=0, style=solid];
m13_114 -> m13_115  [key=0, style=solid];
m13_117 -> m13_118  [key=0, style=solid];
m13_120 -> m13_121  [key=0, style=solid];
m13_123 -> m13_124  [key=0, style=solid];
m13_126 -> m13_127  [key=0, style=solid];
m13_149 -> m13_150  [key=0, style=solid];
m13_152 -> m13_153  [key=0, style=solid];
m13_155 -> m13_156  [key=0, style=solid];
m13_171 -> m13_172  [key=0, style=solid];
m13_174 -> m13_175  [key=0, style=solid];
m13_340 -> m13_341  [key=0, style=solid];
m13_955 -> m13_956  [key=0, style=solid];
m13_963 -> m13_964  [key=0, style=solid];
m13_1266 -> m13_1267  [key=0, style=solid];
m13_1361 -> m13_1362  [key=0, style=solid];
m13_1405 -> m13_1406  [key=0, style=solid];
m13_1512 -> m13_1513  [key=0, style=solid];
m13_1653 -> m13_1654  [key=0, style=solid];
m13_1680 -> m13_1681  [key=0, style=solid];
m13_1687 -> m13_1688  [key=0, style=solid];
m13_1694 -> m13_1695  [key=0, style=solid];
m13_1701 -> m13_1702  [key=0, style=solid];
m13_1708 -> m13_1709  [key=0, style=solid];
m13_1715 -> m13_1716  [key=0, style=solid];
m13_1722 -> m13_1723  [key=0, style=solid];
m13_1729 -> m13_1730  [key=0, style=solid];
m13_1743 -> m13_1744  [key=0, style=solid];
m13_1751 -> m13_1752  [key=0, style=solid];
m13_1762 -> m13_1763  [key=0, style=solid];
m13_1769 -> m13_1770  [key=0, style=solid];
m13_1775 -> m13_1776  [key=0, style=solid];
m13_1781 -> m13_1782  [key=0, style=solid];
m13_1930 -> m13_1931  [key=0, style=solid];
m13_2322 -> m13_2323  [key=0, style=solid];
m13_2328 -> m13_2329  [key=0, style=solid];
m13_2438 -> m13_2439  [key=0, style=solid];
m13_2655 -> m13_2656  [key=0, style=solid];
m13_2989 -> m13_2990  [key=0, style=solid];
m13_3003 -> m13_3004  [key=0, style=solid];
m13_3023 -> m13_3024  [key=0, style=solid];
m13_3030 -> m13_3031  [key=0, style=solid];
m13_3104 -> m13_3105  [key=0, style=solid];
m13_3110 -> m13_3111  [key=0, style=solid];
m13_3116 -> m13_3117  [key=0, style=solid];
m13_3126 -> m13_3127  [key=0, style=solid];
m13_3132 -> m13_3133  [key=0, style=solid];
m13_3410 -> m13_3411  [key=0, style=solid];
m13_3423 -> m13_3424  [key=0, style=solid];
m13_3593 -> m13_3594  [key=0, style=solid];
m13_3601 -> m13_3602  [key=0, style=solid];
m13_3610 -> m13_3611  [key=0, style=solid];
m13_3972 -> m13_3973  [key=0, style=solid];
m13_3979 -> m13_3980  [key=0, style=solid];
m13_3999 -> m13_4000  [key=0, style=solid];
m13_50 -> m13_48  [key=0, style=bold, color=blue];
m13_67 -> m13_65  [key=0, style=bold, color=blue];
m13_113 -> m13_111  [key=0, style=bold, color=blue];
m13_116 -> m13_114  [key=0, style=bold, color=blue];
m13_119 -> m13_117  [key=0, style=bold, color=blue];
m13_122 -> m13_120  [key=0, style=bold, color=blue];
m13_125 -> m13_123  [key=0, style=bold, color=blue];
m13_128 -> m13_126  [key=0, style=bold, color=blue];
m13_154 -> m13_152  [key=0, style=bold, color=blue];
m13_157 -> m13_155  [key=0, style=bold, color=blue];
m13_176 -> m13_174  [key=0, style=bold, color=blue];
m13_342 -> m13_340  [key=0, style=bold, color=blue];
m13_965 -> m13_963  [key=0, style=bold, color=blue];
m13_1655 -> m13_1653  [key=0, style=bold, color=blue];
m13_1682 -> m13_1680  [key=0, style=bold, color=blue];
m13_1689 -> m13_1687  [key=0, style=bold, color=blue];
m13_1696 -> m13_1694  [key=0, style=bold, color=blue];
m13_1703 -> m13_1701  [key=0, style=bold, color=blue];
m13_1710 -> m13_1708  [key=0, style=bold, color=blue];
m13_1717 -> m13_1715  [key=0, style=bold, color=blue];
m13_1724 -> m13_1722  [key=0, style=bold, color=blue];
m13_1731 -> m13_1729  [key=0, style=bold, color=blue];
m13_2324 -> m13_2322  [key=0, style=bold, color=blue];
m13_2336 -> m13_2337  [key=0, style=solid];
m13_2336 -> m13_16  [key=2, style=dotted];
m13_2338 -> m13_2328  [key=0, style=bold, color=blue];
m13_2440 -> m13_2438  [key=0, style=bold, color=blue];
m13_2991 -> m13_2989  [key=0, style=bold, color=blue];
m13_3005 -> m13_3003  [key=0, style=bold, color=blue];
m13_3024 -> m13_3025  [key=0, style=solid];
m13_3026 -> m13_3023  [key=0, style=bold, color=blue];
m13_3031 -> m13_3032  [key=0, style=solid];
m13_3033 -> m13_3030  [key=0, style=bold, color=blue];
m13_3106 -> m13_3104  [key=0, style=bold, color=blue];
m13_3112 -> m13_3110  [key=0, style=bold, color=blue];
m13_3118 -> m13_3116  [key=0, style=bold, color=blue];
m13_3128 -> m13_3126  [key=0, style=bold, color=blue];
m13_3512 -> m13_3513  [key=0, style=solid];
m13_3514 -> m13_3512  [key=0, style=bold, color=blue];
m13_3595 -> m13_3593  [key=0, style=bold, color=blue];
m13_3603 -> m13_3601  [key=0, style=bold, color=blue];
m13_3612 -> m13_3610  [key=0, style=bold, color=blue];
m13_3981 -> m13_3979  [key=0, style=bold, color=blue];
m13_1753 -> m13_1751  [key=0, style=bold, color=blue];
m13_3253 -> m13_3254  [key=0, style=solid];
m13_3253 -> m13_222  [key=2, style=dotted];
m13_151 -> m13_149  [key=0, style=bold, color=blue];
m13_173 -> m13_171  [key=0, style=bold, color=blue];
m13_957 -> m13_955  [key=0, style=bold, color=blue];
m13_1267 -> m13_1268  [key=0, style=solid];
m13_1267 -> m13_1270  [key=2, style=dotted];
m13_1269 -> m13_1266  [key=0, style=bold, color=blue];
m13_1364 -> m13_1361  [key=0, style=bold, color=blue];
m13_1406 -> m13_1407  [key=0, style=solid];
m13_1406 -> m13_835  [key=2, style=dotted];
m13_3974 -> m13_3972  [key=0, style=bold, color=blue];
m13_249 -> m13_250  [key=0, style=solid];
m13_1513 -> m13_1515  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1513 -> m13_1514  [key=0, style=solid];
m13_1513 -> m13_1499  [key=2, style=dotted];
m13_1514 -> m13_1515  [key=0, style=solid];
m13_1516 -> m13_1512  [key=0, style=bold, color=blue];
m13_1764 -> m13_1762  [key=0, style=bold, color=blue];
m13_1771 -> m13_1769  [key=0, style=bold, color=blue];
m13_1777 -> m13_1775  [key=0, style=bold, color=blue];
m13_1783 -> m13_1781  [key=0, style=bold, color=blue];
m13_1932 -> m13_1930  [key=0, style=bold, color=blue];
m13_2330 -> m13_2331  [key=0, style=solid];
m13_2330 -> m13_730  [key=2, style=dotted];
m13_2331 -> m13_2332  [key=0, style=solid];
m13_2331 -> m13_730  [key=2, style=dotted];
m13_2335 -> m13_2336  [key=0, style=solid];
m13_2335 -> m13_730  [key=2, style=dotted];
m13_2333 -> m13_2334  [key=0, style=solid];
m13_2333 -> m13_730  [key=2, style=dotted];
m13_2334 -> m13_2335  [key=0, style=solid];
m13_2334 -> m13_730  [key=2, style=dotted];
m13_820 -> m13_821  [key=0, style=solid];
m13_823 -> m13_824  [key=0, style=solid];
m13_3411 -> m13_3412  [key=0, style=solid];
m13_3411 -> m13_268  [key=2, style=dotted];
m13_3411 -> m13_269  [key=2, style=dotted];
m13_3411 -> m13_2461  [key=2, style=dotted];
m13_3268 -> m13_3269  [key=0, style=solid];
m13_3268 -> m13_222  [key=2, style=dotted];
m13_3283 -> m13_3284  [key=0, style=solid];
m13_3283 -> m13_222  [key=2, style=dotted];
m13_1407 -> m13_1405  [key=0, style=bold, color=blue];
m13_1744 -> m13_1746  [key=2, style=dotted];
m13_1744 -> m13_1412  [key=2, style=dotted];
m13_1744 -> m13_1745  [key=0, style=solid];
m13_1745 -> m13_1743  [key=0, style=bold, color=blue];
m13_2657 -> m13_2655  [key=0, style=bold, color=blue];
m13_2656 -> m13_2657  [key=0, style=solid];
m13_2656 -> m13_835  [key=2, style=dotted];
m13_3134 -> m13_3132  [key=0, style=bold, color=blue];
m13_3133 -> m13_3134  [key=0, style=solid];
m13_3133 -> m13_362  [key=2, style=dotted];
m13_3412 -> m13_3410  [key=0, style=bold, color=blue];
m13_3431 -> m13_3423  [key=0, style=bold, color=blue];
m13_3424 -> m13_3425  [key=0, style=solid];
m13_3424 -> m13_3427  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4000 -> m13_4001  [key=0, style=solid];
m13_4000 -> m13_4002  [key=2, style=dotted];
m13_4000 -> m13_4003  [key=2, style=dotted];
m13_4000 -> m13_4004  [key=2, style=dotted];
m13_4000 -> m13_136  [key=2, style=dotted];
m13_4001 -> m13_3999  [key=0, style=bold, color=blue];
m13_3254 -> m13_3255  [key=0, style=solid];
m13_3252 -> m13_3253  [key=0, style=solid];
m13_3252 -> m13_3254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_248 -> m13_249  [key=0, style=solid];
m13_250 -> m13_248  [key=0, style=bold, color=blue];
m13_3269 -> m13_3270  [key=0, style=solid];
m13_3284 -> m13_3285  [key=0, style=solid];
m13_3734 -> m13_440  [key=2, style=dotted];
m13_3734 -> m13_3735  [key=0, style=solid];
m13_508 -> m13_509  [key=0, style=solid];
m13_822 -> m13_820  [key=0, style=bold, color=blue];
m13_821 -> m13_822  [key=0, style=solid];
m13_825 -> m13_823  [key=0, style=bold, color=blue];
m13_824 -> m13_825  [key=0, style=solid];
m13_3267 -> m13_3268  [key=0, style=solid];
m13_3267 -> m13_3269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_3282 -> m13_3283  [key=0, style=solid];
m13_3282 -> m13_3284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_3430 -> m13_3431  [key=0, style=solid];
m13_3430 -> m13_2423  [key=2, style=dotted];
m13_3425 -> m13_270  [key=2, style=dotted];
m13_3425 -> m13_3430  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_3425 -> m13_3426  [key=0, style=solid];
m13_3427 -> m13_268  [key=2, style=dotted];
m13_3427 -> m13_269  [key=2, style=dotted];
m13_3427 -> m13_3430  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_3427 -> m13_3428  [key=0, style=solid];
m13_3427 -> m13_3429  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_3255 -> m13_3252  [key=0, style=bold, color=blue];
m13_3270 -> m13_3267  [key=0, style=bold, color=blue];
m13_3285 -> m13_3282  [key=0, style=bold, color=blue];
m13_3733 -> m13_3734  [key=0, style=solid];
m13_3735 -> m13_3733  [key=0, style=bold, color=blue];
m13_507 -> m13_508  [key=0, style=solid];
m13_509 -> m13_507  [key=0, style=bold, color=blue];
m13_3428 -> m13_3220  [key=2, style=dotted];
m13_3428 -> m13_3429  [key=0, style=solid];
m13_3429 -> m13_3220  [key=2, style=dotted];
m13_3429 -> m13_3430  [key=0, style=solid];
m13_3426 -> m13_3427  [key=0, style=solid];
m13_1895 -> m13_1896  [key=0, style=solid];
m13_1896 -> m13_1894  [key=0, style=bold, color=blue];
m13_3476 -> m13_3477  [key=0, style=solid];
m13_3479 -> m13_37  [key=2, style=dotted];
m13_3479 -> m13_3480  [key=0, style=solid];
m13_3480 -> m13_79  [key=2, style=dotted];
m13_3480 -> m13_80  [key=2, style=dotted];
m13_3480 -> m13_3481  [key=0, style=solid];
m13_3481 -> m13_79  [key=2, style=dotted];
m13_3481 -> m13_80  [key=2, style=dotted];
m13_3481 -> m13_3482  [key=0, style=solid];
m13_3482 -> m13_25  [key=2, style=dotted];
m13_3482 -> m13_3483  [key=0, style=solid];
m13_3478 -> m13_42  [key=2, style=dotted];
m13_3478 -> m13_3479  [key=0, style=solid];
m13_3478 -> m13_3480  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_3478 -> m13_3481  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_3477 -> m13_3478  [key=0, style=solid];
m13_3483 -> m13_3476  [key=0, style=bold, color=blue];
m13_3841 -> m13_3842  [key=0, style=solid];
m13_3845 -> m13_24  [key=2, style=dotted];
m13_3845 -> m13_3846  [key=0, style=solid];
m13_3844 -> m13_37  [key=2, style=dotted];
m13_3844 -> m13_3845  [key=0, style=solid];
m13_3846 -> m13_25  [key=2, style=dotted];
m13_3846 -> m13_3847  [key=0, style=solid];
m13_3843 -> m13_3844  [key=0, style=solid];
m13_3843 -> m13_1608  [key=2, style=dotted];
m13_3842 -> m13_3846  [key=1, style=dashed, color=darkseagreen4, label=originalUri];
m13_3842 -> m13_3843  [key=0, style=solid];
m13_3842 -> m13_3842  [key=3, color=darkorchid, style=bold, label="Local variable string originalUri"];
m13_3847 -> m13_3841  [key=0, style=bold, color=blue];
m13_3598 -> m13_3599  [key=0, style=solid];
m13_3599 -> m13_47  [key=2, style=dotted];
m13_3599 -> m13_3600  [key=0, style=solid];
m13_3599 -> m13_3601  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3600 -> m13_3598  [key=0, style=bold, color=blue];
m13_1244 -> m13_1245  [key=0, style=solid];
m13_1248 -> m13_17  [key=2, style=dotted];
m13_1248 -> m13_1249  [key=0, style=solid];
m13_1247 -> m13_1248  [key=0, style=solid];
m13_1247 -> m13_16  [key=2, style=dotted];
m13_1246 -> m13_1247  [key=0, style=solid];
m13_1246 -> m13_1206  [key=2, style=dotted];
m13_1245 -> m13_1246  [key=0, style=solid];
m13_1245 -> m13_1250  [key=2, style=dotted];
m13_1245 -> m13_1251  [key=2, style=dotted];
m13_1249 -> m13_1244  [key=0, style=bold, color=blue];
m13_1772 -> m13_1773  [key=0, style=solid];
m13_1773 -> m13_47  [key=2, style=dotted];
m13_1773 -> m13_1774  [key=0, style=solid];
m13_1773 -> m13_1775  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1774 -> m13_1772  [key=0, style=bold, color=blue];
m13_243 -> m13_244  [key=0, style=solid];
m13_245 -> m13_79  [key=2, style=dotted];
m13_245 -> m13_196  [key=2, style=dotted];
m13_245 -> m13_246  [key=0, style=solid];
m13_245 -> m13_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_246 -> m13_25  [key=2, style=dotted];
m13_246 -> m13_247  [key=0, style=solid];
m13_244 -> m13_245  [key=0, style=solid];
m13_244 -> m13_244  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_247 -> m13_243  [key=0, style=bold, color=blue];
m13_251 -> m13_252  [key=0, style=solid];
m13_252 -> m13_24  [key=2, style=dotted];
m13_252 -> m13_253  [key=0, style=solid];
m13_252 -> m13_254  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_252 -> m13_255  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_253 -> m13_25  [key=2, style=dotted];
m13_253 -> m13_254  [key=0, style=solid];
m13_254 -> m13_25  [key=2, style=dotted];
m13_254 -> m13_255  [key=0, style=solid];
m13_255 -> m13_25  [key=2, style=dotted];
m13_255 -> m13_256  [key=0, style=solid];
m13_256 -> m13_251  [key=0, style=bold, color=blue];
m13_1849 -> m13_1850  [key=0, style=solid];
m13_1855 -> m13_24  [key=2, style=dotted];
m13_1855 -> m13_1856  [key=0, style=solid];
m13_1855 -> m13_668  [key=2, style=dotted];
m13_1857 -> m13_25  [key=2, style=dotted];
m13_1857 -> m13_1858  [key=0, style=solid];
m13_1858 -> m13_25  [key=2, style=dotted];
m13_1858 -> m13_1859  [key=0, style=solid];
m13_1859 -> m13_25  [key=2, style=dotted];
m13_1859 -> m13_1860  [key=0, style=solid];
m13_1851 -> m13_364  [key=2, style=dotted];
m13_1851 -> m13_1852  [key=0, style=solid];
m13_1853 -> m13_42  [key=2, style=dotted];
m13_1853 -> m13_1857  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m13_1853 -> m13_1858  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m13_1853 -> m13_1859  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m13_1853 -> m13_1854  [key=0, style=solid];
m13_1853 -> m13_1856  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m13_1854 -> m13_1855  [key=0, style=solid];
m13_1854 -> m13_1857  [key=0, style=solid];
m13_1856 -> m13_1854  [key=0, style=solid];
m13_1856 -> m13_222  [key=2, style=dotted];
m13_1850 -> m13_1851  [key=0, style=solid];
m13_1850 -> m13_1850  [key=3, color=darkorchid, style=bold, label="Local variable string googleSearchText"];
m13_1852 -> m13_1853  [key=0, style=solid];
m13_1852 -> m13_1854  [key=1, style=dashed, color=darkseagreen4, label=results];
m13_1852 -> m13_940  [key=2, style=dotted];
m13_1852 -> m13_327  [key=2, style=dotted];
m13_1860 -> m13_1849  [key=0, style=bold, color=blue];
m13_2168 -> m13_2169  [key=0, style=solid];
m13_2169 -> m13_24  [key=2, style=dotted];
m13_2169 -> m13_2170  [key=0, style=solid];
m13_2169 -> m13_2171  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m13_2169 -> m13_2172  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m13_2169 -> m13_2173  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m13_2169 -> m13_2174  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m13_2170 -> m13_25  [key=2, style=dotted];
m13_2170 -> m13_2171  [key=0, style=solid];
m13_2171 -> m13_25  [key=2, style=dotted];
m13_2171 -> m13_2172  [key=0, style=solid];
m13_2172 -> m13_25  [key=2, style=dotted];
m13_2172 -> m13_2173  [key=0, style=solid];
m13_2173 -> m13_25  [key=2, style=dotted];
m13_2173 -> m13_2174  [key=0, style=solid];
m13_2174 -> m13_25  [key=2, style=dotted];
m13_2174 -> m13_2175  [key=0, style=solid];
m13_2175 -> m13_2168  [key=0, style=bold, color=blue];
m13_3456 -> m13_3457  [key=0, style=solid];
m13_3457 -> m13_24  [key=2, style=dotted];
m13_3457 -> m13_3458  [key=0, style=solid];
m13_3458 -> m13_25  [key=2, style=dotted];
m13_3458 -> m13_3459  [key=0, style=solid];
m13_3459 -> m13_3456  [key=0, style=bold, color=blue];
m13_1397 -> m13_1398  [key=0, style=solid];
m13_1401 -> m13_47  [key=2, style=dotted];
m13_1401 -> m13_1402  [key=0, style=solid];
m13_1401 -> m13_1405  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1400 -> m13_37  [key=2, style=dotted];
m13_1400 -> m13_1401  [key=0, style=solid];
m13_1400 -> m13_1406  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m13_1398 -> m13_1400  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m13_1398 -> m13_1399  [key=0, style=solid];
m13_1398 -> m13_1403  [key=2, style=dotted];
m13_1399 -> m13_1400  [key=0, style=solid];
m13_1399 -> m13_1404  [key=2, style=dotted];
m13_1402 -> m13_1397  [key=0, style=bold, color=blue];
m13_711 -> m13_712  [key=0, style=solid];
m13_717 -> m13_79  [key=2, style=dotted];
m13_717 -> m13_718  [key=0, style=solid];
m13_712 -> m13_100  [key=2, style=dotted];
m13_712 -> m13_713  [key=0, style=solid];
m13_712 -> m13_715  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m13_712 -> m13_721  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m13_718 -> m13_731  [key=2, style=dotted];
m13_718 -> m13_719  [key=0, style=solid];
m13_718 -> m13_721  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m13_718 -> m13_725  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m13_714 -> m13_717  [key=0, style=solid];
m13_714 -> m13_715  [key=0, style=solid];
m13_713 -> m13_1129  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m13_713 -> m13_714  [key=0, style=solid];
m13_713 -> m13_715  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_713 -> m13_716  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_715 -> m13_716  [key=0, style=solid];
m13_715 -> m13_728  [key=2, style=dotted];
m13_715 -> m13_729  [key=2, style=dotted];
m13_715 -> m13_730  [key=2, style=dotted];
m13_721 -> m13_722  [key=0, style=solid];
m13_721 -> m13_734  [key=2, style=dotted];
m13_719 -> m13_732  [key=2, style=dotted];
m13_719 -> m13_720  [key=0, style=solid];
m13_719 -> m13_723  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_719 -> m13_725  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_725 -> m13_726  [key=0, style=solid];
m13_725 -> m13_738  [key=2, style=dotted];
m13_725 -> m13_739  [key=2, style=dotted];
m13_716 -> m13_714  [key=0, style=solid];
m13_716 -> m13_716  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_720 -> m13_721  [key=0, style=solid];
m13_720 -> m13_733  [key=2, style=dotted];
m13_720 -> m13_722  [key=1, style=dashed, color=darkseagreen4, label=streamWriter];
m13_722 -> m13_723  [key=0, style=solid];
m13_722 -> m13_735  [key=2, style=dotted];
m13_723 -> m13_724  [key=0, style=solid];
m13_723 -> m13_736  [key=2, style=dotted];
m13_724 -> m13_725  [key=0, style=solid];
m13_724 -> m13_737  [key=2, style=dotted];
m13_724 -> m13_726  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m13_726 -> m13_727  [key=0, style=solid];
m13_726 -> m13_740  [key=2, style=dotted];
m13_727 -> m13_711  [key=0, style=bold, color=blue];
m13_3801 -> m13_3802  [key=0, style=solid];
m13_3802 -> m13_3803  [key=0, style=solid];
m13_3803 -> m13_3801  [key=0, style=bold, color=blue];
m13_1963 -> m13_1966  [key=0, style=solid];
m13_1966 -> m13_1967  [key=0, style=solid];
m13_1967 -> m13_1963  [key=0, style=bold, color=blue];
m13_3123 -> m13_3124  [key=0, style=solid];
m13_3124 -> m13_47  [key=2, style=dotted];
m13_3124 -> m13_3125  [key=0, style=solid];
m13_3124 -> m13_3126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3125 -> m13_3123  [key=0, style=bold, color=blue];
m13_1835 -> m13_1836  [key=0, style=solid];
m13_1836 -> m13_100  [key=2, style=dotted];
m13_1836 -> m13_1837  [key=0, style=solid];
m13_1836 -> m13_1838  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_1836 -> m13_1839  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_1840 -> m13_17  [key=2, style=dotted];
m13_1840 -> m13_1841  [key=0, style=solid];
m13_1837 -> m13_1838  [key=0, style=solid];
m13_1837 -> m13_1412  [key=2, style=dotted];
m13_1837 -> m13_730  [key=2, style=dotted];
m13_1838 -> m13_1839  [key=0, style=solid];
m13_1838 -> m13_1412  [key=2, style=dotted];
m13_1838 -> m13_730  [key=2, style=dotted];
m13_1839 -> m13_1840  [key=0, style=solid];
m13_1839 -> m13_16  [key=2, style=dotted];
m13_1841 -> m13_1835  [key=0, style=bold, color=blue];
m13_367 -> m13_368  [key=0, style=solid];
m13_368 -> m13_24  [key=2, style=dotted];
m13_368 -> m13_369  [key=0, style=solid];
m13_370 -> m13_24  [key=2, style=dotted];
m13_370 -> m13_371  [key=0, style=solid];
m13_369 -> m13_25  [key=2, style=dotted];
m13_369 -> m13_370  [key=0, style=solid];
m13_371 -> m13_25  [key=2, style=dotted];
m13_371 -> m13_372  [key=0, style=solid];
m13_372 -> m13_367  [key=0, style=bold, color=blue];
m13_1147 -> m13_1148  [key=0, style=solid];
m13_1150 -> m13_24  [key=2, style=dotted];
m13_1150 -> m13_1151  [key=0, style=solid];
m13_1148 -> m13_37  [key=2, style=dotted];
m13_1148 -> m13_1150  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1148 -> m13_1149  [key=0, style=solid];
m13_1149 -> m13_25  [key=2, style=dotted];
m13_1149 -> m13_1150  [key=0, style=solid];
m13_1151 -> m13_25  [key=2, style=dotted];
m13_1151 -> m13_1152  [key=0, style=solid];
m13_1152 -> m13_1147  [key=0, style=bold, color=blue];
m13_3085 -> m13_3086  [key=0, style=solid];
m13_3086 -> m13_24  [key=2, style=dotted];
m13_3086 -> m13_3087  [key=0, style=solid];
m13_3088 -> m13_24  [key=2, style=dotted];
m13_3088 -> m13_3089  [key=0, style=solid];
m13_3090 -> m13_24  [key=2, style=dotted];
m13_3090 -> m13_3091  [key=0, style=solid];
m13_3092 -> m13_24  [key=2, style=dotted];
m13_3092 -> m13_3093  [key=0, style=solid];
m13_3094 -> m13_24  [key=2, style=dotted];
m13_3094 -> m13_3095  [key=0, style=solid];
m13_3096 -> m13_24  [key=2, style=dotted];
m13_3096 -> m13_3097  [key=0, style=solid];
m13_3098 -> m13_24  [key=2, style=dotted];
m13_3098 -> m13_3099  [key=0, style=solid];
m13_3087 -> m13_61  [key=2, style=dotted];
m13_3087 -> m13_3088  [key=0, style=solid];
m13_3089 -> m13_61  [key=2, style=dotted];
m13_3089 -> m13_3090  [key=0, style=solid];
m13_3091 -> m13_61  [key=2, style=dotted];
m13_3091 -> m13_3092  [key=0, style=solid];
m13_3093 -> m13_61  [key=2, style=dotted];
m13_3093 -> m13_3094  [key=0, style=solid];
m13_3095 -> m13_61  [key=2, style=dotted];
m13_3095 -> m13_3096  [key=0, style=solid];
m13_3097 -> m13_61  [key=2, style=dotted];
m13_3097 -> m13_3098  [key=0, style=solid];
m13_3099 -> m13_61  [key=2, style=dotted];
m13_3099 -> m13_3100  [key=0, style=solid];
m13_3100 -> m13_3085  [key=0, style=bold, color=blue];
m13_3643 -> m13_3644  [key=0, style=solid];
m13_3645 -> m13_24  [key=2, style=dotted];
m13_3645 -> m13_3646  [key=0, style=solid];
m13_3645 -> m13_3647  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3645 -> m13_3648  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3645 -> m13_3649  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3645 -> m13_3650  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3646 -> m13_61  [key=2, style=dotted];
m13_3646 -> m13_3647  [key=0, style=solid];
m13_3647 -> m13_61  [key=2, style=dotted];
m13_3647 -> m13_3648  [key=0, style=solid];
m13_3648 -> m13_61  [key=2, style=dotted];
m13_3648 -> m13_3649  [key=0, style=solid];
m13_3649 -> m13_61  [key=2, style=dotted];
m13_3649 -> m13_3650  [key=0, style=solid];
m13_3650 -> m13_61  [key=2, style=dotted];
m13_3650 -> m13_3651  [key=0, style=solid];
m13_3644 -> m13_3645  [key=0, style=solid];
m13_3644 -> m13_3644  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3651 -> m13_3643  [key=0, style=bold, color=blue];
m13_3006 -> m13_3007  [key=0, style=solid];
m13_3008 -> m13_37  [key=2, style=dotted];
m13_3008 -> m13_3009  [key=0, style=solid];
m13_3009 -> m13_25  [key=2, style=dotted];
m13_3009 -> m13_3010  [key=0, style=solid];
m13_3007 -> m13_3008  [key=0, style=solid];
m13_3007 -> m13_3011  [key=2, style=dotted];
m13_3007 -> m13_3012  [key=2, style=dotted];
m13_3010 -> m13_3006  [key=0, style=bold, color=blue];
m13_1115 -> m13_1116  [key=0, style=solid];
m13_1120 -> m13_37  [key=2, style=dotted];
m13_1120 -> m13_1121  [key=0, style=solid];
m13_1121 -> m13_25  [key=2, style=dotted];
m13_1121 -> m13_1122  [key=0, style=solid];
m13_1116 -> m13_1120  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1116 -> m13_1117  [key=0, style=solid];
m13_1116 -> m13_1123  [key=2, style=dotted];
m13_1116 -> m13_1118  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1116 -> m13_1119  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1119 -> m13_1120  [key=0, style=solid];
m13_1119 -> m13_1124  [key=2, style=dotted];
m13_1117 -> m13_1118  [key=0, style=solid];
m13_1117 -> m13_1124  [key=2, style=dotted];
m13_1118 -> m13_1119  [key=0, style=solid];
m13_1118 -> m13_1124  [key=2, style=dotted];
m13_1122 -> m13_1115  [key=0, style=bold, color=blue];
m13_990 -> m13_991  [key=0, style=solid];
m13_998 -> m13_79  [key=2, style=dotted];
m13_998 -> m13_80  [key=2, style=dotted];
m13_998 -> m13_999  [key=0, style=solid];
m13_999 -> m13_25  [key=2, style=dotted];
m13_999 -> m13_1000  [key=0, style=solid];
m13_991 -> m13_1001  [key=2, style=dotted];
m13_991 -> m13_42  [key=2, style=dotted];
m13_991 -> m13_998  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m13_991 -> m13_992  [key=0, style=solid];
m13_991 -> m13_994  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m13_997 -> m13_998  [key=0, style=solid];
m13_997 -> m13_999  [key=1, style=dashed, color=darkseagreen4, label=expected];
m13_997 -> m13_1002  [key=2, style=dotted];
m13_992 -> m13_732  [key=2, style=dotted];
m13_992 -> m13_993  [key=0, style=solid];
m13_992 -> m13_994  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_992 -> m13_995  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_992 -> m13_996  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_994 -> m13_995  [key=0, style=solid];
m13_994 -> m13_814  [key=2, style=dotted];
m13_996 -> m13_997  [key=0, style=solid];
m13_996 -> m13_738  [key=2, style=dotted];
m13_993 -> m13_994  [key=0, style=solid];
m13_993 -> m13_813  [key=2, style=dotted];
m13_995 -> m13_996  [key=0, style=solid];
m13_995 -> m13_736  [key=2, style=dotted];
m13_1000 -> m13_990  [key=0, style=bold, color=blue];
m13_1549 -> m13_1550  [key=0, style=solid];
m13_1550 -> m13_1551  [key=0, style=solid];
m13_1551 -> m13_1549  [key=0, style=bold, color=blue];
m13_2891 -> m13_2892  [key=0, style=solid];
m13_2904 -> m13_25  [key=2, style=dotted];
m13_2904 -> m13_2905  [key=0, style=solid];
m13_2903 -> m13_2904  [key=0, style=solid];
m13_2903 -> m13_2910  [key=2, style=dotted];
m13_2903 -> m13_2905  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m13_2905 -> m13_2906  [key=0, style=solid];
m13_2905 -> m13_2911  [key=2, style=dotted];
m13_2897 -> m13_2872  [key=2, style=dotted];
m13_2897 -> m13_2898  [key=0, style=solid];
m13_2897 -> m13_733  [key=2, style=dotted];
m13_2897 -> m13_2899  [key=1, style=dashed, color=darkseagreen4, label=bsonWriter];
m13_2898 -> m13_2908  [key=2, style=dotted];
m13_2898 -> m13_2899  [key=0, style=solid];
m13_2896 -> m13_732  [key=2, style=dotted];
m13_2896 -> m13_2897  [key=0, style=solid];
m13_2896 -> m13_2900  [key=1, style=dashed, color=darkseagreen4, label=bsonStream];
m13_2893 -> m13_2903  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2893 -> m13_2898  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2893 -> m13_270  [key=2, style=dotted];
m13_2893 -> m13_2894  [key=0, style=solid];
m13_2902 -> m13_2903  [key=0, style=solid];
m13_2902 -> m13_268  [key=2, style=dotted];
m13_2902 -> m13_738  [key=2, style=dotted];
m13_2899 -> m13_2900  [key=0, style=solid];
m13_2899 -> m13_2909  [key=2, style=dotted];
m13_2892 -> m13_2898  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_2892 -> m13_2893  [key=0, style=solid];
m13_2892 -> m13_2907  [key=2, style=dotted];
m13_2901 -> m13_974  [key=2, style=dotted];
m13_2901 -> m13_2902  [key=0, style=solid];
m13_2895 -> m13_2896  [key=0, style=solid];
m13_2900 -> m13_815  [key=2, style=dotted];
m13_2900 -> m13_2901  [key=0, style=solid];
m13_2894 -> m13_2895  [key=0, style=solid];
m13_2906 -> m13_2891  [key=0, style=bold, color=blue];
m13_2006 -> m13_2007  [key=0, style=solid];
m13_2007 -> m13_2009  [key=2, style=dotted];
m13_2007 -> m13_2008  [key=0, style=solid];
m13_2008 -> m13_2006  [key=0, style=bold, color=blue];
m13_911 -> m13_912  [key=0, style=solid];
m13_913 -> m13_24  [key=2, style=dotted];
m13_913 -> m13_914  [key=0, style=solid];
m13_912 -> m13_37  [key=2, style=dotted];
m13_912 -> m13_913  [key=0, style=solid];
m13_912 -> m13_916  [key=2, style=dotted];
m13_914 -> m13_25  [key=2, style=dotted];
m13_914 -> m13_915  [key=0, style=solid];
m13_915 -> m13_911  [key=0, style=bold, color=blue];
m13_3240 -> m13_3241  [key=0, style=solid];
m13_3241 -> m13_58  [key=3, color=green, style=bold, label="Local variable string json"];
m13_3241 -> m13_3242  [key=0, style=solid];
m13_3241 -> m13_3244  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3242 -> m13_42  [key=2, style=dotted];
m13_3242 -> m13_3243  [key=0, style=solid];
m13_3242 -> m13_3253  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3242 -> m13_3246  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3242 -> m13_3247  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3242 -> m13_3248  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3242 -> m13_3249  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3242 -> m13_3250  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3244 -> m13_79  [key=2, style=dotted];
m13_3244 -> m13_196  [key=2, style=dotted];
m13_3244 -> m13_3245  [key=0, style=solid];
m13_3246 -> m13_25  [key=2, style=dotted];
m13_3246 -> m13_3247  [key=0, style=solid];
m13_3243 -> m13_3244  [key=0, style=solid];
m13_3243 -> m13_3243  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m13_3243 -> m13_3253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_3243 -> m13_3254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_3247 -> m13_3248  [key=0, style=solid];
m13_3247 -> m13_1357  [key=2, style=dotted];
m13_3247 -> m13_366  [key=2, style=dotted];
m13_3248 -> m13_3249  [key=0, style=solid];
m13_3248 -> m13_1357  [key=2, style=dotted];
m13_3248 -> m13_366  [key=2, style=dotted];
m13_3249 -> m13_3250  [key=0, style=solid];
m13_3249 -> m13_1357  [key=2, style=dotted];
m13_3249 -> m13_366  [key=2, style=dotted];
m13_3250 -> m13_3251  [key=0, style=solid];
m13_3250 -> m13_1357  [key=2, style=dotted];
m13_3250 -> m13_366  [key=2, style=dotted];
m13_3245 -> m13_3246  [key=0, style=solid];
m13_3245 -> m13_695  [key=2, style=dotted];
m13_3251 -> m13_3240  [key=0, style=bold, color=blue];
m13_161 -> m13_162  [key=0, style=solid];
m13_163 -> m13_47  [key=2, style=dotted];
m13_163 -> m13_164  [key=0, style=solid];
m13_163 -> m13_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_167 -> m13_47  [key=2, style=dotted];
m13_167 -> m13_168  [key=0, style=solid];
m13_167 -> m13_174  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_168 -> m13_24  [key=2, style=dotted];
m13_168 -> m13_169  [key=0, style=solid];
m13_165 -> m13_37  [key=2, style=dotted];
m13_165 -> m13_166  [key=0, style=solid];
m13_166 -> m13_25  [key=2, style=dotted];
m13_166 -> m13_167  [key=0, style=solid];
m13_169 -> m13_25  [key=2, style=dotted];
m13_169 -> m13_170  [key=0, style=solid];
m13_162 -> m13_163  [key=0, style=solid];
m13_162 -> m13_172  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_162 -> m13_158  [key=2, style=dotted];
m13_164 -> m13_165  [key=0, style=solid];
m13_164 -> m13_158  [key=2, style=dotted];
m13_170 -> m13_161  [key=0, style=bold, color=blue];
m13_2929 -> m13_2930  [key=0, style=solid];
m13_2934 -> m13_79  [key=2, style=dotted];
m13_2934 -> m13_102  [key=2, style=dotted];
m13_2934 -> m13_2935  [key=0, style=solid];
m13_2936 -> m13_79  [key=2, style=dotted];
m13_2936 -> m13_196  [key=2, style=dotted];
m13_2936 -> m13_2937  [key=0, style=solid];
m13_2937 -> m13_25  [key=2, style=dotted];
m13_2937 -> m13_2938  [key=0, style=solid];
m13_2938 -> m13_25  [key=2, style=dotted];
m13_2938 -> m13_2939  [key=0, style=solid];
m13_2939 -> m13_25  [key=2, style=dotted];
m13_2939 -> m13_2940  [key=0, style=solid];
m13_2935 -> m13_17  [key=2, style=dotted];
m13_2935 -> m13_2936  [key=0, style=solid];
m13_2930 -> m13_2934  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m13_2930 -> m13_2936  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m13_2930 -> m13_2931  [key=0, style=solid];
m13_2930 -> m13_2941  [key=2, style=dotted];
m13_2931 -> m13_2934  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2931 -> m13_2932  [key=0, style=solid];
m13_2931 -> m13_2928  [key=2, style=dotted];
m13_2933 -> m13_2934  [key=0, style=solid];
m13_2932 -> m13_2933  [key=0, style=solid];
m13_2940 -> m13_2929  [key=0, style=bold, color=blue];
m13_1216 -> m13_1217  [key=0, style=solid];
m13_1219 -> m13_79  [key=2, style=dotted];
m13_1219 -> m13_80  [key=2, style=dotted];
m13_1219 -> m13_1220  [key=0, style=solid];
m13_1219 -> m13_1221  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1221 -> m13_79  [key=2, style=dotted];
m13_1221 -> m13_196  [key=2, style=dotted];
m13_1221 -> m13_1222  [key=0, style=solid];
m13_1221 -> m13_1223  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_1220 -> m13_25  [key=2, style=dotted];
m13_1220 -> m13_1221  [key=0, style=solid];
m13_1222 -> m13_25  [key=2, style=dotted];
m13_1222 -> m13_1223  [key=0, style=solid];
m13_1222 -> m13_853  [key=2, style=dotted];
m13_1223 -> m13_25  [key=2, style=dotted];
m13_1223 -> m13_1224  [key=0, style=solid];
m13_1223 -> m13_853  [key=2, style=dotted];
m13_1218 -> m13_1219  [key=0, style=solid];
m13_1218 -> m13_1206  [key=2, style=dotted];
m13_1217 -> m13_1218  [key=0, style=solid];
m13_1217 -> m13_1205  [key=2, style=dotted];
m13_1224 -> m13_1216  [key=0, style=bold, color=blue];
m13_3626 -> m13_3627  [key=0, style=solid];
m13_3628 -> m13_24  [key=2, style=dotted];
m13_3628 -> m13_3629  [key=0, style=solid];
m13_3628 -> m13_3630  [key=1, style=dashed, color=darkseagreen4, label=floats];
m13_3628 -> m13_3631  [key=1, style=dashed, color=darkseagreen4, label=floats];
m13_3632 -> m13_24  [key=2, style=dotted];
m13_3632 -> m13_3633  [key=0, style=solid];
m13_3632 -> m13_3634  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m13_3632 -> m13_3635  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m13_3629 -> m13_25  [key=2, style=dotted];
m13_3629 -> m13_3630  [key=0, style=solid];
m13_3630 -> m13_25  [key=2, style=dotted];
m13_3630 -> m13_3631  [key=0, style=solid];
m13_3631 -> m13_25  [key=2, style=dotted];
m13_3631 -> m13_3632  [key=0, style=solid];
m13_3633 -> m13_25  [key=2, style=dotted];
m13_3633 -> m13_3634  [key=0, style=solid];
m13_3634 -> m13_25  [key=2, style=dotted];
m13_3634 -> m13_3635  [key=0, style=solid];
m13_3635 -> m13_25  [key=2, style=dotted];
m13_3635 -> m13_3636  [key=0, style=solid];
m13_3627 -> m13_3628  [key=0, style=solid];
m13_3627 -> m13_3632  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3627 -> m13_3627  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3636 -> m13_3626  [key=0, style=bold, color=blue];
m13_2032 -> m13_2033  [key=0, style=solid];
m13_2033 -> m13_2034  [key=0, style=solid];
m13_2033 -> m13_2035  [key=2, style=dotted];
m13_2034 -> m13_2032  [key=0, style=bold, color=blue];
m13_2639 -> m13_2640  [key=0, style=solid];
m13_2642 -> m13_17  [key=2, style=dotted];
m13_2642 -> m13_2643  [key=0, style=solid];
m13_2641 -> m13_2642  [key=0, style=solid];
m13_2641 -> m13_16  [key=2, style=dotted];
m13_2640 -> m13_2641  [key=0, style=solid];
m13_2640 -> m13_2644  [key=2, style=dotted];
m13_2643 -> m13_2639  [key=0, style=bold, color=blue];
m13_1697 -> m13_1698  [key=0, style=solid];
m13_1699 -> m13_47  [key=2, style=dotted];
m13_1699 -> m13_1700  [key=0, style=solid];
m13_1699 -> m13_1701  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1698 -> m13_1699  [key=0, style=solid];
m13_1698 -> m13_1702  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1698 -> m13_1677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1700 -> m13_1697  [key=0, style=bold, color=blue];
m13_3155 -> m13_3156  [key=0, style=solid];
m13_3161 -> m13_24  [key=2, style=dotted];
m13_3161 -> m13_3162  [key=0, style=solid];
m13_3161 -> m13_3163  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3161 -> m13_3164  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3161 -> m13_3165  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3156 -> m13_79  [key=2, style=dotted];
m13_3156 -> m13_196  [key=2, style=dotted];
m13_3156 -> m13_3157  [key=0, style=solid];
m13_3156 -> m13_3158  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_3156 -> m13_3159  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_3156 -> m13_3160  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_3157 -> m13_25  [key=2, style=dotted];
m13_3157 -> m13_3158  [key=0, style=solid];
m13_3157 -> m13_3152  [key=2, style=dotted];
m13_3157 -> m13_3153  [key=2, style=dotted];
m13_3158 -> m13_25  [key=2, style=dotted];
m13_3158 -> m13_3159  [key=0, style=solid];
m13_3158 -> m13_3154  [key=2, style=dotted];
m13_3159 -> m13_25  [key=2, style=dotted];
m13_3159 -> m13_3160  [key=0, style=solid];
m13_3160 -> m13_25  [key=2, style=dotted];
m13_3160 -> m13_3161  [key=0, style=solid];
m13_3162 -> m13_25  [key=2, style=dotted];
m13_3162 -> m13_3163  [key=0, style=solid];
m13_3163 -> m13_25  [key=2, style=dotted];
m13_3163 -> m13_3164  [key=0, style=solid];
m13_3164 -> m13_25  [key=2, style=dotted];
m13_3164 -> m13_3165  [key=0, style=solid];
m13_3165 -> m13_25  [key=2, style=dotted];
m13_3165 -> m13_3166  [key=0, style=solid];
m13_3166 -> m13_3155  [key=0, style=bold, color=blue];
m13_257 -> m13_258  [key=0, style=solid];
m13_259 -> m13_25  [key=2, style=dotted];
m13_259 -> m13_260  [key=0, style=solid];
m13_266 -> m13_25  [key=2, style=dotted];
m13_266 -> m13_267  [key=0, style=solid];
m13_264 -> m13_25  [key=2, style=dotted];
m13_264 -> m13_265  [key=0, style=solid];
m13_264 -> m13_272  [key=2, style=dotted];
m13_265 -> m13_25  [key=2, style=dotted];
m13_265 -> m13_266  [key=0, style=solid];
m13_265 -> m13_273  [key=2, style=dotted];
m13_262 -> m13_42  [key=2, style=dotted];
m13_262 -> m13_264  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_262 -> m13_265  [key=1, style=dashed, color=darkseagreen4, label=l];
m13_262 -> m13_263  [key=0, style=solid];
m13_258 -> m13_259  [key=0, style=solid];
m13_258 -> m13_266  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_258 -> m13_268  [key=2, style=dotted];
m13_258 -> m13_269  [key=2, style=dotted];
m13_258 -> m13_263  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_260 -> m13_261  [key=0, style=solid];
m13_260 -> m13_270  [key=2, style=dotted];
m13_260 -> m13_263  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_263 -> m13_264  [key=0, style=solid];
m13_263 -> m13_271  [key=2, style=dotted];
m13_261 -> m13_262  [key=0, style=solid];
m13_267 -> m13_257  [key=0, style=bold, color=blue];
m13_3969 -> m13_3970  [key=0, style=solid];
m13_3970 -> m13_47  [key=2, style=dotted];
m13_3970 -> m13_3971  [key=0, style=solid];
m13_3970 -> m13_3972  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3971 -> m13_3969  [key=0, style=bold, color=blue];
m13_1196 -> m13_1197  [key=0, style=solid];
m13_1201 -> m13_24  [key=2, style=dotted];
m13_1201 -> m13_1202  [key=0, style=solid];
m13_1201 -> m13_1203  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_1199 -> m13_37  [key=2, style=dotted];
m13_1199 -> m13_1201  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1199 -> m13_1200  [key=0, style=solid];
m13_1202 -> m13_25  [key=2, style=dotted];
m13_1202 -> m13_1203  [key=0, style=solid];
m13_1203 -> m13_25  [key=2, style=dotted];
m13_1203 -> m13_1204  [key=0, style=solid];
m13_1200 -> m13_25  [key=2, style=dotted];
m13_1200 -> m13_1201  [key=0, style=solid];
m13_1198 -> m13_1199  [key=0, style=solid];
m13_1198 -> m13_1206  [key=2, style=dotted];
m13_1197 -> m13_1202  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_1197 -> m13_1203  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_1197 -> m13_1198  [key=0, style=solid];
m13_1197 -> m13_1205  [key=2, style=dotted];
m13_1204 -> m13_1196  [key=0, style=bold, color=blue];
m13_3825 -> m13_3826  [key=0, style=solid];
m13_3826 -> m13_3782  [key=2, style=dotted];
m13_3826 -> m13_3827  [key=0, style=solid];
m13_3827 -> m13_3825  [key=0, style=bold, color=blue];
m13_2010 -> m13_2011  [key=0, style=solid];
m13_2011 -> m13_2012  [key=0, style=solid];
m13_2011 -> m13_2013  [key=2, style=dotted];
m13_2012 -> m13_2010  [key=0, style=bold, color=blue];
m13_1676 -> m13_1677  [key=0, style=solid];
m13_1678 -> m13_47  [key=2, style=dotted];
m13_1678 -> m13_1679  [key=0, style=solid];
m13_1678 -> m13_1680  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1677 -> m13_1678  [key=0, style=solid];
m13_1677 -> m13_1681  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1677 -> m13_1677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1679 -> m13_1676  [key=0, style=bold, color=blue];
m13_3256 -> m13_3257  [key=0, style=solid];
m13_3260 -> m13_79  [key=2, style=dotted];
m13_3260 -> m13_196  [key=2, style=dotted];
m13_3260 -> m13_3261  [key=0, style=solid];
m13_3262 -> m13_25  [key=2, style=dotted];
m13_3262 -> m13_3263  [key=0, style=solid];
m13_3258 -> m13_42  [key=2, style=dotted];
m13_3258 -> m13_3262  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3258 -> m13_3259  [key=0, style=solid];
m13_3258 -> m13_3268  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3258 -> m13_3263  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3258 -> m13_3264  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3258 -> m13_3265  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3257 -> m13_3260  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3257 -> m13_3258  [key=0, style=solid];
m13_3257 -> m13_3257  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3259 -> m13_3260  [key=0, style=solid];
m13_3259 -> m13_3259  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m13_3259 -> m13_3268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_3259 -> m13_3269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_3261 -> m13_3262  [key=0, style=solid];
m13_3261 -> m13_695  [key=2, style=dotted];
m13_3263 -> m13_3264  [key=0, style=solid];
m13_3263 -> m13_1357  [key=2, style=dotted];
m13_3263 -> m13_366  [key=2, style=dotted];
m13_3264 -> m13_366  [key=2, style=dotted];
m13_3264 -> m13_3265  [key=0, style=solid];
m13_3264 -> m13_1357  [key=2, style=dotted];
m13_3265 -> m13_366  [key=2, style=dotted];
m13_3265 -> m13_3266  [key=0, style=solid];
m13_3265 -> m13_1357  [key=2, style=dotted];
m13_3266 -> m13_3256  [key=0, style=bold, color=blue];
m13_274 -> m13_275  [key=0, style=solid];
m13_276 -> m13_24  [key=2, style=dotted];
m13_276 -> m13_277  [key=0, style=solid];
m13_275 -> m13_37  [key=2, style=dotted];
m13_275 -> m13_25  [key=2, style=dotted];
m13_275 -> m13_276  [key=0, style=solid];
m13_275 -> m13_279  [key=2, style=dotted];
m13_277 -> m13_25  [key=2, style=dotted];
m13_277 -> m13_278  [key=0, style=solid];
m13_278 -> m13_274  [key=0, style=bold, color=blue];
m13_3353 -> m13_3354  [key=0, style=solid];
m13_3356 -> m13_25  [key=2, style=dotted];
m13_3356 -> m13_3357  [key=0, style=solid];
m13_3357 -> m13_25  [key=2, style=dotted];
m13_3357 -> m13_3358  [key=0, style=solid];
m13_3354 -> m13_3356  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m13_3354 -> m13_3355  [key=0, style=solid];
m13_3354 -> m13_3359  [key=2, style=dotted];
m13_3355 -> m13_3356  [key=0, style=solid];
m13_3355 -> m13_3357  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m13_3355 -> m13_3360  [key=2, style=dotted];
m13_3358 -> m13_3353  [key=0, style=bold, color=blue];
m13_1875 -> m13_1876  [key=0, style=solid];
m13_1876 -> m13_100  [key=2, style=dotted];
m13_1876 -> m13_1877  [key=0, style=solid];
m13_1877 -> m13_42  [key=2, style=dotted];
m13_1877 -> m13_1878  [key=0, style=solid];
m13_1878 -> m13_1875  [key=0, style=bold, color=blue];
m13_2629 -> m13_2630  [key=0, style=solid];
m13_2633 -> m13_24  [key=2, style=dotted];
m13_2633 -> m13_2634  [key=0, style=solid];
m13_2633 -> m13_2635  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2633 -> m13_2636  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2634 -> m13_25  [key=2, style=dotted];
m13_2634 -> m13_1581  [key=2, style=dotted];
m13_2634 -> m13_2635  [key=0, style=solid];
m13_2635 -> m13_25  [key=2, style=dotted];
m13_2635 -> m13_1581  [key=2, style=dotted];
m13_2635 -> m13_2636  [key=0, style=solid];
m13_2636 -> m13_25  [key=2, style=dotted];
m13_2636 -> m13_1581  [key=2, style=dotted];
m13_2636 -> m13_2637  [key=0, style=solid];
m13_2630 -> m13_42  [key=2, style=dotted];
m13_2630 -> m13_2631  [key=0, style=solid];
m13_2630 -> m13_2638  [key=2, style=dotted];
m13_2632 -> m13_17  [key=2, style=dotted];
m13_2632 -> m13_2633  [key=0, style=solid];
m13_2631 -> m13_2633  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2631 -> m13_2632  [key=0, style=solid];
m13_2631 -> m13_16  [key=2, style=dotted];
m13_2637 -> m13_2629  [key=0, style=bold, color=blue];
m13_3013 -> m13_3014  [key=0, style=solid];
m13_3015 -> m13_24  [key=2, style=dotted];
m13_3015 -> m13_3016  [key=0, style=solid];
m13_3015 -> m13_3017  [key=1, style=dashed, color=darkseagreen4, label=w];
m13_3015 -> m13_3018  [key=1, style=dashed, color=darkseagreen4, label=w];
m13_3016 -> m13_25  [key=2, style=dotted];
m13_3016 -> m13_3017  [key=0, style=solid];
m13_3016 -> m13_3012  [key=2, style=dotted];
m13_3017 -> m13_25  [key=2, style=dotted];
m13_3017 -> m13_3018  [key=0, style=solid];
m13_3017 -> m13_3012  [key=2, style=dotted];
m13_3018 -> m13_25  [key=2, style=dotted];
m13_3018 -> m13_3019  [key=0, style=solid];
m13_3014 -> m13_3015  [key=0, style=solid];
m13_3014 -> m13_3014  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3019 -> m13_3013  [key=0, style=bold, color=blue];
m13_1207 -> m13_1208  [key=0, style=solid];
m13_1212 -> m13_24  [key=2, style=dotted];
m13_1212 -> m13_1213  [key=0, style=solid];
m13_1212 -> m13_1214  [key=1, style=dashed, color=darkseagreen4, label=m2];
m13_1210 -> m13_79  [key=2, style=dotted];
m13_1210 -> m13_80  [key=2, style=dotted];
m13_1210 -> m13_1212  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1210 -> m13_1211  [key=0, style=solid];
m13_1213 -> m13_25  [key=2, style=dotted];
m13_1213 -> m13_1214  [key=0, style=solid];
m13_1214 -> m13_25  [key=2, style=dotted];
m13_1214 -> m13_1215  [key=0, style=solid];
m13_1211 -> m13_25  [key=2, style=dotted];
m13_1211 -> m13_1212  [key=0, style=solid];
m13_1209 -> m13_1210  [key=0, style=solid];
m13_1209 -> m13_1206  [key=2, style=dotted];
m13_1208 -> m13_1213  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_1208 -> m13_1214  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m13_1208 -> m13_1209  [key=0, style=solid];
m13_1208 -> m13_1205  [key=2, style=dotted];
m13_1215 -> m13_1207  [key=0, style=bold, color=blue];
m13_3078 -> m13_3079  [key=0, style=solid];
m13_3079 -> m13_79  [key=2, style=dotted];
m13_3079 -> m13_731  [key=2, style=dotted];
m13_3079 -> m13_3080  [key=0, style=solid];
m13_3079 -> m13_3082  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_3083 -> m13_25  [key=2, style=dotted];
m13_3083 -> m13_3084  [key=0, style=solid];
m13_3080 -> m13_3083  [key=1, style=dashed, color=darkseagreen4, label=dict];
m13_3080 -> m13_3081  [key=0, style=solid];
m13_3080 -> m13_268  [key=2, style=dotted];
m13_3080 -> m13_269  [key=2, style=dotted];
m13_3080 -> m13_2461  [key=2, style=dotted];
m13_3082 -> m13_3083  [key=0, style=solid];
m13_3082 -> m13_2461  [key=2, style=dotted];
m13_3081 -> m13_3082  [key=0, style=solid];
m13_3081 -> m13_268  [key=2, style=dotted];
m13_3081 -> m13_269  [key=2, style=dotted];
m13_3084 -> m13_3078  [key=0, style=bold, color=blue];
m13_769 -> m13_806  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_769 -> m13_800  [key=0, style=solid];
m13_769 -> m13_801  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_769 -> m13_802  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_769 -> m13_760  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m13_769 -> m13_781  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m13_769 -> m13_791  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m13_806 -> m13_37  [key=2, style=dotted];
m13_806 -> m13_364  [key=2, style=dotted];
m13_806 -> m13_807  [key=0, style=solid];
m13_808 -> m13_25  [key=2, style=dotted];
m13_808 -> m13_809  [key=0, style=solid];
m13_804 -> m13_364  [key=2, style=dotted];
m13_804 -> m13_805  [key=0, style=solid];
m13_804 -> m13_816  [key=2, style=dotted];
m13_805 -> m13_818  [key=2, style=dotted];
m13_805 -> m13_806  [key=0, style=solid];
m13_805 -> m13_808  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m13_805 -> m13_805  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m13_805 -> m13_817  [key=2, style=dotted];
m13_805 -> m13_819  [key=2, style=dotted];
m13_805 -> m13_820  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_805 -> m13_809  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m13_807 -> m13_818  [key=2, style=dotted];
m13_807 -> m13_808  [key=0, style=solid];
m13_807 -> m13_807  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m13_807 -> m13_817  [key=2, style=dotted];
m13_807 -> m13_819  [key=2, style=dotted];
m13_807 -> m13_823  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_807 -> m13_810  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m13_807 -> m13_811  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m13_809 -> m13_810  [key=0, style=solid];
m13_809 -> m13_811  [key=0, style=solid];
m13_803 -> m13_804  [key=0, style=solid];
m13_803 -> m13_815  [key=2, style=dotted];
m13_810 -> m13_809  [key=0, style=solid];
m13_810 -> m13_365  [key=2, style=dotted];
m13_810 -> m13_366  [key=2, style=dotted];
m13_810 -> m13_810  [key=1, style=dashed, color=darkseagreen4, label=property];
m13_811 -> m13_668  [key=2, style=dotted];
m13_811 -> m13_812  [key=0, style=solid];
m13_800 -> m13_732  [key=2, style=dotted];
m13_800 -> m13_803  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_800 -> m13_801  [key=0, style=solid];
m13_800 -> m13_802  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_801 -> m13_272  [key=2, style=dotted];
m13_801 -> m13_802  [key=0, style=solid];
m13_801 -> m13_813  [key=2, style=dotted];
m13_802 -> m13_803  [key=0, style=solid];
m13_802 -> m13_814  [key=2, style=dotted];
m13_812 -> m13_769  [key=0, style=bold, color=blue];
m13_3905 -> m13_3906  [key=0, style=solid];
m13_3908 -> m13_79  [key=2, style=dotted];
m13_3908 -> m13_3909  [key=0, style=solid];
m13_3908 -> m13_3911  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3909 -> m13_80  [key=2, style=dotted];
m13_3909 -> m13_100  [key=2, style=dotted];
m13_3909 -> m13_3910  [key=0, style=solid];
m13_3909 -> m13_3911  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3912 -> m13_25  [key=2, style=dotted];
m13_3912 -> m13_1581  [key=2, style=dotted];
m13_3912 -> m13_3913  [key=0, style=solid];
m13_3911 -> m13_196  [key=2, style=dotted];
m13_3911 -> m13_3912  [key=0, style=solid];
m13_3910 -> m13_17  [key=2, style=dotted];
m13_3910 -> m13_3911  [key=0, style=solid];
m13_3907 -> m13_3908  [key=0, style=solid];
m13_3907 -> m13_3907  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3906 -> m13_3909  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3906 -> m13_3912  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3906 -> m13_273  [key=2, style=dotted];
m13_3906 -> m13_3907  [key=0, style=solid];
m13_3913 -> m13_3905  [key=0, style=bold, color=blue];
m13_3271 -> m13_3272  [key=0, style=solid];
m13_3274 -> m13_79  [key=2, style=dotted];
m13_3274 -> m13_80  [key=2, style=dotted];
m13_3274 -> m13_3275  [key=0, style=solid];
m13_3274 -> m13_3281  [key=2, style=dotted];
m13_3276 -> m13_25  [key=2, style=dotted];
m13_3276 -> m13_3277  [key=0, style=solid];
m13_3277 -> m13_25  [key=2, style=dotted];
m13_3277 -> m13_3278  [key=0, style=solid];
m13_3278 -> m13_25  [key=2, style=dotted];
m13_3278 -> m13_3279  [key=0, style=solid];
m13_3279 -> m13_25  [key=2, style=dotted];
m13_3279 -> m13_3280  [key=0, style=solid];
m13_3272 -> m13_42  [key=2, style=dotted];
m13_3272 -> m13_3276  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3272 -> m13_3277  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3272 -> m13_3278  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3272 -> m13_3279  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3272 -> m13_3273  [key=0, style=solid];
m13_3272 -> m13_3283  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_3275 -> m13_17  [key=2, style=dotted];
m13_3275 -> m13_3276  [key=0, style=solid];
m13_3273 -> m13_3274  [key=0, style=solid];
m13_3273 -> m13_3273  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m13_3273 -> m13_3283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_3273 -> m13_3284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m13_3280 -> m13_3271  [key=0, style=bold, color=blue];
m13_1059 -> m13_1060  [key=0, style=solid];
m13_1061 -> m13_24  [key=2, style=dotted];
m13_1061 -> m13_1062  [key=0, style=solid];
m13_1061 -> m13_1063  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1061 -> m13_1064  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1061 -> m13_1065  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1061 -> m13_1066  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1061 -> m13_1067  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1062 -> m13_25  [key=2, style=dotted];
m13_1062 -> m13_1063  [key=0, style=solid];
m13_1063 -> m13_25  [key=2, style=dotted];
m13_1063 -> m13_1064  [key=0, style=solid];
m13_1064 -> m13_25  [key=2, style=dotted];
m13_1064 -> m13_1065  [key=0, style=solid];
m13_1065 -> m13_25  [key=2, style=dotted];
m13_1065 -> m13_1066  [key=0, style=solid];
m13_1066 -> m13_25  [key=2, style=dotted];
m13_1066 -> m13_1067  [key=0, style=solid];
m13_1067 -> m13_25  [key=2, style=dotted];
m13_1067 -> m13_1068  [key=0, style=solid];
m13_1060 -> m13_1061  [key=0, style=solid];
m13_1060 -> m13_1060  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1068 -> m13_1059  [key=0, style=bold, color=blue];
m13_207 -> m13_208  [key=0, style=solid];
m13_208 -> m13_210  [key=2, style=dotted];
m13_208 -> m13_209  [key=0, style=solid];
m13_209 -> m13_207  [key=0, style=bold, color=blue];
m13_1015 -> m13_1016  [key=0, style=solid];
m13_1021 -> m13_24  [key=2, style=dotted];
m13_1021 -> m13_1022  [key=0, style=solid];
m13_1019 -> m13_37  [key=2, style=dotted];
m13_1019 -> m13_1021  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1019 -> m13_1020  [key=0, style=solid];
m13_1022 -> m13_25  [key=2, style=dotted];
m13_1022 -> m13_1023  [key=0, style=solid];
m13_1020 -> m13_25  [key=2, style=dotted];
m13_1020 -> m13_1021  [key=0, style=solid];
m13_1016 -> m13_100  [key=2, style=dotted];
m13_1016 -> m13_1019  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_1016 -> m13_1022  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_1016 -> m13_1017  [key=0, style=solid];
m13_1016 -> m13_1018  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_1018 -> m13_1019  [key=0, style=solid];
m13_1018 -> m13_730  [key=2, style=dotted];
m13_1017 -> m13_1018  [key=0, style=solid];
m13_1017 -> m13_730  [key=2, style=dotted];
m13_1023 -> m13_1015  [key=0, style=bold, color=blue];
m13_68 -> m13_69  [key=0, style=solid, color=green];
m13_69 -> m13_70  [key=0, style=solid, color=green];
m13_69 -> m13_47  [key=2, style=dotted, color=green];
m13_69 -> m13_71  [key=1, style=dashed, color=green, label="lambda expression"];
m13_70 -> m13_68  [key=0, style=bold, color=blue];
m13_3736 -> m13_3737  [key=0, style=solid];
m13_3738 -> m13_79  [key=2, style=dotted];
m13_3738 -> m13_3739  [key=0, style=solid];
m13_3738 -> m13_3757  [key=2, style=dotted];
m13_3738 -> m13_3758  [key=2, style=dotted];
m13_3738 -> m13_3741  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3738 -> m13_3745  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3738 -> m13_3747  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3738 -> m13_3751  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3738 -> m13_3753  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_3740 -> m13_25  [key=2, style=dotted];
m13_3740 -> m13_3741  [key=0, style=solid];
m13_3742 -> m13_25  [key=2, style=dotted];
m13_3742 -> m13_3743  [key=0, style=solid];
m13_3742 -> m13_3759  [key=2, style=dotted];
m13_3748 -> m13_25  [key=2, style=dotted];
m13_3748 -> m13_3749  [key=0, style=solid];
m13_3748 -> m13_3714  [key=2, style=dotted];
m13_3748 -> m13_3759  [key=2, style=dotted];
m13_3754 -> m13_25  [key=2, style=dotted];
m13_3754 -> m13_3755  [key=0, style=solid];
m13_3754 -> m13_3714  [key=2, style=dotted];
m13_3754 -> m13_3759  [key=2, style=dotted];
m13_3743 -> m13_100  [key=2, style=dotted];
m13_3743 -> m13_3744  [key=0, style=solid];
m13_3743 -> m13_3745  [key=1, style=dashed, color=darkseagreen4, label=dict2];
m13_3749 -> m13_100  [key=2, style=dotted];
m13_3749 -> m13_3750  [key=0, style=solid];
m13_3749 -> m13_3751  [key=1, style=dashed, color=darkseagreen4, label=dict3];
m13_3739 -> m13_102  [key=2, style=dotted];
m13_3739 -> m13_3740  [key=0, style=solid];
m13_3739 -> m13_3741  [key=1, style=dashed, color=darkseagreen4, label=text1];
m13_3745 -> m13_102  [key=2, style=dotted];
m13_3745 -> m13_3746  [key=0, style=solid];
m13_3745 -> m13_3747  [key=1, style=dashed, color=darkseagreen4, label=text2];
m13_3751 -> m13_102  [key=2, style=dotted];
m13_3751 -> m13_3752  [key=0, style=solid];
m13_3751 -> m13_3753  [key=1, style=dashed, color=darkseagreen4, label=text3];
m13_3741 -> m13_196  [key=2, style=dotted];
m13_3741 -> m13_3742  [key=0, style=solid];
m13_3747 -> m13_196  [key=2, style=dotted];
m13_3747 -> m13_3748  [key=0, style=solid];
m13_3753 -> m13_196  [key=2, style=dotted];
m13_3753 -> m13_3754  [key=0, style=solid];
m13_3746 -> m13_17  [key=2, style=dotted];
m13_3746 -> m13_3747  [key=0, style=solid];
m13_3752 -> m13_17  [key=2, style=dotted];
m13_3752 -> m13_3753  [key=0, style=solid];
m13_3737 -> m13_3738  [key=0, style=solid];
m13_3737 -> m13_3739  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m13_3737 -> m13_3756  [key=2, style=dotted];
m13_3737 -> m13_3744  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m13_3737 -> m13_3750  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m13_3744 -> m13_3745  [key=0, style=solid];
m13_3744 -> m13_730  [key=2, style=dotted];
m13_3750 -> m13_3751  [key=0, style=solid];
m13_3750 -> m13_730  [key=2, style=dotted];
m13_3755 -> m13_3736  [key=0, style=bold, color=blue];
m13_1861 -> m13_1862  [key=0, style=solid];
m13_1871 -> m13_24  [key=2, style=dotted];
m13_1871 -> m13_1872  [key=0, style=solid];
m13_1872 -> m13_25  [key=2, style=dotted];
m13_1872 -> m13_1873  [key=0, style=solid];
m13_1864 -> m13_1001  [key=2, style=dotted];
m13_1864 -> m13_1865  [key=0, style=solid];
m13_1867 -> m13_1001  [key=2, style=dotted];
m13_1867 -> m13_1868  [key=0, style=solid];
m13_1870 -> m13_17  [key=2, style=dotted];
m13_1870 -> m13_1871  [key=0, style=solid];
m13_1869 -> m13_1871  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1869 -> m13_1870  [key=0, style=solid];
m13_1869 -> m13_16  [key=2, style=dotted];
m13_1863 -> m13_1872  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1863 -> m13_1864  [key=0, style=solid];
m13_1863 -> m13_1867  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1863 -> m13_1865  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1863 -> m13_1866  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1863 -> m13_1868  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m13_1865 -> m13_1866  [key=0, style=solid];
m13_1866 -> m13_1867  [key=0, style=solid];
m13_1868 -> m13_1869  [key=0, style=solid];
m13_1862 -> m13_1869  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m13_1862 -> m13_1863  [key=0, style=solid];
m13_1862 -> m13_1874  [key=2, style=dotted];
m13_1873 -> m13_1861  [key=0, style=bold, color=blue];
m13_1263 -> m13_1264  [key=0, style=solid];
m13_1264 -> m13_47  [key=2, style=dotted];
m13_1264 -> m13_1265  [key=0, style=solid];
m13_1264 -> m13_1266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1265 -> m13_1263  [key=0, style=bold, color=blue];
m13_1926 -> m13_1927  [key=0, style=solid];
m13_1928 -> m13_47  [key=2, style=dotted];
m13_1928 -> m13_1929  [key=0, style=solid];
m13_1928 -> m13_1930  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1927 -> m13_1928  [key=0, style=solid];
m13_1927 -> m13_1931  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1927 -> m13_1927  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1929 -> m13_1926  [key=0, style=bold, color=blue];
m13_931 -> m13_932  [key=0, style=solid];
m13_934 -> m13_25  [key=2, style=dotted];
m13_934 -> m13_935  [key=0, style=solid];
m13_934 -> m13_939  [key=2, style=dotted];
m13_934 -> m13_363  [key=2, style=dotted];
m13_937 -> m13_25  [key=2, style=dotted];
m13_937 -> m13_938  [key=0, style=solid];
m13_937 -> m13_940  [key=2, style=dotted];
m13_937 -> m13_363  [key=2, style=dotted];
m13_933 -> m13_934  [key=0, style=solid];
m13_933 -> m13_362  [key=2, style=dotted];
m13_933 -> m13_935  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_935 -> m13_936  [key=0, style=solid];
m13_936 -> m13_937  [key=0, style=solid];
m13_932 -> m13_933  [key=0, style=solid];
m13_932 -> m13_932  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m13_938 -> m13_931  [key=0, style=bold, color=blue];
m13_318 -> m13_319  [key=0, style=solid];
m13_321 -> m13_24  [key=2, style=dotted];
m13_321 -> m13_322  [key=0, style=solid];
m13_321 -> m13_323  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_321 -> m13_324  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_320 -> m13_37  [key=2, style=dotted];
m13_320 -> m13_321  [key=0, style=solid];
m13_322 -> m13_25  [key=2, style=dotted];
m13_322 -> m13_323  [key=0, style=solid];
m13_323 -> m13_25  [key=2, style=dotted];
m13_323 -> m13_324  [key=0, style=solid];
m13_324 -> m13_25  [key=2, style=dotted];
m13_324 -> m13_325  [key=0, style=solid];
m13_319 -> m13_320  [key=0, style=solid];
m13_319 -> m13_322  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_319 -> m13_323  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_319 -> m13_324  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_319 -> m13_299  [key=2, style=dotted];
m13_319 -> m13_326  [key=2, style=dotted];
m13_319 -> m13_327  [key=2, style=dotted];
m13_325 -> m13_318  [key=0, style=bold, color=blue];
m13_2613 -> m13_4057  [key=0, style=solid];
m13_4057 -> m13_4058  [key=0, style=solid];
m13_4058 -> m13_2613  [key=0, style=bold, color=blue];
m13_3484 -> m13_3485  [key=0, style=solid];
m13_3486 -> m13_24  [key=2, style=dotted];
m13_3486 -> m13_3487  [key=0, style=solid];
m13_3488 -> m13_25  [key=2, style=dotted];
m13_3488 -> m13_3489  [key=0, style=solid];
m13_3488 -> m13_2256  [key=2, style=dotted];
m13_3485 -> m13_3486  [key=0, style=solid];
m13_3485 -> m13_3485  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3487 -> m13_3488  [key=0, style=solid];
m13_3489 -> m13_3484  [key=0, style=bold, color=blue];
m13_1479 -> m13_1480  [key=0, style=solid];
m13_1482 -> m13_79  [key=2, style=dotted];
m13_1482 -> m13_80  [key=2, style=dotted];
m13_1482 -> m13_1483  [key=0, style=solid];
m13_1482 -> m13_1484  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1484 -> m13_79  [key=2, style=dotted];
m13_1484 -> m13_196  [key=2, style=dotted];
m13_1484 -> m13_1485  [key=0, style=solid];
m13_1485 -> m13_79  [key=2, style=dotted];
m13_1485 -> m13_80  [key=2, style=dotted];
m13_1485 -> m13_1486  [key=0, style=solid];
m13_1483 -> m13_25  [key=2, style=dotted];
m13_1483 -> m13_1484  [key=0, style=solid];
m13_1486 -> m13_25  [key=2, style=dotted];
m13_1486 -> m13_1487  [key=0, style=solid];
m13_1480 -> m13_1482  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_1480 -> m13_1481  [key=0, style=solid];
m13_1480 -> m13_1478  [key=2, style=dotted];
m13_1481 -> m13_1482  [key=0, style=solid];
m13_1487 -> m13_1479  [key=0, style=bold, color=blue];
m13_3135 -> m13_3136  [key=0, style=solid];
m13_3138 -> m13_25  [key=2, style=dotted];
m13_3138 -> m13_3139  [key=0, style=solid];
m13_3137 -> m13_3138  [key=0, style=solid];
m13_3137 -> m13_1048  [key=2, style=dotted];
m13_3137 -> m13_136  [key=2, style=dotted];
m13_3136 -> m13_3137  [key=0, style=solid];
m13_3136 -> m13_3136  [key=3, color=darkorchid, style=bold, label="Local variable string jsonIsoText"];
m13_3139 -> m13_3135  [key=0, style=bold, color=blue];
m13_373 -> m13_374  [key=0, style=solid];
m13_377 -> m13_25  [key=2, style=dotted];
m13_377 -> m13_378  [key=0, style=solid];
m13_379 -> m13_25  [key=2, style=dotted];
m13_379 -> m13_380  [key=0, style=solid];
m13_381 -> m13_25  [key=2, style=dotted];
m13_381 -> m13_382  [key=0, style=solid];
m13_383 -> m13_25  [key=2, style=dotted];
m13_383 -> m13_384  [key=0, style=solid];
m13_383 -> m13_435  [key=2, style=dotted];
m13_386 -> m13_25  [key=2, style=dotted];
m13_386 -> m13_387  [key=0, style=solid];
m13_388 -> m13_25  [key=2, style=dotted];
m13_388 -> m13_389  [key=0, style=solid];
m13_390 -> m13_25  [key=2, style=dotted];
m13_390 -> m13_391  [key=0, style=solid];
m13_390 -> m13_439  [key=2, style=dotted];
m13_392 -> m13_25  [key=2, style=dotted];
m13_392 -> m13_393  [key=0, style=solid];
m13_394 -> m13_25  [key=2, style=dotted];
m13_394 -> m13_395  [key=0, style=solid];
m13_396 -> m13_25  [key=2, style=dotted];
m13_396 -> m13_397  [key=0, style=solid];
m13_398 -> m13_25  [key=2, style=dotted];
m13_398 -> m13_399  [key=0, style=solid];
m13_400 -> m13_25  [key=2, style=dotted];
m13_400 -> m13_401  [key=0, style=solid];
m13_402 -> m13_25  [key=2, style=dotted];
m13_402 -> m13_403  [key=0, style=solid];
m13_404 -> m13_25  [key=2, style=dotted];
m13_404 -> m13_405  [key=0, style=solid];
m13_406 -> m13_25  [key=2, style=dotted];
m13_406 -> m13_407  [key=0, style=solid];
m13_408 -> m13_25  [key=2, style=dotted];
m13_408 -> m13_409  [key=0, style=solid];
m13_410 -> m13_25  [key=2, style=dotted];
m13_410 -> m13_411  [key=0, style=solid];
m13_412 -> m13_25  [key=2, style=dotted];
m13_412 -> m13_413  [key=0, style=solid];
m13_414 -> m13_25  [key=2, style=dotted];
m13_414 -> m13_415  [key=0, style=solid];
m13_416 -> m13_25  [key=2, style=dotted];
m13_416 -> m13_417  [key=0, style=solid];
m13_418 -> m13_25  [key=2, style=dotted];
m13_418 -> m13_419  [key=0, style=solid];
m13_420 -> m13_25  [key=2, style=dotted];
m13_420 -> m13_421  [key=0, style=solid];
m13_423 -> m13_25  [key=2, style=dotted];
m13_423 -> m13_424  [key=0, style=solid];
m13_425 -> m13_25  [key=2, style=dotted];
m13_425 -> m13_426  [key=0, style=solid];
m13_428 -> m13_25  [key=2, style=dotted];
m13_428 -> m13_429  [key=0, style=solid];
m13_430 -> m13_25  [key=2, style=dotted];
m13_430 -> m13_431  [key=0, style=solid];
m13_432 -> m13_25  [key=2, style=dotted];
m13_432 -> m13_433  [key=0, style=solid];
m13_389 -> m13_438  [key=2, style=dotted];
m13_389 -> m13_390  [key=0, style=solid];
m13_374 -> m13_377  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_379  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_381  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_383  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_386  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_388  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_390  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_392  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_394  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_396  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_398  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_400  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_402  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_404  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_406  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_408  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_410  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_412  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_414  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_416  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_418  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_420  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_423  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_425  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_428  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_430  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_432  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_389  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_375  [key=0, style=solid];
m13_374 -> m13_270  [key=2, style=dotted];
m13_374 -> m13_376  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_378  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_380  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_382  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_385  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_387  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_391  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_393  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_395  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_397  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_399  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_401  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_403  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_405  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_407  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_409  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_411  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_413  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_415  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_417  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_419  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_422  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_424  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_427  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_429  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_374 -> m13_431  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_375 -> m13_377  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m13_375 -> m13_376  [key=0, style=solid];
m13_375 -> m13_434  [key=2, style=dotted];
m13_376 -> m13_377  [key=0, style=solid];
m13_378 -> m13_379  [key=0, style=solid];
m13_380 -> m13_381  [key=0, style=solid];
m13_382 -> m13_383  [key=0, style=solid];
m13_382 -> m13_435  [key=2, style=dotted];
m13_384 -> m13_386  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m13_384 -> m13_436  [key=2, style=dotted];
m13_384 -> m13_385  [key=0, style=solid];
m13_385 -> m13_386  [key=0, style=solid];
m13_387 -> m13_388  [key=0, style=solid];
m13_387 -> m13_135  [key=2, style=dotted];
m13_387 -> m13_437  [key=2, style=dotted];
m13_391 -> m13_392  [key=0, style=solid];
m13_393 -> m13_394  [key=0, style=solid];
m13_395 -> m13_396  [key=0, style=solid];
m13_397 -> m13_398  [key=0, style=solid];
m13_399 -> m13_400  [key=0, style=solid];
m13_401 -> m13_402  [key=0, style=solid];
m13_403 -> m13_404  [key=0, style=solid];
m13_405 -> m13_406  [key=0, style=solid];
m13_407 -> m13_408  [key=0, style=solid];
m13_409 -> m13_410  [key=0, style=solid];
m13_411 -> m13_412  [key=0, style=solid];
m13_413 -> m13_414  [key=0, style=solid];
m13_415 -> m13_416  [key=0, style=solid];
m13_417 -> m13_418  [key=0, style=solid];
m13_419 -> m13_420  [key=0, style=solid];
m13_421 -> m13_423  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_421 -> m13_440  [key=2, style=dotted];
m13_421 -> m13_422  [key=0, style=solid];
m13_422 -> m13_423  [key=0, style=solid];
m13_424 -> m13_425  [key=0, style=solid];
m13_426 -> m13_428  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m13_426 -> m13_427  [key=0, style=solid];
m13_426 -> m13_441  [key=2, style=dotted];
m13_427 -> m13_428  [key=0, style=solid];
m13_429 -> m13_430  [key=0, style=solid];
m13_431 -> m13_432  [key=0, style=solid];
m13_433 -> m13_373  [key=0, style=bold, color=blue];
m13_2597 -> m13_2598  [key=0, style=solid];
m13_2600 -> m13_24  [key=2, style=dotted];
m13_2600 -> m13_2601  [key=0, style=solid];
m13_2600 -> m13_2602  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m13_2601 -> m13_25  [key=2, style=dotted];
m13_2601 -> m13_2602  [key=0, style=solid];
m13_2599 -> m13_2600  [key=0, style=solid];
m13_2599 -> m13_16  [key=2, style=dotted];
m13_2602 -> m13_2603  [key=0, style=solid];
m13_2602 -> m13_2606  [key=2, style=dotted];
m13_2602 -> m13_366  [key=2, style=dotted];
m13_2598 -> m13_2599  [key=0, style=solid];
m13_2598 -> m13_2602  [key=1, style=dashed, color=darkseagreen4, label=response];
m13_2598 -> m13_2604  [key=2, style=dotted];
m13_2598 -> m13_2605  [key=2, style=dotted];
m13_2598 -> m13_1615  [key=2, style=dotted];
m13_2603 -> m13_2597  [key=0, style=bold, color=blue];
m13_2570 -> m13_2571  [key=0, style=solid];
m13_2571 -> m13_614  [key=2, style=dotted];
m13_2571 -> m13_2572  [key=0, style=solid];
m13_2571 -> m13_4132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m13_2572 -> m13_2570  [key=0, style=bold, color=blue];
m13_1842 -> m13_1843  [key=0, style=solid];
m13_1844 -> m13_24  [key=2, style=dotted];
m13_1844 -> m13_1845  [key=0, style=solid];
m13_1843 -> m13_1844  [key=0, style=solid];
m13_1843 -> m13_1840  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1845 -> m13_1846  [key=0, style=solid];
m13_1845 -> m13_1848  [key=0, style=solid];
m13_1845 -> m13_1356  [key=2, style=dotted];
m13_1846 -> m13_1847  [key=0, style=solid];
m13_1847 -> m13_366  [key=2, style=dotted];
m13_1847 -> m13_1848  [key=0, style=solid];
m13_1847 -> m13_1357  [key=2, style=dotted];
m13_1848 -> m13_1842  [key=0, style=bold, color=blue];
m13_3550 -> m13_3551  [key=0, style=solid];
m13_3552 -> m13_79  [key=2, style=dotted];
m13_3552 -> m13_102  [key=2, style=dotted];
m13_3552 -> m13_3553  [key=0, style=solid];
m13_3551 -> m13_1001  [key=2, style=dotted];
m13_3551 -> m13_42  [key=2, style=dotted];
m13_3551 -> m13_3552  [key=0, style=solid];
m13_3551 -> m13_273  [key=2, style=dotted];
m13_3551 -> m13_1009  [key=2, style=dotted];
m13_3553 -> m13_17  [key=2, style=dotted];
m13_3553 -> m13_3554  [key=0, style=solid];
m13_3554 -> m13_3550  [key=0, style=bold, color=blue];
m13_2618 -> m13_2619  [key=0, style=solid];
m13_2619 -> m13_24  [key=2, style=dotted];
m13_2619 -> m13_2620  [key=0, style=solid];
m13_2619 -> m13_2621  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2620 -> m13_25  [key=2, style=dotted];
m13_2620 -> m13_2621  [key=0, style=solid];
m13_2621 -> m13_25  [key=2, style=dotted];
m13_2621 -> m13_2622  [key=0, style=solid];
m13_2622 -> m13_2618  [key=0, style=bold, color=blue];
m13_3795 -> m13_3796  [key=0, style=solid];
m13_3796 -> m13_3782  [key=2, style=dotted];
m13_3796 -> m13_3797  [key=0, style=solid];
m13_3797 -> m13_3795  [key=0, style=bold, color=blue];
m13_3976 -> m13_3977  [key=0, style=solid];
m13_3977 -> m13_47  [key=2, style=dotted];
m13_3977 -> m13_3978  [key=0, style=solid];
m13_3977 -> m13_3979  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3978 -> m13_3976  [key=0, style=bold, color=blue];
m13_966 -> m13_967  [key=0, style=solid];
m13_970 -> m13_24  [key=2, style=dotted];
m13_970 -> m13_971  [key=0, style=solid];
m13_970 -> m13_972  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m13_972 -> m13_25  [key=2, style=dotted];
m13_972 -> m13_973  [key=0, style=solid];
m13_971 -> m13_25  [key=2, style=dotted];
m13_971 -> m13_972  [key=0, style=solid];
m13_967 -> m13_970  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_967 -> m13_967  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_967 -> m13_968  [key=0, style=solid];
m13_967 -> m13_969  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_969 -> m13_970  [key=0, style=solid];
m13_969 -> m13_972  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m13_969 -> m13_974  [key=2, style=dotted];
m13_969 -> m13_975  [key=2, style=dotted];
m13_969 -> m13_976  [key=2, style=dotted];
m13_968 -> m13_969  [key=0, style=solid];
m13_968 -> m13_813  [key=2, style=dotted];
m13_973 -> m13_966  [key=0, style=bold, color=blue];
m13_3768 -> m13_11  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode"];
m13_3768 -> m13_3769  [key=0, style=solid];
m13_3769 -> m13_3770  [key=0, style=solid];
m13_3770 -> m13_3768  [key=0, style=bold, color=blue];
m13_2721 -> m13_2722  [key=0, style=solid];
m13_2722 -> m13_1001  [key=2, style=dotted];
m13_2722 -> m13_2723  [key=0, style=solid];
m13_2722 -> m13_2726  [key=2, style=dotted];
m13_2724 -> m13_17  [key=2, style=dotted];
m13_2724 -> m13_2725  [key=0, style=solid];
m13_2723 -> m13_2724  [key=0, style=solid];
m13_2723 -> m13_16  [key=2, style=dotted];
m13_2725 -> m13_2721  [key=0, style=bold, color=blue];
m13_2916 -> m13_2917  [key=0, style=solid];
m13_2921 -> m13_79  [key=2, style=dotted];
m13_2921 -> m13_102  [key=2, style=dotted];
m13_2921 -> m13_2922  [key=0, style=solid];
m13_2923 -> m13_79  [key=2, style=dotted];
m13_2923 -> m13_196  [key=2, style=dotted];
m13_2923 -> m13_2924  [key=0, style=solid];
m13_2924 -> m13_25  [key=2, style=dotted];
m13_2924 -> m13_2925  [key=0, style=solid];
m13_2925 -> m13_25  [key=2, style=dotted];
m13_2925 -> m13_2926  [key=0, style=solid];
m13_2926 -> m13_25  [key=2, style=dotted];
m13_2926 -> m13_2927  [key=0, style=solid];
m13_2922 -> m13_17  [key=2, style=dotted];
m13_2922 -> m13_2923  [key=0, style=solid];
m13_2917 -> m13_2921  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m13_2917 -> m13_2923  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m13_2917 -> m13_1765  [key=2, style=dotted];
m13_2917 -> m13_2918  [key=0, style=solid];
m13_2918 -> m13_2921  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2918 -> m13_2919  [key=0, style=solid];
m13_2918 -> m13_2928  [key=2, style=dotted];
m13_2920 -> m13_2921  [key=0, style=solid];
m13_2919 -> m13_2920  [key=0, style=solid];
m13_2927 -> m13_2916  [key=0, style=bold, color=blue];
m13_36 -> m13_38  [key=0, style=solid];
m13_36 -> m13_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m13_36 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m13_38 -> m13_42  [key=2, style=dotted];
m13_38 -> m13_39  [key=0, style=solid];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_41  [key=0, style=solid];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_43  [key=2, style=dotted];
m13_41 -> m13_36  [key=0, style=bold, color=blue];
m13_753 -> m13_754  [key=0, style=solid];
m13_755 -> m13_37  [key=2, style=dotted];
m13_755 -> m13_756  [key=0, style=solid];
m13_756 -> m13_25  [key=2, style=dotted];
m13_756 -> m13_757  [key=0, style=solid];
m13_754 -> m13_755  [key=0, style=solid];
m13_754 -> m13_758  [key=2, style=dotted];
m13_757 -> m13_753  [key=0, style=bold, color=blue];
m13_862 -> m13_863  [key=0, style=solid];
m13_866 -> m13_37  [key=2, style=dotted];
m13_866 -> m13_867  [key=0, style=solid];
m13_866 -> m13_872  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m13_874 -> m13_25  [key=2, style=dotted];
m13_874 -> m13_875  [key=0, style=solid];
m13_864 -> m13_100  [key=2, style=dotted];
m13_864 -> m13_866  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m13_864 -> m13_865  [key=0, style=solid];
m13_864 -> m13_869  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m13_865 -> m13_866  [key=0, style=solid];
m13_867 -> m13_868  [key=0, style=solid];
m13_867 -> m13_732  [key=2, style=dotted];
m13_867 -> m13_869  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_867 -> m13_870  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_872 -> m13_873  [key=0, style=solid];
m13_872 -> m13_835  [key=2, style=dotted];
m13_863 -> m13_874  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m13_863 -> m13_864  [key=0, style=solid];
m13_863 -> m13_865  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m13_863 -> m13_853  [key=2, style=dotted];
m13_873 -> m13_874  [key=0, style=solid];
m13_869 -> m13_870  [key=0, style=solid];
m13_869 -> m13_814  [key=2, style=dotted];
m13_868 -> m13_869  [key=0, style=solid];
m13_868 -> m13_813  [key=2, style=dotted];
m13_870 -> m13_871  [key=0, style=solid];
m13_870 -> m13_815  [key=2, style=dotted];
m13_871 -> m13_872  [key=0, style=solid];
m13_871 -> m13_816  [key=2, style=dotted];
m13_875 -> m13_862  [key=0, style=bold, color=blue];
m13_2040 -> m13_2041  [key=0, style=solid];
m13_2041 -> m13_2042  [key=0, style=solid];
m13_2041 -> m13_2043  [key=2, style=dotted];
m13_2042 -> m13_2040  [key=0, style=bold, color=blue];
m13_3944 -> m13_3945  [key=0, style=solid];
m13_3946 -> m13_79  [key=2, style=dotted];
m13_3946 -> m13_3947  [key=0, style=solid];
m13_3946 -> m13_3948  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m13_3947 -> m13_80  [key=2, style=dotted];
m13_3947 -> m13_3948  [key=0, style=solid];
m13_3949 -> m13_25  [key=2, style=dotted];
m13_3949 -> m13_3950  [key=0, style=solid];
m13_3950 -> m13_25  [key=2, style=dotted];
m13_3950 -> m13_3951  [key=0, style=solid];
m13_3948 -> m13_196  [key=2, style=dotted];
m13_3948 -> m13_3949  [key=0, style=solid];
m13_3948 -> m13_3950  [key=1, style=dashed, color=darkseagreen4, label=clonedObject];
m13_3945 -> m13_3946  [key=0, style=solid];
m13_3945 -> m13_3947  [key=1, style=dashed, color=darkseagreen4, label=original];
m13_3945 -> m13_3952  [key=2, style=dotted];
m13_3951 -> m13_3944  [key=0, style=bold, color=blue];
m13_1567 -> m13_1568  [key=0, style=solid];
m13_1569 -> m13_79  [key=2, style=dotted];
m13_1569 -> m13_196  [key=2, style=dotted];
m13_1569 -> m13_1570  [key=0, style=solid];
m13_1569 -> m13_1571  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1569 -> m13_1572  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1569 -> m13_1573  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1569 -> m13_1574  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1569 -> m13_1575  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1569 -> m13_1576  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1569 -> m13_1577  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1569 -> m13_1578  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1569 -> m13_1579  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1570 -> m13_25  [key=2, style=dotted];
m13_1570 -> m13_1571  [key=0, style=solid];
m13_1571 -> m13_25  [key=2, style=dotted];
m13_1571 -> m13_1572  [key=0, style=solid];
m13_1572 -> m13_25  [key=2, style=dotted];
m13_1572 -> m13_1573  [key=0, style=solid];
m13_1573 -> m13_25  [key=2, style=dotted];
m13_1573 -> m13_1574  [key=0, style=solid];
m13_1574 -> m13_25  [key=2, style=dotted];
m13_1574 -> m13_1575  [key=0, style=solid];
m13_1575 -> m13_25  [key=2, style=dotted];
m13_1575 -> m13_1581  [key=2, style=dotted];
m13_1575 -> m13_1576  [key=0, style=solid];
m13_1576 -> m13_25  [key=2, style=dotted];
m13_1576 -> m13_1581  [key=2, style=dotted];
m13_1576 -> m13_1577  [key=0, style=solid];
m13_1577 -> m13_25  [key=2, style=dotted];
m13_1577 -> m13_1578  [key=0, style=solid];
m13_1578 -> m13_25  [key=2, style=dotted];
m13_1578 -> m13_1579  [key=0, style=solid];
m13_1568 -> m13_1569  [key=0, style=solid];
m13_1568 -> m13_1568  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1579 -> m13_1580  [key=0, style=solid];
m13_1579 -> m13_695  [key=2, style=dotted];
m13_1580 -> m13_1567  [key=0, style=bold, color=blue];
m13_1283 -> m13_1284  [key=0, style=solid];
m13_1286 -> m13_37  [key=2, style=dotted];
m13_1286 -> m13_1287  [key=0, style=solid];
m13_1287 -> m13_25  [key=2, style=dotted];
m13_1287 -> m13_1288  [key=0, style=solid];
m13_1284 -> m13_1286  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m13_1284 -> m13_1285  [key=0, style=solid];
m13_1284 -> m13_1289  [key=2, style=dotted];
m13_1284 -> m13_1290  [key=2, style=dotted];
m13_1285 -> m13_1286  [key=0, style=solid];
m13_1288 -> m13_1283  [key=0, style=bold, color=blue];
m13_790 -> m13_791  [key=0, style=solid];
m13_797 -> m13_17  [key=2, style=dotted];
m13_797 -> m13_798  [key=0, style=solid];
m13_796 -> m13_797  [key=0, style=solid];
m13_796 -> m13_769  [key=2, style=dotted];
m13_791 -> m13_796  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_791 -> m13_792  [key=0, style=solid];
m13_791 -> m13_799  [key=2, style=dotted];
m13_791 -> m13_793  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_791 -> m13_794  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_791 -> m13_795  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_795 -> m13_796  [key=0, style=solid];
m13_792 -> m13_793  [key=0, style=solid];
m13_793 -> m13_794  [key=0, style=solid];
m13_794 -> m13_795  [key=0, style=solid];
m13_798 -> m13_790  [key=0, style=bold, color=blue];
m13_2014 -> m13_2015  [key=0, style=solid];
m13_2015 -> m13_2016  [key=0, style=solid];
m13_2015 -> m13_2017  [key=2, style=dotted];
m13_2016 -> m13_2014  [key=0, style=bold, color=blue];
m13_3389 -> m13_3390  [key=0, style=solid];
m13_3392 -> m13_17  [key=2, style=dotted];
m13_3392 -> m13_3393  [key=0, style=solid];
m13_3395 -> m13_17  [key=2, style=dotted];
m13_3395 -> m13_3396  [key=0, style=solid];
m13_3391 -> m13_3392  [key=0, style=solid];
m13_3391 -> m13_16  [key=2, style=dotted];
m13_3393 -> m13_3394  [key=0, style=solid];
m13_3393 -> m13_3398  [key=2, style=dotted];
m13_3394 -> m13_3395  [key=0, style=solid];
m13_3394 -> m13_16  [key=2, style=dotted];
m13_3390 -> m13_3391  [key=0, style=solid];
m13_3390 -> m13_3397  [key=2, style=dotted];
m13_3396 -> m13_3389  [key=0, style=bold, color=blue];
m13_4045 -> m13_3124  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m13_4045 -> m13_4046  [key=0, style=solid];
m13_4046 -> m13_4047  [key=0, style=solid];
m13_4046 -> m13_2461  [key=2, style=dotted];
m13_4046 -> m13_4049  [key=1, style=dashed, color=darkseagreen4, label=encodingName];
m13_4049 -> m13_4050  [key=0, style=solid];
m13_4049 -> m13_4051  [key=2, style=dotted];
m13_4048 -> m13_4050  [key=0, style=solid];
m13_4047 -> m13_4049  [key=0, style=solid];
m13_4047 -> m13_4048  [key=0, style=solid];
m13_4050 -> m13_4045  [key=0, style=bold, color=blue];
m13_780 -> m13_781  [key=0, style=solid];
m13_787 -> m13_17  [key=2, style=dotted];
m13_787 -> m13_788  [key=0, style=solid];
m13_786 -> m13_787  [key=0, style=solid];
m13_786 -> m13_769  [key=2, style=dotted];
m13_781 -> m13_786  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_781 -> m13_782  [key=0, style=solid];
m13_781 -> m13_789  [key=2, style=dotted];
m13_781 -> m13_783  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_781 -> m13_784  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_781 -> m13_785  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_785 -> m13_786  [key=0, style=solid];
m13_782 -> m13_783  [key=0, style=solid];
m13_783 -> m13_784  [key=0, style=solid];
m13_784 -> m13_785  [key=0, style=solid];
m13_788 -> m13_780  [key=0, style=bold, color=blue];
m13_2462 -> m13_2463  [key=0, style=solid];
m13_2463 -> m13_24  [key=2, style=dotted];
m13_2463 -> m13_2464  [key=0, style=solid];
m13_2464 -> m13_25  [key=2, style=dotted];
m13_2464 -> m13_2465  [key=0, style=solid];
m13_2464 -> m13_2460  [key=2, style=dotted];
m13_2464 -> m13_853  [key=2, style=dotted];
m13_2464 -> m13_1009  [key=2, style=dotted];
m13_2465 -> m13_2462  [key=0, style=bold, color=blue];
m13_2668 -> m13_2669  [key=0, style=solid];
m13_2670 -> m13_24  [key=2, style=dotted];
m13_2670 -> m13_2671  [key=0, style=solid];
m13_2670 -> m13_2672  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m13_2670 -> m13_2673  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m13_2671 -> m13_25  [key=2, style=dotted];
m13_2671 -> m13_2672  [key=0, style=solid];
m13_2672 -> m13_25  [key=2, style=dotted];
m13_2672 -> m13_2673  [key=0, style=solid];
m13_2673 -> m13_25  [key=2, style=dotted];
m13_2673 -> m13_2674  [key=0, style=solid];
m13_2669 -> m13_2670  [key=0, style=solid];
m13_2669 -> m13_2669  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2674 -> m13_2668  [key=0, style=bold, color=blue];
m13_1644 -> m13_1645  [key=0, style=solid];
m13_1646 -> m13_24  [key=2, style=dotted];
m13_1646 -> m13_1647  [key=0, style=solid];
m13_1647 -> m13_25  [key=2, style=dotted];
m13_1647 -> m13_1648  [key=0, style=solid];
m13_1645 -> m13_1646  [key=0, style=solid];
m13_1645 -> m13_1645  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1648 -> m13_1644  [key=0, style=bold, color=blue];
m13_3107 -> m13_3108  [key=0, style=solid];
m13_3108 -> m13_47  [key=2, style=dotted];
m13_3108 -> m13_3109  [key=0, style=solid];
m13_3108 -> m13_3110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3109 -> m13_3107  [key=0, style=bold, color=blue];
m13_1003 -> m13_1004  [key=0, style=solid];
m13_1005 -> m13_37  [key=2, style=dotted];
m13_1005 -> m13_1006  [key=0, style=solid];
m13_1006 -> m13_25  [key=2, style=dotted];
m13_1006 -> m13_1007  [key=0, style=solid];
m13_1004 -> m13_1001  [key=2, style=dotted];
m13_1004 -> m13_42  [key=2, style=dotted];
m13_1004 -> m13_1005  [key=0, style=solid];
m13_1004 -> m13_1008  [key=2, style=dotted];
m13_1004 -> m13_273  [key=2, style=dotted];
m13_1004 -> m13_1009  [key=2, style=dotted];
m13_1007 -> m13_1003  [key=0, style=bold, color=blue];
m13_3365 -> m13_3372  [key=0, style=solid];
m13_3365 -> m13_3361  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m13_3374 -> m13_1765  [key=2, style=dotted];
m13_3374 -> m13_3375  [key=0, style=solid];
m13_3372 -> m13_268  [key=2, style=dotted];
m13_3372 -> m13_269  [key=2, style=dotted];
m13_3372 -> m13_3373  [key=0, style=solid];
m13_3372 -> m13_3375  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m13_3373 -> m13_3374  [key=0, style=solid];
m13_3373 -> m13_270  [key=2, style=dotted];
m13_3373 -> m13_3375  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_3375 -> m13_2423  [key=2, style=dotted];
m13_3375 -> m13_3376  [key=0, style=solid];
m13_3376 -> m13_3365  [key=0, style=bold, color=blue];
m13_3059 -> m13_3060  [key=0, style=solid];
m13_3062 -> m13_24  [key=2, style=dotted];
m13_3062 -> m13_3063  [key=0, style=solid];
m13_3066 -> m13_24  [key=2, style=dotted];
m13_3066 -> m13_3067  [key=0, style=solid];
m13_3060 -> m13_37  [key=2, style=dotted];
m13_3060 -> m13_3062  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3060 -> m13_3061  [key=0, style=solid];
m13_3060 -> m13_3069  [key=2, style=dotted];
m13_3064 -> m13_37  [key=2, style=dotted];
m13_3064 -> m13_3066  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3064 -> m13_3065  [key=0, style=solid];
m13_3064 -> m13_3069  [key=2, style=dotted];
m13_3061 -> m13_25  [key=2, style=dotted];
m13_3061 -> m13_3062  [key=0, style=solid];
m13_3063 -> m13_25  [key=2, style=dotted];
m13_3063 -> m13_3064  [key=0, style=solid];
m13_3065 -> m13_25  [key=2, style=dotted];
m13_3065 -> m13_3066  [key=0, style=solid];
m13_3067 -> m13_25  [key=2, style=dotted];
m13_3067 -> m13_3068  [key=0, style=solid];
m13_3068 -> m13_3059  [key=0, style=bold, color=blue];
m13_1010 -> m13_1011  [key=0, style=solid];
m13_1012 -> m13_79  [key=2, style=dotted];
m13_1012 -> m13_80  [key=2, style=dotted];
m13_1012 -> m13_1013  [key=0, style=solid];
m13_1013 -> m13_25  [key=2, style=dotted];
m13_1013 -> m13_1014  [key=0, style=solid];
m13_1011 -> m13_1001  [key=2, style=dotted];
m13_1011 -> m13_42  [key=2, style=dotted];
m13_1011 -> m13_1012  [key=0, style=solid];
m13_1011 -> m13_1008  [key=2, style=dotted];
m13_1011 -> m13_273  [key=2, style=dotted];
m13_1011 -> m13_1009  [key=2, style=dotted];
m13_1014 -> m13_1010  [key=0, style=bold, color=blue];
m13_3760 -> m13_3761  [key=0, style=solid];
m13_3765 -> m13_24  [key=2, style=dotted];
m13_3765 -> m13_3766  [key=0, style=solid];
m13_3763 -> m13_37  [key=2, style=dotted];
m13_3763 -> m13_3765  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3763 -> m13_3764  [key=0, style=solid];
m13_3764 -> m13_25  [key=2, style=dotted];
m13_3764 -> m13_3765  [key=0, style=solid];
m13_3762 -> m13_100  [key=2, style=dotted];
m13_3762 -> m13_3763  [key=0, style=solid];
m13_3761 -> m13_3763  [key=1, style=dashed, color=darkseagreen4, label=product];
m13_3761 -> m13_3762  [key=0, style=solid];
m13_3761 -> m13_3767  [key=2, style=dotted];
m13_3766 -> m13_3760  [key=0, style=bold, color=blue];
m13_1125 -> m13_1126  [key=0, style=solid];
m13_1127 -> m13_79  [key=2, style=dotted];
m13_1127 -> m13_1128  [key=0, style=solid];
m13_1127 -> m13_1129  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_1128 -> m13_80  [key=2, style=dotted];
m13_1128 -> m13_1129  [key=0, style=solid];
m13_1128 -> m13_1130  [key=1, style=dashed, color=darkseagreen4, label=indented];
m13_1129 -> m13_102  [key=2, style=dotted];
m13_1129 -> m13_1130  [key=0, style=solid];
m13_1126 -> m13_1127  [key=0, style=solid];
m13_1126 -> m13_1128  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_1126 -> m13_1129  [key=1, style=dashed, color=darkseagreen4, label=obj];
m13_1130 -> m13_1131  [key=0, style=solid];
m13_1130 -> m13_1132  [key=2, style=dotted];
m13_1131 -> m13_1125  [key=0, style=bold, color=blue];
m13_3668 -> m13_3669  [key=0, style=solid];
m13_3669 -> m13_79  [key=2, style=dotted];
m13_3669 -> m13_102  [key=2, style=dotted];
m13_3669 -> m13_3670  [key=0, style=solid];
m13_3669 -> m13_3672  [key=2, style=dotted];
m13_3669 -> m13_1765  [key=2, style=dotted];
m13_3670 -> m13_17  [key=2, style=dotted];
m13_3670 -> m13_3671  [key=0, style=solid];
m13_3671 -> m13_3668  [key=0, style=bold, color=blue];
m13_3027 -> m13_3028  [key=0, style=solid];
m13_3028 -> m13_47  [key=2, style=dotted];
m13_3028 -> m13_3028  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3028 -> m13_3029  [key=0, style=solid];
m13_3028 -> m13_3030  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3029 -> m13_3027  [key=0, style=bold, color=blue];
m13_2652 -> m13_2653  [key=0, style=solid];
m13_2653 -> m13_47  [key=2, style=dotted];
m13_2653 -> m13_2654  [key=0, style=solid];
m13_2653 -> m13_2655  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2654 -> m13_2652  [key=0, style=bold, color=blue];
m13_2044 -> m13_2045  [key=0, style=solid];
m13_2049 -> m13_24  [key=2, style=dotted];
m13_2049 -> m13_2050  [key=0, style=solid];
m13_2049 -> m13_2051  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m13_2047 -> m13_37  [key=2, style=dotted];
m13_2047 -> m13_2049  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2047 -> m13_2048  [key=0, style=solid];
m13_2048 -> m13_25  [key=2, style=dotted];
m13_2048 -> m13_2049  [key=0, style=solid];
m13_2050 -> m13_25  [key=2, style=dotted];
m13_2050 -> m13_2051  [key=0, style=solid];
m13_2051 -> m13_25  [key=2, style=dotted];
m13_2051 -> m13_2052  [key=0, style=solid];
m13_2045 -> m13_2047  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m13_2045 -> m13_2046  [key=0, style=solid];
m13_2045 -> m13_1987  [key=2, style=dotted];
m13_2046 -> m13_2047  [key=0, style=solid];
m13_2046 -> m13_1999  [key=2, style=dotted];
m13_2052 -> m13_2044  [key=0, style=bold, color=blue];
m13_3952 -> m13_3953  [key=0, style=solid];
m13_3953 -> m13_3954  [key=0, style=solid];
m13_3954 -> m13_3952  [key=0, style=bold, color=blue];
m13_2699 -> m13_2700  [key=0, style=solid];
m13_2705 -> m13_25  [key=2, style=dotted];
m13_2705 -> m13_2706  [key=0, style=solid];
m13_2704 -> m13_2705  [key=0, style=solid];
m13_2704 -> m13_815  [key=2, style=dotted];
m13_2704 -> m13_2708  [key=2, style=dotted];
m13_2704 -> m13_816  [key=2, style=dotted];
m13_2702 -> m13_732  [key=2, style=dotted];
m13_2702 -> m13_2704  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_2702 -> m13_2703  [key=0, style=solid];
m13_2703 -> m13_2704  [key=0, style=solid];
m13_2703 -> m13_814  [key=2, style=dotted];
m13_2701 -> m13_2702  [key=0, style=solid];
m13_2701 -> m13_2703  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2701 -> m13_2707  [key=2, style=dotted];
m13_2700 -> m13_2703  [key=1, style=dashed, color=darkseagreen4, label=cc];
m13_2700 -> m13_2701  [key=0, style=solid];
m13_2700 -> m13_2698  [key=2, style=dotted];
m13_2706 -> m13_2699  [key=0, style=bold, color=blue];
m13_2709 -> m13_2710  [key=0, style=solid];
m13_2711 -> m13_37  [key=2, style=dotted];
m13_2711 -> m13_2712  [key=0, style=solid];
m13_2712 -> m13_25  [key=2, style=dotted];
m13_2712 -> m13_2713  [key=0, style=solid];
m13_2710 -> m13_2711  [key=0, style=solid];
m13_2710 -> m13_2714  [key=2, style=dotted];
m13_2713 -> m13_2709  [key=0, style=bold, color=blue];
m13_3995 -> m13_3996  [key=0, style=solid];
m13_3997 -> m13_47  [key=2, style=dotted];
m13_3997 -> m13_3998  [key=0, style=solid];
m13_3997 -> m13_3999  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3996 -> m13_3997  [key=0, style=solid];
m13_3996 -> m13_3996  [key=3, color=darkorchid, style=bold, label="Local variable string JsonMessage"];
m13_3996 -> m13_4000  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m13_3998 -> m13_3995  [key=0, style=bold, color=blue];
m13_3867 -> m13_3868  [key=0, style=solid];
m13_3871 -> m13_79  [key=2, style=dotted];
m13_3871 -> m13_3872  [key=0, style=solid];
m13_3871 -> m13_3874  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3872 -> m13_80  [key=2, style=dotted];
m13_3872 -> m13_3873  [key=0, style=solid];
m13_3872 -> m13_3874  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3872 -> m13_3876  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3875 -> m13_25  [key=2, style=dotted];
m13_3875 -> m13_3876  [key=0, style=solid];
m13_3880 -> m13_25  [key=2, style=dotted];
m13_3880 -> m13_3881  [key=0, style=solid];
m13_3873 -> m13_25  [key=2, style=dotted];
m13_3873 -> m13_3874  [key=0, style=solid];
m13_3878 -> m13_25  [key=2, style=dotted];
m13_3878 -> m13_3879  [key=0, style=solid];
m13_3879 -> m13_25  [key=2, style=dotted];
m13_3879 -> m13_3880  [key=0, style=solid];
m13_3879 -> m13_272  [key=2, style=dotted];
m13_3883 -> m13_25  [key=2, style=dotted];
m13_3883 -> m13_3884  [key=0, style=solid];
m13_3884 -> m13_25  [key=2, style=dotted];
m13_3884 -> m13_3885  [key=0, style=solid];
m13_3884 -> m13_272  [key=2, style=dotted];
m13_3885 -> m13_25  [key=2, style=dotted];
m13_3885 -> m13_3886  [key=0, style=solid];
m13_3874 -> m13_196  [key=2, style=dotted];
m13_3874 -> m13_3875  [key=0, style=solid];
m13_3868 -> m13_438  [key=2, style=dotted];
m13_3868 -> m13_3871  [key=1, style=dashed, color=darkseagreen4, label=culture];
m13_3868 -> m13_3869  [key=0, style=solid];
m13_3868 -> m13_3876  [key=1, style=dashed, color=darkseagreen4, label=culture];
m13_3868 -> m13_3881  [key=1, style=dashed, color=darkseagreen4, label=culture];
m13_3870 -> m13_3871  [key=0, style=solid];
m13_3870 -> m13_3850  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3870 -> m13_3876  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m13_3870 -> m13_3881  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m13_3869 -> m13_3872  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3869 -> m13_3875  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3869 -> m13_3880  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3869 -> m13_853  [key=2, style=dotted];
m13_3869 -> m13_3870  [key=0, style=solid];
m13_3876 -> m13_3877  [key=0, style=solid];
m13_3876 -> m13_268  [key=2, style=dotted];
m13_3876 -> m13_269  [key=2, style=dotted];
m13_3877 -> m13_3880  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3877 -> m13_3878  [key=0, style=solid];
m13_3877 -> m13_3879  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3877 -> m13_3239  [key=2, style=dotted];
m13_3881 -> m13_3882  [key=0, style=solid];
m13_3881 -> m13_268  [key=2, style=dotted];
m13_3881 -> m13_269  [key=2, style=dotted];
m13_3882 -> m13_3883  [key=0, style=solid];
m13_3882 -> m13_3884  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3882 -> m13_3885  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3882 -> m13_3239  [key=2, style=dotted];
m13_3886 -> m13_3867  [key=0, style=bold, color=blue];
m13_1784 -> m13_1785  [key=0, style=solid];
m13_1789 -> m13_37  [key=2, style=dotted];
m13_1789 -> m13_1790  [key=0, style=solid];
m13_1790 -> m13_25  [key=2, style=dotted];
m13_1790 -> m13_1791  [key=0, style=solid];
m13_1785 -> m13_42  [key=2, style=dotted];
m13_1785 -> m13_1789  [key=1, style=dashed, color=darkseagreen4, label=strings];
m13_1785 -> m13_1786  [key=0, style=solid];
m13_1785 -> m13_1787  [key=1, style=dashed, color=darkseagreen4, label=strings];
m13_1785 -> m13_1788  [key=1, style=dashed, color=darkseagreen4, label=strings];
m13_1788 -> m13_1789  [key=0, style=solid];
m13_1788 -> m13_1792  [key=2, style=dotted];
m13_1786 -> m13_1787  [key=0, style=solid];
m13_1786 -> m13_1792  [key=2, style=dotted];
m13_1787 -> m13_1788  [key=0, style=solid];
m13_1787 -> m13_1792  [key=2, style=dotted];
m13_1791 -> m13_1784  [key=0, style=bold, color=blue];
m13_1793 -> m13_1794  [key=0, style=solid];
m13_1797 -> m13_24  [key=2, style=dotted];
m13_1797 -> m13_1798  [key=0, style=solid];
m13_1797 -> m13_1799  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_1798 -> m13_25  [key=2, style=dotted];
m13_1798 -> m13_1799  [key=0, style=solid];
m13_1799 -> m13_25  [key=2, style=dotted];
m13_1799 -> m13_1800  [key=0, style=solid];
m13_1796 -> m13_17  [key=2, style=dotted];
m13_1796 -> m13_1797  [key=0, style=solid];
m13_1795 -> m13_1797  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1795 -> m13_1796  [key=0, style=solid];
m13_1795 -> m13_16  [key=2, style=dotted];
m13_1794 -> m13_1795  [key=0, style=solid];
m13_1794 -> m13_1801  [key=2, style=dotted];
m13_1800 -> m13_1793  [key=0, style=bold, color=blue];
m13_3070 -> m13_3071  [key=0, style=solid];
m13_3073 -> m13_24  [key=2, style=dotted];
m13_3073 -> m13_3074  [key=0, style=solid];
m13_3071 -> m13_37  [key=2, style=dotted];
m13_3071 -> m13_3072  [key=0, style=solid];
m13_3071 -> m13_3076  [key=2, style=dotted];
m13_3071 -> m13_3077  [key=2, style=dotted];
m13_3072 -> m13_25  [key=2, style=dotted];
m13_3072 -> m13_3073  [key=0, style=solid];
m13_3074 -> m13_25  [key=2, style=dotted];
m13_3074 -> m13_3075  [key=0, style=solid];
m13_3074 -> m13_3077  [key=2, style=dotted];
m13_3075 -> m13_3070  [key=0, style=bold, color=blue];
m13_3286 -> m13_3287  [key=0, style=solid];
m13_3288 -> m13_24  [key=2, style=dotted];
m13_3288 -> m13_3289  [key=0, style=solid];
m13_3288 -> m13_3290  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3288 -> m13_3291  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3288 -> m13_3292  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3290 -> m13_25  [key=2, style=dotted];
m13_3290 -> m13_3291  [key=0, style=solid];
m13_3291 -> m13_25  [key=2, style=dotted];
m13_3291 -> m13_3292  [key=0, style=solid];
m13_3292 -> m13_25  [key=2, style=dotted];
m13_3292 -> m13_3293  [key=0, style=solid];
m13_3287 -> m13_3288  [key=0, style=solid];
m13_3287 -> m13_3294  [key=2, style=dotted];
m13_3289 -> m13_3290  [key=0, style=solid];
m13_3289 -> m13_695  [key=2, style=dotted];
m13_3293 -> m13_3286  [key=0, style=bold, color=blue];
m13_8 -> m13_9  [key=0, style=solid];
m13_12 -> m13_17  [key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid];
m13_14 -> m13_17  [key=2, style=dotted];
m13_14 -> m13_15  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_16  [key=2, style=dotted];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_16  [key=2, style=dotted];
m13_9 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label=mySubclass];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_0  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label=myMainClass];
m13_10 -> m13_4  [key=2, style=dotted];
m13_15 -> m13_8  [key=0, style=bold, color=blue];
m13_3140 -> m13_3141  [key=0, style=solid];
m13_3141 -> m13_79  [key=2, style=dotted];
m13_3141 -> m13_196  [key=2, style=dotted];
m13_3141 -> m13_3142  [key=0, style=solid];
m13_3141 -> m13_3143  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_3141 -> m13_3144  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_3141 -> m13_3145  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_3146 -> m13_79  [key=2, style=dotted];
m13_3146 -> m13_196  [key=2, style=dotted];
m13_3146 -> m13_3147  [key=0, style=solid];
m13_3146 -> m13_3148  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3146 -> m13_3149  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3146 -> m13_3150  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_3142 -> m13_25  [key=2, style=dotted];
m13_3142 -> m13_3143  [key=0, style=solid];
m13_3142 -> m13_3152  [key=2, style=dotted];
m13_3142 -> m13_3153  [key=2, style=dotted];
m13_3143 -> m13_25  [key=2, style=dotted];
m13_3143 -> m13_3144  [key=0, style=solid];
m13_3143 -> m13_3154  [key=2, style=dotted];
m13_3144 -> m13_25  [key=2, style=dotted];
m13_3144 -> m13_3145  [key=0, style=solid];
m13_3145 -> m13_25  [key=2, style=dotted];
m13_3145 -> m13_3146  [key=0, style=solid];
m13_3147 -> m13_25  [key=2, style=dotted];
m13_3147 -> m13_3148  [key=0, style=solid];
m13_3147 -> m13_3152  [key=2, style=dotted];
m13_3147 -> m13_3153  [key=2, style=dotted];
m13_3148 -> m13_25  [key=2, style=dotted];
m13_3148 -> m13_3149  [key=0, style=solid];
m13_3148 -> m13_3154  [key=2, style=dotted];
m13_3149 -> m13_25  [key=2, style=dotted];
m13_3149 -> m13_3150  [key=0, style=solid];
m13_3150 -> m13_25  [key=2, style=dotted];
m13_3150 -> m13_3151  [key=0, style=solid];
m13_3151 -> m13_3140  [key=0, style=bold, color=blue];
m13_1162 -> m13_1163  [key=0, style=solid];
m13_1165 -> m13_24  [key=2, style=dotted];
m13_1165 -> m13_1166  [key=0, style=solid];
m13_1165 -> m13_1167  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1163 -> m13_37  [key=2, style=dotted];
m13_1163 -> m13_1164  [key=0, style=solid];
m13_1163 -> m13_1169  [key=2, style=dotted];
m13_1164 -> m13_25  [key=2, style=dotted];
m13_1164 -> m13_1165  [key=0, style=solid];
m13_1166 -> m13_25  [key=2, style=dotted];
m13_1166 -> m13_1167  [key=0, style=solid];
m13_1167 -> m13_25  [key=2, style=dotted];
m13_1167 -> m13_1168  [key=0, style=solid];
m13_1168 -> m13_1162  [key=0, style=bold, color=blue];
m13_2781 -> m13_2782  [key=0, style=solid];
m13_2783 -> m13_17  [key=2, style=dotted];
m13_2783 -> m13_2784  [key=0, style=solid];
m13_2785 -> m13_17  [key=2, style=dotted];
m13_2785 -> m13_2786  [key=0, style=solid];
m13_2782 -> m13_2783  [key=0, style=solid];
m13_2782 -> m13_2787  [key=2, style=dotted];
m13_2782 -> m13_16  [key=2, style=dotted];
m13_2784 -> m13_2785  [key=0, style=solid];
m13_2784 -> m13_2788  [key=2, style=dotted];
m13_2784 -> m13_16  [key=2, style=dotted];
m13_2786 -> m13_2781  [key=0, style=bold, color=blue];
m13_26 -> m13_27  [key=0, style=solid];
m13_30 -> m13_24  [key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m13_30 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m13_30 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m13_28 -> m13_37  [key=2, style=dotted];
m13_28 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_28 -> m13_29  [key=0, style=solid];
m13_31 -> m13_25  [key=2, style=dotted];
m13_31 -> m13_32  [key=0, style=solid];
m13_32 -> m13_25  [key=2, style=dotted];
m13_32 -> m13_33  [key=0, style=solid];
m13_33 -> m13_25  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_34 -> m13_25  [key=2, style=dotted];
m13_34 -> m13_35  [key=0, style=solid];
m13_29 -> m13_17  [key=2, style=dotted];
m13_29 -> m13_30  [key=0, style=solid];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_31  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m13_27 -> m13_32  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m13_27 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m13_27 -> m13_34  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m13_27 -> m13_36  [key=2, style=dotted];
m13_35 -> m13_26  [key=0, style=bold, color=blue];
m13_1739 -> m13_1740  [key=0, style=solid];
m13_1741 -> m13_47  [key=2, style=dotted];
m13_1741 -> m13_1742  [key=0, style=solid];
m13_1741 -> m13_1743  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1740 -> m13_1741  [key=0, style=solid];
m13_1740 -> m13_1677  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1740 -> m13_1744  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1742 -> m13_1739  [key=0, style=bold, color=blue];
m13_197 -> m13_198  [key=0, style=solid];
m13_202 -> m13_24  [key=2, style=dotted];
m13_202 -> m13_203  [key=0, style=solid];
m13_200 -> m13_37  [key=2, style=dotted];
m13_200 -> m13_201  [key=0, style=solid];
m13_201 -> m13_25  [key=2, style=dotted];
m13_201 -> m13_202  [key=0, style=solid];
m13_203 -> m13_25  [key=2, style=dotted];
m13_203 -> m13_204  [key=0, style=solid];
m13_198 -> m13_200  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_198 -> m13_199  [key=0, style=solid];
m13_198 -> m13_205  [key=2, style=dotted];
m13_199 -> m13_200  [key=0, style=solid];
m13_199 -> m13_206  [key=2, style=dotted];
m13_204 -> m13_197  [key=0, style=bold, color=blue];
m13_3318 -> m13_3319  [key=0, style=solid];
m13_3322 -> m13_24  [key=2, style=dotted];
m13_3322 -> m13_3323  [key=0, style=solid];
m13_3322 -> m13_3324  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_3322 -> m13_3325  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_3323 -> m13_25  [key=2, style=dotted];
m13_3323 -> m13_3324  [key=0, style=solid];
m13_3324 -> m13_25  [key=2, style=dotted];
m13_3324 -> m13_1001  [key=2, style=dotted];
m13_3324 -> m13_3325  [key=0, style=solid];
m13_3325 -> m13_25  [key=2, style=dotted];
m13_3325 -> m13_1001  [key=2, style=dotted];
m13_3325 -> m13_3326  [key=0, style=solid];
m13_3319 -> m13_100  [key=2, style=dotted];
m13_3319 -> m13_1001  [key=2, style=dotted];
m13_3319 -> m13_3320  [key=0, style=solid];
m13_3321 -> m13_17  [key=2, style=dotted];
m13_3321 -> m13_3322  [key=0, style=solid];
m13_3320 -> m13_3322  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3320 -> m13_3321  [key=0, style=solid];
m13_3320 -> m13_16  [key=2, style=dotted];
m13_3326 -> m13_3318  [key=0, style=bold, color=blue];
m13_1637 -> m13_1638  [key=0, style=solid];
m13_1639 -> m13_24  [key=2, style=dotted];
m13_1639 -> m13_1640  [key=0, style=solid];
m13_1639 -> m13_1641  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_1639 -> m13_1642  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_1640 -> m13_25  [key=2, style=dotted];
m13_1640 -> m13_1641  [key=0, style=solid];
m13_1641 -> m13_25  [key=2, style=dotted];
m13_1641 -> m13_1642  [key=0, style=solid];
m13_1642 -> m13_25  [key=2, style=dotted];
m13_1642 -> m13_1643  [key=0, style=solid];
m13_1638 -> m13_1639  [key=0, style=solid];
m13_1638 -> m13_1638  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1643 -> m13_1637  [key=0, style=bold, color=blue];
m13_1897 -> m13_1898  [key=0, style=solid];
m13_1898 -> m13_16  [key=2, style=dotted];
m13_1898 -> m13_1899  [key=0, style=solid];
m13_1899 -> m13_1897  [key=0, style=bold, color=blue];
m13_3848 -> m13_3849  [key=0, style=solid];
m13_3851 -> m13_79  [key=2, style=dotted];
m13_3851 -> m13_3852  [key=0, style=solid];
m13_3851 -> m13_3854  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3852 -> m13_80  [key=2, style=dotted];
m13_3852 -> m13_3853  [key=0, style=solid];
m13_3852 -> m13_3854  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3852 -> m13_3856  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3855 -> m13_25  [key=2, style=dotted];
m13_3855 -> m13_3856  [key=0, style=solid];
m13_3860 -> m13_25  [key=2, style=dotted];
m13_3860 -> m13_3861  [key=0, style=solid];
m13_3853 -> m13_25  [key=2, style=dotted];
m13_3853 -> m13_3854  [key=0, style=solid];
m13_3858 -> m13_25  [key=2, style=dotted];
m13_3858 -> m13_3859  [key=0, style=solid];
m13_3859 -> m13_25  [key=2, style=dotted];
m13_3859 -> m13_3860  [key=0, style=solid];
m13_3859 -> m13_272  [key=2, style=dotted];
m13_3863 -> m13_25  [key=2, style=dotted];
m13_3863 -> m13_3864  [key=0, style=solid];
m13_3864 -> m13_25  [key=2, style=dotted];
m13_3864 -> m13_3865  [key=0, style=solid];
m13_3864 -> m13_272  [key=2, style=dotted];
m13_3865 -> m13_25  [key=2, style=dotted];
m13_3865 -> m13_3866  [key=0, style=solid];
m13_3854 -> m13_196  [key=2, style=dotted];
m13_3854 -> m13_3855  [key=0, style=solid];
m13_3850 -> m13_3851  [key=0, style=solid];
m13_3850 -> m13_3850  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3850 -> m13_3856  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m13_3850 -> m13_3861  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m13_3849 -> m13_3852  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3849 -> m13_3855  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3849 -> m13_3860  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3849 -> m13_853  [key=2, style=dotted];
m13_3849 -> m13_3850  [key=0, style=solid];
m13_3856 -> m13_3857  [key=0, style=solid];
m13_3856 -> m13_268  [key=2, style=dotted];
m13_3856 -> m13_269  [key=2, style=dotted];
m13_3857 -> m13_3860  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3857 -> m13_3858  [key=0, style=solid];
m13_3857 -> m13_3859  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3857 -> m13_3239  [key=2, style=dotted];
m13_3861 -> m13_3862  [key=0, style=solid];
m13_3861 -> m13_268  [key=2, style=dotted];
m13_3861 -> m13_269  [key=2, style=dotted];
m13_3862 -> m13_3863  [key=0, style=solid];
m13_3862 -> m13_3864  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3862 -> m13_3865  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3862 -> m13_3239  [key=2, style=dotted];
m13_3866 -> m13_3848  [key=0, style=bold, color=blue];
m13_2524 -> m13_2525  [key=0, style=solid];
m13_2526 -> m13_24  [key=2, style=dotted];
m13_2526 -> m13_2527  [key=0, style=solid];
m13_2527 -> m13_25  [key=2, style=dotted];
m13_2527 -> m13_2528  [key=0, style=solid];
m13_2525 -> m13_2526  [key=0, style=solid];
m13_2525 -> m13_2525  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2528 -> m13_2524  [key=0, style=bold, color=blue];
m13_1665 -> m13_1666  [key=0, style=solid];
m13_1667 -> m13_24  [key=2, style=dotted];
m13_1667 -> m13_1668  [key=0, style=solid];
m13_1666 -> m13_1667  [key=0, style=solid];
m13_1666 -> m13_1666  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1668 -> m13_1665  [key=0, style=bold, color=blue];
m13_1187 -> m13_1188  [key=0, style=solid];
m13_1190 -> m13_25  [key=2, style=dotted];
m13_1190 -> m13_1191  [key=0, style=solid];
m13_1192 -> m13_25  [key=2, style=dotted];
m13_1192 -> m13_1193  [key=0, style=solid];
m13_1189 -> m13_1190  [key=0, style=solid];
m13_1189 -> m13_1194  [key=2, style=dotted];
m13_1189 -> m13_1195  [key=2, style=dotted];
m13_1189 -> m13_1191  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1191 -> m13_1192  [key=0, style=solid];
m13_1191 -> m13_1194  [key=2, style=dotted];
m13_1191 -> m13_136  [key=2, style=dotted];
m13_1188 -> m13_1189  [key=0, style=solid];
m13_1188 -> m13_1186  [key=2, style=dotted];
m13_1193 -> m13_1187  [key=0, style=bold, color=blue];
m13_3515 -> m13_3516  [key=0, style=solid];
m13_3517 -> m13_79  [key=2, style=dotted];
m13_3517 -> m13_80  [key=2, style=dotted];
m13_3517 -> m13_3518  [key=0, style=solid];
m13_3517 -> m13_3523  [key=2, style=dotted];
m13_3517 -> m13_3519  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3519 -> m13_79  [key=2, style=dotted];
m13_3519 -> m13_196  [key=2, style=dotted];
m13_3519 -> m13_3520  [key=0, style=solid];
m13_3519 -> m13_3523  [key=2, style=dotted];
m13_3518 -> m13_25  [key=2, style=dotted];
m13_3518 -> m13_3519  [key=0, style=solid];
m13_3520 -> m13_25  [key=2, style=dotted];
m13_3520 -> m13_3521  [key=0, style=solid];
m13_3516 -> m13_3517  [key=0, style=solid];
m13_3516 -> m13_3522  [key=2, style=dotted];
m13_3521 -> m13_3515  [key=0, style=bold, color=blue];
m13_1299 -> m13_1300  [key=0, style=solid];
m13_1303 -> m13_24  [key=2, style=dotted];
m13_1303 -> m13_1304  [key=0, style=solid];
m13_1303 -> m13_1305  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_1303 -> m13_1306  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_1303 -> m13_1307  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_1303 -> m13_1308  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_1303 -> m13_1309  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_1303 -> m13_1310  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m13_1301 -> m13_37  [key=2, style=dotted];
m13_1301 -> m13_1303  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1301 -> m13_1302  [key=0, style=solid];
m13_1302 -> m13_25  [key=2, style=dotted];
m13_1302 -> m13_1303  [key=0, style=solid];
m13_1304 -> m13_25  [key=2, style=dotted];
m13_1304 -> m13_1145  [key=2, style=dotted];
m13_1304 -> m13_1305  [key=0, style=solid];
m13_1305 -> m13_25  [key=2, style=dotted];
m13_1305 -> m13_1306  [key=0, style=solid];
m13_1306 -> m13_25  [key=2, style=dotted];
m13_1306 -> m13_1307  [key=0, style=solid];
m13_1307 -> m13_25  [key=2, style=dotted];
m13_1307 -> m13_1308  [key=0, style=solid];
m13_1308 -> m13_25  [key=2, style=dotted];
m13_1308 -> m13_1309  [key=0, style=solid];
m13_1309 -> m13_25  [key=2, style=dotted];
m13_1309 -> m13_1310  [key=0, style=solid];
m13_1310 -> m13_25  [key=2, style=dotted];
m13_1310 -> m13_1311  [key=0, style=solid];
m13_1300 -> m13_1145  [key=2, style=dotted];
m13_1300 -> m13_1301  [key=0, style=solid];
m13_1300 -> m13_1312  [key=2, style=dotted];
m13_1311 -> m13_1299  [key=0, style=bold, color=blue];
m13_1778 -> m13_1779  [key=0, style=solid];
m13_1779 -> m13_47  [key=2, style=dotted];
m13_1779 -> m13_1780  [key=0, style=solid];
m13_1779 -> m13_1781  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1780 -> m13_1778  [key=0, style=bold, color=blue];
m13_2800 -> m13_2801  [key=0, style=solid];
m13_2804 -> m13_24  [key=2, style=dotted];
m13_2804 -> m13_2805  [key=0, style=solid];
m13_2805 -> m13_25  [key=2, style=dotted];
m13_2805 -> m13_2806  [key=0, style=solid];
m13_2805 -> m13_2797  [key=2, style=dotted];
m13_2803 -> m13_17  [key=2, style=dotted];
m13_2803 -> m13_2804  [key=0, style=solid];
m13_2802 -> m13_2804  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2802 -> m13_2803  [key=0, style=solid];
m13_2802 -> m13_16  [key=2, style=dotted];
m13_2801 -> m13_2802  [key=0, style=solid];
m13_2801 -> m13_2789  [key=2, style=dotted];
m13_2806 -> m13_2800  [key=0, style=bold, color=blue];
m13_3579 -> m13_3580  [key=0, style=solid];
m13_3582 -> m13_79  [key=2, style=dotted];
m13_3582 -> m13_731  [key=2, style=dotted];
m13_3582 -> m13_3583  [key=0, style=solid];
m13_3584 -> m13_25  [key=2, style=dotted];
m13_3584 -> m13_3585  [key=0, style=solid];
m13_3586 -> m13_17  [key=2, style=dotted];
m13_3586 -> m13_3587  [key=0, style=solid];
m13_3581 -> m13_3582  [key=0, style=solid];
m13_3581 -> m13_3584  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3581 -> m13_2872  [key=2, style=dotted];
m13_3581 -> m13_3583  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m13_3583 -> m13_3584  [key=0, style=solid];
m13_3583 -> m13_2908  [key=2, style=dotted];
m13_3585 -> m13_3586  [key=0, style=solid];
m13_3585 -> m13_2876  [key=2, style=dotted];
m13_3580 -> m13_3581  [key=0, style=solid];
m13_3580 -> m13_3585  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_3580 -> m13_2871  [key=2, style=dotted];
m13_3587 -> m13_3579  [key=0, style=bold, color=blue];
m13_81 -> m13_82  [key=0, style=solid, color=green];
m13_82 -> m13_83  [key=0, style=solid, color=green];
m13_82 -> m13_47  [key=2, style=dotted, color=green];
m13_82 -> m13_84  [key=1, style=dashed, color=green, label="lambda expression"];
m13_83 -> m13_81  [key=0, style=bold, color=blue];
m13_1725 -> m13_1726  [key=0, style=solid];
m13_1727 -> m13_47  [key=2, style=dotted];
m13_1727 -> m13_1728  [key=0, style=solid];
m13_1727 -> m13_1729  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1726 -> m13_1727  [key=0, style=solid];
m13_1726 -> m13_1730  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1726 -> m13_1726  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1728 -> m13_1725  [key=0, style=bold, color=blue];
m13_646 -> m13_647  [key=0, style=solid];
m13_649 -> m13_24  [key=2, style=dotted];
m13_649 -> m13_650  [key=0, style=solid];
m13_649 -> m13_651  [key=1, style=dashed, color=darkseagreen4, label=r2];
m13_650 -> m13_25  [key=2, style=dotted];
m13_650 -> m13_651  [key=0, style=solid];
m13_650 -> m13_654  [key=2, style=dotted];
m13_651 -> m13_25  [key=2, style=dotted];
m13_651 -> m13_652  [key=0, style=solid];
m13_648 -> m13_649  [key=0, style=solid];
m13_648 -> m13_16  [key=2, style=dotted];
m13_647 -> m13_648  [key=0, style=solid];
m13_647 -> m13_653  [key=2, style=dotted];
m13_652 -> m13_646  [key=0, style=bold, color=blue];
m13_1528 -> m13_1529  [key=0, style=solid];
m13_1535 -> m13_24  [key=2, style=dotted];
m13_1535 -> m13_1536  [key=0, style=solid];
m13_1535 -> m13_1537  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m13_1535 -> m13_1538  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m13_1536 -> m13_25  [key=2, style=dotted];
m13_1536 -> m13_1537  [key=0, style=solid];
m13_1537 -> m13_25  [key=2, style=dotted];
m13_1537 -> m13_1538  [key=0, style=solid];
m13_1538 -> m13_25  [key=2, style=dotted];
m13_1538 -> m13_1539  [key=0, style=solid];
m13_1534 -> m13_17  [key=2, style=dotted];
m13_1534 -> m13_1535  [key=0, style=solid];
m13_1533 -> m13_1534  [key=0, style=solid];
m13_1533 -> m13_16  [key=2, style=dotted];
m13_1529 -> m13_1533  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m13_1529 -> m13_1530  [key=0, style=solid];
m13_1529 -> m13_1540  [key=2, style=dotted];
m13_1529 -> m13_1531  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m13_1529 -> m13_1532  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m13_1532 -> m13_1533  [key=0, style=solid];
m13_1530 -> m13_1531  [key=0, style=solid];
m13_1531 -> m13_1532  [key=0, style=solid];
m13_1539 -> m13_1528  [key=0, style=bold, color=blue];
m13_1413 -> m13_1414  [key=0, style=solid];
m13_1415 -> m13_37  [key=2, style=dotted];
m13_1415 -> m13_1416  [key=0, style=solid];
m13_1415 -> m13_1418  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m13_1418 -> m13_25  [key=2, style=dotted];
m13_1418 -> m13_1419  [key=0, style=solid];
m13_1419 -> m13_25  [key=2, style=dotted];
m13_1419 -> m13_1420  [key=0, style=solid];
m13_1420 -> m13_25  [key=2, style=dotted];
m13_1420 -> m13_1421  [key=0, style=solid];
m13_1414 -> m13_1001  [key=2, style=dotted];
m13_1414 -> m13_1415  [key=0, style=solid];
m13_1414 -> m13_1422  [key=2, style=dotted];
m13_1414 -> m13_1416  [key=1, style=dashed, color=darkseagreen4, label=entry];
m13_1414 -> m13_1417  [key=1, style=dashed, color=darkseagreen4, label=entry];
m13_1416 -> m13_1419  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m13_1416 -> m13_1417  [key=0, style=solid];
m13_1416 -> m13_1048  [key=2, style=dotted];
m13_1416 -> m13_1195  [key=2, style=dotted];
m13_1417 -> m13_1418  [key=0, style=solid];
m13_1417 -> m13_1420  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m13_1417 -> m13_1243  [key=2, style=dotted];
m13_1417 -> m13_1195  [key=2, style=dotted];
m13_1421 -> m13_1413  [key=0, style=bold, color=blue];
m13_876 -> m13_877  [key=0, style=solid];
m13_881 -> m13_37  [key=2, style=dotted];
m13_881 -> m13_882  [key=0, style=solid];
m13_884 -> m13_25  [key=2, style=dotted];
m13_884 -> m13_885  [key=0, style=solid];
m13_885 -> m13_25  [key=2, style=dotted];
m13_885 -> m13_886  [key=0, style=solid];
m13_887 -> m13_25  [key=2, style=dotted];
m13_887 -> m13_888  [key=0, style=solid];
m13_877 -> m13_881  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m13_877 -> m13_878  [key=0, style=solid];
m13_877 -> m13_889  [key=2, style=dotted];
m13_877 -> m13_879  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m13_877 -> m13_880  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m13_877 -> m13_883  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m13_880 -> m13_881  [key=0, style=solid];
m13_882 -> m13_884  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m13_882 -> m13_885  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m13_882 -> m13_887  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m13_882 -> m13_883  [key=0, style=solid];
m13_882 -> m13_835  [key=2, style=dotted];
m13_882 -> m13_886  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m13_883 -> m13_884  [key=0, style=solid];
m13_883 -> m13_890  [key=2, style=dotted];
m13_886 -> m13_887  [key=0, style=solid];
m13_886 -> m13_891  [key=2, style=dotted];
m13_878 -> m13_879  [key=0, style=solid];
m13_879 -> m13_880  [key=0, style=solid];
m13_888 -> m13_876  [key=0, style=bold, color=blue];
m13_44 -> m13_45  [key=0, style=solid];
m13_45 -> m13_47  [key=2, style=dotted];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_46 -> m13_44  [key=0, style=bold, color=blue];
m13_676 -> m13_677  [key=0, style=solid];
m13_678 -> m13_24  [key=2, style=dotted];
m13_678 -> m13_679  [key=0, style=solid];
m13_679 -> m13_25  [key=2, style=dotted];
m13_679 -> m13_680  [key=0, style=solid];
m13_677 -> m13_678  [key=0, style=solid];
m13_677 -> m13_672  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_680 -> m13_676  [key=0, style=bold, color=blue];
m13_3192 -> m13_3195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m13_3192 -> m13_3193  [key=0, style=solid];
m13_3195 -> m13_2257  [key=2, style=dotted];
m13_3195 -> m13_3196  [key=0, style=solid];
m13_3195 -> m13_3197  [key=2, style=dotted];
m13_3195 -> m13_3198  [key=2, style=dotted];
m13_3195 -> m13_3199  [key=2, style=dotted];
m13_3194 -> m13_3195  [key=0, style=solid];
m13_3193 -> m13_3194  [key=0, style=solid];
m13_3196 -> m13_3192  [key=0, style=bold, color=blue];
m13_3819 -> m13_3820  [key=0, style=solid];
m13_3820 -> m13_3782  [key=2, style=dotted];
m13_3820 -> m13_3821  [key=0, style=solid];
m13_3821 -> m13_3819  [key=0, style=bold, color=blue];
m13_2441 -> m13_2442  [key=0, style=solid];
m13_2445 -> m13_24  [key=2, style=dotted];
m13_2445 -> m13_2446  [key=0, style=solid];
m13_2446 -> m13_25  [key=2, style=dotted];
m13_2446 -> m13_2446  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m13_2446 -> m13_2447  [key=0, style=solid];
m13_2444 -> m13_17  [key=2, style=dotted];
m13_2444 -> m13_2445  [key=0, style=solid];
m13_2443 -> m13_2445  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2443 -> m13_2444  [key=0, style=solid];
m13_2443 -> m13_16  [key=2, style=dotted];
m13_2442 -> m13_2443  [key=0, style=solid];
m13_2442 -> m13_2448  [key=2, style=dotted];
m13_2447 -> m13_2441  [key=0, style=bold, color=blue];
m13_1450 -> m13_1451  [key=0, style=solid];
m13_1452 -> m13_79  [key=2, style=dotted];
m13_1452 -> m13_196  [key=2, style=dotted];
m13_1452 -> m13_1453  [key=0, style=solid];
m13_1452 -> m13_1454  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1455 -> m13_79  [key=2, style=dotted];
m13_1455 -> m13_196  [key=2, style=dotted];
m13_1455 -> m13_1456  [key=0, style=solid];
m13_1455 -> m13_1457  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1453 -> m13_25  [key=2, style=dotted];
m13_1453 -> m13_1454  [key=0, style=solid];
m13_1454 -> m13_25  [key=2, style=dotted];
m13_1454 -> m13_1455  [key=0, style=solid];
m13_1456 -> m13_25  [key=2, style=dotted];
m13_1456 -> m13_1457  [key=0, style=solid];
m13_1457 -> m13_25  [key=2, style=dotted];
m13_1457 -> m13_1458  [key=0, style=solid];
m13_1451 -> m13_1452  [key=0, style=solid];
m13_1451 -> m13_1455  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1451 -> m13_1451  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1458 -> m13_1450  [key=0, style=bold, color=blue];
m13_2658 -> m13_2659  [key=0, style=solid];
m13_2660 -> m13_61  [key=2, style=dotted];
m13_2660 -> m13_2661  [key=0, style=solid];
m13_2659 -> m13_2660  [key=0, style=solid];
m13_2659 -> m13_835  [key=2, style=dotted];
m13_2661 -> m13_2658  [key=0, style=bold, color=blue];
m13_3384 -> m13_3385  [key=0, style=solid];
m13_3386 -> m13_25  [key=2, style=dotted];
m13_3386 -> m13_3387  [key=0, style=solid];
m13_3385 -> m13_3386  [key=0, style=solid];
m13_3385 -> m13_3388  [key=2, style=dotted];
m13_3385 -> m13_16  [key=2, style=dotted];
m13_3387 -> m13_3384  [key=0, style=bold, color=blue];
m13_3590 -> m13_3591  [key=0, style=solid];
m13_3591 -> m13_47  [key=2, style=dotted];
m13_3591 -> m13_3592  [key=0, style=solid];
m13_3591 -> m13_3593  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3592 -> m13_3590  [key=0, style=bold, color=blue];
m13_2960 -> m13_2961  [key=0, style=solid];
m13_2963 -> m13_24  [key=2, style=dotted];
m13_2963 -> m13_2964  [key=0, style=solid];
m13_2963 -> m13_2965  [key=1, style=dashed, color=darkseagreen4, label=d2];
m13_2962 -> m13_37  [key=2, style=dotted];
m13_2962 -> m13_2963  [key=0, style=solid];
m13_2964 -> m13_25  [key=2, style=dotted];
m13_2964 -> m13_2965  [key=0, style=solid];
m13_2965 -> m13_25  [key=2, style=dotted];
m13_2965 -> m13_2966  [key=0, style=solid];
m13_2961 -> m13_42  [key=2, style=dotted];
m13_2961 -> m13_2962  [key=0, style=solid];
m13_2961 -> m13_2964  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2961 -> m13_2965  [key=1, style=dashed, color=darkseagreen4, label=d1];
m13_2966 -> m13_2960  [key=0, style=bold, color=blue];
m13_3490 -> m13_3491  [key=0, style=solid];
m13_3492 -> m13_24  [key=2, style=dotted];
m13_3492 -> m13_3493  [key=0, style=solid];
m13_3494 -> m13_25  [key=2, style=dotted];
m13_3494 -> m13_3495  [key=0, style=solid];
m13_3491 -> m13_3492  [key=0, style=solid];
m13_3491 -> m13_3491  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3493 -> m13_3494  [key=0, style=solid];
m13_3495 -> m13_3490  [key=0, style=bold, color=blue];
m13_669 -> m13_670  [key=0, style=solid];
m13_671 -> m13_37  [key=2, style=dotted];
m13_671 -> m13_672  [key=0, style=solid];
m13_671 -> m13_673  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_673 -> m13_25  [key=2, style=dotted];
m13_673 -> m13_674  [key=0, style=solid];
m13_670 -> m13_671  [key=0, style=solid];
m13_670 -> m13_675  [key=2, style=dotted];
m13_672 -> m13_673  [key=0, style=solid];
m13_672 -> m13_672  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m13_674 -> m13_669  [key=0, style=bold, color=blue];
m13_2466 -> m13_2467  [key=0, style=solid];
m13_2467 -> m13_79  [key=2, style=dotted];
m13_2467 -> m13_102  [key=2, style=dotted];
m13_2467 -> m13_2468  [key=0, style=solid];
m13_2467 -> m13_2459  [key=2, style=dotted];
m13_2467 -> m13_2460  [key=2, style=dotted];
m13_2467 -> m13_853  [key=2, style=dotted];
m13_2467 -> m13_1009  [key=2, style=dotted];
m13_2467 -> m13_2469  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m13_2468 -> m13_25  [key=2, style=dotted];
m13_2468 -> m13_2469  [key=0, style=solid];
m13_2473 -> m13_25  [key=2, style=dotted];
m13_2473 -> m13_2474  [key=0, style=solid];
m13_2473 -> m13_1009  [key=2, style=dotted];
m13_2474 -> m13_25  [key=2, style=dotted];
m13_2474 -> m13_2475  [key=0, style=solid];
m13_2474 -> m13_853  [key=2, style=dotted];
m13_2469 -> m13_2470  [key=0, style=solid];
m13_2469 -> m13_268  [key=2, style=dotted];
m13_2469 -> m13_269  [key=2, style=dotted];
m13_2469 -> m13_2472  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_2472 -> m13_2473  [key=0, style=solid];
m13_2472 -> m13_2474  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m13_2472 -> m13_2461  [key=2, style=dotted];
m13_2470 -> m13_2472  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m13_2470 -> m13_2471  [key=0, style=solid];
m13_2470 -> m13_270  [key=2, style=dotted];
m13_2471 -> m13_2472  [key=0, style=solid];
m13_2475 -> m13_2466  [key=0, style=bold, color=blue];
m13_1291 -> m13_1292  [key=0, style=solid];
m13_1293 -> m13_24  [key=2, style=dotted];
m13_1293 -> m13_1294  [key=0, style=solid];
m13_1293 -> m13_1295  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m13_1293 -> m13_1296  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m13_1294 -> m13_25  [key=2, style=dotted];
m13_1294 -> m13_1295  [key=0, style=solid];
m13_1295 -> m13_25  [key=2, style=dotted];
m13_1295 -> m13_1296  [key=0, style=solid];
m13_1295 -> m13_1298  [key=2, style=dotted];
m13_1296 -> m13_25  [key=2, style=dotted];
m13_1296 -> m13_1297  [key=0, style=solid];
m13_1292 -> m13_1293  [key=0, style=solid];
m13_1292 -> m13_1292  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1297 -> m13_1291  [key=0, style=bold, color=blue];
m13_2184 -> m13_2221  [key=0, style=solid];
m13_2184 -> m13_2222  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2184 -> m13_2223  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2184 -> m13_2224  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2184 -> m13_2225  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2184 -> m13_2226  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2184 -> m13_2227  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2184 -> m13_2228  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2221 -> m13_2222  [key=0, style=solid];
m13_2222 -> m13_2223  [key=0, style=solid];
m13_2223 -> m13_2224  [key=0, style=solid];
m13_2224 -> m13_2225  [key=0, style=solid];
m13_2225 -> m13_2226  [key=0, style=solid];
m13_2226 -> m13_2227  [key=0, style=solid];
m13_2227 -> m13_2228  [key=0, style=solid];
m13_2228 -> m13_2229  [key=0, style=solid];
m13_2229 -> m13_2184  [key=0, style=bold, color=blue];
m13_603 -> m13_604  [key=0, style=solid];
m13_604 -> m13_605  [key=0, style=solid];
m13_604 -> m13_606  [key=0, style=solid];
m13_606 -> m13_607  [key=0, style=solid];
m13_606 -> m13_614  [key=2, style=dotted];
m13_607 -> m13_608  [key=0, style=solid];
m13_607 -> m13_615  [key=2, style=dotted];
m13_608 -> m13_609  [key=0, style=solid];
m13_608 -> m13_616  [key=2, style=dotted];
m13_609 -> m13_610  [key=0, style=solid];
m13_609 -> m13_616  [key=2, style=dotted];
m13_610 -> m13_611  [key=0, style=solid];
m13_610 -> m13_616  [key=2, style=dotted];
m13_611 -> m13_612  [key=0, style=solid];
m13_611 -> m13_616  [key=2, style=dotted];
m13_612 -> m13_613  [key=0, style=solid];
m13_605 -> m13_613  [key=0, style=solid];
m13_613 -> m13_603  [key=0, style=bold, color=blue];
m13_2388 -> m13_2389  [key=0, style=solid];
m13_2390 -> m13_17  [key=2, style=dotted];
m13_2390 -> m13_2391  [key=0, style=solid];
m13_2389 -> m13_2390  [key=0, style=solid];
m13_2389 -> m13_16  [key=2, style=dotted];
m13_2391 -> m13_2388  [key=0, style=bold, color=blue];
m13_1170 -> m13_1171  [key=0, style=solid];
m13_1173 -> m13_24  [key=2, style=dotted];
m13_1173 -> m13_1174  [key=0, style=solid];
m13_1173 -> m13_1175  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_1173 -> m13_1176  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_1172 -> m13_37  [key=2, style=dotted];
m13_1172 -> m13_1173  [key=0, style=solid];
m13_1174 -> m13_25  [key=2, style=dotted];
m13_1174 -> m13_1175  [key=0, style=solid];
m13_1175 -> m13_25  [key=2, style=dotted];
m13_1175 -> m13_1176  [key=0, style=solid];
m13_1176 -> m13_25  [key=2, style=dotted];
m13_1176 -> m13_1177  [key=0, style=solid];
m13_1171 -> m13_1172  [key=0, style=solid];
m13_1171 -> m13_1178  [key=2, style=dotted];
m13_1177 -> m13_1170  [key=0, style=bold, color=blue];
m13_336 -> m13_337  [key=0, style=solid];
m13_338 -> m13_47  [key=2, style=dotted];
m13_338 -> m13_339  [key=0, style=solid];
m13_338 -> m13_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_337 -> m13_338  [key=0, style=solid];
m13_337 -> m13_341  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_337 -> m13_337  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_339 -> m13_336  [key=0, style=bold, color=blue];
m13_2424 -> m13_2425  [key=0, style=solid];
m13_2434 -> m13_47  [key=2, style=dotted];
m13_2434 -> m13_2435  [key=0, style=solid];
m13_2434 -> m13_2438  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2429 -> m13_24  [key=2, style=dotted];
m13_2429 -> m13_2430  [key=0, style=solid];
m13_2429 -> m13_2431  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2429 -> m13_2432  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2429 -> m13_2433  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2430 -> m13_25  [key=2, style=dotted];
m13_2430 -> m13_2431  [key=0, style=solid];
m13_2431 -> m13_25  [key=2, style=dotted];
m13_2431 -> m13_2432  [key=0, style=solid];
m13_2432 -> m13_25  [key=2, style=dotted];
m13_2432 -> m13_2433  [key=0, style=solid];
m13_2433 -> m13_25  [key=2, style=dotted];
m13_2433 -> m13_2435  [key=0, style=solid];
m13_2425 -> m13_2434  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m13_2425 -> m13_2426  [key=0, style=solid];
m13_2427 -> m13_2434  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2427 -> m13_2429  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2427 -> m13_2439  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2427 -> m13_2428  [key=0, style=solid];
m13_2427 -> m13_16  [key=2, style=dotted];
m13_2428 -> m13_2434  [key=0, style=solid];
m13_2428 -> m13_2429  [key=0, style=solid];
m13_2426 -> m13_2427  [key=0, style=solid];
m13_2426 -> m13_2428  [key=1, style=dashed, color=darkseagreen4, label=s1];
m13_2426 -> m13_2436  [key=2, style=dotted];
m13_2426 -> m13_2437  [key=2, style=dotted];
m13_2435 -> m13_2424  [key=0, style=bold, color=blue];
m13_1949 -> m13_1950  [key=0, style=solid];
m13_1956 -> m13_24  [key=2, style=dotted];
m13_1956 -> m13_1957  [key=0, style=solid];
m13_1956 -> m13_1958  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m13_1956 -> m13_1959  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m13_1956 -> m13_1960  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m13_1954 -> m13_79  [key=2, style=dotted];
m13_1954 -> m13_80  [key=2, style=dotted];
m13_1954 -> m13_1955  [key=0, style=solid];
m13_1957 -> m13_25  [key=2, style=dotted];
m13_1957 -> m13_1958  [key=0, style=solid];
m13_1958 -> m13_25  [key=2, style=dotted];
m13_1958 -> m13_1959  [key=0, style=solid];
m13_1959 -> m13_25  [key=2, style=dotted];
m13_1959 -> m13_1960  [key=0, style=solid];
m13_1960 -> m13_25  [key=2, style=dotted];
m13_1960 -> m13_1961  [key=0, style=solid];
m13_1955 -> m13_17  [key=2, style=dotted];
m13_1955 -> m13_1956  [key=0, style=solid];
m13_1950 -> m13_1954  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_1950 -> m13_1951  [key=0, style=solid];
m13_1950 -> m13_1962  [key=2, style=dotted];
m13_1950 -> m13_1952  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_1950 -> m13_1953  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_1953 -> m13_1954  [key=0, style=solid];
m13_1951 -> m13_1953  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_1951 -> m13_1952  [key=0, style=solid];
m13_1951 -> m13_1963  [key=2, style=dotted];
m13_1952 -> m13_1953  [key=0, style=solid];
m13_1961 -> m13_1949  [key=0, style=bold, color=blue];
m13_1138 -> m13_1139  [key=0, style=solid];
m13_1142 -> m13_24  [key=2, style=dotted];
m13_1142 -> m13_1143  [key=0, style=solid];
m13_1140 -> m13_37  [key=2, style=dotted];
m13_1140 -> m13_1142  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1140 -> m13_1141  [key=0, style=solid];
m13_1140 -> m13_1146  [key=2, style=dotted];
m13_1143 -> m13_25  [key=2, style=dotted];
m13_1143 -> m13_1144  [key=0, style=solid];
m13_1141 -> m13_25  [key=2, style=dotted];
m13_1141 -> m13_1142  [key=0, style=solid];
m13_1139 -> m13_1145  [key=2, style=dotted];
m13_1139 -> m13_1140  [key=0, style=solid];
m13_1139 -> m13_1143  [key=1, style=dashed, color=darkseagreen4, label=guid];
m13_1144 -> m13_1138  [key=0, style=bold, color=blue];
m13_2554 -> m13_2555  [key=0, style=solid];
m13_2555 -> m13_2556  [key=0, style=solid];
m13_2556 -> m13_2554  [key=0, style=bold, color=blue];
m13_3129 -> m13_3130  [key=0, style=solid];
m13_3130 -> m13_47  [key=2, style=dotted];
m13_3130 -> m13_3131  [key=0, style=solid];
m13_3130 -> m13_3132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3131 -> m13_3129  [key=0, style=bold, color=blue];
m13_1050 -> m13_1051  [key=0, style=solid];
m13_1051 -> m13_37  [key=2, style=dotted];
m13_1051 -> m13_1052  [key=0, style=solid];
m13_1051 -> m13_1054  [key=2, style=dotted];
m13_1052 -> m13_25  [key=2, style=dotted];
m13_1052 -> m13_1053  [key=0, style=solid];
m13_1053 -> m13_1050  [key=0, style=bold, color=blue];
m13_2375 -> m13_2376  [key=0, style=solid];
m13_2376 -> m13_2378  [key=2, style=dotted];
m13_2376 -> m13_2377  [key=0, style=solid];
m13_2377 -> m13_2375  [key=0, style=bold, color=blue];
m13_2693 -> m13_2694  [key=0, style=solid];
m13_2696 -> m13_17  [key=2, style=dotted];
m13_2696 -> m13_2697  [key=0, style=solid];
m13_2695 -> m13_2696  [key=0, style=solid];
m13_2695 -> m13_16  [key=2, style=dotted];
m13_2694 -> m13_2695  [key=0, style=solid];
m13_2694 -> m13_2698  [key=2, style=dotted];
m13_2697 -> m13_2693  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_0  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=2, style=dotted];
m13_6 -> m13_4  [key=0, style=bold, color=blue];
m13_2412 -> m13_2413  [key=0, style=solid];
m13_2419 -> m13_25  [key=2, style=dotted];
m13_2419 -> m13_2420  [key=0, style=solid];
m13_2420 -> m13_25  [key=2, style=dotted];
m13_2420 -> m13_2421  [key=0, style=solid];
m13_2421 -> m13_25  [key=2, style=dotted];
m13_2421 -> m13_2422  [key=0, style=solid];
m13_2418 -> m13_2419  [key=0, style=solid];
m13_2418 -> m13_2420  [key=1, style=dashed, color=darkseagreen4, label=z];
m13_2418 -> m13_2421  [key=1, style=dashed, color=darkseagreen4, label=z];
m13_2418 -> m13_2423  [key=2, style=dotted];
m13_2414 -> m13_1048  [key=2, style=dotted];
m13_2414 -> m13_2415  [key=0, style=solid];
m13_2414 -> m13_437  [key=2, style=dotted];
m13_2413 -> m13_2418  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m13_2413 -> m13_2414  [key=0, style=solid];
m13_2413 -> m13_270  [key=2, style=dotted];
m13_2413 -> m13_2415  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m13_2417 -> m13_2418  [key=0, style=solid];
m13_2417 -> m13_268  [key=2, style=dotted];
m13_2417 -> m13_269  [key=2, style=dotted];
m13_2415 -> m13_2416  [key=0, style=solid];
m13_2416 -> m13_2417  [key=0, style=solid];
m13_2416 -> m13_2416  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2422 -> m13_2412  [key=0, style=bold, color=blue];
m13_1104 -> m13_1105  [key=0, style=solid];
m13_1109 -> m13_24  [key=2, style=dotted];
m13_1109 -> m13_1110  [key=0, style=solid];
m13_1109 -> m13_1111  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1109 -> m13_1112  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1110 -> m13_25  [key=2, style=dotted];
m13_1110 -> m13_1111  [key=0, style=solid];
m13_1111 -> m13_25  [key=2, style=dotted];
m13_1111 -> m13_1112  [key=0, style=solid];
m13_1112 -> m13_25  [key=2, style=dotted];
m13_1112 -> m13_1113  [key=0, style=solid];
m13_1108 -> m13_17  [key=2, style=dotted];
m13_1108 -> m13_1109  [key=0, style=solid];
m13_1106 -> m13_3124  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m13_1106 -> m13_1107  [key=0, style=solid];
m13_1105 -> m13_1109  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1105 -> m13_1108  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1105 -> m13_1106  [key=0, style=solid];
m13_1105 -> m13_1114  [key=2, style=dotted];
m13_1105 -> m13_16  [key=2, style=dotted];
m13_1107 -> m13_1108  [key=0, style=solid];
m13_1113 -> m13_1104  [key=0, style=bold, color=blue];
m13_1592 -> m13_1593  [key=0, style=solid];
m13_1595 -> m13_24  [key=2, style=dotted];
m13_1595 -> m13_1596  [key=0, style=solid];
m13_1595 -> m13_668  [key=2, style=dotted];
m13_1595 -> m13_1597  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1595 -> m13_1598  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1595 -> m13_1599  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_1597 -> m13_25  [key=2, style=dotted];
m13_1597 -> m13_1598  [key=0, style=solid];
m13_1598 -> m13_25  [key=2, style=dotted];
m13_1598 -> m13_1599  [key=0, style=solid];
m13_1599 -> m13_25  [key=2, style=dotted];
m13_1599 -> m13_1600  [key=0, style=solid];
m13_1594 -> m13_364  [key=2, style=dotted];
m13_1594 -> m13_1595  [key=0, style=solid];
m13_1596 -> m13_1597  [key=0, style=solid];
m13_1596 -> m13_695  [key=2, style=dotted];
m13_1593 -> m13_1594  [key=0, style=solid];
m13_1593 -> m13_1593  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1600 -> m13_1592  [key=0, style=bold, color=blue];
m13_223 -> m13_224  [key=0, style=solid];
m13_230 -> m13_24  [key=2, style=dotted];
m13_230 -> m13_231  [key=0, style=solid];
m13_230 -> m13_232  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_231 -> m13_25  [key=2, style=dotted];
m13_231 -> m13_232  [key=0, style=solid];
m13_232 -> m13_25  [key=2, style=dotted];
m13_232 -> m13_233  [key=0, style=solid];
m13_229 -> m13_17  [key=2, style=dotted];
m13_229 -> m13_230  [key=0, style=solid];
m13_228 -> m13_230  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_228 -> m13_229  [key=0, style=solid];
m13_228 -> m13_16  [key=2, style=dotted];
m13_224 -> m13_228  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_224 -> m13_225  [key=0, style=solid];
m13_224 -> m13_234  [key=2, style=dotted];
m13_224 -> m13_226  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_224 -> m13_227  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_227 -> m13_228  [key=0, style=solid];
m13_225 -> m13_226  [key=0, style=solid];
m13_226 -> m13_227  [key=0, style=solid];
m13_226 -> m13_222  [key=2, style=dotted];
m13_226 -> m13_221  [key=2, style=dotted];
m13_233 -> m13_223  [key=0, style=bold, color=blue];
m13_2942 -> m13_2943  [key=0, style=solid];
m13_2948 -> m13_24  [key=2, style=dotted];
m13_2948 -> m13_2949  [key=0, style=solid];
m13_2948 -> m13_2950  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_2949 -> m13_25  [key=2, style=dotted];
m13_2949 -> m13_2950  [key=0, style=solid];
m13_2950 -> m13_25  [key=2, style=dotted];
m13_2950 -> m13_2951  [key=0, style=solid];
m13_2947 -> m13_2948  [key=0, style=solid];
m13_2947 -> m13_2947  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2946 -> m13_2947  [key=0, style=solid];
m13_2944 -> m13_2946  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m13_2944 -> m13_2945  [key=0, style=solid];
m13_2944 -> m13_2952  [key=2, style=dotted];
m13_2945 -> m13_2946  [key=0, style=solid];
m13_2943 -> m13_2944  [key=0, style=solid];
m13_2951 -> m13_2942  [key=0, style=bold, color=blue];
m13_1423 -> m13_1424  [key=0, style=solid];
m13_1430 -> m13_24  [key=2, style=dotted];
m13_1430 -> m13_1431  [key=0, style=solid];
m13_1430 -> m13_1432  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m13_1430 -> m13_1433  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m13_1430 -> m13_1434  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m13_1432 -> m13_25  [key=2, style=dotted];
m13_1432 -> m13_1433  [key=0, style=solid];
m13_1432 -> m13_1437  [key=2, style=dotted];
m13_1433 -> m13_25  [key=2, style=dotted];
m13_1433 -> m13_1434  [key=0, style=solid];
m13_1433 -> m13_1437  [key=2, style=dotted];
m13_1434 -> m13_25  [key=2, style=dotted];
m13_1434 -> m13_1435  [key=0, style=solid];
m13_1434 -> m13_1437  [key=2, style=dotted];
m13_1429 -> m13_25  [key=2, style=dotted];
m13_1429 -> m13_1430  [key=0, style=solid];
m13_1425 -> m13_100  [key=2, style=dotted];
m13_1425 -> m13_1426  [key=0, style=solid];
m13_1426 -> m13_42  [key=2, style=dotted];
m13_1426 -> m13_1427  [key=0, style=solid];
m13_1427 -> m13_42  [key=2, style=dotted];
m13_1427 -> m13_1428  [key=0, style=solid];
m13_1428 -> m13_1430  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1428 -> m13_1429  [key=0, style=solid];
m13_1428 -> m13_16  [key=2, style=dotted];
m13_1431 -> m13_1432  [key=0, style=solid];
m13_1431 -> m13_695  [key=2, style=dotted];
m13_1424 -> m13_1432  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1424 -> m13_1433  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1424 -> m13_1434  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1424 -> m13_1425  [key=0, style=solid];
m13_1424 -> m13_1426  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1424 -> m13_1427  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1424 -> m13_1428  [key=1, style=dashed, color=darkseagreen4, label=o];
m13_1424 -> m13_1436  [key=2, style=dotted];
m13_1435 -> m13_1423  [key=0, style=bold, color=blue];
m13_2877 -> m13_2878  [key=0, style=solid];
m13_2881 -> m13_24  [key=2, style=dotted];
m13_2881 -> m13_2882  [key=0, style=solid];
m13_2880 -> m13_37  [key=2, style=dotted];
m13_2880 -> m13_2881  [key=0, style=solid];
m13_2882 -> m13_25  [key=2, style=dotted];
m13_2882 -> m13_2883  [key=0, style=solid];
m13_2879 -> m13_2880  [key=0, style=solid];
m13_2879 -> m13_2882  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_2879 -> m13_1608  [key=2, style=dotted];
m13_2878 -> m13_2879  [key=0, style=solid];
m13_2878 -> m13_2878  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m13_2883 -> m13_2877  [key=0, style=bold, color=blue];
m13_3807 -> m13_3808  [key=0, style=solid];
m13_3808 -> m13_3809  [key=0, style=solid];
m13_3809 -> m13_3807  [key=0, style=bold, color=blue];
m13_1517 -> m13_1518  [key=0, style=solid];
m13_1519 -> m13_24  [key=2, style=dotted];
m13_1519 -> m13_1520  [key=0, style=solid];
m13_1521 -> m13_24  [key=2, style=dotted];
m13_1521 -> m13_1522  [key=0, style=solid];
m13_1521 -> m13_1523  [key=1, style=dashed, color=darkseagreen4, label=n];
m13_1521 -> m13_1524  [key=1, style=dashed, color=darkseagreen4, label=n];
m13_1521 -> m13_1525  [key=1, style=dashed, color=darkseagreen4, label=n];
m13_1521 -> m13_1526  [key=1, style=dashed, color=darkseagreen4, label=n];
m13_1520 -> m13_25  [key=2, style=dotted];
m13_1520 -> m13_1521  [key=0, style=solid];
m13_1522 -> m13_25  [key=2, style=dotted];
m13_1522 -> m13_1145  [key=2, style=dotted];
m13_1522 -> m13_1523  [key=0, style=solid];
m13_1523 -> m13_25  [key=2, style=dotted];
m13_1523 -> m13_1145  [key=2, style=dotted];
m13_1523 -> m13_1524  [key=0, style=solid];
m13_1524 -> m13_25  [key=2, style=dotted];
m13_1524 -> m13_1525  [key=0, style=solid];
m13_1525 -> m13_25  [key=2, style=dotted];
m13_1525 -> m13_1526  [key=0, style=solid];
m13_1526 -> m13_25  [key=2, style=dotted];
m13_1526 -> m13_1527  [key=0, style=solid];
m13_1518 -> m13_1519  [key=0, style=solid];
m13_1518 -> m13_1521  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1518 -> m13_1518  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1527 -> m13_1517  [key=0, style=bold, color=blue];
m13_3706 -> m13_3707  [key=0, style=solid];
m13_3709 -> m13_24  [key=2, style=dotted];
m13_3709 -> m13_3710  [key=0, style=solid];
m13_3709 -> m13_3711  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_3707 -> m13_37  [key=2, style=dotted];
m13_3707 -> m13_100  [key=2, style=dotted];
m13_3707 -> m13_3709  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3707 -> m13_3708  [key=0, style=solid];
m13_3707 -> m13_3713  [key=2, style=dotted];
m13_3708 -> m13_25  [key=2, style=dotted];
m13_3708 -> m13_3709  [key=0, style=solid];
m13_3710 -> m13_25  [key=2, style=dotted];
m13_3710 -> m13_3711  [key=0, style=solid];
m13_3710 -> m13_3713  [key=2, style=dotted];
m13_3710 -> m13_3714  [key=2, style=dotted];
m13_3711 -> m13_25  [key=2, style=dotted];
m13_3711 -> m13_3712  [key=0, style=solid];
m13_3711 -> m13_3713  [key=2, style=dotted];
m13_3711 -> m13_3714  [key=2, style=dotted];
m13_3712 -> m13_3706  [key=0, style=bold, color=blue];
m13_2576 -> m13_2577  [key=0, style=solid];
m13_2583 -> m13_37  [key=2, style=dotted];
m13_2583 -> m13_2584  [key=0, style=solid];
m13_2587 -> m13_37  [key=2, style=dotted];
m13_2587 -> m13_2588  [key=0, style=solid];
m13_2585 -> m13_25  [key=2, style=dotted];
m13_2585 -> m13_2586  [key=0, style=solid];
m13_2586 -> m13_25  [key=2, style=dotted];
m13_2586 -> m13_2587  [key=0, style=solid];
m13_2589 -> m13_25  [key=2, style=dotted];
m13_2589 -> m13_2590  [key=0, style=solid];
m13_2590 -> m13_25  [key=2, style=dotted];
m13_2590 -> m13_2591  [key=0, style=solid];
m13_2577 -> m13_2583  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m13_2577 -> m13_2578  [key=0, style=solid];
m13_2577 -> m13_2592  [key=2, style=dotted];
m13_2577 -> m13_2579  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m13_2582 -> m13_2583  [key=0, style=solid];
m13_2584 -> m13_2585  [key=0, style=solid];
m13_2584 -> m13_2586  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_2584 -> m13_2594  [key=2, style=dotted];
m13_2580 -> m13_2587  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m13_2580 -> m13_2582  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m13_2580 -> m13_2581  [key=0, style=solid];
m13_2580 -> m13_2592  [key=2, style=dotted];
m13_2588 -> m13_2589  [key=0, style=solid];
m13_2588 -> m13_2590  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_2588 -> m13_2594  [key=2, style=dotted];
m13_2578 -> m13_2579  [key=0, style=solid];
m13_2578 -> m13_2593  [key=2, style=dotted];
m13_2579 -> m13_2580  [key=0, style=solid];
m13_2579 -> m13_2593  [key=2, style=dotted];
m13_2581 -> m13_2582  [key=0, style=solid];
m13_2581 -> m13_2593  [key=2, style=dotted];
m13_2591 -> m13_2576  [key=0, style=bold, color=blue];
m13_1313 -> m13_1314  [key=0, style=solid];
m13_1315 -> m13_24  [key=2, style=dotted];
m13_1315 -> m13_1316  [key=0, style=solid];
m13_1316 -> m13_25  [key=2, style=dotted];
m13_1316 -> m13_1317  [key=0, style=solid];
m13_1314 -> m13_1315  [key=0, style=solid];
m13_1314 -> m13_1314  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1317 -> m13_1313  [key=0, style=bold, color=blue];
m13_3327 -> m13_3328  [key=0, style=solid, color=green];
m13_3328 -> m13_3329  [key=0, style=solid, color=green];
m13_3328 -> m13_100  [key=2, style=dotted, color=green];
m13_3328 -> m13_1001  [key=2, style=dotted, color=green];
m13_3329 -> m13_3330  [key=0, style=solid, color=green];
m13_3329 -> m13_79  [key=2, style=dotted, color=green];
m13_3329 -> m13_102  [key=2, style=dotted, color=green];
m13_3329 -> m13_3333  [key=1, style=dashed, color=green, label=json];
m13_3330 -> m13_3331  [key=0, style=solid, color=green];
m13_3330 -> m13_364  [key=2, style=dotted, color=green];
m13_3330 -> m13_3332  [key=1, style=dashed, color=green, label=o];
m13_3333 -> m13_3334  [key=0, style=solid, color=green];
m13_3333 -> m13_79  [key=2, style=dotted, color=green];
m13_3333 -> m13_196  [key=2, style=dotted, color=green];
m13_3333 -> m13_3335  [key=1, style=dashed, color=green, label=dic2];
m13_3333 -> m13_3336  [key=1, style=dashed, color=green, label=dic2];
m13_3331 -> m13_3332  [key=0, style=solid, color=green];
m13_3331 -> m13_818  [key=2, style=dotted, color=green];
m13_3331 -> m13_1581  [key=2, style=dotted, color=green];
m13_3331 -> m13_3338  [key=2, style=dotted, color=green];
m13_3331 -> m13_3339  [key=2, style=dotted, color=green];
m13_3332 -> m13_3333  [key=0, style=solid, color=green];
m13_3332 -> m13_818  [key=2, style=dotted, color=green];
m13_3332 -> m13_1581  [key=2, style=dotted, color=green];
m13_3332 -> m13_3338  [key=2, style=dotted, color=green];
m13_3332 -> m13_3339  [key=2, style=dotted, color=green];
m13_3334 -> m13_3335  [key=0, style=solid, color=green];
m13_3334 -> m13_25  [key=2, style=dotted, color=green];
m13_3335 -> m13_3336  [key=0, style=solid, color=green];
m13_3335 -> m13_1001  [key=2, style=dotted, color=green];
m13_3335 -> m13_25  [key=2, style=dotted, color=green];
m13_3336 -> m13_3337  [key=0, style=solid, color=green];
m13_3336 -> m13_1001  [key=2, style=dotted, color=green];
m13_3336 -> m13_25  [key=2, style=dotted, color=green];
m13_3337 -> m13_3327  [key=0, style=bold, color=blue];
m13_3982 -> m13_3983  [key=0, style=solid];
m13_3984 -> m13_24  [key=2, style=dotted];
m13_3984 -> m13_3985  [key=0, style=solid];
m13_3984 -> m13_3986  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_3985 -> m13_25  [key=2, style=dotted];
m13_3985 -> m13_3986  [key=0, style=solid];
m13_3986 -> m13_25  [key=2, style=dotted];
m13_3986 -> m13_3987  [key=0, style=solid];
m13_3983 -> m13_3984  [key=0, style=solid];
m13_3983 -> m13_3983  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3987 -> m13_3982  [key=0, style=bold, color=blue];
m13_2607 -> m13_2608  [key=0, style=solid];
m13_2609 -> m13_37  [key=2, style=dotted];
m13_2609 -> m13_2610  [key=0, style=solid];
m13_2610 -> m13_79  [key=2, style=dotted];
m13_2610 -> m13_196  [key=2, style=dotted];
m13_2610 -> m13_2611  [key=0, style=solid];
m13_2611 -> m13_25  [key=2, style=dotted];
m13_2611 -> m13_2612  [key=0, style=solid];
m13_2608 -> m13_2609  [key=0, style=solid];
m13_2608 -> m13_2613  [key=2, style=dotted];
m13_2612 -> m13_2607  [key=0, style=bold, color=blue];
m13_2272 -> m13_2273  [key=0, style=solid];
m13_2275 -> m13_25  [key=2, style=dotted];
m13_2275 -> m13_2276  [key=0, style=solid];
m13_2274 -> m13_2275  [key=0, style=solid];
m13_2274 -> m13_2280  [key=2, style=dotted];
m13_2274 -> m13_2281  [key=2, style=dotted];
m13_2274 -> m13_1195  [key=2, style=dotted];
m13_2273 -> m13_2274  [key=0, style=solid];
m13_2273 -> m13_2277  [key=2, style=dotted];
m13_2273 -> m13_2278  [key=2, style=dotted];
m13_2273 -> m13_2279  [key=2, style=dotted];
m13_2276 -> m13_2272  [key=0, style=bold, color=blue];
m13_2861 -> m13_2862  [key=0, style=solid];
m13_2869 -> m13_25  [key=2, style=dotted];
m13_2869 -> m13_2870  [key=0, style=solid];
m13_2868 -> m13_2869  [key=0, style=solid];
m13_2868 -> m13_2876  [key=2, style=dotted];
m13_2865 -> m13_2872  [key=2, style=dotted];
m13_2865 -> m13_2866  [key=0, style=solid];
m13_2865 -> m13_2867  [key=1, style=dashed, color=darkseagreen4, label=jw];
m13_2864 -> m13_2868  [key=1, style=dashed, color=darkseagreen4, label=sw];
m13_2864 -> m13_2871  [key=2, style=dotted];
m13_2864 -> m13_2865  [key=0, style=solid];
m13_2867 -> m13_2868  [key=0, style=solid];
m13_2867 -> m13_2875  [key=2, style=dotted];
m13_2866 -> m13_2867  [key=0, style=solid];
m13_2866 -> m13_2873  [key=2, style=dotted];
m13_2866 -> m13_2874  [key=2, style=dotted];
m13_2863 -> m13_2864  [key=0, style=solid];
m13_2863 -> m13_2866  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2863 -> m13_666  [key=2, style=dotted];
m13_2862 -> m13_2863  [key=0, style=solid];
m13_2870 -> m13_2861  [key=0, style=bold, color=blue];
m13_2022 -> m13_2025  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_2022 -> m13_2023  [key=0, style=solid];
m13_2026 -> m13_2026  [key=1, style=dashed, color=darkseagreen4, label=entry];
m13_2026 -> m13_2025  [key=0, style=solid];
m13_2025 -> m13_2026  [key=0, style=solid];
m13_2025 -> m13_2027  [key=0, style=solid];
m13_2023 -> m13_2025  [key=0, style=solid];
m13_2023 -> m13_2024  [key=0, style=solid];
m13_2024 -> m13_2027  [key=0, style=solid];
m13_2027 -> m13_2022  [key=0, style=bold, color=blue];
m13_2480 -> m13_2481  [key=0, style=solid];
m13_2482 -> m13_17  [key=2, style=dotted];
m13_2482 -> m13_2483  [key=0, style=solid];
m13_2481 -> m13_2482  [key=0, style=solid];
m13_2481 -> m13_2484  [key=2, style=dotted];
m13_2481 -> m13_16  [key=2, style=dotted];
m13_2483 -> m13_2480  [key=0, style=bold, color=blue];
m13_1069 -> m13_1070  [key=0, style=solid];
m13_1071 -> m13_24  [key=2, style=dotted];
m13_1071 -> m13_1072  [key=0, style=solid];
m13_1071 -> m13_1073  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1071 -> m13_1074  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1071 -> m13_1075  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1071 -> m13_1076  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1071 -> m13_1077  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m13_1072 -> m13_25  [key=2, style=dotted];
m13_1072 -> m13_1073  [key=0, style=solid];
m13_1073 -> m13_25  [key=2, style=dotted];
m13_1073 -> m13_1074  [key=0, style=solid];
m13_1074 -> m13_25  [key=2, style=dotted];
m13_1074 -> m13_1075  [key=0, style=solid];
m13_1075 -> m13_25  [key=2, style=dotted];
m13_1075 -> m13_1076  [key=0, style=solid];
m13_1076 -> m13_25  [key=2, style=dotted];
m13_1076 -> m13_1077  [key=0, style=solid];
m13_1077 -> m13_25  [key=2, style=dotted];
m13_1077 -> m13_1078  [key=0, style=solid];
m13_1070 -> m13_1071  [key=0, style=solid];
m13_1070 -> m13_1070  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1078 -> m13_1069  [key=0, style=bold, color=blue];
m13_917 -> m13_918  [key=0, style=solid];
m13_920 -> m13_24  [key=2, style=dotted];
m13_920 -> m13_921  [key=0, style=solid];
m13_920 -> m13_922  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_918 -> m13_37  [key=2, style=dotted];
m13_918 -> m13_919  [key=0, style=solid];
m13_918 -> m13_924  [key=2, style=dotted];
m13_919 -> m13_25  [key=2, style=dotted];
m13_919 -> m13_920  [key=0, style=solid];
m13_921 -> m13_25  [key=2, style=dotted];
m13_921 -> m13_922  [key=0, style=solid];
m13_922 -> m13_25  [key=2, style=dotted];
m13_922 -> m13_923  [key=0, style=solid];
m13_923 -> m13_917  [key=0, style=bold, color=blue];
m13_184 -> m13_185  [key=0, style=solid];
m13_187 -> m13_79  [key=2, style=dotted];
m13_187 -> m13_102  [key=2, style=dotted];
m13_187 -> m13_188  [key=0, style=solid];
m13_187 -> m13_195  [key=2, style=dotted];
m13_190 -> m13_79  [key=2, style=dotted];
m13_190 -> m13_196  [key=2, style=dotted];
m13_190 -> m13_191  [key=0, style=solid];
m13_190 -> m13_195  [key=2, style=dotted];
m13_188 -> m13_25  [key=2, style=dotted];
m13_188 -> m13_189  [key=0, style=solid];
m13_191 -> m13_25  [key=2, style=dotted];
m13_191 -> m13_192  [key=0, style=solid];
m13_186 -> m13_100  [key=2, style=dotted];
m13_186 -> m13_42  [key=2, style=dotted];
m13_186 -> m13_187  [key=0, style=solid];
m13_186 -> m13_194  [key=2, style=dotted];
m13_189 -> m13_190  [key=0, style=solid];
m13_189 -> m13_189  [key=3, color=darkorchid, style=bold, label="Local variable string deserializeJson"];
m13_185 -> m13_186  [key=0, style=solid];
m13_185 -> m13_193  [key=2, style=dotted];
m13_192 -> m13_184  [key=0, style=bold, color=blue];
m13_2392 -> m13_2393  [key=0, style=solid];
m13_2394 -> m13_25  [key=2, style=dotted];
m13_2394 -> m13_2395  [key=0, style=solid];
m13_2395 -> m13_25  [key=2, style=dotted];
m13_2395 -> m13_2396  [key=0, style=solid];
m13_2396 -> m13_25  [key=2, style=dotted];
m13_2396 -> m13_2397  [key=0, style=solid];
m13_2397 -> m13_25  [key=2, style=dotted];
m13_2397 -> m13_2398  [key=0, style=solid];
m13_2393 -> m13_2394  [key=0, style=solid];
m13_2393 -> m13_2395  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2393 -> m13_2396  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2393 -> m13_2397  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2393 -> m13_835  [key=2, style=dotted];
m13_2398 -> m13_2392  [key=0, style=bold, color=blue];
m13_703 -> m13_704  [key=0, style=solid];
m13_705 -> m13_24  [key=2, style=dotted];
m13_705 -> m13_706  [key=0, style=solid];
m13_705 -> m13_707  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_705 -> m13_708  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_705 -> m13_709  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_707 -> m13_25  [key=2, style=dotted];
m13_707 -> m13_708  [key=0, style=solid];
m13_709 -> m13_25  [key=2, style=dotted];
m13_709 -> m13_710  [key=0, style=solid];
m13_704 -> m13_705  [key=0, style=solid];
m13_704 -> m13_699  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_706 -> m13_707  [key=0, style=solid];
m13_706 -> m13_695  [key=2, style=dotted];
m13_708 -> m13_709  [key=0, style=solid];
m13_708 -> m13_695  [key=2, style=dotted];
m13_710 -> m13_703  [key=0, style=bold, color=blue];
m13_977 -> m13_978  [key=0, style=solid];
m13_983 -> m13_24  [key=2, style=dotted];
m13_983 -> m13_984  [key=0, style=solid];
m13_983 -> m13_985  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m13_983 -> m13_986  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m13_986 -> m13_25  [key=2, style=dotted];
m13_986 -> m13_987  [key=0, style=solid];
m13_985 -> m13_25  [key=2, style=dotted];
m13_985 -> m13_986  [key=0, style=solid];
m13_984 -> m13_25  [key=2, style=dotted];
m13_984 -> m13_985  [key=0, style=solid];
m13_978 -> m13_983  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_978 -> m13_978  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_978 -> m13_979  [key=0, style=solid];
m13_978 -> m13_980  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_978 -> m13_982  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_982 -> m13_983  [key=0, style=solid];
m13_982 -> m13_985  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m13_982 -> m13_974  [key=2, style=dotted];
m13_982 -> m13_975  [key=2, style=dotted];
m13_982 -> m13_976  [key=2, style=dotted];
m13_980 -> m13_986  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m13_980 -> m13_981  [key=0, style=solid];
m13_980 -> m13_989  [key=2, style=dotted];
m13_979 -> m13_980  [key=0, style=solid];
m13_979 -> m13_988  [key=2, style=dotted];
m13_981 -> m13_982  [key=0, style=solid];
m13_981 -> m13_813  [key=2, style=dotted];
m13_987 -> m13_977  [key=0, style=bold, color=blue];
m13_3813 -> m13_3814  [key=0, style=solid];
m13_3814 -> m13_3782  [key=2, style=dotted];
m13_3814 -> m13_3815  [key=0, style=solid];
m13_3815 -> m13_3813  [key=0, style=bold, color=blue];
m13_952 -> m13_953  [key=0, style=solid];
m13_953 -> m13_47  [key=2, style=dotted];
m13_953 -> m13_954  [key=0, style=solid];
m13_953 -> m13_955  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_954 -> m13_952  [key=0, style=bold, color=blue];
m13_3200 -> m13_3201  [key=0, style=solid];
m13_3201 -> m13_897  [key=2, style=dotted];
m13_3201 -> m13_3202  [key=0, style=solid];
m13_3201 -> m13_3203  [key=2, style=dotted];
m13_3202 -> m13_3200  [key=0, style=bold, color=blue];
m13_770 -> m13_771  [key=0, style=solid];
m13_777 -> m13_17  [key=2, style=dotted];
m13_777 -> m13_778  [key=0, style=solid];
m13_776 -> m13_777  [key=0, style=solid];
m13_776 -> m13_16  [key=2, style=dotted];
m13_771 -> m13_776  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_771 -> m13_772  [key=0, style=solid];
m13_771 -> m13_779  [key=2, style=dotted];
m13_771 -> m13_773  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_771 -> m13_774  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_771 -> m13_775  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m13_775 -> m13_776  [key=0, style=solid];
m13_772 -> m13_773  [key=0, style=solid];
m13_773 -> m13_774  [key=0, style=solid];
m13_774 -> m13_775  [key=0, style=solid];
m13_778 -> m13_770  [key=0, style=bold, color=blue];
m13_328 -> m13_329  [key=0, style=solid];
m13_330 -> m13_24  [key=2, style=dotted];
m13_330 -> m13_331  [key=0, style=solid];
m13_330 -> m13_332  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_330 -> m13_333  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_330 -> m13_334  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_331 -> m13_25  [key=2, style=dotted];
m13_331 -> m13_332  [key=0, style=solid];
m13_332 -> m13_25  [key=2, style=dotted];
m13_332 -> m13_333  [key=0, style=solid];
m13_333 -> m13_25  [key=2, style=dotted];
m13_333 -> m13_334  [key=0, style=solid];
m13_334 -> m13_25  [key=2, style=dotted];
m13_334 -> m13_335  [key=0, style=solid];
m13_329 -> m13_330  [key=0, style=solid];
m13_329 -> m13_329  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_335 -> m13_328  [key=0, style=bold, color=blue];
m13_3923 -> m13_3924  [key=0, style=solid];
m13_3926 -> m13_79  [key=2, style=dotted];
m13_3926 -> m13_3927  [key=0, style=solid];
m13_3926 -> m13_3929  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3927 -> m13_80  [key=2, style=dotted];
m13_3927 -> m13_3928  [key=0, style=solid];
m13_3927 -> m13_3929  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3927 -> m13_3931  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3930 -> m13_25  [key=2, style=dotted];
m13_3930 -> m13_3931  [key=0, style=solid];
m13_3935 -> m13_25  [key=2, style=dotted];
m13_3935 -> m13_3936  [key=0, style=solid];
m13_3928 -> m13_25  [key=2, style=dotted];
m13_3928 -> m13_3929  [key=0, style=solid];
m13_3933 -> m13_25  [key=2, style=dotted];
m13_3933 -> m13_3934  [key=0, style=solid];
m13_3934 -> m13_25  [key=2, style=dotted];
m13_3934 -> m13_3935  [key=0, style=solid];
m13_3934 -> m13_272  [key=2, style=dotted];
m13_3929 -> m13_196  [key=2, style=dotted];
m13_3929 -> m13_3930  [key=0, style=solid];
m13_3925 -> m13_3926  [key=0, style=solid];
m13_3925 -> m13_3850  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3925 -> m13_3931  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m13_3924 -> m13_3927  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3924 -> m13_3930  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3924 -> m13_3935  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3924 -> m13_853  [key=2, style=dotted];
m13_3924 -> m13_3925  [key=0, style=solid];
m13_3924 -> m13_1008  [key=2, style=dotted];
m13_3931 -> m13_3932  [key=0, style=solid];
m13_3931 -> m13_268  [key=2, style=dotted];
m13_3931 -> m13_269  [key=2, style=dotted];
m13_3932 -> m13_3935  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3932 -> m13_3933  [key=0, style=solid];
m13_3932 -> m13_3934  [key=1, style=dashed, color=darkseagreen4, label=v];
m13_3932 -> m13_3239  [key=2, style=dotted];
m13_3936 -> m13_3923  [key=0, style=bold, color=blue];
m13_3613 -> m13_3614  [key=0, style=solid];
m13_3613 -> m13_3615  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
m13_3614 -> m13_3615  [key=0, style=solid];
m13_3615 -> m13_3616  [key=0, style=solid];
m13_3616 -> m13_3613  [key=0, style=bold, color=blue];
m13_4031 -> m13_4033  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m13_4031 -> m13_4032  [key=0, style=solid];
m13_4033 -> m13_974  [key=2, style=dotted];
m13_4033 -> m13_4034  [key=0, style=solid];
m13_4033 -> m13_4036  [key=2, style=dotted];
m13_4033 -> m13_4037  [key=2, style=dotted];
m13_4032 -> m13_2461  [key=2, style=dotted];
m13_4032 -> m13_4033  [key=0, style=solid];
m13_4034 -> m13_4035  [key=0, style=solid];
m13_4035 -> m13_4031  [key=0, style=bold, color=blue];
m13_2849 -> m13_2850  [key=0, style=solid];
m13_2853 -> m13_24  [key=2, style=dotted];
m13_2853 -> m13_2854  [key=0, style=solid];
m13_2853 -> m13_2855  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2853 -> m13_2856  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2853 -> m13_2857  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2853 -> m13_2858  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2854 -> m13_25  [key=2, style=dotted];
m13_2854 -> m13_2855  [key=0, style=solid];
m13_2855 -> m13_25  [key=2, style=dotted];
m13_2855 -> m13_2856  [key=0, style=solid];
m13_2856 -> m13_25  [key=2, style=dotted];
m13_2856 -> m13_2857  [key=0, style=solid];
m13_2857 -> m13_25  [key=2, style=dotted];
m13_2857 -> m13_2858  [key=0, style=solid];
m13_2858 -> m13_25  [key=2, style=dotted];
m13_2858 -> m13_2859  [key=0, style=solid];
m13_2850 -> m13_1145  [key=2, style=dotted];
m13_2850 -> m13_2854  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2850 -> m13_2855  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2850 -> m13_2856  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2850 -> m13_2857  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2850 -> m13_2858  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2850 -> m13_1009  [key=2, style=dotted];
m13_2850 -> m13_2851  [key=0, style=solid];
m13_2850 -> m13_2848  [key=2, style=dotted];
m13_2850 -> m13_2860  [key=2, style=dotted];
m13_2850 -> m13_1608  [key=2, style=dotted];
m13_2852 -> m13_17  [key=2, style=dotted];
m13_2852 -> m13_2853  [key=0, style=solid];
m13_2851 -> m13_2853  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2851 -> m13_2852  [key=0, style=solid];
m13_2851 -> m13_16  [key=2, style=dotted];
m13_2859 -> m13_2849  [key=0, style=bold, color=blue];
m13_129 -> m13_130  [key=0, style=solid];
m13_130 -> m13_24  [key=2, style=dotted];
m13_130 -> m13_131  [key=0, style=solid];
m13_131 -> m13_25  [key=2, style=dotted];
m13_131 -> m13_132  [key=0, style=solid];
m13_133 -> m13_25  [key=2, style=dotted];
m13_133 -> m13_134  [key=0, style=solid];
m13_132 -> m13_133  [key=0, style=solid];
m13_132 -> m13_135  [key=2, style=dotted];
m13_132 -> m13_136  [key=2, style=dotted];
m13_134 -> m13_129  [key=0, style=bold, color=blue];
m13_2731 -> m13_2732  [key=0, style=solid];
m13_2737 -> m13_24  [key=2, style=dotted];
m13_2737 -> m13_2738  [key=0, style=solid];
m13_2737 -> m13_2739  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2737 -> m13_2740  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2737 -> m13_2741  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_2738 -> m13_25  [key=2, style=dotted];
m13_2738 -> m13_2739  [key=0, style=solid];
m13_2739 -> m13_25  [key=2, style=dotted];
m13_2739 -> m13_2740  [key=0, style=solid];
m13_2740 -> m13_25  [key=2, style=dotted];
m13_2740 -> m13_2741  [key=0, style=solid];
m13_2741 -> m13_25  [key=2, style=dotted];
m13_2741 -> m13_2742  [key=0, style=solid];
m13_2736 -> m13_17  [key=2, style=dotted];
m13_2736 -> m13_2737  [key=0, style=solid];
m13_2735 -> m13_2737  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2735 -> m13_2736  [key=0, style=solid];
m13_2735 -> m13_16  [key=2, style=dotted];
m13_2732 -> m13_2738  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2732 -> m13_2739  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2732 -> m13_2735  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2732 -> m13_2733  [key=0, style=solid];
m13_2732 -> m13_2727  [key=2, style=dotted];
m13_2732 -> m13_2734  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_2734 -> m13_2735  [key=0, style=solid];
m13_2734 -> m13_222  [key=2, style=dotted];
m13_2733 -> m13_222  [key=2, style=dotted];
m13_2733 -> m13_2734  [key=0, style=solid];
m13_2742 -> m13_2731  [key=0, style=bold, color=blue];
m13_1656 -> m13_1657  [key=0, style=solid];
m13_1658 -> m13_24  [key=2, style=dotted];
m13_1658 -> m13_1659  [key=0, style=solid];
m13_1660 -> m13_25  [key=2, style=dotted];
m13_1660 -> m13_1661  [key=0, style=solid];
m13_1661 -> m13_25  [key=2, style=dotted];
m13_1661 -> m13_1662  [key=0, style=solid];
m13_1662 -> m13_25  [key=2, style=dotted];
m13_1662 -> m13_1663  [key=0, style=solid];
m13_1657 -> m13_1658  [key=0, style=solid];
m13_1657 -> m13_1657  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1659 -> m13_1660  [key=0, style=solid];
m13_1659 -> m13_1661  [key=1, style=dashed, color=darkseagreen4, label=a];
m13_1659 -> m13_1662  [key=1, style=dashed, color=darkseagreen4, label=a];
m13_1659 -> m13_1664  [key=2, style=dotted];
m13_1663 -> m13_1656  [key=0, style=bold, color=blue];
m13_1560 -> m13_1561  [key=0, style=solid];
m13_1562 -> m13_79  [key=2, style=dotted];
m13_1562 -> m13_196  [key=2, style=dotted];
m13_1562 -> m13_1563  [key=0, style=solid];
m13_1562 -> m13_1564  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1562 -> m13_1565  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1563 -> m13_25  [key=2, style=dotted];
m13_1563 -> m13_1564  [key=0, style=solid];
m13_1564 -> m13_25  [key=2, style=dotted];
m13_1564 -> m13_1565  [key=0, style=solid];
m13_1565 -> m13_25  [key=2, style=dotted];
m13_1565 -> m13_1566  [key=0, style=solid];
m13_1561 -> m13_1562  [key=0, style=solid];
m13_1561 -> m13_1561  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1566 -> m13_1560  [key=0, style=bold, color=blue];
m13_3688 -> m13_3689  [key=0, style=solid];
m13_3694 -> m13_79  [key=2, style=dotted];
m13_3694 -> m13_80  [key=2, style=dotted];
m13_3694 -> m13_3695  [key=0, style=solid];
m13_3694 -> m13_440  [key=2, style=dotted];
m13_3689 -> m13_638  [key=2, style=dotted];
m13_3689 -> m13_1145  [key=2, style=dotted];
m13_3689 -> m13_3690  [key=0, style=solid];
m13_3689 -> m13_3691  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3689 -> m13_3692  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3689 -> m13_3693  [key=1, style=dashed, color=darkseagreen4, label=john];
m13_3690 -> m13_638  [key=2, style=dotted];
m13_3690 -> m13_1145  [key=2, style=dotted];
m13_3690 -> m13_3691  [key=0, style=solid];
m13_3690 -> m13_3692  [key=1, style=dashed, color=darkseagreen4, label=jane];
m13_3690 -> m13_3693  [key=1, style=dashed, color=darkseagreen4, label=jane];
m13_3693 -> m13_42  [key=2, style=dotted];
m13_3693 -> m13_3694  [key=0, style=solid];
m13_3695 -> m13_17  [key=2, style=dotted];
m13_3695 -> m13_3696  [key=0, style=solid];
m13_3691 -> m13_3692  [key=0, style=solid];
m13_3692 -> m13_3693  [key=0, style=solid];
m13_3696 -> m13_3688  [key=0, style=bold, color=blue];
m13_1968 -> m13_1969  [key=0, style=solid];
m13_1970 -> m13_24  [key=2, style=dotted];
m13_1970 -> m13_1971  [key=0, style=solid];
m13_1971 -> m13_25  [key=2, style=dotted];
m13_1971 -> m13_1972  [key=0, style=solid];
m13_1969 -> m13_1970  [key=0, style=solid];
m13_1969 -> m13_1969  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_1972 -> m13_1968  [key=0, style=bold, color=blue];
m13_1747 -> m13_1748  [key=0, style=solid];
m13_1748 -> m13_58  [key=3, color=green, style=bold, label="Local variable string json"];
m13_1748 -> m13_1749  [key=0, style=solid];
m13_1748 -> m13_1752  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1749 -> m13_47  [key=2, style=dotted];
m13_1749 -> m13_1750  [key=0, style=solid];
m13_1749 -> m13_1751  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1750 -> m13_1747  [key=0, style=bold, color=blue];
m13_3988 -> m13_3989  [key=0, style=solid];
m13_3991 -> m13_24  [key=2, style=dotted];
m13_3991 -> m13_3992  [key=0, style=solid];
m13_3990 -> m13_37  [key=2, style=dotted];
m13_3990 -> m13_3991  [key=0, style=solid];
m13_3992 -> m13_25  [key=2, style=dotted];
m13_3992 -> m13_3993  [key=0, style=solid];
m13_3989 -> m13_3990  [key=0, style=solid];
m13_3989 -> m13_3994  [key=2, style=dotted];
m13_3993 -> m13_3988  [key=0, style=bold, color=blue];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_24  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_21 -> m13_24  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_20 -> m13_25  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_22 -> m13_25  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid];
m13_23 -> m13_18  [key=0, style=bold, color=blue];
m13_3783 -> m13_3784  [key=0, style=solid];
m13_3784 -> m13_3782  [key=2, style=dotted];
m13_3784 -> m13_3785  [key=0, style=solid];
m13_3785 -> m13_3783  [key=0, style=bold, color=blue];
m13_1973 -> m13_1974  [key=0, style=solid];
m13_1976 -> m13_1145  [key=2, style=dotted];
m13_1976 -> m13_1977  [key=0, style=solid];
m13_1974 -> m13_1976  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1974 -> m13_1975  [key=0, style=solid];
m13_1974 -> m13_1984  [key=2, style=dotted];
m13_1974 -> m13_1977  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1974 -> m13_1980  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_1975 -> m13_1976  [key=0, style=solid];
m13_1975 -> m13_1985  [key=2, style=dotted];
m13_1977 -> m13_1978  [key=0, style=solid];
m13_1977 -> m13_1986  [key=2, style=dotted];
m13_1978 -> m13_732  [key=2, style=dotted];
m13_1978 -> m13_1979  [key=0, style=solid];
m13_1978 -> m13_1980  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_1978 -> m13_1981  [key=1, style=dashed, color=darkseagreen4, label=ms];
m13_1982 -> m13_816  [key=2, style=dotted];
m13_1982 -> m13_1983  [key=0, style=solid];
m13_1980 -> m13_814  [key=2, style=dotted];
m13_1980 -> m13_1981  [key=0, style=solid];
m13_1979 -> m13_1980  [key=0, style=solid];
m13_1979 -> m13_813  [key=2, style=dotted];
m13_1981 -> m13_815  [key=2, style=dotted];
m13_1981 -> m13_1982  [key=0, style=solid];
m13_1983 -> m13_1973  [key=0, style=bold, color=blue];
m13_3661 -> m13_3662  [key=0, style=solid];
m13_3663 -> m13_79  [key=2, style=dotted];
m13_3663 -> m13_3664  [key=0, style=solid];
m13_3666 -> m13_25  [key=2, style=dotted];
m13_3666 -> m13_3667  [key=0, style=solid];
m13_3664 -> m13_731  [key=2, style=dotted];
m13_3664 -> m13_3665  [key=0, style=solid];
m13_3662 -> m13_3663  [key=0, style=solid];
m13_3662 -> m13_268  [key=2, style=dotted];
m13_3662 -> m13_269  [key=2, style=dotted];
m13_3662 -> m13_3665  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_3665 -> m13_3666  [key=0, style=solid];
m13_3665 -> m13_2461  [key=2, style=dotted];
m13_3667 -> m13_3661  [key=0, style=bold, color=blue];
m13_892 -> m13_893  [key=0, style=solid];
m13_895 -> m13_25  [key=2, style=dotted];
m13_895 -> m13_896  [key=0, style=solid];
m13_895 -> m13_897  [key=2, style=dotted];
m13_894 -> m13_895  [key=0, style=solid];
m13_894 -> m13_835  [key=2, style=dotted];
m13_893 -> m13_894  [key=0, style=solid];
m13_893 -> m13_855  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m13_896 -> m13_892  [key=0, style=bold, color=blue];
m13_1828 -> m13_1829  [key=0, style=solid];
m13_1829 -> m13_100  [key=2, style=dotted];
m13_1829 -> m13_1830  [key=0, style=solid];
m13_1829 -> m13_1831  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_1829 -> m13_1832  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m13_1830 -> m13_1145  [key=2, style=dotted];
m13_1830 -> m13_1831  [key=0, style=solid];
m13_1830 -> m13_730  [key=2, style=dotted];
m13_1831 -> m13_1145  [key=2, style=dotted];
m13_1831 -> m13_1832  [key=0, style=solid];
m13_1831 -> m13_730  [key=2, style=dotted];
m13_1833 -> m13_17  [key=2, style=dotted];
m13_1833 -> m13_1834  [key=0, style=solid];
m13_1832 -> m13_1833  [key=0, style=solid];
m13_1832 -> m13_16  [key=2, style=dotted];
m13_1834 -> m13_1828  [key=0, style=bold, color=blue];
m13_2512 -> m13_2513  [key=0, style=solid];
m13_2513 -> m13_24  [key=2, style=dotted];
m13_2513 -> m13_2514  [key=0, style=solid];
m13_2514 -> m13_25  [key=2, style=dotted];
m13_2514 -> m13_2515  [key=0, style=solid];
m13_2515 -> m13_2512  [key=0, style=bold, color=blue];
m13_3887 -> m13_3888  [key=0, style=solid];
m13_3890 -> m13_79  [key=2, style=dotted];
m13_3890 -> m13_3891  [key=0, style=solid];
m13_3890 -> m13_3893  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_3891 -> m13_80  [key=2, style=dotted];
m13_3891 -> m13_100  [key=2, style=dotted];
m13_3891 -> m13_3892  [key=0, style=solid];
m13_3891 -> m13_3893  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3894 -> m13_25  [key=2, style=dotted];
m13_3894 -> m13_1581  [key=2, style=dotted];
m13_3894 -> m13_3895  [key=0, style=solid];
m13_3893 -> m13_196  [key=2, style=dotted];
m13_3893 -> m13_3894  [key=0, style=solid];
m13_3892 -> m13_17  [key=2, style=dotted];
m13_3892 -> m13_3893  [key=0, style=solid];
m13_3889 -> m13_3890  [key=0, style=solid];
m13_3889 -> m13_3850  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m13_3888 -> m13_3891  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3888 -> m13_3894  [key=1, style=dashed, color=darkseagreen4, label=dt];
m13_3888 -> m13_853  [key=2, style=dotted];
m13_3888 -> m13_3889  [key=0, style=solid];
m13_3895 -> m13_3887  [key=0, style=bold, color=blue];
m13_2399 -> m13_2400  [key=0, style=solid];
m13_2402 -> m13_24  [key=2, style=dotted];
m13_2402 -> m13_2403  [key=0, style=solid];
m13_2402 -> m13_2404  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2402 -> m13_2405  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2402 -> m13_2406  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_2403 -> m13_25  [key=2, style=dotted];
m13_2403 -> m13_2404  [key=0, style=solid];
m13_2401 -> m13_17  [key=2, style=dotted];
m13_2401 -> m13_2402  [key=0, style=solid];
m13_2400 -> m13_2402  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m13_2400 -> m13_2401  [key=0, style=solid];
m13_2400 -> m13_210  [key=2, style=dotted];
m13_2400 -> m13_16  [key=2, style=dotted];
m13_2404 -> m13_2405  [key=0, style=solid];
m13_2404 -> m13_2408  [key=2, style=dotted];
m13_2404 -> m13_366  [key=2, style=dotted];
m13_2405 -> m13_2406  [key=0, style=solid];
m13_2405 -> m13_2408  [key=2, style=dotted];
m13_2405 -> m13_366  [key=2, style=dotted];
m13_2406 -> m13_2407  [key=0, style=solid];
m13_2406 -> m13_2408  [key=2, style=dotted];
m13_2406 -> m13_366  [key=2, style=dotted];
m13_2407 -> m13_2399  [key=0, style=bold, color=blue];
m13_1601 -> m13_1602  [key=0, style=solid];
m13_1605 -> m13_24  [key=2, style=dotted];
m13_1605 -> m13_1606  [key=0, style=solid];
m13_1603 -> m13_37  [key=2, style=dotted];
m13_1603 -> m13_1605  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1603 -> m13_1604  [key=0, style=solid];
m13_1604 -> m13_25  [key=2, style=dotted];
m13_1604 -> m13_1605  [key=0, style=solid];
m13_1604 -> m13_1609  [key=2, style=dotted];
m13_1606 -> m13_25  [key=2, style=dotted];
m13_1606 -> m13_1607  [key=0, style=solid];
m13_1602 -> m13_1603  [key=0, style=solid];
m13_1602 -> m13_1604  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_1602 -> m13_1606  [key=1, style=dashed, color=darkseagreen4, label=uri];
m13_1602 -> m13_1608  [key=2, style=dotted];
m13_1607 -> m13_1601  [key=0, style=bold, color=blue];
m13_2311 -> m13_2312  [key=0, style=solid];
m13_2320 -> m13_47  [key=2, style=dotted];
m13_2320 -> m13_2321  [key=0, style=solid];
m13_2320 -> m13_2322  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2312 -> m13_100  [key=2, style=dotted];
m13_2312 -> m13_2313  [key=0, style=solid];
m13_2312 -> m13_2314  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_2312 -> m13_2318  [key=1, style=dashed, color=darkseagreen4, label=reference];
m13_2315 -> m13_100  [key=2, style=dotted];
m13_2315 -> m13_2316  [key=0, style=solid];
m13_2315 -> m13_2317  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_2315 -> m13_2318  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_2315 -> m13_2319  [key=1, style=dashed, color=darkseagreen4, label=child];
m13_2319 -> m13_2320  [key=0, style=solid];
m13_2319 -> m13_2323  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2319 -> m13_16  [key=2, style=dotted];
m13_2313 -> m13_2314  [key=0, style=solid];
m13_2313 -> m13_730  [key=2, style=dotted];
m13_2314 -> m13_2315  [key=0, style=solid];
m13_2314 -> m13_730  [key=2, style=dotted];
m13_2318 -> m13_2319  [key=0, style=solid];
m13_2318 -> m13_730  [key=2, style=dotted];
m13_2316 -> m13_2317  [key=0, style=solid];
m13_2316 -> m13_730  [key=2, style=dotted];
m13_2317 -> m13_2318  [key=0, style=solid];
m13_2317 -> m13_730  [key=2, style=dotted];
m13_2321 -> m13_2311  [key=0, style=bold, color=blue];
m13_3295 -> m13_3296  [key=0, style=solid];
m13_3297 -> m13_37  [key=2, style=dotted];
m13_3297 -> m13_3298  [key=0, style=solid];
m13_3298 -> m13_25  [key=2, style=dotted];
m13_3298 -> m13_3299  [key=0, style=solid];
m13_3296 -> m13_3297  [key=0, style=solid];
m13_3296 -> m13_3294  [key=2, style=dotted];
m13_3299 -> m13_3295  [key=0, style=bold, color=blue];
m13_2985 -> m13_2986  [key=0, style=solid];
m13_2987 -> m13_47  [key=2, style=dotted];
m13_2987 -> m13_2988  [key=0, style=solid];
m13_2987 -> m13_2989  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_2986 -> m13_2987  [key=0, style=solid];
m13_2986 -> m13_2990  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2986 -> m13_2986  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2988 -> m13_2985  [key=0, style=bold, color=blue];
m13_3789 -> m13_3790  [key=0, style=solid];
m13_3790 -> m13_3782  [key=2, style=dotted];
m13_3790 -> m13_3791  [key=0, style=solid];
m13_3791 -> m13_3789  [key=0, style=bold, color=blue];
m13_3652 -> m13_3653  [key=0, style=solid];
m13_3655 -> m13_24  [key=2, style=dotted];
m13_3655 -> m13_3656  [key=0, style=solid];
m13_3655 -> m13_3658  [key=1, style=dashed, color=darkseagreen4, label=s2];
m13_3654 -> m13_37  [key=2, style=dotted];
m13_3654 -> m13_3655  [key=0, style=solid];
m13_3656 -> m13_25  [key=2, style=dotted];
m13_3656 -> m13_3657  [key=0, style=solid];
m13_3658 -> m13_3657  [key=0, style=solid];
m13_3658 -> m13_2009  [key=2, style=dotted];
m13_3658 -> m13_366  [key=2, style=dotted];
m13_3653 -> m13_3654  [key=0, style=solid];
m13_3653 -> m13_3656  [key=1, style=dashed, color=darkseagreen4, label=s1];
m13_3653 -> m13_3660  [key=2, style=dotted];
m13_3653 -> m13_3657  [key=1, style=dashed, color=darkseagreen4, label=s1];
m13_3657 -> m13_3658  [key=0, style=solid];
m13_3657 -> m13_3659  [key=0, style=solid];
m13_3659 -> m13_3652  [key=0, style=bold, color=blue];
m13_925 -> m13_926  [key=0, style=solid];
m13_927 -> m13_362  [key=2, style=dotted];
m13_927 -> m13_928  [key=0, style=solid];
m13_926 -> m13_927  [key=0, style=solid];
m13_926 -> m13_926  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_928 -> m13_928  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m13_928 -> m13_929  [key=0, style=solid];
m13_929 -> m13_929  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_929 -> m13_930  [key=0, style=solid];
m13_930 -> m13_925  [key=0, style=bold, color=blue];
m13_3810 -> m13_3811  [key=0, style=solid];
m13_3811 -> m13_3782  [key=2, style=dotted];
m13_3811 -> m13_3812  [key=0, style=solid];
m13_3812 -> m13_3810  [key=0, style=bold, color=blue];
m13_1912 -> m13_1913  [key=0, style=solid];
m13_1913 -> m13_24  [key=2, style=dotted];
m13_1913 -> m13_1914  [key=0, style=solid];
m13_1915 -> m13_24  [key=2, style=dotted];
m13_1915 -> m13_1916  [key=0, style=solid];
m13_1914 -> m13_25  [key=2, style=dotted];
m13_1914 -> m13_1915  [key=0, style=solid];
m13_1914 -> m13_1298  [key=2, style=dotted];
m13_1916 -> m13_25  [key=2, style=dotted];
m13_1916 -> m13_1917  [key=0, style=solid];
m13_1916 -> m13_1298  [key=2, style=dotted];
m13_1917 -> m13_1912  [key=0, style=bold, color=blue];
m13_3637 -> m13_3638  [key=0, style=solid];
m13_3640 -> m13_79  [key=2, style=dotted];
m13_3640 -> m13_102  [key=2, style=dotted];
m13_3640 -> m13_3641  [key=0, style=solid];
m13_3641 -> m13_25  [key=2, style=dotted];
m13_3641 -> m13_3642  [key=0, style=solid];
m13_3638 -> m13_100  [key=2, style=dotted];
m13_3638 -> m13_1001  [key=2, style=dotted];
m13_3638 -> m13_3640  [key=1, style=dashed, color=darkseagreen4, label=dates];
m13_3638 -> m13_3639  [key=0, style=solid];
m13_3638 -> m13_273  [key=2, style=dotted];
m13_3638 -> m13_1009  [key=2, style=dotted];
m13_3639 -> m13_3640  [key=0, style=solid];
m13_3639 -> m13_3641  [key=1, style=dashed, color=darkseagreen4, label=expected];
m13_3639 -> m13_16  [key=2, style=dotted];
m13_3642 -> m13_3637  [key=0, style=bold, color=blue];
m13_3309 -> m13_3310  [key=0, style=solid];
m13_3313 -> m13_24  [key=2, style=dotted];
m13_3313 -> m13_3314  [key=0, style=solid];
m13_3313 -> m13_3315  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_3313 -> m13_3316  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m13_3311 -> m13_79  [key=2, style=dotted];
m13_3311 -> m13_102  [key=2, style=dotted];
m13_3311 -> m13_3313  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3311 -> m13_3312  [key=0, style=solid];
m13_3314 -> m13_25  [key=2, style=dotted];
m13_3314 -> m13_3315  [key=0, style=solid];
m13_3315 -> m13_25  [key=2, style=dotted];
m13_3315 -> m13_3316  [key=0, style=solid];
m13_3315 -> m13_273  [key=2, style=dotted];
m13_3316 -> m13_25  [key=2, style=dotted];
m13_3316 -> m13_3317  [key=0, style=solid];
m13_3316 -> m13_273  [key=2, style=dotted];
m13_3310 -> m13_100  [key=2, style=dotted];
m13_3310 -> m13_3311  [key=0, style=solid];
m13_3310 -> m13_273  [key=2, style=dotted];
m13_3312 -> m13_17  [key=2, style=dotted];
m13_3312 -> m13_3313  [key=0, style=solid];
m13_3317 -> m13_3309  [key=0, style=bold, color=blue];
m13_3207 -> m13_3208  [key=0, style=solid];
m13_3216 -> m13_25  [key=2, style=dotted];
m13_3216 -> m13_3217  [key=0, style=solid];
m13_3217 -> m13_25  [key=2, style=dotted];
m13_3217 -> m13_3218  [key=0, style=solid];
m13_3218 -> m13_25  [key=2, style=dotted];
m13_3218 -> m13_3219  [key=0, style=solid];
m13_3208 -> m13_42  [key=2, style=dotted];
m13_3208 -> m13_3216  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_3208 -> m13_3217  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_3208 -> m13_3218  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_3208 -> m13_3209  [key=0, style=solid];
m13_3208 -> m13_3215  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_3212 -> m13_3216  [key=0, style=solid];
m13_3212 -> m13_3213  [key=0, style=solid];
m13_3212 -> m13_3220  [key=2, style=dotted];
m13_3211 -> m13_3216  [key=0, style=solid];
m13_3211 -> m13_3212  [key=0, style=solid];
m13_3209 -> m13_3212  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_3209 -> m13_3210  [key=0, style=solid];
m13_3209 -> m13_268  [key=2, style=dotted];
m13_3209 -> m13_269  [key=2, style=dotted];
m13_3209 -> m13_3214  [key=1, style=dashed, color=darkseagreen4, label=reader];
m13_3215 -> m13_3211  [key=0, style=solid];
m13_3215 -> m13_222  [key=2, style=dotted];
m13_3213 -> m13_270  [key=2, style=dotted];
m13_3213 -> m13_3214  [key=0, style=solid];
m13_3210 -> m13_3211  [key=0, style=solid];
m13_3214 -> m13_3215  [key=0, style=solid];
m13_3214 -> m13_2461  [key=2, style=dotted];
m13_3219 -> m13_3207  [key=0, style=bold, color=blue];
m13_904 -> m13_905  [key=0, style=solid];
m13_906 -> m13_24  [key=2, style=dotted];
m13_906 -> m13_907  [key=0, style=solid];
m13_906 -> m13_908  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_905 -> m13_37  [key=2, style=dotted];
m13_905 -> m13_906  [key=0, style=solid];
m13_905 -> m13_910  [key=2, style=dotted];
m13_907 -> m13_25  [key=2, style=dotted];
m13_907 -> m13_908  [key=0, style=solid];
m13_908 -> m13_25  [key=2, style=dotted];
m13_908 -> m13_909  [key=0, style=solid];
m13_909 -> m13_904  [key=0, style=bold, color=blue];
m13_2682 -> m13_2683  [key=0, style=solid];
m13_2684 -> m13_24  [key=2, style=dotted];
m13_2684 -> m13_2685  [key=0, style=solid];
m13_2684 -> m13_2686  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m13_2685 -> m13_24  [key=2, style=dotted];
m13_2685 -> m13_2686  [key=0, style=solid];
m13_2686 -> m13_25  [key=2, style=dotted];
m13_2686 -> m13_2687  [key=0, style=solid];
m13_2683 -> m13_2684  [key=0, style=solid];
m13_2683 -> m13_2685  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_2683 -> m13_2683  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_2687 -> m13_2682  [key=0, style=bold, color=blue];
m13_1038 -> m13_1039  [key=0, style=solid];
m13_1041 -> m13_79  [key=2, style=dotted];
m13_1041 -> m13_1042  [key=0, style=solid];
m13_1041 -> m13_1043  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_1041 -> m13_1045  [key=1, style=dashed, color=darkseagreen4, label=settings];
m13_1043 -> m13_80  [key=2, style=dotted];
m13_1043 -> m13_1044  [key=0, style=solid];
m13_1043 -> m13_1045  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1046 -> m13_25  [key=2, style=dotted];
m13_1046 -> m13_1047  [key=0, style=solid];
m13_1044 -> m13_25  [key=2, style=dotted];
m13_1044 -> m13_1045  [key=0, style=solid];
m13_1040 -> m13_1041  [key=0, style=solid];
m13_1040 -> m13_1043  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1040 -> m13_1045  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1042 -> m13_1043  [key=0, style=solid];
m13_1042 -> m13_1048  [key=2, style=dotted];
m13_1042 -> m13_222  [key=2, style=dotted];
m13_1045 -> m13_1046  [key=0, style=solid];
m13_1045 -> m13_1045  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m13_1045 -> m13_1049  [key=2, style=dotted];
m13_1039 -> m13_1046  [key=1, style=dashed, color=darkseagreen4, label=d];
m13_1039 -> m13_853  [key=2, style=dotted];
m13_1039 -> m13_1040  [key=0, style=solid];
m13_1047 -> m13_1038  [key=0, style=bold, color=blue];
m13_211 -> m13_212  [key=0, style=solid];
m13_217 -> m13_24  [key=2, style=dotted];
m13_217 -> m13_218  [key=0, style=solid];
m13_217 -> m13_219  [key=1, style=dashed, color=darkseagreen4, label=c2];
m13_218 -> m13_25  [key=2, style=dotted];
m13_218 -> m13_219  [key=0, style=solid];
m13_219 -> m13_25  [key=2, style=dotted];
m13_219 -> m13_220  [key=0, style=solid];
m13_216 -> m13_17  [key=2, style=dotted];
m13_216 -> m13_217  [key=0, style=solid];
m13_215 -> m13_217  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_215 -> m13_216  [key=0, style=solid];
m13_215 -> m13_16  [key=2, style=dotted];
m13_212 -> m13_215  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_212 -> m13_213  [key=0, style=solid];
m13_212 -> m13_207  [key=2, style=dotted];
m13_212 -> m13_214  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_214 -> m13_215  [key=0, style=solid];
m13_214 -> m13_221  [key=2, style=dotted];
m13_214 -> m13_222  [key=2, style=dotted];
m13_213 -> m13_214  [key=0, style=solid];
m13_220 -> m13_211  [key=0, style=bold, color=blue];
m13_3413 -> m13_3414  [key=0, style=solid];
m13_3415 -> m13_24  [key=2, style=dotted];
m13_3415 -> m13_3416  [key=0, style=solid];
m13_3415 -> m13_3417  [key=1, style=dashed, color=darkseagreen4, label=exception];
m13_3415 -> m13_3418  [key=1, style=dashed, color=darkseagreen4, label=exception];
m13_3418 -> m13_25  [key=2, style=dotted];
m13_3418 -> m13_3419  [key=0, style=solid];
m13_3414 -> m13_3415  [key=0, style=solid];
m13_3414 -> m13_3414  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3416 -> m13_3417  [key=0, style=solid];
m13_3416 -> m13_695  [key=2, style=dotted];
m13_3417 -> m13_3418  [key=0, style=solid];
m13_3417 -> m13_644  [key=2, style=dotted];
m13_3419 -> m13_3413  [key=0, style=bold, color=blue];
m13_309 -> m13_310  [key=0, style=solid];
m13_312 -> m13_24  [key=2, style=dotted];
m13_312 -> m13_313  [key=0, style=solid];
m13_312 -> m13_314  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_312 -> m13_315  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m13_311 -> m13_37  [key=2, style=dotted];
m13_311 -> m13_312  [key=0, style=solid];
m13_313 -> m13_25  [key=2, style=dotted];
m13_313 -> m13_314  [key=0, style=solid];
m13_314 -> m13_25  [key=2, style=dotted];
m13_314 -> m13_315  [key=0, style=solid];
m13_315 -> m13_25  [key=2, style=dotted];
m13_315 -> m13_316  [key=0, style=solid];
m13_310 -> m13_311  [key=0, style=solid];
m13_310 -> m13_313  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_310 -> m13_314  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_310 -> m13_315  [key=1, style=dashed, color=darkseagreen4, label=input];
m13_310 -> m13_317  [key=2, style=dotted];
m13_316 -> m13_309  [key=0, style=bold, color=blue];
m13_1900 -> m13_1901  [key=0, style=solid];
m13_1907 -> m13_24  [key=2, style=dotted];
m13_1907 -> m13_1908  [key=0, style=solid];
m13_1908 -> m13_25  [key=2, style=dotted];
m13_1908 -> m13_1909  [key=0, style=solid];
m13_1906 -> m13_17  [key=2, style=dotted];
m13_1906 -> m13_1907  [key=0, style=solid];
m13_1905 -> m13_1907  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_1905 -> m13_1906  [key=0, style=solid];
m13_1905 -> m13_1897  [key=2, style=dotted];
m13_1901 -> m13_1905  [key=1, style=dashed, color=darkseagreen4, label=g];
m13_1901 -> m13_1902  [key=0, style=solid];
m13_1901 -> m13_1910  [key=2, style=dotted];
m13_1901 -> m13_1903  [key=1, style=dashed, color=darkseagreen4, label=g];
m13_1901 -> m13_1904  [key=1, style=dashed, color=darkseagreen4, label=g];
m13_1904 -> m13_1905  [key=0, style=solid];
m13_1902 -> m13_1903  [key=0, style=solid];
m13_1902 -> m13_1911  [key=2, style=dotted];
m13_1902 -> m13_1891  [key=2, style=dotted];
m13_1903 -> m13_1904  [key=0, style=solid];
m13_1903 -> m13_1911  [key=2, style=dotted];
m13_1903 -> m13_1891  [key=2, style=dotted];
m13_1909 -> m13_1900  [key=0, style=bold, color=blue];
m13_592 -> m13_593  [key=0, style=solid];
m13_592 -> m13_594  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_592 -> m13_595  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_592 -> m13_596  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_592 -> m13_597  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_592 -> m13_598  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m13_593 -> m13_594  [key=0, style=solid];
m13_593 -> m13_600  [key=2, style=dotted];
m13_594 -> m13_595  [key=0, style=solid];
m13_594 -> m13_601  [key=2, style=dotted];
m13_595 -> m13_596  [key=0, style=solid];
m13_595 -> m13_602  [key=2, style=dotted];
m13_596 -> m13_597  [key=0, style=solid];
m13_596 -> m13_602  [key=2, style=dotted];
m13_597 -> m13_598  [key=0, style=solid];
m13_597 -> m13_602  [key=2, style=dotted];
m13_598 -> m13_599  [key=0, style=solid];
m13_598 -> m13_602  [key=2, style=dotted];
m13_599 -> m13_592  [key=0, style=bold, color=blue];
m13_1271 -> m13_1272  [key=0, style=solid];
m13_1272 -> m13_37  [key=2, style=dotted];
m13_1272 -> m13_1273  [key=0, style=solid];
m13_1272 -> m13_1275  [key=2, style=dotted];
m13_1273 -> m13_25  [key=2, style=dotted];
m13_1273 -> m13_1274  [key=0, style=solid];
m13_1274 -> m13_1271  [key=0, style=bold, color=blue];
m13_3673 -> m13_3674  [key=0, style=solid];
m13_3676 -> m13_17  [key=2, style=dotted];
m13_3676 -> m13_3677  [key=0, style=solid];
m13_3675 -> m13_3676  [key=0, style=solid];
m13_3675 -> m13_16  [key=2, style=dotted];
m13_3674 -> m13_2256  [key=2, style=dotted];
m13_3674 -> m13_3675  [key=0, style=solid];
m13_3677 -> m13_3673  [key=0, style=bold, color=blue];
m13_280 -> m13_281  [key=0, style=solid];
m13_282 -> m13_24  [key=2, style=dotted];
m13_282 -> m13_283  [key=0, style=solid];
m13_281 -> m13_37  [key=2, style=dotted];
m13_281 -> m13_25  [key=2, style=dotted];
m13_281 -> m13_282  [key=0, style=solid];
m13_281 -> m13_285  [key=2, style=dotted];
m13_283 -> m13_25  [key=2, style=dotted];
m13_283 -> m13_284  [key=0, style=solid];
m13_284 -> m13_280  [key=0, style=bold, color=blue];
m13_1759 -> m13_1760  [key=0, style=solid];
m13_1760 -> m13_47  [key=2, style=dotted];
m13_1760 -> m13_1761  [key=0, style=solid];
m13_1760 -> m13_1762  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_1761 -> m13_1759  [key=0, style=bold, color=blue];
m13_941 -> m13_942  [key=0, style=solid];
m13_947 -> m13_24  [key=2, style=dotted];
m13_947 -> m13_948  [key=0, style=solid];
m13_947 -> m13_949  [key=1, style=dashed, color=darkseagreen4, label=test2];
m13_945 -> m13_37  [key=2, style=dotted];
m13_945 -> m13_947  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m13_945 -> m13_946  [key=0, style=solid];
m13_948 -> m13_25  [key=2, style=dotted];
m13_948 -> m13_949  [key=0, style=solid];
m13_949 -> m13_25  [key=2, style=dotted];
m13_949 -> m13_950  [key=0, style=solid];
m13_946 -> m13_25  [key=2, style=dotted];
m13_946 -> m13_947  [key=0, style=solid];
m13_942 -> m13_945  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_942 -> m13_948  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_942 -> m13_949  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_942 -> m13_943  [key=0, style=solid];
m13_942 -> m13_951  [key=2, style=dotted];
m13_942 -> m13_944  [key=1, style=dashed, color=darkseagreen4, label=test];
m13_944 -> m13_945  [key=0, style=solid];
m13_943 -> m13_944  [key=0, style=solid];
m13_950 -> m13_941  [key=0, style=bold, color=blue];
m13_3119 -> m13_3120  [key=0, style=solid];
m13_3120 -> m13_24  [key=2, style=dotted];
m13_3120 -> m13_3121  [key=0, style=solid];
m13_3121 -> m13_61  [key=2, style=dotted];
m13_3121 -> m13_3122  [key=0, style=solid];
m13_3122 -> m13_3119  [key=0, style=bold, color=blue];
m13_2715 -> m13_2716  [key=0, style=solid];
m13_2717 -> m13_37  [key=2, style=dotted];
m13_2717 -> m13_2718  [key=0, style=solid];
m13_2718 -> m13_25  [key=2, style=dotted];
m13_2718 -> m13_2719  [key=0, style=solid];
m13_2716 -> m13_2717  [key=0, style=solid];
m13_2716 -> m13_2720  [key=2, style=dotted];
m13_2719 -> m13_2715  [key=0, style=bold, color=blue];
m13_2999 -> m13_3000  [key=0, style=solid];
m13_3001 -> m13_47  [key=2, style=dotted];
m13_3001 -> m13_3002  [key=0, style=solid];
m13_3001 -> m13_3003  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_3000 -> m13_3001  [key=0, style=solid];
m13_3000 -> m13_3004  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_3000 -> m13_2995  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m13_3002 -> m13_2999  [key=0, style=bold, color=blue];
m13_2807 -> m13_2808  [key=0, style=solid];
m13_2808 -> m13_24  [key=2, style=dotted];
m13_2808 -> m13_2809  [key=0, style=solid];
m13_2808 -> m13_2810  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_2808 -> m13_2811  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_2808 -> m13_2812  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_2808 -> m13_2813  [key=1, style=dashed, color=darkseagreen4, label=r];
m13_2813 -> m13_61  [key=2, style=dotted];
m13_2813 -> m13_1581  [key=2, style=dotted];
m13_2813 -> m13_2814  [key=0, style=solid];
m13_2809 -> m13_25  [key=2, style=dotted];
m13_2809 -> m13_2810  [key=0, style=solid];
m13_2809 -> m13_272  [key=2, style=dotted];
m13_2810 -> m13_25  [key=2, style=dotted];
m13_2810 -> m13_2811  [key=0, style=solid];
m13_2810 -> m13_363  [key=2, style=dotted];
m13_2811 -> m13_1581  [key=2, style=dotted];
m13_2811 -> m13_2812  [key=0, style=solid];
m13_2811 -> m13_695  [key=2, style=dotted];
m13_2812 -> m13_1581  [key=2, style=dotted];
m13_2812 -> m13_2813  [key=0, style=solid];
m13_2812 -> m13_695  [key=2, style=dotted];
m13_2814 -> m13_2807  [key=0, style=bold, color=blue];
m13_4092 -> m13_341  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4097 -> m13_964  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4102 -> m13_1654  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4103 -> m13_1681  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4104 -> m13_1688  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4105 -> m13_1695  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4106 -> m13_1702  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4107 -> m13_1709  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4108 -> m13_1716  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4109 -> m13_1723  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4110 -> m13_1730  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4124 -> m13_2323  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4128 -> m13_2439  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4140 -> m13_2990  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4141 -> m13_3004  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4149 -> m13_3513  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4151 -> m13_3611  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4112 -> m13_1752  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4086 -> m13_150  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_4088 -> m13_172  [key=1, style=dashed, color=darkseagreen4, label=c1];
m13_4115 -> m13_1931  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4113 -> m13_1876  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m13_4113 -> m13_1877  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m13_4137 -> m13_2745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m13_4137 -> m13_2744  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m13_4085 -> m13_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired"];
m13_4085 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired"];
m13_4136 -> m13_2729  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m13_4136 -> m13_2728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m13_4139 -> m13_2822  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m13_4142 -> m13_3253  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_4098 -> m13_1406  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m13_4096 -> m13_3355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_4096 -> m13_765  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_4096 -> m13_786  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_4096 -> m13_796  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_4096 -> m13_3361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_4096 -> m13_3362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m13_4145 -> m13_3411  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4146 -> m13_3411  [key=1, style=dashed, color=darkseagreen4, label=s];
m13_4143 -> m13_3268  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_4144 -> m13_3283  [key=1, style=dashed, color=darkseagreen4, label=errors];
m13_4111 -> m13_1744  [key=1, style=dashed, color=darkseagreen4, label=json];
m13_4156 -> m13_4000  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m13_4150 -> m13_3524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m13_4093 -> m13_508  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m13_4101 -> m13_1550  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_4101 -> m13_1544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_4101 -> m13_1545  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_4101 -> m13_1546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_4101 -> m13_1547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m13_4138 -> m13_2798  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_4138 -> m13_2790  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_4138 -> m13_2791  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_4138 -> m13_2792  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_4138 -> m13_2795  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m13_4114 -> m13_1892  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m13_4114 -> m13_1898  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m13_4114 -> m13_1895  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m13_4116 -> m13_1935  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m13_4119 -> m13_1993  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2000  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_1997  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2007  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2003  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2011  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2015  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2019  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2026  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2029  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2033  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2037  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4119 -> m13_2041  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m13_4087 -> m13_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass"];
m13_4090 -> m13_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem"];
m13_4157 -> m13_4057  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DecimalTest"];
m13_4147 -> m13_3471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m13_4117 -> m13_1964  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1"];
m13_4120 -> m13_2054  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2055  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2056  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2057  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2058  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2061  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2062  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2063  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2064  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2065  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2066  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2067  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2068  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2069  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2070  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2071  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2072  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2073  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2074  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2075  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2076  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2077  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2078  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2093  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2094  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2095  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2096  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2097  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2099  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4120 -> m13_2110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m13_4130 -> m13_2555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m13_4154 -> m13_3953  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType"];
m13_4094 -> m13_583  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_584  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_585  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_587  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_590  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_593  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_594  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_595  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_596  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_597  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_598  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_604  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_607  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_608  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_610  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_611  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4094 -> m13_612  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m13_4095 -> m13_741  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m13_4095 -> m13_742  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m13_4095 -> m13_745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m13_4153 -> m13_3779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_4153 -> m13_3773  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_4153 -> m13_3775  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_4153 -> m13_3777  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_4153 -> m13_3802  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_4153 -> m13_3805  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_4153 -> m13_3808  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m13_4123 -> m13_2232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4123 -> m13_2233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4123 -> m13_2234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4123 -> m13_2235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4123 -> m13_2236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4123 -> m13_2237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4123 -> m13_2238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4123 -> m13_2239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4123 -> m13_2240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4123 -> m13_2241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m13_4118 -> m13_1966  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2"];
m13_4122 -> m13_2221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_4122 -> m13_2222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_4122 -> m13_2223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_4122 -> m13_2224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_4122 -> m13_2225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_4122 -> m13_2226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_4122 -> m13_2227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_4122 -> m13_2228  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m13_4089 -> m13_180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver"];
m13_4133 -> m13_2574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m13_4152 -> m13_3681  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor"];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_9  [key=2, style=dotted];
m14_1 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label=o];
m14_1 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label=o];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_10  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_10  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_10  [key=2, style=dotted];
m14_6 -> m14_6  [key=3, color=darkorchid, style=bold, label="Field variable char UnicodeReplacementChar"];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_11  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_12  [key=2, style=dotted];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_11  [key=2, style=dotted];
m14_8 -> m14_0  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid, color=green];
m15_1 -> m15_2  [key=0, style=solid, color=green];
m15_1 -> m15_9  [key=2, style=dotted, color=green];
m15_1 -> n16  [key=2, style=dotted, color=green];
m15_1 -> m15_11  [key=2, style=dotted, color=green];
m15_1 -> m15_4  [key=1, style=dashed, color=green, label=stockholder];
m15_2 -> m15_3  [key=0, style=solid, color=green];
m15_2 -> m15_12  [key=2, style=dotted, color=green];
m15_2 -> m15_13  [key=2, style=dotted, color=green];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_12  [key=2, style=dotted];
m15_4 -> m15_13  [key=2, style=dotted];
m15_4 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label=jsonTypeNameAuto];
m15_3 -> m15_4  [key=0, style=solid, color=green];
m15_3 -> m15_14  [key=2, style=dotted, color=green];
m15_5 -> m15_14  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_12  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_15  [key=2, style=dotted];
m15_7 -> m15_14  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_16  [key=2, style=dotted];
m15_8 -> m15_0  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_6  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_7  [key=2, style=dotted];
m16_3 -> m16_8  [key=2, style=dotted];
m16_3 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_9  [key=2, style=dotted];
m16_5 -> m16_0  [key=0, style=bold, color=blue];
m16_10 -> m16_11  [key=0, style=solid];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_13  [key=2, style=dotted];
m16_11 -> m16_14  [key=2, style=dotted];
m16_12 -> m16_10  [key=0, style=bold, color=blue];
m17_1280 -> m17_1281  [key=0, style=solid];
m17_1281 -> m17_1282  [key=0, style=solid];
m17_1282 -> m17_1280  [key=0, style=bold, color=blue];
m17_138 -> m17_139  [key=0, style=solid];
m17_139 -> m17_140  [key=0, style=solid];
m17_139 -> m17_169  [key=2, style=dotted];
m17_140 -> m17_141  [key=0, style=solid];
m17_140 -> m17_168  [key=0, style=solid];
m17_141 -> m17_142  [key=0, style=solid];
m17_141 -> m17_149  [key=0, style=solid];
m17_141 -> m17_152  [key=0, style=solid];
m17_141 -> m17_155  [key=0, style=solid];
m17_141 -> m17_167  [key=0, style=solid];
m17_142 -> m17_143  [key=0, style=solid];
m17_149 -> m17_150  [key=0, style=solid];
m17_152 -> m17_153  [key=0, style=solid];
m17_155 -> m17_156  [key=0, style=solid];
m17_167 -> m17_168  [key=0, style=solid];
m17_167 -> m17_176  [key=2, style=dotted];
m17_167 -> m17_177  [key=2, style=dotted];
m17_143 -> m17_144  [key=0, style=solid];
m17_144 -> m17_145  [key=0, style=solid];
m17_145 -> m17_146  [key=0, style=solid];
m17_146 -> m17_147  [key=0, style=solid];
m17_147 -> m17_148  [key=0, style=solid];
m17_148 -> m17_168  [key=0, style=solid];
m17_148 -> m17_170  [key=2, style=dotted];
m17_150 -> m17_151  [key=0, style=solid];
m17_151 -> m17_168  [key=0, style=solid];
m17_151 -> m17_171  [key=2, style=dotted];
m17_153 -> m17_154  [key=0, style=solid];
m17_153 -> m17_140  [key=0, style=solid];
m17_153 -> m17_172  [key=2, style=dotted];
m17_154 -> m17_168  [key=0, style=solid];
m17_156 -> m17_157  [key=0, style=solid];
m17_156 -> m17_165  [key=0, style=solid];
m17_156 -> m17_120  [key=2, style=dotted];
m17_157 -> m17_158  [key=0, style=solid];
m17_157 -> m17_173  [key=2, style=dotted];
m17_165 -> m17_166  [key=0, style=solid];
m17_165 -> m17_174  [key=2, style=dotted];
m17_158 -> m17_159  [key=0, style=solid];
m17_158 -> m17_161  [key=0, style=solid];
m17_159 -> m17_160  [key=0, style=solid];
m17_159 -> m17_174  [key=2, style=dotted];
m17_161 -> m17_162  [key=0, style=solid];
m17_161 -> m17_164  [key=0, style=solid];
m17_160 -> m17_168  [key=0, style=solid];
m17_162 -> m17_163  [key=0, style=solid];
m17_162 -> m17_175  [key=2, style=dotted];
m17_164 -> m17_168  [key=0, style=solid];
m17_164 -> m17_176  [key=2, style=dotted];
m17_164 -> m17_177  [key=2, style=dotted];
m17_163 -> m17_168  [key=0, style=solid];
m17_166 -> m17_168  [key=0, style=solid];
m17_168 -> m17_138  [key=0, style=bold, color=blue];
m17_932 -> m17_963  [key=0, style=solid];
m17_963 -> m17_964  [key=0, style=solid];
m17_963 -> m17_997  [key=0, style=solid];
m17_963 -> m17_366  [key=2, style=dotted];
m17_964 -> m17_965  [key=0, style=solid];
m17_964 -> m17_173  [key=2, style=dotted];
m17_997 -> m17_998  [key=0, style=solid];
m17_997 -> m17_177  [key=2, style=dotted];
m17_965 -> m17_966  [key=0, style=solid];
m17_965 -> m17_989  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_966 -> m17_967  [key=0, style=solid];
m17_966 -> m17_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m17_989 -> m17_990  [key=0, style=solid];
m17_989 -> m17_669  [key=2, style=dotted];
m17_967 -> m17_968  [key=0, style=solid];
m17_967 -> m17_989  [key=0, style=solid];
m17_968 -> m17_969  [key=0, style=solid];
m17_968 -> m17_975  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_968 -> m17_977  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_968 -> m17_980  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_968 -> m17_983  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_968 -> m17_986  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_968 -> m17_988  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_969 -> m17_970  [key=0, style=solid];
m17_969 -> m17_975  [key=0, style=solid];
m17_975 -> m17_976  [key=0, style=solid];
m17_975 -> m17_977  [key=0, style=solid];
m17_975 -> m17_833  [key=2, style=dotted];
m17_977 -> m17_978  [key=0, style=solid];
m17_977 -> m17_980  [key=0, style=solid];
m17_980 -> m17_981  [key=0, style=solid];
m17_980 -> m17_983  [key=0, style=solid];
m17_983 -> m17_984  [key=0, style=solid];
m17_983 -> m17_986  [key=0, style=solid];
m17_983 -> m17_263  [key=2, style=dotted];
m17_986 -> m17_987  [key=0, style=solid];
m17_986 -> m17_988  [key=0, style=solid];
m17_988 -> m17_998  [key=0, style=solid];
m17_988 -> m17_176  [key=2, style=dotted];
m17_988 -> m17_177  [key=2, style=dotted];
m17_970 -> m17_971  [key=0, style=solid];
m17_970 -> m17_973  [key=0, style=solid];
m17_971 -> m17_972  [key=0, style=solid];
m17_971 -> m17_967  [key=0, style=solid];
m17_971 -> m17_83  [key=2, style=dotted];
m17_973 -> m17_974  [key=0, style=solid];
m17_973 -> m17_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m17_972 -> m17_998  [key=0, style=solid];
m17_972 -> m17_177  [key=2, style=dotted];
m17_974 -> m17_989  [key=0, style=solid];
m17_976 -> m17_967  [key=0, style=solid];
m17_978 -> m17_979  [key=0, style=solid];
m17_978 -> m17_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m17_979 -> m17_989  [key=0, style=solid];
m17_979 -> m17_261  [key=2, style=dotted];
m17_981 -> m17_982  [key=0, style=solid];
m17_981 -> m17_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m17_982 -> m17_989  [key=0, style=solid];
m17_982 -> m17_262  [key=2, style=dotted];
m17_984 -> m17_985  [key=0, style=solid];
m17_984 -> m17_989  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m17_985 -> m17_989  [key=0, style=solid];
m17_987 -> m17_989  [key=0, style=solid];
m17_990 -> m17_991  [key=0, style=solid];
m17_990 -> m17_61  [key=2, style=dotted];
m17_990 -> m17_996  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m17_991 -> m17_992  [key=0, style=solid];
m17_991 -> m17_173  [key=2, style=dotted];
m17_996 -> m17_998  [key=0, style=solid];
m17_996 -> n127  [key=2, style=dotted];
m17_992 -> m17_993  [key=0, style=solid];
m17_992 -> m17_994  [key=0, style=solid];
m17_993 -> m17_998  [key=0, style=solid];
m17_993 -> m17_176  [key=2, style=dotted];
m17_993 -> m17_177  [key=2, style=dotted];
m17_994 -> m17_995  [key=0, style=solid];
m17_995 -> m17_996  [key=0, style=solid];
m17_995 -> m17_730  [key=2, style=dotted];
m17_998 -> m17_932  [key=0, style=bold, color=blue];
m17_556 -> m17_1217  [key=0, style=solid];
m17_1217 -> m17_1218  [key=0, style=solid];
m17_1217 -> m17_1219  [key=0, style=solid];
m17_1217 -> m17_366  [key=2, style=dotted];
m17_1218 -> m17_1220  [key=0, style=solid];
m17_1218 -> m17_174  [key=2, style=dotted];
m17_1219 -> m17_1220  [key=0, style=solid];
m17_1219 -> m17_177  [key=2, style=dotted];
m17_1220 -> m17_556  [key=0, style=bold, color=blue];
m17_83 -> m17_84  [key=0, style=solid];
m17_84 -> m17_85  [key=0, style=solid];
m17_84 -> m17_86  [key=2, style=dotted];
m17_85 -> m17_83  [key=0, style=bold, color=blue];
m17_364 -> m17_1229  [key=0, style=solid];
m17_364 -> m17_1230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_1229 -> m17_1230  [key=0, style=solid];
m17_1229 -> m17_1240  [key=0, style=solid];
m17_1229 -> m17_366  [key=2, style=dotted];
m17_1230 -> m17_1231  [key=0, style=solid];
m17_1230 -> m17_1236  [key=0, style=solid];
m17_1240 -> m17_1241  [key=0, style=solid];
m17_1240 -> m17_177  [key=2, style=dotted];
m17_1231 -> m17_1232  [key=0, style=solid];
m17_1236 -> m17_1237  [key=0, style=solid];
m17_1232 -> m17_1233  [key=0, style=solid];
m17_1233 -> m17_1234  [key=0, style=solid];
m17_1233 -> m17_1239  [key=0, style=solid];
m17_1234 -> m17_1235  [key=0, style=solid];
m17_1234 -> n127  [key=2, style=dotted];
m17_1239 -> m17_1241  [key=0, style=solid];
m17_1239 -> m17_177  [key=2, style=dotted];
m17_1235 -> m17_1241  [key=0, style=solid];
m17_1237 -> m17_1238  [key=0, style=solid];
m17_1237 -> n127  [key=2, style=dotted];
m17_1238 -> m17_1241  [key=0, style=solid];
m17_1241 -> m17_364  [key=0, style=bold, color=blue];
m17_186 -> m17_187  [key=0, style=solid];
m17_187 -> m17_188  [key=0, style=solid];
m17_187 -> m17_185  [key=2, style=dotted];
m17_188 -> m17_186  [key=0, style=bold, color=blue];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_20  [key=1, style=dashed, color=darkseagreen4, label=char];
m17_17 -> m17_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_17 -> m17_35  [key=1, style=dashed, color=darkseagreen4, label=char];
m17_17 -> m17_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_17 -> m17_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_17 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label=char];
m17_18 -> m17_19  [key=0, style=solid];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_59  [key=2, style=dotted];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_32  [key=0, style=solid];
m17_22 -> m17_36  [key=0, style=solid];
m17_22 -> m17_39  [key=0, style=solid];
m17_35 -> m17_57  [key=0, style=solid];
m17_41 -> m17_42  [key=0, style=solid];
m17_41 -> m17_43  [key=0, style=solid];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_45  [key=0, style=solid];
m17_56 -> m17_57  [key=0, style=solid];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_58  [key=2, style=dotted];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_60  [key=2, style=dotted];
m17_23 -> m17_24  [key=0, style=solid];
m17_32 -> m17_33  [key=0, style=solid];
m17_36 -> m17_37  [key=0, style=solid];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_55  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_25 -> m17_26  [key=0, style=solid];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_28  [key=0, style=solid];
m17_27 -> m17_31  [key=0, style=solid];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_30  [key=0, style=solid];
m17_28 -> m17_61  [key=2, style=dotted];
m17_28 -> m17_62  [key=2, style=dotted];
m17_29 -> m17_31  [key=0, style=solid];
m17_29 -> m17_63  [key=2, style=dotted];
m17_29 -> m17_29  [key=1, style=dashed, color=darkseagreen4, label=g];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_64  [key=2, style=dotted];
m17_31 -> m17_57  [key=0, style=solid];
m17_31 -> m17_65  [key=2, style=dotted];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_61  [key=2, style=dotted];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_65  [key=2, style=dotted];
m17_37 -> m17_38  [key=0, style=solid];
m17_38 -> m17_57  [key=0, style=solid];
m17_40 -> m17_41  [key=0, style=solid];
m17_55 -> m17_56  [key=0, style=solid];
m17_55 -> m17_61  [key=2, style=dotted];
m17_55 -> m17_65  [key=2, style=dotted];
m17_42 -> m17_46  [key=0, style=solid];
m17_44 -> m17_46  [key=0, style=solid];
m17_45 -> m17_46  [key=0, style=solid];
m17_46 -> m17_47  [key=0, style=solid];
m17_46 -> m17_51  [key=0, style=solid];
m17_47 -> m17_48  [key=0, style=solid];
m17_51 -> m17_52  [key=0, style=solid];
m17_48 -> m17_49  [key=0, style=solid];
m17_48 -> m17_55  [key=0, style=solid];
m17_48 -> m17_66  [key=2, style=dotted];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_65  [key=2, style=dotted];
m17_50 -> m17_57  [key=0, style=solid];
m17_52 -> m17_53  [key=0, style=solid];
m17_52 -> m17_55  [key=0, style=solid];
m17_52 -> m17_67  [key=2, style=dotted];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_65  [key=2, style=dotted];
m17_54 -> m17_57  [key=0, style=solid];
m17_57 -> m17_17  [key=0, style=bold, color=blue];
m17_181 -> m17_457  [key=0, style=solid];
m17_181 -> m17_475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_181 -> m17_476  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_181 -> m17_483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_181 -> m17_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_181 -> m17_490  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_181 -> m17_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_181 -> m17_494  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_181 -> m17_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_457 -> m17_458  [key=0, style=solid];
m17_457 -> m17_169  [key=2, style=dotted];
m17_475 -> m17_476  [key=0, style=solid];
m17_475 -> m17_17  [key=2, style=dotted];
m17_476 -> m17_477  [key=0, style=solid];
m17_476 -> m17_479  [key=0, style=solid];
m17_476 -> m17_481  [key=0, style=solid];
m17_476 -> m17_483  [key=0, style=solid];
m17_483 -> m17_533  [key=0, style=solid];
m17_483 -> m17_363  [key=2, style=dotted];
m17_483 -> m17_7  [key=2, style=dotted];
m17_488 -> m17_533  [key=0, style=solid];
m17_488 -> m17_369  [key=2, style=dotted];
m17_490 -> m17_533  [key=0, style=solid];
m17_490 -> m17_368  [key=2, style=dotted];
m17_493 -> m17_533  [key=0, style=solid];
m17_493 -> m17_364  [key=2, style=dotted];
m17_494 -> m17_495  [key=0, style=solid];
m17_494 -> m17_365  [key=2, style=dotted];
m17_507 -> m17_508  [key=0, style=solid];
m17_507 -> m17_365  [key=2, style=dotted];
m17_458 -> m17_459  [key=0, style=solid];
m17_458 -> m17_529  [key=0, style=solid];
m17_458 -> m17_532  [key=0, style=solid];
m17_459 -> m17_460  [key=0, style=solid];
m17_529 -> m17_530  [key=0, style=solid];
m17_532 -> m17_533  [key=0, style=solid];
m17_532 -> m17_176  [key=2, style=dotted];
m17_532 -> m17_177  [key=2, style=dotted];
m17_460 -> m17_461  [key=0, style=solid];
m17_461 -> m17_462  [key=0, style=solid];
m17_462 -> m17_463  [key=0, style=solid];
m17_463 -> m17_464  [key=0, style=solid];
m17_464 -> m17_465  [key=0, style=solid];
m17_465 -> m17_466  [key=0, style=solid];
m17_466 -> m17_467  [key=0, style=solid];
m17_466 -> m17_529  [key=0, style=solid];
m17_467 -> m17_468  [key=0, style=solid];
m17_467 -> m17_475  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_467 -> m17_518  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_467 -> m17_527  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_467 -> m17_528  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_468 -> m17_469  [key=0, style=solid];
m17_468 -> m17_473  [key=0, style=solid];
m17_468 -> m17_484  [key=0, style=solid];
m17_468 -> m17_487  [key=0, style=solid];
m17_468 -> m17_489  [key=0, style=solid];
m17_468 -> m17_491  [key=0, style=solid];
m17_468 -> m17_496  [key=0, style=solid];
m17_468 -> m17_509  [key=0, style=solid];
m17_468 -> m17_511  [key=0, style=solid];
m17_468 -> m17_513  [key=0, style=solid];
m17_468 -> m17_519  [key=0, style=solid];
m17_468 -> m17_521  [key=0, style=solid];
m17_468 -> m17_523  [key=0, style=solid];
m17_468 -> m17_526  [key=0, style=solid];
m17_518 -> m17_533  [key=0, style=solid];
m17_518 -> m17_260  [key=2, style=dotted];
m17_527 -> m17_528  [key=0, style=solid];
m17_527 -> m17_466  [key=0, style=solid];
m17_527 -> m17_263  [key=2, style=dotted];
m17_528 -> m17_533  [key=0, style=solid];
m17_528 -> m17_260  [key=2, style=dotted];
m17_469 -> m17_470  [key=0, style=solid];
m17_473 -> m17_474  [key=0, style=solid];
m17_484 -> m17_485  [key=0, style=solid];
m17_487 -> m17_488  [key=0, style=solid];
m17_489 -> m17_490  [key=0, style=solid];
m17_491 -> m17_492  [key=0, style=solid];
m17_496 -> m17_497  [key=0, style=solid];
m17_509 -> m17_510  [key=0, style=solid];
m17_511 -> m17_512  [key=0, style=solid];
m17_513 -> m17_514  [key=0, style=solid];
m17_519 -> m17_520  [key=0, style=solid];
m17_521 -> m17_522  [key=0, style=solid];
m17_523 -> m17_524  [key=0, style=solid];
m17_526 -> m17_527  [key=0, style=solid];
m17_470 -> m17_471  [key=0, style=solid];
m17_470 -> m17_466  [key=0, style=solid];
m17_470 -> m17_254  [key=2, style=dotted];
m17_471 -> m17_472  [key=0, style=solid];
m17_471 -> m17_65  [key=2, style=dotted];
m17_472 -> m17_533  [key=0, style=solid];
m17_474 -> m17_475  [key=0, style=solid];
m17_477 -> m17_478  [key=0, style=solid];
m17_479 -> m17_480  [key=0, style=solid];
m17_481 -> m17_482  [key=0, style=solid];
m17_478 -> m17_533  [key=0, style=solid];
m17_478 -> m17_61  [key=2, style=dotted];
m17_478 -> m17_534  [key=2, style=dotted];
m17_480 -> m17_533  [key=0, style=solid];
m17_480 -> m17_61  [key=2, style=dotted];
m17_480 -> m17_535  [key=2, style=dotted];
m17_482 -> m17_533  [key=0, style=solid];
m17_482 -> m17_61  [key=2, style=dotted];
m17_482 -> m17_536  [key=2, style=dotted];
m17_485 -> m17_486  [key=0, style=solid];
m17_485 -> m17_258  [key=2, style=dotted];
m17_486 -> m17_533  [key=0, style=solid];
m17_492 -> m17_493  [key=0, style=solid];
m17_492 -> m17_494  [key=0, style=solid];
m17_492 -> m17_120  [key=2, style=dotted];
m17_495 -> m17_533  [key=0, style=solid];
m17_497 -> m17_498  [key=0, style=solid];
m17_498 -> m17_499  [key=0, style=solid];
m17_499 -> m17_500  [key=0, style=solid];
m17_500 -> m17_501  [key=0, style=solid];
m17_501 -> m17_502  [key=0, style=solid];
m17_502 -> m17_503  [key=0, style=solid];
m17_503 -> m17_504  [key=0, style=solid];
m17_504 -> m17_505  [key=0, style=solid];
m17_505 -> m17_506  [key=0, style=solid];
m17_506 -> m17_507  [key=0, style=solid];
m17_508 -> m17_533  [key=0, style=solid];
m17_510 -> m17_466  [key=0, style=solid];
m17_510 -> m17_175  [key=2, style=dotted];
m17_512 -> m17_466  [key=0, style=solid];
m17_512 -> m17_259  [key=2, style=dotted];
m17_514 -> m17_515  [key=0, style=solid];
m17_515 -> m17_516  [key=0, style=solid];
m17_515 -> m17_518  [key=0, style=solid];
m17_516 -> m17_517  [key=0, style=solid];
m17_516 -> m17_174  [key=2, style=dotted];
m17_517 -> m17_533  [key=0, style=solid];
m17_520 -> m17_466  [key=0, style=solid];
m17_520 -> m17_261  [key=2, style=dotted];
m17_522 -> m17_466  [key=0, style=solid];
m17_522 -> m17_262  [key=2, style=dotted];
m17_524 -> m17_525  [key=0, style=solid];
m17_525 -> m17_466  [key=0, style=solid];
m17_530 -> m17_531  [key=0, style=solid];
m17_530 -> m17_264  [key=2, style=dotted];
m17_531 -> m17_533  [key=0, style=solid];
m17_533 -> m17_181  [key=0, style=bold, color=blue];
m17_829 -> m17_834  [key=0, style=solid];
m17_834 -> m17_835  [key=0, style=solid];
m17_834 -> m17_841  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_834 -> m17_847  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_835 -> m17_836  [key=0, style=solid];
m17_835 -> m17_850  [key=0, style=solid];
m17_841 -> m17_842  [key=0, style=solid];
m17_841 -> m17_669  [key=2, style=dotted];
m17_847 -> m17_848  [key=0, style=solid];
m17_847 -> m17_669  [key=2, style=dotted];
m17_836 -> m17_837  [key=0, style=solid];
m17_836 -> m17_843  [key=0, style=solid];
m17_837 -> m17_838  [key=0, style=solid];
m17_843 -> m17_844  [key=0, style=solid];
m17_843 -> m17_846  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_843 -> m17_849  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_838 -> m17_839  [key=0, style=solid];
m17_838 -> m17_841  [key=0, style=solid];
m17_839 -> m17_840  [key=0, style=solid];
m17_839 -> m17_835  [key=0, style=solid];
m17_839 -> m17_83  [key=2, style=dotted];
m17_840 -> m17_850  [key=0, style=solid];
m17_840 -> m17_177  [key=2, style=dotted];
m17_842 -> m17_850  [key=0, style=solid];
m17_844 -> m17_845  [key=0, style=solid];
m17_844 -> m17_846  [key=0, style=solid];
m17_844 -> m17_828  [key=2, style=dotted];
m17_846 -> m17_847  [key=0, style=solid];
m17_846 -> m17_849  [key=0, style=solid];
m17_846 -> m17_263  [key=2, style=dotted];
m17_849 -> m17_850  [key=0, style=solid];
m17_849 -> m17_176  [key=2, style=dotted];
m17_849 -> m17_177  [key=2, style=dotted];
m17_845 -> m17_835  [key=0, style=solid];
m17_848 -> m17_850  [key=0, style=solid];
m17_850 -> m17_829  [key=0, style=bold, color=blue];
m17_1268 -> m17_1269  [key=0, style=solid];
m17_1269 -> m17_1270  [key=0, style=solid];
m17_1269 -> m17_1277  [key=2, style=dotted];
m17_1270 -> m17_1271  [key=0, style=solid];
m17_1270 -> m17_1273  [key=0, style=solid];
m17_1271 -> m17_1272  [key=0, style=solid];
m17_1271 -> m17_118  [key=2, style=dotted];
m17_1273 -> m17_1274  [key=0, style=solid];
m17_1273 -> m17_1275  [key=0, style=solid];
m17_1272 -> m17_1273  [key=0, style=solid];
m17_1274 -> m17_1275  [key=0, style=solid];
m17_1274 -> m17_1278  [key=2, style=dotted];
m17_1275 -> m17_1276  [key=0, style=solid];
m17_1275 -> m17_1279  [key=2, style=dotted];
m17_1276 -> m17_1268  [key=0, style=bold, color=blue];
m17_543 -> m17_544  [key=0, style=solid];
m17_544 -> m17_545  [key=0, style=solid];
m17_544 -> m17_181  [key=2, style=dotted];
m17_545 -> m17_543  [key=0, style=bold, color=blue];
m17_800 -> m17_801  [key=0, style=solid];
m17_801 -> m17_802  [key=0, style=solid];
m17_801 -> m17_803  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_801 -> m17_805  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_801 -> m17_808  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_802 -> m17_803  [key=0, style=solid];
m17_802 -> m17_824  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m17_803 -> m17_804  [key=0, style=solid];
m17_803 -> m17_808  [key=0, style=solid];
m17_805 -> m17_806  [key=0, style=solid];
m17_805 -> m17_807  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m17_805 -> m17_824  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m17_808 -> m17_809  [key=0, style=solid];
m17_808 -> m17_812  [key=0, style=solid];
m17_808 -> m17_828  [key=2, style=dotted];
m17_824 -> m17_825  [key=0, style=solid];
m17_804 -> m17_805  [key=0, style=solid];
m17_806 -> m17_807  [key=0, style=solid];
m17_806 -> m17_58  [key=2, style=dotted];
m17_807 -> m17_813  [key=0, style=solid];
m17_807 -> m17_59  [key=2, style=dotted];
m17_809 -> m17_810  [key=0, style=solid];
m17_809 -> m17_824  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m17_812 -> m17_827  [key=0, style=solid];
m17_812 -> m17_176  [key=2, style=dotted];
m17_812 -> m17_177  [key=2, style=dotted];
m17_810 -> m17_811  [key=0, style=solid];
m17_810 -> m17_58  [key=2, style=dotted];
m17_811 -> m17_813  [key=0, style=solid];
m17_811 -> m17_829  [key=2, style=dotted];
m17_813 -> m17_814  [key=0, style=solid];
m17_814 -> m17_815  [key=0, style=solid];
m17_814 -> m17_818  [key=0, style=solid];
m17_815 -> m17_816  [key=0, style=solid];
m17_815 -> m17_830  [key=2, style=dotted];
m17_815 -> m17_823  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m17_818 -> m17_819  [key=0, style=solid];
m17_818 -> m17_61  [key=2, style=dotted];
m17_818 -> m17_823  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m17_816 -> m17_817  [key=0, style=solid];
m17_816 -> m17_819  [key=0, style=solid];
m17_823 -> m17_824  [key=0, style=solid];
m17_823 -> n127  [key=2, style=dotted];
m17_817 -> m17_819  [key=0, style=solid];
m17_817 -> m17_61  [key=2, style=dotted];
m17_817 -> m17_823  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m17_819 -> m17_820  [key=0, style=solid];
m17_819 -> m17_173  [key=2, style=dotted];
m17_820 -> m17_821  [key=0, style=solid];
m17_820 -> m17_822  [key=0, style=solid];
m17_821 -> m17_827  [key=0, style=solid];
m17_821 -> m17_176  [key=2, style=dotted];
m17_821 -> m17_177  [key=2, style=dotted];
m17_822 -> m17_823  [key=0, style=solid];
m17_825 -> m17_826  [key=0, style=solid];
m17_825 -> m17_730  [key=2, style=dotted];
m17_826 -> m17_827  [key=0, style=solid];
m17_827 -> m17_800  [key=0, style=bold, color=blue];
m17_189 -> m17_190  [key=0, style=solid];
m17_190 -> m17_191  [key=0, style=solid];
m17_190 -> m17_169  [key=2, style=dotted];
m17_191 -> m17_192  [key=0, style=solid];
m17_191 -> m17_211  [key=1, style=dashed, color=darkseagreen4, label=isWrapped];
m17_192 -> m17_193  [key=0, style=solid];
m17_192 -> m17_249  [key=0, style=solid];
m17_192 -> m17_252  [key=0, style=solid];
m17_211 -> m17_212  [key=0, style=solid];
m17_211 -> m17_216  [key=0, style=solid];
m17_193 -> m17_194  [key=0, style=solid];
m17_249 -> m17_250  [key=0, style=solid];
m17_252 -> m17_253  [key=0, style=solid];
m17_252 -> m17_176  [key=2, style=dotted];
m17_252 -> m17_177  [key=2, style=dotted];
m17_194 -> m17_195  [key=0, style=solid];
m17_195 -> m17_196  [key=0, style=solid];
m17_196 -> m17_197  [key=0, style=solid];
m17_197 -> m17_198  [key=0, style=solid];
m17_198 -> m17_199  [key=0, style=solid];
m17_199 -> m17_200  [key=0, style=solid];
m17_200 -> m17_201  [key=0, style=solid];
m17_200 -> m17_249  [key=0, style=solid];
m17_201 -> m17_202  [key=0, style=solid];
m17_201 -> m17_209  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_201 -> m17_238  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_201 -> m17_247  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_201 -> m17_248  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_202 -> m17_203  [key=0, style=solid];
m17_202 -> m17_207  [key=0, style=solid];
m17_202 -> m17_217  [key=0, style=solid];
m17_202 -> m17_222  [key=0, style=solid];
m17_202 -> m17_226  [key=0, style=solid];
m17_202 -> m17_229  [key=0, style=solid];
m17_202 -> m17_231  [key=0, style=solid];
m17_202 -> m17_233  [key=0, style=solid];
m17_202 -> m17_239  [key=0, style=solid];
m17_202 -> m17_241  [key=0, style=solid];
m17_202 -> m17_243  [key=0, style=solid];
m17_202 -> m17_246  [key=0, style=solid];
m17_209 -> m17_210  [key=0, style=solid];
m17_209 -> m17_17  [key=2, style=dotted];
m17_238 -> m17_253  [key=0, style=solid];
m17_238 -> m17_260  [key=2, style=dotted];
m17_247 -> m17_248  [key=0, style=solid];
m17_247 -> m17_200  [key=0, style=solid];
m17_247 -> m17_263  [key=2, style=dotted];
m17_248 -> m17_253  [key=0, style=solid];
m17_248 -> m17_260  [key=2, style=dotted];
m17_203 -> m17_204  [key=0, style=solid];
m17_207 -> m17_208  [key=0, style=solid];
m17_217 -> m17_218  [key=0, style=solid];
m17_222 -> m17_223  [key=0, style=solid];
m17_226 -> m17_227  [key=0, style=solid];
m17_229 -> m17_230  [key=0, style=solid];
m17_231 -> m17_232  [key=0, style=solid];
m17_233 -> m17_234  [key=0, style=solid];
m17_239 -> m17_240  [key=0, style=solid];
m17_241 -> m17_242  [key=0, style=solid];
m17_243 -> m17_244  [key=0, style=solid];
m17_246 -> m17_247  [key=0, style=solid];
m17_204 -> m17_205  [key=0, style=solid];
m17_204 -> m17_200  [key=0, style=solid];
m17_204 -> m17_254  [key=2, style=dotted];
m17_205 -> m17_206  [key=0, style=solid];
m17_205 -> m17_65  [key=2, style=dotted];
m17_206 -> m17_253  [key=0, style=solid];
m17_208 -> m17_209  [key=0, style=solid];
m17_210 -> m17_211  [key=0, style=solid];
m17_210 -> m17_215  [key=1, style=dashed, color=darkseagreen4, label=data];
m17_210 -> m17_216  [key=1, style=dashed, color=darkseagreen4, label=data];
m17_215 -> m17_216  [key=0, style=solid];
m17_215 -> m17_65  [key=2, style=dotted];
m17_216 -> m17_253  [key=0, style=solid];
m17_212 -> m17_213  [key=0, style=solid];
m17_212 -> m17_255  [key=2, style=dotted];
m17_213 -> m17_214  [key=0, style=solid];
m17_213 -> m17_215  [key=0, style=solid];
m17_214 -> m17_253  [key=0, style=solid];
m17_214 -> m17_176  [key=2, style=dotted];
m17_214 -> m17_177  [key=2, style=dotted];
m17_218 -> m17_219  [key=0, style=solid];
m17_219 -> m17_220  [key=0, style=solid];
m17_219 -> m17_174  [key=2, style=dotted];
m17_220 -> m17_221  [key=0, style=solid];
m17_220 -> m17_256  [key=2, style=dotted];
m17_221 -> m17_200  [key=0, style=solid];
m17_223 -> m17_224  [key=0, style=solid];
m17_224 -> m17_225  [key=0, style=solid];
m17_224 -> m17_174  [key=2, style=dotted];
m17_225 -> m17_253  [key=0, style=solid];
m17_225 -> m17_257  [key=2, style=dotted];
m17_227 -> m17_228  [key=0, style=solid];
m17_227 -> m17_258  [key=2, style=dotted];
m17_228 -> m17_253  [key=0, style=solid];
m17_230 -> m17_200  [key=0, style=solid];
m17_230 -> m17_175  [key=2, style=dotted];
m17_232 -> m17_200  [key=0, style=solid];
m17_232 -> m17_259  [key=2, style=dotted];
m17_234 -> m17_235  [key=0, style=solid];
m17_235 -> m17_236  [key=0, style=solid];
m17_235 -> m17_238  [key=0, style=solid];
m17_236 -> m17_237  [key=0, style=solid];
m17_236 -> m17_174  [key=2, style=dotted];
m17_237 -> m17_253  [key=0, style=solid];
m17_240 -> m17_200  [key=0, style=solid];
m17_240 -> m17_261  [key=2, style=dotted];
m17_242 -> m17_200  [key=0, style=solid];
m17_242 -> m17_262  [key=2, style=dotted];
m17_244 -> m17_245  [key=0, style=solid];
m17_245 -> m17_200  [key=0, style=solid];
m17_250 -> m17_251  [key=0, style=solid];
m17_250 -> m17_264  [key=2, style=dotted];
m17_251 -> m17_253  [key=0, style=solid];
m17_253 -> m17_189  [key=0, style=bold, color=blue];
m17_668 -> m17_671  [key=0, style=solid];
m17_668 -> m17_672  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_668 -> m17_673  [key=1, style=dashed, color=darkseagreen4, label=char];
m17_671 -> m17_672  [key=0, style=solid];
m17_671 -> m17_673  [key=0, style=solid];
m17_672 -> m17_673  [key=0, style=solid];
m17_672 -> m17_670  [key=2, style=dotted];
m17_673 -> m17_674  [key=0, style=solid];
m17_673 -> m17_675  [key=2, style=dotted];
m17_674 -> m17_668  [key=0, style=bold, color=blue];
m17_828 -> m17_831  [key=0, style=solid];
m17_831 -> m17_832  [key=0, style=solid];
m17_831 -> m17_833  [key=2, style=dotted];
m17_832 -> m17_828  [key=0, style=bold, color=blue];
m17_169 -> m17_574  [key=0, style=solid];
m17_574 -> m17_575  [key=0, style=solid];
m17_574 -> m17_577  [key=0, style=solid];
m17_575 -> m17_576  [key=0, style=solid];
m17_575 -> m17_117  [key=2, style=dotted];
m17_576 -> m17_577  [key=0, style=solid];
m17_577 -> m17_169  [key=0, style=bold, color=blue];
m17_185 -> m17_265  [key=0, style=solid];
m17_185 -> m17_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_185 -> m17_284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_185 -> m17_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_185 -> m17_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_185 -> m17_301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_185 -> m17_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_185 -> m17_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_185 -> m17_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_185 -> m17_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_265 -> m17_266  [key=0, style=solid];
m17_265 -> m17_169  [key=2, style=dotted];
m17_283 -> m17_284  [key=0, style=solid];
m17_283 -> m17_17  [key=2, style=dotted];
m17_284 -> m17_285  [key=0, style=solid];
m17_284 -> m17_287  [key=0, style=solid];
m17_284 -> m17_289  [key=0, style=solid];
m17_284 -> m17_293  [key=0, style=solid];
m17_284 -> m17_297  [key=0, style=solid];
m17_297 -> m17_360  [key=0, style=solid];
m17_297 -> m17_363  [key=2, style=dotted];
m17_297 -> m17_7  [key=2, style=dotted];
m17_300 -> m17_360  [key=0, style=solid];
m17_300 -> m17_364  [key=2, style=dotted];
m17_301 -> m17_302  [key=0, style=solid];
m17_301 -> m17_365  [key=2, style=dotted];
m17_314 -> m17_315  [key=0, style=solid];
m17_314 -> m17_317  [key=0, style=solid];
m17_321 -> m17_322  [key=0, style=solid];
m17_321 -> m17_324  [key=0, style=solid];
m17_330 -> m17_360  [key=0, style=solid];
m17_330 -> m17_368  [key=2, style=dotted];
m17_332 -> m17_360  [key=0, style=solid];
m17_332 -> m17_369  [key=2, style=dotted];
m17_266 -> m17_267  [key=0, style=solid];
m17_266 -> m17_356  [key=0, style=solid];
m17_266 -> m17_359  [key=0, style=solid];
m17_267 -> m17_268  [key=0, style=solid];
m17_356 -> m17_357  [key=0, style=solid];
m17_359 -> m17_360  [key=0, style=solid];
m17_359 -> m17_176  [key=2, style=dotted];
m17_359 -> m17_177  [key=2, style=dotted];
m17_268 -> m17_269  [key=0, style=solid];
m17_269 -> m17_270  [key=0, style=solid];
m17_270 -> m17_271  [key=0, style=solid];
m17_271 -> m17_272  [key=0, style=solid];
m17_272 -> m17_273  [key=0, style=solid];
m17_273 -> m17_274  [key=0, style=solid];
m17_274 -> m17_275  [key=0, style=solid];
m17_274 -> m17_356  [key=0, style=solid];
m17_275 -> m17_276  [key=0, style=solid];
m17_275 -> m17_283  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_275 -> m17_316  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_275 -> m17_323  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_275 -> m17_324  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_275 -> m17_345  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_275 -> m17_354  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_275 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_276 -> m17_277  [key=0, style=solid];
m17_276 -> m17_281  [key=0, style=solid];
m17_276 -> m17_298  [key=0, style=solid];
m17_276 -> m17_303  [key=0, style=solid];
m17_276 -> m17_319  [key=0, style=solid];
m17_276 -> m17_329  [key=0, style=solid];
m17_276 -> m17_331  [key=0, style=solid];
m17_276 -> m17_333  [key=0, style=solid];
m17_276 -> m17_336  [key=0, style=solid];
m17_276 -> m17_338  [key=0, style=solid];
m17_276 -> m17_340  [key=0, style=solid];
m17_276 -> m17_346  [key=0, style=solid];
m17_276 -> m17_348  [key=0, style=solid];
m17_276 -> m17_350  [key=0, style=solid];
m17_276 -> m17_353  [key=0, style=solid];
m17_316 -> m17_360  [key=0, style=solid];
m17_316 -> m17_260  [key=2, style=dotted];
m17_323 -> m17_360  [key=0, style=solid];
m17_323 -> m17_260  [key=2, style=dotted];
m17_324 -> m17_325  [key=0, style=solid];
m17_324 -> m17_327  [key=1, style=dashed, color=darkseagreen4, label=expected];
m17_324 -> m17_328  [key=1, style=dashed, color=darkseagreen4, label=expected];
m17_345 -> m17_360  [key=0, style=solid];
m17_345 -> m17_260  [key=2, style=dotted];
m17_354 -> m17_355  [key=0, style=solid];
m17_354 -> m17_274  [key=0, style=solid];
m17_354 -> m17_263  [key=2, style=dotted];
m17_355 -> m17_360  [key=0, style=solid];
m17_355 -> m17_260  [key=2, style=dotted];
m17_277 -> m17_278  [key=0, style=solid];
m17_281 -> m17_282  [key=0, style=solid];
m17_298 -> m17_299  [key=0, style=solid];
m17_303 -> m17_304  [key=0, style=solid];
m17_319 -> m17_320  [key=0, style=solid];
m17_329 -> m17_330  [key=0, style=solid];
m17_331 -> m17_332  [key=0, style=solid];
m17_333 -> m17_334  [key=0, style=solid];
m17_336 -> m17_337  [key=0, style=solid];
m17_338 -> m17_339  [key=0, style=solid];
m17_340 -> m17_341  [key=0, style=solid];
m17_346 -> m17_347  [key=0, style=solid];
m17_348 -> m17_349  [key=0, style=solid];
m17_350 -> m17_351  [key=0, style=solid];
m17_353 -> m17_354  [key=0, style=solid];
m17_278 -> m17_279  [key=0, style=solid];
m17_278 -> m17_274  [key=0, style=solid];
m17_278 -> m17_254  [key=2, style=dotted];
m17_279 -> m17_280  [key=0, style=solid];
m17_279 -> m17_65  [key=2, style=dotted];
m17_280 -> m17_360  [key=0, style=solid];
m17_282 -> m17_283  [key=0, style=solid];
m17_285 -> m17_286  [key=0, style=solid];
m17_287 -> m17_288  [key=0, style=solid];
m17_289 -> m17_290  [key=0, style=solid];
m17_293 -> m17_294  [key=0, style=solid];
m17_286 -> m17_360  [key=0, style=solid];
m17_288 -> m17_360  [key=0, style=solid];
m17_290 -> m17_291  [key=0, style=solid];
m17_290 -> m17_292  [key=0, style=solid];
m17_291 -> m17_360  [key=0, style=solid];
m17_292 -> m17_360  [key=0, style=solid];
m17_292 -> m17_361  [key=2, style=dotted];
m17_294 -> m17_295  [key=0, style=solid];
m17_294 -> m17_296  [key=0, style=solid];
m17_295 -> m17_360  [key=0, style=solid];
m17_296 -> m17_360  [key=0, style=solid];
m17_296 -> m17_362  [key=2, style=dotted];
m17_299 -> m17_300  [key=0, style=solid];
m17_299 -> m17_301  [key=0, style=solid];
m17_299 -> m17_120  [key=2, style=dotted];
m17_302 -> m17_360  [key=0, style=solid];
m17_304 -> m17_305  [key=0, style=solid];
m17_305 -> m17_306  [key=0, style=solid];
m17_306 -> m17_307  [key=0, style=solid];
m17_307 -> m17_308  [key=0, style=solid];
m17_308 -> m17_309  [key=0, style=solid];
m17_309 -> m17_310  [key=0, style=solid];
m17_310 -> m17_311  [key=0, style=solid];
m17_311 -> m17_312  [key=0, style=solid];
m17_312 -> m17_313  [key=0, style=solid];
m17_313 -> m17_314  [key=0, style=solid];
m17_315 -> m17_316  [key=0, style=solid];
m17_317 -> m17_318  [key=0, style=solid];
m17_317 -> m17_365  [key=2, style=dotted];
m17_318 -> m17_360  [key=0, style=solid];
m17_320 -> m17_321  [key=0, style=solid];
m17_322 -> m17_323  [key=0, style=solid];
m17_325 -> m17_326  [key=0, style=solid];
m17_325 -> m17_327  [key=0, style=solid];
m17_325 -> m17_366  [key=2, style=dotted];
m17_327 -> m17_328  [key=0, style=solid];
m17_327 -> n127  [key=2, style=dotted];
m17_328 -> m17_360  [key=0, style=solid];
m17_326 -> m17_360  [key=0, style=solid];
m17_326 -> m17_260  [key=2, style=dotted];
m17_334 -> m17_335  [key=0, style=solid];
m17_334 -> m17_258  [key=2, style=dotted];
m17_335 -> m17_360  [key=0, style=solid];
m17_337 -> m17_274  [key=0, style=solid];
m17_337 -> m17_175  [key=2, style=dotted];
m17_339 -> m17_274  [key=0, style=solid];
m17_339 -> m17_259  [key=2, style=dotted];
m17_341 -> m17_342  [key=0, style=solid];
m17_342 -> m17_343  [key=0, style=solid];
m17_342 -> m17_345  [key=0, style=solid];
m17_343 -> m17_344  [key=0, style=solid];
m17_343 -> m17_174  [key=2, style=dotted];
m17_344 -> m17_360  [key=0, style=solid];
m17_347 -> m17_274  [key=0, style=solid];
m17_347 -> m17_261  [key=2, style=dotted];
m17_349 -> m17_274  [key=0, style=solid];
m17_349 -> m17_262  [key=2, style=dotted];
m17_351 -> m17_352  [key=0, style=solid];
m17_352 -> m17_274  [key=0, style=solid];
m17_357 -> m17_358  [key=0, style=solid];
m17_357 -> m17_264  [key=2, style=dotted];
m17_358 -> m17_360  [key=0, style=solid];
m17_360 -> m17_185  [key=0, style=bold, color=blue];
m17_931 -> m17_1225  [key=0, style=solid];
m17_1225 -> m17_1226  [key=0, style=solid];
m17_1225 -> m17_1227  [key=0, style=solid];
m17_1225 -> m17_366  [key=2, style=dotted];
m17_1226 -> m17_1228  [key=0, style=solid];
m17_1226 -> n127  [key=2, style=dotted];
m17_1227 -> m17_1228  [key=0, style=solid];
m17_1227 -> m17_177  [key=2, style=dotted];
m17_1228 -> m17_931  [key=0, style=bold, color=blue];
m17_372 -> m17_373  [key=0, style=solid];
m17_373 -> m17_374  [key=0, style=solid];
m17_373 -> m17_169  [key=2, style=dotted];
m17_374 -> m17_375  [key=0, style=solid];
m17_374 -> m17_443  [key=0, style=solid];
m17_374 -> m17_446  [key=0, style=solid];
m17_375 -> m17_376  [key=0, style=solid];
m17_443 -> m17_444  [key=0, style=solid];
m17_446 -> m17_447  [key=0, style=solid];
m17_446 -> m17_176  [key=2, style=dotted];
m17_446 -> m17_177  [key=2, style=dotted];
m17_376 -> m17_377  [key=0, style=solid];
m17_377 -> m17_378  [key=0, style=solid];
m17_378 -> m17_379  [key=0, style=solid];
m17_379 -> m17_380  [key=0, style=solid];
m17_380 -> m17_381  [key=0, style=solid];
m17_381 -> m17_382  [key=0, style=solid];
m17_382 -> m17_383  [key=0, style=solid];
m17_382 -> m17_443  [key=0, style=solid];
m17_383 -> m17_384  [key=0, style=solid];
m17_383 -> m17_391  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_383 -> m17_417  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_383 -> m17_432  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_383 -> m17_441  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_383 -> m17_442  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_384 -> m17_385  [key=0, style=solid];
m17_384 -> m17_389  [key=0, style=solid];
m17_384 -> m17_393  [key=0, style=solid];
m17_384 -> m17_396  [key=0, style=solid];
m17_384 -> m17_415  [key=0, style=solid];
m17_384 -> m17_423  [key=0, style=solid];
m17_384 -> m17_425  [key=0, style=solid];
m17_384 -> m17_427  [key=0, style=solid];
m17_384 -> m17_433  [key=0, style=solid];
m17_384 -> m17_435  [key=0, style=solid];
m17_384 -> m17_437  [key=0, style=solid];
m17_384 -> m17_440  [key=0, style=solid];
m17_391 -> m17_392  [key=0, style=solid];
m17_391 -> m17_17  [key=2, style=dotted];
m17_417 -> m17_418  [key=0, style=solid];
m17_417 -> m17_421  [key=1, style=dashed, color=darkseagreen4, label=isTrue];
m17_417 -> m17_422  [key=1, style=dashed, color=darkseagreen4, label=isTrue];
m17_432 -> m17_447  [key=0, style=solid];
m17_432 -> m17_260  [key=2, style=dotted];
m17_441 -> m17_442  [key=0, style=solid];
m17_441 -> m17_382  [key=0, style=solid];
m17_441 -> m17_263  [key=2, style=dotted];
m17_442 -> m17_447  [key=0, style=solid];
m17_442 -> m17_260  [key=2, style=dotted];
m17_385 -> m17_386  [key=0, style=solid];
m17_389 -> m17_390  [key=0, style=solid];
m17_393 -> m17_394  [key=0, style=solid];
m17_396 -> m17_397  [key=0, style=solid];
m17_415 -> m17_416  [key=0, style=solid];
m17_423 -> m17_424  [key=0, style=solid];
m17_425 -> m17_426  [key=0, style=solid];
m17_427 -> m17_428  [key=0, style=solid];
m17_433 -> m17_434  [key=0, style=solid];
m17_435 -> m17_436  [key=0, style=solid];
m17_437 -> m17_438  [key=0, style=solid];
m17_440 -> m17_441  [key=0, style=solid];
m17_386 -> m17_387  [key=0, style=solid];
m17_386 -> m17_382  [key=0, style=solid];
m17_386 -> m17_254  [key=2, style=dotted];
m17_387 -> m17_388  [key=0, style=solid];
m17_387 -> m17_65  [key=2, style=dotted];
m17_388 -> m17_447  [key=0, style=solid];
m17_390 -> m17_391  [key=0, style=solid];
m17_392 -> m17_447  [key=0, style=solid];
m17_392 -> m17_61  [key=2, style=dotted];
m17_392 -> m17_448  [key=2, style=dotted];
m17_394 -> m17_395  [key=0, style=solid];
m17_394 -> m17_258  [key=2, style=dotted];
m17_395 -> m17_447  [key=0, style=solid];
m17_397 -> m17_398  [key=0, style=solid];
m17_398 -> m17_399  [key=0, style=solid];
m17_399 -> m17_400  [key=0, style=solid];
m17_400 -> m17_401  [key=0, style=solid];
m17_401 -> m17_402  [key=0, style=solid];
m17_402 -> m17_403  [key=0, style=solid];
m17_403 -> m17_404  [key=0, style=solid];
m17_404 -> m17_405  [key=0, style=solid];
m17_405 -> m17_406  [key=0, style=solid];
m17_406 -> m17_407  [key=0, style=solid];
m17_407 -> m17_408  [key=0, style=solid];
m17_408 -> m17_409  [key=0, style=solid];
m17_408 -> m17_365  [key=2, style=dotted];
m17_409 -> m17_410  [key=0, style=solid];
m17_410 -> m17_411  [key=0, style=solid];
m17_410 -> m17_412  [key=0, style=solid];
m17_411 -> m17_413  [key=0, style=solid];
m17_411 -> m17_414  [key=1, style=dashed, color=darkseagreen4, label=b];
m17_412 -> m17_413  [key=0, style=solid];
m17_412 -> m17_449  [key=2, style=dotted];
m17_412 -> m17_414  [key=1, style=dashed, color=darkseagreen4, label=b];
m17_413 -> m17_414  [key=0, style=solid];
m17_413 -> m17_65  [key=2, style=dotted];
m17_414 -> m17_447  [key=0, style=solid];
m17_416 -> m17_417  [key=0, style=solid];
m17_418 -> m17_419  [key=0, style=solid];
m17_421 -> m17_422  [key=0, style=solid];
m17_421 -> n127  [key=2, style=dotted];
m17_422 -> m17_447  [key=0, style=solid];
m17_419 -> m17_420  [key=0, style=solid];
m17_419 -> m17_421  [key=0, style=solid];
m17_419 -> m17_366  [key=2, style=dotted];
m17_420 -> m17_447  [key=0, style=solid];
m17_420 -> m17_260  [key=2, style=dotted];
m17_424 -> m17_382  [key=0, style=solid];
m17_424 -> m17_175  [key=2, style=dotted];
m17_426 -> m17_382  [key=0, style=solid];
m17_426 -> m17_259  [key=2, style=dotted];
m17_428 -> m17_429  [key=0, style=solid];
m17_429 -> m17_430  [key=0, style=solid];
m17_429 -> m17_432  [key=0, style=solid];
m17_430 -> m17_431  [key=0, style=solid];
m17_430 -> m17_174  [key=2, style=dotted];
m17_431 -> m17_447  [key=0, style=solid];
m17_434 -> m17_382  [key=0, style=solid];
m17_434 -> m17_261  [key=2, style=dotted];
m17_436 -> m17_382  [key=0, style=solid];
m17_436 -> m17_262  [key=2, style=dotted];
m17_438 -> m17_439  [key=0, style=solid];
m17_439 -> m17_382  [key=0, style=solid];
m17_444 -> m17_445  [key=0, style=solid];
m17_444 -> m17_264  [key=2, style=dotted];
m17_445 -> m17_447  [key=0, style=solid];
m17_447 -> m17_372  [key=0, style=bold, color=blue];
m17_686 -> m17_687  [key=0, style=solid];
m17_687 -> m17_688  [key=0, style=solid];
m17_687 -> m17_689  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_687 -> m17_691  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_687 -> m17_692  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_687 -> m17_723  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_688 -> m17_689  [key=0, style=solid];
m17_688 -> m17_729  [key=0, style=solid];
m17_689 -> m17_690  [key=0, style=solid];
m17_689 -> m17_696  [key=0, style=solid];
m17_689 -> m17_724  [key=0, style=solid];
m17_691 -> m17_692  [key=0, style=solid];
m17_692 -> m17_693  [key=0, style=solid];
m17_692 -> m17_695  [key=0, style=solid];
m17_723 -> m17_688  [key=0, style=solid];
m17_723 -> m17_723  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_723 -> m17_724  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_690 -> m17_691  [key=0, style=solid];
m17_696 -> m17_697  [key=0, style=solid];
m17_724 -> m17_725  [key=0, style=solid];
m17_693 -> m17_694  [key=0, style=solid];
m17_693 -> m17_688  [key=0, style=solid];
m17_693 -> m17_83  [key=2, style=dotted];
m17_695 -> m17_729  [key=0, style=solid];
m17_694 -> m17_729  [key=0, style=solid];
m17_697 -> m17_698  [key=0, style=solid];
m17_698 -> m17_699  [key=0, style=solid];
m17_699 -> m17_700  [key=0, style=solid];
m17_700 -> m17_701  [key=0, style=solid];
m17_701 -> m17_702  [key=0, style=solid];
m17_702 -> m17_703  [key=0, style=solid];
m17_703 -> m17_704  [key=0, style=solid];
m17_704 -> m17_705  [key=0, style=solid];
m17_705 -> m17_706  [key=0, style=solid];
m17_706 -> m17_707  [key=0, style=solid];
m17_707 -> m17_708  [key=0, style=solid];
m17_708 -> m17_709  [key=0, style=solid];
m17_709 -> m17_710  [key=0, style=solid];
m17_710 -> m17_711  [key=0, style=solid];
m17_711 -> m17_712  [key=0, style=solid];
m17_712 -> m17_713  [key=0, style=solid];
m17_713 -> m17_714  [key=0, style=solid];
m17_714 -> m17_715  [key=0, style=solid];
m17_715 -> m17_716  [key=0, style=solid];
m17_716 -> m17_717  [key=0, style=solid];
m17_717 -> m17_718  [key=0, style=solid];
m17_718 -> m17_719  [key=0, style=solid];
m17_719 -> m17_720  [key=0, style=solid];
m17_720 -> m17_721  [key=0, style=solid];
m17_721 -> m17_722  [key=0, style=solid];
m17_722 -> m17_723  [key=0, style=solid];
m17_725 -> m17_726  [key=0, style=solid];
m17_725 -> m17_728  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_726 -> m17_727  [key=0, style=solid];
m17_726 -> m17_728  [key=0, style=solid];
m17_726 -> m17_263  [key=2, style=dotted];
m17_728 -> m17_729  [key=0, style=solid];
m17_728 -> m17_176  [key=2, style=dotted];
m17_728 -> m17_177  [key=2, style=dotted];
m17_727 -> m17_729  [key=0, style=solid];
m17_729 -> m17_686  [key=0, style=bold, color=blue];
m17_258 -> m17_546  [key=0, style=solid];
m17_546 -> m17_547  [key=0, style=solid];
m17_546 -> m17_553  [key=0, style=solid];
m17_546 -> m17_120  [key=2, style=dotted];
m17_547 -> m17_548  [key=0, style=solid];
m17_553 -> m17_554  [key=0, style=solid];
m17_548 -> m17_549  [key=0, style=solid];
m17_548 -> m17_551  [key=0, style=solid];
m17_549 -> m17_550  [key=0, style=solid];
m17_549 -> m17_556  [key=2, style=dotted];
m17_551 -> m17_552  [key=0, style=solid];
m17_550 -> m17_555  [key=0, style=solid];
m17_552 -> m17_555  [key=0, style=solid];
m17_552 -> m17_260  [key=2, style=dotted];
m17_554 -> m17_555  [key=0, style=solid];
m17_554 -> m17_557  [key=2, style=dotted];
m17_555 -> m17_258  [key=0, style=bold, color=blue];
m17_933 -> m17_1221  [key=0, style=solid];
m17_1221 -> m17_1222  [key=0, style=solid];
m17_1221 -> m17_1223  [key=0, style=solid];
m17_1221 -> m17_366  [key=2, style=dotted];
m17_1222 -> m17_1224  [key=0, style=solid];
m17_1222 -> m17_174  [key=2, style=dotted];
m17_1223 -> m17_1224  [key=0, style=solid];
m17_1223 -> m17_177  [key=2, style=dotted];
m17_1224 -> m17_933  [key=0, style=bold, color=blue];
m17_1170 -> m17_1171  [key=0, style=solid];
m17_1170 -> m17_1175  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_1170 -> m17_1176  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_1170 -> m17_1180  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_1171 -> m17_1172  [key=0, style=solid];
m17_1171 -> m17_1174  [key=0, style=solid];
m17_1171 -> m17_120  [key=2, style=dotted];
m17_1175 -> m17_1176  [key=0, style=solid];
m17_1175 -> m17_1180  [key=0, style=solid];
m17_1176 -> m17_1177  [key=0, style=solid];
m17_1176 -> m17_1179  [key=0, style=solid];
m17_1180 -> m17_1181  [key=0, style=solid];
m17_1172 -> m17_1173  [key=0, style=solid];
m17_1174 -> m17_1175  [key=0, style=solid];
m17_1174 -> m17_1176  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_1174 -> m17_1177  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_1174 -> m17_1179  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_1173 -> m17_1182  [key=0, style=solid];
m17_1173 -> m17_557  [key=2, style=dotted];
m17_1177 -> m17_1178  [key=0, style=solid];
m17_1179 -> m17_1175  [key=0, style=solid];
m17_1179 -> m17_1179  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_1178 -> m17_1182  [key=0, style=solid];
m17_1181 -> m17_1182  [key=0, style=solid];
m17_1182 -> m17_1170  [key=0, style=bold, color=blue];
m17_537 -> m17_538  [key=0, style=solid];
m17_538 -> m17_539  [key=0, style=solid];
m17_538 -> m17_185  [key=2, style=dotted];
m17_539 -> m17_537  [key=0, style=bold, color=blue];
m17_540 -> m17_541  [key=0, style=solid];
m17_541 -> m17_542  [key=0, style=solid];
m17_541 -> m17_181  [key=2, style=dotted];
m17_542 -> m17_540  [key=0, style=bold, color=blue];
m17_366 -> m17_1183  [key=0, style=solid];
m17_1183 -> m17_1184  [key=0, style=solid];
m17_1183 -> m17_1170  [key=2, style=dotted];
m17_1184 -> m17_1185  [key=0, style=solid];
m17_1184 -> m17_1186  [key=0, style=solid];
m17_1185 -> m17_1189  [key=0, style=solid];
m17_1186 -> m17_1187  [key=0, style=solid];
m17_1186 -> m17_1188  [key=0, style=solid];
m17_1186 -> m17_120  [key=2, style=dotted];
m17_1187 -> m17_1189  [key=0, style=solid];
m17_1188 -> m17_1189  [key=0, style=solid];
m17_1188 -> m17_1190  [key=2, style=dotted];
m17_1189 -> m17_366  [key=0, style=bold, color=blue];
m17_368 -> m17_1242  [key=0, style=solid];
m17_368 -> m17_1243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_1242 -> m17_1243  [key=0, style=solid];
m17_1242 -> m17_1253  [key=0, style=solid];
m17_1242 -> m17_366  [key=2, style=dotted];
m17_1243 -> m17_1244  [key=0, style=solid];
m17_1243 -> m17_1249  [key=0, style=solid];
m17_1253 -> m17_1254  [key=0, style=solid];
m17_1253 -> m17_177  [key=2, style=dotted];
m17_1244 -> m17_1245  [key=0, style=solid];
m17_1249 -> m17_1250  [key=0, style=solid];
m17_1245 -> m17_1246  [key=0, style=solid];
m17_1246 -> m17_1247  [key=0, style=solid];
m17_1246 -> m17_1252  [key=0, style=solid];
m17_1247 -> m17_1248  [key=0, style=solid];
m17_1247 -> n127  [key=2, style=dotted];
m17_1252 -> m17_1254  [key=0, style=solid];
m17_1252 -> m17_177  [key=2, style=dotted];
m17_1248 -> m17_1254  [key=0, style=solid];
m17_1250 -> m17_1251  [key=0, style=solid];
m17_1250 -> n127  [key=2, style=dotted];
m17_1251 -> m17_1254  [key=0, style=solid];
m17_1254 -> m17_368  [key=0, style=bold, color=blue];
m17_262 -> m17_935  [key=0, style=solid];
m17_935 -> m17_936  [key=0, style=solid];
m17_936 -> m17_937  [key=0, style=solid];
m17_936 -> m17_13  [key=2, style=dotted];
m17_937 -> m17_262  [key=0, style=bold, color=blue];
m17_369 -> m17_1255  [key=0, style=solid];
m17_369 -> m17_1256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_1255 -> m17_1256  [key=0, style=solid];
m17_1255 -> m17_1266  [key=0, style=solid];
m17_1255 -> m17_366  [key=2, style=dotted];
m17_1256 -> m17_1257  [key=0, style=solid];
m17_1256 -> m17_1262  [key=0, style=solid];
m17_1266 -> m17_1267  [key=0, style=solid];
m17_1266 -> m17_177  [key=2, style=dotted];
m17_1257 -> m17_1258  [key=0, style=solid];
m17_1262 -> m17_1263  [key=0, style=solid];
m17_1258 -> m17_1259  [key=0, style=solid];
m17_1259 -> m17_1260  [key=0, style=solid];
m17_1259 -> m17_1265  [key=0, style=solid];
m17_1260 -> m17_1261  [key=0, style=solid];
m17_1260 -> n127  [key=2, style=dotted];
m17_1265 -> m17_1267  [key=0, style=solid];
m17_1265 -> m17_177  [key=2, style=dotted];
m17_1261 -> m17_1267  [key=0, style=solid];
m17_1263 -> m17_1264  [key=0, style=solid];
m17_1263 -> n127  [key=2, style=dotted];
m17_1264 -> m17_1267  [key=0, style=solid];
m17_1267 -> m17_369  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextReader"];
m17_0 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextReader"];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=0, style=solid];
m17_2 -> m17_5  [key=0, style=solid];
m17_2 -> m17_6  [key=2, style=dotted];
m17_2 -> m17_7  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_4 -> m17_5  [key=0, style=solid];
m17_5 -> m17_0  [key=0, style=bold, color=blue];
m17_1165 -> m17_1166  [key=0, style=solid];
m17_1165 -> m17_1167  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_1166 -> m17_1167  [key=0, style=solid];
m17_1166 -> m17_1168  [key=0, style=solid];
m17_1167 -> m17_1168  [key=0, style=solid];
m17_1167 -> m17_1169  [key=2, style=dotted];
m17_1167 -> n127  [key=2, style=dotted];
m17_1168 -> m17_1165  [key=0, style=bold, color=blue];
m17_1190 -> m17_1191  [key=0, style=solid];
m17_1190 -> m17_1209  [key=1, style=dashed, color=darkseagreen4, label=char];
m17_1191 -> m17_1192  [key=0, style=solid];
m17_1191 -> m17_1196  [key=0, style=solid];
m17_1191 -> m17_1201  [key=0, style=solid];
m17_1191 -> m17_1204  [key=0, style=solid];
m17_1191 -> m17_1209  [key=0, style=solid];
m17_1209 -> m17_1210  [key=0, style=solid];
m17_1209 -> m17_1211  [key=0, style=solid];
m17_1209 -> m17_263  [key=2, style=dotted];
m17_1192 -> m17_1193  [key=0, style=solid];
m17_1196 -> m17_1197  [key=0, style=solid];
m17_1201 -> m17_1202  [key=0, style=solid];
m17_1204 -> m17_1205  [key=0, style=solid];
m17_1193 -> m17_1194  [key=0, style=solid];
m17_1194 -> m17_1195  [key=0, style=solid];
m17_1195 -> m17_1212  [key=0, style=solid];
m17_1197 -> m17_1198  [key=0, style=solid];
m17_1197 -> m17_1199  [key=0, style=solid];
m17_1197 -> m17_120  [key=2, style=dotted];
m17_1198 -> m17_1212  [key=0, style=solid];
m17_1199 -> m17_1200  [key=0, style=solid];
m17_1200 -> m17_1212  [key=0, style=solid];
m17_1202 -> m17_1203  [key=0, style=solid];
m17_1202 -> m17_1211  [key=0, style=solid];
m17_1203 -> m17_1212  [key=0, style=solid];
m17_1211 -> m17_1212  [key=0, style=solid];
m17_1205 -> m17_1206  [key=0, style=solid];
m17_1206 -> m17_1207  [key=0, style=solid];
m17_1207 -> m17_1208  [key=0, style=solid];
m17_1208 -> m17_1212  [key=0, style=solid];
m17_1210 -> m17_1212  [key=0, style=solid];
m17_1212 -> m17_1190  [key=0, style=bold, color=blue];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_14 -> m17_15  [key=0, style=solid];
m17_15 -> m17_16  [key=0, style=solid];
m17_16 -> m17_13  [key=0, style=bold, color=blue];
m17_261 -> m17_938  [key=0, style=solid];
m17_261 -> m17_939  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_938 -> m17_939  [key=0, style=solid];
m17_939 -> m17_940  [key=0, style=solid];
m17_939 -> m17_941  [key=0, style=solid];
m17_939 -> m17_120  [key=2, style=dotted];
m17_940 -> m17_941  [key=0, style=solid];
m17_941 -> m17_942  [key=0, style=solid];
m17_941 -> m17_13  [key=2, style=dotted];
m17_942 -> m17_261  [key=0, style=bold, color=blue];
m17_125 -> m17_126  [key=0, style=solid];
m17_125 -> m17_128  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_125 -> m17_130  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_126 -> m17_127  [key=0, style=solid];
m17_126 -> m17_128  [key=0, style=solid];
m17_128 -> m17_129  [key=0, style=solid];
m17_128 -> m17_130  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m17_128 -> m17_133  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m17_128 -> m17_134  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m17_130 -> m17_131  [key=0, style=solid];
m17_130 -> m17_86  [key=2, style=dotted];
m17_130 -> m17_132  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m17_127 -> m17_137  [key=0, style=solid];
m17_129 -> m17_130  [key=0, style=solid];
m17_129 -> m17_132  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m17_133 -> m17_129  [key=0, style=solid];
m17_133 -> m17_134  [key=0, style=solid];
m17_134 -> m17_135  [key=0, style=solid];
m17_134 -> m17_136  [key=0, style=solid];
m17_132 -> m17_133  [key=0, style=solid];
m17_132 -> m17_132  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m17_132 -> m17_134  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m17_131 -> m17_132  [key=0, style=solid];
m17_131 -> m17_134  [key=0, style=solid];
m17_135 -> m17_137  [key=0, style=solid];
m17_136 -> m17_137  [key=0, style=solid];
m17_137 -> m17_125  [key=0, style=bold, color=blue];
m17_930 -> m17_1213  [key=0, style=solid];
m17_1213 -> m17_1214  [key=0, style=solid];
m17_1213 -> m17_1215  [key=0, style=solid];
m17_1213 -> m17_366  [key=2, style=dotted];
m17_1214 -> m17_1216  [key=0, style=solid];
m17_1214 -> n127  [key=2, style=dotted];
m17_1215 -> m17_1216  [key=0, style=solid];
m17_1215 -> m17_177  [key=2, style=dotted];
m17_1216 -> m17_930  [key=0, style=bold, color=blue];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_11  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_12  [key=2, style=dotted];
m17_11 -> m17_8  [key=0, style=bold, color=blue];
m17_68 -> m17_69  [key=0, style=solid];
m17_68 -> m17_70  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m17_69 -> m17_70  [key=0, style=solid];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_72  [key=2, style=dotted];
m17_71 -> m17_68  [key=0, style=bold, color=blue];
m17_58 -> m17_73  [key=0, style=solid];
m17_73 -> m17_74  [key=0, style=solid];
m17_74 -> m17_75  [key=0, style=solid];
m17_74 -> m17_82  [key=0, style=solid];
m17_75 -> m17_76  [key=0, style=solid];
m17_75 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_75 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label=count];
m17_76 -> m17_77  [key=0, style=solid];
m17_76 -> m17_78  [key=0, style=solid];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_68  [key=2, style=dotted];
m17_80 -> m17_81  [key=0, style=solid];
m17_78 -> m17_79  [key=0, style=solid];
m17_79 -> m17_80  [key=0, style=solid];
m17_81 -> m17_82  [key=0, style=solid];
m17_82 -> m17_58  [key=0, style=bold, color=blue];
m17_260 -> m17_370  [key=0, style=solid];
m17_370 -> m17_371  [key=0, style=solid];
m17_370 -> m17_176  [key=2, style=dotted];
m17_370 -> m17_177  [key=2, style=dotted];
m17_371 -> m17_260  [key=0, style=bold, color=blue];
m17_1107 -> m17_1117  [key=0, style=solid];
m17_1107 -> m17_1118  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_1117 -> m17_1118  [key=0, style=solid];
m17_1117 -> m17_65  [key=2, style=dotted];
m17_1118 -> m17_1119  [key=0, style=solid];
m17_1118 -> m17_1120  [key=2, style=dotted];
m17_1119 -> m17_1107  [key=0, style=bold, color=blue];
m17_730 -> m17_731  [key=0, style=solid];
m17_731 -> m17_732  [key=0, style=solid];
m17_732 -> m17_733  [key=0, style=solid];
m17_732 -> m17_734  [key=2, style=dotted];
m17_733 -> m17_730  [key=0, style=bold, color=blue];
m17_264 -> m17_558  [key=0, style=solid];
m17_558 -> m17_559  [key=0, style=solid];
m17_558 -> m17_565  [key=0, style=solid];
m17_558 -> m17_120  [key=2, style=dotted];
m17_559 -> m17_560  [key=0, style=solid];
m17_559 -> m17_173  [key=2, style=dotted];
m17_565 -> m17_566  [key=0, style=solid];
m17_565 -> m17_174  [key=2, style=dotted];
m17_560 -> m17_561  [key=0, style=solid];
m17_560 -> m17_562  [key=0, style=solid];
m17_561 -> m17_566  [key=0, style=solid];
m17_562 -> m17_563  [key=0, style=solid];
m17_562 -> m17_564  [key=0, style=solid];
m17_563 -> m17_565  [key=0, style=solid];
m17_563 -> m17_175  [key=2, style=dotted];
m17_564 -> m17_566  [key=0, style=solid];
m17_564 -> m17_176  [key=2, style=dotted];
m17_564 -> m17_177  [key=2, style=dotted];
m17_566 -> m17_264  [key=0, style=bold, color=blue];
m17_175 -> m17_1124  [key=0, style=solid];
m17_175 -> m17_1142  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_175 -> m17_1150  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_175 -> m17_1155  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_175 -> m17_1160  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_1124 -> m17_1125  [key=0, style=solid];
m17_1142 -> m17_1143  [key=0, style=solid];
m17_1142 -> m17_1165  [key=2, style=dotted];
m17_1150 -> m17_1151  [key=0, style=solid];
m17_1150 -> m17_1165  [key=2, style=dotted];
m17_1155 -> m17_1156  [key=0, style=solid];
m17_1155 -> m17_1165  [key=2, style=dotted];
m17_1160 -> m17_1161  [key=0, style=solid];
m17_1160 -> m17_1165  [key=2, style=dotted];
m17_1125 -> m17_1126  [key=0, style=solid];
m17_1125 -> m17_1127  [key=0, style=solid];
m17_1125 -> m17_120  [key=2, style=dotted];
m17_1126 -> m17_1164  [key=0, style=solid];
m17_1126 -> m17_177  [key=2, style=dotted];
m17_1127 -> m17_1128  [key=0, style=solid];
m17_1127 -> m17_1140  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1127 -> m17_1147  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1127 -> m17_1154  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1127 -> m17_1159  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1128 -> m17_1129  [key=0, style=solid];
m17_1128 -> m17_1130  [key=0, style=solid];
m17_1140 -> m17_1141  [key=0, style=solid];
m17_1140 -> m17_1142  [key=0, style=solid];
m17_1147 -> m17_1148  [key=0, style=solid];
m17_1147 -> m17_1135  [key=0, style=solid];
m17_1154 -> m17_1155  [key=0, style=solid];
m17_1154 -> m17_1157  [key=0, style=solid];
m17_1159 -> m17_1160  [key=0, style=solid];
m17_1159 -> m17_1162  [key=0, style=solid];
m17_1129 -> m17_1133  [key=0, style=solid];
m17_1129 -> m17_1140  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1129 -> m17_1147  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1129 -> m17_1154  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1129 -> m17_1159  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1130 -> m17_1131  [key=0, style=solid];
m17_1130 -> m17_1132  [key=0, style=solid];
m17_1131 -> m17_1133  [key=0, style=solid];
m17_1131 -> m17_1140  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1131 -> m17_1147  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1131 -> m17_1154  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1131 -> m17_1159  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m17_1132 -> m17_1164  [key=0, style=solid];
m17_1132 -> m17_176  [key=2, style=dotted];
m17_1132 -> m17_177  [key=2, style=dotted];
m17_1133 -> m17_1134  [key=0, style=solid];
m17_1134 -> m17_1135  [key=0, style=solid];
m17_1134 -> m17_1142  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_1134 -> m17_1150  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_1134 -> m17_1155  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_1134 -> m17_1160  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_1135 -> m17_1136  [key=0, style=solid];
m17_1135 -> m17_1164  [key=0, style=solid];
m17_1136 -> m17_1137  [key=0, style=solid];
m17_1136 -> m17_1145  [key=0, style=solid];
m17_1136 -> m17_1153  [key=0, style=solid];
m17_1136 -> m17_1158  [key=0, style=solid];
m17_1136 -> m17_1163  [key=0, style=solid];
m17_1137 -> m17_1138  [key=0, style=solid];
m17_1145 -> m17_1146  [key=0, style=solid];
m17_1153 -> m17_1154  [key=0, style=solid];
m17_1158 -> m17_1159  [key=0, style=solid];
m17_1163 -> m17_1135  [key=0, style=solid];
m17_1138 -> m17_1139  [key=0, style=solid];
m17_1138 -> m17_1144  [key=0, style=solid];
m17_1139 -> m17_1140  [key=0, style=solid];
m17_1139 -> m17_1135  [key=0, style=solid];
m17_1139 -> m17_83  [key=2, style=dotted];
m17_1144 -> m17_1135  [key=0, style=solid];
m17_1141 -> m17_1164  [key=0, style=solid];
m17_1141 -> m17_177  [key=2, style=dotted];
m17_1143 -> m17_1164  [key=0, style=solid];
m17_1146 -> m17_1147  [key=0, style=solid];
m17_1148 -> m17_1149  [key=0, style=solid];
m17_1148 -> m17_1135  [key=0, style=solid];
m17_1148 -> m17_120  [key=2, style=dotted];
m17_1149 -> m17_1150  [key=0, style=solid];
m17_1149 -> m17_1135  [key=0, style=solid];
m17_1151 -> m17_1152  [key=0, style=solid];
m17_1152 -> m17_1164  [key=0, style=solid];
m17_1157 -> m17_1135  [key=0, style=solid];
m17_1157 -> m17_261  [key=2, style=dotted];
m17_1156 -> m17_1164  [key=0, style=solid];
m17_1162 -> m17_1135  [key=0, style=solid];
m17_1162 -> m17_262  [key=2, style=dotted];
m17_1161 -> m17_1164  [key=0, style=solid];
m17_1164 -> m17_175  [key=0, style=bold, color=blue];
m17_59 -> m17_578  [key=0, style=solid];
m17_59 -> m17_589  [key=1, style=dashed, color=darkseagreen4, label=char];
m17_59 -> m17_593  [key=1, style=dashed, color=darkseagreen4, label=char];
m17_59 -> m17_653  [key=1, style=dashed, color=darkseagreen4, label=char];
m17_578 -> m17_579  [key=0, style=solid];
m17_578 -> m17_583  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_589 -> m17_664  [key=0, style=solid];
m17_589 -> m17_176  [key=2, style=dotted];
m17_589 -> m17_177  [key=2, style=dotted];
m17_593 -> m17_664  [key=0, style=solid];
m17_593 -> m17_176  [key=2, style=dotted];
m17_593 -> m17_177  [key=2, style=dotted];
m17_653 -> m17_654  [key=0, style=solid];
m17_653 -> m17_582  [key=0, style=solid];
m17_579 -> m17_580  [key=0, style=solid];
m17_579 -> m17_655  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_579 -> m17_656  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_583 -> m17_584  [key=0, style=solid];
m17_583 -> m17_590  [key=0, style=solid];
m17_583 -> m17_643  [key=0, style=solid];
m17_583 -> m17_647  [key=0, style=solid];
m17_583 -> m17_651  [key=0, style=solid];
m17_583 -> m17_583  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_583 -> m17_585  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_583 -> m17_586  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_583 -> m17_591  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_583 -> m17_594  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_583 -> m17_595  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_583 -> m17_596  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_580 -> m17_581  [key=0, style=solid];
m17_580 -> m17_633  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m17_580 -> m17_641  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m17_655 -> m17_656  [key=0, style=solid];
m17_655 -> m17_657  [key=0, style=solid];
m17_656 -> m17_661  [key=0, style=solid];
m17_656 -> m17_669  [key=2, style=dotted];
m17_581 -> m17_582  [key=0, style=solid];
m17_633 -> m17_634  [key=0, style=solid];
m17_633 -> m17_668  [key=2, style=dotted];
m17_641 -> m17_642  [key=0, style=solid];
m17_641 -> m17_668  [key=2, style=dotted];
m17_582 -> m17_583  [key=0, style=solid];
m17_582 -> m17_664  [key=0, style=solid];
m17_584 -> m17_585  [key=0, style=solid];
m17_590 -> m17_591  [key=0, style=solid];
m17_643 -> m17_644  [key=0, style=solid];
m17_647 -> m17_648  [key=0, style=solid];
m17_651 -> m17_652  [key=0, style=solid];
m17_585 -> m17_586  [key=0, style=solid];
m17_585 -> m17_582  [key=0, style=solid];
m17_586 -> m17_587  [key=0, style=solid];
m17_586 -> m17_586  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_586 -> m17_588  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_586 -> m17_591  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_586 -> m17_594  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_586 -> m17_595  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_586 -> m17_596  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_591 -> m17_592  [key=0, style=solid];
m17_594 -> m17_595  [key=0, style=solid];
m17_594 -> m17_633  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m17_594 -> m17_641  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m17_595 -> m17_596  [key=0, style=solid];
m17_595 -> m17_598  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_595 -> m17_614  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_595 -> m17_639  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_596 -> m17_597  [key=0, style=solid];
m17_596 -> m17_596  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_596 -> m17_616  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_587 -> m17_588  [key=0, style=solid];
m17_587 -> m17_582  [key=0, style=solid];
m17_587 -> m17_83  [key=2, style=dotted];
m17_588 -> m17_589  [key=0, style=solid];
m17_592 -> m17_593  [key=0, style=solid];
m17_592 -> m17_594  [key=0, style=solid];
m17_592 -> m17_120  [key=2, style=dotted];
m17_598 -> m17_599  [key=0, style=solid];
m17_598 -> m17_601  [key=0, style=solid];
m17_598 -> m17_603  [key=0, style=solid];
m17_598 -> m17_605  [key=0, style=solid];
m17_598 -> m17_607  [key=0, style=solid];
m17_598 -> m17_609  [key=0, style=solid];
m17_598 -> m17_611  [key=0, style=solid];
m17_598 -> m17_615  [key=0, style=solid];
m17_598 -> m17_638  [key=0, style=solid];
m17_614 -> m17_640  [key=0, style=solid];
m17_639 -> m17_664  [key=0, style=solid];
m17_639 -> m17_176  [key=2, style=dotted];
m17_639 -> m17_177  [key=2, style=dotted];
m17_597 -> m17_598  [key=0, style=solid];
m17_616 -> m17_617  [key=0, style=solid];
m17_599 -> m17_600  [key=0, style=solid];
m17_601 -> m17_602  [key=0, style=solid];
m17_603 -> m17_604  [key=0, style=solid];
m17_605 -> m17_606  [key=0, style=solid];
m17_607 -> m17_608  [key=0, style=solid];
m17_609 -> m17_610  [key=0, style=solid];
m17_611 -> m17_612  [key=0, style=solid];
m17_615 -> m17_616  [key=0, style=solid];
m17_638 -> m17_639  [key=0, style=solid];
m17_600 -> m17_640  [key=0, style=solid];
m17_602 -> m17_640  [key=0, style=solid];
m17_604 -> m17_640  [key=0, style=solid];
m17_606 -> m17_640  [key=0, style=solid];
m17_608 -> m17_640  [key=0, style=solid];
m17_610 -> m17_640  [key=0, style=solid];
m17_612 -> m17_613  [key=0, style=solid];
m17_613 -> m17_614  [key=0, style=solid];
m17_617 -> m17_618  [key=0, style=solid];
m17_617 -> m17_665  [key=2, style=dotted];
m17_617 -> m17_620  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m17_617 -> m17_624  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m17_617 -> m17_641  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m17_618 -> m17_619  [key=0, style=solid];
m17_618 -> m17_620  [key=0, style=solid];
m17_618 -> m17_666  [key=2, style=dotted];
m17_620 -> m17_621  [key=0, style=solid];
m17_620 -> m17_637  [key=0, style=solid];
m17_620 -> m17_667  [key=2, style=dotted];
m17_624 -> m17_625  [key=0, style=solid];
m17_624 -> m17_633  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m17_619 -> m17_637  [key=0, style=solid];
m17_619 -> m17_641  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m17_621 -> m17_622  [key=0, style=solid];
m17_637 -> m17_640  [key=0, style=solid];
m17_637 -> m17_638  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_637 -> m17_642  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_637 -> m17_644  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_622 -> m17_623  [key=0, style=solid];
m17_622 -> m17_636  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m17_623 -> m17_624  [key=0, style=solid];
m17_623 -> m17_635  [key=0, style=solid];
m17_623 -> m17_120  [key=2, style=dotted];
m17_636 -> m17_621  [key=0, style=solid];
m17_636 -> m17_637  [key=0, style=solid];
m17_635 -> m17_636  [key=0, style=solid];
m17_635 -> m17_641  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m17_625 -> m17_626  [key=0, style=solid];
m17_626 -> m17_627  [key=0, style=solid];
m17_626 -> m17_665  [key=2, style=dotted];
m17_626 -> m17_628  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m17_626 -> m17_641  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m17_627 -> m17_628  [key=0, style=solid];
m17_627 -> m17_632  [key=0, style=solid];
m17_627 -> m17_666  [key=2, style=dotted];
m17_628 -> m17_629  [key=0, style=solid];
m17_628 -> m17_631  [key=0, style=solid];
m17_628 -> m17_667  [key=2, style=dotted];
m17_632 -> m17_633  [key=0, style=solid];
m17_632 -> m17_8  [key=2, style=dotted];
m17_629 -> m17_630  [key=0, style=solid];
m17_629 -> m17_633  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m17_631 -> m17_632  [key=0, style=solid];
m17_631 -> m17_633  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m17_630 -> m17_632  [key=0, style=solid];
m17_630 -> m17_636  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m17_634 -> m17_636  [key=0, style=solid];
m17_634 -> m17_641  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m17_640 -> m17_641  [key=0, style=solid];
m17_640 -> m17_8  [key=2, style=dotted];
m17_642 -> m17_582  [key=0, style=solid];
m17_642 -> m17_655  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m17_642 -> m17_658  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m17_642 -> m17_659  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m17_644 -> m17_645  [key=0, style=solid];
m17_645 -> m17_646  [key=0, style=solid];
m17_645 -> m17_261  [key=2, style=dotted];
m17_646 -> m17_582  [key=0, style=solid];
m17_646 -> m17_648  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_648 -> m17_649  [key=0, style=solid];
m17_649 -> m17_650  [key=0, style=solid];
m17_649 -> m17_262  [key=2, style=dotted];
m17_650 -> m17_582  [key=0, style=solid];
m17_650 -> m17_653  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_650 -> m17_654  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_652 -> m17_653  [key=0, style=solid];
m17_654 -> m17_655  [key=0, style=solid];
m17_654 -> m17_654  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_654 -> m17_656  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_654 -> m17_658  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_654 -> m17_659  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_654 -> m17_661  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_658 -> m17_659  [key=0, style=solid];
m17_658 -> m17_660  [key=0, style=solid];
m17_659 -> m17_660  [key=0, style=solid];
m17_659 -> m17_670  [key=2, style=dotted];
m17_661 -> m17_662  [key=0, style=solid];
m17_661 -> m17_661  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m17_657 -> m17_658  [key=0, style=solid];
m17_657 -> m17_8  [key=2, style=dotted];
m17_660 -> m17_661  [key=0, style=solid];
m17_660 -> m17_669  [key=2, style=dotted];
m17_662 -> m17_663  [key=0, style=solid];
m17_663 -> m17_664  [key=0, style=solid];
m17_664 -> m17_59  [key=0, style=bold, color=blue];
m17_172 -> m17_735  [key=0, style=solid];
m17_735 -> m17_736  [key=0, style=solid];
m17_735 -> m17_773  [key=0, style=solid];
m17_736 -> m17_737  [key=0, style=solid];
m17_736 -> m17_770  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_736 -> m17_772  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_737 -> m17_738  [key=0, style=solid];
m17_737 -> m17_744  [key=0, style=solid];
m17_737 -> m17_748  [key=0, style=solid];
m17_737 -> m17_752  [key=0, style=solid];
m17_737 -> m17_756  [key=0, style=solid];
m17_737 -> m17_759  [key=0, style=solid];
m17_737 -> m17_763  [key=0, style=solid];
m17_737 -> m17_766  [key=0, style=solid];
m17_737 -> m17_768  [key=0, style=solid];
m17_737 -> m17_770  [key=0, style=solid];
m17_770 -> m17_771  [key=0, style=solid];
m17_770 -> m17_772  [key=0, style=solid];
m17_770 -> m17_263  [key=2, style=dotted];
m17_772 -> m17_773  [key=0, style=solid];
m17_772 -> m17_176  [key=2, style=dotted];
m17_772 -> m17_177  [key=2, style=dotted];
m17_738 -> m17_739  [key=0, style=solid];
m17_744 -> m17_745  [key=0, style=solid];
m17_748 -> m17_749  [key=0, style=solid];
m17_752 -> m17_753  [key=0, style=solid];
m17_756 -> m17_757  [key=0, style=solid];
m17_759 -> m17_760  [key=0, style=solid];
m17_763 -> m17_764  [key=0, style=solid];
m17_766 -> m17_767  [key=0, style=solid];
m17_768 -> m17_769  [key=0, style=solid];
m17_739 -> m17_740  [key=0, style=solid];
m17_739 -> m17_743  [key=0, style=solid];
m17_740 -> m17_741  [key=0, style=solid];
m17_740 -> m17_735  [key=0, style=solid];
m17_740 -> m17_83  [key=2, style=dotted];
m17_743 -> m17_735  [key=0, style=solid];
m17_741 -> m17_742  [key=0, style=solid];
m17_742 -> m17_773  [key=0, style=solid];
m17_745 -> m17_746  [key=0, style=solid];
m17_746 -> m17_747  [key=0, style=solid];
m17_746 -> m17_174  [key=2, style=dotted];
m17_747 -> m17_773  [key=0, style=solid];
m17_749 -> m17_750  [key=0, style=solid];
m17_750 -> m17_751  [key=0, style=solid];
m17_750 -> m17_174  [key=2, style=dotted];
m17_751 -> m17_773  [key=0, style=solid];
m17_753 -> m17_754  [key=0, style=solid];
m17_754 -> m17_755  [key=0, style=solid];
m17_754 -> m17_174  [key=2, style=dotted];
m17_755 -> m17_773  [key=0, style=solid];
m17_757 -> m17_758  [key=0, style=solid];
m17_757 -> m17_175  [key=2, style=dotted];
m17_758 -> m17_773  [key=0, style=solid];
m17_760 -> m17_761  [key=0, style=solid];
m17_761 -> m17_762  [key=0, style=solid];
m17_761 -> m17_456  [key=2, style=dotted];
m17_762 -> m17_773  [key=0, style=solid];
m17_764 -> m17_765  [key=0, style=solid];
m17_765 -> m17_735  [key=0, style=solid];
m17_767 -> m17_735  [key=0, style=solid];
m17_767 -> m17_261  [key=2, style=dotted];
m17_769 -> m17_735  [key=0, style=solid];
m17_769 -> m17_262  [key=2, style=dotted];
m17_771 -> m17_735  [key=0, style=solid];
m17_773 -> m17_172  [key=0, style=bold, color=blue];
m17_254 -> m17_567  [key=0, style=solid];
m17_567 -> m17_568  [key=0, style=solid];
m17_567 -> m17_571  [key=0, style=solid];
m17_568 -> m17_569  [key=0, style=solid];
m17_568 -> m17_572  [key=0, style=solid];
m17_568 -> m17_83  [key=2, style=dotted];
m17_571 -> m17_572  [key=0, style=solid];
m17_569 -> m17_570  [key=0, style=solid];
m17_572 -> m17_573  [key=0, style=solid];
m17_570 -> m17_573  [key=0, style=solid];
m17_573 -> m17_254  [key=0, style=bold, color=blue];
m17_1116 -> m17_1121  [key=0, style=solid];
m17_1121 -> m17_1122  [key=0, style=solid];
m17_1121 -> m17_1123  [key=2, style=dotted];
m17_1122 -> m17_1116  [key=0, style=bold, color=blue];
m17_173 -> m17_943  [key=0, style=solid];
m17_173 -> m17_961  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_943 -> m17_944  [key=0, style=solid];
m17_943 -> m17_945  [key=1, style=dashed, color=darkseagreen4, label=finished];
m17_961 -> m17_962  [key=0, style=solid];
m17_944 -> m17_945  [key=0, style=solid];
m17_944 -> m17_961  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m17_945 -> m17_946  [key=0, style=solid];
m17_945 -> m17_961  [key=0, style=solid];
m17_946 -> m17_947  [key=0, style=solid];
m17_946 -> m17_957  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_947 -> m17_948  [key=0, style=solid];
m17_947 -> m17_953  [key=0, style=solid];
m17_947 -> m17_955  [key=0, style=solid];
m17_947 -> m17_957  [key=0, style=solid];
m17_957 -> m17_958  [key=0, style=solid];
m17_957 -> m17_960  [key=0, style=solid];
m17_957 -> m17_263  [key=2, style=dotted];
m17_948 -> m17_949  [key=0, style=solid];
m17_953 -> m17_954  [key=0, style=solid];
m17_955 -> m17_956  [key=0, style=solid];
m17_949 -> m17_950  [key=0, style=solid];
m17_949 -> m17_952  [key=0, style=solid];
m17_950 -> m17_951  [key=0, style=solid];
m17_950 -> m17_945  [key=0, style=solid];
m17_950 -> m17_83  [key=2, style=dotted];
m17_952 -> m17_945  [key=0, style=solid];
m17_951 -> m17_945  [key=0, style=solid];
m17_954 -> m17_945  [key=0, style=solid];
m17_954 -> m17_261  [key=2, style=dotted];
m17_956 -> m17_945  [key=0, style=solid];
m17_956 -> m17_262  [key=2, style=dotted];
m17_958 -> m17_959  [key=0, style=solid];
m17_958 -> m17_961  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m17_960 -> m17_945  [key=0, style=solid];
m17_959 -> m17_945  [key=0, style=solid];
m17_962 -> m17_173  [key=0, style=bold, color=blue];
m17_120 -> m17_121  [key=0, style=solid];
m17_120 -> m17_122  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_121 -> m17_122  [key=0, style=solid];
m17_121 -> m17_123  [key=0, style=solid];
m17_122 -> m17_124  [key=0, style=solid];
m17_122 -> m17_125  [key=2, style=dotted];
m17_123 -> m17_124  [key=0, style=solid];
m17_124 -> m17_120  [key=0, style=bold, color=blue];
m17_182 -> m17_183  [key=0, style=solid];
m17_183 -> m17_184  [key=0, style=solid];
m17_183 -> m17_185  [key=2, style=dotted];
m17_184 -> m17_182  [key=0, style=bold, color=blue];
m17_86 -> m17_87  [key=0, style=solid];
m17_86 -> m17_89  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_86 -> m17_90  [key=1, style=dashed, color=darkseagreen4, label=bool];
m17_86 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_86 -> m17_97  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_86 -> m17_98  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_87 -> m17_88  [key=0, style=solid];
m17_87 -> m17_89  [key=0, style=solid];
m17_89 -> m17_90  [key=0, style=solid];
m17_89 -> m17_108  [key=0, style=solid];
m17_90 -> m17_91  [key=0, style=solid];
m17_90 -> m17_96  [key=0, style=solid];
m17_91 -> m17_92  [key=0, style=solid];
m17_91 -> m17_116  [key=2, style=dotted];
m17_97 -> m17_98  [key=0, style=solid];
m17_97 -> m17_103  [key=0, style=solid];
m17_98 -> m17_99  [key=0, style=solid];
m17_98 -> m17_117  [key=2, style=dotted];
m17_98 -> m17_100  [key=1, style=dashed, color=darkseagreen4, label=dst];
m17_98 -> m17_102  [key=1, style=dashed, color=darkseagreen4, label=dst];
m17_88 -> m17_115  [key=0, style=solid];
m17_108 -> m17_109  [key=0, style=solid];
m17_96 -> m17_97  [key=0, style=solid];
m17_96 -> m17_98  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m17_96 -> m17_99  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m17_96 -> m17_100  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m17_96 -> m17_103  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m17_96 -> m17_104  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m17_96 -> m17_107  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m17_92 -> m17_93  [key=0, style=solid];
m17_92 -> m17_117  [key=2, style=dotted];
m17_92 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label=dst];
m17_93 -> m17_94  [key=0, style=solid];
m17_93 -> m17_68  [key=2, style=dotted];
m17_95 -> m17_108  [key=0, style=solid];
m17_94 -> m17_95  [key=0, style=solid];
m17_94 -> m17_118  [key=2, style=dotted];
m17_99 -> m17_100  [key=0, style=solid];
m17_99 -> m17_101  [key=0, style=solid];
m17_100 -> m17_101  [key=0, style=solid];
m17_100 -> m17_68  [key=2, style=dotted];
m17_103 -> m17_104  [key=0, style=solid];
m17_103 -> m17_105  [key=0, style=solid];
m17_104 -> m17_105  [key=0, style=solid];
m17_104 -> m17_68  [key=2, style=dotted];
m17_107 -> m17_108  [key=0, style=solid];
m17_102 -> m17_105  [key=0, style=solid];
m17_101 -> m17_102  [key=0, style=solid];
m17_101 -> m17_118  [key=2, style=dotted];
m17_105 -> m17_106  [key=0, style=solid];
m17_106 -> m17_107  [key=0, style=solid];
m17_109 -> m17_110  [key=0, style=solid];
m17_109 -> m17_119  [key=2, style=dotted];
m17_109 -> m17_111  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m17_109 -> m17_114  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m17_110 -> m17_111  [key=0, style=solid];
m17_111 -> m17_112  [key=0, style=solid];
m17_111 -> m17_113  [key=0, style=solid];
m17_114 -> m17_115  [key=0, style=solid];
m17_112 -> m17_113  [key=0, style=solid];
m17_113 -> m17_114  [key=0, style=solid];
m17_115 -> m17_86  [key=0, style=bold, color=blue];
m17_259 -> m17_450  [key=0, style=solid];
m17_450 -> m17_451  [key=0, style=solid];
m17_451 -> m17_452  [key=0, style=solid];
m17_451 -> m17_454  [key=0, style=solid];
m17_452 -> m17_453  [key=0, style=solid];
m17_452 -> m17_174  [key=2, style=dotted];
m17_454 -> m17_455  [key=0, style=solid];
m17_454 -> m17_456  [key=2, style=dotted];
m17_453 -> m17_455  [key=0, style=solid];
m17_453 -> m17_260  [key=2, style=dotted];
m17_455 -> m17_259  [key=0, style=bold, color=blue];
m17_665 -> m17_676  [key=0, style=solid];
m17_676 -> m17_677  [key=0, style=solid];
m17_676 -> m17_682  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m17_677 -> m17_678  [key=0, style=solid];
m17_677 -> m17_681  [key=0, style=solid];
m17_677 -> m17_120  [key=2, style=dotted];
m17_682 -> m17_683  [key=0, style=solid];
m17_678 -> m17_679  [key=0, style=solid];
m17_678 -> m17_684  [key=2, style=dotted];
m17_678 -> m17_685  [key=2, style=dotted];
m17_681 -> m17_683  [key=0, style=solid];
m17_681 -> m17_177  [key=2, style=dotted];
m17_679 -> m17_680  [key=0, style=solid];
m17_679 -> m17_682  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m17_680 -> m17_682  [key=0, style=solid];
m17_683 -> m17_665  [key=0, style=bold, color=blue];
m17_170 -> m17_851  [key=0, style=solid];
m17_851 -> m17_852  [key=0, style=solid];
m17_851 -> m17_929  [key=0, style=solid];
m17_852 -> m17_853  [key=0, style=solid];
m17_852 -> m17_861  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_852 -> m17_923  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_852 -> m17_925  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_852 -> m17_928  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_853 -> m17_854  [key=0, style=solid];
m17_853 -> m17_859  [key=0, style=solid];
m17_853 -> m17_863  [key=0, style=solid];
m17_853 -> m17_866  [key=0, style=solid];
m17_853 -> m17_869  [key=0, style=solid];
m17_853 -> m17_880  [key=0, style=solid];
m17_853 -> m17_883  [key=0, style=solid];
m17_853 -> m17_886  [key=0, style=solid];
m17_853 -> m17_891  [key=0, style=solid];
m17_853 -> m17_894  [key=0, style=solid];
m17_853 -> m17_897  [key=0, style=solid];
m17_853 -> m17_901  [key=0, style=solid];
m17_853 -> m17_905  [key=0, style=solid];
m17_853 -> m17_909  [key=0, style=solid];
m17_853 -> m17_912  [key=0, style=solid];
m17_853 -> m17_916  [key=0, style=solid];
m17_853 -> m17_918  [key=0, style=solid];
m17_853 -> m17_920  [key=0, style=solid];
m17_853 -> m17_923  [key=0, style=solid];
m17_861 -> m17_862  [key=0, style=solid];
m17_861 -> m17_17  [key=2, style=dotted];
m17_923 -> m17_924  [key=0, style=solid];
m17_923 -> m17_925  [key=0, style=solid];
m17_923 -> m17_263  [key=2, style=dotted];
m17_925 -> m17_926  [key=0, style=solid];
m17_925 -> m17_928  [key=0, style=solid];
m17_925 -> m17_934  [key=2, style=dotted];
m17_928 -> m17_929  [key=0, style=solid];
m17_928 -> m17_260  [key=2, style=dotted];
m17_854 -> m17_855  [key=0, style=solid];
m17_859 -> m17_860  [key=0, style=solid];
m17_863 -> m17_864  [key=0, style=solid];
m17_866 -> m17_867  [key=0, style=solid];
m17_869 -> m17_870  [key=0, style=solid];
m17_880 -> m17_881  [key=0, style=solid];
m17_883 -> m17_884  [key=0, style=solid];
m17_886 -> m17_887  [key=0, style=solid];
m17_891 -> m17_892  [key=0, style=solid];
m17_894 -> m17_895  [key=0, style=solid];
m17_897 -> m17_898  [key=0, style=solid];
m17_901 -> m17_902  [key=0, style=solid];
m17_905 -> m17_906  [key=0, style=solid];
m17_909 -> m17_910  [key=0, style=solid];
m17_912 -> m17_913  [key=0, style=solid];
m17_916 -> m17_917  [key=0, style=solid];
m17_918 -> m17_919  [key=0, style=solid];
m17_920 -> m17_921  [key=0, style=solid];
m17_855 -> m17_856  [key=0, style=solid];
m17_855 -> m17_858  [key=0, style=solid];
m17_856 -> m17_857  [key=0, style=solid];
m17_856 -> m17_851  [key=0, style=solid];
m17_856 -> m17_83  [key=2, style=dotted];
m17_858 -> m17_851  [key=0, style=solid];
m17_857 -> m17_929  [key=0, style=solid];
m17_860 -> m17_861  [key=0, style=solid];
m17_862 -> m17_929  [key=0, style=solid];
m17_864 -> m17_865  [key=0, style=solid];
m17_864 -> m17_930  [key=2, style=dotted];
m17_865 -> m17_929  [key=0, style=solid];
m17_867 -> m17_868  [key=0, style=solid];
m17_867 -> m17_931  [key=2, style=dotted];
m17_868 -> m17_929  [key=0, style=solid];
m17_870 -> m17_871  [key=0, style=solid];
m17_870 -> m17_877  [key=0, style=solid];
m17_870 -> m17_120  [key=2, style=dotted];
m17_871 -> m17_872  [key=0, style=solid];
m17_871 -> m17_874  [key=1, style=dashed, color=darkseagreen4, label=next];
m17_877 -> m17_878  [key=0, style=solid];
m17_872 -> m17_873  [key=0, style=solid];
m17_872 -> m17_874  [key=0, style=solid];
m17_874 -> m17_875  [key=0, style=solid];
m17_874 -> m17_876  [key=0, style=solid];
m17_873 -> m17_879  [key=0, style=solid];
m17_873 -> m17_556  [key=2, style=dotted];
m17_875 -> m17_879  [key=0, style=solid];
m17_875 -> m17_932  [key=2, style=dotted];
m17_876 -> m17_929  [key=0, style=solid];
m17_876 -> m17_260  [key=2, style=dotted];
m17_878 -> m17_929  [key=0, style=solid];
m17_878 -> m17_557  [key=2, style=dotted];
m17_879 -> m17_929  [key=0, style=solid];
m17_881 -> m17_882  [key=0, style=solid];
m17_881 -> m17_369  [key=2, style=dotted];
m17_882 -> m17_929  [key=0, style=solid];
m17_884 -> m17_885  [key=0, style=solid];
m17_884 -> m17_368  [key=2, style=dotted];
m17_885 -> m17_929  [key=0, style=solid];
m17_887 -> m17_888  [key=0, style=solid];
m17_887 -> m17_889  [key=0, style=solid];
m17_887 -> m17_120  [key=2, style=dotted];
m17_888 -> m17_890  [key=0, style=solid];
m17_888 -> m17_364  [key=2, style=dotted];
m17_889 -> m17_890  [key=0, style=solid];
m17_889 -> m17_365  [key=2, style=dotted];
m17_890 -> m17_929  [key=0, style=solid];
m17_892 -> m17_893  [key=0, style=solid];
m17_892 -> m17_175  [key=2, style=dotted];
m17_893 -> m17_929  [key=0, style=solid];
m17_895 -> m17_896  [key=0, style=solid];
m17_895 -> m17_933  [key=2, style=dotted];
m17_896 -> m17_929  [key=0, style=solid];
m17_898 -> m17_899  [key=0, style=solid];
m17_899 -> m17_900  [key=0, style=solid];
m17_899 -> m17_174  [key=2, style=dotted];
m17_900 -> m17_929  [key=0, style=solid];
m17_902 -> m17_903  [key=0, style=solid];
m17_903 -> m17_904  [key=0, style=solid];
m17_903 -> m17_174  [key=2, style=dotted];
m17_904 -> m17_929  [key=0, style=solid];
m17_906 -> m17_907  [key=0, style=solid];
m17_907 -> m17_908  [key=0, style=solid];
m17_907 -> m17_174  [key=2, style=dotted];
m17_908 -> m17_929  [key=0, style=solid];
m17_910 -> m17_911  [key=0, style=solid];
m17_910 -> m17_174  [key=2, style=dotted];
m17_911 -> m17_929  [key=0, style=solid];
m17_913 -> m17_914  [key=0, style=solid];
m17_914 -> m17_915  [key=0, style=solid];
m17_914 -> m17_174  [key=2, style=dotted];
m17_915 -> m17_929  [key=0, style=solid];
m17_917 -> m17_851  [key=0, style=solid];
m17_917 -> m17_261  [key=2, style=dotted];
m17_919 -> m17_851  [key=0, style=solid];
m17_919 -> m17_262  [key=2, style=dotted];
m17_921 -> m17_922  [key=0, style=solid];
m17_922 -> m17_851  [key=0, style=solid];
m17_924 -> m17_851  [key=0, style=solid];
m17_926 -> m17_927  [key=0, style=solid];
m17_926 -> m17_365  [key=2, style=dotted];
m17_927 -> m17_929  [key=0, style=solid];
m17_929 -> m17_170  [key=0, style=bold, color=blue];
m17_365 -> m17_999  [key=0, style=solid];
m17_365 -> m17_1009  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_365 -> m17_1022  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_365 -> m17_1039  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_365 -> m17_1054  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m17_999 -> m17_1000  [key=0, style=solid];
m17_999 -> m17_58  [key=2, style=dotted];
m17_1009 -> m17_1010  [key=0, style=solid];
m17_1009 -> m17_1022  [key=0, style=solid];
m17_1022 -> m17_1023  [key=0, style=solid];
m17_1022 -> m17_1039  [key=0, style=solid];
m17_1039 -> m17_1040  [key=0, style=solid];
m17_1039 -> m17_1054  [key=0, style=solid];
m17_1054 -> m17_1055  [key=0, style=solid];
m17_1054 -> m17_1069  [key=0, style=solid];
m17_1000 -> m17_1001  [key=0, style=solid];
m17_1000 -> m17_1007  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_1000 -> m17_1008  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_1000 -> m17_1024  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_1000 -> m17_1041  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_1000 -> m17_1056  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_1000 -> m17_1070  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m17_1001 -> m17_1002  [key=0, style=solid];
m17_1001 -> m17_1004  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m17_1007 -> m17_1008  [key=0, style=solid];
m17_1007 -> m17_1104  [key=2, style=dotted];
m17_1007 -> m17_1023  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m17_1007 -> m17_1040  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m17_1007 -> m17_1055  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m17_1007 -> m17_1069  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m17_1008 -> m17_1009  [key=0, style=solid];
m17_1008 -> m17_1011  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m17_1008 -> m17_1025  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m17_1008 -> m17_1042  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m17_1008 -> m17_1057  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m17_1008 -> m17_1072  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m17_1024 -> m17_1038  [key=0, style=solid];
m17_1024 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1041 -> m17_1053  [key=0, style=solid];
m17_1041 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1056 -> m17_1068  [key=0, style=solid];
m17_1056 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1070 -> m17_1071  [key=0, style=solid];
m17_1070 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1002 -> m17_1003  [key=0, style=solid];
m17_1002 -> m17_686  [key=2, style=dotted];
m17_1004 -> m17_1005  [key=0, style=solid];
m17_1004 -> m17_669  [key=2, style=dotted];
m17_1003 -> m17_1004  [key=0, style=solid];
m17_1003 -> m17_60  [key=2, style=dotted];
m17_1005 -> m17_1006  [key=0, style=solid];
m17_1005 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1006 -> m17_1007  [key=0, style=solid];
m17_1102 -> m17_1103  [key=0, style=solid];
m17_1102 -> m17_65  [key=2, style=dotted];
m17_1023 -> m17_1024  [key=0, style=solid];
m17_1023 -> m17_1025  [key=0, style=solid];
m17_1040 -> m17_1041  [key=0, style=solid];
m17_1040 -> m17_1042  [key=0, style=solid];
m17_1055 -> m17_1056  [key=0, style=solid];
m17_1055 -> m17_1057  [key=0, style=solid];
m17_1069 -> m17_1070  [key=0, style=solid];
m17_1069 -> m17_1072  [key=0, style=solid];
m17_1011 -> m17_1012  [key=0, style=solid];
m17_1011 -> m17_1017  [key=0, style=solid];
m17_1025 -> m17_1026  [key=0, style=solid];
m17_1025 -> m17_1031  [key=0, style=solid];
m17_1042 -> m17_1043  [key=0, style=solid];
m17_1042 -> m17_1048  [key=0, style=solid];
m17_1057 -> m17_1058  [key=0, style=solid];
m17_1057 -> m17_1063  [key=0, style=solid];
m17_1072 -> m17_1073  [key=0, style=solid];
m17_1072 -> m17_1078  [key=0, style=solid];
m17_1010 -> m17_1011  [key=0, style=solid];
m17_1010 -> m17_61  [key=2, style=dotted];
m17_1010 -> m17_1012  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1010 -> m17_1013  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1010 -> m17_1014  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1010 -> m17_1016  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1010 -> m17_1018  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1010 -> m17_1021  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1012 -> m17_1013  [key=0, style=solid];
m17_1012 -> m17_1014  [key=0, style=solid];
m17_1012 -> m17_1105  [key=2, style=dotted];
m17_1013 -> m17_1015  [key=0, style=solid];
m17_1013 -> m17_1020  [key=0, style=solid];
m17_1013 -> m17_1106  [key=2, style=dotted];
m17_1014 -> m17_1015  [key=0, style=solid];
m17_1014 -> m17_1020  [key=0, style=solid];
m17_1014 -> m17_1106  [key=2, style=dotted];
m17_1016 -> m17_1103  [key=0, style=solid];
m17_1016 -> m17_176  [key=2, style=dotted];
m17_1016 -> m17_1107  [key=2, style=dotted];
m17_1018 -> m17_1019  [key=0, style=solid];
m17_1018 -> m17_1020  [key=0, style=solid];
m17_1018 -> m17_1108  [key=2, style=dotted];
m17_1021 -> m17_1101  [key=0, style=solid];
m17_1021 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1017 -> m17_1018  [key=0, style=solid];
m17_1015 -> m17_1016  [key=0, style=solid];
m17_1020 -> m17_1021  [key=0, style=solid];
m17_1020 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m17_1019 -> m17_1103  [key=0, style=solid];
m17_1019 -> m17_61  [key=2, style=dotted];
m17_1019 -> m17_176  [key=2, style=dotted];
m17_1019 -> m17_1107  [key=2, style=dotted];
m17_1026 -> m17_1027  [key=0, style=solid];
m17_1026 -> m17_61  [key=2, style=dotted];
m17_1026 -> m17_1030  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1031 -> m17_1032  [key=0, style=solid];
m17_1027 -> m17_1028  [key=0, style=solid];
m17_1027 -> m17_1105  [key=2, style=dotted];
m17_1027 -> m17_1109  [key=2, style=dotted];
m17_1030 -> m17_1103  [key=0, style=solid];
m17_1030 -> m17_176  [key=2, style=dotted];
m17_1030 -> m17_1107  [key=2, style=dotted];
m17_1028 -> m17_1029  [key=0, style=solid];
m17_1028 -> m17_1038  [key=0, style=solid];
m17_1028 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1029 -> m17_1030  [key=0, style=solid];
m17_1038 -> m17_1101  [key=0, style=solid];
m17_1038 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m17_1032 -> m17_1033  [key=0, style=solid];
m17_1032 -> m17_1110  [key=2, style=dotted];
m17_1032 -> m17_1034  [key=1, style=dashed, color=darkseagreen4, label=value];
m17_1032 -> m17_1035  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m17_1033 -> m17_1034  [key=0, style=solid];
m17_1033 -> m17_1035  [key=0, style=solid];
m17_1034 -> m17_1038  [key=0, style=solid];
m17_1034 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1035 -> m17_1036  [key=0, style=solid];
m17_1035 -> m17_1037  [key=0, style=solid];
m17_1036 -> m17_1103  [key=0, style=solid];
m17_1036 -> m17_61  [key=2, style=dotted];
m17_1036 -> m17_176  [key=2, style=dotted];
m17_1036 -> m17_1107  [key=2, style=dotted];
m17_1037 -> m17_1103  [key=0, style=solid];
m17_1037 -> m17_61  [key=2, style=dotted];
m17_1037 -> m17_176  [key=2, style=dotted];
m17_1037 -> m17_1107  [key=2, style=dotted];
m17_1043 -> m17_1044  [key=0, style=solid];
m17_1043 -> m17_61  [key=2, style=dotted];
m17_1043 -> m17_1047  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1048 -> m17_1049  [key=0, style=solid];
m17_1048 -> m17_61  [key=2, style=dotted];
m17_1048 -> m17_1050  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1044 -> m17_1045  [key=0, style=solid];
m17_1044 -> m17_1105  [key=2, style=dotted];
m17_1044 -> m17_1106  [key=2, style=dotted];
m17_1047 -> m17_1103  [key=0, style=solid];
m17_1047 -> m17_176  [key=2, style=dotted];
m17_1047 -> m17_1107  [key=2, style=dotted];
m17_1045 -> m17_1046  [key=0, style=solid];
m17_1045 -> m17_1053  [key=0, style=solid];
m17_1045 -> m17_1111  [key=2, style=dotted];
m17_1045 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1046 -> m17_1047  [key=0, style=solid];
m17_1053 -> m17_1101  [key=0, style=solid];
m17_1053 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m17_1049 -> m17_1050  [key=0, style=solid];
m17_1050 -> m17_1051  [key=0, style=solid];
m17_1050 -> m17_1052  [key=0, style=solid];
m17_1050 -> m17_1112  [key=2, style=dotted];
m17_1051 -> m17_1053  [key=0, style=solid];
m17_1051 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1052 -> m17_1103  [key=0, style=solid];
m17_1052 -> m17_61  [key=2, style=dotted];
m17_1052 -> m17_176  [key=2, style=dotted];
m17_1052 -> m17_1107  [key=2, style=dotted];
m17_1058 -> m17_1059  [key=0, style=solid];
m17_1058 -> m17_61  [key=2, style=dotted];
m17_1058 -> m17_1062  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1063 -> m17_1064  [key=0, style=solid];
m17_1059 -> m17_1060  [key=0, style=solid];
m17_1059 -> m17_1105  [key=2, style=dotted];
m17_1059 -> m17_1106  [key=2, style=dotted];
m17_1062 -> m17_1103  [key=0, style=solid];
m17_1062 -> m17_176  [key=2, style=dotted];
m17_1062 -> m17_1107  [key=2, style=dotted];
m17_1060 -> m17_1061  [key=0, style=solid];
m17_1060 -> m17_1068  [key=0, style=solid];
m17_1060 -> m17_1113  [key=2, style=dotted];
m17_1060 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1061 -> m17_1062  [key=0, style=solid];
m17_1068 -> m17_1101  [key=0, style=solid];
m17_1068 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m17_1064 -> m17_1065  [key=0, style=solid];
m17_1064 -> m17_1114  [key=2, style=dotted];
m17_1064 -> m17_1066  [key=1, style=dashed, color=darkseagreen4, label=value];
m17_1065 -> m17_1066  [key=0, style=solid];
m17_1065 -> m17_1067  [key=0, style=solid];
m17_1066 -> m17_1068  [key=0, style=solid];
m17_1066 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1067 -> m17_1103  [key=0, style=solid];
m17_1067 -> m17_61  [key=2, style=dotted];
m17_1067 -> m17_176  [key=2, style=dotted];
m17_1067 -> m17_1107  [key=2, style=dotted];
m17_1071 -> m17_1101  [key=0, style=solid];
m17_1071 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m17_1073 -> m17_1074  [key=0, style=solid];
m17_1073 -> m17_61  [key=2, style=dotted];
m17_1073 -> m17_1076  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1078 -> m17_1079  [key=0, style=solid];
m17_1074 -> m17_1075  [key=0, style=solid];
m17_1074 -> m17_1077  [key=0, style=solid];
m17_1074 -> m17_1105  [key=2, style=dotted];
m17_1074 -> m17_1106  [key=2, style=dotted];
m17_1074 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1076 -> m17_1103  [key=0, style=solid];
m17_1076 -> m17_176  [key=2, style=dotted];
m17_1076 -> m17_1107  [key=2, style=dotted];
m17_1075 -> m17_1076  [key=0, style=solid];
m17_1077 -> m17_1101  [key=0, style=solid];
m17_1077 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m17_1079 -> m17_1080  [key=0, style=solid];
m17_1079 -> m17_1115  [key=2, style=dotted];
m17_1079 -> m17_1081  [key=1, style=dashed, color=darkseagreen4, label=value];
m17_1079 -> m17_1083  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m17_1080 -> m17_1081  [key=0, style=solid];
m17_1080 -> m17_1083  [key=0, style=solid];
m17_1081 -> m17_1082  [key=0, style=solid];
m17_1081 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1083 -> m17_1084  [key=0, style=solid];
m17_1083 -> m17_1089  [key=0, style=solid];
m17_1082 -> m17_1101  [key=0, style=solid];
m17_1082 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m17_1084 -> m17_1085  [key=0, style=solid];
m17_1084 -> m17_61  [key=2, style=dotted];
m17_1084 -> m17_1087  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1089 -> m17_1090  [key=0, style=solid];
m17_1089 -> m17_61  [key=2, style=dotted];
m17_1089 -> m17_1092  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1089 -> m17_1094  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1089 -> m17_1099  [key=1, style=dashed, color=darkseagreen4, label=number];
m17_1085 -> m17_1086  [key=0, style=solid];
m17_1085 -> m17_1087  [key=0, style=solid];
m17_1087 -> m17_1088  [key=0, style=solid];
m17_1087 -> m17_1116  [key=2, style=dotted];
m17_1087 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1086 -> m17_1103  [key=0, style=solid];
m17_1086 -> m17_61  [key=2, style=dotted];
m17_1086 -> m17_176  [key=2, style=dotted];
m17_1086 -> m17_1107  [key=2, style=dotted];
m17_1088 -> m17_1101  [key=0, style=solid];
m17_1088 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m17_1090 -> m17_1091  [key=0, style=solid];
m17_1090 -> m17_1095  [key=0, style=solid];
m17_1092 -> m17_1093  [key=0, style=solid];
m17_1092 -> m17_1094  [key=0, style=solid];
m17_1092 -> m17_1112  [key=2, style=dotted];
m17_1094 -> m17_1103  [key=0, style=solid];
m17_1094 -> m17_176  [key=2, style=dotted];
m17_1094 -> m17_1107  [key=2, style=dotted];
m17_1099 -> m17_1103  [key=0, style=solid];
m17_1099 -> m17_176  [key=2, style=dotted];
m17_1099 -> m17_1107  [key=2, style=dotted];
m17_1091 -> m17_1092  [key=0, style=solid];
m17_1095 -> m17_1096  [key=0, style=solid];
m17_1093 -> m17_1100  [key=0, style=solid];
m17_1093 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1096 -> m17_1097  [key=0, style=solid];
m17_1096 -> m17_1114  [key=2, style=dotted];
m17_1096 -> m17_1098  [key=1, style=dashed, color=darkseagreen4, label=d];
m17_1097 -> m17_1098  [key=0, style=solid];
m17_1097 -> m17_1099  [key=0, style=solid];
m17_1098 -> m17_1100  [key=0, style=solid];
m17_1098 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m17_1100 -> m17_1101  [key=0, style=solid];
m17_1100 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m17_1101 -> m17_1102  [key=0, style=solid];
m17_1101 -> m17_730  [key=2, style=dotted];
m17_1103 -> m17_365  [key=0, style=bold, color=blue];
m17_178 -> m17_179  [key=0, style=solid];
m17_179 -> m17_180  [key=0, style=solid];
m17_179 -> m17_181  [key=2, style=dotted];
m17_180 -> m17_178  [key=0, style=bold, color=blue];
m17_171 -> m17_774  [key=0, style=solid];
m17_774 -> m17_775  [key=0, style=solid];
m17_774 -> m17_799  [key=0, style=solid];
m17_775 -> m17_776  [key=0, style=solid];
m17_775 -> m17_796  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m17_776 -> m17_777  [key=0, style=solid];
m17_776 -> m17_782  [key=0, style=solid];
m17_776 -> m17_786  [key=0, style=solid];
m17_776 -> m17_789  [key=0, style=solid];
m17_776 -> m17_791  [key=0, style=solid];
m17_776 -> m17_793  [key=0, style=solid];
m17_776 -> m17_796  [key=0, style=solid];
m17_796 -> m17_797  [key=0, style=solid];
m17_796 -> m17_798  [key=0, style=solid];
m17_796 -> m17_263  [key=2, style=dotted];
m17_777 -> m17_778  [key=0, style=solid];
m17_782 -> m17_783  [key=0, style=solid];
m17_786 -> m17_787  [key=0, style=solid];
m17_789 -> m17_790  [key=0, style=solid];
m17_791 -> m17_792  [key=0, style=solid];
m17_793 -> m17_794  [key=0, style=solid];
m17_778 -> m17_779  [key=0, style=solid];
m17_778 -> m17_781  [key=0, style=solid];
m17_779 -> m17_780  [key=0, style=solid];
m17_779 -> m17_774  [key=0, style=solid];
m17_779 -> m17_83  [key=2, style=dotted];
m17_781 -> m17_774  [key=0, style=solid];
m17_780 -> m17_799  [key=0, style=solid];
m17_783 -> m17_784  [key=0, style=solid];
m17_783 -> m17_174  [key=2, style=dotted];
m17_784 -> m17_785  [key=0, style=solid];
m17_785 -> m17_799  [key=0, style=solid];
m17_787 -> m17_788  [key=0, style=solid];
m17_787 -> m17_175  [key=2, style=dotted];
m17_788 -> m17_799  [key=0, style=solid];
m17_790 -> m17_774  [key=0, style=solid];
m17_790 -> m17_261  [key=2, style=dotted];
m17_792 -> m17_774  [key=0, style=solid];
m17_792 -> m17_262  [key=2, style=dotted];
m17_794 -> m17_795  [key=0, style=solid];
m17_795 -> m17_774  [key=0, style=solid];
m17_797 -> m17_774  [key=0, style=solid];
m17_798 -> m17_799  [key=0, style=solid];
m17_798 -> m17_800  [key=2, style=dotted];
m17_799 -> m17_171  [key=0, style=bold, color=blue];
m17_1283 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_290  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_302  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_327  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_394  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_424  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_458  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_478  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_480  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_490  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_494  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_518  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_549  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_551  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_552  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_553  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_554  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_558  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_559  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_560  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_564  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_567  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_568  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_569  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_575  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_576  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_578  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_579  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_580  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_581  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_583  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_585  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_587  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_589  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_591  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_592  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_593  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_595  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_633  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_634  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_640  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_645  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_646  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_648  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_649  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_650  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_653  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_657  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_660  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_672  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_673  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_678  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_680  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_681  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_687  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_689  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_691  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_692  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_724  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_725  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_732  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_736  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_739  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_740  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_741  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_743  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_746  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_749  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_750  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_753  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_754  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_757  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_760  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_761  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_765  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_767  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_769  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_771  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_772  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_775  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_778  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_781  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_783  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_784  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_787  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_790  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_792  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_795  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_797  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_798  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_801  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_804  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_806  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_807  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_808  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_810  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_811  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_812  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_814  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_815  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_817  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_818  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_819  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_820  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_821  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_822  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_823  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_824  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_825  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_834  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_836  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_838  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_839  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_840  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_841  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_843  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_844  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_845  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_847  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_849  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_852  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_855  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_856  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_858  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_861  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_864  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_867  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_870  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_871  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_873  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_875  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_876  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_877  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_878  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_881  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_884  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_887  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_888  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_889  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_892  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_895  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_898  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_899  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_902  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_906  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_907  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_910  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_913  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_914  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_917  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_919  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_922  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_924  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_926  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_928  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_935  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_936  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_938  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_939  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_940  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_941  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_946  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_949  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_950  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_952  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_954  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_956  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_959  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_963  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_964  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_965  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_968  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_970  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_971  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_972  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_973  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_974  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_976  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_978  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_979  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_981  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_982  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_984  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_985  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_987  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_988  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_989  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_990  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_991  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_992  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_993  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_994  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_995  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_996  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_997  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_999  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1000  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1001  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1002  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1003  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1004  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1007  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1008  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1010  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1016  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1019  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1026  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1030  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1032  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1036  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1037  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1043  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1047  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1048  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1052  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1058  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1062  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1064  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1067  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1073  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1076  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1079  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1084  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1086  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1089  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1090  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1094  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1096  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1099  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1274  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m17_1283 -> m17_1275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_0 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_1 -> m18_2  [key=0, style=solid];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_4 -> m18_0  [key=0, style=bold, color=blue];
m18_5 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass"];
m18_5 -> m18_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass"];
m18_5 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass"];
m19_153 -> m19_154  [key=0, style=solid];
m19_161 -> m19_64  [key=2, style=dotted];
m19_161 -> m19_27  [key=2, style=dotted];
m19_161 -> m19_162  [key=0, style=solid];
m19_170 -> m19_64  [key=2, style=dotted];
m19_170 -> m19_27  [key=2, style=dotted];
m19_170 -> m19_171  [key=0, style=solid];
m19_157 -> m19_27  [key=2, style=dotted];
m19_157 -> m19_158  [key=0, style=solid];
m19_159 -> m19_27  [key=2, style=dotted];
m19_159 -> m19_160  [key=0, style=solid];
m19_164 -> m19_27  [key=2, style=dotted];
m19_164 -> m19_165  [key=0, style=solid];
m19_160 -> m19_32  [key=2, style=dotted];
m19_160 -> m19_54  [key=2, style=dotted];
m19_160 -> m19_33  [key=2, style=dotted];
m19_160 -> m19_161  [key=0, style=solid];
m19_155 -> m19_54  [key=2, style=dotted];
m19_155 -> m19_161  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_155 -> m19_170  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_155 -> m19_157  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_155 -> m19_159  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_155 -> m19_164  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_155 -> m19_160  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_155 -> m19_156  [key=0, style=solid];
m19_155 -> m19_158  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_155 -> m19_162  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_155 -> m19_168  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_162 -> m19_163  [key=0, style=solid];
m19_162 -> m19_165  [key=1, style=dashed, color=darkseagreen4, label=t];
m19_162 -> m19_166  [key=1, style=dashed, color=darkseagreen4, label=t];
m19_162 -> m19_167  [key=1, style=dashed, color=darkseagreen4, label=t];
m19_169 -> m19_170  [key=0, style=solid];
m19_169 -> m19_175  [key=2, style=dotted];
m19_171 -> m19_172  [key=0, style=solid];
m19_171 -> m19_76  [key=2, style=dotted];
m19_156 -> m19_157  [key=0, style=solid];
m19_156 -> m19_175  [key=2, style=dotted];
m19_158 -> m19_159  [key=0, style=solid];
m19_158 -> m19_175  [key=2, style=dotted];
m19_163 -> m19_164  [key=0, style=solid];
m19_163 -> m19_175  [key=2, style=dotted];
m19_165 -> m19_166  [key=0, style=solid];
m19_165 -> m19_76  [key=2, style=dotted];
m19_154 -> m19_155  [key=0, style=solid];
m19_168 -> m19_169  [key=0, style=solid];
m19_168 -> m19_171  [key=1, style=dashed, color=darkseagreen4, label=t];
m19_168 -> m19_172  [key=1, style=dashed, color=darkseagreen4, label=t];
m19_168 -> m19_173  [key=1, style=dashed, color=darkseagreen4, label=t];
m19_166 -> m19_167  [key=0, style=solid];
m19_166 -> m19_76  [key=2, style=dotted];
m19_167 -> m19_168  [key=0, style=solid];
m19_167 -> m19_76  [key=2, style=dotted];
m19_172 -> m19_173  [key=0, style=solid];
m19_172 -> m19_76  [key=2, style=dotted];
m19_173 -> m19_76  [key=2, style=dotted];
m19_173 -> m19_174  [key=0, style=solid];
m19_174 -> m19_153  [key=0, style=bold, color=blue];
m19_186 -> m19_187  [key=0, style=solid];
m19_190 -> m19_27  [key=2, style=dotted];
m19_190 -> m19_191  [key=0, style=solid];
m19_191 -> m19_32  [key=2, style=dotted];
m19_191 -> m19_33  [key=2, style=dotted];
m19_191 -> m19_192  [key=0, style=solid];
m19_191 -> m19_29  [key=2, style=dotted];
m19_192 -> m19_32  [key=2, style=dotted];
m19_192 -> m19_33  [key=2, style=dotted];
m19_192 -> m19_193  [key=0, style=solid];
m19_192 -> m19_93  [key=2, style=dotted];
m19_187 -> m19_54  [key=2, style=dotted];
m19_187 -> m19_188  [key=0, style=solid];
m19_187 -> m19_93  [key=2, style=dotted];
m19_189 -> m19_190  [key=0, style=solid];
m19_189 -> m19_191  [key=1, style=dashed, color=darkseagreen4, label=beforeTokens];
m19_189 -> m19_192  [key=1, style=dashed, color=darkseagreen4, label=beforeTokens];
m19_189 -> m19_100  [key=2, style=dotted];
m19_189 -> m19_185  [key=2, style=dotted];
m19_188 -> m19_189  [key=0, style=solid];
m19_193 -> m19_186  [key=0, style=bold, color=blue];
m19_65 -> m19_66  [key=0, style=solid];
m19_68 -> m19_27  [key=2, style=dotted];
m19_68 -> m19_69  [key=0, style=solid];
m19_70 -> m19_32  [key=2, style=dotted];
m19_70 -> m19_54  [key=2, style=dotted];
m19_70 -> m19_33  [key=2, style=dotted];
m19_70 -> m19_71  [key=0, style=solid];
m19_72 -> m19_32  [key=2, style=dotted];
m19_72 -> m19_54  [key=2, style=dotted];
m19_72 -> m19_33  [key=2, style=dotted];
m19_72 -> m19_73  [key=0, style=solid];
m19_66 -> m19_54  [key=2, style=dotted];
m19_66 -> m19_67  [key=0, style=solid];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_69  [key=1, style=dashed, color=darkseagreen4, label=next];
m19_69 -> m19_70  [key=0, style=solid];
m19_69 -> m19_69  [key=1, style=dashed, color=darkseagreen4, label=next];
m19_69 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label=next];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label=next];
m19_71 -> m19_73  [key=1, style=dashed, color=darkseagreen4, label=next];
m19_73 -> m19_73  [key=1, style=dashed, color=darkseagreen4, label=next];
m19_73 -> m19_74  [key=0, style=solid];
m19_74 -> m19_76  [key=2, style=dotted];
m19_74 -> m19_75  [key=0, style=solid];
m19_75 -> m19_65  [key=0, style=bold, color=blue];
m19_77 -> m19_78  [key=0, style=solid];
m19_82 -> m19_27  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_84 -> m19_27  [key=2, style=dotted];
m19_84 -> m19_85  [key=0, style=solid];
m19_80 -> m19_32  [key=2, style=dotted];
m19_80 -> m19_54  [key=2, style=dotted];
m19_80 -> m19_33  [key=2, style=dotted];
m19_80 -> m19_81  [key=0, style=solid];
m19_78 -> m19_54  [key=2, style=dotted];
m19_78 -> m19_79  [key=0, style=solid];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_81  [key=1, style=dashed, color=darkseagreen4, label=previous];
m19_81 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label=previous];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label=previous];
m19_83 -> m19_85  [key=1, style=dashed, color=darkseagreen4, label=previous];
m19_85 -> m19_85  [key=1, style=dashed, color=darkseagreen4, label=previous];
m19_85 -> m19_86  [key=0, style=solid];
m19_79 -> m19_80  [key=0, style=solid];
m19_79 -> m19_81  [key=1, style=dashed, color=darkseagreen4, label=previous];
m19_86 -> m19_76  [key=2, style=dotted];
m19_86 -> m19_87  [key=0, style=solid];
m19_87 -> m19_77  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_2 -> m19_27  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_4 -> m19_27  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid];
m19_5 -> m19_27  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid];
m19_6 -> m19_27  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_11 -> m19_27  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_12 -> m19_27  [key=2, style=dotted];
m19_12 -> m19_13  [key=0, style=solid];
m19_14 -> m19_27  [key=2, style=dotted];
m19_14 -> m19_15  [key=0, style=solid];
m19_18 -> m19_27  [key=2, style=dotted];
m19_18 -> m19_19  [key=0, style=solid];
m19_20 -> m19_27  [key=2, style=dotted];
m19_20 -> m19_21  [key=0, style=solid];
m19_22 -> m19_27  [key=2, style=dotted];
m19_22 -> m19_23  [key=0, style=solid];
m19_15 -> m19_32  [key=2, style=dotted];
m19_15 -> m19_33  [key=2, style=dotted];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_29  [key=2, style=dotted];
m19_15 -> m19_30  [key=2, style=dotted];
m19_15 -> m19_31  [key=2, style=dotted];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_24  [key=2, style=dotted];
m19_1 -> m19_25  [key=2, style=dotted];
m19_1 -> m19_26  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_3 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_3 -> m19_24  [key=2, style=dotted];
m19_3 -> m19_25  [key=2, style=dotted];
m19_3 -> m19_26  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_24  [key=2, style=dotted];
m19_7 -> m19_25  [key=2, style=dotted];
m19_7 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label=reader];
m19_7 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=reader];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label=p];
m19_10 -> m19_26  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_15  [key=1, style=dashed, color=darkseagreen4, label=c];
m19_13 -> m19_24  [key=2, style=dotted];
m19_13 -> m19_25  [key=2, style=dotted];
m19_13 -> m19_26  [key=2, style=dotted];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_24  [key=2, style=dotted];
m19_17 -> m19_25  [key=2, style=dotted];
m19_17 -> m19_26  [key=2, style=dotted];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_24  [key=2, style=dotted];
m19_19 -> m19_25  [key=2, style=dotted];
m19_19 -> m19_26  [key=2, style=dotted];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_24  [key=2, style=dotted];
m19_21 -> m19_25  [key=2, style=dotted];
m19_21 -> m19_26  [key=2, style=dotted];
m19_16 -> m19_17  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_28  [key=2, style=dotted];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_28  [key=2, style=dotted];
m19_23 -> m19_0  [key=0, style=bold, color=blue];
m19_240 -> m19_241  [key=0, style=solid];
m19_246 -> m19_64  [key=2, style=dotted];
m19_246 -> m19_27  [key=2, style=dotted];
m19_246 -> m19_247  [key=0, style=solid];
m19_251 -> m19_64  [key=2, style=dotted];
m19_251 -> m19_27  [key=2, style=dotted];
m19_251 -> m19_252  [key=0, style=solid];
m19_243 -> m19_27  [key=2, style=dotted];
m19_243 -> m19_244  [key=0, style=solid];
m19_244 -> m19_27  [key=2, style=dotted];
m19_244 -> m19_245  [key=0, style=solid];
m19_245 -> m19_27  [key=2, style=dotted];
m19_245 -> m19_246  [key=0, style=solid];
m19_248 -> m19_27  [key=2, style=dotted];
m19_248 -> m19_249  [key=0, style=solid];
m19_249 -> m19_27  [key=2, style=dotted];
m19_249 -> m19_250  [key=0, style=solid];
m19_250 -> m19_27  [key=2, style=dotted];
m19_250 -> m19_251  [key=0, style=solid];
m19_252 -> m19_27  [key=2, style=dotted];
m19_252 -> m19_253  [key=0, style=solid];
m19_241 -> m19_54  [key=2, style=dotted];
m19_241 -> m19_246  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_241 -> m19_251  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_241 -> m19_243  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_241 -> m19_244  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_241 -> m19_245  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_241 -> m19_248  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_241 -> m19_249  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_241 -> m19_250  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_241 -> m19_252  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_241 -> m19_242  [key=0, style=solid];
m19_241 -> m19_93  [key=2, style=dotted];
m19_241 -> m19_247  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_247 -> m19_248  [key=0, style=solid];
m19_247 -> m19_254  [key=2, style=dotted];
m19_242 -> m19_243  [key=0, style=solid];
m19_242 -> m19_254  [key=2, style=dotted];
m19_253 -> m19_240  [key=0, style=bold, color=blue];
m19_34 -> m19_35  [key=0, style=solid];
m19_48 -> m19_49  [key=0, style=solid, color=green];
m19_48 -> m19_59  [key=2, style=dotted, color=green];
m19_48 -> m19_50  [key=1, style=dashed, color=green, label=o2];
m19_48 -> m19_51  [key=1, style=dashed, color=green, label=o2];
m19_48 -> m19_52  [key=1, style=dashed, color=green, label=o2];
m19_37 -> m19_48  [key=1, style=dashed, color=green, label=o];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_58  [key=2, style=dotted];
m19_37 -> m19_59  [key=2, style=dotted];
m19_37 -> m19_60  [key=2, style=dotted];
m19_37 -> m19_40  [key=1, style=dashed, color=darkseagreen4, label=o];
m19_37 -> m19_43  [key=1, style=dashed, color=darkseagreen4, label=o];
m19_37 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label=o];
m19_37 -> m19_45  [key=1, style=dashed, color=darkseagreen4, label=o];
m19_37 -> m19_46  [key=1, style=dashed, color=darkseagreen4, label=o];
m19_37 -> m19_47  [key=1, style=dashed, color=darkseagreen4, label=o];
m19_47 -> m19_48  [key=0, style=solid, color=green];
m19_47 -> m19_62  [key=2, style=dotted];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_62  [key=2, style=dotted];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_63  [key=2, style=dotted];
m19_50 -> m19_64  [key=2, style=dotted];
m19_50 -> m19_27  [key=2, style=dotted];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_32  [key=2, style=dotted];
m19_51 -> m19_27  [key=2, style=dotted];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_32  [key=2, style=dotted];
m19_52 -> m19_27  [key=2, style=dotted];
m19_35 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label=v];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_54  [key=2, style=dotted];
m19_35 -> m19_55  [key=2, style=dotted];
m19_35 -> m19_56  [key=2, style=dotted];
m19_35 -> m19_57  [key=2, style=dotted];
m19_35 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=v];
m19_35 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label=v];
m19_35 -> m19_40  [key=1, style=dashed, color=darkseagreen4, label=v];
m19_35 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label=v];
m19_35 -> m19_42  [key=1, style=dashed, color=darkseagreen4, label=v];
m19_35 -> m19_43  [key=1, style=dashed, color=darkseagreen4, label=v];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_27  [key=2, style=dotted];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_61  [key=2, style=dotted];
m19_38 -> m19_27  [key=2, style=dotted];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_61  [key=2, style=dotted];
m19_40 -> m19_27  [key=2, style=dotted];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_27  [key=2, style=dotted];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_27  [key=2, style=dotted];
m19_45 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label=o1];
m19_45 -> m19_59  [key=2, style=dotted];
m19_45 -> m19_50  [key=1, style=dashed, color=darkseagreen4, label=o1];
m19_45 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label=o1];
m19_45 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label=o1];
m19_45 -> m19_46  [key=0, style=solid];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_27  [key=2, style=dotted];
m19_39 -> m19_59  [key=2, style=dotted];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label=p];
m19_39 -> m19_42  [key=1, style=dashed, color=darkseagreen4, label=p];
m19_41 -> m19_62  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_27  [key=2, style=dotted];
m19_53 -> m19_34  [key=0, style=bold, color=blue];
m19_255 -> m19_256  [key=0, style=solid];
m19_260 -> m19_64  [key=2, style=dotted];
m19_260 -> m19_27  [key=2, style=dotted];
m19_260 -> m19_261  [key=0, style=solid];
m19_258 -> m19_27  [key=2, style=dotted];
m19_258 -> m19_259  [key=0, style=solid];
m19_256 -> m19_54  [key=2, style=dotted];
m19_256 -> m19_260  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_256 -> m19_257  [key=0, style=solid];
m19_256 -> m19_93  [key=2, style=dotted];
m19_256 -> m19_259  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_259 -> m19_260  [key=0, style=solid];
m19_259 -> m19_264  [key=2, style=dotted];
m19_261 -> m19_262  [key=0, style=solid];
m19_261 -> m19_76  [key=2, style=dotted];
m19_257 -> m19_258  [key=0, style=solid];
m19_257 -> m19_261  [key=1, style=dashed, color=darkseagreen4, label=first];
m19_257 -> m19_262  [key=1, style=dashed, color=darkseagreen4, label=first];
m19_262 -> m19_76  [key=2, style=dotted];
m19_262 -> m19_263  [key=0, style=solid];
m19_263 -> m19_255  [key=0, style=bold, color=blue];
m19_207 -> m19_208  [key=0, style=solid];
m19_210 -> m19_64  [key=2, style=dotted];
m19_210 -> m19_27  [key=2, style=dotted];
m19_210 -> m19_211  [key=0, style=solid];
m19_211 -> m19_27  [key=2, style=dotted];
m19_211 -> m19_212  [key=0, style=solid];
m19_213 -> m19_27  [key=2, style=dotted];
m19_213 -> m19_214  [key=0, style=solid];
m19_214 -> m19_27  [key=2, style=dotted];
m19_214 -> m19_215  [key=0, style=solid];
m19_215 -> m19_27  [key=2, style=dotted];
m19_215 -> m19_216  [key=0, style=solid];
m19_212 -> m19_32  [key=2, style=dotted];
m19_212 -> m19_54  [key=2, style=dotted];
m19_212 -> m19_33  [key=2, style=dotted];
m19_212 -> m19_213  [key=0, style=solid];
m19_208 -> m19_54  [key=2, style=dotted];
m19_208 -> m19_209  [key=0, style=solid];
m19_208 -> m19_93  [key=2, style=dotted];
m19_209 -> m19_210  [key=0, style=solid];
m19_209 -> m19_211  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m19_209 -> m19_213  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m19_209 -> m19_214  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m19_209 -> m19_215  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m19_209 -> m19_212  [key=1, style=dashed, color=darkseagreen4, label=descendants];
m19_209 -> m19_217  [key=2, style=dotted];
m19_209 -> m19_185  [key=2, style=dotted];
m19_216 -> m19_207  [key=0, style=bold, color=blue];
m19_176 -> m19_177  [key=0, style=solid];
m19_180 -> m19_27  [key=2, style=dotted];
m19_180 -> m19_181  [key=0, style=solid];
m19_181 -> m19_32  [key=2, style=dotted];
m19_181 -> m19_54  [key=2, style=dotted];
m19_181 -> m19_33  [key=2, style=dotted];
m19_181 -> m19_182  [key=0, style=solid];
m19_182 -> m19_32  [key=2, style=dotted];
m19_182 -> m19_54  [key=2, style=dotted];
m19_182 -> m19_33  [key=2, style=dotted];
m19_182 -> m19_183  [key=0, style=solid];
m19_177 -> m19_54  [key=2, style=dotted];
m19_177 -> m19_178  [key=0, style=solid];
m19_177 -> m19_93  [key=2, style=dotted];
m19_179 -> m19_180  [key=0, style=solid];
m19_179 -> m19_181  [key=1, style=dashed, color=darkseagreen4, label=afterTokens];
m19_179 -> m19_182  [key=1, style=dashed, color=darkseagreen4, label=afterTokens];
m19_179 -> m19_184  [key=2, style=dotted];
m19_179 -> m19_185  [key=2, style=dotted];
m19_178 -> m19_179  [key=0, style=solid];
m19_183 -> m19_176  [key=0, style=bold, color=blue];
m19_198 -> m19_199  [key=0, style=solid];
m19_202 -> m19_64  [key=2, style=dotted];
m19_202 -> m19_27  [key=2, style=dotted];
m19_202 -> m19_203  [key=0, style=solid];
m19_203 -> m19_27  [key=2, style=dotted];
m19_203 -> m19_204  [key=0, style=solid];
m19_204 -> m19_27  [key=2, style=dotted];
m19_204 -> m19_205  [key=0, style=solid];
m19_199 -> m19_54  [key=2, style=dotted];
m19_199 -> m19_203  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_199 -> m19_204  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_199 -> m19_200  [key=0, style=solid];
m19_199 -> m19_93  [key=2, style=dotted];
m19_201 -> m19_202  [key=0, style=solid];
m19_201 -> m19_203  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m19_201 -> m19_204  [key=1, style=dashed, color=darkseagreen4, label=ancestors];
m19_201 -> m19_206  [key=2, style=dotted];
m19_201 -> m19_185  [key=2, style=dotted];
m19_200 -> m19_201  [key=0, style=solid];
m19_205 -> m19_198  [key=0, style=bold, color=blue];
m19_88 -> m19_89  [key=0, style=solid];
m19_90 -> m19_64  [key=2, style=dotted];
m19_90 -> m19_27  [key=2, style=dotted];
m19_90 -> m19_91  [key=0, style=solid];
m19_91 -> m19_64  [key=2, style=dotted];
m19_91 -> m19_27  [key=2, style=dotted];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_94  [key=2, style=dotted];
m19_89 -> m19_54  [key=2, style=dotted];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_91  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_89 -> m19_93  [key=2, style=dotted];
m19_92 -> m19_88  [key=0, style=bold, color=blue];
m19_95 -> m19_96  [key=0, style=solid];
m19_98 -> m19_64  [key=2, style=dotted];
m19_98 -> m19_27  [key=2, style=dotted];
m19_98 -> m19_99  [key=0, style=solid];
m19_98 -> m19_100  [key=2, style=dotted];
m19_97 -> m19_27  [key=2, style=dotted];
m19_97 -> m19_98  [key=0, style=solid];
m19_96 -> m19_54  [key=2, style=dotted];
m19_96 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_96 -> m19_97  [key=0, style=solid];
m19_99 -> m19_95  [key=0, style=bold, color=blue];
m19_218 -> m19_219  [key=0, style=solid];
m19_231 -> m19_59  [key=2, style=dotted];
m19_231 -> m19_232  [key=0, style=solid];
m19_231 -> m19_239  [key=2, style=dotted];
m19_231 -> m19_32  [key=2, style=dotted];
m19_231 -> m19_33  [key=2, style=dotted];
m19_219 -> m19_231  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_219 -> m19_54  [key=2, style=dotted];
m19_219 -> m19_220  [key=0, style=solid];
m19_219 -> m19_93  [key=2, style=dotted];
m19_219 -> m19_222  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_219 -> m19_224  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_219 -> m19_225  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_219 -> m19_230  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_230 -> m19_231  [key=0, style=solid];
m19_230 -> m19_64  [key=2, style=dotted];
m19_230 -> m19_27  [key=2, style=dotted];
m19_222 -> m19_64  [key=2, style=dotted];
m19_222 -> m19_27  [key=2, style=dotted];
m19_222 -> m19_223  [key=0, style=solid];
m19_224 -> m19_64  [key=2, style=dotted];
m19_224 -> m19_27  [key=2, style=dotted];
m19_224 -> m19_225  [key=0, style=solid];
m19_225 -> m19_27  [key=2, style=dotted];
m19_225 -> m19_226  [key=0, style=solid];
m19_220 -> m19_221  [key=0, style=solid];
m19_220 -> m19_233  [key=2, style=dotted];
m19_220 -> m19_223  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_220 -> m19_226  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_220 -> m19_227  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_220 -> m19_228  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_220 -> m19_229  [key=1, style=dashed, color=darkseagreen4, label=writer];
m19_229 -> m19_230  [key=0, style=solid];
m19_229 -> m19_238  [key=2, style=dotted];
m19_221 -> m19_222  [key=0, style=solid];
m19_221 -> m19_234  [key=2, style=dotted];
m19_223 -> m19_224  [key=0, style=solid];
m19_223 -> m19_235  [key=2, style=dotted];
m19_226 -> m19_227  [key=0, style=solid];
m19_226 -> m19_236  [key=2, style=dotted];
m19_227 -> m19_228  [key=0, style=solid];
m19_227 -> m19_237  [key=2, style=dotted];
m19_228 -> m19_229  [key=0, style=solid];
m19_228 -> m19_235  [key=2, style=dotted];
m19_232 -> m19_218  [key=0, style=bold, color=blue];
m19_101 -> m19_102  [key=0, style=solid];
m19_138 -> m19_59  [key=2, style=dotted];
m19_138 -> m19_139  [key=0, style=solid];
m19_138 -> m19_145  [key=2, style=dotted];
m19_138 -> m19_27  [key=2, style=dotted];
m19_137 -> m19_138  [key=0, style=solid];
m19_137 -> m19_27  [key=2, style=dotted];
m19_137 -> m19_145  [key=2, style=dotted];
m19_139 -> m19_27  [key=2, style=dotted];
m19_139 -> m19_140  [key=0, style=solid];
m19_139 -> m19_146  [key=2, style=dotted];
m19_102 -> m19_27  [key=2, style=dotted];
m19_102 -> m19_56  [key=2, style=dotted];
m19_102 -> m19_57  [key=2, style=dotted];
m19_102 -> m19_103  [key=0, style=solid];
m19_103 -> m19_27  [key=2, style=dotted];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_141  [key=2, style=dotted];
m19_103 -> m19_142  [key=2, style=dotted];
m19_104 -> m19_27  [key=2, style=dotted];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_142  [key=2, style=dotted];
m19_105 -> m19_27  [key=2, style=dotted];
m19_105 -> m19_106  [key=0, style=solid];
m19_106 -> m19_27  [key=2, style=dotted];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_143  [key=2, style=dotted];
m19_107 -> m19_27  [key=2, style=dotted];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_143  [key=2, style=dotted];
m19_108 -> m19_27  [key=2, style=dotted];
m19_108 -> m19_109  [key=0, style=solid];
m19_109 -> m19_27  [key=2, style=dotted];
m19_109 -> m19_110  [key=0, style=solid];
m19_109 -> m19_142  [key=2, style=dotted];
m19_110 -> m19_27  [key=2, style=dotted];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_29  [key=2, style=dotted];
m19_111 -> m19_27  [key=2, style=dotted];
m19_111 -> m19_112  [key=0, style=solid];
m19_111 -> m19_142  [key=2, style=dotted];
m19_112 -> m19_27  [key=2, style=dotted];
m19_112 -> m19_113  [key=0, style=solid];
m19_113 -> m19_27  [key=2, style=dotted];
m19_113 -> m19_114  [key=0, style=solid];
m19_113 -> m19_142  [key=2, style=dotted];
m19_114 -> m19_27  [key=2, style=dotted];
m19_114 -> m19_115  [key=0, style=solid];
m19_115 -> m19_27  [key=2, style=dotted];
m19_115 -> m19_116  [key=0, style=solid];
m19_115 -> m19_142  [key=2, style=dotted];
m19_116 -> m19_27  [key=2, style=dotted];
m19_116 -> m19_117  [key=0, style=solid];
m19_117 -> m19_27  [key=2, style=dotted];
m19_117 -> m19_118  [key=0, style=solid];
m19_117 -> m19_142  [key=2, style=dotted];
m19_118 -> m19_27  [key=2, style=dotted];
m19_118 -> m19_119  [key=0, style=solid];
m19_119 -> m19_27  [key=2, style=dotted];
m19_119 -> m19_120  [key=0, style=solid];
m19_119 -> m19_142  [key=2, style=dotted];
m19_120 -> m19_27  [key=2, style=dotted];
m19_120 -> m19_121  [key=0, style=solid];
m19_121 -> m19_27  [key=2, style=dotted];
m19_121 -> m19_122  [key=0, style=solid];
m19_121 -> m19_142  [key=2, style=dotted];
m19_122 -> m19_27  [key=2, style=dotted];
m19_122 -> m19_123  [key=0, style=solid];
m19_123 -> m19_27  [key=2, style=dotted];
m19_123 -> m19_124  [key=0, style=solid];
m19_123 -> m19_142  [key=2, style=dotted];
m19_124 -> m19_27  [key=2, style=dotted];
m19_124 -> m19_125  [key=0, style=solid];
m19_125 -> m19_27  [key=2, style=dotted];
m19_125 -> m19_126  [key=0, style=solid];
m19_125 -> m19_142  [key=2, style=dotted];
m19_126 -> m19_27  [key=2, style=dotted];
m19_126 -> m19_127  [key=0, style=solid];
m19_127 -> m19_27  [key=2, style=dotted];
m19_127 -> m19_128  [key=0, style=solid];
m19_127 -> m19_142  [key=2, style=dotted];
m19_128 -> m19_27  [key=2, style=dotted];
m19_128 -> m19_129  [key=0, style=solid];
m19_129 -> m19_27  [key=2, style=dotted];
m19_129 -> m19_130  [key=0, style=solid];
m19_129 -> m19_142  [key=2, style=dotted];
m19_130 -> m19_27  [key=2, style=dotted];
m19_130 -> m19_131  [key=0, style=solid];
m19_131 -> m19_27  [key=2, style=dotted];
m19_131 -> m19_132  [key=0, style=solid];
m19_131 -> m19_142  [key=2, style=dotted];
m19_132 -> m19_27  [key=2, style=dotted];
m19_132 -> m19_133  [key=0, style=solid];
m19_133 -> m19_27  [key=2, style=dotted];
m19_133 -> m19_134  [key=0, style=solid];
m19_133 -> m19_144  [key=2, style=dotted];
m19_134 -> m19_27  [key=2, style=dotted];
m19_134 -> m19_135  [key=0, style=solid];
m19_134 -> m19_144  [key=2, style=dotted];
m19_135 -> m19_27  [key=2, style=dotted];
m19_135 -> m19_136  [key=0, style=solid];
m19_135 -> m19_144  [key=2, style=dotted];
m19_136 -> m19_27  [key=2, style=dotted];
m19_136 -> m19_137  [key=0, style=solid];
m19_136 -> m19_29  [key=2, style=dotted];
m19_140 -> m19_101  [key=0, style=bold, color=blue];
m19_147 -> m19_148  [key=0, style=solid];
m19_149 -> m19_27  [key=2, style=dotted];
m19_149 -> m19_150  [key=0, style=solid];
m19_150 -> m19_27  [key=2, style=dotted];
m19_150 -> m19_151  [key=0, style=solid];
m19_151 -> m19_27  [key=2, style=dotted];
m19_151 -> m19_152  [key=0, style=solid];
m19_148 -> m19_54  [key=2, style=dotted];
m19_148 -> m19_149  [key=0, style=solid];
m19_148 -> m19_150  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_148 -> m19_151  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_152 -> m19_147  [key=0, style=bold, color=blue];
m19_278 -> m19_279  [key=0, style=solid];
m19_282 -> m19_64  [key=2, style=dotted];
m19_282 -> m19_27  [key=2, style=dotted];
m19_282 -> m19_283  [key=0, style=solid];
m19_287 -> m19_64  [key=2, style=dotted];
m19_287 -> m19_27  [key=2, style=dotted];
m19_287 -> m19_288  [key=0, style=solid];
m19_281 -> m19_27  [key=2, style=dotted];
m19_281 -> m19_282  [key=0, style=solid];
m19_284 -> m19_27  [key=2, style=dotted];
m19_284 -> m19_285  [key=0, style=solid];
m19_286 -> m19_27  [key=2, style=dotted];
m19_286 -> m19_287  [key=0, style=solid];
m19_288 -> m19_32  [key=2, style=dotted];
m19_288 -> m19_54  [key=2, style=dotted];
m19_288 -> m19_33  [key=2, style=dotted];
m19_288 -> m19_289  [key=0, style=solid];
m19_288 -> m19_93  [key=2, style=dotted];
m19_279 -> m19_54  [key=2, style=dotted];
m19_279 -> m19_282  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_279 -> m19_287  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_279 -> m19_281  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_279 -> m19_284  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_279 -> m19_286  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_279 -> m19_288  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_279 -> m19_280  [key=0, style=solid];
m19_279 -> m19_93  [key=2, style=dotted];
m19_279 -> m19_283  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_279 -> m19_285  [key=1, style=dashed, color=darkseagreen4, label=a];
m19_283 -> m19_284  [key=0, style=solid];
m19_283 -> m19_146  [key=2, style=dotted];
m19_283 -> m19_290  [key=2, style=dotted];
m19_280 -> m19_281  [key=0, style=solid];
m19_280 -> m19_29  [key=2, style=dotted];
m19_280 -> m19_290  [key=2, style=dotted];
m19_285 -> m19_286  [key=0, style=solid];
m19_285 -> m19_29  [key=2, style=dotted];
m19_285 -> m19_290  [key=2, style=dotted];
m19_289 -> m19_278  [key=0, style=bold, color=blue];
m19_194 -> m19_195  [key=0, style=solid];
m19_195 -> m19_54  [key=2, style=dotted];
m19_195 -> m19_196  [key=0, style=solid];
m19_195 -> m19_93  [key=2, style=dotted];
m19_196 -> m19_33  [key=2, style=dotted];
m19_196 -> m19_197  [key=0, style=solid];
m19_197 -> m19_194  [key=0, style=bold, color=blue];
m22_10 -> m22_11  [key=0, style=solid, color=green];
m22_11 -> m22_12  [key=0, style=solid, color=green];
m22_11 -> m22_13  [key=2, style=dotted, color=green];
m22_11 -> m22_14  [key=2, style=dotted, color=green];
m22_12 -> m22_10  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid, color=green];
m22_1 -> m22_2  [key=0, style=solid, color=green];
m22_1 -> m22_1  [key=3, color=green, style=bold, label="Local variable string json"];
m22_2 -> m22_3  [key=0, style=solid, color=green];
m22_2 -> m22_6  [key=2, style=dotted, color=red];
m22_3 -> m22_4  [key=0, style=solid, color=green];
m22_3 -> m22_7  [key=2, style=dotted, color=green];
m22_3 -> m22_8  [key=2, style=dotted, color=green];
m22_3 -> m22_10  [key=1, style=dashed, color=green, label="lambda expression"];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_9  [key=2, style=dotted];
m22_5 -> m22_0  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_4 -> m23_5  [key=0, style=solid, color=green];
m23_4 -> m23_10  [key=2, style=dotted, color=green];
m23_4 -> m23_9  [key=2, style=dotted, color=green];
m23_4 -> m23_8  [key=2, style=dotted, color=green];
m23_1 -> m23_4  [key=1, style=dashed, color=green, label=o];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_6  [key=2, style=dotted];
m23_1 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label=o];
m23_3 -> m23_4  [key=0, style=solid, color=green];
m23_3 -> m23_9  [key=2, style=dotted];
m23_3 -> m23_8  [key=2, style=dotted];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_8  [key=2, style=dotted];
m23_2 -> m23_7  [key=2, style=dotted];
m23_5 -> m23_0  [key=0, style=bold, color=blue];
}
