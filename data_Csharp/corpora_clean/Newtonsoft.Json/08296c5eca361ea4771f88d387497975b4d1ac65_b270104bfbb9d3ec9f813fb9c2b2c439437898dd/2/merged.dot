digraph  {
m0_226 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="397-397", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_508 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="ConvertUtils.cs"];
m0_121 [label="ConvertResult.NotInstantiableType", span="373-373", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_282 [label="PrimitiveTypeCode.SByte", span="632-632", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_283 [label="PrimitiveTypeCode.Byte", span="633-633", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_66 [label="JsonContractType.Serializable", span="156-156", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_222 [label="HandleError(writer, initialDepth)", span="389-389", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_277 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''Writing type name '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, typeName, type)), null)", span="472-472", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ConvertUtils.cs"];
m0_18 [label="isEnum = false", span="217-217", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_166 [label="return ConvertResult.Success;", span="453-453", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_169 [label="value = new Guid((string)initialValue)", span="460-460", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_170 [label="return ConvertResult.Success;", span="461-461", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_172 [label="value = new Uri((string)initialValue, UriKind.RelativeOrAbsolute)", span="465-465", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_171 [label="targetType == typeof(Uri)", span="463-463", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_173 [label="return ConvertResult.Success;", span="466-466", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_131 [label="referenceLoopHandling = containerProperty.ItemReferenceLoopHandling", span="233-233", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_232 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", span="276-276", cluster="Newtonsoft.Json.Serialization.JsonProperty.WritePropertyName(Newtonsoft.Json.JsonWriter)", file="ConvertUtils.cs"];
m0_73 [label="return (BigInteger)value;", span="310-310", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_289 [label="PrimitiveTypeCode.UInt64", span="639-639", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_290 [label="return true;", span="640-640", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_291 [label="return false;", span="642-642", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_293 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="646-646", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="ConvertUtils.cs"];
m0_294 [label="value = 0", span="648-648", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="ConvertUtils.cs"];
m0_295 [label="length == 0", span="650-650", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="ConvertUtils.cs"];
m0_296 [label="return ParseResult.Invalid;", span="651-651", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="ConvertUtils.cs"];
m0_297 [label="bool isNegative = (chars[start] == '-')", span="653-653", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="ConvertUtils.cs"];
m0_298 [label=isNegative, span="655-655", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="ConvertUtils.cs"];
m0_299 [label="length == 1", span="658-658", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="ConvertUtils.cs"];
m0_292 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="628-628", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_300 [label="return ParseResult.Invalid;", span="659-659", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="ConvertUtils.cs"];
m0_130 [label="referenceLoopHandling == null && containerProperty != null", span="232-232", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_132 [label="referenceLoopHandling == null && containerContract != null", span="235-235", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_133 [label="referenceLoopHandling = containerContract.ItemReferenceLoopHandling", span="236-236", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_134 [label="_serializeStack.IndexOf(value) != -1", span="238-238", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_135 [label="string message = ''Self referencing loop detected''", span="240-240", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_136 [label="property != null", span="241-241", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_137 [label="message += '' for property '{0}'''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName)", span="242-242", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_138 [label="message += '' with type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType())", span="243-243", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_139 [label="referenceLoopHandling.GetValueOrDefault(Serializer._referenceLoopHandling)", span="245-245", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_71 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="307-307", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_276 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="471-471", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ConvertUtils.cs"];
m0_84 [label="value is long", span="321-321", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_85 [label="return new BigInteger((long)value);", span="322-322", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_86 [label="value is uint", span="323-323", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_87 [label="return new BigInteger((uint)value);", span="324-324", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_88 [label="value is ulong", span="325-325", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_89 [label="return new BigInteger((ulong)value);", span="326-326", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_90 [label="value is byte[]", span="327-327", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_91 [label="return new BigInteger((byte[])value);", span="328-328", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_93 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="307-307", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_94 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="ConvertUtils.cs"];
m0_92 [label="throw new InvalidCastException(''Cannot convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="330-330", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_95 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="ConvertUtils.cs"];
m0_518 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="101-101", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="ConvertUtils.cs"];
m0_70 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="107-107", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_189 [label="TypeConverter toConverter = GetConverter(initialType)", span="500-500", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_82 [label="value is int", span="319-319", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_223 [label="throw;", span="391-391", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_436 [label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="85-85", cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="ConvertUtils.cs"];
m0_399 [label="Entry System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="0-0", cluster="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="ConvertUtils.cs"];
m0_216 [label="JsonContract memberContract", span="378-378", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_233 [label="Entry System.Type.IsGenericTypeDefinition()", span="142-142", cluster="System.Type.IsGenericTypeDefinition()", file="ConvertUtils.cs"];
m0_260 [label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44", cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="ConvertUtils.cs"];
m0_99 [label="valueContract.ContractType == JsonContractType.Primitive || valueContract.ContractType == JsonContractType.String", span="190-190", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_100 [label="return false;", span="191-191", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_101 [label="bool? isReference = ResolveIsReference(valueContract, property, collectionContract, containerProperty)", span="193-193", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_102 [label="isReference == null", span="195-195", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_103 [label="valueContract.ContractType == JsonContractType.Array", span="197-197", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_104 [label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="198-198", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_105 [label="isReference = HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Objects)", span="200-200", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_106 [label="!isReference.Value", span="203-203", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_107 [label="return false;", span="204-204", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_108 [label="return Serializer.GetReferenceResolver().IsReferenced(this, value);", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_110 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="483-483", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="ConvertUtils.cs"];
m0_109 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="186-186", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_111 [label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="848-848", cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="ConvertUtils.cs"];
m0_229 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="237-237", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ConvertUtils.cs"];
m0_258 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ConvertUtils.cs"];
m0_523 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="946-946", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_524 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''ShouldSerialize result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, shouldSerialize)), null)", span="947-947", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_522 [label="bool shouldSerialize = property.ShouldSerialize(target)", span="944-944", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_525 [label="return shouldSerialize;", span="949-949", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_520 [label="property.ShouldSerialize == null", span="941-941", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_521 [label="return true;", span="942-942", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_526 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="939-939", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_509 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="512-512", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeOffsetString(System.IO.TextWriter, System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="ConvertUtils.cs"];
m0_44 [label="return;", span="112-112", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_45 [label="JsonConverter converter", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_46 [label="(((converter = (member != null) ? member.Converter : null) != null)\r\n           || ((converter = (containerProperty != null) ? containerProperty.ItemConverter : null) != null)\r\n           || ((converter = (containerContract != null) ? containerContract.ItemConverter : null) != null)\r\n           || ((converter = valueContract.Converter) != null)\r\n           || ((converter = Serializer.GetMatchingConverter(valueContract.UnderlyingType)) != null)\r\n           || ((converter = valueContract.InternalConverter) != null))\r\n          && converter.CanWrite", span="116-122", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_511 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="ConvertUtils.cs"];
m0_213 [label="index < contract.Properties.Count", span="372-372", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_217 [label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="380-380", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_188 [label="return ConvertResult.Success;", span="494-494", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_225 [label="writer.WriteEndObject()", span="395-395", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_220 [label=Exception, span="386-386", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_37 [label="return TimeSpan.Parse(input, CultureInfo.InvariantCulture);", span="243-243", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="ConvertUtils.cs"];
m0_187 [label="value = FromBigInteger((BigInteger)initialValue, targetType)", span="493-493", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_224 [label="index++", span="372-372", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_278 [label="writer.WritePropertyName(JsonTypeReflector.TypePropertyName, false)", span="474-474", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ConvertUtils.cs"];
m0_279 [label="writer.WriteValue(typeName)", span="475-475", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ConvertUtils.cs"];
m0_301 [label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44", cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_302 [label="IWrappedCollection wrappedCollection = values as IWrappedCollection", span="520-520", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_303 [label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : values", span="521-521", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_304 [label="OnSerializing(writer, contract, underlyingList)", span="523-523", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_306 [label="bool hasWrittenMetadataObject = WriteStartArray(writer, underlyingList, contract, member, collectionContract, containerProperty)", span="527-527", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_313 [label="WriteReference(writer, value)", span="543-543", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_309 [label="int index = 0", span="533-533", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_310 [label=values, span="535-535", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_321 [label=hasWrittenMetadataObject, span="568-568", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_323 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="571-571", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_320 [label="writer.WriteEndArray()", span="566-566", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_305 [label="_serializeStack.Add(underlyingList)", span="525-525", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_312 [label="ShouldWriteReference(value, null, valueContract, contract, member)", span="541-541", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_311 [label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="539-539", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_319 [label="throw;", span="558-558", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_307 [label="writer.WriteStartArray()", span="529-529", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_308 [label="int initialDepth = writer.Top", span="531-531", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_318 [label="HandleError(writer, initialDepth)", span="556-556", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_316 [label=Exception, span="553-553", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_317 [label="IsErrorHandled(underlyingList, contract, index, null, writer.ContainerPath, ex)", span="555-555", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_314 [label="CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="547-547", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_315 [label="SerializeValue(writer, value, valueContract, null, contract, member)", span="549-549", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_324 [label="OnSerialized(writer, contract, underlyingList)", span="573-573", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_322 [label="writer.WriteEndObject()", span="569-569", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_325 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="518-518", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, System.Collections.IEnumerable, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_122 [label="throw new ArgumentException(''Target type {0} is not a value type or a non-abstract class.''.FormatWith(CultureInfo.InvariantCulture, targetType), ''targetType'');", span="374-374", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_155 [label="return ConvertResult.Success;", span="428-428", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_398 [label="Entry System.Runtime.Serialization.FormatterConverter.FormatterConverter()", span="0-0", cluster="System.Runtime.Serialization.FormatterConverter.FormatterConverter()", file="ConvertUtils.cs"];
m0_286 [label="PrimitiveTypeCode.Int32", span="636-636", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_287 [label="PrimitiveTypeCode.UInt32", span="637-637", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_288 [label="PrimitiveTypeCode.Int64", span="638-638", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_219 [label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="384-384", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_113 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", span="209-209", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_10 [label="isEnum = true", span="201-201", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_72 [label="value is BigInteger", span="309-309", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_227 [label="OnSerialized(writer, contract, value)", span="399-399", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_65 [label="SerializeDynamic(writer, (IDynamicMetaObjectProvider)value, (JsonDynamicContract)valueContract, member, containerContract, containerProperty)", span="152-152", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_362 [label="i++", span="605-605", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ConvertUtils.cs"];
m0_197 [label="initialValue == DBNull.Value", span="518-518", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_203 [label="initialValue is INullable", span="532-532", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_204 [label="value = EnsureTypeAssignable(ToValue((INullable)initialValue), initialType, targetType)", span="534-534", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_205 [label="return ConvertResult.Success;", span="535-535", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_206 [label="targetType.IsInterface() || targetType.IsGenericTypeDefinition() || targetType.IsAbstract()", span="539-539", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_78 [label="value is double", span="315-315", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_235 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="562-562", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs"];
m0_338 [label="i < end", span="732-732", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_352 [label="i++", span="732-732", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_353 [label="!isNegative", span="764-764", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_354 [label="value == long.MinValue", span="767-767", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_355 [label="return ParseResult.Overflow;", span="768-768", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_356 [label="value = -value", span="770-770", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_358 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="711-711", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_359 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="776-776", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="ConvertUtils.cs"];
m0_361 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="776-776", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="ConvertUtils.cs"];
m0_351 [label="value = newValue", span="759-759", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_357 [label="return ParseResult.Success;", span="773-773", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_346 [label="c = chars[i] - '0'", span="750-750", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_360 [label="return Guid.TryParse(s, out g);", span="796-796", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="ConvertUtils.cs", color=red, community=0];
m0_340 [label="c < 0 || c > 9", span="736-736", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_350 [label="return ParseResult.Overflow;", span="756-756", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_339 [label="int c = chars[i] - '0'", span="734-734", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_343 [label="newValue > value", span="742-742", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_345 [label="i < end", span="748-748", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_347 [label="c < 0 || c > 9", span="752-752", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_349 [label="i++", span="748-748", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_363 [label="out Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span="", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ConvertUtils.cs"];
m0_348 [label="return ParseResult.Invalid;", span="753-753", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_341 [label="return ParseResult.Invalid;", span="737-737", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_342 [label="long newValue = (10 * value) - c", span="739-739", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_344 [label="i++", span="744-744", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_364 [label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span="", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeMultidimensionalArray(Newtonsoft.Json.JsonWriter, System.Array, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, int, int[])", file="ConvertUtils.cs"];
m0_153 [label="IsInteger(initialValue)", span="425-425", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_98 [label="return false;", span="189-189", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_39 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", span="415-415", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string, bool)", file="ConvertUtils.cs"];
m0_156 [label="value = System.Convert.ChangeType(initialValue, targetType, culture)", span="432-432", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_207 [label="value = null", span="541-541", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_519 [label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="423-423", cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="ConvertUtils.cs"];
m0_268 [label="return ToValue((SqlBoolean)nullableValue);", span="611-611", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_269 [label="nullableValue is SqlString", span="612-612", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_270 [label="return ToValue((SqlString)nullableValue);", span="613-613", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_271 [label="nullableValue is SqlDateTime", span="614-614", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_273 [label="throw new ArgumentException(''Unsupported INullable type: {0}''.FormatWith(CultureInfo.InvariantCulture, nullableValue.GetType()));", span="617-617", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_272 [label="return ToValue((SqlDateTime)nullableValue);", span="615-615", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_274 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="602-602", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_24 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="85-85", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_230 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="579-579", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_262 [label="return null;", span="605-605", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_264 [label="return ToValue((SqlInt32)nullableValue);", span="607-607", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_265 [label="nullableValue is SqlInt64", span="608-608", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_266 [label="return ToValue((SqlInt64)nullableValue);", span="609-609", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_261 [label="nullableValue == null", span="604-604", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_263 [label="nullableValue is SqlInt32", span="606-606", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_267 [label="nullableValue is SqlBoolean", span="610-610", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_32 [label="writer.WriteEndObject()", span="99-99", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_33 [label="return;", span="100-100", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_34 [label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="104-104", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_40 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", span="1247-1247", cluster="Newtonsoft.Json.JsonWriter.WriteValue(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.PrimitiveTypeCode, object)", file="ConvertUtils.cs"];
m0_41 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="363-363", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="ConvertUtils.cs"];
m0_42 [label="value == null", span="109-109", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_43 [label="writer.WriteNull()", span="111-111", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_327 [label="value = 0", span="713-713", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_83 [label="return new BigInteger((int)value);", span="320-320", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_174 [label="targetType == typeof(TimeSpan)", span="468-468", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_80 [label="value is decimal", span="317-317", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_401 [label="OnSerializing(writer, contract, value)", span="715-715", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_402 [label="_serializeStack.Add(value)", span="716-716", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_403 [label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="718-718", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_411 [label="!CalculatePropertyValues(writer, value, contract, member, property, out memberContract, out memberValue)", span="734-734", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_413 [label="SerializeValue(writer, memberValue, memberContract, property, contract, member)", span="738-738", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_415 [label="IsErrorHandled(value, contract, property.PropertyName, null, writer.ContainerPath, ex)", span="742-742", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_416 [label="HandleError(writer, initialDepth)", span="743-743", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_422 [label="JsonContract valueContract = GetContractSafe(memberValue)", span="757-757", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_423 [label="CheckForCircularReference(writer, memberValue, null, valueContract, contract, member)", span="759-759", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_426 [label="SerializeValue(writer, memberValue, valueContract, null, contract, member)", span="766-766", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_428 [label="IsErrorHandled(value, contract, memberName, null, writer.ContainerPath, ex)", span="771-771", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_429 [label="HandleError(writer, initialDepth)", span="772-772", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_432 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="781-781", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_433 [label="OnSerialized(writer, contract, value)", span="782-782", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_404 [label="int initialDepth = writer.Top", span="720-720", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_407 [label="JsonProperty property = contract.Properties[index]", span="724-724", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_410 [label="JsonContract memberContract", span="732-732", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_412 [label="property.WritePropertyName(writer)", span="737-737", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_406 [label="index < contract.Properties.Count", span="722-722", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_414 [label=Exception, span="740-740", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_418 [label="index++", span="722-722", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_417 [label="throw;", span="745-745", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_421 [label="contract.TryGetMember(value, memberName, out memberValue)", span="753-753", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_424 [label="string resolvedPropertyName = (contract.PropertyNameResolver != null)\r\n                                              ? contract.PropertyNameResolver(memberName)\r\n                                              : memberName", span="761-763", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_427 [label=Exception, span="769-769", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_419 [label="value.GetDynamicMemberNames()", span="750-750", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_425 [label="writer.WritePropertyName(resolvedPropertyName)", span="765-765", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_430 [label="throw;", span="774-774", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_431 [label="writer.WriteEndObject()", span="779-779", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_405 [label="int index = 0", span="722-722", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_408 [label="property.HasMemberAttribute", span="727-727", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_409 [label="object memberValue", span="731-731", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_420 [label="object memberValue", span="752-752", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_434 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="713-713", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_167 [label="initialValue is string", span="456-456", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_129 [label="referenceLoopHandling = property.ReferenceLoopHandling", span="230-230", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_275 [label="string typeName = ReflectionUtils.GetTypeName(type, Serializer._typeNameAssemblyFormat, Serializer._binder)", span="469-469", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ConvertUtils.cs"];
m0_259 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="ConvertUtils.cs"];
m0_532 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="959-959", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_533 [label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(null, writer.Path, ''IsSpecified result for property '{0}' on {1}: {2}''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType, isSpecified)), null)", span="960-960", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_531 [label="bool isSpecified = property.GetIsSpecified(target)", span="957-957", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_534 [label="return isSpecified;", span="962-962", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_529 [label="property.GetIsSpecified == null", span="954-954", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_530 [label="return true;", span="955-955", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_535 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", span="952-952", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonProperty, object)", file="ConvertUtils.cs"];
m0_257 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", span="402-402", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_36 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="240-240", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="ConvertUtils.cs"];
m0_439 [label="HasFlag(resolvedTypeNameHandling, typeNameHandlingFlag)", span="794-794", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", color=green, community=0, file="ConvertUtils.cs"];
m0_438 [label="TypeNameHandling resolvedTypeNameHandling =\r\n        ((member != null) ? member.TypeNameHandling : null)\r\n        ?? ((containerProperty != null) ? containerProperty.ItemTypeNameHandling : null)\r\n        ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n        ?? Serializer._typeNameHandling", span="788-792", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_440 [label="return true;", span="795-795", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_441 [label="HasFlag(resolvedTypeNameHandling, TypeNameHandling.Auto)", span="798-798", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_448 [label="_rootContract != null && _serializeStack.Count == 1", span="810-810", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_449 [label="contract.UnderlyingType != _rootContract.CreatedType", span="812-812", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_442 [label="member != null", span="800-800", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_443 [label="contract.UnderlyingType != member.PropertyContract.CreatedType", span="802-802", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_445 [label="containerContract != null && containerContract.ItemContract != null", span="805-805", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_446 [label="contract.UnderlyingType != containerContract.ItemContract.CreatedType", span="807-807", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_451 [label="return false;", span="817-817", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_450 [label="return true;", span="813-813", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_444 [label="return true;", span="803-803", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_447 [label="return true;", span="808-808", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_452 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="786-786", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_76 [label="value is float", span="313-313", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_329 [label="return ParseResult.Invalid;", span="716-716", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_330 [label="bool isNegative = (chars[start] == '-')", span="718-718", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_331 [label=isNegative, span="720-720", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_332 [label="length == 1", span="723-723", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_335 [label="length--", span="727-727", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_336 [label="int end = start + length", span="730-730", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_333 [label="return ParseResult.Invalid;", span="724-724", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_334 [label="start++", span="726-726", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_337 [label="int i = start", span="732-732", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs"];
m0_23 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ConvertUtils.cs"];
m0_35 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="85-85", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_236 [label="!property.Ignored && property.Readable && ShouldSerialize(writer, property, value) && IsSpecified(writer, property, value)", span="404-404", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_237 [label="property.PropertyContract == null", span="406-406", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_238 [label="property.PropertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="407-407", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_239 [label="memberValue = property.ValueProvider.GetValue(value)", span="409-409", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_241 [label="ShouldWriteProperty(memberValue, property)", span="412-412", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_243 [label="property.WritePropertyName(writer)", span="416-416", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_240 [label="memberContract = (property.PropertyContract.IsSealed) ? property.PropertyContract : GetContractSafe(memberValue)", span="410-410", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_242 [label="ShouldWriteReference(memberValue, property, memberContract, contract, member)", span="414-414", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_244 [label="WriteReference(writer, memberValue)", span="417-417", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, out Newtonsoft.Json.Serialization.JsonContract, out object)", file="ConvertUtils.cs"];
m0_397 [label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="ConvertUtils.cs"];
m0_202 [label="return ConvertResult.CannotConvertNull;", span="528-528", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_48 [label="return;", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_49 [label="valueContract.ContractType", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_51 [label="SerializeObject(writer, value, (JsonObjectContract)valueContract, member, containerContract, containerProperty)", span="131-131", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_50 [label="JsonContractType.Object", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_52 [label="JsonContractType.Array", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_284 [label="PrimitiveTypeCode.Int16", span="634-634", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_285 [label="PrimitiveTypeCode.UInt16", span="635-635", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_228 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="362-362", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_31 [label="JsonWriter.WriteValue(writer, contract.TypeCode, value)", span="97-97", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_114 [label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore &&\r\n          memberValue == null", span="211-212", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_115 [label="return false;", span="213-213", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_116 [label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n          && MiscellaneousUtils.ValueEquals(memberValue, property.GetResolvedDefaultValue())", span="215-216", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_120 [label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault(T)", file="ConvertUtils.cs"];
m0_124 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="222-222", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_117 [label="return false;", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_119 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", span="209-209", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_123 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="ConvertUtils.cs"];
m0_125 [label="value == null || contract.ContractType == JsonContractType.Primitive || contract.ContractType == JsonContractType.String", span="224-224", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_118 [label="return true;", span="219-219", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteProperty(object, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_126 [label="return true;", span="225-225", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_365 [label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span="", cluster="System.Array.GetLength(int)", file="ConvertUtils.cs"];
m0_27 [label=includeTypeDetails, span="91-91", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_28 [label="writer.WriteStartObject()", span="93-93", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_29 [label="WriteTypeProperty(writer, contract.CreatedType)", span="94-94", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_30 [label="writer.WritePropertyName(JsonTypeReflector.ValuePropertyName, false)", span="95-95", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_56 [label="SerializeMultidimensionalArray(writer, (Array)value, arrayContract, member, containerContract, containerProperty)", span="138-138", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_57 [label="JsonContractType.Primitive", span="140-140", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_58 [label="SerializePrimitive(writer, value, (JsonPrimitiveContract)valueContract, member, containerContract, containerProperty)", span="141-141", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_59 [label="JsonContractType.String", span="143-143", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_60 [label="SerializeString(writer, value, (JsonStringContract)valueContract)", span="144-144", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_62 [label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract) valueContract", span="147-147", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_61 [label="JsonContractType.Dictionary", span="146-146", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_63 [label="SerializeDictionary(writer, (value is IDictionary) ? (IDictionary) value : dictionaryContract.CreateWrapper(value), dictionaryContract, member, containerContract, containerProperty)", span="148-148", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_64 [label="JsonContractType.Dynamic", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_74 [label="value is string", span="311-311", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_208 [label="return ConvertResult.NotInstantiableType;", span="542-542", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_209 [label="value = null", span="545-545", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_210 [label="return ConvertResult.NoValidConversion;", span="546-546", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_221 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="ConvertUtils.cs"];
m0_211 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", span="399-399", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_214 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)", file="ConvertUtils.cs"];
m0_218 [label="Entry System.Guid.Guid(byte[])", span="0-0", cluster="System.Guid.Guid(byte[])", file="ConvertUtils.cs"];
m0_212 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ConvertUtils.cs"];
m0_215 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="628-628", cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs"];
m0_231 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="602-602", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs"];
m0_246 [label="Type valueType = (value != null) ? value.GetType() : null", span="581-581", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_254 [label="return null;", span="595-595", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_245 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="136-136", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ConvertUtils.cs"];
m0_247 [label="value != null", span="583-583", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_248 [label="targetType.IsAssignableFrom(valueType)", span="585-585", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_252 [label="return castConverter(value);", span="590-590", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_249 [label="return value;", span="586-586", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_250 [label="Func<object, object> castConverter = CastConverters.Get(new TypeConvertKey(valueType, targetType))", span="588-588", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_255 [label="throw new ArgumentException(''Could not cast or convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, (initialType != null) ? initialType.ToString() : ''{null}'', targetType));", span="598-598", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_253 [label="ReflectionUtils.IsNullable(targetType)", span="594-594", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_251 [label="castConverter != null", span="589-589", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_256 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="579-579", cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs"];
m0_0 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="184-184", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="ConvertUtils.cs"];
m0_1 [label="bool isEnum", span="186-186", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="ConvertUtils.cs"];
m0_2 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", span="58-58", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ConvertUtils.cs"];
m0_3 [label="jsonWriter == null", span="60-60", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object, System.Type)", file="ConvertUtils.cs"];
m0_507 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", span="380-380", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.WriteDateTimeString(System.IO.TextWriter, System.DateTime, Newtonsoft.Json.DateFormatHandling, string, System.Globalization.CultureInfo)", file="ConvertUtils.cs"];
m0_400 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="405-405", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="ConvertUtils.cs"];
m0_25 [label="contract.TypeCode == PrimitiveTypeCode.Bytes", span="87-87", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_9 [label="t.IsEnum()", span="199-199", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_527 [label="Entry System.Predicate<T>.Invoke(T)", span="0-0", cluster="System.Predicate<T>.Invoke(T)", file="ConvertUtils.cs"];
m0_67 [label="SerializeISerializable(writer, (ISerializable)value, (JsonISerializableContract)valueContract, member, containerContract, containerProperty)", span="157-157", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_68 [label="JsonContractType.Linq", span="160-160", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_69 [label="((JToken) value).WriteTo(writer, Serializer.Converters.ToArray())", span="161-161", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_6 [label="TypeCodeMap.TryGetValue(t, out typeCode)", span="193-193", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_7 [label="isEnum = false", span="195-195", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_5 [label="PrimitiveTypeCode typeCode", span="192-192", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_4 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", span="190-190", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_8 [label="return typeCode;", span="196-196", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_11 [label="return GetTypeCode(Enum.GetUnderlyingType(t));", span="202-202", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_21 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ConvertUtils.cs"];
m0_19 [label="return PrimitiveTypeCode.Object;", span="218-218", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_20 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", span="190-190", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_22 [label="Entry System.Type.IsEnum()", span="169-169", cluster="System.Type.IsEnum()", file="ConvertUtils.cs"];
m0_12 [label="ReflectionUtils.IsNullableType(t)", span="206-206", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_47 [label="Entry System.Type.GetHashCode()", span="0-0", cluster="System.Type.GetHashCode()", file="ConvertUtils.cs"];
m0_55 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="283-283", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="ConvertUtils.cs"];
m0_53 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="283-283", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="ConvertUtils.cs"];
m0_54 [label="return (_initialType == other._initialType && _targetType == other._targetType);", span="285-285", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="ConvertUtils.cs"];
m0_143 [label="targetType = Nullable.GetUnderlyingType(targetType)", span="405-405", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_144 [label="Type initialType = initialValue.GetType()", span="407-407", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_147 [label="return ConvertResult.Success;", span="412-412", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_148 [label="ConvertUtils.IsConvertible(initialValue.GetType()) && ConvertUtils.IsConvertible(targetType)", span="416-416", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_150 [label="initialValue is string", span="420-420", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_127 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", span="399-399", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_140 [label="initialValue == null", span="401-401", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_142 [label="ReflectionUtils.IsNullableType(targetType)", span="404-404", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_146 [label="value = initialValue", span="411-411", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_145 [label="targetType == initialType", span="409-409", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_149 [label="targetType.IsEnum()", span="418-418", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_128 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="ConvertUtils.cs"];
m0_141 [label="throw new ArgumentNullException(''initialValue'');", span="402-402", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_151 [label="value = Enum.Parse(targetType, initialValue.ToString(), true)", span="422-422", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs"];
m0_437 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ConvertUtils.cs"];
m0_38 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="467-467", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="ConvertUtils.cs"];
m0_326 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="647-647", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_328 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="ConvertUtils.cs"];
m0_505 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="883-883", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_483 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", span="883-883", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_500 [label="TryConvertToString(key, key.GetType(), out propertyName)", span="914-914", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_484 [label="object key = entry.Key", span="885-885", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_486 [label="JsonPrimitiveContract primitiveContract = contract as JsonPrimitiveContract", span="889-889", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_491 [label="DateTimeUtils.WriteDateTimeString(sw, (DateTime)key, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="896-896", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_496 [label="DateTimeUtils.WriteDateTimeOffsetString(sw, (DateTimeOffset)key, writer.DateFormatHandling, writer.DateFormatString, writer.Culture)", span="904-904", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_487 [label="primitiveContract != null", span="890-890", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_501 [label="escape = true", span="916-916", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_503 [label="escape = true", span="921-921", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_502 [label="return propertyName;", span="917-917", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_499 [label="return Convert.ToString(key, CultureInfo.InvariantCulture);", span="911-911", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_504 [label="return key.ToString();", span="922-922", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_489 [label="escape = false", span="894-894", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_492 [label="return sw.ToString();", span="897-897", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_494 [label="escape = false", span="902-902", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_498 [label="escape = true", span="910-910", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_497 [label="return sw.ToString();", span="905-905", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_485 [label="string propertyName", span="887-887", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_488 [label="primitiveContract.TypeCode == PrimitiveTypeCode.DateTime || primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeNullable", span="892-892", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_493 [label="primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeOffset || primitiveContract.TypeCode == PrimitiveTypeCode.DateTimeOffsetNullable", span="900-900", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_490 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="895-895", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_495 [label="StringWriter sw = new StringWriter(CultureInfo.InvariantCulture)", span="903-903", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(Newtonsoft.Json.JsonWriter, System.Collections.DictionaryEntry, Newtonsoft.Json.Serialization.JsonContract, out bool)", file="ConvertUtils.cs"];
m0_506 [label="Entry System.IO.StringWriter.StringWriter(System.IFormatProvider)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.IFormatProvider)", file="ConvertUtils.cs"];
m0_26 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="ConvertUtils.cs"];
m0_234 [label="Entry System.Type.IsAbstract()", span="521-521", cluster="System.Type.IsAbstract()", file="ConvertUtils.cs"];
m0_512 [label="ClearErrorContext()", span="928-928", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ConvertUtils.cs"];
m0_513 [label="writer.WriteState == WriteState.Property", span="930-930", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ConvertUtils.cs"];
m0_514 [label="writer.WriteNull()", span="931-931", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ConvertUtils.cs"];
m0_515 [label="writer.Top > initialDepth", span="933-933", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ConvertUtils.cs"];
m0_516 [label="writer.WriteEnd()", span="935-935", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ConvertUtils.cs"];
m0_517 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="926-926", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="ConvertUtils.cs"];
m0_13 [label="Type nonNullable = Nullable.GetUnderlyingType(t)", span="208-208", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_14 [label="nonNullable.IsEnum()", span="209-209", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_15 [label="Type nullableUnderlyingType = typeof(Nullable<>).MakeGenericType(Enum.GetUnderlyingType(nonNullable))", span="211-211", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_16 [label="isEnum = true", span="212-212", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_17 [label="return GetTypeCode(nullableUnderlyingType);", span="213-213", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type, out bool)", file="ConvertUtils.cs"];
m0_154 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="ConvertUtils.cs"];
m0_158 [label="string reference = GetReference(writer, value)", span="267-267", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ConvertUtils.cs"];
m0_159 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="269-269", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ConvertUtils.cs"];
m0_161 [label="writer.WriteStartObject()", span="272-272", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ConvertUtils.cs"];
m0_162 [label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName, false)", span="273-273", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ConvertUtils.cs"];
m0_164 [label="writer.WriteEndObject()", span="275-275", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ConvertUtils.cs"];
m0_165 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="265-265", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ConvertUtils.cs"];
m0_168 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="795-795", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ConvertUtils.cs"];
m0_175 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="292-292", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_177 [label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n#endif\r\n && converter.GetType() != typeof(TypeConverter)", span="298-302", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_178 [label="converter.CanConvertTo(typeof(string))", span="304-304", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_180 [label="return true;", span="312-312", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_181 [label="value is Type", span="325-325", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_183 [label="return true;", span="328-328", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_184 [label="s = null", span="331-331", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_186 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="292-292", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_190 [label="OnSerializing(writer, contract, value)", span="337-337", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ConvertUtils.cs"];
m0_191 [label="string s", span="339-339", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ConvertUtils.cs"];
m0_193 [label="writer.WriteValue(s)", span="341-341", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ConvertUtils.cs"];
m0_195 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="335-335", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ConvertUtils.cs"];
m0_198 [label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="348-348", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ConvertUtils.cs"];
m0_199 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Started serializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="349-349", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ConvertUtils.cs"];
m0_194 [label="OnSerialized(writer, contract, value)", span="343-343", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ConvertUtils.cs"];
m0_152 [label="Entry System.Collections.Generic.List<T>.IndexOf(T)", span="0-0", cluster="System.Collections.Generic.List<T>.IndexOf(T)", file="ConvertUtils.cs"];
m0_157 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="265-265", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ConvertUtils.cs"];
m0_160 [label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(null, writer.Path, ''Writing object reference to Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, value.GetType())), null)", span="270-270", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ConvertUtils.cs"];
m0_163 [label="writer.WriteValue(reference)", span="274-274", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="ConvertUtils.cs"];
m0_176 [label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="295-295", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_179 [label="s = converter.ConvertToInvariantString(value)", span="307-307", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_182 [label="s = ((Type)value).AssemblyQualifiedName", span="327-327", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_185 [label="return false;", span="332-332", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="ConvertUtils.cs"];
m0_192 [label="TryConvertToString(value, contract.UnderlyingType, out s)", span="340-340", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ConvertUtils.cs"];
m0_196 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="346-346", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ConvertUtils.cs"];
m0_201 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", span="346-346", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ConvertUtils.cs"];
m0_200 [label="contract.InvokeOnSerializing(value, Serializer._context)", span="351-351", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.OnSerializing(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Serialization.JsonContract, object)", file="ConvertUtils.cs"];
m0_75 [label="return BigInteger.Parse((string)value, CultureInfo.InvariantCulture);", span="312-312", cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs"];
m0_366 [label=call, span="", cluster="System.Array.GetValue(params int[])", file="ConvertUtils.cs"];
m0_77 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="335-335", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="ConvertUtils.cs"];
m0_79 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="820-820", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_81 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="678-678", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_97 [label="value == null", span="188-188", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_280 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", file="ConvertUtils.cs"];
m0_455 [label="OnSerializing(writer, contract, underlyingDictionary)", span="825-825", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_456 [label="_serializeStack.Add(underlyingDictionary)", span="826-826", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_457 [label="WriteObjectStart(writer, underlyingDictionary, contract, member, collectionContract, containerProperty)", span="828-828", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_459 [label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.DictionaryValueType ?? typeof(object))", span="831-831", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_461 [label="contract.KeyContract = Serializer._contractResolver.ResolveContract(contract.DictionaryKeyType ?? typeof(object))", span="834-834", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_465 [label="string propertyName = GetPropertyName(writer, entry, contract.KeyContract, out escape)", span="841-841", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_468 [label="JsonContract valueContract = contract.FinalItemContract ?? GetContractSafe(value)", span="850-850", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_469 [label="ShouldWriteReference(value, null, valueContract, contract, member)", span="852-852", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_471 [label="WriteReference(writer, value)", span="855-855", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_472 [label="!CheckForCircularReference(writer, value, null, valueContract, contract, member)", span="859-859", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_474 [label="SerializeValue(writer, value, valueContract, null, contract, member)", span="864-864", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_476 [label="IsErrorHandled(underlyingDictionary, contract, propertyName, null, writer.ContainerPath, ex)", span="869-869", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_477 [label="HandleError(writer, initialDepth)", span="870-870", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_480 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="878-878", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_481 [label="OnSerialized(writer, contract, underlyingDictionary)", span="880-880", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_454 [label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : values", span="823-823", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_458 [label="contract.ItemContract == null", span="830-830", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_460 [label="contract.KeyContract == null", span="833-833", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_462 [label="int initialDepth = writer.Top", span="836-836", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_463 [label=values, span="838-838", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_464 [label="bool escape", span="840-840", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_466 [label="propertyName = (contract.PropertyNameResolver != null)\r\n                         ? contract.PropertyNameResolver(propertyName)\r\n                         : propertyName", span="843-845", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_470 [label="writer.WritePropertyName(propertyName, escape)", span="854-854", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_473 [label="writer.WritePropertyName(propertyName, escape)", span="862-862", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_467 [label="object value = entry.Value", span="849-849", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_475 [label=Exception, span="867-867", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_478 [label="throw;", span="872-872", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_479 [label="writer.WriteEndObject()", span="876-876", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_453 [label="IWrappedDictionary wrappedDictionary = values as IWrappedDictionary", span="822-822", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_482 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="820-820", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, System.Collections.IDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_96 [label="Entry System.InvalidCastException.InvalidCastException(string)", span="0-0", cluster="System.InvalidCastException.InvalidCastException(string)", file="ConvertUtils.cs"];
m0_112 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="ConvertUtils.cs"];
m0_510 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="ConvertUtils.cs"];
m0_528 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="ConvertUtils.cs"];
m0_281 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="141-141", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="ConvertUtils.cs"];
m0_367 [label="bool isReference = ResolveIsReference(contract, member, containerContract, containerProperty) ?? HasFlag(Serializer._preserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="649-649", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_368 [label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Arrays, contract, member, containerContract, containerProperty)", span="650-650", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_373 [label="WriteReferenceIdProperty(writer, contract.UnderlyingType, values)", span="659-659", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_375 [label="WriteTypeProperty(writer, values.GetType())", span="663-663", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_378 [label="contract.ItemContract = Serializer._contractResolver.ResolveContract(contract.CollectionItemType ?? typeof (object))", span="669-669", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_369 [label="bool writeMetadataObject = isReference || includeTypeDetails", span="651-651", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_372 [label=isReference, span="657-657", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_374 [label=includeTypeDetails, span="661-661", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_376 [label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName, false)", span="665-665", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_377 [label="contract.ItemContract == null", span="668-668", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_379 [label="return writeMetadataObject;", span="671-671", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_371 [label="writer.WriteStartObject()", span="655-655", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_370 [label=writeMetadataObject, span="653-653", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_380 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="647-647", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteStartArray(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_435 [label="Entry System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", span="143-143", cluster="System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", file="ConvertUtils.cs"];
m0_391 [label="writer.WritePropertyName(serializationEntry.Name)", span="700-700", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_383 [label="OnSerializing(writer, contract, value)", span="686-686", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_384 [label="_serializeStack.Add(value)", span="687-687", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_385 [label="WriteObjectStart(writer, value, contract, member, collectionContract, containerProperty)", span="689-689", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_387 [label="value.GetObjectData(serializationInfo, Serializer._context)", span="692-692", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_389 [label="JsonContract valueContract = GetContractSafe(serializationEntry.Value)", span="696-696", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_390 [label="CheckForCircularReference(writer, serializationEntry.Value, null, valueContract, contract, member)", span="698-698", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_392 [label="SerializeValue(writer, serializationEntry.Value, valueContract, null, contract, member)", span="701-701", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_394 [label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="707-707", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_395 [label="OnSerialized(writer, contract, value)", span="708-708", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_381 [label="!JsonTypeReflector.FullyTrusted", span="680-680", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_386 [label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new FormatterConverter())", span="691-691", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_388 [label=serializationInfo, span="694-694", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_393 [label="writer.WriteEndObject()", span="705-705", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_382 [label="throw JsonSerializationException.Create(null, writer.ContainerPath, @''Type '{0}' implements ISerializable but cannot be serialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.\r\nTo fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()), null);", span="682-683", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_396 [label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="678-678", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="ConvertUtils.cs"];
m0_536 [label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span="", file="ConvertUtils.cs"];
m1_4 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="875-875", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="DiscriminatedUnionConverterTests.cs"];
m1_180 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m1_117 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="DiscriminatedUnionConverterTests.cs"];
m1_100 [label="Entry Unk.GetUnionCases", span="", cluster="Unk.GetUnionCases", file="DiscriminatedUnionConverterTests.cs"];
m1_133 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", span="246-246", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="DiscriminatedUnionConverterTests.cs"];
m1_134 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''abcdefg'''',''''Fields'''':[]}''), ''No union type found with the name 'abcdefg'. Path 'Case', line 1, position 17.'')", span="248-248", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="DiscriminatedUnionConverterTests.cs"];
m1_135 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", span="246-246", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="DiscriminatedUnionConverterTests.cs"];
m1_12 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_13 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new DoubleDoubleConverter())", span="68-68", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_14 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[20.0,10.0]}'', json)", span="70-70", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_15 [label="Shape c = JsonConvert.DeserializeObject<Shape>(json, new DoubleDoubleConverter())", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_16 [label="Assert.AreEqual(true, c.IsRectangle)", span="73-73", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_17 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="75-75", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_18 [label="Assert.AreEqual(5.0, r.length)", span="77-77", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_19 [label="Assert.AreEqual(10.0, r.width)", span="78-78", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_20 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_9 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_10 [label="return objectType == typeof(double);", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_11 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_106 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_107 [label="Shape value = Shape.NewRectangle(10.0, 5.0)", span="214-214", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_108 [label="Union union = CreateUnion(value.GetType())", span="216-216", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_109 [label="int tag = union.TagReader.Invoke(value)", span="218-218", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_111 [label="object[] fields = caseInfo.FieldReader.Invoke(value)", span="222-222", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_110 [label="UnionCase caseInfo = union.Cases.Single(c => c.Tag == tag)", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_112 [label="Assert.AreEqual(10, fields[0])", span="224-224", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_113 [label="Assert.AreEqual(5, fields[1])", span="225-225", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_114 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_115 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DiscriminatedUnionConverterTests.cs"];
m1_116 [label="Entry System.Converter<TInput, TOutput>.Invoke(TInput)", span="0-0", cluster="System.Converter<TInput, TOutput>.Invoke(TInput)", file="DiscriminatedUnionConverterTests.cs"];
m1_140 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs"];
m1_141 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}''), ''The number of field values does not match the number of properties definied by union 'AUD'. Path '', line 1, position 27.'')", span="254-254", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs"];
m1_142 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs"];
m1_0 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m1_1 [label="double d = (double)value", span="47-47", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m1_2 [label="writer.WriteValue(d * 2)", span="49-49", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m1_3 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m1_98 [label="Entry Unk.PreComputeUnionTagReader", span="", cluster="Unk.PreComputeUnionTagReader", file="DiscriminatedUnionConverterTests.cs"];
m1_21 [label="Entry Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", span="72-72", cluster="Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", file="DiscriminatedUnionConverterTests.cs"];
m1_170 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_171 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="284-288", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_172 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'', json)", span="290-290", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_173 [label="Shape c = JsonConvert.DeserializeObject<Shape>(json)", span="292-292", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_174 [label="Assert.AreEqual(true, c.IsRectangle)", span="293-293", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_175 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="295-295", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_176 [label="Assert.AreEqual(5.0, r.length)", span="297-297", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_177 [label="Assert.AreEqual(10.0, r.width)", span="298-298", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_178 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_24 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DiscriminatedUnionConverterTests.cs"];
m1_43 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DiscriminatedUnionConverterTests.cs"];
m1_136 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DiscriminatedUnionConverterTests.cs"];
m1_152 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs"];
m1_153 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''), ''Unexpected end when reading union. Path 'Case', line 1, position 8.'')", span="266-266", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs"];
m1_154 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs"];
m1_62 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DiscriminatedUnionConverterTests.cs"];
m1_167 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_119 [label="c.Tag == tag", span="220-220", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_118 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_120 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_130 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_131 [label="c.Name == ''Rectangle''", span="233-233", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_132 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_137 [label="Entry lambda expression", span="248-248", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_138 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''abcdefg'''',''''Fields'''':[]}'')", span="248-248", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_139 [label="Exit lambda expression", span="248-248", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_143 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_144 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}'')", span="254-254", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_145 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_149 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_150 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}'')", span="260-260", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_151 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_155 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_156 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':'')", span="266-266", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_157 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_161 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_162 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}'')", span="272-272", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_163 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_168 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}'')", span="278-278", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_169 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_26 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", span="82-82", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_27 [label="string json = JsonConvert.SerializeObject(Currency.AUD)", span="84-84", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_28 [label="Assert.AreEqual(@''{''''Case'''':''''AUD''''}'', json)", span="86-86", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_29 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", span="82-82", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_46 [label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="DiscriminatedUnionConverterTests.cs"];
m1_75 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", span="161-161", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_76 [label="Shape c = JsonConvert.DeserializeObject<Shape>(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'')", span="163-163", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_77 [label="Assert.AreEqual(true, c.IsRectangle)", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_78 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_79 [label="Assert.AreEqual(5.0, r.length)", span="168-168", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_80 [label="Assert.AreEqual(10.0, r.width)", span="169-169", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_81 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", span="161-161", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_49 [label="Entry System.Console.WriteLine(double)", span="0-0", cluster="System.Console.WriteLine(double)", file="DiscriminatedUnionConverterTests.cs"];
m1_99 [label="Entry Unk.ToConverter", span="", cluster="Unk.ToConverter", file="DiscriminatedUnionConverterTests.cs"];
m1_103 [label="Entry Unk.PreComputeUnionReader", span="", cluster="Unk.PreComputeUnionReader", file="DiscriminatedUnionConverterTests.cs"];
m1_82 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", span="187-187", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_83 [label="Union u = new Union()", span="189-189", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_84 [label="u.TagReader = FSharpFunc<object, int>.ToConverter(FSharpValue.PreComputeUnionTagReader(t, null))", span="191-191", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_86 [label="UnionCaseInfo[] cases = FSharpType.GetUnionCases(t, null)", span="194-194", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_85 [label="u.Cases = new List<UnionCase>()", span="192-192", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_94 [label="u.Cases.Add(unionCase)", span="205-205", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_95 [label="return u;", span="208-208", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_87 [label=cases, span="196-196", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_88 [label="UnionCase unionCase = new UnionCase()", span="198-198", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_89 [label="unionCase.Tag = unionCaseInfo.Tag", span="199-199", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_90 [label="unionCase.Name = unionCaseInfo.Name", span="200-200", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_91 [label="unionCase.Fields = unionCaseInfo.GetFields()", span="201-201", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_92 [label="unionCase.FieldReader = FSharpFunc<object, object[]>.ToConverter(FSharpValue.PreComputeUnionReader(unionCaseInfo, null))", span="202-202", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_93 [label="unionCase.Constructor = FSharpFunc<object[], object>.ToConverter(FSharpValue.PreComputeUnionConstructor(unionCaseInfo, null))", span="203-203", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_96 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", span="187-187", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_97 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", file="DiscriminatedUnionConverterTests.cs"];
m1_45 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DiscriminatedUnionConverterTests.cs"];
m1_146 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs"];
m1_147 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}''), ''No 'Case' property with union name found. Path '', line 1, position 14.'')", span="260-260", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs"];
m1_148 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs"];
m1_158 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs"];
m1_159 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}''), ''Union fields must been an array. Path 'Fields', line 1, position 24.'')", span="272-272", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs"];
m1_160 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs"];
m1_121 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_122 [label="Union union = CreateUnion(typeof(Shape.Rectangle))", span="231-231", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_123 [label="UnionCase caseInfo = union.Cases.Single(c => c.Name == ''Rectangle'')", span="233-233", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_124 [label="Shape.Rectangle value = (Shape.Rectangle)caseInfo.Constructor.Invoke(new object[]\r\n            {\r\n                10.0, 5.0\r\n            })", span="235-238", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_125 [label="Assert.AreEqual(''Newtonsoft.Json.Tests.TestObjects.Shape+Rectangle'', value.ToString())", span="240-240", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_126 [label="Assert.AreEqual(10, value.width)", span="241-241", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_127 [label="Assert.AreEqual(5, value.length)", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_128 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_179 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="375-375", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DiscriminatedUnionConverterTests.cs"];
m1_104 [label="Entry Unk.PreComputeUnionConstructor", span="", cluster="Unk.PreComputeUnionConstructor", file="DiscriminatedUnionConverterTests.cs"];
m1_50 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_51 [label="string json = @''[\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}\r\n]''", span="116-122", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_52 [label="JsonConvert.DeserializeObject<List<Shape>>(json)", span="124-124", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_57 [label="JsonConvert.DeserializeObject<List<Shape>>(json)", span="131-131", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_53 [label="Stopwatch ts = new Stopwatch()", span="126-126", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_54 [label="ts.Start()", span="127-127", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_59 [label="ts.Stop()", span="134-134", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_60 [label="Console.WriteLine(ts.Elapsed.TotalSeconds)", span="136-136", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_55 [label="int i = 0", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", color=red, community=0, file="DiscriminatedUnionConverterTests.cs"];
m1_56 [label="i < 2000", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", color=red, community=0, file="DiscriminatedUnionConverterTests.cs"];
m1_58 [label="i++", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", color=red, community=0, file="DiscriminatedUnionConverterTests.cs"];
m1_61 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_67 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_68 [label="Currency c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD''''}'')", span="150-150", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_69 [label="Assert.AreEqual(Currency.AUD, c)", span="151-151", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_70 [label="c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''EUR''''}'')", span="153-153", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_71 [label="Assert.AreEqual(Currency.EUR, c)", span="154-154", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_72 [label="c = JsonConvert.DeserializeObject<Currency>(@''null'')", span="156-156", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_73 [label="Assert.AreEqual(null, c)", span="157-157", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_74 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_105 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DiscriminatedUnionConverterTests.cs"];
m1_47 [label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0", cluster="System.Diagnostics.Stopwatch.Start()", file="DiscriminatedUnionConverterTests.cs"];
m1_101 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", span="178-178", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", file="DiscriminatedUnionConverterTests.cs"];
m1_31 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_32 [label="List<Shape> values = new List<Shape>\r\n            {\r\n                Shape.NewRectangle(10.0, 5.0),\r\n                Shape.NewCircle(7.5)\r\n            }", span="92-96", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_33 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented)", span="98-98", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_38 [label="JsonConvert.SerializeObject(values)", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_34 [label="Stopwatch ts = new Stopwatch()", span="100-100", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_35 [label="ts.Start()", span="101-101", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_40 [label="ts.Stop()", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_41 [label="Console.WriteLine(ts.Elapsed.TotalSeconds)", span="110-110", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_36 [label="int i = 0", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", color=red, community=0, file="DiscriminatedUnionConverterTests.cs"];
m1_37 [label="i < 2000", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", color=red, community=0, file="DiscriminatedUnionConverterTests.cs"];
m1_39 [label="i++", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", color=red, community=0, file="DiscriminatedUnionConverterTests.cs"];
m1_42 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_5 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m1_6 [label="double d = (double)reader.Value", span="54-54", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m1_7 [label="return d / 2;", span="56-56", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m1_8 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DiscriminatedUnionConverterTests.cs"];
m1_102 [label="Entry Unk.GetFields", span="", cluster="Unk.GetFields", file="DiscriminatedUnionConverterTests.cs"];
m1_48 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="DiscriminatedUnionConverterTests.cs"];
m1_44 [label="Entry Newtonsoft.Json.Tests.TestObjects.Shape.NewCircle(double)", span="60-60", cluster="Newtonsoft.Json.Tests.TestObjects.Shape.NewCircle(double)", file="DiscriminatedUnionConverterTests.cs"];
m1_30 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_129 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="DiscriminatedUnionConverterTests.cs"];
m1_23 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="DiscriminatedUnionConverterTests.cs"];
m1_25 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="DiscriminatedUnionConverterTests.cs"];
m1_63 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_64 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0))", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_65 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'', json)", span="144-144", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_66 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="DiscriminatedUnionConverterTests.cs"];
m1_164 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs"];
m1_165 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}''), ''Unexpected property 'Case123' found when reading union. Path 'Case123', line 1, position 11.'')", span="278-278", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs"];
m1_166 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs"];
m1_22 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", span="43-43", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_181 [label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests", span="", file="DiscriminatedUnionConverterTests.cs"];
m1_182 [label=tag, span="", file="DiscriminatedUnionConverterTests.cs"];
m2_2 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", file="JsonConstructorAttribute.cs"];
m2_3 [label="UserName = userName", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_4 [label="Enabled = enabled", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", file="JsonConstructorAttribute.cs"];
m2_13 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonConstructorAttribute.cs"];
m2_14 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonConstructorAttribute.cs"];
m2_12 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConstructorAttribute.cs"];
m2_6 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", file="JsonConstructorAttribute.cs"];
m2_7 [label="string json = @''{\r\n              ''''UserName'''': ''''domain\\username'''',\r\n              ''''Enabled'''': true\r\n            }''", span="61-64", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_8 [label="User user = JsonConvert.DeserializeObject<User>(json)", span="66-66", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_9 [label="Console.WriteLine(user.UserName)", span="68-68", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_10 [label="Assert.AreEqual(@''domain\username'', user.UserName)", span="72-72", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_11 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", file="JsonConstructorAttribute.cs"];
m2_15 [label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User", span="", file="JsonConstructorAttribute.cs"];
m3_1484 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonReader.cs"];
m3_32 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="164-164", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="JsonReader.cs"];
m3_1737 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3767-3767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonReader.cs"];
m3_1738 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3769-3769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonReader.cs"];
m3_1739 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3771-3771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonReader.cs"];
m3_1740 [label="JArray a = (JArray)setOnly.GetValue()", span="3772-3772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonReader.cs"];
m3_1741 [label="Assert.AreEqual(5, a.Count)", span="3773-3773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonReader.cs"];
m3_1742 [label="Assert.AreEqual(1, (int)a[0])", span="3774-3774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonReader.cs"];
m3_1743 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3775-3775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonReader.cs"];
m3_1744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3767-3767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonReader.cs"];
m3_979 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2122-2122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonReader.cs"];
m3_980 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="2124-2124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonReader.cs"];
m3_981 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="2126-2126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonReader.cs"];
m3_982 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="2128-2128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonReader.cs"];
m3_983 [label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="2129-2131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonReader.cs"];
m3_984 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2122-2122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonReader.cs"];
m3_3478 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7873-7873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonReader.cs"];
m3_3479 [label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="7875-7885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonReader.cs"];
m3_3480 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7887-7887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonReader.cs"];
m3_3481 [label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7898-7912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonReader.cs"];
m3_3482 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7873-7873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonReader.cs"];
m3_4061 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9432-9432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonReader.cs"];
m3_4062 [label="DerivedProperty = derivedProperty", span="9435-9435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonReader.cs"];
m3_4063 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9432-9432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonReader.cs"];
m3_3268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7419-7419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonReader.cs"];
m3_3269 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="7421-7421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonReader.cs"];
m3_3270 [label="person.Name = ''John Doe''", span="7422-7422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonReader.cs"];
m3_3271 [label="person.Age = 25", span="7423-7423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonReader.cs"];
m3_3272 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="7425-7425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonReader.cs"];
m3_3274 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="7428-7428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonReader.cs"];
m3_3273 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="7426-7426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonReader.cs"];
m3_3275 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7419-7419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonReader.cs"];
m3_2998 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6839-6839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_2999 [label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6841-6841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3000 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6843-6846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3003 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6849-6852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3005 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6860-6868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3001 [label="StaticTestClass.y = 2", span="6847-6847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3002 [label="StaticTestClass.z = 3", span="6848-6848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3004 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6854-6858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3006 [label="Assert.AreEqual(-1, c2.x)", span="6870-6870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3007 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6871-6871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3008 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6872-6872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_3009 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6839-6839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonReader.cs"];
m3_2195 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonReader.cs"];
m3_333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="898-898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonReader.cs"];
m3_334 [label="Dictionary<string, string> d = JsonConvert.DeserializeObject<Dictionary<string, string>>(''{\''Test1\'':false}'')", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonReader.cs"];
m3_335 [label="Assert.AreEqual(1, d.Count)", span="901-901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonReader.cs"];
m3_336 [label="Assert.AreEqual(''false'', d[''Test1''])", span="902-902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonReader.cs"];
m3_337 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="898-898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonReader.cs"];
m3_519 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonReader.cs"];
m3_3401 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7693-7693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonReader.cs"];
m3_3402 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7695-7699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonReader.cs"];
m3_3403 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7701-7701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonReader.cs"];
m3_3404 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7703-7706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonReader.cs"];
m3_3405 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7708-7708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonReader.cs"];
m3_3406 [label="Assert.AreEqual(2, dic2.Count)", span="7710-7710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonReader.cs"];
m3_3407 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7711-7711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonReader.cs"];
m3_3408 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7712-7712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonReader.cs"];
m3_3409 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7693-7693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonReader.cs"];
m3_2380 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5369-5369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2381 [label="PosDouble p = (PosDouble)value", span="5371-5371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2383 [label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="5375-5375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2384 [label="writer.WriteNull()", span="5379-5379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2382 [label="p != null", span="5373-5373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2385 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5369-5369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_409 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonReader.cs"];
m3_410 [label="string json = ''['1.2.3.4']''", span="1069-1069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonReader.cs"];
m3_411 [label="List<Version> deserialized = JsonConvert.DeserializeObject<List<Version>>(json)", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonReader.cs"];
m3_412 [label="Assert.AreEqual(1, deserialized[0].Major)", span="1072-1072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonReader.cs"];
m3_413 [label="Assert.AreEqual(2, deserialized[0].Minor)", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonReader.cs"];
m3_414 [label="Assert.AreEqual(3, deserialized[0].Build)", span="1074-1074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonReader.cs"];
m3_415 [label="Assert.AreEqual(4, deserialized[0].Revision)", span="1075-1075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonReader.cs"];
m3_416 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonReader.cs"];
m3_998 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2157-2157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonReader.cs"];
m3_999 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="2159-2159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonReader.cs"];
m3_1000 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="2161-2161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonReader.cs"];
m3_1001 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="2163-2163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonReader.cs"];
m3_1002 [label="Assert.AreEqual(0, c.IgnoredField)", span="2165-2165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonReader.cs"];
m3_1003 [label="Assert.AreEqual(99, c.Field)", span="2166-2166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonReader.cs"];
m3_1004 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2157-2157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonReader.cs"];
m3_1306 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2778-2778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonReader.cs"];
m3_1307 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2780-2780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonReader.cs"];
m3_1308 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2781-2781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonReader.cs"];
m3_1312 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2791-2791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonReader.cs"];
m3_1313 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2792-2792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonReader.cs"];
m3_1309 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2783-2786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonReader.cs"];
m3_1310 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2787-2787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonReader.cs"];
m3_1311 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2789-2789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonReader.cs"];
m3_1314 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2778-2778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonReader.cs"];
m3_1430 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3006-3006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_1431 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3010-3015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_1432 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3017-3017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_1433 [label="Assert.Fail()", span="3018-3018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_1434 [label=JsonSerializationException, span="3020-3020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_1435 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="3022-3022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_1436 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3006-3006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_3113 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonReader.cs"];
m3_4174 [label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="9757-9757", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonReader.cs"];
m3_4175 [label="Constructor = ''NonPublic''", span="9759-9759", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonReader.cs"];
m3_4176 [label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="9757-9757", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonReader.cs"];
m3_972 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="320-320", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonReader.cs"];
m3_3489 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7916-7916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonReader.cs"];
m3_719 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonReader.cs"];
m3_3612 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="JsonReader.cs"];
m3_270 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", file="JsonReader.cs"];
m3_3920 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9085-9085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonReader.cs"];
m3_3921 [label="throw new InvalidCastException();", span="9087-9087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonReader.cs"];
m3_3922 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9085-9085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonReader.cs"];
m3_1518 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonReader.cs"];
m3_2299 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonReader.cs"];
m3_815 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="948-948", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonReader.cs"];
m3_2169 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonReader.cs"];
m3_2362 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="5340-5340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonReader.cs"];
m3_3441 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7794-7794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonReader.cs"];
m3_3442 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7796-7800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonReader.cs"];
m3_3443 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7802-7805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonReader.cs"];
m3_3444 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7807-7810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonReader.cs"];
m3_3445 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7812-7812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonReader.cs"];
m3_3446 [label="Assert.AreEqual(2, dic2.Count)", span="7814-7814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonReader.cs"];
m3_3447 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7815-7815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonReader.cs"];
m3_3448 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7816-7816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonReader.cs"];
m3_3449 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7794-7794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonReader.cs"];
m3_839 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1748-1748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonReader.cs"];
m3_663 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1451-1451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonReader.cs"];
m3_664 [label="_stringValue = stringValue", span="1453-1453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonReader.cs"];
m3_665 [label="_intValue = intValue", span="1454-1454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonReader.cs"];
m3_666 [label="_person1 = p1", span="1455-1455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonReader.cs"];
m3_667 [label="_person2 = p2", span="1456-1456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonReader.cs"];
m3_668 [label="_person3 = p3", span="1457-1457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonReader.cs"];
m3_669 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1451-1451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonReader.cs"];
m3_1956 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4236-4236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonReader.cs"];
m3_1957 [label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="4238-4241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonReader.cs"];
m3_1958 [label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="4242-4245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonReader.cs"];
m3_1959 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4236-4236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonReader.cs"];
m3_833 [label="Entry System.Convert.ToInt32(string)", span="0-0", cluster="System.Convert.ToInt32(string)", file="JsonReader.cs"];
m3_3276 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonReader.cs"];
m3_2114 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4729-4729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonReader.cs"];
m3_2115 [label="return _innerDictionary.Remove(key);", span="4731-4731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonReader.cs"];
m3_2116 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4729-4729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonReader.cs"];
m3_2258 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5055-5055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2259 [label="AA myA = new AA(2)", span="5057-5057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2260 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="5058-5058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2261 [label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="5059-5065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2262 [label="BB myB = new BB(3, 4)", span="5067-5067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2263 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="5068-5068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2264 [label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="5069-5083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2265 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5055-5055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6410-6410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2814 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6412-6412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2815 [label="c1.Categories.Add(''one'')", span="6413-6413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2816 [label="c1.Categories.Add(''two'')", span="6414-6414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2817 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6416-6416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2820 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6426-6426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2821 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6427-6427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2818 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6417-6423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2819 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6425-6425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2822 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="6428-6428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2823 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="6429-6429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_2824 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6410-6410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonReader.cs"];
m3_1792 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3854-3854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonReader.cs"];
m3_1793 [label="string json = @''[]''", span="3856-3856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonReader.cs"];
m3_1794 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3858-3864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonReader.cs"];
m3_1795 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3854-3854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonReader.cs"];
m3_3305 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7507-7507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_3306 [label="return objectType == typeof(Color);", span="7509-7509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_3307 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7507-7507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_2845 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6492-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonReader.cs"];
m3_2846 [label="throw new NotImplementedException();", span="6494-6494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonReader.cs"];
m3_2847 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6492-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonReader.cs"];
m3_3454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7828-7828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonReader.cs"];
m3_3455 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7830-7830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonReader.cs"];
m3_3456 [label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7831-7831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonReader.cs"];
m3_3457 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7833-7833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonReader.cs"];
m3_3458 [label="Assert.AreEqual(0, objDeserialized.Age)", span="7834-7834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonReader.cs"];
m3_3459 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7828-7828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonReader.cs"];
m3_3789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8736-8736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3790 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8738-8742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3791 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8744-8748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3792 [label="john.Spouse = jane", span="8750-8750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3793 [label="jane.Spouse = john", span="8751-8751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3794 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8753-8757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3795 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8759-8766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3796 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="8768-8783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8736-8736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8787-8787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonReader.cs"];
m3_3799 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8789-8793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonReader.cs"];
m3_3800 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8795-8799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonReader.cs"];
m3_3801 [label="john.Spouse = jane", span="8801-8801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonReader.cs"];
m3_3802 [label="jane.Spouse = john", span="8802-8802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonReader.cs"];
m3_3803 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8804-8808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonReader.cs"];
m3_3804 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = null,\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8810-8817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonReader.cs"];
m3_3805 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="8819-8834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonReader.cs"];
m3_3806 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="8787-8787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonReader.cs"];
m3_4015 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9304-9304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonReader.cs"];
m3_4016 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9306-9306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonReader.cs"];
m3_4017 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9307-9307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonReader.cs"];
m3_4019 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9315-9318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonReader.cs"];
m3_4022 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9326-9326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonReader.cs"];
m3_4018 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9308-9313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonReader.cs"];
m3_4021 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9324-9324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonReader.cs"];
m3_4020 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9320-9322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonReader.cs"];
m3_4023 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9304-9304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonReader.cs"];
m3_1882 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonReader.cs"];
m3_175 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonReader.cs"];
m3_176 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                 () => JsonConvert.DeserializeObject<IList<object>>(''[1,''),\r\n                 ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="487-489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonReader.cs"];
m3_177 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="491-493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonReader.cs"];
m3_178 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 2.'')", span="495-497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonReader.cs"];
m3_179 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="499-501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonReader.cs"];
m3_180 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="503-505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonReader.cs"];
m3_181 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="507-509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonReader.cs"];
m3_182 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="511-513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonReader.cs"];
m3_183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonReader.cs"];
m3_2024 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4472-4472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonReader.cs"];
m3_2025 [label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4474-4475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonReader.cs"];
m3_2026 [label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4477-4484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonReader.cs"];
m3_2027 [label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4485-4488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonReader.cs"];
m3_2028 [label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4490-4490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonReader.cs"];
m3_2029 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4472-4472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonReader.cs"];
m3_1813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3884-3884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonReader.cs"];
m3_1814 [label="string json = @''{}''", span="3886-3886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonReader.cs"];
m3_1815 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3890-3890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonReader.cs"];
m3_1816 [label="Assert.Fail()", span="3891-3891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonReader.cs"];
m3_1817 [label=JsonSerializationException, span="3893-3893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonReader.cs"];
m3_1818 [label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3895-3897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonReader.cs"];
m3_1819 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3884-3884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonReader.cs"];
m3_1370 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonReader.cs"];
m3_768 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1626-1626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonReader.cs"];
m3_3591 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8189-8189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonReader.cs"];
m3_3592 [label="string json = @''[\r\n        900\r\n      ]''", span="8191-8193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonReader.cs"];
m3_3593 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="8195-8195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonReader.cs"];
m3_3594 [label="int i = l[0]", span="8197-8197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonReader.cs"];
m3_3595 [label="Assert.AreEqual(900, i)", span="8200-8200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonReader.cs"];
m3_3596 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8189-8189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonReader.cs"];
m3_271 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", file="JsonReader.cs"];
m3_146 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", span="404-404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", file="JsonReader.cs"];
m3_1089 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonReader.cs"];
m3_2312 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonReader.cs"];
m3_2313 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5221-5221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonReader.cs"];
m3_234 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonReader.cs"];
m3_235 [label="Name = name", span="580-580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonReader.cs"];
m3_236 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonReader.cs"];
m3_1333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2830-2830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_1334 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2832-2832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_1335 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2833-2833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_1336 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2834-2834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_1337 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2836-2836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_1338 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2837-2837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_1339 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2839-2839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_1340 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2841-2841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_1341 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2842-2842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_1342 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2830-2830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonReader.cs"];
m3_4159 [label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0", cluster="System.Text.Encoding.GetEncoding(string)", file="JsonReader.cs"];
m3_896 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonReader.cs"];
m3_2162 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonReader.cs"];
m3_957 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2092-2092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_958 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="2094-2094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_959 [label="executorObject.serverClassName = ''BanSubs''", span="2095-2095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_960 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="2096-2096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_961 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="2097-2097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_962 [label="string output = JsonConvert.SerializeObject(executorObject)", span="2099-2099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_964 [label="Assert.AreNotSame(executorObject, executorObject2)", span="2103-2103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_963 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="2101-2101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_965 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="2104-2104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_966 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="2105-2105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_967 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="2106-2106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_968 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="2107-2107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_969 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2092-2092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonReader.cs"];
m3_3935 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="8995-8995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonReader.cs"];
m3_2966 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6791-6791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonReader.cs"];
m3_2967 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="6793-6793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonReader.cs"];
m3_2968 [label="Uri uri = new Uri(input)", span="6794-6794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonReader.cs"];
m3_2969 [label="string json = JsonConvert.SerializeObject(uri)", span="6795-6795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonReader.cs"];
m3_2971 [label="Assert.AreEqual(uri, output)", span="6798-6798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonReader.cs"];
m3_2970 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6796-6796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonReader.cs"];
m3_2972 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6791-6791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonReader.cs"];
m3_1005 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonReader.cs"];
m3_3450 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7820-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonReader.cs"];
m3_3451 [label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7822-7822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonReader.cs"];
m3_3452 [label="Assert.AreEqual('''', s)", span="7823-7823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonReader.cs"];
m3_3453 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7820-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonReader.cs"];
m3_1696 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="321-321", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonReader.cs"];
m3_3914 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9075-9075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonReader.cs"];
m3_3915 [label="throw new InvalidCastException();", span="9077-9077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonReader.cs"];
m3_3916 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9075-9075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonReader.cs"];
m3_3872 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9004-9004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3873 [label="conversionType == typeof(object)", span="9006-9006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3875 [label="conversionType == typeof(int)", span="9010-9010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3877 [label="conversionType == typeof(long)", span="9014-9014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3879 [label="conversionType == typeof(string)", span="9018-9018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3874 [label="return this;", span="9008-9008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3876 [label="return (int)Value;", span="9012-9012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3878 [label="return (long)Value;", span="9016-9016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3880 [label="return Value.ToString(CultureInfo.InvariantCulture);", span="9020-9020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3881 [label="throw new InvalidCastException();", span="9022-9022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_3882 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9004-9004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonReader.cs"];
m3_2164 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonReader.cs"];
m3_2168 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonReader.cs"];
m3_2361 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="5334-5334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonReader.cs"];
m3_3290 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonReader.cs"];
m3_523 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1231-1231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_524 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1233-1233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_525 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1235-1235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_526 [label="settings.Binder = customBinder", span="1236-1236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_527 [label="Assert.AreEqual(customBinder, settings.Binder)", span="1237-1237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_528 [label="settings.CheckAdditionalContent = true", span="1239-1239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_529 [label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="1240-1240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_530 [label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1242-1242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_531 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="1243-1243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_532 [label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="1246-1246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_533 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="1247-1247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_535 [label="settings.ContractResolver = resolver", span="1251-1251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_536 [label="Assert.AreEqual(resolver, settings.ContractResolver)", span="1252-1252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_537 [label="settings.Converters.Add(new StringEnumConverter())", span="1254-1254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_538 [label="Assert.AreEqual(1, settings.Converters.Count)", span="1255-1255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_539 [label="settings.Culture = new CultureInfo(''en-nz'')", span="1257-1257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_540 [label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="1258-1258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_541 [label="settings.EqualityComparer = EqualityComparer<object>.Default", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_542 [label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="1261-1261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_543 [label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1263-1263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_544 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="1264-1264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_545 [label="settings.DateFormatString = ''yyyy''", span="1266-1266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_546 [label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="1267-1267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_547 [label="settings.DateParseHandling = DateParseHandling.None", span="1269-1269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_548 [label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="1270-1270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_549 [label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1272-1272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_550 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="1273-1273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_551 [label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1275-1275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_552 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="1276-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_553 [label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="1278-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_554 [label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="1279-1279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_555 [label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="1281-1281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_556 [label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="1282-1282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_557 [label="settings.Formatting = Formatting.Indented", span="1284-1284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_558 [label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="1285-1285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_559 [label="settings.MaxDepth = 9001", span="1287-1287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_560 [label="Assert.AreEqual(9001, settings.MaxDepth)", span="1288-1288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_561 [label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_562 [label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="1291-1291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_563 [label="settings.NullValueHandling = NullValueHandling.Ignore", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_564 [label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_565 [label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1296-1296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_566 [label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="1297-1297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_567 [label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1299-1299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_568 [label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="1300-1300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_569 [label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1302-1302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_570 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="1303-1303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_572 [label="settings.ReferenceResolver = referenceResolver", span="1307-1307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_573 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="1308-1308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_574 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_575 [label="settings.ReferenceResolverProvider = () => referenceResolver", span="1312-1312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_576 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1313-1313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_577 [label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1315-1315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_578 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="1316-1316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_580 [label="settings.TraceWriter = traceWriter", span="1319-1319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_581 [label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="1320-1320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_582 [label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1323-1323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_583 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="1324-1324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_584 [label="settings.TypeNameHandling = TypeNameHandling.All", span="1327-1327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_585 [label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_534 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1250-1250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_571 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1305-1305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_579 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1318-1318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_586 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1231-1231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonReader.cs"];
m3_1083 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonReader.cs"];
m3_1569 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3349-3349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1570 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3351-3351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1571 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3352-3352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1572 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3353-3353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1573 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3354-3354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1574 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3355-3355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1575 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3357-3357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1577 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3368-3368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1576 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3359-3366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1578 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3370-3374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1579 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3349-3349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_2676 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6011-6011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonReader.cs"];
m3_2677 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="6013-6019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonReader.cs"];
m3_2678 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6011-6011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonReader.cs"];
m3_1972 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4285-4285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonReader.cs"];
m3_1973 [label="_dict1.Add(item.Key, item)", span="4287-4287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonReader.cs"];
m3_1974 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4285-4285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonReader.cs"];
m3_1820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3902-3902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonReader.cs"];
m3_1821 [label="string json = @''[]''", span="3904-3904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonReader.cs"];
m3_1822 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'')", span="3906-3906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonReader.cs"];
m3_1823 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3902-3902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonReader.cs"];
m3_3570 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonReader.cs"];
m3_2173 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonReader.cs"];
m3_3997 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9252-9252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonReader.cs"];
m3_3998 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9254-9254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonReader.cs"];
m3_3999 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9255-9255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonReader.cs"];
m3_4001 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9263-9266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonReader.cs"];
m3_4004 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9274-9274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonReader.cs"];
m3_4000 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9256-9261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonReader.cs"];
m3_4003 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9272-9272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonReader.cs"];
m3_4002 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9268-9270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonReader.cs"];
m3_4005 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9252-9252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonReader.cs"];
m3_1012 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2256-2256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonReader.cs"];
m3_1013 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="2258-2267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonReader.cs"];
m3_1014 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="2269-2269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonReader.cs"];
m3_1015 [label="Assert.AreEqual(4, o.Children().Count())", span="2270-2270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonReader.cs"];
m3_1016 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="2272-2272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonReader.cs"];
m3_1017 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="2273-2273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonReader.cs"];
m3_1018 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="2274-2274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonReader.cs"];
m3_1019 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2256-2256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonReader.cs"];
m3_2054 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4598-4598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2055 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4600-4600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2056 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4601-4601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2057 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4602-4602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2058 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4603-4603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2061 [label="serializer.WriteObject(ms, c)", span="4609-4609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2059 [label="MemoryStream ms = new MemoryStream()", span="4605-4605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2060 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4606-4608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2062 [label="byte[] jsonBytes = ms.ToArray()", span="4611-4611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2063 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4612-4612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2064 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4598-4598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonReader.cs"];
m3_2744 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6148-6148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonReader.cs"];
m3_2745 [label="MultiIndexSuper e = new MultiIndexSuper()", span="6150-6150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonReader.cs"];
m3_2746 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6152-6152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonReader.cs"];
m3_2747 [label="Assert.AreEqual(@''{}'', json)", span="6154-6154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonReader.cs"];
m3_2748 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6148-6148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonReader.cs"];
m3_2764 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6228-6228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonReader.cs"];
m3_2765 [label="string json = @''{A:''''Test''''}''", span="6230-6230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonReader.cs"];
m3_2766 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="6232-6232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonReader.cs"];
m3_2767 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="6233-6233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonReader.cs"];
m3_2768 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="6234-6234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonReader.cs"];
m3_2769 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6228-6228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonReader.cs"];
m3_1393 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonReader.cs"];
m3_2202 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonReader.cs"];
m3_281 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="701-701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonReader.cs"];
m3_516 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonReader.cs"];
m3_697 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonReader.cs"];
m3_1096 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2402-2402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonReader.cs"];
m3_1097 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2404-2404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonReader.cs"];
m3_1098 [label="values.Add(-5, 6)", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonReader.cs"];
m3_1099 [label="values.Add(int.MinValue, int.MaxValue)", span="2406-2406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonReader.cs"];
m3_1100 [label="string json = JsonConvert.SerializeObject(values)", span="2408-2408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonReader.cs"];
m3_1103 [label="CollectionAssert.AreEqual(values, newValues)", span="2414-2414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonReader.cs"];
m3_1101 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2410-2410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonReader.cs"];
m3_1102 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2412-2412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonReader.cs"];
m3_1104 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2402-2402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonReader.cs"];
m3_2474 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5548-5548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonReader.cs"];
m3_2475 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5550-5554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonReader.cs"];
m3_2476 [label="Assert.AreEqual(3, d.Length)", span="5556-5556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonReader.cs"];
m3_2477 [label="Assert.AreEqual(2.4, d[0])", span="5557-5557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonReader.cs"];
m3_2478 [label="Assert.AreEqual(4.3, d[1])", span="5558-5558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonReader.cs"];
m3_2479 [label="Assert.AreEqual(null, d[2])", span="5559-5559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonReader.cs"];
m3_2480 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5548-5548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonReader.cs"];
m3_1485 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonReader.cs"];
m3_2523 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5665-5665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonReader.cs"];
m3_2524 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5667-5670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonReader.cs"];
m3_2525 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5672-5672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonReader.cs"];
m3_2526 [label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5674-5676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonReader.cs"];
m3_2527 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5678-5678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonReader.cs"];
m3_2528 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5680-5680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonReader.cs"];
m3_2529 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5665-5665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonReader.cs"];
m3_2370 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JsonReader.cs"];
m3_1462 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3075-3075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1463 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="3077-3077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1464 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="3079-3079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1472 [label="Assert.AreEqual(json, after)", span="3090-3090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1465 [label="Assert.AreEqual(''Before!'', aa.Before)", span="3081-3081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1466 [label="Assert.AreEqual(''After!'', aa.After)", span="3082-3082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1467 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="3083-3083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1468 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="3084-3084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1469 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="3085-3085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1470 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="3086-3086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1471 [label="string after = JsonConvert.SerializeObject(aa)", span="3088-3088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1473 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3075-3075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonReader.cs"];
m3_1682 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3644-3644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonReader.cs"];
m3_1683 [label="Uri uri = new Uri(''http://codeplex.com'')", span="3646-3646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonReader.cs"];
m3_1684 [label="string json = JsonConvert.SerializeObject(uri)", span="3647-3647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonReader.cs"];
m3_1685 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3649-3649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonReader.cs"];
m3_1687 [label="Assert.AreEqual(uri, newUri)", span="3652-3652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonReader.cs"];
m3_1686 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3651-3651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonReader.cs"];
m3_1688 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3644-3644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonReader.cs"];
m3_3554 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8074-8074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_3555 [label="return true;", span="8076-8076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_3556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8074-8074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_4091 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9493-9493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonReader.cs"];
m3_4092 [label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="9495-9498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonReader.cs"];
m3_4093 [label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="9500-9500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonReader.cs"];
m3_4094 [label="Assert.AreEqual(''base'', d.BaseProperty)", span="9502-9502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonReader.cs"];
m3_4095 [label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="9503-9503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonReader.cs"];
m3_4096 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9493-9493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonReader.cs"];
m3_2632 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5870-5870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonReader.cs"];
m3_1160 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2510-2510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonReader.cs"];
m3_1161 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2512-2512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonReader.cs"];
m3_1162 [label="JsonSerializer s = new JsonSerializer()", span="2514-2514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonReader.cs"];
m3_1164 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2517-2517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonReader.cs"];
m3_1163 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2515-2515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonReader.cs"];
m3_1165 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2519-2519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonReader.cs"];
m3_1166 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="2521-2521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonReader.cs"];
m3_1167 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2510-2510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonReader.cs"];
m3_1422 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonReader.cs"];
m3_934 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonReader.cs"];
m3_943 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2068-2068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_944 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="2070-2070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_945 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="2071-2071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_946 [label="testDictionary[''date''] = dateValue", span="2072-2072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_955 [label="Assert.AreEqual(dateValue, deserializedDate)", span="2088-2088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_947 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="2074-2074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_950 [label="serializer.WriteObject(ms, testDictionary)", span="2079-2079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_948 [label="MemoryStream ms = new MemoryStream()", span="2077-2077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_953 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="2085-2085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_949 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="2078-2078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_951 [label="byte[] data = ms.ToArray()", span="2081-2081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_952 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="2082-2082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_954 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="2086-2086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_956 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2068-2068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonReader.cs"];
m3_2774 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="6237-6237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonReader.cs"];
m3_3372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7624-7624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3373 [label="IList<string> errors = new List<string>()", span="7626-7626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3374 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7628-7632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3377 [label="Assert.AreEqual(3, errors.Count)", span="7645-7645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3378 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7646-7646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3379 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7647-7647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3380 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7648-7648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3375 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7634-7638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3376 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7640-7643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3381 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7624-7624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonReader.cs"];
m3_3761 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonReader.cs"];
m3_2494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5599-5599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2495 [label="JsonSerializer serializer1 = new JsonSerializer()", span="5601-5601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2496 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5602-5602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2497 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5603-5603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2500 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5609-5609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2498 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5605-5605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2499 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5607-5607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2501 [label="Assert.AreEqual(2, z.Length)", span="5610-5610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2502 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5611-5611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2503 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5612-5612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2504 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5599-5599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonReader.cs"];
m3_2376 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="JsonReader.cs"];
m3_2088 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4691-4691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonReader.cs"];
m3_2089 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4693-4693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonReader.cs"];
m3_2090 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4691-4691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonReader.cs"];
m3_2490 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonReader.cs"];
m3_2200 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonReader.cs"];
m3_1022 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2278-2278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1023 [label="JsonPropertyClass test = new JsonPropertyClass()", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1024 [label="test.Pie = ''Delicious''", span="2281-2281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1025 [label="test.SweetCakesCount = int.MaxValue", span="2282-2282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1026 [label="string jsonText = JsonConvert.SerializeObject(test)", span="2284-2284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1029 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1030 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="2291-2291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1027 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="2286-2286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1028 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="2288-2288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1031 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2278-2278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_3428 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3429 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7768-7772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3430 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", span="7774-7777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3431 [label="JObject o = JObject.Parse(json)", span="7779-7779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3434 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", span="7783-7786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3432 [label="Assert.IsFalse(o.Properties().ElementAt(0).Name.Contains(''Z''))", span="7780-7780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3433 [label="Assert.IsFalse(o.Properties().ElementAt(1).Name.Contains(''Z''))", span="7781-7781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3435 [label="Assert.AreEqual(2, dic2.Count)", span="7788-7788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3436 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7789-7789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3437 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7790-7790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_3438 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonReader.cs"];
m3_253 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="628-628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonReader.cs"];
m3_254 [label="type == typeof(Version)", span="630-630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonReader.cs"];
m3_256 [label="return base.ResolveContract(type);", span="635-635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonReader.cs"];
m3_255 [label="throw new Exception(''Error!'');", span="632-632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonReader.cs"];
m3_257 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="628-628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonReader.cs"];
m3_2250 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5041-5041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonReader.cs"];
m3_2251 [label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="5043-5045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonReader.cs"];
m3_2252 [label="Assert.AreEqual(2, kvPairs.Count)", span="5047-5047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonReader.cs"];
m3_2253 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="5048-5048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonReader.cs"];
m3_2254 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="5049-5049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonReader.cs"];
m3_2255 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="5050-5050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonReader.cs"];
m3_2256 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="5051-5051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonReader.cs"];
m3_2257 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5041-5041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonReader.cs"];
m3_4069 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9459-9459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4070 [label="throw new NotImplementedException();", span="9461-9461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4071 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9459-9459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4181 [label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="9776-9776", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonReader.cs"];
m3_4182 [label="Value = value", span="9778-9778", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonReader.cs"];
m3_4183 [label="Constructor = ''Public Paramatized 1''", span="9779-9779", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonReader.cs"];
m3_4184 [label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="9776-9776", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonReader.cs"];
m3_2611 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonReader.cs"];
m3_2612 [label="string json = ''{'Value':123456789876543.21}''", span="5848-5848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonReader.cs"];
m3_2613 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5849-5849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonReader.cs"];
m3_2614 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5850-5850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonReader.cs"];
m3_2616 [label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5854-5854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonReader.cs"];
m3_2615 [label="JsonSerializer serializer = new JsonSerializer()", span="5852-5852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonReader.cs"];
m3_2617 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5855-5855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonReader.cs"];
m3_2618 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonReader.cs"];
m3_1090 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonReader.cs"];
m3_1379 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="910-910", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonReader.cs"];
m3_380 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonReader.cs"];
m3_2871 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6562-6562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonReader.cs"];
m3_2872 [label="_privateString = privateString", span="6564-6564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonReader.cs"];
m3_2873 [label="_readonlyString = readonlyString", span="6565-6565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonReader.cs"];
m3_2874 [label="_internalString = internalString", span="6566-6566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonReader.cs"];
m3_2875 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6562-6562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonReader.cs"];
m3_398 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonReader.cs"];
m3_2544 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5711-5711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonReader.cs"];
m3_2545 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5713-5713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonReader.cs"];
m3_2546 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5714-5714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonReader.cs"];
m3_2547 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5711-5711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonReader.cs"];
m3_4131 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonReader.cs"];
m3_2068 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4628-4628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonReader.cs"];
m3_2069 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4628-4628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonReader.cs"];
m3_2174 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4814-4814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2175 [label="info.AddValue(''stringValue'', _stringValue)", span="4816-4816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2176 [label="info.AddValue(''intValue'', _intValue)", span="4817-4817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2177 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4818-4818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2178 [label="info.AddValue(''personValue'', _personValue)", span="4819-4819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2179 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4820-4820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2180 [label="info.AddValue(''nullableInt'', null)", span="4821-4821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2181 [label="info.AddValue(''booleanValue'', _booleanValue)", span="4823-4823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2182 [label="info.AddValue(''byteValue'', _byteValue)", span="4824-4824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2183 [label="info.AddValue(''charValue'', _charValue)", span="4825-4825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2184 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4826-4826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2185 [label="info.AddValue(''decimalValue'', _decimalValue)", span="4827-4827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2186 [label="info.AddValue(''shortValue'', _shortValue)", span="4828-4828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2187 [label="info.AddValue(''longValue'', _longValue)", span="4829-4829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2188 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4830-4830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2189 [label="info.AddValue(''floatValue'', _floatValue)", span="4831-4831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2190 [label="info.AddValue(''ushortValue'', _ushortValue)", span="4832-4832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2191 [label="info.AddValue(''uintValue'', _uintValue)", span="4833-4833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2192 [label="info.AddValue(''ulongValue'', _ulongValue)", span="4834-4834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2193 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4814-4814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_871 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1937-1937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_872 [label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1939-1945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_873 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1947-1947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_874 [label="baseWith.Virtual = ''Virtual2!''", span="1948-1948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_875 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1949-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_876 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1950-1950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_877 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1952-1952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_878 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1954-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_879 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1937-1937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_4072 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9464-9464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4073 [label="throw new NotImplementedException();", span="9466-9466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4074 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9464-9464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2803 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6381-6381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonReader.cs"];
m3_2804 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="6383-6387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonReader.cs"];
m3_2805 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6389-6389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonReader.cs"];
m3_2806 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="6391-6394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonReader.cs"];
m3_2807 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6381-6381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonReader.cs"];
m3_350 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonReader.cs"];
m3_814 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonReader.cs"];
m3_3304 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="JsonReader.cs"];
m3_4130 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="526-526", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m3_124 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="368-368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonReader.cs"];
m3_125 [label="Binding_DisallowNull o = JsonConvert.DeserializeObject<Binding_DisallowNull>(''{}'')", span="370-370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonReader.cs"];
m3_126 [label="Assert.IsNull(o.RequiredProperty)", span="371-371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonReader.cs"];
m3_127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="368-368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonReader.cs"];
m3_1129 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonReader.cs"];
m3_591 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1332-1332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_592 [label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_593 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1336-1336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_594 [label="serializerProxy.Binder = customBinder", span="1337-1337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_595 [label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1338-1338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_596 [label="serializerProxy.CheckAdditionalContent = true", span="1340-1340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_597 [label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="1341-1341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_598 [label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1343-1343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_599 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="1344-1344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_600 [label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="1347-1347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_601 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="1348-1348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_603 [label="serializerProxy.ContractResolver = resolver", span="1352-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_604 [label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="1353-1353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_605 [label="serializerProxy.Converters.Add(new StringEnumConverter())", span="1355-1355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_606 [label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_607 [label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="1358-1358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_608 [label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="1359-1359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_609 [label="serializerProxy.EqualityComparer = EqualityComparer<object>.Default", span="1361-1361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_610 [label="Assert.AreEqual(EqualityComparer<object>.Default, serializerProxy.EqualityComparer)", span="1362-1362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_611 [label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_612 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="1365-1365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_613 [label="serializerProxy.DateFormatString = ''yyyy''", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_614 [label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="1368-1368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_615 [label="serializerProxy.DateParseHandling = DateParseHandling.None", span="1370-1370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_616 [label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="1371-1371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_617 [label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1373-1373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_618 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="1374-1374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_619 [label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1376-1376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_620 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="1377-1377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_621 [label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="1379-1379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_622 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="1380-1380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_623 [label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="1382-1382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_624 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="1383-1383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_625 [label="serializerProxy.Formatting = Formatting.Indented", span="1385-1385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_626 [label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="1386-1386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_627 [label="serializerProxy.MaxDepth = 9001", span="1388-1388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_628 [label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="1389-1389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_629 [label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="1391-1391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_630 [label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="1392-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_631 [label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="1394-1394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_632 [label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="1395-1395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_633 [label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_634 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="1398-1398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_635 [label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1400-1400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_636 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="1401-1401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_637 [label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1403-1403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_638 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="1404-1404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_640 [label="serializerProxy.ReferenceResolver = referenceResolver", span="1407-1407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_641 [label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="1408-1408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_642 [label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1410-1410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_643 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_645 [label="serializerProxy.TraceWriter = traceWriter", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_646 [label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="1415-1415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_647 [label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1418-1418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_648 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="1419-1419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_649 [label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="1422-1422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_650 [label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="1423-1423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_602 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1351-1351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_639 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1406-1406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_644 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1332-1332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonReader.cs"];
m3_1185 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_1186 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2548-2548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_1187 [label="string expected = null", span="2550-2550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_1189 [label="StringAssert.AreEqual(expected, json)", span="2586-2586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_1190 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2588-2588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_1188 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2552-2567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_1191 [label="Assert.AreEqual(''string'', c.String)", span="2589-2589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_1192 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="2590-2590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_1193 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2592-2592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_1194 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonReader.cs"];
m3_3382 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonReader.cs"];
m3_1118 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="770-770", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonReader.cs"];
m3_1474 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3094-3094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonReader.cs"];
m3_1475 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="3096-3131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonReader.cs"];
m3_1476 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="3133-3133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonReader.cs"];
m3_1477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3094-3094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonReader.cs"];
m3_3440 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonReader.cs"];
m3_1641 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m3_1642 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3541-3546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m3_1643 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3548-3550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m3_1644 [label="Assert.AreEqual(''Name!'', c.Name)", span="3552-3552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m3_1645 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="3553-3553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m3_1646 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3554-3554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m3_1647 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonReader.cs"];
m3_2100 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4706-4706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonReader.cs"];
m3_2101 [label="return _innerDictionary.GetEnumerator();", span="4708-4708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonReader.cs"];
m3_2102 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4706-4706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonReader.cs"];
m3_3859 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="125-125", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonReader.cs"];
m3_2118 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4734-4734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonReader.cs"];
m3_2119 [label="return _innerDictionary.TryGetValue(key, out value);", span="4736-4736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonReader.cs"];
m3_2120 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4734-4734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonReader.cs"];
m3_4075 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9469-9469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_4076 [label="throw new NotImplementedException();", span="9471-9471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_4077 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9469-9469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_3499 [label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonReader.cs"];
m3_991 [label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonReader.cs"];
m3_1070 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonReader.cs"];
m3_3566 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8106-8106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonReader.cs"];
m3_3567 [label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="8108-8112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonReader.cs"];
m3_3568 [label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="8114-8117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonReader.cs"];
m3_3569 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8106-8106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonReader.cs"];
m3_4140 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9622-9622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4141 [label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="9624-9624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4142 [label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="9626-9631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4143 [label="return attachment;", span="9632-9632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4144 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9622-9622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_112 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="356-356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonReader.cs"];
m3_113 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a value but got null. Path '', line 1, position 21.'')", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonReader.cs"];
m3_114 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="356-356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonReader.cs"];
m3_2142 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4791-4791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2143 [label="_stringValue = info.GetString(''stringValue'')", span="4793-4793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2144 [label="_intValue = info.GetInt32(''intValue'')", span="4794-4794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2145 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4795-4795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2146 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4796-4796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2147 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4797-4797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2148 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4798-4798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2149 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4800-4800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2150 [label="_byteValue = info.GetByte(''byteValue'')", span="4801-4801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2151 [label="_charValue = info.GetChar(''charValue'')", span="4802-4802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2152 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4803-4803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2153 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4804-4804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2154 [label="_shortValue = info.GetInt16(''shortValue'')", span="4805-4805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2155 [label="_longValue = info.GetInt64(''longValue'')", span="4806-4806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2156 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4807-4807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2157 [label="_floatValue = info.GetSingle(''floatValue'')", span="4808-4808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2158 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4809-4809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2159 [label="_uintValue = info.GetUInt32(''uintValue'')", span="4810-4810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2160 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4811-4811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2161 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4791-4791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2700 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6064-6064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonReader.cs"];
m3_2701 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="6066-6066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonReader.cs"];
m3_2702 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="6067-6067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonReader.cs"];
m3_2703 [label="Assert.AreEqual(''value!'', c.Value)", span="6068-6068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonReader.cs"];
m3_2704 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6064-6064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonReader.cs"];
m3_1909 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4074-4074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonReader.cs"];
m3_1910 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="4076-4076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonReader.cs"];
m3_1911 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="4077-4077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonReader.cs"];
m3_1912 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="4078-4078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonReader.cs"];
m3_1913 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4080-4080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonReader.cs"];
m3_1914 [label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="4081-4084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonReader.cs"];
m3_1915 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4074-4074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonReader.cs"];
m3_682 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonReader.cs"];
m3_1140 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2482-2482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_1141 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2484-2484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_1142 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2485-2485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_1143 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2486-2486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_1144 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2488-2488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_1145 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2489-2489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_1146 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2490-2490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_1147 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2491-2491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_1148 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2492-2492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_1149 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2482-2482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonReader.cs"];
m3_3483 [label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonReader.cs"];
m3_129 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="375-375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonReader.cs"];
m3_130 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}''); }, ''Required property 'Bars' expects a value but got null. Path '', line 1, position 9.'')", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonReader.cs"];
m3_131 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="375-375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonReader.cs"];
m3_408 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonReader.cs"];
m3_454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1136-1136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_455 [label="JsonSerializer serializer = new JsonSerializer()", span="1138-1138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_456 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1140-1140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_457 [label="serializer.Binder = customBinder", span="1141-1141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_458 [label="Assert.AreEqual(customBinder, serializer.Binder)", span="1142-1142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_459 [label="serializer.CheckAdditionalContent = true", span="1144-1144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_460 [label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="1145-1145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_461 [label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_462 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="1148-1148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_463 [label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="1151-1151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_464 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="1152-1152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_466 [label="serializer.ContractResolver = resolver", span="1156-1156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_467 [label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="1157-1157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_468 [label="serializer.Converters.Add(new StringEnumConverter())", span="1159-1159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_469 [label="Assert.AreEqual(1, serializer.Converters.Count)", span="1160-1160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_470 [label="serializer.Culture = new CultureInfo(''en-nz'')", span="1162-1162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_471 [label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="1163-1163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_472 [label="serializer.EqualityComparer = EqualityComparer<object>.Default", span="1165-1165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_473 [label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="1166-1166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_474 [label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1168-1168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_475 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="1169-1169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_476 [label="serializer.DateFormatString = ''yyyy''", span="1171-1171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_477 [label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="1172-1172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_478 [label="serializer.DateParseHandling = DateParseHandling.None", span="1174-1174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_479 [label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="1175-1175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_480 [label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1177-1177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_481 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="1178-1178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_482 [label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1180-1180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_483 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="1181-1181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_484 [label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="1183-1183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_485 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="1184-1184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_486 [label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="1186-1186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_487 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="1187-1187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_488 [label="serializer.Formatting = Formatting.Indented", span="1189-1189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_489 [label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="1190-1190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_490 [label="serializer.MaxDepth = 9001", span="1192-1192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_491 [label="Assert.AreEqual(9001, serializer.MaxDepth)", span="1193-1193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_492 [label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="1195-1195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_493 [label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="1196-1196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_494 [label="serializer.NullValueHandling = NullValueHandling.Ignore", span="1198-1198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_495 [label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="1199-1199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_496 [label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1201-1201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_497 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="1202-1202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_498 [label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1204-1204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_499 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="1205-1205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_500 [label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1207-1207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_501 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="1208-1208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_503 [label="serializer.ReferenceResolver = referenceResolver", span="1211-1211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_504 [label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="1212-1212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_505 [label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1214-1214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_506 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="1215-1215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_508 [label="serializer.TraceWriter = traceWriter", span="1218-1218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_509 [label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="1219-1219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_510 [label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1222-1222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_511 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="1223-1223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_512 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="1226-1226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_513 [label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="1227-1227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_465 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1155-1155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_502 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1210-1210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_507 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1217-1217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_514 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1136-1136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonReader.cs"];
m3_2797 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6351-6351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonReader.cs"];
m3_2798 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6353-6357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonReader.cs"];
m3_2799 [label="string result = JsonConvert.SerializeObject(cc)", span="6359-6359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonReader.cs"];
m3_2800 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6360-6360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonReader.cs"];
m3_2801 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6351-6351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonReader.cs"];
m3_2371 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="900-900", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonReader.cs"];
m3_443 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="718-718", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonReader.cs"];
m3_1056 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonReader.cs"];
m3_94 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="326-326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_95 [label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="328-328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_96 [label="string json = JsonConvert.SerializeObject(foo1)", span="329-329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_99 [label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_100 [label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="335-335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_101 [label="Assert.AreEqual(foo1.Bars[1], foo2.Bars[1])", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_102 [label="Assert.AreEqual(foo1.Bars[2], foo2.Bars[2])", span="337-337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_97 [label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="331-331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_98 [label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="333-333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_103 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="326-326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonReader.cs"];
m3_3911 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9070-9070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonReader.cs"];
m3_3912 [label="throw new InvalidCastException();", span="9072-9072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonReader.cs"];
m3_3913 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9070-9070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonReader.cs"];
m3_1859 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3978-3978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonReader.cs"];
m3_1860 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="3980-3991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonReader.cs"];
m3_1861 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3978-3978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonReader.cs"];
m3_2352 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonReader.cs"];
m3_4167 [label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="9715-9715", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonReader.cs"];
m3_4168 [label="Constructor = ''NonPublic''", span="9717-9717", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonReader.cs"];
m3_4169 [label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="9715-9715", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonReader.cs"];
m3_389 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonReader.cs"];
m3_3917 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9080-9080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonReader.cs"];
m3_3918 [label="throw new InvalidCastException();", span="9082-9082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonReader.cs"];
m3_3919 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9080-9080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonReader.cs"];
m3_360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="930-930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonReader.cs"];
m3_1119 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2444-2444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_1120 [label="DateTime d = new DateTime(2000, 1, 1)", span="2446-2446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_1121 [label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2448-2452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_1127 [label="Assert.AreEqual(d, anonymous.DateValue)", span="2464-2464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_1122 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2454-2454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_1124 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2460-2460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_1126 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2463-2463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_1123 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2455-2458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_1125 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_1128 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2444-2444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonReader.cs"];
m3_2092 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4696-4696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonReader.cs"];
m3_2093 [label="return _innerDictionary.ContainsKey(key);", span="4698-4698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonReader.cs"];
m3_2094 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4696-4696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonReader.cs"];
m3_2734 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonReader.cs"];
m3_2735 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="6136-6136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonReader.cs"];
m3_2736 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonReader.cs"];
m3_3869 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8999-8999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonReader.cs"];
m3_3870 [label="return TypeCode.Object;", span="9001-9001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonReader.cs"];
m3_3871 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8999-8999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonReader.cs"];
m3_3034 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonReader.cs"];
m3_2298 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonReader.cs"];
m3_1630 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3513-3513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonReader.cs"];
m3_1631 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3515-3515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonReader.cs"];
m3_1632 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3513-3513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonReader.cs"];
m3_1883 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4023-4023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1884 [label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="4025-4031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1885 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="4033-4033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1888 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="4043-4043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1886 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="4035-4040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1887 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="4042-4042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1889 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="4044-4044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1890 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="4045-4045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1891 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="4046-4046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1892 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4023-4023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonReader.cs"];
m3_1757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3798-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonReader.cs"];
m3_1758 [label="string json = @''[]''", span="3800-3800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonReader.cs"];
m3_1759 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3802-3804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonReader.cs"];
m3_1760 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3798-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonReader.cs"];
m3_670 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1460-1460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_671 [label="_serializationInfo = info", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_672 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1460-1460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2750 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonReader.cs"];
m3_2751 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="6186-6195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonReader.cs"];
m3_2752 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="6197-6197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonReader.cs"];
m3_2753 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="6199-6199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonReader.cs"];
m3_2754 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="6200-6200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonReader.cs"];
m3_2755 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="6201-6201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonReader.cs"];
m3_2756 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonReader.cs"];
m3_2598 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5825-5825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonReader.cs"];
m3_2599 [label="string json = ''{Amount:123456789876543.21}''", span="5827-5827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonReader.cs"];
m3_2600 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5828-5828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonReader.cs"];
m3_2601 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5829-5829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonReader.cs"];
m3_2603 [label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5833-5833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonReader.cs"];
m3_2602 [label="JsonSerializer serializer = new JsonSerializer()", span="5831-5831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonReader.cs"];
m3_2604 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5834-5834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonReader.cs"];
m3_2605 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5825-5825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonReader.cs"];
m3_3186 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7273-7273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3187 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="7275-7275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3188 [label="Assert.IsNull(v)", span="7276-7276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3189 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="7278-7278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3190 [label="Assert.IsNull(v)", span="7279-7279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3191 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="7281-7281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3192 [label="Assert.IsNull(v)", span="7282-7282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3193 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="7284-7284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3194 [label="Assert.IsNull(v)", span="7285-7285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3195 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="7287-7287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3196 [label="Assert.IsNull(v)", span="7288-7288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3197 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="7290-7290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3198 [label="Assert.IsNull(v)", span="7291-7291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3199 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="7293-7293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3200 [label="Assert.IsNull(v)", span="7294-7294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_3201 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7273-7273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonReader.cs"];
m3_2359 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="5322-5322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonReader.cs"];
m3_2641 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="5917-5917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonReader.cs"];
m3_2642 [label="IDontWork = dontWork", span="5919-5919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonReader.cs"];
m3_2643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="5917-5917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonReader.cs"];
m3_366 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="949-949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonReader.cs"];
m3_1344 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2846-2846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonReader.cs"];
m3_1345 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2848-2852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonReader.cs"];
m3_1346 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2846-2846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonReader.cs"];
m3_2879 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6583-6583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonReader.cs"];
m3_2880 [label="return _readonlyString;", span="6585-6585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonReader.cs"];
m3_2881 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6583-6583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonReader.cs"];
m3_4114 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9583-9583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_4115 [label="return objectType == typeof(System.Net.Mail.MailAddress);", span="9585-9585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_4116 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9583-9583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1728-1728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonReader.cs"];
m3_829 [label="var strings = dictionaryKey.Split(' ')", span="1730-1730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonReader.cs"];
m3_830 [label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1731-1731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonReader.cs"];
m3_831 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1728-1728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonReader.cs"];
m3_1955 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonReader.cs"];
m3_1372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2891-2891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonReader.cs"];
m3_1373 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2893-2893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonReader.cs"];
m3_1374 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2895-2895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonReader.cs"];
m3_1375 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2897-2897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonReader.cs"];
m3_1376 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2898-2898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonReader.cs"];
m3_1377 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2899-2899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonReader.cs"];
m3_1378 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2891-2891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonReader.cs"];
m3_695 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonReader.cs"];
m3_2363 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="5367-5367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonReader.cs"];
m3_2761 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6218-6218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonReader.cs"];
m3_2762 [label="B = 2", span="6220-6220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonReader.cs"];
m3_2763 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6218-6218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonReader.cs"];
m3_907 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1991-1991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonReader.cs"];
m3_908 [label="Store store = new Store()", span="1993-1993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonReader.cs"];
m3_909 [label="string jsonText = JsonConvert.SerializeObject(store)", span="1995-1995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonReader.cs"];
m3_911 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="1999-1999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonReader.cs"];
m3_912 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="2000-2000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonReader.cs"];
m3_910 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="1997-1997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonReader.cs"];
m3_913 [label="Console.WriteLine(jsonText)", span="2002-2002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonReader.cs"];
m3_914 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1991-1991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonReader.cs"];
m3_1184 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonReader.cs"];
m3_1517 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4088-4088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1917 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="4090-4090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1918 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="4091-4091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1919 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="4092-4092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1920 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4094-4094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1921 [label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="4096-4099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1922 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4088-4088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_2567 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5772-5772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2568 [label="dynamic expando = new ExpandoObject()", span="5774-5774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2569 [label="expando.Int = 1", span="5775-5775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2570 [label="expando.Decimal = 99.9d", span="5776-5776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2571 [label="expando.Complex = new ExpandoObject()", span="5777-5777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2572 [label="expando.Complex.String = ''I am a string''", span="5778-5778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2573 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5779-5779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2574 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5781-5781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2578 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5794-5794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2580 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5797-5797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2584 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5803-5803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2586 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5806-5806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2575 [label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5782-5789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2576 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5791-5791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2577 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5793-5793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2579 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5796-5796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2581 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5799-5799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2582 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5800-5800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2583 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5802-5802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2585 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5805-5805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_2587 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5772-5772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonReader.cs"];
m3_849 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1806-1806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonReader.cs"];
m3_3128 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7150-7150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonReader.cs"];
m3_3129 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="7152-7158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonReader.cs"];
m3_3130 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7150-7150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonReader.cs"];
m3_3773 [label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonReader.cs"];
m3_224 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="539-539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonReader.cs"];
m3_1999 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4380-4380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonReader.cs"];
m3_2000 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="4382-4382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonReader.cs"];
m3_2001 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="4384-4384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonReader.cs"];
m3_2002 [label="Assert.AreEqual(3, dic.Count)", span="4386-4386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonReader.cs"];
m3_2003 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonReader.cs"];
m3_2004 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="4388-4388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonReader.cs"];
m3_2005 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="4389-4389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonReader.cs"];
m3_2006 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4380-4380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonReader.cs"];
m3_3023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6830-6830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonReader.cs"];
m3_681 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonReader.cs"];
m3_1750 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3787-3787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonReader.cs"];
m3_1751 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3789-3789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonReader.cs"];
m3_1752 [label="Assert.AreEqual(3, l.Count)", span="3790-3790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonReader.cs"];
m3_1753 [label="Assert.AreEqual(3.3m, l[0])", span="3792-3792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonReader.cs"];
m3_1754 [label="Assert.AreEqual(null, l[1])", span="3793-3793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonReader.cs"];
m3_1755 [label="Assert.AreEqual(1.1m, l[2])", span="3794-3794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonReader.cs"];
m3_1756 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3787-3787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonReader.cs"];
m3_2876 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6569-6569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonReader.cs"];
m3_2877 [label="_readonlyString = ''default!''", span="6571-6571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonReader.cs"];
m3_2878 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6569-6569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonReader.cs"];
m3_2789 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JsonReader.cs"];
m3_75 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_76 [label="IList<bool?> l = JsonConvert.DeserializeObject<IList<bool?>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  '',\r\n  null\r\n]'')", span="288-304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_77 [label="int i = 0", span="306-306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_78 [label="Assert.AreEqual(true, l[i++])", span="307-307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_79 [label="Assert.AreEqual(false, l[i++])", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_80 [label="Assert.AreEqual(true, l[i++])", span="309-309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_81 [label="Assert.AreEqual(false, l[i++])", span="310-310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_82 [label="Assert.AreEqual(true, l[i++])", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_83 [label="Assert.AreEqual(true, l[i++])", span="312-312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_84 [label="Assert.AreEqual(true, l[i++])", span="313-313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_85 [label="Assert.AreEqual(true, l[i++])", span="314-314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_86 [label="Assert.AreEqual(true, l[i++])", span="315-315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_87 [label="Assert.AreEqual(true, l[i++])", span="316-316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_88 [label="Assert.AreEqual(true, l[i++])", span="317-317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_89 [label="Assert.AreEqual(false, l[i++])", span="318-318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_90 [label="Assert.AreEqual(false, l[i++])", span="319-319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_91 [label="Assert.AreEqual(null, l[i++])", span="320-320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_92 [label="Assert.AreEqual(null, l[i++])", span="321-321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_93 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="286-286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonReader.cs"];
m3_2842 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6487-6487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonReader.cs"];
m3_2843 [label="throw new NotImplementedException();", span="6489-6489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonReader.cs"];
m3_2844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6487-6487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonReader.cs"];
m3_3322 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7551-7551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3323 [label="MemoryStream ms = new MemoryStream()", span="7553-7553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3324 [label="BsonWriter writer = new BsonWriter(ms)", span="7554-7554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3328 [label="byte[] data = ms.ToArray()", span="7559-7559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3325 [label="writer.WriteStartArray()", span="7555-7555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3326 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7556-7556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3327 [label="writer.WriteEndArray()", span="7557-7557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3329 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7560-7563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3330 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7565-7565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3331 [label="JValue v = (JValue)a[0]", span="7566-7566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3333 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7569-7571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3332 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7568-7568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_3334 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7551-7551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonReader.cs"];
m3_1351 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonReader.cs"];
m3_3299 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="JsonReader.cs"];
m3_1105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2418-2418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1106 [label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2420-2428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1107 [label="string json = JsonConvert.SerializeObject(anonymous)", span="2430-2430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1109 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2433-2433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1108 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2431-2431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1110 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2434-2434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1111 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2435-2435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1112 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2436-2436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1113 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2437-2437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1114 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2438-2438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1115 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2439-2439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1116 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2440-2440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_1117 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2418-2418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonReader.cs"];
m3_517 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonReader.cs"];
m3_1690 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonReader.cs"];
m3_2796 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="6325-6325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonReader.cs"];
m3_3642 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8326-8326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonReader.cs"];
m3_3714 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8534-8534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonReader.cs"];
m3_3715 [label="this.First = first", span="8537-8537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonReader.cs"];
m3_3716 [label="this.Second = second", span="8538-8538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonReader.cs"];
m3_3717 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8534-8534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonReader.cs"];
m3_3093 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7082-7082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonReader.cs"];
m3_3094 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="7084-7089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonReader.cs"];
m3_3095 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="7091-7091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonReader.cs"];
m3_3096 [label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="7093-7097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonReader.cs"];
m3_3097 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7082-7082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonReader.cs"];
m3_2084 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4686-4686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonReader.cs"];
m3_2085 [label="_innerDictionary.Clear()", span="4688-4688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonReader.cs"];
m3_2086 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4686-4686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonReader.cs"];
m3_1205 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonReader.cs"];
m3_4 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonReader.cs"];
m3_5 [label="return new MainClass\r\n                {\r\n                    ID = 567,\r\n                    Name = ''XYZ'',\r\n                    Subclass = InstantiateSubclass()\r\n                };", span="148-153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonReader.cs"];
m3_6 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonReader.cs"];
m3_2541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5683-5683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonReader.cs"];
m3_3923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9090-9090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonReader.cs"];
m3_3924 [label="throw new InvalidCastException();", span="9092-9092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonReader.cs"];
m3_3925 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9090-9090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonReader.cs"];
m3_1559 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonReader.cs"];
m3_3547 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8064-8064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3548 [label="writer.WriteValue(''X'')", span="8066-8066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8064-8064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_1242 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2651-2651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonReader.cs"];
m3_762 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1649-1649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_763 [label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1651-1651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_764 [label="var json = JsonConvert.SerializeObject(original)", span="1652-1652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_765 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1653-1653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_766 [label="Assert.AreEqual(expectedJson, json)", span="1654-1654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_767 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1649-1649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_3049 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6967-6967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonReader.cs"];
m3_3050 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="6969-6969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonReader.cs"];
m3_3051 [label="string json = JsonConvert.SerializeObject(d1)", span="6971-6971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonReader.cs"];
m3_3053 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6975-6975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonReader.cs"];
m3_3054 [label="Assert.AreEqual(d1[0], d2[0])", span="6976-6976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonReader.cs"];
m3_3052 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6973-6973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonReader.cs"];
m3_3055 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6967-6967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonReader.cs"];
m3_1828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3910-3910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonReader.cs"];
m3_1829 [label="string json = @''{}''", span="3912-3912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonReader.cs"];
m3_1830 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'')", span="3914-3914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonReader.cs"];
m3_1831 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3910-3910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonReader.cs"];
m3_749 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="430-430", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonReader.cs"];
m3_2854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6517-6517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonReader.cs"];
m3_2855 [label="throw new NotImplementedException();", span="6519-6519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonReader.cs"];
m3_2856 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6517-6517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonReader.cs"];
m3_1234 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2657-2657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonReader.cs"];
m3_1235 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2659-2659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonReader.cs"];
m3_1236 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2661-2661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonReader.cs"];
m3_1239 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="2667-2667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonReader.cs"];
m3_1237 [label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2662-2664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonReader.cs"];
m3_1238 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2666-2666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonReader.cs"];
m3_1240 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2657-2657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonReader.cs"];
m3_159 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", span="427-427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", file="JsonReader.cs"];
m3_1874 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4008-4008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonReader.cs"];
m3_1875 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="4010-4010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonReader.cs"];
m3_1876 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="4011-4011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonReader.cs"];
m3_1877 [label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="4012-4015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonReader.cs"];
m3_1878 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="4017-4017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonReader.cs"];
m3_1879 [label="Assert.AreEqual(''String!'', c2.A)", span="4018-4018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonReader.cs"];
m3_1880 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="4019-4019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonReader.cs"];
m3_1881 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4008-4008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonReader.cs"];
m3_2070 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4632-4632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2071 [label="dictionary == null", span="4634-4634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2072 [label="throw new ArgumentNullException(nameof(dictionary));", span="4636-4636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2073 [label=dictionary, span="4639-4639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2074 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="4641-4641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2075 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4632-4632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_1550 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3309-3309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonReader.cs"];
m3_1551 [label="SubKlass i = new SubKlass(''my subprop'')", span="3311-3311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonReader.cs"];
m3_1552 [label="i.SuperProp = ''overrided superprop''", span="3312-3312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonReader.cs"];
m3_1553 [label="string json = JsonConvert.SerializeObject(i)", span="3314-3314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonReader.cs"];
m3_1554 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3315-3315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonReader.cs"];
m3_1555 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="3317-3317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonReader.cs"];
m3_1556 [label="string newJson = JsonConvert.SerializeObject(ii)", span="3319-3319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonReader.cs"];
m3_1557 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3320-3320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonReader.cs"];
m3_1558 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3309-3309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonReader.cs"];
m3_1893 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonReader.cs"];
m3_1084 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2371-2371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonReader.cs"];
m3_1085 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2373-2379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonReader.cs"];
m3_1086 [label="string result = JsonConvert.SerializeObject(testDates)", span="2381-2381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonReader.cs"];
m3_1087 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2382-2382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonReader.cs"];
m3_1088 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2371-2371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonReader.cs"];
m3_820 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="775-775", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonReader.cs"];
m3_1840 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3927-3927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonReader.cs"];
m3_1841 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3929-3940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonReader.cs"];
m3_1842 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3927-3927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonReader.cs"];
m3_2099 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonReader.cs"];
m3_3718 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8549-8549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonReader.cs"];
m3_3719 [label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8551-8551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonReader.cs"];
m3_3720 [label="string json = JsonConvert.SerializeObject(p)", span="8553-8553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonReader.cs"];
m3_3724 [label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8561-8564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonReader.cs"];
m3_3721 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8555-8555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonReader.cs"];
m3_3722 [label="DefaultContractResolver r = new DefaultContractResolver()", span="8558-8558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonReader.cs"];
m3_3723 [label="r.IgnoreSerializableAttribute = false", span="8559-8559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonReader.cs"];
m3_3725 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8566-8566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonReader.cs"];
m3_3726 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8549-8549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonReader.cs"];
m3_2018 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4450-4450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonReader.cs"];
m3_2019 [label="B value = new B()", span="4452-4452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonReader.cs"];
m3_2020 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4453-4453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonReader.cs"];
m3_2021 [label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4455-4460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonReader.cs"];
m3_2022 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4450-4450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonReader.cs"];
m3_2197 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonReader.cs"];
m3_2606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5838-5838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonReader.cs"];
m3_2607 [label="string json = ''[123456789876543.21]''", span="5840-5840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonReader.cs"];
m3_2608 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5841-5841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonReader.cs"];
m3_2609 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="5842-5842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonReader.cs"];
m3_2610 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5838-5838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonReader.cs"];
m3_1624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3490-3490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonReader.cs"];
m3_1625 [label="_name = name", span="3492-3492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonReader.cs"];
m3_1626 [label="Age = age", span="3493-3493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonReader.cs"];
m3_1627 [label="Rank = rank", span="3494-3494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonReader.cs"];
m3_1628 [label="Title = title", span="3495-3495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonReader.cs"];
m3_1629 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3490-3490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonReader.cs"];
m3_3774 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8699-8699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonReader.cs"];
m3_3775 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8701-8701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonReader.cs"];
m3_3776 [label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8703-8703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonReader.cs"];
m3_3777 [label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8705-8707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonReader.cs"];
m3_3778 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8699-8699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonReader.cs"];
m3_860 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1820-1820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonReader.cs"];
m3_3689 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8487-8487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonReader.cs"];
m3_3690 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8487-8487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonReader.cs"];
m3_259 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="234-234", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonReader.cs"];
m3_1131 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2468-2468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonReader.cs"];
m3_1132 [label="string json = JsonConvert.SerializeObject(new object())", span="2470-2470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonReader.cs"];
m3_1133 [label="Assert.AreEqual(''{}'', json)", span="2471-2471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonReader.cs"];
m3_1134 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2468-2468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonReader.cs"];
m3_2636 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5900-5900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonReader.cs"];
m3_2637 [label="IDoWork = doWork", span="5903-5903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonReader.cs"];
m3_2638 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5900-5900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonReader.cs"];
m3_3616 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3617 [label="var tuple = Tuple.Create(500)", span="8264-8264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3618 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8265-8268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3619 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8269-8269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3620 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8271-8274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3621 [label="Assert.AreEqual(500, obj.Item1)", span="8275-8275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3622 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3230 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7340-7340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonReader.cs"];
m3_3231 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7342-7348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonReader.cs"];
m3_3232 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7340-7340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonReader.cs"];
m3_4145 [label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0", cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonReader.cs"];
m3_918 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2006-2006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_919 [label="Product product = new Product()", span="2008-2008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_920 [label="product.Name = ''Apple''", span="2010-2010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_921 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="2011-2011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_922 [label="product.Price = 3.99M", span="2012-2012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_923 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="2013-2013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_924 [label="string output = JsonConvert.SerializeObject(product)", span="2015-2015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_925 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="2027-2027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_926 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2029-2029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_927 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="2030-2030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_928 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2031-2031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_929 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2032-2032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_930 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2033-2033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_931 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2034-2034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_932 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2006-2006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonReader.cs"];
m3_3253 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonReader.cs"];
m3_172 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonReader.cs"];
m3_18 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonReader.cs"];
m3_19 [label="var largeBrokenNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 43443333222211111117 }'')", span="192-192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonReader.cs"];
m3_20 [label="Assert.AreEqual(''43443333222211111117'', largeBrokenNumber.Blah)", span="193-193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonReader.cs"];
m3_21 [label="var largeOddWorkingNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 53443333222211111117 }'')", span="195-195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonReader.cs"];
m3_22 [label="Assert.AreEqual(''53443333222211111117'', largeOddWorkingNumber.Blah)", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonReader.cs"];
m3_23 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="190-190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonReader.cs"];
m3_3410 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7716-7716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonReader.cs"];
m3_3411 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7718-7722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonReader.cs"];
m3_3412 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7724-7727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonReader.cs"];
m3_3413 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7729-7732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonReader.cs"];
m3_3414 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7734-7734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonReader.cs"];
m3_3415 [label="Assert.AreEqual(2, dic2.Count)", span="7736-7736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonReader.cs"];
m3_3416 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7737-7737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonReader.cs"];
m3_3417 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7738-7738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonReader.cs"];
m3_3418 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7716-7716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonReader.cs"];
m3_769 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1614-1614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonReader.cs"];
m3_3293 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7494-7494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3294 [label="Color color = (Color)value", span="7496-7496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3296 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7499-7499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3295 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7497-7497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3297 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7494-7494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_1021 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="365-365", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonReader.cs"];
m3_734 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonReader.cs"];
m3_1853 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3961-3961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonReader.cs"];
m3_1854 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="3963-3974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonReader.cs"];
m3_1855 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3961-3961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonReader.cs"];
m3_1560 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3324-3324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonReader.cs"];
m3_1561 [label="SubKlass i = new SubKlass(''my subprop'')", span="3326-3326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonReader.cs"];
m3_1562 [label="i.SuperProp = ''overrided superprop''", span="3327-3327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonReader.cs"];
m3_1563 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3329-3332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonReader.cs"];
m3_1564 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3334-3334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonReader.cs"];
m3_1565 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3336-3339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonReader.cs"];
m3_1566 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3341-3344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonReader.cs"];
m3_1567 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3345-3345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonReader.cs"];
m3_1568 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3324-3324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonReader.cs"];
m3_894 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="JsonReader.cs"];
m3_915 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonReader.cs"];
m3_1493 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonReader.cs"];
m3_917 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonReader.cs"];
m3_7 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", span="126-126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", file="JsonReader.cs"];
m3_310 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonReader.cs"];
m3_1806 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3876-3876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonReader.cs"];
m3_1807 [label="string json = @''[new Constructor(123)]''", span="3878-3878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonReader.cs"];
m3_1808 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'')", span="3880-3880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonReader.cs"];
m3_1809 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3876-3876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonReader.cs"];
m3_3887 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9030-9030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonReader.cs"];
m3_3888 [label="throw new InvalidCastException();", span="9032-9032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonReader.cs"];
m3_3889 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9030-9030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonReader.cs"];
m3_3988 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9227-9227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonReader.cs"];
m3_3989 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9229-9229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonReader.cs"];
m3_3990 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9230-9230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonReader.cs"];
m3_3992 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9237-9240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonReader.cs"];
m3_3995 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9248-9248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonReader.cs"];
m3_3991 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9231-9235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonReader.cs"];
m3_3994 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9246-9246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonReader.cs"];
m3_3993 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9242-9244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonReader.cs"];
m3_3996 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9227-9227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonReader.cs"];
m3_3902 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9055-9055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonReader.cs"];
m3_3903 [label="return (short)Value;", span="9057-9057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonReader.cs"];
m3_3904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9055-9055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonReader.cs"];
m3_399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1049-1049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonReader.cs"];
m3_400 [label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="1051-1056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonReader.cs"];
m3_401 [label="var json = JsonConvert.SerializeObject(input)", span="1058-1058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonReader.cs"];
m3_403 [label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonReader.cs"];
m3_404 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="1062-1062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonReader.cs"];
m3_405 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonReader.cs"];
m3_402 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="1059-1059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonReader.cs"];
m3_406 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1049-1049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonReader.cs"];
m3_2989 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonReader.cs"];
m3_3396 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7674-7674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3397 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7676-7684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3398 [label="string json = JsonConvert.SerializeObject(c)", span="7686-7686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3399 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7688-7688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3400 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7674-7674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3533 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8044-8044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3534 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="8046-8046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3535 [label="Assert.AreEqual(1, uris.Count)", span="8047-8047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3536 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="8048-8048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3537 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="8050-8050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3538 [label="Assert.IsNotNull(uri)", span="8051-8051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3539 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="8053-8053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3540 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="8054-8054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3541 [label="Assert.AreEqual(i1, i2)", span="8055-8055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3542 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="8057-8057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3543 [label="Assert.IsNotNull(uri)", span="8058-8058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3544 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="8059-8059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_3545 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8044-8044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonReader.cs"];
m3_970 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonReader.cs"];
m3_2457 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5508-5508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonReader.cs"];
m3_2458 [label="return new DictionaryKey() { Value = value };", span="5510-5510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonReader.cs"];
m3_2459 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5508-5508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonReader.cs"];
m3_2030 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4495-4495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2031 [label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4497-4500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2032 [label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4502-4505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2033 [label="c1.C2 = c2", span="4507-4507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2034 [label="c2.C1 = c1", span="4508-4508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2035 [label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4510-4514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2036 [label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4516-4521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2037 [label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4523-4529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2038 [label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4531-4531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2039 [label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4532-4532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2040 [label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4533-4533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2041 [label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4534-4534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_2042 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4495-4495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonReader.cs"];
m3_3 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", file="JsonReader.cs"];
m3_298 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonReader.cs"];
m3_2203 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonReader.cs"];
m3_2078 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4676-4676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonReader.cs"];
m3_2079 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4678-4678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonReader.cs"];
m3_2080 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4676-4676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonReader.cs"];
m3_3498 [label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonReader.cs"];
m3_8 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonReader.cs"];
m3_9 [label="var mySubclass = MyFactory.InstantiateSubclass()", span="160-160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonReader.cs"];
m3_10 [label="var myMainClass = MyFactory.InstantiateManiClass()", span="161-161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonReader.cs"];
m3_11 [label="var strJsonSubclass = JsonConvert.SerializeObject(mySubclass, Formatting.Indented)", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonReader.cs"];
m3_13 [label="var strJsonMainClass = JsonConvert.SerializeObject(myMainClass, Formatting.Indented)", span="174-174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonReader.cs"];
m3_12 [label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 123,\r\n  ''''Name'''': ''''ABC'''',\r\n  ''''P1'''': true,\r\n  ''''P2'''': 44\r\n}'', strJsonSubclass)", span="166-171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonReader.cs"];
m3_14 [label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 567,\r\n  ''''Name'''': ''''XYZ'''',\r\n  ''''Subclass'''': {\r\n    ''''ID'''': 123,\r\n    ''''Name'''': ''''ABC'''',\r\n    ''''P1'''': true,\r\n    ''''P2'''': 44\r\n  }\r\n}'', strJsonMainClass)", span="176-185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonReader.cs"];
m3_15 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonReader.cs"];
m3_1589 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3390-3390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonReader.cs"];
m3_1590 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3392-3392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonReader.cs"];
m3_1591 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3394-3400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonReader.cs"];
m3_1592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3390-3390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonReader.cs"];
m3_2809 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6402-6402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonReader.cs"];
m3_2810 [label="Title = title", span="6404-6404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonReader.cs"];
m3_2811 [label="Categories = new List<string>()", span="6405-6405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonReader.cs"];
m3_2812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6402-6402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonReader.cs"];
m3_140 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonReader.cs"];
m3_141 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new Binding_DisallowNull()); }, ''Cannot write a null value for property 'RequiredProperty'. Property requires a non-null value. Path ''.'')", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonReader.cs"];
m3_142 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonReader.cs"];
m3_1213 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JsonReader.cs"];
m3_3308 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7520-7520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3309 [label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7522-7522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3310 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7524-7524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3316 [label="values.Add(foo)", span="7537-7537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3317 [label="Assert.AreEqual(2, values.Count)", span="7540-7540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3318 [label="Assert.AreEqual(''bar'', values[0].Name)", span="7541-7541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3319 [label="Assert.AreEqual(''baz'', values[1].Name)", span="7542-7542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3311 [label="reader.SupportMultipleContent = true", span="7525-7525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3313 [label="!reader.Read()", span="7529-7529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3315 [label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7535-7535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3312 [label=true, span="7527-7527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3314 [label="JsonSerializer serializer = new JsonSerializer()", span="7534-7534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_3320 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7520-7520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonReader.cs"];
m3_784 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1676-1676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_785 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1678-1678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_786 [label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1679-1679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_787 [label="Assert.IsNotNull(deserialized.foo2)", span="1680-1680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_788 [label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1681-1681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_789 [label="Assert.IsNotNull(deserialized.foo)", span="1682-1682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_790 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1683-1683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_791 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1676-1676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_2519 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonReader.cs"];
m3_1437 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="JsonReader.cs"];
m3_1413 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonReader.cs"];
m3_654 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1428-1428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonReader.cs"];
m3_655 [label="Ratio ratio = new Ratio(2, 1)", span="1430-1430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonReader.cs"];
m3_656 [label="string json = JsonConvert.SerializeObject(ratio)", span="1431-1431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonReader.cs"];
m3_659 [label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1437-1437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonReader.cs"];
m3_657 [label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1433-1433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonReader.cs"];
m3_658 [label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1435-1435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonReader.cs"];
m3_660 [label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1438-1438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonReader.cs"];
m3_661 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1428-1428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonReader.cs"];
m3_850 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1963-1963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_881 [label="MemoryStream ms = new MemoryStream()", span="1965-1965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_882 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="1966-1966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_883 [label="s.WriteObject(ms, o)", span="1967-1967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_887 [label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="1973-1973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_884 [label="var data = ms.ToArray()", span="1969-1969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_885 [label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="1970-1970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_886 [label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="1971-1971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_889 [label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="1980-1980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_890 [label=dataContractJson, span="1981-1981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_888 [label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="1974-1974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_891 [label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="1983-1983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_892 [label="return jsonNetJson.ToString();", span="1986-1986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_893 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1963-1963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonReader.cs"];
m3_1609 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3457-3457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1610 [label="OptInClass optInClass = new OptInClass()", span="3459-3459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1611 [label="optInClass.Age = 26", span="3460-3460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1612 [label="optInClass.Name = ''James NK''", span="3461-3461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1613 [label="optInClass.NotIncluded = ''Poor me :(''", span="3462-3462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1614 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3464-3464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1615 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3466-3469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1616 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3471-3475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1617 [label="Assert.AreEqual(26, newOptInClass.Age)", span="3476-3476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1618 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3477-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1619 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3478-3478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_1620 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3457-3457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonReader.cs"];
m3_3551 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8069-8069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3552 [label="return ''X'';", span="8071-8071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3553 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8069-8069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_1519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3228-3228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonReader.cs"];
m3_1520 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="3230-3235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonReader.cs"];
m3_1521 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="3237-3237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonReader.cs"];
m3_1522 [label="Assert.IsNotNull(o)", span="3238-3238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonReader.cs"];
m3_1523 [label="Assert.AreEqual(''firstName'', o.firstName)", span="3240-3240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonReader.cs"];
m3_1524 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="3241-3241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonReader.cs"];
m3_1525 [label="Assert.AreEqual(''LastName'', o.LastName)", span="3242-3242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonReader.cs"];
m3_1526 [label="Assert.AreEqual(''lastName'', o.lastName)", span="3243-3243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonReader.cs"];
m3_1527 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3228-3228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonReader.cs"];
m3_3744 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8625-8625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonReader.cs"];
m3_3745 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8627-8633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonReader.cs"];
m3_3746 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8635-8635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonReader.cs"];
m3_3747 [label="Assert.IsNull(c2.MyNullableBool)", span="8636-8636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonReader.cs"];
m3_3748 [label="Assert.IsNull(c2.MyNullableInteger)", span="8637-8637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonReader.cs"];
m3_3749 [label="Assert.IsNull(c2.MyNullableDateTime)", span="8638-8638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonReader.cs"];
m3_3750 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8639-8639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonReader.cs"];
m3_3751 [label="Assert.IsNull(c2.MyNullableDecimal)", span="8640-8640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonReader.cs"];
m3_3752 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8625-8625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonReader.cs"];
m3_3035 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6941-6941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonReader.cs"];
m3_3036 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6943-6943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonReader.cs"];
m3_3037 [label="string json = JsonConvert.SerializeObject(d1)", span="6945-6945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonReader.cs"];
m3_3039 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6949-6949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonReader.cs"];
m3_3040 [label="Assert.AreEqual(d1[0], d2[0])", span="6950-6950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonReader.cs"];
m3_3038 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6947-6947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonReader.cs"];
m3_3041 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6941-6941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonReader.cs"];
m3_33 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonReader.cs"];
m3_34 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''[null]''),\r\n                ''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 5.'')", span="220-222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonReader.cs"];
m3_35 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="218-218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonReader.cs"];
m3_817 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonReader.cs"];
m3_3177 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonReader.cs"];
m3_3929 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9108-9108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonReader.cs"];
m3_3930 [label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="9110-9110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonReader.cs"];
m3_3931 [label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="9111-9111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonReader.cs"];
m3_3932 [label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="9112-9115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonReader.cs"];
m3_3933 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9108-9108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonReader.cs"];
m3_2393 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5395-5395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2394 [label="var reference = new Dictionary<string, object>()", span="5399-5399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2395 [label="reference.Add(''$ref'', ''Persons'')", span="5400-5400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2396 [label="reference.Add(''$id'', 1)", span="5401-5401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2400 [label="child.Add(''Father'', reference)", span="5406-5406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2397 [label="var child = new Dictionary<string, object>()", span="5403-5403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2398 [label="child.Add(''_id'', 2)", span="5404-5404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2399 [label="child.Add(''Name'', ''Isabell'')", span="5405-5405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2401 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5408-5408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2402 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 10.'')", span="5410-5410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2403 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5395-5395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonReader.cs"];
m3_2007 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4393-4393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonReader.cs"];
m3_2008 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonReader.cs"];
m3_2009 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4397-4401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonReader.cs"];
m3_2010 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4393-4393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonReader.cs"];
m3_1725 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3749-3749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonReader.cs"];
m3_1726 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonReader.cs"];
m3_1727 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3753-3753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonReader.cs"];
m3_1728 [label="Assert.AreEqual(null, c.DateTimeField)", span="3754-3754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonReader.cs"];
m3_1729 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3749-3749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonReader.cs"];
m3_3357 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7600-7600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3358 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7602-7602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3359 [label="IList<string> errors = new List<string>()", span="7603-7603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3361 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7611-7614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3360 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7605-7609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3363 [label="Assert.AreEqual(3, errors.Count)", span="7617-7617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3364 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7618-7618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3365 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7619-7619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3366 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7620-7620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3362 [label="Assert.IsNotNull(o)", span="7616-7616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_3367 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7600-7600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonReader.cs"];
m3_522 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonReader.cs"];
m3_1978 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4314-4314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonReader.cs"];
m3_1979 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="4316-4316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonReader.cs"];
m3_1980 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4314-4314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonReader.cs"];
m3_3387 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7652-7652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3388 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7654-7663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3389 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7665-7665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3390 [label="Assert.IsNotNull(c2)", span="7667-7667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3391 [label="Assert.AreEqual(2, c2.Data.Count)", span="7668-7668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3392 [label="Assert.AreEqual(''one'', c2.Data[0])", span="7669-7669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3393 [label="Assert.AreEqual(''two'', c2.Data[1])", span="7670-7670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3394 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7652-7652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonReader.cs"];
m3_3779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8716-8716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonReader.cs"];
m3_3780 [label="bar == null", span="8718-8718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonReader.cs"];
m3_3781 [label="throw new ArgumentNullException(nameof(bar));", span="8720-8720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonReader.cs"];
m3_3782 [label="Bar = bar", span="8723-8723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonReader.cs"];
m3_3783 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8716-8716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonReader.cs"];
m3_3224 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7328-7328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonReader.cs"];
m3_3225 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7330-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonReader.cs"];
m3_3226 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7328-7328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonReader.cs"];
m3_1399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2941-2941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1400 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2943-2943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1401 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2944-2944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1403 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2947-2947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1402 [label="string json = JsonConvert.SerializeObject(typeClass)", span="2946-2946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1404 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2949-2949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1405 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2950-2950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1406 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2952-2952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1407 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2953-2953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1409 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2956-2956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1408 [label="json = JsonConvert.SerializeObject(typeClass)", span="2955-2955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1410 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2958-2958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1411 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2959-2959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_1412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2941-2941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonReader.cs"];
m3_3254 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonReader.cs"];
m3_3298 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="JsonReader.cs"];
m3_118 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="362-362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonReader.cs"];
m3_119 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a non-null value. Path '', line 1, position 21.'')", span="364-364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonReader.cs"];
m3_120 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="362-362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonReader.cs"];
m3_736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_737 [label="string s = null", span="1586-1586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_738 [label="var v = new JValue(s)", span="1587-1587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_739 [label="var o = JObject.FromObject(new { title = v })", span="1588-1588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_740 [label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1590-1593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_742 [label="Assert.AreEqual(null, v.Value)", span="1597-1597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_743 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="1598-1598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_741 [label="string output = o.ToString()", span="1595-1595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_744 [label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1600-1602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_745 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1584-1584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonReader.cs"];
m3_4149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="9652-9652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_4150 [label="return typeof(Encoding).IsAssignableFrom(objectType);", span="9654-9654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_4151 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="9652-9652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_673 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1465-1465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_674 [label="info.AddValue(''stringValue'', _stringValue)", span="1467-1467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_675 [label="info.AddValue(''intValue'', _intValue)", span="1468-1468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_676 [label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1469-1469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_677 [label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_678 [label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1471-1471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_679 [label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1472-1472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_680 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1465-1465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_748 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="88-88", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonReader.cs"];
m3_24 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonReader.cs"];
m3_2390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5388-5388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_2391 [label="return objectType == typeof(PosDouble);", span="5390-5390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_2392 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5388-5388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_2679 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6030-6030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonReader.cs"];
m3_2680 [label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="6032-6036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonReader.cs"];
m3_2681 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="6038-6038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonReader.cs"];
m3_2684 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="6043-6043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonReader.cs"];
m3_2682 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="6040-6040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonReader.cs"];
m3_2683 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="6042-6042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonReader.cs"];
m3_2685 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6030-6030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonReader.cs"];
m3_3905 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9060-9060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonReader.cs"];
m3_3906 [label="return Value;", span="9062-9062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonReader.cs"];
m3_3907 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9060-9060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonReader.cs"];
m3_2619 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5864-5864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonReader.cs"];
m3_2620 [label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="5866-5866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonReader.cs"];
m3_2621 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5864-5864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonReader.cs"];
m3_3277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7434-7434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3278 [label="Product product = new Product()", span="7436-7436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3279 [label="product.Name = ''Apple''", span="7437-7437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3280 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="7438-7438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3281 [label="product.Price = 3.99M", span="7439-7439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3282 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="7440-7440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3283 [label="string json = JsonConvert.SerializeObject(product)", span="7442-7442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3284 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7450-7455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3285 [label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="7456-7465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3286 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7473-7473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3287 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7475-7480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3288 [label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7482-7489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3289 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7434-7434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonReader.cs"];
m3_3815 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonReader.cs"];
m3_1648 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3558-3558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1649 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3560-3577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1650 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3579-3580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1651 [label="Assert.AreEqual(''Name!'', c.Name)", span="3582-3582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1652 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="3583-3583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1653 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3584-3584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1654 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3585-3585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1655 [label="Assert.AreEqual(4, c.Collection.Count)", span="3586-3586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1656 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3587-3587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1657 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3588-3588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1658 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3589-3589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1659 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3590-3590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1660 [label="Assert.IsNotNull(c.Random)", span="3591-3591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_1661 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3558-3558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonReader.cs"];
m3_16 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonReader.cs"];
m3_3236 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7352-7352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonReader.cs"];
m3_3237 [label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="7354-7355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonReader.cs"];
m3_3238 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="7357-7357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonReader.cs"];
m3_3239 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="7358-7358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonReader.cs"];
m3_3240 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7352-7352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonReader.cs"];
m3_2301 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5177-5177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonReader.cs"];
m3_2302 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5177-5177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonReader.cs"];
m3_3056 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="6985-6985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonReader.cs"];
m3_3057 [label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="6987-6993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonReader.cs"];
m3_3058 [label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="6994-6997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonReader.cs"];
m3_3059 [label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="6999-6999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonReader.cs"];
m3_3060 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="6985-6985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonReader.cs"];
m3_3485 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7923-7923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonReader.cs"];
m3_3486 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7925-7925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonReader.cs"];
m3_3487 [label="Assert.AreEqual(@''{}'', json)", span="7926-7926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonReader.cs"];
m3_3488 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7923-7923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonReader.cs"];
m3_3807 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8839-8839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonReader.cs"];
m3_3808 [label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="8841-8843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonReader.cs"];
m3_3809 [label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="8845-8845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonReader.cs"];
m3_3810 [label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="8847-8847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonReader.cs"];
m3_3811 [label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="8849-8849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonReader.cs"];
m3_3812 [label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="8850-8850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonReader.cs"];
m3_3813 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8839-8839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonReader.cs"];
m3_1243 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2671-2671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonReader.cs"];
m3_1244 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2673-2673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonReader.cs"];
m3_1245 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2675-2675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonReader.cs"];
m3_1246 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2677-2677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonReader.cs"];
m3_1247 [label="Assert.AreEqual(0, c.IgnoredField)", span="2679-2679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonReader.cs"];
m3_1248 [label="Assert.AreEqual(99, c.Field)", span="2680-2680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonReader.cs"];
m3_1249 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2671-2671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonReader.cs"];
m3_3300 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JsonReader.cs"];
m3_3784 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8728-8728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonReader.cs"];
m3_3785 [label="string json = @''{''''something_else'''':''''my value''''}''", span="8730-8730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonReader.cs"];
m3_3786 [label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8731-8731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonReader.cs"];
m3_3787 [label="Assert.AreEqual(''my value'', foo.Bar)", span="8732-8732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonReader.cs"];
m3_3788 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8728-8728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonReader.cs"];
m3_1206 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2609-2609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonReader.cs"];
m3_1207 [label="var obj = new { Formatting = ''test'' }", span="2611-2611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonReader.cs"];
m3_1208 [label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2613-2613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonReader.cs"];
m3_1209 [label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2614-2614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonReader.cs"];
m3_1210 [label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2616-2616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonReader.cs"];
m3_1211 [label="Assert.AreNotEqual(indented, none)", span="2617-2617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonReader.cs"];
m3_1212 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2609-2609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonReader.cs"];
m3_515 [label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36", cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonReader.cs"];
m3_3256 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7393-7393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3257 [label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7395-7401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3258 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7403-7403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3259 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7404-7404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3260 [label="Assert.AreEqual(''Pre'', c.PreField)", span="7405-7405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3261 [label="Assert.AreEqual(''Post'', c.PostField)", span="7406-7406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3262 [label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="7408-7410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3263 [label="Assert.AreEqual(null, c2.DateTimeField)", span="7412-7412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3264 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="7413-7413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3265 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="7414-7414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3266 [label="Assert.AreEqual(''Post'', c2.PostField)", span="7415-7415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_3267 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7393-7393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonReader.cs"];
m3_2325 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5258-5258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2326 [label="XNodeTestObject testObject = new XNodeTestObject()", span="5260-5260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2327 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="5261-5261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2328 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="5262-5262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2329 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5264-5264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2333 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="5280-5280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2334 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="5281-5281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2330 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="5265-5276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2331 [label="StringAssert.AreEqual(expected, json)", span="5277-5277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2332 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="5279-5279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2335 [label="Assert.IsNull(newTestObject.Element.Parent)", span="5283-5283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_2336 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5258-5258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonReader.cs"];
m3_212 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m3_1287 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonReader.cs"];
m3_3597 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8204-8204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonReader.cs"];
m3_3598 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="8206-8209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonReader.cs"];
m3_3599 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="8211-8211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonReader.cs"];
m3_3600 [label="Assert.AreEqual(1, l[0])", span="8213-8213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonReader.cs"];
m3_3601 [label="Assert.AreEqual(null, l[1])", span="8214-8214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonReader.cs"];
m3_3602 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8204-8204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonReader.cs"];
m3_4132 [label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonReader.cs"];
m3_1135 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonReader.cs"];
m3_2196 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonReader.cs"];
m3_1778 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3830-3830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonReader.cs"];
m3_1779 [label="string json = @''[]''", span="3832-3832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonReader.cs"];
m3_1780 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { JsonConvert.DeserializeObject<double>(json); },\r\n                @''Unexpected character encountered while parsing value: [. Path '', line 1, position 1.'')", span="3834-3836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonReader.cs"];
m3_1781 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3830-3830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonReader.cs"];
m3_2044 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4553-4553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonReader.cs"];
m3_2047 [label="C1 = c1", span="4555-4555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonReader.cs"];
m3_2048 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4553-4553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonReader.cs"];
m3_1259 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonReader.cs"];
m3_372 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="995-995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonReader.cs"];
m3_373 [label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="997-1002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonReader.cs"];
m3_374 [label="var json = JsonConvert.SerializeObject(input)", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonReader.cs"];
m3_376 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonReader.cs"];
m3_377 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="1008-1008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonReader.cs"];
m3_378 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="1009-1009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonReader.cs"];
m3_375 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonReader.cs"];
m3_379 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="995-995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonReader.cs"];
m3_3160 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7221-7221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_3161 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="7223-7227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_3162 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="7229-7229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_3163 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7231-7231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_3164 [label="Assert.AreEqual(null, e.NullableEnum)", span="7233-7233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_3165 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="7235-7239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_3166 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="7241-7241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_3167 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7243-7243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_3168 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="7245-7245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_3169 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7221-7221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonReader.cs"];
m3_4153 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9657-9657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4154 [label="var encodingName = serializer.Deserialize<string>(reader)", span="9659-9659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4155 [label="encodingName == null", span="9660-9660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4157 [label="return Encoding.GetEncoding(encodingName);", span="9665-9665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4156 [label="return null;", span="9662-9662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4158 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9657-9657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2658 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5988-5988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2659 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="5990-5990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2660 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5991-5991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2661 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="5992-5992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2665 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5999-5999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2662 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="5994-5994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2663 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5995-5995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2664 [label="barWithNull.Foo2 = null", span="5996-5996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2669 [label="s = JsonConvert.SerializeObject(barWithNull)", span="6005-6005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2666 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="6000-6000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2667 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6001-6001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2668 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="6002-6002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2670 [label="deserialized = deserialize(s)", span="6006-6006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2671 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6007-6007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2672 [label="Assert.AreEqual(deserialized.Foo2, null)", span="6008-6008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_2673 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5988-5988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonReader.cs"];
m3_381 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1013-1013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonReader.cs"];
m3_382 [label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1015-1020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonReader.cs"];
m3_383 [label="var json = JsonConvert.SerializeObject(input)", span="1022-1022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonReader.cs"];
m3_385 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="1025-1025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonReader.cs"];
m3_386 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="1026-1026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonReader.cs"];
m3_387 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="1027-1027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonReader.cs"];
m3_384 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="1023-1023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonReader.cs"];
m3_388 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1013-1013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonReader.cs"];
m3_1531 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3260-3260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonReader.cs"];
m3_1532 [label="string json = ''{ 'testProperty1': 'value' }''", span="3262-3262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonReader.cs"];
m3_1533 [label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="3264-3267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonReader.cs"];
m3_1536 [label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="3271-3274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonReader.cs"];
m3_1534 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="3268-3268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonReader.cs"];
m3_1535 [label="Assert.AreEqual(21, c.TestProperty2)", span="3269-3269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonReader.cs"];
m3_1537 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="3275-3275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonReader.cs"];
m3_1538 [label="Assert.AreEqual(21, c.TestProperty2)", span="3276-3276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonReader.cs"];
m3_1539 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3260-3260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonReader.cs"];
m3_2757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6206-6206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonReader.cs"];
m3_2758 [label="this.A = A", span="6208-6208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonReader.cs"];
m3_2759 [label="B = 2", span="6209-6209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonReader.cs"];
m3_2760 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6206-6206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonReader.cs"];
m3_237 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="588-588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_238 [label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="590-590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_239 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="592-594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_240 [label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_241 [label="string json = JsonConvert.SerializeObject(c2)", span="598-598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_242 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="600-600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_243 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="602-604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_244 [label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="606-606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_245 [label="Assert.AreEqual(''Name!'', c3.Name)", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_246 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="588-588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonReader.cs"];
m3_1598 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3404-3404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1599 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3406-3422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1600 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3424-3424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1602 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3427-3427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1601 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3425-3425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1603 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3428-3428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1604 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3429-3429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1605 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="3430-3430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1606 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3431-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1607 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3432-3432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_1608 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3404-3404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonReader.cs"];
m3_3585 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8173-8173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonReader.cs"];
m3_3586 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="8175-8177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonReader.cs"];
m3_3587 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="8179-8179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonReader.cs"];
m3_3588 [label="BigInteger nineQuindecillion = l[0]", span="8181-8181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonReader.cs"];
m3_3589 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="8184-8184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonReader.cs"];
m3_3590 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8173-8173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonReader.cs"];
m3_4185 [label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="9783-9783", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonReader.cs"];
m3_4186 [label="Value = value", span="9785-9785", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonReader.cs"];
m3_4187 [label="Age = age", span="9786-9786", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonReader.cs"];
m3_4188 [label="Constructor = ''Public Paramatized 2''", span="9787-9787", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonReader.cs"];
m3_4189 [label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="9783-9783", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonReader.cs"];
m3_816 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="JsonReader.cs"];
m3_2170 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonReader.cs"];
m3_3214 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7315-7315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonReader.cs"];
m3_3215 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="7317-7317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonReader.cs"];
m3_3216 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7315-7315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonReader.cs"];
m3_3340 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2093-2093", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonReader.cs"];
m3_3816 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8855-8855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3817 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8857-8872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3818 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8874-8881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3819 [label="Assert.AreEqual(2, people.Count)", span="8883-8883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3820 [label="PersonReference john = people[0]", span="8885-8885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3821 [label="PersonReference jane = people[1]", span="8886-8886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3822 [label="Assert.AreEqual(john, jane.Spouse)", span="8888-8888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3823 [label="Assert.AreEqual(jane, john.Spouse)", span="8889-8889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_3824 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8855-8855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonReader.cs"];
m3_897 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonReader.cs"];
m3_2558 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5739-5739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonReader.cs"];
m3_2559 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5741-5741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonReader.cs"];
m3_2560 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5742-5742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonReader.cs"];
m3_2561 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5739-5739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonReader.cs"];
m3_2566 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5752-5752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonReader.cs"];
m3_4117 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9588-9588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4118 [label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9590-9590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4119 [label="messageJObject == null", span="9591-9591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4121 [label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="9596-9596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4124 [label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="9600-9601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4120 [label="return null;", span="9593-9593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4122 [label="JToken displayNameToken", span="9598-9598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4125 [label="return new System.Net.Mail.MailAddress(address, displayName);", span="9603-9603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4126 [label="return new System.Net.Mail.MailAddress(address);", span="9606-9606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4123 [label="string displayName", span="9599-9599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9588-9588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3936 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9120-9120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonReader.cs"];
m3_3937 [label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="9122-9122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonReader.cs"];
m3_3938 [label="JObject o = JsonConvert.DeserializeObject<JObject>(content)", span="9123-9123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonReader.cs"];
m3_3939 [label="int time = (int)o[''result''][''time'']", span="9124-9124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonReader.cs"];
m3_3940 [label="Assert.AreEqual(1408188593, time)", span="9126-9126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonReader.cs"];
m3_3941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9120-9120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonReader.cs"];
m3_2407 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5414-5414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonReader.cs"];
m3_2408 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 13.'')", span="5416-5431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonReader.cs"];
m3_2409 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5414-5414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonReader.cs"];
m3_2851 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6502-6502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonReader.cs"];
m3_2852 [label="throw new NotImplementedException();", span="6504-6504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonReader.cs"];
m3_2853 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6502-6502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonReader.cs"];
m3_2956 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="483-483", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonReader.cs"];
m3_3069 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7024-7024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonReader.cs"];
m3_3070 [label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  },\r\n  ''''Pie'''': null\r\n}''", span="7026-7033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonReader.cs"];
m3_3071 [label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7034-7037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonReader.cs"];
m3_3072 [label="Assert.IsNotNull(value.EncryptedPassword)", span="7039-7039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonReader.cs"];
m3_3073 [label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7040-7040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonReader.cs"];
m3_3074 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7024-7024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonReader.cs"];
m3_3814 [label="Entry Size.cstr", span="", cluster="Size.cstr", file="JsonReader.cs"];
m3_2338 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonReader.cs"];
m3_2377 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5361-5361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_2378 [label="return objectType == typeof(Pos);", span="5363-5363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_2379 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5361-5361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_3857 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="89-89", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonReader.cs"];
m3_2121 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonReader.cs"];
m3_4160 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9668-9668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4161 [label="throw new NotImplementedException();", span="9670-9670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4162 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9668-9668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3896 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9045-9045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonReader.cs"];
m3_3897 [label="throw new InvalidCastException();", span="9047-9047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonReader.cs"];
m3_3898 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9045-9045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonReader.cs"];
m3_2841 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonReader.cs"];
m3_997 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonReader.cs"];
m3_2588 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonReader.cs"];
m3_258 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonReader.cs"];
m3_1325 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2811-2811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonReader.cs"];
m3_1326 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2813-2813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonReader.cs"];
m3_1327 [label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2815-2819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonReader.cs"];
m3_1328 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2821-2821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonReader.cs"];
m3_1329 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2823-2826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonReader.cs"];
m3_1330 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2811-2811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonReader.cs"];
m3_3769 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8675-8675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonReader.cs"];
m3_3770 [label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8677-8684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonReader.cs"];
m3_3771 [label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8686-8693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonReader.cs"];
m3_3772 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8675-8675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonReader.cs"];
m3_4134 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9609-9609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4135 [label="throw new NotImplementedException();", span="9611-9611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4136 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9609-9609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2518 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5616-5616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonReader.cs"];
m3_3466 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7858-7858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonReader.cs"];
m3_3473 [label="var jsonReader = new JsonTextReader(new StringReader(json))", span="7861-7861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonReader.cs"];
m3_3474 [label="var serializer = new JsonSerializer()", span="7862-7862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonReader.cs"];
m3_3476 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7868-7868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonReader.cs"];
m3_3475 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7863-7866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonReader.cs"];
m3_3477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7858-7858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonReader.cs"];
m3_792 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1688-1688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_793 [label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1691-1691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_794 [label="var i = 0", span="1692-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_796 [label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1694-1694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_802 [label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1701-1701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_795 [label="i < 800", span="1692-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_797 [label="i++", span="1692-1692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_798 [label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1696-1696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_799 [label="var jsonSerializer = JsonSerializer.Create(settings)", span="1697-1697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_800 [label="var ms = new MemoryStream()", span="1698-1698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_806 [label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1707-1707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_801 [label="var streamWriter = new StreamWriter(ms)", span="1700-1700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_804 [label="ms.Seek(0, SeekOrigin.Begin)", span="1704-1704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_803 [label="streamWriter.Flush()", span="1702-1702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_805 [label="var stopWatch = Stopwatch.StartNew()", span="1706-1706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_807 [label="stopWatch.Stop()", span="1708-1708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_808 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1688-1688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonReader.cs"];
m3_174 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonReader.cs"];
m3_1663 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3595-3595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_1664 [label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3597-3606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_1665 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3608-3608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_1666 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3610-3610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_1667 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3611-3611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_1668 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3612-3612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_1669 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3613-3613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_1670 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3614-3614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_1671 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3615-3615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_1672 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3595-3595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonReader.cs"];
m3_2194 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonReader.cs"];
m3_3178 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonReader.cs"];
m3_726 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonReader.cs"];
m3_160 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="440-440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonReader.cs"];
m3_161 [label="return dictionaryKey;", span="442-442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonReader.cs"];
m3_162 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="440-440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonReader.cs"];
m3_834 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1758-1758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonReader.cs"];
m3_835 [label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1760-1765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonReader.cs"];
m3_836 [label="string result = JsonConvert.SerializeObject(cc)", span="1767-1767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonReader.cs"];
m3_837 [label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1768-1768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonReader.cs"];
m3_838 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1758-1758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonReader.cs"];
m3_2506 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5622-5622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2507 [label="string classRef = typeof(StringDictionary).FullName", span="5624-5624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2508 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5626-5634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2516 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 31.'')", span="5650-5650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2509 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5636-5636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2510 [label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5639-5639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2511 [label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5641-5641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2512 [label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2513 [label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5644-5644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2514 [label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5645-5645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2515 [label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5646-5646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2517 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5622-5622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonReader.cs"];
m3_2720 [label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="9791-9791", cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonReader.cs"];
m3_1746 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3779-3779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonReader.cs"];
m3_1747 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3781-3781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonReader.cs"];
m3_1748 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3783-3783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonReader.cs"];
m3_1749 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3779-3779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonReader.cs"];
m3_4146 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9635-9635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4147 [label="throw new NotImplementedException();", span="9637-9637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_4148 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9635-9635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2226 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4971-4971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2227 [label="Person person = new Person()", span="4973-4973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2228 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4974-4974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2229 [label="person.LastModified = person.BirthDate", span="4975-4975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2230 [label="person.Department = ''Department!''", span="4976-4976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2231 [label="person.Name = ''Name!''", span="4977-4977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2235 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4987-4987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2232 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4979-4979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2233 [label="string dateTimeOffsetText", span="4980-4980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2241 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5021-5021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2234 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="4982-4982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2237 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4993-5016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2236 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="4989-4992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2238 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5018-5018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2239 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="5019-5019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2240 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5020-5020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2242 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5022-5022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2243 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="5023-5023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2244 [label="Assert.AreEqual(null, o2._nullableInt)", span="5024-5024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_2245 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4971-4971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonReader.cs"];
m3_898 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="114-114", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonReader.cs"];
m3_1195 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonReader.cs"];
m3_3603 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8219-8219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3604 [label="var tuple = new MyTuple<int>(500)", span="8221-8221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3605 [label="var json = JsonConvert.SerializeObject(tuple)", span="8222-8222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3606 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8223-8223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3608 [label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="8227-8227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3607 [label="MyTuple<int> obj = null", span="8225-8225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3609 [label="doStuff()", span="8230-8230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3610 [label="Assert.AreEqual(500, obj.Item1)", span="8231-8231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3611 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8219-8219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonReader.cs"];
m3_3061 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonReader.cs"];
m3_286 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonReader.cs"];
m3_813 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonReader.cs"];
m3_2337 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="5242-5242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonReader.cs"];
m3_1241 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonReader.cs"];
m3_1196 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2597-2597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonReader.cs"];
m3_1197 [label="Stack<object> s = new Stack<object>()", span="2599-2599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonReader.cs"];
m3_1198 [label="s.Push(1)", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonReader.cs"];
m3_1199 [label="s.Push(2)", span="2601-2601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonReader.cs"];
m3_1200 [label="s.Push(3)", span="2602-2602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonReader.cs"];
m3_1201 [label="string json = JsonConvert.SerializeObject(s)", span="2604-2604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonReader.cs"];
m3_1202 [label="Assert.AreEqual(''[3,2,1]'', json)", span="2605-2605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonReader.cs"];
m3_1203 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2597-2597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonReader.cs"];
m3_1673 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3619-3619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonReader.cs"];
m3_1674 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3621-3631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonReader.cs"];
m3_1675 [label="JObject o = JObject.Parse(json)", span="3633-3633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonReader.cs"];
m3_1676 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3635-3635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonReader.cs"];
m3_1677 [label="Assert.IsNotNull(s)", span="3636-3636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonReader.cs"];
m3_1678 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3638-3638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonReader.cs"];
m3_1679 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3639-3639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonReader.cs"];
m3_1680 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3640-3640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonReader.cs"];
m3_1681 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3619-3619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonReader.cs"];
m3_2897 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6657-6657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonReader.cs"];
m3_2898 [label="DerivedType d = new DerivedType()", span="6659-6659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonReader.cs"];
m3_2899 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonReader.cs"];
m3_2900 [label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6662-6671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonReader.cs"];
m3_2901 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6657-6657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonReader.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="135-135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonReader.cs"];
m3_1 [label="return new Subclass\r\n                {\r\n                    ID = 123,\r\n                    Name = ''ABC'',\r\n                    P1 = true,\r\n                    P2 = 44\r\n                };", span="137-143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonReader.cs"];
m3_2 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="135-135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonReader.cs"];
m3_2857 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6522-6522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonReader.cs"];
m3_2858 [label="throw new NotImplementedException();", span="6524-6524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonReader.cs"];
m3_2859 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6522-6522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonReader.cs"];
m3_3697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8501-8501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonReader.cs"];
m3_3698 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8501-8501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonReader.cs"];
m3_1446 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3044-3044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonReader.cs"];
m3_1447 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="3048-3050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonReader.cs"];
m3_1448 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3052-3052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonReader.cs"];
m3_1449 [label="Assert.Fail()", span="3053-3053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonReader.cs"];
m3_1450 [label=JsonSerializationException, span="3055-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonReader.cs"];
m3_1451 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="3057-3057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonReader.cs"];
m3_1452 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3044-3044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonReader.cs"];
m3_992 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2147-2147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonReader.cs"];
m3_993 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="2149-2149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonReader.cs"];
m3_994 [label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="2151-2151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonReader.cs"];
m3_995 [label="Assert.AreEqual(c.Field, ''Field'')", span="2153-2153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonReader.cs"];
m3_996 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2147-2147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonReader.cs"];
m3_2955 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1883-1883", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonReader.cs"];
m3_4113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="9650-9650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonReader.cs"];
m3_3335 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonReader.cs"];
m3_1745 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonReader.cs"];
m3_2372 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="874-874", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonReader.cs"];
m3_2167 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonReader.cs"];
m3_4078 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9481-9481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonReader.cs"];
m3_4079 [label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="9483-9483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonReader.cs"];
m3_4080 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9481-9481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonReader.cs"];
m3_1785 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3841-3841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonReader.cs"];
m3_1786 [label="string json = @''[]''", span="3843-3843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonReader.cs"];
m3_1787 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3845-3849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonReader.cs"];
m3_1788 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3841-3841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonReader.cs"];
m3_2096 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4701-4701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonReader.cs"];
m3_2097 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4703-4703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonReader.cs"];
m3_2098 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4701-4701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonReader.cs"];
m3_2205 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonReader.cs"];
m3_2590 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5811-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonReader.cs"];
m3_2591 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5813-5813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonReader.cs"];
m3_2592 [label="Assert.AreEqual(123456789876543.21m, d)", span="5814-5814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonReader.cs"];
m3_2593 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5811-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonReader.cs"];
m3_273 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="713-713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonReader.cs"];
m3_274 [label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="715-715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonReader.cs"];
m3_275 [label="c.UpdatedBy_Id = Guid.NewGuid()", span="716-716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonReader.cs"];
m3_276 [label="string json = JsonConvert.SerializeObject(c)", span="718-718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonReader.cs"];
m3_277 [label="Assert.AreEqual(''{}'', json)", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonReader.cs"];
m3_278 [label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="722-722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonReader.cs"];
m3_279 [label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonReader.cs"];
m3_280 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="713-713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonReader.cs"];
m3_747 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="430-430", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonReader.cs"];
m3_4103 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="9520-9520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonReader.cs"];
m3_1356 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonReader.cs"];
m3_725 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonReader.cs"];
m3_1297 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2757-2757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonReader.cs"];
m3_1298 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2759-2759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonReader.cs"];
m3_1299 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2760-2760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonReader.cs"];
m3_1300 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2762-2765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonReader.cs"];
m3_1301 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2766-2766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonReader.cs"];
m3_1302 [label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2768-2771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonReader.cs"];
m3_1303 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2773-2773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonReader.cs"];
m3_1304 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2774-2774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonReader.cs"];
m3_1305 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2757-2757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonReader.cs"];
m3_2695 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9700-9700", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonReader.cs"];
m3_4165 [label="Value = val", span="9702-9702", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonReader.cs"];
m3_4166 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9700-9700", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonReader.cs"];
m3_1540 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3281-3281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonReader.cs"];
m3_1541 [label="TestProperty1 = testProperty1", span="3283-3283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonReader.cs"];
m3_1542 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3281-3281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonReader.cs"];
m3_2198 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonReader.cs"];
m3_2674 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5967-5967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonReader.cs"];
m3_2689 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6047-6047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonReader.cs"];
m3_2690 [label="var data = new DecimalTest(decimal.MinValue)", span="6049-6049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonReader.cs"];
m3_2691 [label="var json = JsonConvert.SerializeObject(data)", span="6050-6050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonReader.cs"];
m3_2692 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="6051-6051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonReader.cs"];
m3_2693 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="6053-6053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonReader.cs"];
m3_2694 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6047-6047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonReader.cs"];
m3_746 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonReader.cs"];
m3_2848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6497-6497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonReader.cs"];
m3_2849 [label="throw new NotImplementedException();", span="6499-6499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonReader.cs"];
m3_2850 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6497-6497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonReader.cs"];
m3_3561 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8094-8094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonReader.cs"];
m3_3562 [label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="8096-8099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonReader.cs"];
m3_3563 [label="Assert.AreEqual(123, result.Key)", span="8101-8101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonReader.cs"];
m3_3564 [label="Assert.AreEqual(''test value'', result.Value)", span="8102-8102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonReader.cs"];
m3_3565 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8094-8094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonReader.cs"];
m3_2117 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonReader.cs"];
m3_1315 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2796-2796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1316 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2798-2798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1317 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2799-2799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1321 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2806-2806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1322 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2807-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1318 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2801-2801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1319 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2802-2802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1320 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2804-2804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1323 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2796-2796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1865 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3995-3995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonReader.cs"];
m3_1866 [label="List<String> strings = new List<String>()", span="3997-3997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonReader.cs"];
m3_1867 [label="strings.Add(''str_1'')", span="3999-3999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonReader.cs"];
m3_1868 [label="strings.Add(''str_2'')", span="4000-4000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonReader.cs"];
m3_1869 [label="strings.Add(''str_3'')", span="4001-4001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonReader.cs"];
m3_1870 [label="string json = JsonConvert.SerializeObject(strings)", span="4003-4003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonReader.cs"];
m3_1871 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="4004-4004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonReader.cs"];
m3_1872 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3995-3995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonReader.cs"];
m3_2505 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="799-799", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonReader.cs"];
m3_446 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m3_933 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonReader.cs"];
m3_2790 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="JsonReader.cs"];
m3_978 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonReader.cs"];
m3_2172 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonReader.cs"];
m3_720 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonReader.cs"];
m3_721 [label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1563-1563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonReader.cs"];
m3_722 [label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1565-1565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonReader.cs"];
m3_723 [label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonReader.cs"];
m3_724 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1561-1561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonReader.cs"];
m3_1226 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonReader.cs"];
m3_750 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1632-1632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonReader.cs"];
m3_751 [label="var original = new Foo1 { foo = ''value'' }", span="1634-1634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonReader.cs"];
m3_752 [label="var json = JsonConvert.SerializeObject(original)", span="1635-1635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonReader.cs"];
m3_753 [label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1636-1636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonReader.cs"];
m3_754 [label="Assert.AreEqual(expectedJson, json)", span="1637-1637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonReader.cs"];
m3_755 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1632-1632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonReader.cs"];
m3_1622 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3486-3486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonReader.cs"];
m3_1623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3486-3486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonReader.cs"];
m3_971 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JsonReader.cs"];
m3_3419 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7743-7743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonReader.cs"];
m3_3420 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7745-7749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonReader.cs"];
m3_3421 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7751-7751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonReader.cs"];
m3_3422 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7753-7756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonReader.cs"];
m3_3423 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7758-7758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonReader.cs"];
m3_3424 [label="Assert.AreEqual(2, dic2.Count)", span="7760-7760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonReader.cs"];
m3_3425 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7761-7761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonReader.cs"];
m3_3426 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7762-7762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonReader.cs"];
m3_3427 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7743-7743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonReader.cs"];
m3_3656 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8409-8409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3657 [label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8411-8411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3658 [label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8412-8412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3659 [label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8413-8413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3663 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture,\r\n                Formatting = Formatting.Indented\r\n            })", span="8424-8429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3660 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8415-8419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3661 [label="StringWriter sw = new StringWriter()", span="8421-8421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3664 [label="serializer.Serialize(jsonWriter, dates)", span="8430-8430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3662 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8422-8422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3668 [label="string json = sw.ToString()", span="8436-8436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3665 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="8432-8432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3666 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8433-8433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3667 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8434-8434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3669 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8438-8441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_3670 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8409-8409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonReader.cs"];
m3_2639 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5913-5913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonReader.cs"];
m3_2640 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5913-5913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonReader.cs"];
m3_444 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonReader.cs"];
m3_52 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonReader.cs"];
m3_53 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['']''),\r\n                @''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 3.'')", span="244-246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonReader.cs"];
m3_54 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="242-242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonReader.cs"];
m3_1275 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonReader.cs"];
m3_3899 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9050-9050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonReader.cs"];
m3_3900 [label="throw new InvalidCastException();", span="9052-9052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonReader.cs"];
m3_3901 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9050-9050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonReader.cs"];
m3_2387 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5383-5383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2388 [label="throw new NotImplementedException();", span="5385-5385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2389 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5383-5383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2953 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonReader.cs"];
m3_1040 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonReader.cs"];
m3_1041 [label="string json = @''[''''vvv\jvvv'''']''", span="2303-2303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonReader.cs"];
m3_1042 [label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2305-2305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonReader.cs"];
m3_1043 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonReader.cs"];
m3_4024 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9330-9330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4025 [label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="9332-9332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4026 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9333-9333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4028 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="9339-9339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4031 [label="Assert.AreEqual(dt, dt1)", span="9345-9345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4036 [label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="9356-9356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4027 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9334-9337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4032 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="9347-9351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4030 [label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="9343-9343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4029 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9341-9341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4033 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9352-9352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4034 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9354-9354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4035 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="9355-9355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_4037 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9330-9330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonReader.cs"];
m3_521 [label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonReader.cs"];
m3_3890 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9035-9035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonReader.cs"];
m3_3891 [label="throw new InvalidCastException();", span="9037-9037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonReader.cs"];
m3_3892 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9035-9035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonReader.cs"];
m3_851 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1881-1881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_852 [label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1883-1889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_853 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1891-1891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_854 [label="baseWith.Virtual = ''Virtual2!''", span="1892-1892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_855 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1893-1893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_856 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1894-1894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_857 [label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1896-1896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_858 [label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1898-1903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_859 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1881-1881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonReader.cs"];
m3_1453 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3062-3062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonReader.cs"];
m3_1454 [label="JaggedArray aa = new JaggedArray()", span="3064-3064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonReader.cs"];
m3_1455 [label="aa.Before = ''Before!''", span="3065-3065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonReader.cs"];
m3_1456 [label="aa.After = ''After!''", span="3066-3066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonReader.cs"];
m3_1457 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="3067-3067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonReader.cs"];
m3_1458 [label="string json = JsonConvert.SerializeObject(aa)", span="3069-3069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonReader.cs"];
m3_1459 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="3071-3071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonReader.cs"];
m3_1460 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3062-3062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonReader.cs"];
m3_1251 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2684-2684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonReader.cs"];
m3_1252 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2686-2686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonReader.cs"];
m3_1253 [label="string json = JsonConvert.SerializeObject(c)", span="2688-2688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonReader.cs"];
m3_1254 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2690-2690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonReader.cs"];
m3_1255 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="2692-2692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonReader.cs"];
m3_1256 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2693-2693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonReader.cs"];
m3_1257 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2694-2694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonReader.cs"];
m3_1258 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2684-2684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonReader.cs"];
m3_809 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1717-1717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonReader.cs"];
m3_822 [label="_name = name", span="1719-1719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonReader.cs"];
m3_823 [label="_number = number", span="1720-1720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonReader.cs"];
m3_824 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1717-1717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonReader.cs"];
m3_1847 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3944-3944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonReader.cs"];
m3_1848 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3946-3957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonReader.cs"];
m3_1849 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3944-3944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonReader.cs"];
m3_1581 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3378-3378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1582 [label="string json = ''{}''", span="3380-3380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1583 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3382-3382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1584 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3383-3383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1585 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3384-3384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1586 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3385-3385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1587 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3386-3386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_1588 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3378-3378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_2882 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6590-6590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonReader.cs"];
m3_2883 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6592-6592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonReader.cs"];
m3_2884 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6594-6594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonReader.cs"];
m3_2885 [label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6595-6599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonReader.cs"];
m3_2886 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6601-6601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonReader.cs"];
m3_2887 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6602-6602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonReader.cs"];
m3_2888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6590-6590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonReader.cs"];
m3_776 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonReader.cs"];
m3_354 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonReader.cs"];
m3_2749 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="6157-6157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonReader.cs"];
m3_1702 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonReader.cs"];
m3_2675 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5944-5944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonReader.cs"];
m3_652 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="225-225", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonReader.cs"];
m3_2351 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="5250-5250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonReader.cs"];
m3_2491 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5592-5592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonReader.cs"];
m3_2492 [label="Prop1 = new byte[0]", span="5594-5594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonReader.cs"];
m3_2493 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5592-5592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonReader.cs"];
m3_1055 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonReader.cs"];
m3_2860 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6527-6527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonReader.cs"];
m3_2861 [label="throw new NotImplementedException();", span="6529-6529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonReader.cs"];
m3_2862 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6527-6527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonReader.cs"];
m3_1764 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3808-3808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonReader.cs"];
m3_1765 [label="string json = @''[]''", span="3810-3810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonReader.cs"];
m3_1766 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3812-3814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonReader.cs"];
m3_1767 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3808-3808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonReader.cs"];
m3_3099 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1694-1694", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonReader.cs"];
m3_4097 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9508-9508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonReader.cs"];
m3_4098 [label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="9510-9513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonReader.cs"];
m3_4099 [label="string output = JsonConvert.SerializeObject(instance)", span="9514-9514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonReader.cs"];
m3_4100 [label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="9515-9515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonReader.cs"];
m3_4101 [label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="9517-9517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonReader.cs"];
m3_4102 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9508-9508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonReader.cs"];
m3_1227 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonReader.cs"];
m3_1662 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonReader.cs"];
m3_2994 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6832-6832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonReader.cs"];
m3_2995 [label="return new ReflectionValueProvider(member);", span="6834-6834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonReader.cs"];
m3_2996 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6832-6832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonReader.cs"];
m3_840 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1853-1853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonReader.cs"];
m3_841 [label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1855-1861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonReader.cs"];
m3_842 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1863-1863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonReader.cs"];
m3_843 [label="baseWith.Virtual = ''Virtual2!''", span="1864-1864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonReader.cs"];
m3_844 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1865-1865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonReader.cs"];
m3_845 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1866-1866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonReader.cs"];
m3_846 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1868-1868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonReader.cs"];
m3_847 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1870-1877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonReader.cs"];
m3_848 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1853-1853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonReader.cs"];
m3_3825 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8893-8893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonReader.cs"];
m3_3826 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8895-8910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonReader.cs"];
m3_3827 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8912-8917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonReader.cs"];
m3_3828 [label="Assert.AreEqual(2, people.Count)", span="8919-8919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonReader.cs"];
m3_3829 [label="PersonReference john = people[0]", span="8921-8921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonReader.cs"];
m3_3830 [label="PersonReference jane = people[1]", span="8922-8922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonReader.cs"];
m3_3831 [label="Assert.AreEqual(john, jane.Spouse)", span="8924-8924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonReader.cs"];
m3_3832 [label="Assert.AreEqual(jane, john.Spouse)", span="8925-8925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonReader.cs"];
m3_3833 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8893-8893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonReader.cs"];
m3_4152 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonReader.cs"];
m3_319 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="870-870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonReader.cs"];
m3_320 [label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="872-875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonReader.cs"];
m3_321 [label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="877-880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonReader.cs"];
m3_322 [label="Assert.AreEqual(0, l.ChildId)", span="882-882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonReader.cs"];
m3_323 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="870-870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonReader.cs"];
m3_1276 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs"];
m3_1343 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonReader.cs"];
m3_4170 [label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="9720-9720", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonReader.cs"];
m3_4171 [label="Value = value", span="9722-9722", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonReader.cs"];
m3_4172 [label="Constructor = ''Public Paramatized''", span="9723-9723", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonReader.cs"];
m3_4173 [label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="9720-9720", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonReader.cs"];
m3_1058 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2324-2324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1059 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="2326-2326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1060 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="2329-2329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1061 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="2330-2330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1063 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2334-2334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1064 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2336-2336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1062 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2333-2333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1067 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2341-2341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1066 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2339-2339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1065 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="2338-2338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_1068 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2324-2324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonReader.cs"];
m3_282 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JsonReader.cs"];
m3_2103 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonReader.cs"];
m3_2125 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonReader.cs"];
m3_4067 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9455-9455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonReader.cs"];
m3_4068 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9455-9455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonReader.cs"];
m3_2548 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5718-5718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_2549 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5720-5723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_2550 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5725-5725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_2551 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5727-5727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_2552 [label="JsonSerializer serializer = new JsonSerializer()", span="5729-5729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_2554 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5732-5732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_2553 [label="serializer.DateParseHandling = DateParseHandling.None", span="5730-5730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_2555 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_2556 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5735-5735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_2557 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5718-5718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonReader.cs"];
m3_1286 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonReader.cs"];
m3_2903 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6679-6679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonReader.cs"];
m3_2904 [label="Exceptions = new List<Exception>()", span="6681-6681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonReader.cs"];
m3_2905 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6679-6679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonReader.cs"];
m3_942 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonReader.cs"];
m3_2126 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4746-4746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonReader.cs"];
m3_2127 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4748-4748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonReader.cs"];
m3_2128 [label="modelStateDictionary.Add(''key'', ''value'')", span="4749-4749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonReader.cs"];
m3_2129 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4751-4751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonReader.cs"];
m3_2130 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4753-4753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonReader.cs"];
m3_2131 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4755-4755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonReader.cs"];
m3_2132 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4756-4756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonReader.cs"];
m3_2133 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4757-4757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonReader.cs"];
m3_2134 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4746-4746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonReader.cs"];
m3_4006 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9279-9279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonReader.cs"];
m3_4007 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9281-9281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonReader.cs"];
m3_4008 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9282-9282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonReader.cs"];
m3_4010 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9289-9292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonReader.cs"];
m3_4013 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9300-9300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonReader.cs"];
m3_4009 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9283-9287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonReader.cs"];
m3_4012 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9298-9298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonReader.cs"];
m3_4011 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9294-9296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonReader.cs"];
m3_4014 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9279-9279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonReader.cs"];
m3_2991 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="393-393", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonReader.cs"];
m3_3301 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7502-7502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3302 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7504-7504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3303 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7502-7502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_3395 [label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonReader.cs"];
m3_770 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1658-1658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_771 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1660-1660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_772 [label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1661-1661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_773 [label="Assert.IsNotNull(deserialized.foo)", span="1662-1662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_774 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1663-1663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_775 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1658-1658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonReader.cs"];
m3_2339 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonReader.cs"];
m3_2740 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6140-6140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonReader.cs"];
m3_2741 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="6142-6142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonReader.cs"];
m3_2742 [label="Assert.IsNull(dateTime)", span="6144-6144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonReader.cs"];
m3_2743 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6140-6140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonReader.cs"];
m3_3121 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7136-7136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonReader.cs"];
m3_3122 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Unexpected character encountered while parsing value: t. Path 'PreProperty', line 2, position 18.'')", span="7138-7146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonReader.cs"];
m3_3123 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7136-7136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonReader.cs"];
m3_3671 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8446-8446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonReader.cs"];
m3_3672 [label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="8448-8448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonReader.cs"];
m3_3673 [label="string json = JsonConvert.SerializeObject(tuple)", span="8449-8449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonReader.cs"];
m3_3674 [label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="8450-8450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonReader.cs"];
m3_3675 [label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="8452-8452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonReader.cs"];
m3_3676 [label="Assert.AreEqual(500, tuple2.Item1)", span="8453-8453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonReader.cs"];
m3_3677 [label="Assert.AreEqual(20, tuple2.Item2)", span="8454-8454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonReader.cs"];
m3_3678 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8446-8446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonReader.cs"];
m3_287 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="774-774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_288 [label="FaqItem c = new FaqItem()", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_289 [label="c.FaqId = 1", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_290 [label="c.Sections.Add(new FaqSection())", span="778-778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_291 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_292 [label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="782-789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_293 [label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_294 [label="Assert.AreEqual(1, c2.FaqId)", span="793-793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_295 [label="Assert.AreEqual(1, c2.Sections.Count)", span="794-794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_296 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="774-774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonReader.cs"];
m3_3727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8571-8571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3728 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8573-8577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3729 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8579-8579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3733 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8584-8584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3730 [label="Assert.AreEqual(float.NaN, floats[0])", span="8580-8580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3731 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8581-8581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3732 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8582-8582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3734 [label="Assert.AreEqual(float.NaN, doubles[0])", span="8585-8585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3735 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8586-8586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3736 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8587-8587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_3737 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8571-8571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonReader.cs"];
m3_1277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2724-2724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonReader.cs"];
m3_1278 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2726-2726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonReader.cs"];
m3_1279 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2727-2727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonReader.cs"];
m3_1283 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2734-2734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonReader.cs"];
m3_1284 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2735-2735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonReader.cs"];
m3_1280 [label="string json = JsonConvert.SerializeObject(m1)", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonReader.cs"];
m3_1281 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2730-2730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonReader.cs"];
m3_1282 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2732-2732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonReader.cs"];
m3_1285 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2724-2724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonReader.cs"];
m3_2076 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonReader.cs"];
m3_135 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonReader.cs"];
m3_136 [label="IgnoredProperty p = JsonConvert.DeserializeObject<IgnoredProperty>(''{'StringProp1':[1,2,3],'StringProp2':{}}'')", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonReader.cs"];
m3_137 [label="Assert.IsNull(p.StringProp1)", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonReader.cs"];
m3_138 [label="Assert.IsNull(p.StringProp2)", span="395-395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonReader.cs"];
m3_139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonReader.cs"];
m3_1894 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4050-4050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1895 [label="Foo f = new Foo()", span="4052-4052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1896 [label="f.Bars.Add(new Bar { Id = 0 })", span="4053-4053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1897 [label="f.Bars.Add(new Bar { Id = 1 })", span="4054-4054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1898 [label="f.Bars.Add(new Bar { Id = 2 })", span="4055-4055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1899 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="4057-4057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1900 [label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="4058-4064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1901 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="4066-4066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1902 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="4067-4067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1903 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="4068-4068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1904 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="4069-4069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1905 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="4070-4070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_1906 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4050-4050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonReader.cs"];
m3_4045 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9382-9382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonReader.cs"];
m3_4046 [label="MyObservableObject o = new MyObservableObject\r\n            {\r\n                TestString = ''Test string''\r\n            }", span="9384-9387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonReader.cs"];
m3_4047 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="9389-9389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonReader.cs"];
m3_4048 [label="StringAssert.AreEqual(@''{\r\n  ''''PropertyChanged'''': null,\r\n  ''''TestString'''': ''''Test string''''\r\n}'', json)", span="9390-9393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonReader.cs"];
m3_4049 [label="MyObservableObject o2 = JsonConvert.DeserializeObject<MyObservableObject>(json)", span="9395-9395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonReader.cs"];
m3_4050 [label="Assert.AreEqual(''Test string'', o2.TestString)", span="9396-9396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonReader.cs"];
m3_4051 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9382-9382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonReader.cs"];
m3_1981 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4333-4333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1982 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="4335-4335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1983 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="4337-4337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1984 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="4338-4338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1985 [label="g.MyProperty = ''some value''", span="4340-4340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1986 [label="string json = g.ToJson()", span="4342-4342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1987 [label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="4344-4358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1988 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="4360-4360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1989 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="4361-4361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1990 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4333-4333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonReader.cs"];
m3_1020 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="268-268", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonReader.cs"];
m3_1219 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2630-2630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonReader.cs"];
m3_1220 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2632-2632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonReader.cs"];
m3_1221 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2634-2634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonReader.cs"];
m3_1224 [label="Assert.AreEqual(guid, c.GuidField)", span="2638-2638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonReader.cs"];
m3_1222 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2635-2635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonReader.cs"];
m3_1223 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2637-2637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonReader.cs"];
m3_1225 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2630-2630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonReader.cs"];
m3_2775 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6274-6274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonReader.cs"];
m3_2776 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6276-6280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonReader.cs"];
m3_2777 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6282-6282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonReader.cs"];
m3_2778 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="6289-6292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonReader.cs"];
m3_2779 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6274-6274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonReader.cs"];
m3_367 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="984-984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonReader.cs"];
m3_368 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="984-984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonReader.cs"];
m3_2023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4432-4432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonReader.cs"];
m3_1827 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="942-942", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonReader.cs"];
m3_2087 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonReader.cs"];
m3_4163 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="9696-9696", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonReader.cs"];
m3_4164 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="9696-9696", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonReader.cs"];
m3_2386 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonReader.cs"];
m3_272 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonReader.cs"];
m3_1835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3918-3918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonReader.cs"];
m3_1836 [label="string json = @''{''''Name'''':''''''''}''", span="3920-3920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonReader.cs"];
m3_1837 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3922-3922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonReader.cs"];
m3_1838 [label="Assert.AreEqual('''', p.Name)", span="3923-3923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonReader.cs"];
m3_1839 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3918-3918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonReader.cs"];
m3_3339 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonReader.cs"];
m3_1357 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2863-2863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonReader.cs"];
m3_1358 [label="string json", span="2865-2865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonReader.cs"];
m3_1359 [label="json = JsonConvert.SerializeObject((int?)null)", span="2867-2867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonReader.cs"];
m3_1360 [label="Assert.AreEqual(''null'', json)", span="2868-2868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonReader.cs"];
m3_1361 [label="json = JsonConvert.SerializeObject((int?)1)", span="2870-2870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonReader.cs"];
m3_1362 [label="Assert.AreEqual(''1'', json)", span="2871-2871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonReader.cs"];
m3_1363 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2863-2863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonReader.cs"];
m3_520 [label="Entry System.Globalization.CultureInfo.ToString()", span="0-0", cluster="System.Globalization.CultureInfo.ToString()", file="JsonReader.cs"];
m3_1503 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonReader.cs"];
m3_4052 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", span="9399-9399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", file="JsonReader.cs"];
m3_1136 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2475-2475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonReader.cs"];
m3_1137 [label="string json = JsonConvert.SerializeObject(null)", span="2477-2477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonReader.cs"];
m3_1138 [label="Assert.AreEqual(''null'', json)", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonReader.cs"];
m3_1139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2475-2475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonReader.cs"];
m3_3571 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8125-8125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonReader.cs"];
m3_3572 [label="m_Item1 = item1", span="8127-8127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonReader.cs"];
m3_3573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8125-8125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonReader.cs"];
m3_4084 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="9476-9476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonReader.cs"];
m3_355 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="936-936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonReader.cs"];
m3_356 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="938-938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonReader.cs"];
m3_357 [label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="940-940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonReader.cs"];
m3_358 [label="Assert.AreEqual(true, childClass.IsTransient)", span="941-941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonReader.cs"];
m3_359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="936-936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonReader.cs"];
m3_105 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonReader.cs"];
m3_2543 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="787-787", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonReader.cs"];
m3_3154 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7211-7211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonReader.cs"];
m3_3155 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7213-7213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonReader.cs"];
m3_3156 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7214-7214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonReader.cs"];
m3_3157 [label="Assert.AreEqual('''', dict[''k1''])", span="7216-7216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonReader.cs"];
m3_3158 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="7217-7217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonReader.cs"];
m3_3159 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7211-7211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonReader.cs"];
m3_4044 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="9360-9360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonReader.cs"];
m3_818 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonReader.cs"];
m3_297 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonReader.cs"];
m3_390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1031-1031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonReader.cs"];
m3_391 [label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1033-1038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonReader.cs"];
m3_392 [label="var json = JsonConvert.SerializeObject(input)", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonReader.cs"];
m3_394 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="1043-1043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonReader.cs"];
m3_395 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="1044-1044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonReader.cs"];
m3_396 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="1045-1045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonReader.cs"];
m3_393 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="1041-1041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonReader.cs"];
m3_397 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1031-1031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonReader.cs"];
m3_447 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonReader.cs"];
m3_985 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2136-2136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonReader.cs"];
m3_986 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonReader.cs"];
m3_987 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="2140-2140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonReader.cs"];
m3_988 [label="Assert.AreEqual(c.Field, ''Field'')", span="2142-2142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonReader.cs"];
m3_989 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="2143-2143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonReader.cs"];
m3_990 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2136-2136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonReader.cs"];
m3_2199 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonReader.cs"];
m3_3893 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9040-9040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonReader.cs"];
m3_3894 [label="throw new InvalidCastException();", span="9042-9042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonReader.cs"];
m3_3895 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9040-9040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonReader.cs"];
m3_1331 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="JsonReader.cs"];
m3_1543 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3293-3293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonReader.cs"];
m3_1544 [label="string json = ''{ 'testProperty1': 'value' }''", span="3297-3297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonReader.cs"];
m3_1545 [label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="3298-3298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonReader.cs"];
m3_1546 [label="Assert.Fail()", span="3300-3300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonReader.cs"];
m3_1547 [label=JsonSerializationException, span="3302-3302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonReader.cs"];
m3_1548 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="3304-3304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonReader.cs"];
m3_1549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3293-3293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonReader.cs"];
m3_269 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="JsonReader.cs"];
m3_153 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonReader.cs"];
m3_154 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new DictionaryWithNoNull()); }, ''Cannot write a null value for property 'Name'. Property requires a non-null value. Path ''.'')", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonReader.cs"];
m3_155 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonReader.cs"];
m3_757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1641-1641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonReader.cs"];
m3_758 [label="var json = @''{''''foo'''':''''value''''}''", span="1643-1643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonReader.cs"];
m3_759 [label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1644-1644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonReader.cs"];
m3_760 [label="Assert.AreEqual(''value'', deserialized.foo)", span="1645-1645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonReader.cs"];
m3_761 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1641-1641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonReader.cs"];
m3_104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="345-345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonReader.cs"];
m3_106 [label="Bars = new List<string>()", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonReader.cs"];
m3_107 [label="bars != null", span="348-348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonReader.cs"];
m3_108 [label="Bars.AddRange(bars)", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonReader.cs"];
m3_109 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="345-345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonReader.cs"];
m3_3546 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JsonReader.cs"];
m3_1071 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2346-2346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1072 [label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2348-2356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1073 [label="MemoryStream ms = new MemoryStream()", span="2358-2358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1075 [label="s.WriteObject(ms, testDates)", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1079 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1074 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2359-2359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1076 [label="ms.Seek(0, SeekOrigin.Begin)", span="2361-2361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1077 [label="StreamReader sr = new StreamReader(ms)", span="2362-2362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1078 [label="string expected = sr.ReadToEnd()", span="2364-2364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1080 [label="Assert.AreEqual(expected, result)", span="2367-2367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_1081 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2346-2346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonReader.cs"];
m3_361 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonReader.cs"];
m3_362 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonReader.cs"];
m3_363 [label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonReader.cs"];
m3_364 [label="Assert.AreEqual(true, childClass.IsTransient)", span="960-960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonReader.cs"];
m3_365 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonReader.cs"];
m3_1697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3669-3669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1698 [label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3671-3679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1699 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3681-3681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1700 [label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3683-3695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1701 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3669-3669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonReader.cs"];
m3_3321 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonReader.cs"];
m3_4177 [label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="9763-9763", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonReader.cs"];
m3_4178 [label="Value = value", span="9765-9765", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonReader.cs"];
m3_4179 [label="Constructor = ''Public Paramatized''", span="9766-9766", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonReader.cs"];
m3_4180 [label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="9763-9763", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonReader.cs"];
m3_1364 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2875-2875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonReader.cs"];
m3_1365 [label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2877-2882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonReader.cs"];
m3_1366 [label="string json", span="2884-2884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonReader.cs"];
m3_1367 [label="json = JsonConvert.SerializeObject(personRaw)", span="2886-2886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonReader.cs"];
m3_1368 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2887-2887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonReader.cs"];
m3_1369 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2875-2875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonReader.cs"];
m3_260 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonReader.cs"];
m3_261 [label="Version v = new Version(1, 2, 3, 4)", span="642-642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonReader.cs"];
m3_262 [label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="644-656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonReader.cs"];
m3_263 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="658-661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonReader.cs"];
m3_264 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="663-665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonReader.cs"];
m3_265 [label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="667-689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonReader.cs"];
m3_266 [label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="691-694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonReader.cs"];
m3_267 [label="Assert.AreEqual(''Name!'', c2.Name)", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonReader.cs"];
m3_268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonReader.cs"];
m3_1214 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2621-2621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonReader.cs"];
m3_1215 [label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2623-2623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonReader.cs"];
m3_1216 [label="string json = JsonConvert.SerializeObject(date)", span="2625-2625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonReader.cs"];
m3_1217 [label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2626-2626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonReader.cs"];
m3_1218 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2621-2621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonReader.cs"];
m3_1495 [label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="3161-3165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonReader.cs"];
m3_1494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3159-3159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonReader.cs"];
m3_1496 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="3167-3167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonReader.cs"];
m3_1497 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="3170-3170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonReader.cs"];
m3_1498 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="3173-3173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonReader.cs"];
m3_1499 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="3176-3176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonReader.cs"];
m3_1500 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="3177-3177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonReader.cs"];
m3_1501 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="3178-3178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonReader.cs"];
m3_1502 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3159-3159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonReader.cs"];
m3_2065 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4590-4590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonReader.cs"];
m3_1250 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonReader.cs"];
m3_1930 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4123-4123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1931 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="4125-4175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1932 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="4177-4177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1933 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="4180-4180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1934 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="4183-4183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1935 [label=results, span="4184-4184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1937 [label="searchResults.Add(searchResult)", span="4187-4187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1938 [label="Assert.AreEqual(2, searchResults.Count)", span="4198-4198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1939 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="4199-4199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1940 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="4200-4200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1936 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="4186-4186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_1941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4123-4123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonReader.cs"];
m3_2633 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5858-5858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonReader.cs"];
m3_2931 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6732-6732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2932 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6734-6741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2933 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6742-6742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2936 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6753-6753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2937 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6754-6754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2938 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6755-6755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2939 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6756-6756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2940 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6757-6757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2934 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6744-6750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2935 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6752-6752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6732-6732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs"];
m3_2992 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="763-763", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonReader.cs"];
m3_2902 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6632-6632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonReader.cs"];
m3_777 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_778 [label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1669-1669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_779 [label="var json = JsonConvert.SerializeObject(original)", span="1670-1670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_780 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1671-1671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_781 [label="Assert.AreEqual(expectedJson, json)", span="1672-1672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_782 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonReader.cs"];
m3_2930 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonReader.cs"];
m3_3170 [label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonReader.cs"];
m3_17 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonReader.cs"];
m3_1204 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonReader.cs"];
m3_3680 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8464-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonReader.cs"];
m3_3681 [label="StringWriter sw = new StringWriter()", span="8466-8466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonReader.cs"];
m3_3682 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8467-8467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonReader.cs"];
m3_3686 [label="string json = sw.ToString()", span="8478-8478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonReader.cs"];
m3_3683 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="8469-8473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonReader.cs"];
m3_3684 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8474-8474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonReader.cs"];
m3_3685 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8476-8476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonReader.cs"];
m3_3687 [label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8480-8482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonReader.cs"];
m3_3688 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8464-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonReader.cs"];
m3_861 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1907-1907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonReader.cs"];
m3_862 [label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1909-1915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonReader.cs"];
m3_863 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1917-1917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonReader.cs"];
m3_864 [label="baseWith.Virtual = ''Virtual2!''", span="1918-1918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonReader.cs"];
m3_865 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1919-1919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonReader.cs"];
m3_866 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1920-1920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonReader.cs"];
m3_867 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1922-1922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonReader.cs"];
m3_868 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1924-1933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonReader.cs"];
m3_869 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1907-1907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonReader.cs"];
m3_4104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9528-9528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonReader.cs"];
m3_4105 [label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="9530-9568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonReader.cs"];
m3_4106 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                    JsonMessage,\r\n                    new MailAddressReadConverter(),\r\n                    new AttachmentReadConverter(),\r\n                    new EncodingReadConverter());\r\n            },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 14.'')", span="9570-9578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonReader.cs"];
m3_4107 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9528-9528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonReader.cs"];
m3_2441 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5474-5474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonReader.cs"];
m3_2442 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5476-5476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonReader.cs"];
m3_2443 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5478-5478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonReader.cs"];
m3_2444 [label="Assert.AreEqual(''First'', cc.First)", span="5479-5479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonReader.cs"];
m3_2445 [label="Assert.AreEqual(2, cc.Second)", span="5480-5480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonReader.cs"];
m3_2446 [label="Assert.AreEqual(null, cc.Ignored)", span="5481-5481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonReader.cs"];
m3_2447 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5474-5474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonReader.cs"];
m3_2530 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5656-5656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonReader.cs"];
m3_2954 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="148-148", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonReader.cs"];
m3_3062 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7003-7003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonReader.cs"];
m3_3063 [label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ='''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7005-7012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonReader.cs"];
m3_3064 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                });\r\n            }, ''Error reading bytes. Unexpected token: PropertyName. Path 'EncryptedPassword.$value', line 6, position 13.'')", span="7014-7020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonReader.cs"];
m3_3065 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7003-7003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonReader.cs"];
m3_1703 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3699-3699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1704 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3701-3713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1705 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3715-3715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1706 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3717-3717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1707 [label="Assert.AreEqual(2, content.Children.Count)", span="3718-3718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1708 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3719-3719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1709 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3720-3720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonReader.cs"];
m3_1710 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3699-3699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonReader.cs"];
m3_3705 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8516-8516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonReader.cs"];
m3_3706 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8518-8518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonReader.cs"];
m3_3707 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8520-8520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonReader.cs"];
m3_3709 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8524-8524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonReader.cs"];
m3_3708 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8522-8522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonReader.cs"];
m3_3710 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8516-8516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonReader.cs"];
m3_3338 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonReader.cs"];
m3_518 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonReader.cs"];
m3_2594 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5818-5818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonReader.cs"];
m3_2595 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5820-5820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonReader.cs"];
m3_2596 [label="Assert.AreEqual(123456789876543.21m, d)", span="5821-5821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonReader.cs"];
m3_2597 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5818-5818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonReader.cs"];
m3_1580 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonReader.cs"];
m3_2166 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonReader.cs"];
m3_2727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6118-6118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonReader.cs"];
m3_2728 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="6120-6125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonReader.cs"];
m3_2729 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="6127-6127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonReader.cs"];
m3_2730 [label="Assert.AreEqual(40, p.Age)", span="6128-6128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonReader.cs"];
m3_2731 [label="Assert.AreEqual(44.4, p.Height)", span="6129-6129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonReader.cs"];
m3_2732 [label="Assert.AreEqual(4m, p.Price)", span="6130-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonReader.cs"];
m3_2733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6118-6118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonReader.cs"];
m3_2542 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonReader.cs"];
m3_151 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonReader.cs"];
m3_2696 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6057-6057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonReader.cs"];
m3_2697 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="6059-6059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonReader.cs"];
m3_2698 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="6060-6060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonReader.cs"];
m3_2699 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6057-6057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonReader.cs"];
m3_3220 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7321-7321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonReader.cs"];
m3_3221 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="7323-7323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonReader.cs"];
m3_3222 [label="Assert.IsNull(b)", span="7324-7324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonReader.cs"];
m3_3223 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7321-7321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonReader.cs"];
m3_1324 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonReader.cs"];
m3_3860 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonReader.cs"];
m3_299 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_300 [label="FaqItemProxy c = new FaqItemProxy()", span="800-800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_301 [label="c.FaqId = 1", span="801-801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_302 [label="c.Sections.Add(new FaqSection())", span="802-802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_303 [label="c.IsProxy = true", span="803-803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_304 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="805-805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_305 [label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="807-815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_306 [label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="817-817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_307 [label="Assert.AreEqual(1, c2.FaqId)", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_308 [label="Assert.AreEqual(1, c2.Sections.Count)", span="820-820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_309 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonReader.cs"];
m3_2354 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonReader.cs"];
m3_2355 [label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="5312-5316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonReader.cs"];
m3_2356 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="5318-5318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonReader.cs"];
m3_2357 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="5319-5319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonReader.cs"];
m3_2358 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonReader.cs"];
m3_2461 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5515-5515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonReader.cs"];
m3_2462 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5517-5517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonReader.cs"];
m3_2463 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5519-5519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonReader.cs"];
m3_2464 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5520-5520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonReader.cs"];
m3_2465 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5522-5522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonReader.cs"];
m3_2466 [label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5524-5527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonReader.cs"];
m3_2467 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5529-5530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonReader.cs"];
m3_2468 [label="Assert.AreEqual(2, newDictionary.Count)", span="5532-5532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonReader.cs"];
m3_2469 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5515-5515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonReader.cs"];
m3_4190 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9828-9828", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonReader.cs"];
m3_3010 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9817-9817", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonReader.cs"];
m3_4191 [label="z = 3", span="9830-9830", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonReader.cs"];
m3_4192 [label="Exit Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9828-9828", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonReader.cs"];
m3_2206 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4917-4917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2207 [label="Person person = new Person()", span="4919-4919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2208 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4920-4920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2209 [label="person.LastModified = person.BirthDate", span="4921-4921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2210 [label="person.Department = ''Department!''", span="4922-4922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2211 [label="person.Name = ''Name!''", span="4923-4923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2215 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4933-4933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2212 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4925-4925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2213 [label="string dateTimeOffsetText", span="4926-4926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2221 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4964-4964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2214 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4928-4928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2217 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4936-4959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2216 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4935-4935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2218 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4961-4961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2219 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4962-4962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2220 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4963-4963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2222 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4965-4965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2223 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4966-4966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2224 [label="Assert.AreEqual(null, o2._nullableInt)", span="4967-4967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_2225 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4917-4917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonReader.cs"];
m3_3550 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonReader.cs"];
m3_3762 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8663-8663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonReader.cs"];
m3_3763 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8665-8665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonReader.cs"];
m3_3764 [label="var settings = new JsonSerializerSettings()", span="8666-8666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonReader.cs"];
m3_3766 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8668-8668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonReader.cs"];
m3_3765 [label="var serialiser = JsonSerializer.Create(settings)", span="8667-8667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonReader.cs"];
m3_3767 [label="Assert.AreEqual(1234567890.123456m, d)", span="8670-8670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonReader.cs"];
m3_3768 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8663-8663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonReader.cs"];
m3_2353 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JsonReader.cs"];
m3_167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonReader.cs"];
m3_168 [label="var person = new\r\n            {\r\n                Name = ''James'',\r\n                Age = 1,\r\n                RoleNames = new Dictionary<string, bool>\r\n                {\r\n                    { ''IsAdmin'', true },\r\n                    { ''IsModerator'', false }\r\n                }\r\n            }", span="458-467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonReader.cs"];
m3_169 [label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DictionaryKeyContractResolver()\r\n            })", span="469-472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonReader.cs"];
m3_170 [label="Assert.AreEqual(@''{\r\n  ''''NAME'''': ''''James'''',\r\n  ''''AGE'''': 1,\r\n  ''''ROLENAMES'''': {\r\n    ''''IsAdmin'''': true,\r\n    ''''IsModerator'''': false\r\n  }\r\n}'', json)", span="474-481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonReader.cs"];
m3_171 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonReader.cs"];
m3_2421 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5435-5435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2422 [label="var reference = new Dictionary<string, object>()", span="5437-5437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2423 [label="reference.Add(''$ref'', null)", span="5438-5438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2424 [label="reference.Add(''$id'', null)", span="5439-5439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2425 [label="reference.Add(''blah'', ''blah!'')", span="5440-5440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2429 [label="child.Add(''Father'', reference)", span="5445-5445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2426 [label="var child = new Dictionary<string, object>()", span="5442-5442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2427 [label="child.Add(''_id'', 2)", span="5443-5443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2428 [label="child.Add(''Name'', ''Isabell'')", span="5444-5444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2430 [label="string json = JsonConvert.SerializeObject(child)", span="5447-5447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2431 [label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5449-5449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2432 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5451-5451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2433 [label="Assert.AreEqual(3, result.Count)", span="5453-5453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2434 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5454-5454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2435 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5455-5455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2436 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5435-5435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonReader.cs"];
m3_2973 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6802-6802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2974 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6804-6804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2975 [label="JsonSerializer serializer = new JsonSerializer()", span="6806-6806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2980 [label="serializer.Serialize(jsonWriter, test)", span="6813-6813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2976 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="6807-6807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2985 [label="TestObject newObject = (TestObject)serializer.Deserialize(jsonReader)", span="6823-6823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2977 [label="byte[] objectBytes", span="6809-6809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2978 [label="MemoryStream stream = new MemoryStream()", span="6810-6810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2979 [label="JsonWriter jsonWriter = new JsonTextWriter(new StreamWriter(stream))", span="6811-6811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2982 [label="objectBytes = stream.ToArray()", span="6816-6816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2981 [label="jsonWriter.Flush()", span="6814-6814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2983 [label="MemoryStream stream = new MemoryStream(objectBytes)", span="6819-6819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2984 [label="JsonReader jsonReader = new JsonTextReader(new StreamReader(stream))", span="6820-6820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2986 [label="Assert.AreEqual(''Test'', newObject.Name)", span="6825-6825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2987 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6826-6826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_2988 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6802-6802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonReader.cs"];
m3_3738 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8591-8591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonReader.cs"];
m3_3739 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8593-8601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonReader.cs"];
m3_3740 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8603-8603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonReader.cs"];
m3_3741 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8605-8608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonReader.cs"];
m3_3742 [label="Assert.AreEqual(expected, actual)", span="8610-8610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonReader.cs"];
m3_3743 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8591-8591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonReader.cs"];
m3_2781 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6296-6296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonReader.cs"];
m3_2782 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6298-6302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonReader.cs"];
m3_2783 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="6304-6304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonReader.cs"];
m3_2785 [label="serializer.WriteObject(ms, cc)", span="6307-6307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonReader.cs"];
m3_2784 [label="MemoryStream ms = new MemoryStream()", span="6306-6306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonReader.cs"];
m3_2786 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="6309-6309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonReader.cs"];
m3_2787 [label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="6311-6311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonReader.cs"];
m3_2788 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6296-6296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonReader.cs"];
m3_26 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonReader.cs"];
m3_27 [label="DateTimeOffset d = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''/Date(1418924498000+0800)/'''''')", span="209-209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonReader.cs"];
m3_28 [label="long initialTicks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(d.DateTime, d.Offset)", span="210-210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonReader.cs"];
m3_29 [label="Assert.AreEqual(1418924498000, initialTicks)", span="212-212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonReader.cs"];
m3_30 [label="Assert.AreEqual(8, d.Offset.Hours)", span="213-213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonReader.cs"];
m3_31 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonReader.cs"];
m3_2204 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonReader.cs"];
m3_1371 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonReader.cs"];
m3_832 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="JsonReader.cs"];
m3_351 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonReader.cs"];
m3_3135 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7162-7162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonReader.cs"];
m3_3136 [label="string json = @''{''''Id'''':null}''", span="7164-7164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonReader.cs"];
m3_3137 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7165-7165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonReader.cs"];
m3_3138 [label="Assert.AreEqual(null, c.Id)", span="7167-7167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonReader.cs"];
m3_3139 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="7169-7169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonReader.cs"];
m3_3140 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7170-7170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonReader.cs"];
m3_3141 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="7172-7172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonReader.cs"];
m3_3142 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7162-7162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonReader.cs"];
m3_3643 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8364-8364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonReader.cs"];
m3_3644 [label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8366-8366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonReader.cs"];
m3_3645 [label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8367-8367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonReader.cs"];
m3_3646 [label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8368-8368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonReader.cs"];
m3_3648 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture\r\n            })", span="8376-8380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonReader.cs"];
m3_3647 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8370-8374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonReader.cs"];
m3_3649 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8382-8385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonReader.cs"];
m3_3650 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8364-8364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonReader.cs"];
m3_2959 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6780-6780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonReader.cs"];
m3_2960 [label="string input = ''http://test.com/%22foo+bar%22''", span="6782-6782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonReader.cs"];
m3_2961 [label="Uri uri = new Uri(input)", span="6783-6783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonReader.cs"];
m3_2962 [label="string json = JsonConvert.SerializeObject(uri)", span="6784-6784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonReader.cs"];
m3_2964 [label="Assert.AreEqual(uri, output)", span="6787-6787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonReader.cs"];
m3_2963 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6785-6785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonReader.cs"];
m3_2965 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6780-6780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonReader.cs"];
m3_3292 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7492-7492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonReader.cs"];
m3_900 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonReader.cs"];
m3_2791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6338-6338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonReader.cs"];
m3_2792 [label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6340-6344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonReader.cs"];
m3_2793 [label="string result = JsonConvert.SerializeObject(cc)", span="6346-6346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonReader.cs"];
m3_2794 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6347-6347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonReader.cs"];
m3_2795 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6338-6338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonReader.cs"];
m3_1993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4370-4370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonReader.cs"];
m3_1994 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="4372-4372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonReader.cs"];
m3_1995 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="4373-4373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonReader.cs"];
m3_1996 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="4375-4375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonReader.cs"];
m3_1997 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="4376-4376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonReader.cs"];
m3_1998 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4370-4370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonReader.cs"];
m3_2958 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonReader.cs"];
m3_3884 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9025-9025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonReader.cs"];
m3_3885 [label="throw new InvalidCastException();", span="9027-9027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonReader.cs"];
m3_3886 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9025-9025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonReader.cs"];
m3_2655 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5960-5960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2656 [label="info.AddValue(''Name'', _name)", span="5962-5962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2657 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5960-5960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_3934 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="9101-9101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonReader.cs"];
m3_2268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5088-5088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2269 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="5090-5100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2270 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5102-5102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2271 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5103-5103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2272 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5104-5104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2273 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5105-5105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2274 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5106-5106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2275 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5107-5107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2276 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5108-5108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2277 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5109-5109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2278 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="5111-5131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2279 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5133-5133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2280 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5134-5134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2281 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5135-5135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2282 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5136-5136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2283 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5137-5137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2284 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5138-5138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2285 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5139-5139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2286 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5140-5140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2287 [label="Assert.AreEqual(4, myB.BB_field1)", span="5142-5142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2288 [label="Assert.AreEqual(4, myB.BB_field2)", span="5143-5143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2289 [label="Assert.AreEqual(3, myB.BB_property1)", span="5144-5144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2290 [label="Assert.AreEqual(3, myB.BB_property2)", span="5145-5145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2291 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5146-5146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2292 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5147-5147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2293 [label="Assert.AreEqual(0, myB.BB_property5)", span="5148-5148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2294 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5149-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2295 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5150-5150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2296 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5151-5151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_2297 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5088-5088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonReader.cs"];
m3_4129 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1929-1929", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonReader.cs"];
m3_3627 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8312-8312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonReader.cs"];
m3_3628 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8314-8314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonReader.cs"];
m3_3629 [label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="8316-8316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonReader.cs"];
m3_3630 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8318-8318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonReader.cs"];
m3_3631 [label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="8320-8320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonReader.cs"];
m3_3632 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8322-8322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonReader.cs"];
m3_3633 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8323-8323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonReader.cs"];
m3_3634 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8312-8312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonReader.cs"];
m3_3926 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9095-9095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonReader.cs"];
m3_3927 [label="throw new InvalidCastException();", span="9097-9097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonReader.cs"];
m3_3928 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9095-9095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonReader.cs"];
m3_2622 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="JsonReader.cs"];
m3_1380 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2903-2903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1381 [label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2905-2914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1382 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="2916-2916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1383 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2918-2918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1384 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2920-2920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1385 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2922-2922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1386 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2923-2923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1387 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2924-2924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1388 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2925-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1389 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2926-2926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1390 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2927-2927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1391 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2928-2928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_1392 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2903-2903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonReader.cs"];
m3_128 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonReader.cs"];
m3_3086 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7061-7061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonReader.cs"];
m3_3087 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="7063-7068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonReader.cs"];
m3_3088 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 6.'')", span="7070-7070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonReader.cs"];
m3_3089 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7061-7061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonReader.cs"];
m3_3208 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7309-7309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonReader.cs"];
m3_3209 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="7311-7311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonReader.cs"];
m3_3210 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7309-7309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonReader.cs"];
m3_2470 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5536-5536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonReader.cs"];
m3_2471 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5538-5538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonReader.cs"];
m3_2472 [label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5540-5544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonReader.cs"];
m3_2473 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5536-5536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonReader.cs"];
m3_727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonReader.cs"];
m3_728 [label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1573-1573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonReader.cs"];
m3_729 [label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1575-1575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonReader.cs"];
m3_730 [label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1577-1577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonReader.cs"];
m3_731 [label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1579-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonReader.cs"];
m3_732 [label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1580-1580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonReader.cs"];
m3_733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonReader.cs"];
m3_3336 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonReader.cs"];
m3_819 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonReader.cs"];
m3_2067 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4579-4579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonReader.cs"];
m3_2373 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5356-5356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2374 [label="throw new NotImplementedException();", span="5358-5358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2375 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5356-5356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2246 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5033-5033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonReader.cs"];
m3_2247 [label="Key = k", span="5035-5035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonReader.cs"];
m3_2248 [label="Value = v", span="5036-5036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonReader.cs"];
m3_2249 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5033-5033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonReader.cs"];
m3_448 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1126-1126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonReader.cs"];
m3_449 [label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonReader.cs"];
m3_450 [label="Assert.AreEqual(null, o.A)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonReader.cs"];
m3_451 [label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="1131-1131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonReader.cs"];
m3_452 [label="Assert.AreEqual(true, o.A)", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonReader.cs"];
m3_453 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1126-1126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonReader.cs"];
m3_2990 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonReader.cs"];
m3_2942 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JsonReader.cs"];
m3_2081 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4681-4681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonReader.cs"];
m3_2082 [label="_innerDictionary.Add(key, value)", span="4683-4683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonReader.cs"];
m3_2083 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4681-4681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonReader.cs"];
m3_3942 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9130-9130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonReader.cs"];
m3_3943 [label="string originalUri = ''https://test.com?m=a%2bb''", span="9132-9132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonReader.cs"];
m3_3944 [label="Uri uriWithPlus = new Uri(originalUri)", span="9134-9134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonReader.cs"];
m3_3947 [label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="9140-9140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonReader.cs"];
m3_3945 [label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="9136-9136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonReader.cs"];
m3_3946 [label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="9138-9138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonReader.cs"];
m3_3948 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9130-9130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonReader.cs"];
m3_4111 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="9581-9581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonReader.cs"];
m3_1711 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3724-3724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonReader.cs"];
m3_1712 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3726-3726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonReader.cs"];
m3_1713 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3728-3728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonReader.cs"];
m3_1714 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3730-3730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonReader.cs"];
m3_1715 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="3731-3731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonReader.cs"];
m3_1716 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3732-3732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonReader.cs"];
m3_1717 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3724-3724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonReader.cs"];
m3_3500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7971-7971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3501 [label="string json = ''{one:1}{}''", span="7973-7973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3502 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="7975-7975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3504 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7977-7977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3509 [label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="7984-7984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3503 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="7976-7976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3507 [label="settings.CheckAdditionalContent = true", span="7982-7982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3508 [label="s = JsonSerializer.Create(settings)", span="7983-7983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3505 [label="Assert.IsNotNull(o)", span="7979-7979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3506 [label="Assert.AreEqual(1, o[''one''])", span="7980-7980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_3510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7971-7971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonReader.cs"];
m3_2481 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5564-5564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonReader.cs"];
m3_2482 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5566-5571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonReader.cs"];
m3_2483 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5573-5577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonReader.cs"];
m3_2484 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5579-5579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonReader.cs"];
m3_2485 [label="Assert.AreEqual(3, d.Count)", span="5581-5581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonReader.cs"];
m3_2486 [label="Assert.IsTrue(d.Contains(''One''))", span="5582-5582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonReader.cs"];
m3_2487 [label="Assert.IsTrue(d.Contains(''2''))", span="5583-5583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonReader.cs"];
m3_2488 [label="Assert.IsTrue(d.Contains(''III''))", span="5584-5584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonReader.cs"];
m3_2489 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5564-5564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonReader.cs"];
m3_3968 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9183-9183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3969 [label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="9185-9185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3970 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9187-9187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3972 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9189-9193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3977 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9203-9207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3982 [label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9214-9218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3971 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9188-9188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3973 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="9195-9195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3976 [label="Assert.AreEqual(dt, dt1)", span="9201-9201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3981 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9212-9212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3975 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9199-9199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3974 [label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="9197-9197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3978 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9208-9208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3979 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9210-9210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3980 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9211-9211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3983 [label="v = (JValue)JToken.ReadFrom(reader)", span="9219-9219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3984 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="9221-9221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3985 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9222-9222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3986 [label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="9223-9223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_3987 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9183-9183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonReader.cs"];
m3_2634 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonReader.cs"];
m3_2635 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonReader.cs"];
m3_2266 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5181-5181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_2303 [label="AA_field1 = f", span="5183-5183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_2304 [label="AA_field2 = f", span="5184-5184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_2305 [label="AA_property1 = f", span="5185-5185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_2306 [label="AA_property2 = f", span="5186-5186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_2307 [label="AA_property3 = f", span="5187-5187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_2308 [label="AA_property4 = f", span="5188-5188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_2309 [label="AA_property5 = f", span="5189-5189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_2310 [label="AA_property6 = f", span="5190-5190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_2311 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5181-5181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonReader.cs"];
m3_825 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1723-1723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonReader.cs"];
m3_826 [label="return _name + '' '' + _number;", span="1725-1725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonReader.cs"];
m3_827 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1723-1723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonReader.cs"];
m3_1873 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonReader.cs"];
m3_1057 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonReader.cs"];
m3_2340 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2341 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="5291-5291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2342 [label="XmlDocument document = new XmlDocument()", span="5292-5292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2344 [label="testObject.Document = document", span="5294-5294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2345 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5296-5296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2349 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="5305-5305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2343 [label="document.LoadXml(''<root>hehe, root</root>'')", span="5293-5293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2346 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="5297-5301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2347 [label="StringAssert.AreEqual(expected, json)", span="5302-5302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2348 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="5304-5304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2350 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5289-5289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonReader.cs"];
m3_2943 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6761-6761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_2944 [label="object o = new { p = 1 }", span="6764-6764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_2945 [label="var json = JObject.FromObject(o)", span="6766-6766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_2946 [label="var sw = new StringWriter()", span="6768-6768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_2948 [label="jw.WriteToken(json.CreateReader())", span="6771-6771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_2947 [label="var jw = new JsonTextWriter(sw)", span="6769-6769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_2950 [label="string result = sw.ToString()", span="6774-6774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_2949 [label="jw.Flush()", span="6772-6772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_2951 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6775-6775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_2952 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6761-6761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonReader.cs"];
m3_756 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1609-1609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonReader.cs"];
m3_916 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="743-743", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonReader.cs"];
m3_1992 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="4272-4272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonReader.cs"];
m3_2437 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5466-5466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonReader.cs"];
m3_2438 [label="First = first", span="5468-5468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonReader.cs"];
m3_2439 [label="Second = second", span="5469-5469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonReader.cs"];
m3_2440 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5466-5466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonReader.cs"];
m3_812 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonReader.cs"];
m3_1718 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3736-3736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonReader.cs"];
m3_1719 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3738-3738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonReader.cs"];
m3_1720 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3740-3740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonReader.cs"];
m3_1721 [label="Assert.AreEqual(2, values.Count)", span="3742-3742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonReader.cs"];
m3_1722 [label="Assert.AreEqual(''value1'', values[''key1''])", span="3743-3743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonReader.cs"];
m3_1723 [label="Assert.AreEqual(''value2'', values[''key2''])", span="3744-3744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonReader.cs"];
m3_1724 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3736-3736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonReader.cs"];
m3_2066 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonReader.cs"];
m3_2531 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5690-5690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_2532 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5692-5695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_2533 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5697-5697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_2534 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5699-5699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_2535 [label="reader.DateParseHandling = DateParseHandling.None", span="5700-5700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_2537 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5704-5704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_2536 [label="JsonSerializer serializer = new JsonSerializer()", span="5702-5702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_2538 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5706-5706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_2539 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5707-5707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_2540 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5690-5690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonReader.cs"];
m3_1082 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonReader.cs"];
m3_2652 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5948-5948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2653 [label="_name = info.GetString(''Name'')", span="5950-5950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_2654 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5948-5948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_3623 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="JsonReader.cs"];
m3_213 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="546-546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_214 [label="RequiredPropertyTestClass c1 = new RequiredPropertyTestClass()", span="548-548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_215 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="550-552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_216 [label="RequiredPropertyTestClass c2 = new RequiredPropertyTestClass\r\n            {\r\n                Name = ''Name!''\r\n            }", span="554-557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_217 [label="string json = JsonConvert.SerializeObject(c2)", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_218 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="561-561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_219 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="563-565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_220 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}''),\r\n                ''Required property 'Name' expects a value but got null. Path '', line 1, position 13.'')", span="567-569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_221 [label="RequiredPropertyTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':''''Name!''''}'')", span="571-571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_222 [label="Assert.AreEqual(''Name!'', c3.Name)", span="573-573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_223 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="546-546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonReader.cs"];
m3_3202 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7303-7303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonReader.cs"];
m3_3203 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="7305-7305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonReader.cs"];
m3_3204 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7303-7303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonReader.cs"];
m3_283 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonReader.cs"];
m3_284 [label="this.Sections = new HashSet<FaqSection>()", span="732-732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonReader.cs"];
m3_285 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="730-730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonReader.cs"];
m3_2825 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6437-6437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonReader.cs"];
m3_2826 [label="Title = title", span="6439-6439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonReader.cs"];
m3_2827 [label="Categories = new Dictionary<string, int>()", span="6440-6440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonReader.cs"];
m3_2828 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6437-6437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonReader.cs"];
m3_3341 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7575-7575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3342 [label="string json = ''{}''", span="7577-7577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3343 [label="IList<string> errors = new List<string>()", span="7578-7578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3345 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7586-7589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3344 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7580-7584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3347 [label="Assert.AreEqual(4, errors.Count)", span="7592-7592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3348 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7593-7593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3349 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7594-7594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3350 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7595-7595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3351 [label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7596-7596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3346 [label="Assert.IsNotNull(o)", span="7591-7591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_3352 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7575-7575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonReader.cs"];
m3_4128 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="488-488", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonReader.cs"];
m3_810 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="JsonReader.cs"];
m3_1461 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonReader.cs"];
m3_1730 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3759-3759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonReader.cs"];
m3_1731 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3761-3761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonReader.cs"];
m3_1732 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3763-3763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonReader.cs"];
m3_1733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3759-3759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonReader.cs"];
m3_1332 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JsonReader.cs"];
m3_3699 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8508-8508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonReader.cs"];
m3_3700 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8510-8510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonReader.cs"];
m3_3701 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8508-8508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonReader.cs"];
m3_2770 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6250-6250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonReader.cs"];
m3_2771 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="6252-6252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonReader.cs"];
m3_2772 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="6253-6253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonReader.cs"];
m3_2773 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6250-6250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonReader.cs"];
m3_4053 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9417-9417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonReader.cs"];
m3_4054 [label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="9419-9419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonReader.cs"];
m3_4055 [label="var serializerSettings = new JsonSerializerSettings()", span="9421-9421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonReader.cs"];
m3_4056 [label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="9422-9422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonReader.cs"];
m3_4057 [label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="9424-9424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonReader.cs"];
m3_4058 [label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="9426-9426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonReader.cs"];
m3_4059 [label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="9427-9427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonReader.cs"];
m3_4060 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9417-9417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonReader.cs"];
m3_4112 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="9615-9615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonReader.cs"];
m3_3490 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7932-7932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonReader.cs"];
m3_3491 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7934-7940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonReader.cs"];
m3_3492 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7948-7948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonReader.cs"];
m3_3493 [label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7949-7952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonReader.cs"];
m3_3494 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7954-7960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonReader.cs"];
m3_3495 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="7962-7962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonReader.cs"];
m3_3496 [label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7963-7966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonReader.cs"];
m3_3497 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7932-7932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonReader.cs"];
m3_1691 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3656-3656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonReader.cs"];
m3_1692 [label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3658-3661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonReader.cs"];
m3_1693 [label="string json = JsonConvert.SerializeObject(value)", span="3663-3663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonReader.cs"];
m3_1694 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3665-3665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonReader.cs"];
m3_1695 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3656-3656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonReader.cs"];
m3_3514 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7989-7989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonReader.cs"];
m3_3515 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="7991-8015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonReader.cs"];
m3_3516 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="8017-8017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonReader.cs"];
m3_3517 [label="Assert.IsNotNull(exception)", span="8018-8018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonReader.cs"];
m3_3518 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="8019-8019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonReader.cs"];
m3_3519 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="8021-8021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonReader.cs"];
m3_3520 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7989-7989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonReader.cs"];
m3_3337 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="269-269", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonReader.cs"];
m3_3098 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="7074-7074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonReader.cs"];
m3_2644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5924-5924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonReader.cs"];
m3_2645 [label="var derived = new Derived(''meh'', ''woo'')", span="5926-5926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonReader.cs"];
m3_2646 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5928-5932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonReader.cs"];
m3_2647 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5934-5934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonReader.cs"];
m3_2648 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5936-5936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonReader.cs"];
m3_2649 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5938-5938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonReader.cs"];
m3_2650 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5939-5939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonReader.cs"];
m3_2651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5924-5924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonReader.cs"];
m3_2726 [label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="9803-9803", cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonReader.cs"];
m3_2919 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6710-6710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2920 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6712-6712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2921 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6713-6713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2924 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6724-6724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2925 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6725-6725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2926 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6726-6726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2927 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6727-6727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2928 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6728-6728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2922 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6715-6721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2923 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6723-6723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_2929 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6710-6710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs"];
m3_349 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonReader.cs"];
m3_1288 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2739-2739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonReader.cs"];
m3_1289 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonReader.cs"];
m3_1290 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2742-2742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonReader.cs"];
m3_1294 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2752-2752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonReader.cs"];
m3_1295 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2753-2753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonReader.cs"];
m3_1291 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2744-2747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonReader.cs"];
m3_1292 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2748-2748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonReader.cs"];
m3_1293 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2750-2750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonReader.cs"];
m3_1296 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2739-2739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonReader.cs"];
m3_3112 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonReader.cs"];
m3_3949 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9144-9144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3950 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9146-9146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3951 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9147-9147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3953 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="9153-9153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3956 [label="Assert.AreEqual(dt, dt1)", span="9159-9159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3961 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9169-9169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3952 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9148-9151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3957 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9161-9164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3962 [label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9171-9174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3955 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9157-9157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3954 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9155-9155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3958 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9165-9165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3959 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9167-9167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3960 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9168-9168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3963 [label="v = (JValue)JToken.ReadFrom(reader)", span="9175-9175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3964 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="9177-9177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3965 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9178-9178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3966 [label="Assert.AreEqual(''abc'', v.Value)", span="9179-9179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_3967 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9144-9144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonReader.cs"];
m3_4064 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9447-9447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonReader.cs"];
m3_4065 [label="BaseProperty = baseProperty", span="9449-9449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonReader.cs"];
m3_4066 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9447-9447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonReader.cs"];
m3_3635 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="732-732", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonReader.cs"];
m3_1439 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3027-3027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_1440 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="3029-3040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_1441 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3027-3027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonReader.cs"];
m3_46 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="234-234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonReader.cs"];
m3_47 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['pie']''),\r\n                @''Could not convert string to boolean: pie. Path '[0]', line 1, position 6.'')", span="236-238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonReader.cs"];
m3_48 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="234-234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonReader.cs"];
m3_1423 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2989-2989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonReader.cs"];
m3_1424 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2991-2996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonReader.cs"];
m3_1425 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2998-2998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonReader.cs"];
m3_1426 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="3000-3000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonReader.cs"];
m3_1427 [label="Assert.AreEqual(null, c.MiddleName)", span="3001-3001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonReader.cs"];
m3_1428 [label="Assert.AreEqual(null, c.LastName)", span="3002-3002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonReader.cs"];
m3_1429 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2989-2989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonReader.cs"];
m3_2589 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonReader.cs"];
m3_587 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JsonReader.cs"];
m3_684 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1476-1476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_685 [label="_serializationInfo == null", span="1478-1478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_686 [label="return;", span="1480-1480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_687 [label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1483-1483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_688 [label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1484-1484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_689 [label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1485-1485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_690 [label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1486-1486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_691 [label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1487-1487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_692 [label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1488-1488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_693 [label="_serializationInfo = null", span="1490-1490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_694 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1476-1476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonReader.cs"];
m3_1942 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4204-4204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1943 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="4206-4206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1944 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="4207-4207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1950 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="4215-4215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1945 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1946 [label="wagePerson.Department = ''McDees''", span="4210-4210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1947 [label="wagePerson.HourlyWage = 12.50m", span="4211-4211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1948 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4212-4212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1949 [label="wagePerson.Name = ''Jim Bob''", span="4213-4213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1953 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="4228-4228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1951 [label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="4216-4225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1952 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="4227-4227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_1954 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4204-4204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonReader.cs"];
m3_3075 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7044-7044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_3076 [label="Bb b = new Bb()", span="7046-7046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_3077 [label="b.no = true", span="7047-7047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_3078 [label="Aa a = b", span="7048-7048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_3080 [label="string json = JsonConvert.SerializeObject(b)", span="7051-7051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_3079 [label="a.no = int.MaxValue", span="7049-7049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_3081 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="7053-7053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_3082 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="7055-7055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_3083 [label="Assert.AreEqual(true, b2.no)", span="7057-7057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_3084 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7044-7044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonReader.cs"];
m3_653 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_1006 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2170-2170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonReader.cs"];
m3_1007 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="2172-2249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonReader.cs"];
m3_1008 [label="object o = JsonConvert.DeserializeObject(json)", span="2250-2250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonReader.cs"];
m3_1009 [label="string s = string.Empty", span="2251-2251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonReader.cs"];
m3_1010 [label="s += s", span="2252-2252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonReader.cs"];
m3_1011 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2170-2170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonReader.cs"];
m3_2104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4711-4711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2105 [label="dictionary == null", span="4713-4713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2107 [label=dictionary, span="4718-4718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2106 [label="return;", span="4715-4715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2108 [label="this[entry.Key] = entry.Value", span="4720-4720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2109 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4711-4711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonReader.cs"];
m3_2135 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4782-4782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonReader.cs"];
m3_2136 [label="_stringValue = stringValue", span="4784-4784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonReader.cs"];
m3_2137 [label="_intValue = intValue", span="4785-4785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonReader.cs"];
m3_2138 [label="_dateTimeOffsetValue = dateTimeOffset", span="4786-4786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonReader.cs"];
m3_2139 [label="_personValue = personValue", span="4787-4787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonReader.cs"];
m3_2140 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4788-4788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonReader.cs"];
m3_2141 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4782-4782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonReader.cs"];
m3_407 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="JsonReader.cs"];
m3_2113 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonReader.cs"];
m3_1991 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="4279-4279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonReader.cs"];
m3_3143 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7176-7176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3144 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="7178-7186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3145 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="7188-7188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3146 [label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="7190-7200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3147 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="7202-7202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3148 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="7204-7204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3149 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="7205-7205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3150 [label="byte[] bytes = (byte[])actual.Payload", span="7206-7206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3151 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="7207-7207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3152 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7176-7176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonReader.cs"];
m3_3465 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7844-7844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonReader.cs"];
m3_3467 [label="var stringWriter = new StringWriter()", span="7847-7847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonReader.cs"];
m3_3470 [label="serializer.Serialize(stringWriter, obj)", span="7853-7853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonReader.cs"];
m3_3468 [label="var serializer = new JsonSerializer()", span="7848-7848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonReader.cs"];
m3_3471 [label="return stringWriter.ToString();", span="7855-7855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonReader.cs"];
m3_3469 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7849-7852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonReader.cs"];
m3_3472 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7844-7844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonReader.cs"];
m3_2095 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonReader.cs"];
m3_1923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4103-4103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1924 [label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="4107-4111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1925 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="4113-4113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1926 [label="Assert.Fail()", span="4114-4114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1927 [label=JsonSerializationException, span="4116-4116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1928 [label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'''))", span="4118-4118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_1929 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4103-4103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonReader.cs"];
m3_3636 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonReader.cs"];
m3_147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonReader.cs"];
m3_148 [label="string json = JsonConvert.SerializeObject(new Binding_DisallowNull(), new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", span="419-422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonReader.cs"];
m3_149 [label="Assert.AreEqual(''{}'', json)", span="423-423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonReader.cs"];
m3_150 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonReader.cs"];
m3_3883 [label="Entry System.InvalidCastException.InvalidCastException()", span="0-0", cluster="System.InvalidCastException.InvalidCastException()", file="JsonReader.cs"];
m3_111 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JsonReader.cs"];
m3_311 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonReader.cs"];
m3_312 [label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="836-842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonReader.cs"];
m3_313 [label="Assert.IsNull(otc.Value1)", span="843-843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonReader.cs"];
m3_314 [label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="844-844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonReader.cs"];
m3_315 [label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="845-845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonReader.cs"];
m3_316 [label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="846-846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonReader.cs"];
m3_317 [label="Assert.IsNull(otc.Value5)", span="847-847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonReader.cs"];
m3_318 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonReader.cs"];
m3_1907 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonReader.cs"];
m3_3461 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7837-7837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonReader.cs"];
m3_3462 [label="var json = Serialize(obj)", span="7840-7840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonReader.cs"];
m3_3463 [label="return Deserialize<T>(json);", span="7841-7841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonReader.cs"];
m3_3464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7837-7837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonReader.cs"];
m3_935 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2056-2056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonReader.cs"];
m3_936 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2058-2058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonReader.cs"];
m3_937 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="2060-2060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonReader.cs"];
m3_938 [label="Assert.AreEqual(''Orange'', p.Name)", span="2062-2062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonReader.cs"];
m3_939 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="2063-2063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonReader.cs"];
m3_940 [label="Assert.AreEqual(3.99m, p.Price)", span="2064-2064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonReader.cs"];
m3_941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2056-2056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonReader.cs"];
m3_1260 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2698-2698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonReader.cs"];
m3_1261 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2700-2700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonReader.cs"];
m3_1262 [label="string json = JsonConvert.SerializeObject(c1)", span="2702-2702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonReader.cs"];
m3_1263 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2703-2703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonReader.cs"];
m3_1264 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2705-2705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonReader.cs"];
m3_1265 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2707-2707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonReader.cs"];
m3_1266 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2698-2698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonReader.cs"];
m3_2918 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JsonReader.cs"];
m3_1352 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2856-2856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonReader.cs"];
m3_1353 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2858-2858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonReader.cs"];
m3_1354 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2859-2859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonReader.cs"];
m3_1355 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2856-2856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonReader.cs"];
m3_2049 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4566-4566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonReader.cs"];
m3_2050 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="4568-4568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonReader.cs"];
m3_2051 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4569-4569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonReader.cs"];
m3_2052 [label="Assert.AreEqual(123L, item.Value)", span="4571-4571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonReader.cs"];
m3_2053 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4566-4566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonReader.cs"];
m3_3753 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8646-8646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonReader.cs"];
m3_3754 [label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8648-8648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonReader.cs"];
m3_3755 [label="string json = JsonConvert.SerializeObject(s1)", span="8650-8650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonReader.cs"];
m3_3757 [label="Assert.AreEqual(s1.Count, s2.Count)", span="8654-8654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonReader.cs"];
m3_3758 [label=s1, span="8655-8655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonReader.cs"];
m3_3756 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8652-8652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonReader.cs"];
m3_3759 [label="Assert.IsTrue(s2.Contains(s))", span="8657-8657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonReader.cs"];
m3_3760 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8646-8646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonReader.cs"];
m3_2091 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonReader.cs"];
m3_2267 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5225-5225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2314 [label="BB_field1 = g", span="5228-5228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2315 [label="BB_field2 = g", span="5229-5229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2316 [label="BB_property1 = g", span="5230-5230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2317 [label="BB_property2 = g", span="5231-5231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2318 [label="BB_property3 = g", span="5232-5232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2319 [label="BB_property4 = g", span="5233-5233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2320 [label="BB_property5 = g", span="5234-5234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2321 [label="BB_property6 = g", span="5235-5235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2322 [label="BB_property7 = g", span="5236-5236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2323 [label="BB_property8 = g", span="5237-5237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_2324 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5225-5225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonReader.cs"];
m3_3557 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8087-8087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonReader.cs"];
m3_3558 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="8089-8089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonReader.cs"];
m3_3559 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="8090-8090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonReader.cs"];
m3_3560 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8087-8087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonReader.cs"];
m3_662 [label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonReader.cs"];
m3_3439 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="JsonReader.cs"];
m3_3577 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8153-8153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonReader.cs"];
m3_3578 [label="string json", span="8155-8155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonReader.cs"];
m3_3579 [label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="8156-8156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonReader.cs"];
m3_3580 [label="json = JsonConvert.SerializeObject(d)", span="8158-8158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonReader.cs"];
m3_3581 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="8161-8161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonReader.cs"];
m3_3582 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="8164-8164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonReader.cs"];
m3_3583 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="8167-8167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonReader.cs"];
m3_3584 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8153-8153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonReader.cs"];
m3_2110 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4724-4724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonReader.cs"];
m3_2111 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4726-4726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonReader.cs"];
m3_2112 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4724-4724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonReader.cs"];
m3_205 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="529-529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonReader.cs"];
m3_206 [label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="531-531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonReader.cs"];
m3_207 [label="Assert.AreEqual(EnumA.ValueA, e1)", span="532-532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonReader.cs"];
m3_208 [label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonReader.cs"];
m3_209 [label="Assert.AreEqual(EnumA.ValueA, e2)", span="535-535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonReader.cs"];
m3_210 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="529-529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonReader.cs"];
m3_2043 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4542-4542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonReader.cs"];
m3_2045 [label="C2 = c2", span="4544-4544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonReader.cs"];
m3_2046 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4542-4542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonReader.cs"];
m3_58 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_59 [label="IList<bool> l = JsonConvert.DeserializeObject<IList<bool>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE'\r\n]'')", span="253-267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_60 [label="int i = 0", span="269-269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_61 [label="Assert.AreEqual(true, l[i++])", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_62 [label="Assert.AreEqual(false, l[i++])", span="271-271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_63 [label="Assert.AreEqual(true, l[i++])", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_64 [label="Assert.AreEqual(false, l[i++])", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_65 [label="Assert.AreEqual(true, l[i++])", span="274-274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_66 [label="Assert.AreEqual(true, l[i++])", span="275-275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_67 [label="Assert.AreEqual(true, l[i++])", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_68 [label="Assert.AreEqual(true, l[i++])", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_69 [label="Assert.AreEqual(true, l[i++])", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_70 [label="Assert.AreEqual(true, l[i++])", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_71 [label="Assert.AreEqual(true, l[i++])", span="280-280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_72 [label="Assert.AreEqual(false, l[i++])", span="281-281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_73 [label="Assert.AreEqual(false, l[i++])", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_74 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonReader.cs"];
m3_2780 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="6267-6267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonReader.cs"];
m3_2869 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6474-6474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonReader.cs"];
m3_1032 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonReader.cs"];
m3_3637 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8337-8337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonReader.cs"];
m3_3638 [label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="8339-8346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonReader.cs"];
m3_3639 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="8348-8351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonReader.cs"];
m3_3640 [label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8353-8360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonReader.cs"];
m3_3641 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8337-8337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonReader.cs"];
m3_166 [label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToUpper(System.Globalization.CultureInfo)", file="JsonReader.cs"];
m3_1228 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2642-2642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonReader.cs"];
m3_1229 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2644-2644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonReader.cs"];
m3_1230 [label="Assert.AreEqual(@''1'', json)", span="2645-2645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonReader.cs"];
m3_1231 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2647-2647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonReader.cs"];
m3_1232 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2648-2648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonReader.cs"];
m3_1233 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2642-2642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonReader.cs"];
m3_899 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="248-248", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonReader.cs"];
m3_2360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="5328-5328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonReader.cs"];
m3_2802 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="6331-6331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonReader.cs"];
m3_1633 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3520-3520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonReader.cs"];
m3_1634 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3522-3522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonReader.cs"];
m3_1635 [label="c.NotIncluded = ''Hi''", span="3523-3523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonReader.cs"];
m3_1636 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3524-3524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonReader.cs"];
m3_1637 [label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3526-3531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonReader.cs"];
m3_1638 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3533-3533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonReader.cs"];
m3_1639 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3534-3534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonReader.cs"];
m3_1640 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3520-3520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonReader.cs"];
m3_2687 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="105-105", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonReader.cs"];
m3_3107 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7114-7114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3108 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="7116-7116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3109 [label="string json = JsonConvert.SerializeObject(widget)", span="7118-7118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3110 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="7120-7120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3111 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7114-7114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_2957 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="167-167", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonReader.cs"];
m3_3291 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonReader.cs"];
m3_1267 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonReader.cs"];
m3_2014 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4406-4406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonReader.cs"];
m3_2015 [label=initial, span="4408-4408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonReader.cs"];
m3_2016 [label="Add(pair.Key, pair.Value)", span="4410-4410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonReader.cs"];
m3_2017 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4406-4406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonReader.cs"];
m3_2863 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6534-6534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonReader.cs"];
m3_2864 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6536-6541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonReader.cs"];
m3_2865 [label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6543-6546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonReader.cs"];
m3_2866 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6548-6552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonReader.cs"];
m3_2867 [label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6554-6557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonReader.cs"];
m3_2868 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6534-6534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonReader.cs"];
m3_1621 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3437-3437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonReader.cs"];
m3_1528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonReader.cs"];
m3_1529 [label="TestProperty1 = testProperty1", span="3250-3250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonReader.cs"];
m3_1530 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3248-3248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonReader.cs"];
m3_2686 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="6023-6023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonReader.cs"];
m3_36 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonReader.cs"];
m3_2993 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonReader.cs"];
m3_2454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5503-5503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonReader.cs"];
m3_2455 [label="return Value;", span="5505-5505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonReader.cs"];
m3_2456 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5503-5503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonReader.cs"];
m3_735 [label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0", cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonReader.cs"];
m3_3179 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7261-7261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonReader.cs"];
m3_3180 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7263-7263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonReader.cs"];
m3_3181 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7264-7264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonReader.cs"];
m3_3183 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="7267-7267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonReader.cs"];
m3_3182 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="7266-7266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonReader.cs"];
m3_3184 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="7269-7269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonReader.cs"];
m3_3185 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7261-7261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonReader.cs"];
m3_4108 [label="Entry lambda expression", span="9570-9577", cluster="lambda expression", file="JsonReader.cs"];
m3_37 [label="Entry lambda expression", span="221-221", cluster="lambda expression", file="JsonReader.cs"];
m3_38 [label="JsonConvert.DeserializeObject<IList<bool>>(@''[null]'')", span="221-221", cluster="lambda expression", file="JsonReader.cs"];
m3_39 [label="Exit lambda expression", span="221-221", cluster="lambda expression", file="JsonReader.cs"];
m3_43 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="JsonReader.cs"];
m3_44 [label="JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']'')", span="229-229", cluster="lambda expression", file="JsonReader.cs"];
m3_45 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="JsonReader.cs"];
m3_49 [label="Entry lambda expression", span="237-237", cluster="lambda expression", file="JsonReader.cs"];
m3_50 [label="JsonConvert.DeserializeObject<IList<bool>>(@''['pie']'')", span="237-237", cluster="lambda expression", file="JsonReader.cs"];
m3_51 [label="Exit lambda expression", span="237-237", cluster="lambda expression", file="JsonReader.cs"];
m3_55 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="JsonReader.cs"];
m3_56 [label="JsonConvert.DeserializeObject<IList<bool>>(@''['']'')", span="245-245", cluster="lambda expression", file="JsonReader.cs"];
m3_57 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="JsonReader.cs"];
m3_115 [label="Entry lambda expression", span="358-358", cluster="lambda expression", file="JsonReader.cs"];
m3_116 [label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="358-358", cluster="lambda expression", file="JsonReader.cs"];
m3_117 [label="Exit lambda expression", span="358-358", cluster="lambda expression", file="JsonReader.cs"];
m3_121 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="JsonReader.cs"];
m3_122 [label="JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'')", span="364-364", cluster="lambda expression", file="JsonReader.cs"];
m3_123 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="JsonReader.cs"];
m3_132 [label="Entry lambda expression", span="377-377", cluster="lambda expression", file="JsonReader.cs"];
m3_133 [label="JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'')", span="377-377", cluster="lambda expression", file="JsonReader.cs"];
m3_134 [label="Exit lambda expression", span="377-377", cluster="lambda expression", file="JsonReader.cs"];
m3_143 [label="Entry lambda expression", span="413-413", cluster="lambda expression", file="JsonReader.cs"];
m3_144 [label="JsonConvert.SerializeObject(new Binding_DisallowNull())", span="413-413", cluster="lambda expression", file="JsonReader.cs"];
m3_145 [label="Exit lambda expression", span="413-413", cluster="lambda expression", file="JsonReader.cs"];
m3_156 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="JsonReader.cs"];
m3_157 [label="JsonConvert.SerializeObject(new DictionaryWithNoNull())", span="435-435", cluster="lambda expression", file="JsonReader.cs"];
m3_158 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="JsonReader.cs"];
m3_184 [label="Entry lambda expression", span="488-488", cluster="lambda expression", file="JsonReader.cs"];
m3_187 [label="Entry lambda expression", span="492-492", cluster="lambda expression", file="JsonReader.cs"];
m3_190 [label="Entry lambda expression", span="496-496", cluster="lambda expression", file="JsonReader.cs"];
m3_193 [label="Entry lambda expression", span="500-500", cluster="lambda expression", file="JsonReader.cs"];
m3_196 [label="Entry lambda expression", span="504-504", cluster="lambda expression", file="JsonReader.cs"];
m3_199 [label="Entry lambda expression", span="508-508", cluster="lambda expression", file="JsonReader.cs"];
m3_202 [label="Entry lambda expression", span="512-512", cluster="lambda expression", file="JsonReader.cs"];
m3_185 [label="JsonConvert.DeserializeObject<IList<object>>(''[1,'')", span="488-488", cluster="lambda expression", file="JsonReader.cs"];
m3_186 [label="Exit lambda expression", span="488-488", cluster="lambda expression", file="JsonReader.cs"];
m3_188 [label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="492-492", cluster="lambda expression", file="JsonReader.cs"];
m3_189 [label="Exit lambda expression", span="492-492", cluster="lambda expression", file="JsonReader.cs"];
m3_191 [label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="496-496", cluster="lambda expression", file="JsonReader.cs"];
m3_192 [label="Exit lambda expression", span="496-496", cluster="lambda expression", file="JsonReader.cs"];
m3_194 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="500-500", cluster="lambda expression", file="JsonReader.cs"];
m3_195 [label="Exit lambda expression", span="500-500", cluster="lambda expression", file="JsonReader.cs"];
m3_197 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="504-504", cluster="lambda expression", file="JsonReader.cs"];
m3_198 [label="Exit lambda expression", span="504-504", cluster="lambda expression", file="JsonReader.cs"];
m3_200 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="508-508", cluster="lambda expression", file="JsonReader.cs"];
m3_201 [label="Exit lambda expression", span="508-508", cluster="lambda expression", file="JsonReader.cs"];
m3_203 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="512-512", cluster="lambda expression", file="JsonReader.cs"];
m3_204 [label="Exit lambda expression", span="512-512", cluster="lambda expression", file="JsonReader.cs"];
m3_226 [label="JsonConvert.SerializeObject(c1)", span="551-551", cluster="lambda expression", file="JsonReader.cs"];
m3_225 [label="Entry lambda expression", span="551-551", cluster="lambda expression", file="JsonReader.cs"];
m3_228 [label="Entry lambda expression", span="564-564", cluster="lambda expression", file="JsonReader.cs"];
m3_231 [label="Entry lambda expression", span="568-568", cluster="lambda expression", file="JsonReader.cs"];
m3_227 [label="Exit lambda expression", span="551-551", cluster="lambda expression", file="JsonReader.cs"];
m3_229 [label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}'')", span="564-564", cluster="lambda expression", file="JsonReader.cs"];
m3_230 [label="Exit lambda expression", span="564-564", cluster="lambda expression", file="JsonReader.cs"];
m3_232 [label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="568-568", cluster="lambda expression", file="JsonReader.cs"];
m3_233 [label="Exit lambda expression", span="568-568", cluster="lambda expression", file="JsonReader.cs"];
m3_248 [label="JsonConvert.SerializeObject(c1)", span="593-593", cluster="lambda expression", file="JsonReader.cs"];
m3_247 [label="Entry lambda expression", span="593-593", cluster="lambda expression", file="JsonReader.cs"];
m3_250 [label="Entry lambda expression", span="603-603", cluster="lambda expression", file="JsonReader.cs"];
m3_249 [label="Exit lambda expression", span="593-593", cluster="lambda expression", file="JsonReader.cs"];
m3_251 [label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="603-603", cluster="lambda expression", file="JsonReader.cs"];
m3_252 [label="Exit lambda expression", span="603-603", cluster="lambda expression", file="JsonReader.cs"];
m3_325 [label="a.ErrorContext.Handled = true", span="879-879", cluster="lambda expression", file="JsonReader.cs"];
m3_324 [label="Entry lambda expression", span="879-879", cluster="lambda expression", file="JsonReader.cs"];
m3_326 [label="Exit lambda expression", span="879-879", cluster="lambda expression", file="JsonReader.cs"];
m3_422 [label="JsonConvert.DeserializeObject<List<Version>>(json)", span="1083-1083", cluster="lambda expression", file="JsonReader.cs"];
m3_421 [label="Entry lambda expression", span="1083-1083", cluster="lambda expression", file="JsonReader.cs"];
m3_423 [label="Exit lambda expression", span="1083-1083", cluster="lambda expression", file="JsonReader.cs"];
m3_589 [label=referenceResolver, span="1312-1312", cluster="lambda expression", file="JsonReader.cs"];
m3_588 [label="Entry lambda expression", span="1312-1312", cluster="lambda expression", file="JsonReader.cs"];
m3_590 [label="Exit lambda expression", span="1312-1312", cluster="lambda expression", file="JsonReader.cs"];
m3_901 [label="Entry lambda expression", span="1971-1971", cluster="lambda expression", file="JsonReader.cs"];
m3_904 [label="Entry lambda expression", span="1974-1974", cluster="lambda expression", file="JsonReader.cs"];
m3_902 [label="p.Name", span="1971-1971", cluster="lambda expression", file="JsonReader.cs"];
m3_903 [label="Exit lambda expression", span="1971-1971", cluster="lambda expression", file="JsonReader.cs"];
m3_905 [label="p.Name", span="1974-1974", cluster="lambda expression", file="JsonReader.cs"];
m3_906 [label="Exit lambda expression", span="1974-1974", cluster="lambda expression", file="JsonReader.cs"];
m3_1036 [label="Entry lambda expression", span="2297-2297", cluster="lambda expression", file="JsonReader.cs"];
m3_1037 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="2297-2297", cluster="lambda expression", file="JsonReader.cs"];
m3_1038 [label="Exit lambda expression", span="2297-2297", cluster="lambda expression", file="JsonReader.cs"];
m3_1045 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="2305-2305", cluster="lambda expression", file="JsonReader.cs"];
m3_1044 [label="Entry lambda expression", span="2305-2305", cluster="lambda expression", file="JsonReader.cs"];
m3_1046 [label="Exit lambda expression", span="2305-2305", cluster="lambda expression", file="JsonReader.cs"];
m3_1347 [label="Entry lambda expression", span="2848-2852", cluster="lambda expression", file="JsonReader.cs"];
m3_1348 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2850-2850", cluster="lambda expression", file="JsonReader.cs"];
m3_1349 [label="JsonConvert.SerializeObject(c)", span="2851-2851", cluster="lambda expression", file="JsonReader.cs"];
m3_1350 [label="Exit lambda expression", span="2848-2852", cluster="lambda expression", file="JsonReader.cs"];
m3_1442 [label="Entry lambda expression", span="3029-3040", cluster="lambda expression", file="JsonReader.cs"];
m3_1443 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="3031-3037", cluster="lambda expression", file="JsonReader.cs"];
m3_1444 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="3039-3039", cluster="lambda expression", file="JsonReader.cs"];
m3_1445 [label="Exit lambda expression", span="3029-3040", cluster="lambda expression", file="JsonReader.cs"];
m3_1487 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="3143-3143", cluster="lambda expression", file="JsonReader.cs"];
m3_1486 [label="Entry lambda expression", span="3143-3143", cluster="lambda expression", file="JsonReader.cs"];
m3_1488 [label="Exit lambda expression", span="3143-3143", cluster="lambda expression", file="JsonReader.cs"];
m3_1593 [label="Entry lambda expression", span="3394-3400", cluster="lambda expression", file="JsonReader.cs"];
m3_1594 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3396-3396", cluster="lambda expression", file="JsonReader.cs"];
m3_1595 [label="o.ReferenceLoopHandlingErrorProperty = o", span="3397-3397", cluster="lambda expression", file="JsonReader.cs"];
m3_1596 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3399-3399", cluster="lambda expression", file="JsonReader.cs"];
m3_1597 [label="Exit lambda expression", span="3394-3400", cluster="lambda expression", file="JsonReader.cs"];
m3_1735 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="3763-3763", cluster="lambda expression", file="JsonReader.cs"];
m3_1734 [label="Entry lambda expression", span="3763-3763", cluster="lambda expression", file="JsonReader.cs"];
m3_1736 [label="Exit lambda expression", span="3763-3763", cluster="lambda expression", file="JsonReader.cs"];
m3_1762 [label="JsonConvert.DeserializeObject<Person>(json)", span="3802-3802", cluster="lambda expression", file="JsonReader.cs"];
m3_1761 [label="Entry lambda expression", span="3802-3802", cluster="lambda expression", file="JsonReader.cs"];
m3_1763 [label="Exit lambda expression", span="3802-3802", cluster="lambda expression", file="JsonReader.cs"];
m3_1769 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3812-3812", cluster="lambda expression", file="JsonReader.cs"];
m3_1768 [label="Entry lambda expression", span="3812-3812", cluster="lambda expression", file="JsonReader.cs"];
m3_1770 [label="Exit lambda expression", span="3812-3812", cluster="lambda expression", file="JsonReader.cs"];
m3_1776 [label="JsonConvert.DeserializeObject<Exception>(json)", span="3823-3823", cluster="lambda expression", file="JsonReader.cs"];
m3_1775 [label="Entry lambda expression", span="3823-3823", cluster="lambda expression", file="JsonReader.cs"];
m3_1777 [label="Exit lambda expression", span="3823-3823", cluster="lambda expression", file="JsonReader.cs"];
m3_1783 [label="JsonConvert.DeserializeObject<double>(json)", span="3835-3835", cluster="lambda expression", file="JsonReader.cs"];
m3_1782 [label="Entry lambda expression", span="3835-3835", cluster="lambda expression", file="JsonReader.cs"];
m3_1784 [label="Exit lambda expression", span="3835-3835", cluster="lambda expression", file="JsonReader.cs"];
m3_1790 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3846-3846", cluster="lambda expression", file="JsonReader.cs"];
m3_1789 [label="Entry lambda expression", span="3846-3846", cluster="lambda expression", file="JsonReader.cs"];
m3_1791 [label="Exit lambda expression", span="3846-3846", cluster="lambda expression", file="JsonReader.cs"];
m3_1797 [label="JsonConvert.DeserializeObject<JObject>(json)", span="3859-3859", cluster="lambda expression", file="JsonReader.cs"];
m3_1796 [label="Entry lambda expression", span="3859-3859", cluster="lambda expression", file="JsonReader.cs"];
m3_1798 [label="Exit lambda expression", span="3859-3859", cluster="lambda expression", file="JsonReader.cs"];
m3_1804 [label="JsonConvert.DeserializeObject<Person>(json)", span="3872-3872", cluster="lambda expression", file="JsonReader.cs"];
m3_1803 [label="Entry lambda expression", span="3872-3872", cluster="lambda expression", file="JsonReader.cs"];
m3_1805 [label="Exit lambda expression", span="3872-3872", cluster="lambda expression", file="JsonReader.cs"];
m3_1811 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3880-3880", cluster="lambda expression", file="JsonReader.cs"];
m3_1810 [label="Entry lambda expression", span="3880-3880", cluster="lambda expression", file="JsonReader.cs"];
m3_1812 [label="Exit lambda expression", span="3880-3880", cluster="lambda expression", file="JsonReader.cs"];
m3_1825 [label="JsonConvert.PopulateObject(json, new Person())", span="3906-3906", cluster="lambda expression", file="JsonReader.cs"];
m3_1824 [label="Entry lambda expression", span="3906-3906", cluster="lambda expression", file="JsonReader.cs"];
m3_1826 [label="Exit lambda expression", span="3906-3906", cluster="lambda expression", file="JsonReader.cs"];
m3_1833 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="3914-3914", cluster="lambda expression", file="JsonReader.cs"];
m3_1832 [label="Entry lambda expression", span="3914-3914", cluster="lambda expression", file="JsonReader.cs"];
m3_1834 [label="Exit lambda expression", span="3914-3914", cluster="lambda expression", file="JsonReader.cs"];
m3_1843 [label="Entry lambda expression", span="3929-3940", cluster="lambda expression", file="JsonReader.cs"];
m3_1844 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3931-3939", cluster="lambda expression", file="JsonReader.cs"];
m3_1845 [label="Exit lambda expression", span="3929-3940", cluster="lambda expression", file="JsonReader.cs"];
m3_1850 [label="Entry lambda expression", span="3946-3957", cluster="lambda expression", file="JsonReader.cs"];
m3_1851 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3948-3956", cluster="lambda expression", file="JsonReader.cs"];
m3_1852 [label="Exit lambda expression", span="3946-3957", cluster="lambda expression", file="JsonReader.cs"];
m3_1856 [label="Entry lambda expression", span="3963-3974", cluster="lambda expression", file="JsonReader.cs"];
m3_1857 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3965-3973", cluster="lambda expression", file="JsonReader.cs"];
m3_1858 [label="Exit lambda expression", span="3963-3974", cluster="lambda expression", file="JsonReader.cs"];
m3_1862 [label="Entry lambda expression", span="3980-3991", cluster="lambda expression", file="JsonReader.cs"];
m3_1863 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3982-3990", cluster="lambda expression", file="JsonReader.cs"];
m3_1864 [label="Exit lambda expression", span="3980-3991", cluster="lambda expression", file="JsonReader.cs"];
m3_1975 [label="Entry lambda expression", span="4298-4298", cluster="lambda expression", file="JsonReader.cs"];
m3_1976 [label="x.Id == id", span="4298-4298", cluster="lambda expression", file="JsonReader.cs"];
m3_1977 [label="Exit lambda expression", span="4298-4298", cluster="lambda expression", file="JsonReader.cs"];
m3_2012 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4397-4401", cluster="lambda expression", file="JsonReader.cs"];
m3_2011 [label="Entry lambda expression", span="4397-4401", cluster="lambda expression", file="JsonReader.cs"];
m3_2013 [label="Exit lambda expression", span="4397-4401", cluster="lambda expression", file="JsonReader.cs"];
m3_2405 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5410-5410", cluster="lambda expression", file="JsonReader.cs"];
m3_2404 [label="Entry lambda expression", span="5410-5410", cluster="lambda expression", file="JsonReader.cs"];
m3_2406 [label="Exit lambda expression", span="5410-5410", cluster="lambda expression", file="JsonReader.cs"];
m3_2410 [label="Entry lambda expression", span="5416-5431", cluster="lambda expression", file="JsonReader.cs"];
m3_2411 [label="var reference = new Dictionary<string, object>()", span="5420-5420", cluster="lambda expression", file="JsonReader.cs"];
m3_2412 [label="reference.Add(''$ref'', 1)", span="5421-5421", cluster="lambda expression", file="JsonReader.cs"];
m3_2413 [label="reference.Add(''$id'', 1)", span="5422-5422", cluster="lambda expression", file="JsonReader.cs"];
m3_2417 [label="child.Add(''Father'', reference)", span="5427-5427", cluster="lambda expression", file="JsonReader.cs"];
m3_2414 [label="var child = new Dictionary<string, object>()", span="5424-5424", cluster="lambda expression", file="JsonReader.cs"];
m3_2415 [label="child.Add(''_id'', 2)", span="5425-5425", cluster="lambda expression", file="JsonReader.cs"];
m3_2416 [label="child.Add(''Name'', ''Isabell'')", span="5426-5426", cluster="lambda expression", file="JsonReader.cs"];
m3_2418 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5429-5429", cluster="lambda expression", file="JsonReader.cs"];
m3_2419 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5430-5430", cluster="lambda expression", file="JsonReader.cs"];
m3_2420 [label="Exit lambda expression", span="5416-5431", cluster="lambda expression", file="JsonReader.cs"];
m3_2521 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5650-5650", cluster="lambda expression", file="JsonReader.cs"];
m3_2520 [label="Entry lambda expression", span="5650-5650", cluster="lambda expression", file="JsonReader.cs"];
m3_2522 [label="Exit lambda expression", span="5650-5650", cluster="lambda expression", file="JsonReader.cs"];
m3_2737 [label="Entry lambda expression", span="6136-6136", cluster="lambda expression", file="JsonReader.cs"];
m3_2738 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="6136-6136", cluster="lambda expression", file="JsonReader.cs"];
m3_2739 [label="Exit lambda expression", span="6136-6136", cluster="lambda expression", file="JsonReader.cs"];
m3_3067 [label="JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                })", span="7016-7019", cluster="lambda expression", file="JsonReader.cs"];
m3_3066 [label="Entry lambda expression", span="7014-7020", cluster="lambda expression", file="JsonReader.cs"];
m3_3068 [label="Exit lambda expression", span="7014-7020", cluster="lambda expression", file="JsonReader.cs"];
m3_3091 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="7070-7070", cluster="lambda expression", file="JsonReader.cs"];
m3_3090 [label="Entry lambda expression", span="7070-7070", cluster="lambda expression", file="JsonReader.cs"];
m3_3092 [label="Exit lambda expression", span="7070-7070", cluster="lambda expression", file="JsonReader.cs"];
m3_3105 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="7109-7109", cluster="lambda expression", file="JsonReader.cs"];
m3_3104 [label="Entry lambda expression", span="7109-7109", cluster="lambda expression", file="JsonReader.cs"];
m3_3106 [label="Exit lambda expression", span="7109-7109", cluster="lambda expression", file="JsonReader.cs"];
m3_3124 [label="Entry lambda expression", span="7138-7146", cluster="lambda expression", file="JsonReader.cs"];
m3_3125 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="7140-7143", cluster="lambda expression", file="JsonReader.cs"];
m3_3126 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7145-7145", cluster="lambda expression", file="JsonReader.cs"];
m3_3127 [label="Exit lambda expression", span="7138-7146", cluster="lambda expression", file="JsonReader.cs"];
m3_3131 [label="Entry lambda expression", span="7152-7158", cluster="lambda expression", file="JsonReader.cs"];
m3_3132 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="7154-7155", cluster="lambda expression", file="JsonReader.cs"];
m3_3133 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7157-7157", cluster="lambda expression", file="JsonReader.cs"];
m3_3134 [label="Exit lambda expression", span="7152-7158", cluster="lambda expression", file="JsonReader.cs"];
m3_3205 [label="Entry lambda expression", span="7305-7305", cluster="lambda expression", file="JsonReader.cs"];
m3_3206 [label="JsonConvert.DeserializeObject<double>('''')", span="7305-7305", cluster="lambda expression", file="JsonReader.cs"];
m3_3207 [label="Exit lambda expression", span="7305-7305", cluster="lambda expression", file="JsonReader.cs"];
m3_3211 [label="Entry lambda expression", span="7311-7311", cluster="lambda expression", file="JsonReader.cs"];
m3_3212 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="7311-7311", cluster="lambda expression", file="JsonReader.cs"];
m3_3213 [label="Exit lambda expression", span="7311-7311", cluster="lambda expression", file="JsonReader.cs"];
m3_3217 [label="Entry lambda expression", span="7317-7317", cluster="lambda expression", file="JsonReader.cs"];
m3_3218 [label="JsonConvert.DeserializeObject<int>('''')", span="7317-7317", cluster="lambda expression", file="JsonReader.cs"];
m3_3219 [label="Exit lambda expression", span="7317-7317", cluster="lambda expression", file="JsonReader.cs"];
m3_3227 [label="Entry lambda expression", span="7331-7331", cluster="lambda expression", file="JsonReader.cs"];
m3_3228 [label="JsonConvert.DeserializeObject<double>(null)", span="7331-7331", cluster="lambda expression", file="JsonReader.cs"];
m3_3229 [label="Exit lambda expression", span="7331-7331", cluster="lambda expression", file="JsonReader.cs"];
m3_3233 [label="Entry lambda expression", span="7343-7343", cluster="lambda expression", file="JsonReader.cs"];
m3_3234 [label="JsonConvert.DeserializeObject(null)", span="7343-7343", cluster="lambda expression", file="JsonReader.cs"];
m3_3235 [label="Exit lambda expression", span="7343-7343", cluster="lambda expression", file="JsonReader.cs"];
m3_3354 [label="errors.Add(e.ErrorContext.Error.Message)", span="7582-7582", cluster="lambda expression", file="JsonReader.cs"];
m3_3355 [label="e.ErrorContext.Handled = true", span="7583-7583", cluster="lambda expression", file="JsonReader.cs"];
m3_3353 [label="Entry lambda expression", span="7580-7584", cluster="lambda expression", file="JsonReader.cs"];
m3_3356 [label="Exit lambda expression", span="7580-7584", cluster="lambda expression", file="JsonReader.cs"];
m3_3369 [label="errors.Add(e.ErrorContext.Error.Message)", span="7607-7607", cluster="lambda expression", file="JsonReader.cs"];
m3_3370 [label="e.ErrorContext.Handled = true", span="7608-7608", cluster="lambda expression", file="JsonReader.cs"];
m3_3368 [label="Entry lambda expression", span="7605-7609", cluster="lambda expression", file="JsonReader.cs"];
m3_3371 [label="Exit lambda expression", span="7605-7609", cluster="lambda expression", file="JsonReader.cs"];
m3_3384 [label="errors.Add(e.ErrorContext.Error.Message)", span="7630-7630", cluster="lambda expression", file="JsonReader.cs"];
m3_3385 [label="e.ErrorContext.Handled = true", span="7631-7631", cluster="lambda expression", file="JsonReader.cs"];
m3_3383 [label="Entry lambda expression", span="7628-7632", cluster="lambda expression", file="JsonReader.cs"];
m3_3386 [label="Exit lambda expression", span="7628-7632", cluster="lambda expression", file="JsonReader.cs"];
m3_3512 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7984-7984", cluster="lambda expression", file="JsonReader.cs"];
m3_3511 [label="Entry lambda expression", span="7984-7984", cluster="lambda expression", file="JsonReader.cs"];
m3_3513 [label="Exit lambda expression", span="7984-7984", cluster="lambda expression", file="JsonReader.cs"];
m3_3524 [label="Entry lambda expression", span="8028-8040", cluster="lambda expression", file="JsonReader.cs"];
m3_3525 [label="string json = ''[{},1]''", span="8030-8030", cluster="lambda expression", file="JsonReader.cs"];
m3_3526 [label="JsonSerializer serializer = new JsonSerializer()", span="8032-8032", cluster="lambda expression", file="JsonReader.cs"];
m3_3528 [label="var reader = new JsonTextReader(new StringReader(json))", span="8035-8035", cluster="lambda expression", file="JsonReader.cs"];
m3_3527 [label="serializer.CheckAdditionalContent = true", span="8033-8033", cluster="lambda expression", file="JsonReader.cs"];
m3_3531 [label="serializer.Deserialize(reader, typeof(MyType))", span="8039-8039", cluster="lambda expression", file="JsonReader.cs"];
m3_3529 [label="reader.Read()", span="8036-8036", cluster="lambda expression", file="JsonReader.cs"];
m3_3530 [label="reader.Read()", span="8037-8037", cluster="lambda expression", file="JsonReader.cs"];
m3_3532 [label="Exit lambda expression", span="8028-8040", cluster="lambda expression", file="JsonReader.cs"];
m3_3614 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="8227-8227", cluster="lambda expression", file="JsonReader.cs"];
m3_3613 [label="Entry lambda expression", span="8227-8227", cluster="lambda expression", file="JsonReader.cs"];
m3_3615 [label="Exit lambda expression", span="8227-8227", cluster="lambda expression", file="JsonReader.cs"];
m3_3694 [label="Entry lambda expression", span="8495-8495", cluster="lambda expression", file="JsonReader.cs"];
m3_3695 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="8495-8495", cluster="lambda expression", file="JsonReader.cs"];
m3_3696 [label="Exit lambda expression", span="8495-8495", cluster="lambda expression", file="JsonReader.cs"];
m3_3702 [label="Entry lambda expression", span="8510-8510", cluster="lambda expression", file="JsonReader.cs"];
m3_3703 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8510-8510", cluster="lambda expression", file="JsonReader.cs"];
m3_3704 [label="Exit lambda expression", span="8510-8510", cluster="lambda expression", file="JsonReader.cs"];
m3_3712 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8524-8524", cluster="lambda expression", file="JsonReader.cs"];
m3_3711 [label="Entry lambda expression", span="8524-8524", cluster="lambda expression", file="JsonReader.cs"];
m3_3713 [label="Exit lambda expression", span="8524-8524", cluster="lambda expression", file="JsonReader.cs"];
m3_3834 [label="Entry lambda expression", span="8914-8914", cluster="lambda expression", file="JsonReader.cs"];
m3_3835 [label="new IdReferenceResolver()", span="8914-8914", cluster="lambda expression", file="JsonReader.cs"];
m3_3836 [label="Exit lambda expression", span="8914-8914", cluster="lambda expression", file="JsonReader.cs"];
m3_4081 [label="Entry lambda expression", span="9483-9483", cluster="lambda expression", file="JsonReader.cs"];
m3_4082 [label="JsonConvert.SerializeObject(new ErroringTestClass())", span="9483-9483", cluster="lambda expression", file="JsonReader.cs"];
m3_4083 [label="Exit lambda expression", span="9483-9483", cluster="lambda expression", file="JsonReader.cs"];
m3_4088 [label="Entry lambda expression", span="9489-9489", cluster="lambda expression", file="JsonReader.cs"];
m3_4089 [label="JsonConvert.DeserializeObject<string>(''020474068'')", span="9489-9489", cluster="lambda expression", file="JsonReader.cs"];
m3_4090 [label="Exit lambda expression", span="9489-9489", cluster="lambda expression", file="JsonReader.cs"];
m3_4109 [label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                    JsonMessage,\r\n                    new MailAddressReadConverter(),\r\n                    new AttachmentReadConverter(),\r\n                    new EncodingReadConverter())", span="9572-9576", cluster="lambda expression", file="JsonReader.cs"];
m3_4110 [label="Exit lambda expression", span="9570-9577", cluster="lambda expression", file="JsonReader.cs"];
m3_3861 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8984-8984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonReader.cs"];
m3_3862 [label="ParticipantEntity product = new ParticipantEntity()", span="8986-8986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonReader.cs"];
m3_3863 [label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="8987-8987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonReader.cs"];
m3_3864 [label="string json = JsonConvert.SerializeObject(product)", span="8988-8988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonReader.cs"];
m3_3865 [label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="8990-8990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonReader.cs"];
m3_3866 [label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="8991-8991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonReader.cs"];
m3_3867 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8984-8984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonReader.cs"];
m3_811 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonReader.cs"];
m3_1091 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2386-2386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonReader.cs"];
m3_1092 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2388-2394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonReader.cs"];
m3_1093 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2396-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonReader.cs"];
m3_1094 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2397-2397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonReader.cs"];
m3_1095 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2386-2386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonReader.cs"];
m3_1846 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="190-190", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonReader.cs"];
m3_1799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3868-3868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonReader.cs"];
m3_1800 [label="string json = @''new Constructor(123)''", span="3870-3870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonReader.cs"];
m3_1801 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'')", span="3872-3872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonReader.cs"];
m3_1802 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3868-3868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonReader.cs"];
m3_2165 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonReader.cs"];
m3_1960 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4250-4250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1961 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="4252-4252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1962 [label="Assert.IsNotNull(d)", span="4254-4254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1963 [label="Assert.IsNotNull(d.Dictionary)", span="4255-4255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1964 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="4256-4256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1965 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="4257-4257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1966 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="4258-4258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1967 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="4259-4259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1968 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="4260-4260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1969 [label="Assert.AreEqual(1, d.List.Count)", span="4261-4261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1970 [label="Assert.AreEqual(''existing'', d.List[0])", span="4262-4262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1971 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4250-4250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonReader.cs"];
m3_1489 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3146-3146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonReader.cs"];
m3_1490 [label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="3148-3154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonReader.cs"];
m3_1491 [label="return person;", span="3155-3155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonReader.cs"];
m3_1492 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3146-3146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonReader.cs"];
m3_1268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2711-2711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1269 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2713-2713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1270 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2715-2715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1271 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2716-2716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1272 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2718-2718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1273 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2720-2720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_1274 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2711-2711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonReader.cs"];
m3_163 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="445-445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonReader.cs"];
m3_164 [label="return propertyName.ToUpper(CultureInfo.InvariantCulture);", span="450-450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonReader.cs"];
m3_165 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="445-445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonReader.cs"];
m3_3114 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7124-7124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3115 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="7126-7126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3116 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="7128-7128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3117 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="7130-7130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3118 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="7131-7131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3119 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="7132-7132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3120 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7124-7124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonReader.cs"];
m3_3011 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6876-6876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3012 [label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="6878-6878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3013 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6880-6883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3016 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6886-6889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3018 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6897-6905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3014 [label="StaticTestClass.y = 2", span="6884-6884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3015 [label="StaticTestClass.z = 3", span="6885-6885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3017 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6891-6895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3019 [label="Assert.AreEqual(-1, c2.x)", span="6907-6907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3020 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6908-6908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3021 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6909-6909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3022 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6876-6876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonReader.cs"];
m3_3624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8280-8280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonReader.cs"];
m3_3625 [label="IgnoreSerializableAttribute = false", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonReader.cs"];
m3_3626 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8280-8280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonReader.cs"];
m3_3042 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6954-6954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonReader.cs"];
m3_3043 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6956-6956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonReader.cs"];
m3_3044 [label="string json = JsonConvert.SerializeObject(d1)", span="6958-6958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonReader.cs"];
m3_3046 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6962-6962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonReader.cs"];
m3_3047 [label="Assert.AreEqual(d1[0], d2[0])", span="6963-6963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonReader.cs"];
m3_3045 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6960-6960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonReader.cs"];
m3_3048 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6954-6954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonReader.cs"];
m3_3241 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7363-7363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3242 [label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7365-7371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3243 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7373-7373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3244 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7374-7374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3245 [label="Assert.AreEqual(''Pre'', c.PreField)", span="7375-7375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3246 [label="Assert.AreEqual(''Post'', c.PostField)", span="7376-7376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3247 [label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7378-7384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3248 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="7386-7386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3249 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="7387-7387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3250 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="7388-7388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3251 [label="Assert.AreEqual(''Post'', c2.PostField)", span="7389-7389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_3252 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7363-7363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonReader.cs"];
m3_2705 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="6072-6072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonReader.cs"];
m3_2706 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="6074-6074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonReader.cs"];
m3_2707 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="6075-6075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonReader.cs"];
m3_2708 [label="Assert.AreEqual(''value!'', c.Value)", span="6076-6076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonReader.cs"];
m3_2709 [label="Assert.AreEqual(1, c.Age)", span="6077-6077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonReader.cs"];
m3_2710 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="6072-6072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonReader.cs"];
m3_880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1845-1845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonReader.cs"];
m3_1689 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonReader.cs"];
m3_2829 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6445-6445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2830 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6447-6447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2831 [label="c1.Categories.Add(''one'', 1)", span="6448-6448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2832 [label="c1.Categories.Add(''two'', 2)", span="6449-6449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2833 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6451-6451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2836 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6461-6461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2837 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6462-6462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2834 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6452-6458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2835 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6460-6460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2838 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="6463-6463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2839 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="6464-6464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_2840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6445-6445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonReader.cs"];
m3_3691 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8493-8493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonReader.cs"];
m3_3692 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="8495-8495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonReader.cs"];
m3_3693 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8493-8493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonReader.cs"];
m3_4137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9617-9617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_4138 [label="return objectType == typeof(System.Net.Mail.Attachment);", span="9619-9619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_4139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9617-9617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonReader.cs"];
m3_2623 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5876-5876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonReader.cs"];
m3_2624 [label="VectorParent obj = new VectorParent()", span="5878-5878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonReader.cs"];
m3_2625 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5879-5879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonReader.cs"];
m3_2626 [label="string str = JsonConvert.SerializeObject(obj)", span="5881-5881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonReader.cs"];
m3_2627 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5883-5883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonReader.cs"];
m3_2628 [label="Assert.AreEqual(1, obj.Position.X)", span="5885-5885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonReader.cs"];
m3_2629 [label="Assert.AreEqual(2, obj.Position.Y)", span="5886-5886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonReader.cs"];
m3_2630 [label="Assert.AreEqual(3, obj.Position.Z)", span="5887-5887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonReader.cs"];
m3_2631 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5876-5876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonReader.cs"];
m3_1047 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2310-2310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonReader.cs"];
m3_1048 [label="string json = @''[''''PRE\u003cPOST'''']''", span="2312-2312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonReader.cs"];
m3_1049 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2314-2314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonReader.cs"];
m3_1050 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2315-2315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonReader.cs"];
m3_1051 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2317-2317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonReader.cs"];
m3_1053 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2320-2320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonReader.cs"];
m3_1052 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="2319-2319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonReader.cs"];
m3_1054 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2310-2310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonReader.cs"];
m3_3837 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8930-8930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3838 [label="var consoleWriter = new ConsoleWriter()", span="8932-8932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3839 [label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="8935-8939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3840 [label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="8945-8945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3845 [label="dict2.Add(consoleWriter, ''Console'')", span="8956-8956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3851 [label="dict3.Add(''Console'', consoleWriter)", span="8971-8971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3842 [label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="8948-8948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3846 [label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="8958-8958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3848 [label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="8963-8963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3852 [label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="8973-8973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3854 [label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="8978-8978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3841 [label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="8946-8946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3843 [label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="8949-8949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3844 [label="var dict2 = new Dictionary<IMyInterface, string>()", span="8955-8955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3847 [label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="8959-8961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3849 [label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="8964-8964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3850 [label="var dict3 = new Dictionary<string, IMyInterface>()", span="8970-8970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3853 [label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="8974-8976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3855 [label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="8979-8979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_3856 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8930-8930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonReader.cs"];
m3_2201 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonReader.cs"];
m3_2171 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonReader.cs"];
m3_1150 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2496-2496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_1151 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_1152 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2499-2499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_1153 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2500-2500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_1154 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2502-2502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_1155 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2503-2503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_1156 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2504-2504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_1157 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2505-2505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_1158 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2506-2506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_1159 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2496-2496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonReader.cs"];
m3_2711 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6081-6081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonReader.cs"];
m3_2712 [label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="6083-6086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonReader.cs"];
m3_2713 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6088-6088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonReader.cs"];
m3_2714 [label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="6090-6096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonReader.cs"];
m3_2715 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="6098-6098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonReader.cs"];
m3_2716 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="6100-6100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonReader.cs"];
m3_2717 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="6101-6101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonReader.cs"];
m3_2718 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="6102-6102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonReader.cs"];
m3_2719 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6081-6081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonReader.cs"];
m3_2997 [label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43", cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="JsonReader.cs"];
m3_152 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonReader.cs"];
m3_1168 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2525-2525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1169 [label="ClassWithArray wibble = new ClassWithArray()", span="2527-2527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1170 [label="wibble.Foo = ''hello''", span="2528-2528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1171 [label="wibble.Bar.Add(1)", span="2529-2529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1172 [label="wibble.Bar.Add(2)", span="2530-2530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1173 [label="wibble.Bar.Add(3)", span="2531-2531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1174 [label="string json = JsonConvert.SerializeObject(wibble)", span="2532-2532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1175 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2534-2534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1176 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2535-2535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1177 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2537-2537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1178 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2538-2538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1179 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2539-2539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1180 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2540-2540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1181 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2541-2541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1182 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2542-2542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2525-2525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonReader.cs"];
m3_1130 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="790-790", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonReader.cs"];
m3_1771 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3819-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonReader.cs"];
m3_1772 [label="string json = @''[]''", span="3821-3821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonReader.cs"];
m3_1773 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3823-3825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonReader.cs"];
m3_1774 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3819-3819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonReader.cs"];
m3_2906 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6687-6687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2907 [label="ClassWithException classWithException = new ClassWithException()", span="6689-6689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2908 [label="throw new Exception(''Test Exception'');", span="6692-6692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2910 [label="classWithException.Exceptions.Add(ex)", span="6696-6696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2911 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="6698-6698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2914 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6702-6702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2909 [label=Exception, span="6694-6694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2912 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6699-6699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2913 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6700-6700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2915 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6704-6704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2916 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6705-6705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_2917 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6687-6687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonReader.cs"];
m3_3574 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8141-8141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonReader.cs"];
m3_3575 [label="m_Item1 = item1", span="8143-8143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonReader.cs"];
m3_3576 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8141-8141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonReader.cs"];
m3_3651 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8389-8389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonReader.cs"];
m3_3652 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8391-8395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonReader.cs"];
m3_3653 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="8397-8400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonReader.cs"];
m3_3654 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8402-8405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonReader.cs"];
m3_3655 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8389-8389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonReader.cs"];
m3_352 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="724-724", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonReader.cs"];
m3_696 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonReader.cs"];
m3_40 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonReader.cs"];
m3_41 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']''),\r\n                ''Could not convert string to boolean: 2000-12-20T10:55:55Z. Path '[0]', line 1, position 23.'')", span="228-230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonReader.cs"];
m3_42 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="226-226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonReader.cs"];
m3_870 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1829-1829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonReader.cs"];
m3_1039 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonReader.cs"];
m3_2460 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5499-5499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonReader.cs"];
m3_698 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_699 [label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="1497-1500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_700 [label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="1501-1504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_701 [label="p1.Spouse = p2", span="1506-1506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_702 [label="p2.Spouse = p1", span="1507-1507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_703 [label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="1509-1509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_704 [label="obj._parent = obj", span="1510-1510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_706 [label="string json = JsonConvert.SerializeObject(obj, settings)", span="1518-1518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_709 [label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="1548-1548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_710 [label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_711 [label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="1550-1550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_712 [label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="1551-1551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_713 [label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="1552-1552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_705 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="1512-1516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_707 [label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="1520-1544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_708 [label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="1546-1546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_714 [label="Assert.AreEqual(obj2._person1, obj2._person3)", span="1553-1553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_715 [label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="1554-1554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_716 [label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="1555-1555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_717 [label="Assert.AreEqual(obj2._parent, obj2)", span="1556-1556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_718 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonReader.cs"];
m3_2364 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5342-5342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2365 [label="Pos p = (Pos)value", span="5344-5344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2367 [label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="5348-5348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2368 [label="writer.WriteNull()", span="5352-5352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2366 [label="p != null", span="5346-5346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_2369 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5342-5342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonReader.cs"];
m3_353 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonReader.cs"];
m3_2163 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonReader.cs"];
m3_2721 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6106-6106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonReader.cs"];
m3_2722 [label="ComplexItem i = new ComplexItem()", span="6108-6108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonReader.cs"];
m3_2723 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="6110-6110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonReader.cs"];
m3_2724 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="6112-6114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonReader.cs"];
m3_2725 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6106-6106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonReader.cs"];
m3_683 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="JsonReader.cs"];
m3_424 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1087-1087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_425 [label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="1089-1098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_426 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="1099-1099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_432 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1106-1106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_427 [label="Assert.AreEqual(3, o.Count)", span="1100-1100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_428 [label="Assert.AreEqual(true, (bool)o[''A''])", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_429 [label="Assert.AreEqual(false, (bool)o[''B''])", span="1102-1102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_430 [label="Assert.AreEqual(1, o[''C''].Count())", span="1103-1103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_431 [label="Assert.AreEqual(1, (int)o[''C''][0])", span="1104-1104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_433 [label="json = @''{/* Test */}''", span="1108-1108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_434 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_436 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1111-1111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_435 [label="Assert.AreEqual(0, o.Count)", span="1110-1110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_437 [label="json = @''{''''A'''': true/* Test */}''", span="1113-1113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_438 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1114-1114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_441 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1117-1117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_439 [label="Assert.AreEqual(1, o.Count)", span="1115-1115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_440 [label="Assert.AreEqual(true, (bool)o[''A''])", span="1116-1116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_442 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1087-1087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonReader.cs"];
m3_1069 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="JsonReader.cs"];
m3_2889 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6612-6612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonReader.cs"];
m3_2890 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6614-6614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonReader.cs"];
m3_2891 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6616-6616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonReader.cs"];
m3_2892 [label="Assert.AreEqual(3, r.Departures.Count())", span="6617-6617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonReader.cs"];
m3_2893 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6618-6618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonReader.cs"];
m3_2894 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6619-6619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonReader.cs"];
m3_2895 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="6620-6620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonReader.cs"];
m3_2896 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6612-6612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonReader.cs"];
m3_783 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1619-1619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonReader.cs"];
m3_1908 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonReader.cs"];
m3_3460 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonReader.cs"];
m3_3484 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="190-190", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonReader.cs"];
m3_3153 [label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonReader.cs"];
m3_211 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="60-60", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonReader.cs"];
m3_3085 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonReader.cs"];
m3_3868 [label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonReader.cs"];
m3_2562 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5761-5761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonReader.cs"];
m3_2563 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5763-5763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonReader.cs"];
m3_2564 [label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5765-5767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonReader.cs"];
m3_2565 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5761-5761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonReader.cs"];
m3_3521 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8026-8026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonReader.cs"];
m3_3522 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object.'')", span="8028-8040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonReader.cs"];
m3_3523 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8026-8026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonReader.cs"];
m3_25 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonReader.cs"];
m3_110 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs"];
m3_3908 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9065-9065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonReader.cs"];
m3_3909 [label="return (long)Value;", span="9067-9067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonReader.cs"];
m3_3910 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9065-9065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonReader.cs"];
m3_2808 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="6371-6371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonReader.cs"];
m3_2300 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonReader.cs"];
m3_3171 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7249-7249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonReader.cs"];
m3_3172 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="7251-7251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonReader.cs"];
m3_3173 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="7253-7253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonReader.cs"];
m3_3174 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="7255-7255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonReader.cs"];
m3_3175 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="7257-7257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonReader.cs"];
m3_3176 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7249-7249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonReader.cs"];
m3_1438 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="JsonReader.cs"];
m3_3024 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6914-6914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_3025 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6916-6916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_3026 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6920-6920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_3027 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="6922-6922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_3028 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6923-6923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_3029 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6925-6925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_3030 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6927-6927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_3031 [label="Assert.AreEqual(1.5m, c.Quantity)", span="6929-6929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_3032 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6930-6930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_3033 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6914-6914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonReader.cs"];
m3_2122 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4739-4739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonReader.cs"];
m3_2123 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4741-4741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonReader.cs"];
m3_2124 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4739-4739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonReader.cs"];
m3_327 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonReader.cs"];
m3_328 [label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="890-890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonReader.cs"];
m3_329 [label="Assert.AreEqual(2, s.Count)", span="891-891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonReader.cs"];
m3_330 [label="Assert.AreEqual(''1'', s[0])", span="892-892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonReader.cs"];
m3_331 [label="Assert.AreEqual(''2'', s[1])", span="893-893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonReader.cs"];
m3_332 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonReader.cs"];
m3_1504 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3181-3181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1505 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="3183-3183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1506 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="3184-3189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1507 [label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="3190-3193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1508 [label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="3194-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1509 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3199-3199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1513 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="3222-3222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1514 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="3223-3223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1515 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="3224-3224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1510 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="3201-3217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1511 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="3219-3219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1512 [label="Assert.IsNotNull(deserializedObject)", span="3220-3220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1516 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3181-3181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonReader.cs"];
m3_1414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2963-2963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonReader.cs"];
m3_1415 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="2965-2971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonReader.cs"];
m3_1416 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2973-2973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonReader.cs"];
m3_1417 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="2975-2980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonReader.cs"];
m3_1418 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2982-2982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonReader.cs"];
m3_1419 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="2984-2984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonReader.cs"];
m3_1420 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="2985-2985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonReader.cs"];
m3_1421 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2963-2963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonReader.cs"];
m3_1394 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2932-2932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonReader.cs"];
m3_1395 [label="string json = @''{''''Height'''':1}''", span="2934-2934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonReader.cs"];
m3_1396 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2936-2936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonReader.cs"];
m3_1397 [label="Assert.AreEqual(1, c.Height)", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonReader.cs"];
m3_1398 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2932-2932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonReader.cs"];
m3_2870 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6482-6482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonReader.cs"];
m3_3100 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7101-7101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonReader.cs"];
m3_3101 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="7103-7107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonReader.cs"];
m3_3102 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 14.'')", span="7109-7109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonReader.cs"];
m3_3103 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7101-7101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonReader.cs"];
m3_4133 [label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonReader.cs"];
m3_2077 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonReader.cs"];
m3_338 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="907-907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_339 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="909-909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_340 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="910-910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_344 [label="serializer.Populate(reader, l)", span="916-916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_347 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="921-921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_341 [label="JsonSerializer serializer = new JsonSerializer()", span="912-912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_342 [label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_343 [label="IList<object> l = new List<object>()", span="915-915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_345 [label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="918-918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_346 [label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="919-919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_348 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="907-907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonReader.cs"];
m3_369 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="988-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonReader.cs"];
m3_370 [label="Message = message", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonReader.cs"];
m3_371 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="988-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonReader.cs"];
m3_821 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonReader.cs"];
m3_3255 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonReader.cs"];
m3_4085 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9487-9487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonReader.cs"];
m3_4086 [label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="9489-9489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonReader.cs"];
m3_4087 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9487-9487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonReader.cs"];
m3_1033 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2295-2295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1034 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_1035 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2295-2295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonReader.cs"];
m3_3858 [label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35", cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonReader.cs"];
m3_173 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="438-438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="JsonReader.cs"];
m3_895 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JsonReader.cs"];
m3_417 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonReader.cs"];
m3_418 [label="string json = ''['1.2.3.4444444444444444444444']''", span="1081-1081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonReader.cs"];
m3_419 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Version>>(json); }, @''Error converting value ''''1.2.3.4444444444444444444444'''' to type 'System.Version'. Path '[0]', line 1, position 31.'')", span="1083-1083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonReader.cs"];
m3_420 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonReader.cs"];
m3_2448 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5485-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonReader.cs"];
m3_2449 [label="string json = @''{'value':9.9}''", span="5487-5487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonReader.cs"];
m3_2450 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5489-5493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonReader.cs"];
m3_2451 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5495-5495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonReader.cs"];
m3_2452 [label="Assert.AreEqual(9.9m, dic[''value''])", span="5496-5496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonReader.cs"];
m3_2453 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5485-5485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonReader.cs"];
m3_2688 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs"];
m3_973 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonReader.cs"];
m3_974 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2114-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonReader.cs"];
m3_975 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="2116-2116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonReader.cs"];
m3_976 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="2118-2118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonReader.cs"];
m3_977 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonReader.cs"];
m3_445 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="395-395", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonReader.cs"];
m3_4038 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9367-9367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonReader.cs"];
m3_4039 [label="ConstantTestClass c1 = new ConstantTestClass()", span="9369-9369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonReader.cs"];
m3_4040 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="9371-9371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonReader.cs"];
m3_4041 [label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="9373-9375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonReader.cs"];
m3_4042 [label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="9377-9377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonReader.cs"];
m3_4043 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9367-9367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonReader.cs"];
m3_3679 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonReader.cs"];
m3_1478 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3137-3137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonReader.cs"];
m3_1479 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="3139-3139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonReader.cs"];
m3_1480 [label="testClass.co = new Co()", span="3140-3140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonReader.cs"];
m3_1481 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="3141-3141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonReader.cs"];
m3_1482 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="3143-3143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonReader.cs"];
m3_1483 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3137-3137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonReader.cs"];
m3_4193 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", span="", file="JsonReader.cs"];
m3_4194 [label=c1, span="", file="JsonReader.cs"];
m3_4195 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span="", file="JsonReader.cs"];
m3_4196 [label=c1, span="", file="JsonReader.cs"];
m3_4197 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span="", file="JsonReader.cs"];
m3_4198 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span="", file="JsonReader.cs"];
m3_4199 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse", span="", file="JsonReader.cs"];
m3_4200 [label=json, span="", file="JsonReader.cs"];
m3_4201 [label=referenceResolver, span="", file="JsonReader.cs"];
m3_4202 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span="", file="JsonReader.cs"];
m3_4203 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span="", file="JsonReader.cs"];
m3_4204 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="JsonReader.cs"];
m3_4205 [label=json, span="", file="JsonReader.cs"];
m3_4206 [label=strFromTest, span="", file="JsonReader.cs"];
m3_4207 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass", span="", file="JsonReader.cs"];
m3_4208 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass", span="", file="JsonReader.cs"];
m3_4209 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonReader.cs"];
m3_4210 [label=json, span="", file="JsonReader.cs"];
m3_4211 [label=json, span="", file="JsonReader.cs"];
m3_4212 [label=json, span="", file="JsonReader.cs"];
m3_4213 [label=json, span="", file="JsonReader.cs"];
m3_4214 [label=json, span="", file="JsonReader.cs"];
m3_4215 [label=json, span="", file="JsonReader.cs"];
m3_4216 [label=json, span="", file="JsonReader.cs"];
m3_4217 [label=json, span="", file="JsonReader.cs"];
m3_4218 [label=json, span="", file="JsonReader.cs"];
m3_4219 [label=json, span="", file="JsonReader.cs"];
m3_4220 [label=json, span="", file="JsonReader.cs"];
m3_4221 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="JsonReader.cs"];
m3_4222 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="JsonReader.cs"];
m3_4223 [label=json, span="", file="JsonReader.cs"];
m3_4224 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="JsonReader.cs"];
m3_4225 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span="", file="JsonReader.cs"];
m3_4226 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span="", file="JsonReader.cs"];
m3_4227 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="JsonReader.cs"];
m3_4228 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="JsonReader.cs"];
m3_4229 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span="", file="JsonReader.cs"];
m3_4230 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="JsonReader.cs"];
m3_4231 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="JsonReader.cs"];
m3_4232 [label=json, span="", file="JsonReader.cs"];
m3_4233 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span="", file="JsonReader.cs"];
m3_4234 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span="", file="JsonReader.cs"];
m3_4235 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span="", file="JsonReader.cs"];
m3_4236 [label=json, span="", file="JsonReader.cs"];
m3_4237 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span="", file="JsonReader.cs"];
m3_4238 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="JsonReader.cs"];
m3_4239 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span="", file="JsonReader.cs"];
m3_4240 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonReader.cs"];
m3_4241 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonReader.cs"];
m3_4242 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span="", file="JsonReader.cs"];
m3_4243 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span="", file="JsonReader.cs"];
m3_4244 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="JsonReader.cs"];
m3_4245 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="JsonReader.cs"];
m3_4246 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="JsonReader.cs"];
m3_4247 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="JsonReader.cs"];
m3_4248 [label=json, span="", file="JsonReader.cs"];
m3_4249 [label=json, span="", file="JsonReader.cs"];
m3_4250 [label=json, span="", file="JsonReader.cs"];
m3_4251 [label=errors, span="", file="JsonReader.cs"];
m3_4252 [label=errors, span="", file="JsonReader.cs"];
m3_4253 [label=errors, span="", file="JsonReader.cs"];
m3_4254 [label=json, span="", file="JsonReader.cs"];
m3_4255 [label=s, span="", file="JsonReader.cs"];
m3_4256 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="JsonReader.cs"];
m3_4257 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span="", file="JsonReader.cs"];
m3_4258 [label=json, span="", file="JsonReader.cs"];
m3_4259 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="JsonReader.cs"];
m3_4260 [label=json, span="", file="JsonReader.cs"];
m3_4261 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span="", file="JsonReader.cs"];
m3_4262 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span="", file="JsonReader.cs"];
m3_4263 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span="", file="JsonReader.cs"];
m3_4264 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType", span="", file="JsonReader.cs"];
m3_4265 [label=JsonMessage, span="", file="JsonReader.cs"];
m3_4266 [label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span="", file="JsonReader.cs"];
m3_4267 [label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor", span="", file="JsonReader.cs"];
m3_4268 [label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor", span="", file="JsonReader.cs"];
m3_4269 [label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor", span="", file="JsonReader.cs"];
m4_561 [label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="1517-1517", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m4_811 [label="MatchValueWithTrailingSeparator(JsonConvert.True)", span="1522-1522", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m4_812 [label="SetToken(JsonToken.Boolean, true)", span="1524-1524", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m4_813 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="1528-1528", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m4_814 [label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="1517-1517", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs"];
m4_714 [label="Entry System.Convert.ToInt32(string, int)", span="0-0", cluster="System.Convert.ToInt32(string, int)", file="JsonTextReader.cs"];
m4_313 [label="Entry System.Convert.ToChar(int)", span="0-0", cluster="System.Convert.ToChar(int)", file="JsonTextReader.cs"];
m4_404 [label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="934-934", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonTextReader.cs"];
m4_719 [label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0", cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonTextReader.cs"];
m4_134 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475", cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonTextReader.cs"];
m4_147 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs"];
m4_148 [label="return ReadAsDateTimeInternal();", span="355-355", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs"];
m4_149 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReader.cs"];
m4_854 [label="Entry System.IO.TextReader.Close()", span="0-0", cluster="System.IO.TextReader.Close()", file="JsonTextReader.cs"];
m4_295 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", span="65-65", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", file="JsonTextReader.cs"];
m4_131 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m4_132 [label="return ReadAsBytesInternal();", span="319-319", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m4_133 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs"];
m4_138 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="575-575", cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonTextReader.cs"];
m4_459 [label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="875-875", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs"];
m4_463 [label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="877-877", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs"];
m4_464 [label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="875-875", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs"];
m4_15 [label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="103-103", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m4_16 [label="_lineNumber++", span="105-105", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m4_17 [label="_lineStartPos = pos - 1", span="106-106", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m4_18 [label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="103-103", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="JsonTextReader.cs"];
m4_567 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="1568-1568", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m4_827 [label="MatchValueWithTrailingSeparator(JsonConvert.NegativeInfinity)", span="1570-1570", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m4_828 [label="_floatParseHandling == FloatParseHandling.Decimal", span="1572-1572", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m4_831 [label="throw JsonReaderException.Create(this, ''Error parsing negative infinity value.'');", span="1579-1579", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m4_829 [label="throw new JsonReaderException(''Cannot read -Infinity as a decimal.'');", span="1573-1573", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m4_830 [label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="1575-1575", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m4_832 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="1568-1568", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs"];
m4_186 [label="Entry Newtonsoft.Json.JsonTextReader.ParseComment()", span="1363-1363", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_726 [label="_charPos++", span="1366-1366", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_727 [label="!EnsureChars(1, false)", span="1368-1368", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_728 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="1369-1369", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_729 [label="bool singlelineComment", span="1371-1371", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_730 [label="_chars[_charPos] == '*'", span="1373-1373", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_743 [label="!singlelineComment", span="1395-1395", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_750 [label="!singlelineComment", span="1410-1410", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_757 [label=singlelineComment, span="1425-1425", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_762 [label=singlelineComment, span="1433-1433", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_731 [label="singlelineComment = false", span="1374-1374", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_732 [label="_chars[_charPos] == '/'", span="1375-1375", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_733 [label="singlelineComment = true", span="1376-1376", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_734 [label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1378-1378", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_735 [label="_charPos++", span="1380-1380", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_736 [label="int initialPosition = _charPos", span="1382-1382", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_737 [label="bool commentFinished = false", span="1384-1384", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_745 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1398-1398", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_753 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition - 1)", span="1416-1416", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_758 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1427-1427", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_763 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1435-1435", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_738 [label="!commentFinished", span="1386-1386", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_739 [label="_chars[_charPos]", span="1388-1388", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_767 [label="SetToken(JsonToken.Comment, _stringReference.ToString())", span="1446-1446", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_740 [label="'\0'", span="1390-1390", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_748 [label="'*'", span="1407-1407", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_756 [label="StringUtils.CarriageReturn", span="1424-1424", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_761 [label="StringUtils.LineFeed", span="1432-1432", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_766 [label="_charPos++", span="1441-1441", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_741 [label="_charsUsed == _charPos", span="1391-1391", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_742 [label="ReadData(true) == 0", span="1393-1393", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_747 [label="_charPos++", span="1404-1404", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_744 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="1396-1396", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_746 [label="commentFinished = true", span="1399-1399", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_749 [label="_charPos++", span="1408-1408", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_751 [label="EnsureChars(0, true)", span="1412-1412", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_752 [label="_chars[_charPos] == '/'", span="1414-1414", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_754 [label="_charPos++", span="1418-1418", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_755 [label="commentFinished = true", span="1419-1419", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_760 [label="ProcessCarriageReturn(true)", span="1430-1430", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_759 [label="commentFinished = true", span="1428-1428", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_765 [label="ProcessLineFeed()", span="1438-1438", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_764 [label="commentFinished = true", span="1436-1436", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_768 [label="ClearRecentString()", span="1448-1448", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_769 [label="Exit Newtonsoft.Json.JsonTextReader.ParseComment()", span="1363-1363", cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs"];
m4_364 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="27-27", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="JsonTextReader.cs"];
m4_130 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="839-839", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonTextReader.cs"];
m4_563 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="1532-1532", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m4_815 [label="MatchValueWithTrailingSeparator(JsonConvert.Null)", span="1534-1534", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m4_816 [label="SetToken(JsonToken.Null)", span="1536-1536", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m4_817 [label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="1540-1540", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m4_818 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="1532-1532", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs"];
m4_635 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="1469-1469", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m4_781 [label="bool match = MatchValue(value)", span="1472-1472", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m4_782 [label="!match", span="1474-1474", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m4_783 [label="return false;", span="1475-1475", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m4_784 [label="!EnsureChars(0, false)", span="1477-1477", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m4_785 [label="return true;", span="1478-1478", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m4_786 [label="return IsSeparator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="1480-1480", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m4_787 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="1469-1469", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="JsonTextReader.cs"];
m4_129 [label="Entry Newtonsoft.Json.JsonTextReader.ReadInternal()", span="369-369", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_155 [label=true, span="371-371", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_156 [label=_currentState, span="373-373", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_157 [label="State.Start", span="375-375", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_164 [label="State.Object", span="382-382", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_167 [label="State.PostValue", span="385-385", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_170 [label="State.Finished", span="391-391", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_180 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="409-409", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_158 [label="State.Property", span="376-376", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_159 [label="State.Array", span="377-377", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_160 [label="State.ArrayStart", span="378-378", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_161 [label="State.Constructor", span="379-379", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_162 [label="State.ConstructorStart", span="380-380", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_163 [label="return ParseValue();", span="381-381", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_165 [label="State.ObjectStart", span="383-383", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_166 [label="return ParseObject();", span="384-384", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_168 [label="ParsePostValue()", span="388-388", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_169 [label="return true;", span="389-389", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_171 [label="EnsureChars(0, false)", span="392-392", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_172 [label="EatWhitespace(false)", span="394-394", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_179 [label="return false;", span="407-407", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_173 [label=_isEndOfFile, span="395-395", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_174 [label="return false;", span="397-397", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_175 [label="_chars[_charPos] == '/'", span="399-399", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_176 [label="ParseComment()", span="401-401", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_178 [label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="405-405", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_177 [label="return true;", span="402-402", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_181 [label="Exit Newtonsoft.Json.JsonTextReader.ReadInternal()", span="369-369", cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs"];
m4_716 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="646-646", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="JsonTextReader.cs"];
m4_109 [label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="265-265", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_110 [label=_isEndOfFile, span="267-267", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_112 [label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="270-270", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_114 [label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="278-278", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_111 [label="return false;", span="268-268", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_113 [label="int totalCharsRead = 0", span="272-272", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_117 [label="totalCharsRead < charsRequired", span="285-285", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_118 [label="totalCharsRead < charsRequired", span="287-287", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_116 [label="totalCharsRead += charsRead", span="284-284", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_115 [label="charsRead == 0", span="281-281", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_119 [label="return false;", span="288-288", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_120 [label="return true;", span="289-289", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_121 [label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="265-265", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="JsonTextReader.cs"];
m4_154 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonTextReader.cs"];
m4_566 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="1583-1583", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m4_834 [label="MatchValueWithTrailingSeparator(JsonConvert.PositiveInfinity)", span="1585-1585", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m4_835 [label="_floatParseHandling == FloatParseHandling.Decimal", span="1587-1587", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m4_838 [label="throw JsonReaderException.Create(this, ''Error parsing positive infinity value.'');", span="1594-1594", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m4_836 [label="throw new JsonReaderException(''Cannot read Infinity as a decimal.'');", span="1588-1588", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m4_837 [label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="1590-1590", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m4_839 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="1583-1583", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs"];
m4_52 [label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0", cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonTextReader.cs"];
m4_465 [label="Entry char.IsLetterOrDigit(char)", span="0-0", cluster="char.IsLetterOrDigit(char)", file="JsonTextReader.cs"];
m4_311 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="JsonTextReader.cs"];
m4_846 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1616-1616", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m4_847 [label="base.Close()", span="1618-1618", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m4_848 [label="CloseInput && _reader != null", span="1620-1620", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m4_849 [label="_reader.Close()", span="1622-1622", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m4_850 [label="_buffer != null", span="1627-1627", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m4_851 [label="_buffer.Clear()", span="1628-1628", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m4_852 [label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="1616-1616", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs"];
m4_151 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs"];
m4_152 [label="return ReadAsDateTimeOffsetInternal();", span="365-365", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs"];
m4_153 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs"];
m4_183 [label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="771-771", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_405 [label=true, span="773-773", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_406 [label="char currentChar = _chars[_charPos]", span="775-775", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_407 [label=currentChar, span="777-777", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_427 [label="char.IsWhiteSpace(currentChar)", span="809-809", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_408 [label="'\0'", span="779-779", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_413 [label="'}'", span="790-790", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_417 [label="'/'", span="794-794", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_420 [label="StringUtils.CarriageReturn", span="797-797", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_422 [label="StringUtils.LineFeed", span="800-800", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_424 [label="' '", span="803-803", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_409 [label="_charsUsed == _charPos", span="780-780", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_410 [label="ReadData(false) == 0", span="782-782", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_412 [label="_charPos++", span="787-787", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_411 [label="return false;", span="783-783", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_414 [label="SetToken(JsonToken.EndObject)", span="791-791", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_415 [label="_charPos++", span="792-792", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_416 [label="return true;", span="793-793", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_418 [label="ParseComment()", span="795-795", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_419 [label="return true;", span="796-796", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_421 [label="ProcessCarriageReturn(false)", span="798-798", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_423 [label="ProcessLineFeed()", span="801-801", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_425 [label="StringUtils.Tab", span="804-804", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_426 [label="_charPos++", span="806-806", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_428 [label="_charPos++", span="812-812", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_429 [label="return ParseProperty();", span="816-816", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_430 [label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="771-771", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="JsonTextReader.cs"];
m4_294 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="JsonTextReader.cs"];
m4_570 [label="Entry char.IsNumber(char)", span="0-0", cluster="char.IsNumber(char)", file="JsonTextReader.cs"];
m4_721 [label="Entry Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="1357-1357", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs"];
m4_723 [label="return System.Numerics.BigInteger.Parse(number, culture);", span="1359-1359", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs"];
m4_724 [label="Exit Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="1357-1357", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="JsonTextReader.cs"];
m4_462 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="849-849", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonTextReader.cs"];
m4_0 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m4_1 [label="reader == null", span="74-74", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m4_3 [label="_reader = reader", span="77-77", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m4_2 [label="throw new ArgumentNullException(''reader'');", span="75-75", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m4_4 [label="_lineNumber = 1", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m4_5 [label="_chars = new char[1025]", span="79-79", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m4_6 [label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs"];
m4_187 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTextReader.cs"];
m4_188 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextReader.cs"];
m4_55 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", span="286-286", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", file="JsonTextReader.cs"];
m4_50 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="414-414", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_189 [label="int charPos = _charPos", span="416-416", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_200 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="433-433", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_205 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="442-442", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_275 [label="_chars[charPos - 1] == quote", span="569-569", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_190 [label="int initialPosition = _charPos", span="417-417", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_194 [label="_chars[charPos++]", span="423-423", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_191 [label="int lastWritePosition = _charPos", span="418-418", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_277 [label="initialPosition == lastWritePosition", span="573-573", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_278 [label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="575-575", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_192 [label="StringBuffer buffer = null", span="419-419", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_253 [label="WriteCharToBuffer(buffer, highSurrogate, lastWritePosition, escapeStartPos)", span="530-530", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_263 [label="WriteCharToBuffer(buffer, writeChar, lastWritePosition, escapeStartPos)", span="553-553", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_193 [label=true, span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_251 [label="buffer == null", span="527-527", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_261 [label="buffer == null", span="550-550", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_279 [label="buffer == null", span="579-579", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_282 [label="buffer.Append(_chars, lastWritePosition, charPos - lastWritePosition)", span="583-583", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_283 [label="_stringReference = new StringReference(buffer.GetInternalBuffer(), 0, buffer.Position)", span="585-585", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_195 [label="'\0'", span="425-425", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_201 [label="'\\'", span="437-437", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_265 [label="StringUtils.CarriageReturn", span="557-557", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_269 [label="StringUtils.LineFeed", span="562-562", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_273 [label="''''", span="567-567", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_196 [label="_charsUsed == charPos - 1", span="426-426", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_197 [label="charPos--", span="428-428", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_202 [label="_charPos = charPos", span="438-438", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_204 [label="_charPos = charPos", span="441-441", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_206 [label="int escapeStartPos = charPos - 1", span="446-446", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_207 [label="char currentChar = _chars[charPos]", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_211 [label="charPos++", span="455-455", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_198 [label="ReadData(true) == 0", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_199 [label="_charPos = charPos", span="432-432", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_203 [label="!EnsureChars(0, true)", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_208 [label="char writeChar", span="450-450", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_209 [label=currentChar, span="452-452", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_231 [label="writeChar = currentChar", span="481-481", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_260 [label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_210 [label="'b'", span="454-454", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_213 [label="'t'", span="458-458", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_216 [label="'n'", span="462-462", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_219 [label="'f'", span="466-466", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_222 [label="'r'", span="470-470", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_225 [label="'\\'", span="474-474", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_228 [label="''''", span="478-478", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_233 [label="'u'", span="484-484", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_258 [label="charPos++", span="545-545", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_212 [label="writeChar = '\b'", span="456-456", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_214 [label="charPos++", span="459-459", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_215 [label="writeChar = '\t'", span="460-460", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_217 [label="charPos++", span="463-463", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_218 [label="writeChar = '\n'", span="464-464", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_220 [label="charPos++", span="467-467", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_221 [label="writeChar = '\f'", span="468-468", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_223 [label="charPos++", span="471-471", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_224 [label="writeChar = '\r'", span="472-472", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_226 [label="charPos++", span="475-475", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_227 [label="writeChar = '\\'", span="476-476", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_232 [label="charPos++", span="482-482", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_229 [label="'\''", span="479-479", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_230 [label="'/'", span="480-480", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_234 [label="charPos++", span="485-485", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_235 [label="_charPos = charPos", span="486-486", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_236 [label="writeChar = ParseUnicode()", span="487-487", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_237 [label="StringUtils.IsLowSurrogate(writeChar)", span="489-489", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_239 [label="StringUtils.IsHighSurrogate(writeChar)", span="494-494", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_243 [label="char highSurrogate = writeChar", span="506-506", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_238 [label="writeChar = UnicodeReplacementChar", span="492-492", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_240 [label="bool anotherHighSurrogate", span="496-496", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_257 [label="charPos = _charPos", span="542-542", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_241 [label="anotherHighSurrogate = false", span="501-501", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_242 [label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="504-504", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_256 [label=anotherHighSurrogate, span="539-539", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_255 [label="writeChar = UnicodeReplacementChar", span="537-537", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_244 [label="_charPos += 2", span="508-508", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_245 [label="writeChar = ParseUnicode()", span="509-509", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_246 [label="StringUtils.IsLowSurrogate(writeChar)", span="511-511", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_247 [label="StringUtils.IsHighSurrogate(writeChar)", span="515-515", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_248 [label="highSurrogate = UnicodeReplacementChar", span="518-518", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_250 [label="highSurrogate = UnicodeReplacementChar", span="524-524", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_249 [label="anotherHighSurrogate = true", span="519-519", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_252 [label="buffer = GetBuffer()", span="528-528", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_254 [label="lastWritePosition = _charPos", span="531-531", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_259 [label="_charPos = charPos", span="546-546", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_264 [label="lastWritePosition = charPos", span="555-555", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_266 [label="_charPos = charPos - 1", span="558-558", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_262 [label="buffer = GetBuffer()", span="551-551", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_267 [label="ProcessCarriageReturn(true)", span="559-559", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_268 [label="charPos = _charPos", span="560-560", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_270 [label="_charPos = charPos - 1", span="563-563", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_271 [label="ProcessLineFeed()", span="564-564", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_272 [label="charPos = _charPos", span="565-565", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_274 [label="'\''", span="568-568", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_276 [label="charPos--", span="571-571", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_281 [label="charPos > lastWritePosition", span="582-582", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_284 [label="charPos++", span="588-588", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_280 [label="buffer = GetBuffer()", span="580-580", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_285 [label="_charPos = charPos", span="589-589", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_286 [label="return;", span="590-590", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_287 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="414-414", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs"];
m4_135 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs"];
m4_136 [label="return ReadAsDecimalInternal();", span="328-328", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs"];
m4_137 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs"];
m4_139 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs"];
m4_140 [label="return ReadAsInt32Internal();", span="337-337", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs"];
m4_141 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReader.cs"];
m4_855 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="75-75", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="JsonTextReader.cs"];
m4_60 [label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="JsonTextReader.cs"];
m4_712 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="JsonTextReader.cs"];
m4_184 [label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="702-702", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_365 [label=true, span="704-704", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_366 [label="char currentChar = _chars[_charPos]", span="706-706", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_367 [label=currentChar, span="708-708", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_400 [label="char.IsWhiteSpace(currentChar)", span="757-757", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_402 [label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="764-764", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_368 [label="'\0'", span="710-710", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_374 [label="'}'", span="724-724", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_378 [label="']'", span="728-728", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_382 [label="')'", span="732-732", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_386 [label="'/'", span="736-736", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_389 [label="','", span="739-739", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_393 [label="' '", span="745-745", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_396 [label="StringUtils.CarriageReturn", span="750-750", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_398 [label="StringUtils.LineFeed", span="753-753", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_369 [label="_charsUsed == _charPos", span="711-711", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_370 [label="ReadData(false) == 0", span="713-713", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_373 [label="_charPos++", span="721-721", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_371 [label="_currentState = State.Finished", span="715-715", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_372 [label="return false;", span="716-716", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_375 [label="_charPos++", span="725-725", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_376 [label="SetToken(JsonToken.EndObject)", span="726-726", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_377 [label="return true;", span="727-727", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_379 [label="_charPos++", span="729-729", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_380 [label="SetToken(JsonToken.EndArray)", span="730-730", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_381 [label="return true;", span="731-731", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_383 [label="_charPos++", span="733-733", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_384 [label="SetToken(JsonToken.EndConstructor)", span="734-734", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_385 [label="return true;", span="735-735", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_387 [label="ParseComment()", span="737-737", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_388 [label="return true;", span="738-738", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_390 [label="_charPos++", span="740-740", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_391 [label="SetStateBasedOnCurrent()", span="743-743", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_392 [label="return false;", span="744-744", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_394 [label="StringUtils.Tab", span="746-746", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_395 [label="_charPos++", span="748-748", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_397 [label="ProcessCarriageReturn(false)", span="751-751", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_399 [label="ProcessLineFeed()", span="754-754", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_401 [label="_charPos++", span="760-760", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_403 [label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="702-702", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="JsonTextReader.cs"];
m4_103 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReader.cs"];
m4_142 [label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="632-632", cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonTextReader.cs"];
m4_718 [label="Entry System.Convert.ToDecimal(long)", span="0-0", cluster="System.Convert.ToDecimal(long)", file="JsonTextReader.cs"];
m4_713 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="JsonTextReader.cs"];
m4_788 [label="Entry Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="1483-1483", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_789 [label=c, span="1485-1485", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_807 [label="char.IsWhiteSpace(c)", span="1509-1509", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_790 [label="'}'", span="1487-1487", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_794 [label="'/'", span="1491-1491", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_799 [label="')'", span="1499-1499", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_802 [label="' '", span="1503-1503", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_791 [label="']'", span="1488-1488", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_792 [label="','", span="1489-1489", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_793 [label="return true;", span="1490-1490", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_795 [label="!EnsureChars(1, false)", span="1493-1493", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_796 [label="return false;", span="1494-1494", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_797 [label="var nextChart = _chars[_charPos + 1]", span="1496-1496", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_798 [label="return (nextChart == '*' || nextChart == '/');", span="1498-1498", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_800 [label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="1500-1500", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_801 [label="return true;", span="1501-1501", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_809 [label="return false;", span="1514-1514", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_803 [label="StringUtils.Tab", span="1504-1504", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_804 [label="StringUtils.LineFeed", span="1505-1505", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_805 [label="StringUtils.CarriageReturn", span="1506-1506", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_806 [label="return true;", span="1507-1507", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_808 [label="return true;", span="1510-1510", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_810 [label="Exit Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="1483-1483", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="JsonTextReader.cs"];
m4_722 [label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0", cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="JsonTextReader.cs"];
m4_56 [label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="167-167", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m4_57 [label="int charByteCount = 2", span="169-169", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m4_58 [label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="171-171", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m4_59 [label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="167-167", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="JsonTextReader.cs"];
m4_19 [label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char)", span="109-109", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_20 [label="_charPos++", span="111-111", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_22 [label="ReadStringIntoBuffer(quote)", span="114-114", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_33 [label="_quoteChar = quote", span="136-136", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_47 [label="_quoteChar = quote", span="163-163", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_21 [label="ShiftBufferIfNeeded()", span="113-113", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_23 [label="SetPostValueState(true)", span="115-115", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_24 [label="_readType == ReadType.ReadAsBytes", span="117-117", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_25 [label="byte[] data", span="119-119", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_30 [label="_readType == ReadType.ReadAsString", span="131-131", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_26 [label="_stringReference.Length == 0", span="120-120", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_27 [label="data = new byte[0]", span="122-122", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_28 [label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="126-126", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_29 [label="SetToken(JsonToken.Bytes, data, false)", span="129-129", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_31 [label="string text = _stringReference.ToString()", span="133-133", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_34 [label="string text = _stringReference.ToString()", span="140-140", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_32 [label="SetToken(JsonToken.String, text, false)", span="135-135", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_35 [label="_dateParseHandling != DateParseHandling.None", span="142-142", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_43 [label="DateTimeUtils.TryParseDateTime(text, dateParseHandling, DateTimeZoneHandling, DateFormatString, Culture, out dt)", span="155-155", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_46 [label="SetToken(JsonToken.String, text, false)", span="162-162", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_36 [label="DateParseHandling dateParseHandling", span="144-144", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_37 [label="_readType == ReadType.ReadAsDateTime", span="145-145", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_38 [label="dateParseHandling = DateParseHandling.DateTime", span="146-146", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_39 [label="_readType == ReadType.ReadAsDateTimeOffset", span="148-148", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_40 [label="dateParseHandling = DateParseHandling.DateTimeOffset", span="149-149", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_41 [label="dateParseHandling = _dateParseHandling", span="152-152", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_42 [label="object dt", span="154-154", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_44 [label="SetToken(JsonToken.Date, dt, false)", span="157-157", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_45 [label="return;", span="158-158", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_48 [label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char)", span="109-109", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs"];
m4_102 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="JsonTextReader.cs"];
m4_853 [label="Entry Newtonsoft.Json.JsonReader.Close()", span="1001-1001", cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonTextReader.cs"];
m4_359 [label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="694-694", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m4_360 [label="_buffer != null", span="696-696", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m4_361 [label="_buffer.Position = 0", span="697-697", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m4_362 [label="_stringReference = new StringReference()", span="699-699", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m4_363 [label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="694-694", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="JsonTextReader.cs"];
m4_301 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char)", span="55-55", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="JsonTextReader.cs"];
m4_146 [label="Entry Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="689-689", cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonTextReader.cs"];
m4_312 [label="Entry int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0", cluster="int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTextReader.cs"];
m4_292 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1039-1039", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m4_574 [label="_charPos++", span="1041-1041", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m4_575 [label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1043-1043", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m4_576 [label="_charPos++", span="1044-1044", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m4_577 [label="OnNewLine(_charPos)", span="1046-1046", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m4_578 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1039-1039", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="JsonTextReader.cs"];
m4_185 [label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1049-1049", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_579 [label="bool finished = false", span="1051-1051", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_597 [label="return (!oneOrMore || ateWhitespace);", span="1090-1090", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_580 [label="bool ateWhitespace = false", span="1052-1052", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_581 [label="!finished", span="1053-1053", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_582 [label="char currentChar = _chars[_charPos]", span="1055-1055", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_583 [label=currentChar, span="1057-1057", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_593 [label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1077-1077", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_584 [label="'\0'", span="1059-1059", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_589 [label="StringUtils.CarriageReturn", span="1070-1070", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_591 [label="StringUtils.LineFeed", span="1073-1073", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_585 [label="_charsUsed == _charPos", span="1060-1060", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_586 [label="ReadData(false) == 0", span="1062-1062", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_588 [label="_charPos++", span="1067-1067", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_587 [label="finished = true", span="1063-1063", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_590 [label="ProcessCarriageReturn(false)", span="1071-1071", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_592 [label="ProcessLineFeed()", span="1074-1074", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_594 [label="ateWhitespace = true", span="1079-1079", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_596 [label="finished = true", span="1084-1084", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_595 [label="_charPos++", span="1080-1080", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_598 [label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1049-1049", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="JsonTextReader.cs"];
m4_143 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="344-344", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs"];
m4_144 [label="return ReadAsStringInternal();", span="346-346", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs"];
m4_145 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="344-344", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextReader.cs"];
m4_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextReader.cs"];
m4_564 [label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1093-1093", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_599 [label="MatchValueWithTrailingSeparator(''new'')", span="1095-1095", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_600 [label="EatWhitespace(false)", span="1097-1097", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_633 [label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1168-1168", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_601 [label="int initialPosition = _charPos", span="1099-1099", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_602 [label="int endPosition", span="1100-1100", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_625 [label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1152-1152", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_603 [label=true, span="1102-1102", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_604 [label="char currentChar = _chars[_charPos]", span="1104-1104", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_605 [label="currentChar == '\0'", span="1105-1105", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_611 [label="char.IsLetterOrDigit(currentChar)", span="1119-1119", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_613 [label="currentChar == StringUtils.CarriageReturn", span="1123-1123", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_616 [label="currentChar == StringUtils.LineFeed", span="1129-1129", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_619 [label="char.IsWhiteSpace(currentChar)", span="1135-1135", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_622 [label="currentChar == '('", span="1141-1141", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_624 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1148-1148", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_606 [label="_charsUsed == _charPos", span="1107-1107", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_607 [label="ReadData(true) == 0", span="1109-1109", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_609 [label="endPosition = _charPos", span="1114-1114", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_608 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1110-1110", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_610 [label="_charPos++", span="1115-1115", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_612 [label="_charPos++", span="1121-1121", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_614 [label="endPosition = _charPos", span="1125-1125", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_615 [label="ProcessCarriageReturn(true)", span="1126-1126", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_617 [label="endPosition = _charPos", span="1131-1131", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_618 [label="ProcessLineFeed()", span="1132-1132", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_620 [label="endPosition = _charPos", span="1137-1137", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_621 [label="_charPos++", span="1138-1138", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_623 [label="endPosition = _charPos", span="1143-1143", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_626 [label="string constructorName = _stringReference.ToString()", span="1153-1153", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_627 [label="EatWhitespace(false)", span="1155-1155", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_632 [label="SetToken(JsonToken.StartConstructor, constructorName)", span="1164-1164", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_628 [label="_chars[_charPos] != '('", span="1157-1157", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_629 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1158-1158", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_630 [label="_charPos++", span="1160-1160", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_631 [label="ClearRecentString()", span="1162-1162", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_634 [label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1093-1093", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs"];
m4_856 [label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1637-1637", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs"];
m4_857 [label="return true;", span="1639-1639", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs"];
m4_858 [label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1637-1637", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs"];
m4_291 [label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", span="597-597", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs"];
m4_297 [label="writeToPosition > lastWritePosition", span="599-599", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs"];
m4_298 [label="buffer.Append(_chars, lastWritePosition, writeToPosition - lastWritePosition)", span="601-601", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs"];
m4_299 [label="buffer.Append(writeChar)", span="604-604", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs"];
m4_300 [label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", span="597-597", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(Newtonsoft.Json.Utilities.StringBuffer, char, int, int)", file="JsonTextReader.cs"];
m4_104 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="257-257", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m4_105 [label="_charPos + relativePosition >= _charsUsed", span="259-259", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m4_106 [label="return ReadChars(relativePosition, append);", span="260-260", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m4_107 [label="return true;", span="262-262", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m4_108 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="257-257", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="JsonTextReader.cs"];
m4_296 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="101-101", cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="JsonTextReader.cs"];
m4_14 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", span="50-50", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="JsonTextReader.cs"];
m4_568 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber()", span="1172-1172", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_636 [label="ShiftBufferIfNeeded()", span="1174-1174", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_637 [label="char firstChar = _chars[_charPos]", span="1176-1176", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_638 [label="int initialPosition = _charPos", span="1177-1177", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_644 [label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1189-1189", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_645 [label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != '.'\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e'\r\n                              && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1190-1193", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_648 [label="numberValue = firstChar - 48", span="1200-1200", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_665 [label="numberValue = (decimal)firstChar - 48", span="1238-1238", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_679 [label="numberValue = (long)firstChar - 48", span="1276-1276", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_639 [label="ReadNumberIntoBuffer()", span="1179-1179", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_641 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1184-1184", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_640 [label="SetPostValueState(true)", span="1182-1182", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_642 [label="object numberValue", span="1186-1186", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_643 [label="JsonToken numberType", span="1187-1187", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_710 [label="SetToken(numberType, numberValue, false)", span="1348-1348", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_647 [label=singleDigit, span="1197-1197", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_664 [label=singleDigit, span="1235-1235", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_678 [label=singleDigit, span="1273-1273", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_646 [label="_readType == ReadType.ReadAsInt32", span="1195-1195", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_649 [label=nonBase10, span="1202-1202", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_666 [label=nonBase10, span="1240-1240", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_681 [label=nonBase10, span="1279-1279", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_663 [label="_readType == ReadType.ReadAsDecimal", span="1233-1233", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_650 [label="string number = _stringReference.ToString()", span="1204-1204", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_655 [label="int value", span="1221-1221", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_651 [label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                            ? Convert.ToInt32(number, 16)\r\n                            : Convert.ToInt32(number, 8)", span="1208-1210", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_654 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1216-1216", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_652 [label="numberValue = integer", span="1212-1212", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_653 [label=Exception, span="1214-1214", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_662 [label="numberType = JsonToken.Integer", span="1231-1231", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_656 [label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1222-1222", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_657 [label="parseResult == ParseResult.Success", span="1223-1223", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_658 [label="numberValue = value", span="1224-1224", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_659 [label="parseResult == ParseResult.Overflow", span="1225-1225", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_660 [label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1226-1226", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_661 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1228-1228", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_667 [label="string number = _stringReference.ToString()", span="1242-1242", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_672 [label="string number = _stringReference.ToString()", span="1260-1260", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_668 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                            ? Convert.ToInt64(number, 16)\r\n                            : Convert.ToInt64(number, 8)", span="1247-1249", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_671 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1255-1255", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_669 [label="numberValue = Convert.ToDecimal(integer)", span="1251-1251", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_670 [label=Exception, span="1253-1253", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_677 [label="numberType = JsonToken.Float", span="1269-1269", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_673 [label="decimal value", span="1262-1262", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_674 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1263-1263", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_675 [label="numberValue = value", span="1264-1264", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_676 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1266-1266", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_680 [label="numberType = JsonToken.Integer", span="1277-1277", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_682 [label="string number = _stringReference.ToString()", span="1281-1281", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_687 [label="long value", span="1298-1298", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_683 [label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n                            ? Convert.ToInt64(number, 16)\r\n                            : Convert.ToInt64(number, 8)", span="1285-1287", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_685 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1291-1291", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_684 [label=Exception, span="1289-1289", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_686 [label="numberType = JsonToken.Integer", span="1294-1294", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_688 [label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1299-1299", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_689 [label="parseResult == ParseResult.Success", span="1300-1300", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_690 [label="numberValue = value", span="1302-1302", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_692 [label="parseResult == ParseResult.Overflow", span="1305-1305", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_691 [label="numberType = JsonToken.Integer", span="1303-1303", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_693 [label="string number = _stringReference.ToString()", span="1308-1308", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_698 [label="string number = _stringReference.ToString()", span="1321-1321", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_694 [label="number.Length > MaximumJavascriptIntegerCharacterLength", span="1310-1310", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_696 [label="numberValue = BigIntegerParse(number, CultureInfo.InvariantCulture)", span="1313-1313", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_695 [label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large to parse.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1311-1311", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_697 [label="numberType = JsonToken.Integer", span="1314-1314", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_699 [label="_floatParseHandling == FloatParseHandling.Decimal", span="1323-1323", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_701 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="1326-1326", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_703 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1329-1329", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_705 [label="double.TryParse(number, NumberStyles.Float | NumberStyles.AllowThousands, CultureInfo.InvariantCulture, out d)", span="1334-1334", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_707 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="1337-1337", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_700 [label="decimal d", span="1325-1325", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_704 [label="double d", span="1333-1333", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_702 [label="numberValue = d", span="1327-1327", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_706 [label="numberValue = d", span="1335-1335", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_708 [label="numberType = JsonToken.Float", span="1340-1340", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_709 [label="ClearRecentString()", span="1345-1345", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_711 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber()", span="1172-1172", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber()", file="JsonTextReader.cs"];
m4_833 [label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="JsonTextReader.cs"];
m4_8 [label="Entry Newtonsoft.Json.JsonTextReader.GetBuffer()", span="89-89", cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs"];
m4_9 [label="_buffer == null", span="91-91", cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs"];
m4_10 [label="_buffer = new StringBuffer(1025)", span="93-93", cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs"];
m4_11 [label="_buffer.Position = 0", span="97-97", cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs"];
m4_12 [label="return _buffer;", span="100-100", cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs"];
m4_13 [label="Exit Newtonsoft.Json.JsonTextReader.GetBuffer()", span="89-89", cluster="Newtonsoft.Json.JsonTextReader.GetBuffer()", file="JsonTextReader.cs"];
m4_51 [label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="901-901", cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="JsonTextReader.cs"];
m4_720 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="711-711", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="JsonTextReader.cs"];
m4_460 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="880-880", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_466 [label="int initialPosition = _charPos", span="882-882", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_467 [label=true, span="885-885", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_473 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="898-898", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_479 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="910-910", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_468 [label="_chars[_charPos]", span="887-887", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_469 [label="'\0'", span="889-889", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_475 [label="char currentChar = _chars[_charPos]", span="901-901", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_470 [label="_charsUsed == _charPos", span="890-890", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_471 [label="ReadData(true) == 0", span="892-892", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_472 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="893-893", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_474 [label="return;", span="899-899", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_476 [label="ValidIdentifierChar(currentChar)", span="903-903", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_478 [label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="908-908", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_481 [label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="914-914", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_477 [label="_charPos++", span="905-905", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_480 [label="return;", span="911-911", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_482 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="880-880", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="JsonTextReader.cs"];
m4_717 [label="Entry System.Convert.ToInt64(string, int)", span="0-0", cluster="System.Convert.ToInt64(string, int)", file="JsonTextReader.cs"];
m4_289 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="191-191", cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="JsonTextReader.cs"];
m4_71 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="192-192", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs"];
m4_72 [label="return ReadData(append, 0);", span="194-194", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs"];
m4_73 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="192-192", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="JsonTextReader.cs"];
m4_715 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonTextReader.cs"];
m4_74 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="197-197", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_75 [label=_isEndOfFile, span="199-199", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_77 [label="_charsUsed + charsRequired >= _chars.Length - 1", span="203-203", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_78 [label=append, span="205-205", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_79 [label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="208-208", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_84 [label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="221-221", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_85 [label="char[] dst = new char[remainingCharCount + charsRequired + 1]", span="224-224", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_76 [label="return 0;", span="200-200", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_94 [label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="244-244", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_83 [label="int remainingCharCount = _charsUsed - _charPos", span="219-219", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_80 [label="char[] dst = new char[newArrayLength]", span="211-211", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_81 [label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="213-213", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_82 [label="_chars = dst", span="215-215", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_86 [label="remainingCharCount > 0", span="226-226", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_87 [label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="227-227", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_89 [label="remainingCharCount > 0", span="234-234", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_90 [label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="235-235", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_93 [label="_charsUsed = remainingCharCount", span="240-240", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_88 [label="_chars = dst", span="229-229", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_91 [label="_lineStartPos -= _charPos", span="238-238", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_92 [label="_charPos = 0", span="239-239", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_95 [label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="246-246", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_96 [label="_charsUsed += charsRead", span="248-248", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_97 [label="charsRead == 0", span="250-250", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_100 [label="return charsRead;", span="254-254", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_98 [label="_isEndOfFile = true", span="251-251", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_99 [label="_chars[_charsUsed] = '\0'", span="253-253", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_101 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="197-197", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="JsonTextReader.cs"];
m4_53 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="854-854", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonTextReader.cs"];
m4_569 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="1544-1544", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m4_819 [label="MatchValueWithTrailingSeparator(JsonConvert.Undefined)", span="1546-1546", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m4_820 [label="SetToken(JsonToken.Undefined)", span="1548-1548", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m4_821 [label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="1552-1552", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m4_822 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="1544-1544", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs"];
m4_288 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="607-607", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_302 [label="char writeChar", span="609-609", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_303 [label="EnsureChars(4, true)", span="610-610", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_309 [label="return writeChar;", span="622-622", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_304 [label="string hexValues = new string(_chars, _charPos, 4)", span="612-612", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_308 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="620-620", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_305 [label="char hexChar = Convert.ToChar(int.Parse(hexValues, NumberStyles.HexNumber, NumberFormatInfo.InvariantInfo))", span="613-613", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_306 [label="writeChar = hexChar", span="614-614", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_307 [label="_charPos += 4", span="616-616", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_310 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="607-607", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="JsonTextReader.cs"];
m4_122 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m4_123 [label="_readType = ReadType.Read", span="301-301", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m4_124 [label="!ReadInternal()", span="302-302", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m4_125 [label="SetToken(JsonToken.None)", span="304-304", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m4_127 [label="return true;", span="308-308", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m4_126 [label="return false;", span="305-305", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m4_128 [label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="299-299", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs"];
m4_358 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="JsonTextReader.cs"];
m4_562 [label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="1556-1556", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m4_823 [label="MatchValueWithTrailingSeparator(JsonConvert.False)", span="1558-1558", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m4_824 [label="SetToken(JsonToken.Boolean, false)", span="1560-1560", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m4_825 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="1564-1564", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m4_826 [label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="1556-1556", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs"];
m4_49 [label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="174-174", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_61 [label="int length = _chars.Length", span="178-178", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_62 [label="length - _charPos <= length * 0.1", span="179-179", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_63 [label="int count = _charsUsed - _charPos", span="181-181", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_64 [label="count > 0", span="182-182", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_65 [label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="183-183", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_68 [label="_charsUsed = count", span="187-187", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_66 [label="_lineStartPos -= _charPos", span="185-185", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_67 [label="_charPos = 0", span="186-186", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_69 [label="_chars[_charsUsed] = '\0'", span="188-188", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_70 [label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="174-174", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="JsonTextReader.cs"];
m4_565 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="1598-1598", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m4_840 [label="MatchValueWithTrailingSeparator(JsonConvert.NaN)", span="1600-1600", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m4_841 [label="_floatParseHandling == FloatParseHandling.Decimal", span="1602-1602", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m4_844 [label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="1609-1609", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m4_842 [label="throw new JsonReaderException(''Cannot read NaN as a decimal.'');", span="1603-1603", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m4_843 [label="SetToken(JsonToken.Float, double.NaN)", span="1605-1605", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m4_845 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="1598-1598", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs"];
m4_770 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="1451-1451", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_771 [label="!EnsureChars(value.Length - 1, true)", span="1453-1453", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_774 [label="i < value.Length", span="1456-1456", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_775 [label="_chars[_charPos + i] != value[i]", span="1458-1458", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_778 [label="_charPos += value.Length", span="1464-1464", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_772 [label="return false;", span="1454-1454", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_773 [label="int i = 0", span="1456-1456", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_777 [label="i++", span="1456-1456", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_776 [label="return false;", span="1460-1460", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_779 [label="return true;", span="1466-1466", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_780 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="1451-1451", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="JsonTextReader.cs"];
m4_182 [label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="919-919", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_483 [label=true, span="921-921", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_484 [label="char currentChar = _chars[_charPos]", span="923-923", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_485 [label=currentChar, span="925-925", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_493 [label="ParseString(currentChar)", span="940-940", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_554 [label="char.IsWhiteSpace(currentChar)", span="1016-1016", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_556 [label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1022-1022", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_559 [label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1028-1028", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_486 [label="'\0'", span="927-927", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_491 [label="''''", span="938-938", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_495 [label="'t'", span="942-942", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_498 [label="'f'", span="945-945", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_501 [label="'n'", span="948-948", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_511 [label="'N'", span="965-965", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_514 [label="'I'", span="968-968", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_517 [label="'-'", span="971-971", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_522 [label="'/'", span="977-977", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_525 [label="'u'", span="980-980", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_528 [label="'{'", span="983-983", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_532 [label="'['", span="987-987", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_536 [label="']'", span="991-991", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_540 [label="','", span="995-995", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_543 [label="')'", span="1000-1000", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_547 [label="StringUtils.CarriageReturn", span="1004-1004", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_549 [label="StringUtils.LineFeed", span="1007-1007", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_551 [label="' '", span="1010-1010", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_487 [label="_charsUsed == _charPos", span="928-928", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_488 [label="ReadData(false) == 0", span="930-930", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_490 [label="_charPos++", span="935-935", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_489 [label="return false;", span="931-931", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_492 [label="'\''", span="939-939", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_494 [label="return true;", span="941-941", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_496 [label="ParseTrue()", span="943-943", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_497 [label="return true;", span="944-944", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_499 [label="ParseFalse()", span="946-946", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_500 [label="return true;", span="947-947", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_502 [label="EnsureChars(1, true)", span="949-949", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_503 [label="char next = _chars[_charPos + 1]", span="951-951", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_509 [label="throw JsonReaderException.Create(this, ''Unexpected end.'');", span="962-962", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_504 [label="next == 'u'", span="953-953", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_506 [label="next == 'e'", span="955-955", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_505 [label="ParseNull()", span="954-954", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_507 [label="ParseConstructor()", span="956-956", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_508 [label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="958-958", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_510 [label="return true;", span="964-964", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_512 [label="ParseNumberNaN()", span="966-966", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_513 [label="return true;", span="967-967", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_515 [label="ParseNumberPositiveInfinity()", span="969-969", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_516 [label="return true;", span="970-970", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_518 [label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="972-972", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_519 [label="ParseNumberNegativeInfinity()", span="973-973", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_520 [label="ParseNumber()", span="975-975", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_521 [label="return true;", span="976-976", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_523 [label="ParseComment()", span="978-978", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_524 [label="return true;", span="979-979", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_526 [label="ParseUndefined()", span="981-981", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_527 [label="return true;", span="982-982", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_529 [label="_charPos++", span="984-984", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_530 [label="SetToken(JsonToken.StartObject)", span="985-985", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_531 [label="return true;", span="986-986", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_533 [label="_charPos++", span="988-988", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_534 [label="SetToken(JsonToken.StartArray)", span="989-989", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_535 [label="return true;", span="990-990", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_537 [label="_charPos++", span="992-992", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_538 [label="SetToken(JsonToken.EndArray)", span="993-993", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_539 [label="return true;", span="994-994", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_541 [label="SetToken(JsonToken.Undefined)", span="998-998", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_542 [label="return true;", span="999-999", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_544 [label="_charPos++", span="1001-1001", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_545 [label="SetToken(JsonToken.EndConstructor)", span="1002-1002", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_546 [label="return true;", span="1003-1003", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_548 [label="ProcessCarriageReturn(false)", span="1005-1005", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_550 [label="ProcessLineFeed()", span="1008-1008", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_552 [label="StringUtils.Tab", span="1011-1011", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_553 [label="_charPos++", span="1013-1013", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_555 [label="_charPos++", span="1019-1019", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_557 [label="ParseNumber()", span="1024-1024", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_558 [label="return true;", span="1025-1025", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_560 [label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="919-919", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="JsonTextReader.cs"];
m4_150 [label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", span="735-735", cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeInternal()", file="JsonTextReader.cs"];
m4_725 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonTextReader.cs"];
m4_431 [label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="823-823", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_432 [label="char firstChar = _chars[_charPos]", span="825-825", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_433 [label="char quoteChar", span="826-826", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_434 [label="firstChar == '''' || firstChar == '\''", span="828-828", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_436 [label="quoteChar = firstChar", span="831-831", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_439 [label="ValidIdentifierChar(firstChar)", span="835-835", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_455 [label="_quoteChar = quoteChar", span="869-869", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_435 [label="_charPos++", span="830-830", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_437 [label="ShiftBufferIfNeeded()", span="832-832", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_438 [label="ReadStringIntoBuffer(quoteChar)", span="833-833", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_440 [label="quoteChar = '\0'", span="837-837", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_443 [label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="843-843", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_441 [label="ShiftBufferIfNeeded()", span="838-838", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_442 [label="ParseUnquotedProperty()", span="839-839", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_444 [label="string propertyName", span="846-846", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_445 [label="NameTable != null", span="848-848", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_446 [label="propertyName = NameTable.Get(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="850-850", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_449 [label="propertyName = _stringReference.ToString()", span="858-858", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_447 [label="propertyName == null", span="853-853", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_454 [label="SetToken(JsonToken.PropertyName, propertyName)", span="868-868", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_448 [label="propertyName = _stringReference.ToString()", span="854-854", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_450 [label="EatWhitespace(false)", span="861-861", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_451 [label="_chars[_charPos] != ':'", span="863-863", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_452 [label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="864-864", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_453 [label="_charPos++", span="866-866", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_456 [label="ClearRecentString()", span="870-870", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_457 [label="return true;", span="872-872", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_458 [label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="823-823", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="JsonTextReader.cs"];
m4_290 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="182-182", cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="JsonTextReader.cs"];
m4_461 [label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", file="JsonTextReader.cs"];
m4_314 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="625-625", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_315 [label="int charPos = _charPos", span="627-627", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_316 [label=true, span="629-629", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_317 [label="_chars[charPos]", span="631-631", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_319 [label="_charPos = charPos", span="634-634", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_320 [label="_charsUsed == charPos", span="636-636", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_351 [label="charPos++", span="673-673", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_318 [label="'\0'", span="633-633", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_324 [label="'-'", span="646-646", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_352 [label="_charPos = charPos", span="676-676", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_321 [label="ReadData(true) == 0", span="638-638", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_323 [label="return;", span="643-643", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_322 [label="return;", span="639-639", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_325 [label="'+'", span="647-647", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_326 [label="'a'", span="648-648", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_327 [label="'A'", span="649-649", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_328 [label="'b'", span="650-650", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_329 [label="'B'", span="651-651", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_330 [label="'c'", span="652-652", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_331 [label="'C'", span="653-653", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_332 [label="'d'", span="654-654", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_333 [label="'D'", span="655-655", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_334 [label="'e'", span="656-656", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_335 [label="'E'", span="657-657", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_336 [label="'f'", span="658-658", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_337 [label="'F'", span="659-659", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_338 [label="'x'", span="660-660", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_339 [label="'X'", span="661-661", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_340 [label="'.'", span="662-662", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_341 [label="'0'", span="663-663", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_342 [label="'1'", span="664-664", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_343 [label="'2'", span="665-665", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_344 [label="'3'", span="666-666", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_345 [label="'4'", span="667-667", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_346 [label="'5'", span="668-668", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_347 [label="'6'", span="669-669", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_348 [label="'7'", span="670-670", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_349 [label="'8'", span="671-671", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_350 [label="'9'", span="672-672", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_353 [label="char currentChar = _chars[_charPos]", span="678-678", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_354 [label="char.IsWhiteSpace(currentChar)\r\n                            || currentChar == ','\r\n                            || currentChar == '}'\r\n                            || currentChar == ']'\r\n                            || currentChar == ')'\r\n                            || currentChar == '/'", span="679-684", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_356 [label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing number: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="689-689", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_355 [label="return;", span="686-686", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_357 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="625-625", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="JsonTextReader.cs"];
m4_54 [label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="55-55", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="JsonTextReader.cs"];
m4_293 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1033-1033", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m4_571 [label="_charPos++", span="1035-1035", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m4_572 [label="OnNewLine(_charPos)", span="1036-1036", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m4_573 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1033-1033", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="JsonTextReader.cs"];
m4_859 [label="Newtonsoft.Json.JsonTextReader", span="", file="JsonTextReader.cs"];
m5_554 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonTextReaderTest.cs"];
m5_1630 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2510-2510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1632 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2513-2513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1633 [label="Assert.IsTrue(reader.Read())", span="2515-2515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1634 [label="Assert.IsTrue(reader.Read())", span="2516-2516", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1635 [label="Assert.IsTrue(reader.Read())", span="2517-2517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1636 [label="Assert.IsFalse(reader.Read())", span="2518-2518", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1631 [label="string json = ''{hi:1, ''", span="2512-2512", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1637 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2510-2510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_39 [label="reader.Read() && reader.TokenType != JsonToken.Comment", span="149-149", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonTextReaderTest.cs"];
m5_48 [label="Assert.AreEqual(@''Forest's Bakery And Cafe'', jsonTextReader.Value)", span="120-120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m5_293 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonTextReaderTest.cs"];
m5_1369 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonTextReaderTest.cs"];
m5_1126 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1750-1750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m5_1128 [label="JsonTextReader reader = new JsonTextReader(s)", span="1753-1753", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m5_1127 [label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1752-1752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m5_1132 [label="Assert.AreEqual(''Hello world.'', text)", span="1759-1759", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m5_1129 [label="byte[] data = reader.ReadAsBytes()", span="1755-1755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m5_1131 [label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1758-1758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m5_1130 [label="Assert.IsNotNull(data)", span="1756-1756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m5_1133 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1750-1750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs"];
m5_359 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="633-633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_362 [label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="645-645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_361 [label="StringReader sr = new StringReader(input)", span="643-643", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_366 [label="jsonReader.Read()", span="655-655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_370 [label="jsonReader.Read()", span="660-660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_375 [label="jsonReader.Read()", span="666-666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_380 [label="jsonReader.Read()", span="672-672", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_385 [label="jsonReader.Read()", span="678-678", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_389 [label="jsonReader.Read()", span="683-683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_395 [label="jsonReader.Read()", span="690-690", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_401 [label="jsonReader.Read()", span="697-697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_405 [label="jsonReader.Read()", span="702-702", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_409 [label="Assert.IsFalse(jsonReader.Read())", span="707-707", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_363 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="651-651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_364 [label="Assert.AreEqual(0, jsonReader.LineNumber)", span="652-652", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_365 [label="Assert.AreEqual(0, jsonReader.LinePosition)", span="653-653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_367 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="656-656", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_368 [label="Assert.AreEqual(1, jsonReader.LineNumber)", span="657-657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_369 [label="Assert.AreEqual(1, jsonReader.LinePosition)", span="658-658", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_371 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="661-661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_372 [label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="662-662", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_373 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="663-663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_374 [label="Assert.AreEqual(7, jsonReader.LinePosition)", span="664-664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_376 [label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="667-667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_377 [label="Assert.AreEqual(''Intel'', jsonReader.Value)", span="668-668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_378 [label="Assert.AreEqual(2, jsonReader.LineNumber)", span="669-669", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_379 [label="Assert.AreEqual(15, jsonReader.LinePosition)", span="670-670", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_381 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="673-673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_382 [label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="674-674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_383 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="675-675", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_384 [label="Assert.AreEqual(10, jsonReader.LinePosition)", span="676-676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_386 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="679-679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_387 [label="Assert.AreEqual(3, jsonReader.LineNumber)", span="680-680", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_388 [label="Assert.AreEqual(12, jsonReader.LinePosition)", span="681-681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_390 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="684-684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_391 [label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="685-685", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_392 [label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="686-686", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_393 [label="Assert.AreEqual(4, jsonReader.LineNumber)", span="687-687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_394 [label="Assert.AreEqual(22, jsonReader.LinePosition)", span="688-688", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_396 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="691-691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_397 [label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="692-692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_398 [label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="693-693", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_399 [label="Assert.AreEqual(5, jsonReader.LineNumber)", span="694-694", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_400 [label="Assert.AreEqual(30, jsonReader.LinePosition)", span="695-695", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_402 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="698-698", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_403 [label="Assert.AreEqual(6, jsonReader.LineNumber)", span="699-699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_404 [label="Assert.AreEqual(4, jsonReader.LinePosition)", span="700-700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_406 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="703-703", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_407 [label="Assert.AreEqual(7, jsonReader.LineNumber)", span="704-704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_408 [label="Assert.AreEqual(2, jsonReader.LinePosition)", span="705-705", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_360 [label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="635-641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_410 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="633-633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs"];
m5_1401 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextReaderTest.cs"];
m5_711 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonTextReaderTest.cs"];
m5_988 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTextReaderTest.cs"];
m5_527 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="JsonTextReaderTest.cs"];
m5_1926 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="JsonTextReaderTest.cs"];
m5_764 [label="Entry System.IO.StringReader.ReadLine()", span="0-0", cluster="System.IO.StringReader.ReadLine()", file="JsonTextReaderTest.cs"];
m5_998 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="781-781", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReaderTest.cs"];
m5_1826 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2816-2816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m5_1828 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2820-2820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m5_1829 [label="Assert.IsTrue(reader.Read())", span="2822-2822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m5_1832 [label="Assert.IsFalse(reader.Read())", span="2826-2826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m5_1830 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2823-2823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m5_1831 [label="Assert.AreEqual(''comment'', reader.Value)", span="2824-2824", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m5_1827 [label="string json = @''//comment''", span="2818-2818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m5_1833 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2816-2816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs"];
m5_1255 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1934-1934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1256 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1936-1936", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1257 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'')", span="1938-1938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1258 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1934-1934", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs"];
m5_1646 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2535-2535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m5_1648 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2538-2538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m5_1649 [label="Assert.IsTrue(reader.Read())", span="2540-2540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m5_1651 [label="Assert.IsTrue(reader.Read())", span="2543-2543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m5_1650 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2541-2541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m5_1652 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2544-2544", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m5_1647 [label="string json = ''{}''", span="2537-2537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m5_1653 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2535-2535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs"];
m5_280 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonTextReaderTest.cs"];
m5_10 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="76-76", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_11 [label="Assert.AreEqual(''src'', jsonTextReader.Value)", span="77-77", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_12 [label="Assert.IsTrue(jsonTextReader.Read())", span="79-79", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_13 [label="Assert.AreEqual(JsonToken.Comment, jsonTextReader.TokenType)", span="80-80", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_57 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", span="142-142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m5_58 [label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333,\r\n}''", span="144-147", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m5_61 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="152-152", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m5_63 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="155-155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m5_59 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="149-149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m5_60 [label="Assert.IsTrue(jsonTextReader.Read())", span="151-151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m5_62 [label="Assert.IsTrue(jsonTextReader.Read())", span="154-154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m5_64 [label="Assert.IsTrue(jsonTextReader.Read())", span="157-157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBigInteger()", file="JsonTextReaderTest.cs"];
m5_1002 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextReaderTest.cs"];
m5_1834 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2830-2830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m5_1836 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2834-2834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m5_1835 [label="string json = @''/''", span="2832-2832", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m5_1837 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 1.'')", span="2836-2836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m5_1838 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2830-2830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs"];
m5_49 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="111-111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m5_50 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", span="124-124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m5_51 [label="string json = @''''''first line\r\nsecond line\r\nthird line''''''", span="126-128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m5_52 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="130-130", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m5_53 [label="Assert.IsTrue(jsonTextReader.Read())", span="132-132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m5_54 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="133-133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadMultilineString()", file="JsonTextReaderTest.cs"];
m5_6 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="70-70", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_7 [label="Assert.IsTrue(jsonTextReader.Read())", span="72-72", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_8 [label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="73-73", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_124 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="232-232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_126 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="238-238", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_127 [label="Assert.IsTrue(jsonTextReader.Read())", span="240-240", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_129 [label="Assert.IsTrue(jsonTextReader.Read())", span="243-243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_133 [label="Assert.IsTrue(jsonTextReader.Read())", span="254-254", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_135 [label="Assert.IsFalse(jsonTextReader.Read())", span="257-257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_128 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="241-241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_130 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="244-244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_134 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="255-255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_131 [label="jsonTextReader.ReadAsBytes()", span="248-248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_125 [label="string json = @''{\r\n    ChildId: '123'\r\n}''", span="234-236", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_132 [label=FormatException, span="250-250", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_136 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", span="232-232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithError()", file="JsonTextReaderTest.cs"];
m5_2067 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="358-358", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReaderTest.cs"];
m5_55 [label="Entry Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", span="1552-1552", cluster="Newtonsoft.Json.Linq.JToken.FromObjectInternal(object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_56 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JsonTextReaderTest.cs"];
m5_1154 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1790-1790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1156 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1793-1793", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1155 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1792-1792", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1157 [label="Assert.IsTrue(jsonReader.Read())", span="1795-1795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1159 [label="jsonReader.Read()", span="1798-1798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1163 [label="jsonReader.Read()", span="1803-1803", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1167 [label="jsonReader.Read()", span="1808-1808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1171 [label="Assert.IsTrue(jsonReader.Read())", span="1813-1813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1173 [label="Assert.IsFalse(jsonReader.Read())", span="1816-1816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1158 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1796-1796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1160 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1799-1799", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1161 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1800-1800", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1162 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1801-1801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1164 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1804-1804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1165 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1805-1805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1166 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1806-1806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1168 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1809-1809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1169 [label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1810-1810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1170 [label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1811-1811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1172 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1814-1814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_1174 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1790-1790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs"];
m5_712 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1149-1149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m5_713 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="1151-1151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m5_714 [label="Assert.IsTrue(reader.Read())", span="1152-1152", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m5_715 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'')", span="1154-1154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m5_716 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="1149-1149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs"];
m5_1669 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2569-2569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m5_1671 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2572-2572", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m5_1670 [label="string json = ''new Date,()''", span="2571-2571", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m5_1672 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'')", span="2574-2574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m5_1673 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2569-2569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs"];
m5_1297 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1999-1999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1299 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2003-2003", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1300 [label="Assert.IsTrue(reader.Read())", span="2005-2005", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1302 [label="Assert.IsTrue(reader.Read())", span="2008-2008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1308 [label="Assert.IsTrue(reader.Read())", span="2016-2016", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1301 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2006-2006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1303 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2009-2009", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1305 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2012-2012", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1306 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2013-2013", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1307 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2014-2014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1309 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2017-2017", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1298 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="2001-2001", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1304 [label="reader.ReadAsDateTimeOffset()", span="2011-2011", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_1310 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1999-1999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_996 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="940-940", cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs"];
m5_38 [label="JArray a = Load(reader)", span="147-147", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonTextReaderTest.cs"];
m5_9 [label="Assert.IsTrue(jsonTextReader.Read())", span="75-75", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_596 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="979-979", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_598 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="983-983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_599 [label="reader.Read()", span="984-984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_600 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="985-985", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_597 [label="long i = int.MaxValue", span="981-981", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_604 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'')", span="990-994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_603 [label="long total = j + i", span="989-989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_601 [label="int j = 1", span="987-987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_605 [label="j++", span="987-987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_602 [label="j < 1000", span="987-987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_606 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="979-979", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs"];
m5_2 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="65-65", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_3 [label="Assert.IsTrue(jsonTextReader.Read())", span="66-66", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_1872 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2890-2890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m5_1873 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2892-2892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m5_1874 [label="Assert.IsTrue(reader.Read())", span="2893-2893", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m5_1875 [label="Assert.IsTrue(reader.Read())", span="2894-2894", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m5_1876 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'')", span="2896-2896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m5_1877 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2890-2890", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs"];
m5_552 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="387-387", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextReaderTest.cs"];
m5_694 [label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383", cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonTextReaderTest.cs"];
m5_1175 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1820-1820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1177 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1823-1823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1176 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1822-1822", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1178 [label="Assert.IsTrue(jsonReader.Read())", span="1825-1825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1192 [label="Assert.IsTrue(jsonReader.Read())", span="1843-1843", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1194 [label="Assert.IsFalse(jsonReader.Read())", span="1846-1846", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1179 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1826-1826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1181 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1829-1829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1182 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1830-1830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1183 [label="Assert.AreEqual(250, jsonReader.Value)", span="1831-1831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1185 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1834-1834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1186 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1835-1835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1187 [label="Assert.AreEqual(250, jsonReader.Value)", span="1836-1836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1189 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1839-1839", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1190 [label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1840-1840", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1191 [label="Assert.AreEqual(250, jsonReader.Value)", span="1841-1841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1193 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1844-1844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1180 [label="jsonReader.ReadAsInt32()", span="1828-1828", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1184 [label="jsonReader.ReadAsInt32()", span="1833-1833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1188 [label="jsonReader.ReadAsInt32()", span="1838-1838", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1195 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1820-1820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs"];
m5_1385 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2125-2125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1387 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2129-2129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1389 [label="Assert.IsTrue(reader.Read())", span="2132-2132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1391 [label="Assert.IsTrue(reader.Read())", span="2135-2135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1398 [label="Assert.IsTrue(reader.Read())", span="2145-2145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1390 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2133-2133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1392 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2136-2136", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1394 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2139-2139", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1395 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2140-2140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1399 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2146-2146", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1397 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2143-2143", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1386 [label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="2127-2127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1388 [label="reader.Culture = new CultureInfo(''en-US'')", span="2130-2130", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1393 [label="reader.ReadAsDateTimeOffset()", span="2138-2138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1396 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2142-2142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_1400 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="2125-2125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs"];
m5_2012 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3089-3089", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2014 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3093-3093", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2024 [label="reader = new JsonTextReader(new StringReader(json))", span="3106-3106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2034 [label="reader = new JsonTextReader(new StringReader(json))", span="3119-3119", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2044 [label="reader = new JsonTextReader(new StringReader(json))", span="3132-3132", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2054 [label="reader = new JsonTextReader(new StringReader(json))", span="3145-3145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2016 [label="Assert.IsTrue(reader.Read())", span="3096-3096", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2017 [label="Assert.IsTrue(reader.Read())", span="3097-3097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2020 [label="Assert.IsTrue(reader.Read())", span="3100-3100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2023 [label="Assert.IsTrue(reader.Read())", span="3103-3103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2026 [label="Assert.IsTrue(reader.Read())", span="3109-3109", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2027 [label="Assert.IsTrue(reader.Read())", span="3110-3110", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2030 [label="Assert.IsTrue(reader.Read())", span="3113-3113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2033 [label="Assert.IsTrue(reader.Read())", span="3116-3116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2036 [label="Assert.IsTrue(reader.Read())", span="3122-3122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2037 [label="Assert.IsTrue(reader.Read())", span="3123-3123", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2040 [label="Assert.IsTrue(reader.Read())", span="3126-3126", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2043 [label="Assert.IsTrue(reader.Read())", span="3129-3129", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2046 [label="Assert.IsTrue(reader.Read())", span="3135-3135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2053 [label="Assert.IsTrue(reader.Read())", span="3142-3142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2056 [label="Assert.IsTrue(reader.Read())", span="3148-3148", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2063 [label="Assert.IsTrue(reader.Read())", span="3155-3155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2018 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3098-3098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2019 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3099-3099", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2021 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3101-3101", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2022 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3102-3102", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2028 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3111-3111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2029 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3112-3112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2031 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3114-3114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2032 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3115-3115", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2038 [label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="3124-3124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2039 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3125-3125", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2041 [label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="3127-3127", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2042 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="3128-3128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2048 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3137-3137", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2049 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3138-3138", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2051 [label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="3140-3140", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2052 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3141-3141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2058 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3150-3150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2059 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3151-3151", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2061 [label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3153-3153", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2062 [label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3154-3154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2013 [label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="3091-3091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2015 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3094-3094", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2025 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3107-3107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2035 [label="reader.DateParseHandling = Json.DateParseHandling.None", span="3120-3120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2045 [label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="3133-3133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2047 [label="reader.ReadAsDateTimeOffset()", span="3136-3136", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2050 [label="reader.ReadAsDateTimeOffset()", span="3139-3139", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2055 [label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3146-3146", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2057 [label="reader.ReadAsDateTime()", span="3149-3149", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2060 [label="reader.ReadAsDateTime()", span="3152-3152", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_2064 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="3089-3089", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs"];
m5_1209 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1869-1869", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m5_1210 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1871-1871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m5_1212 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1874-1874", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m5_1211 [label="Assert.IsNull(reader.ReadAsBytes())", span="1873-1873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m5_1213 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1869-1869", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs"];
m5_1881 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2900-2900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1887 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2911-2911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1905 [label="reader = new JsonTextReader(new StringReader(json))", span="2938-2938", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1888 [label="reader.Read()", span="2913-2913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1889 [label="reader.Read()", span="2915-2915", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1892 [label="reader.Read()", span="2919-2919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1895 [label="reader.Read()", span="2923-2923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1898 [label="reader.Read()", span="2927-2927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1901 [label="reader.Read()", span="2931-2931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1904 [label="reader.Read()", span="2935-2935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1906 [label="reader.Read()", span="2940-2940", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1922 [label="reader.Read()", span="2962-2962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1884 [label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="2906-2906", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1885 [label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="2907-2907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1890 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2916-2916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1891 [label="Assert.AreEqual(0d, reader.Value)", span="2917-2917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1893 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2920-2920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1894 [label="Assert.AreEqual(0d, reader.Value)", span="2921-2921", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1896 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2924-2924", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1897 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="2925-2925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1899 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2928-2928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1900 [label="Assert.AreEqual(3000000000d, reader.Value)", span="2929-2929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1902 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2932-2932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1903 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2933-2933", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1908 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2943-2943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1909 [label="Assert.AreEqual(0m, reader.Value)", span="2944-2944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1911 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2947-2947", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1912 [label="Assert.AreEqual(0m, reader.Value)", span="2948-2948", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1914 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2951-2951", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1915 [label="Assert.AreEqual(0.0000025m, reader.Value)", span="2952-2952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1917 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2955-2955", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1918 [label="Assert.AreEqual(3000000000m, reader.Value)", span="2956-2956", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1920 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2959-2959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1921 [label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2960-2960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1886 [label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2909-2909", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1907 [label="reader.ReadAsDecimal()", span="2942-2942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1910 [label="reader.ReadAsDecimal()", span="2946-2946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1913 [label="reader.ReadAsDecimal()", span="2950-2950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1916 [label="reader.ReadAsDecimal()", span="2954-2954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1919 [label="reader.ReadAsDecimal()", span="2958-2958", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1883 [label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2904-2904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1882 [label="double d", span="2902-2902", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_1923 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2900-2900", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs"];
m5_99 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="203-203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m5_1340 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2059-2059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1342 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2063-2063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1343 [label="Assert.IsTrue(reader.Read())", span="2065-2065", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1345 [label="Assert.IsTrue(reader.Read())", span="2068-2068", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1351 [label="Assert.IsTrue(reader.Read())", span="2076-2076", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1344 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2066-2066", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1346 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2069-2069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1348 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2072-2072", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1349 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2073-2073", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1350 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="2074-2074", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1352 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2077-2077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1341 [label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="2061-2061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1347 [label="reader.ReadAsDateTimeOffset()", span="2071-2071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_1353 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="2059-2059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs"];
m5_255 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonTextReaderTest.cs"];
m5_705 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1139-1139", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_706 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="1141-1141", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_707 [label="Assert.IsTrue(reader.Read())", span="1142-1142", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_709 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1145-1145", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_708 [label="Assert.IsNull(reader.ReadAsBytes())", span="1144-1144", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_710 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="1139-1139", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_1856 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2864-2864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1858 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2868-2868", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1859 [label="reader.Read()", span="2870-2870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1861 [label="reader.Read()", span="2873-2873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1863 [label="reader.Read()", span="2876-2876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1865 [label="reader.Read()", span="2879-2879", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1867 [label="reader.Read()", span="2882-2882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1869 [label="reader.Read()", span="2885-2885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1860 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2871-2871", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1862 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2874-2874", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1864 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2877-2877", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1866 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2880-2880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1868 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2883-2883", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1870 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2886-2886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1857 [label="string json = @''[0,1,2 , 3]''", span="2866-2866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_1871 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2864-2864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs"];
m5_607 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m5_1384 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReaderTest.cs"];
m5_992 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReaderTest.cs"];
m5_1849 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2852-2852", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m5_1851 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2856-2856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m5_1853 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2859-2859", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m5_1854 [label="Assert.AreEqual(32m, reader.Value)", span="2860-2860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m5_1850 [label="string json = @''0x20''", span="2854-2854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m5_1852 [label="reader.ReadAsDecimal()", span="2858-2858", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m5_1855 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2852-2852", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs"];
m5_2066 [label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextReaderTest.cs"];
m5_0 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", span="55-55", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs"];
m5_1 [label="string json = @''{\r\n    ''''projects'''': [\r\n        ''''src'''',\r\n        //''''\r\n        ''''test''''\r\n    ]\r\n}''", span="57-63", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=1];
m5_41 [label="return a;", span="152-152", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonTextReaderTest.cs"];
m5_885 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1425-1425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_887 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1429-1429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_889 [label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1432-1432", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_891 [label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1435-1435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_893 [label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1438-1438", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_895 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1441-1441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_897 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1444-1444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_900 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1448-1448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_902 [label="reader = new JsonTextReader(new StringReader(''''))", span="1451-1451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_904 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1454-1454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_888 [label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1430-1430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_890 [label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1433-1433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_892 [label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1436-1436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_894 [label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1439-1439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_901 [label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1449-1449", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_903 [label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1452-1452", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_886 [label="JsonTextReader reader = null", span="1427-1427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_896 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1442-1442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_898 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1445-1445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_899 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1446-1446", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_905 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsDecimal(), ''Input string '-' is not a valid decimal. Path '', line 1, position 1.'')", span="1455-1455", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_906 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1425-1425", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs"];
m5_186 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_188 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="330-330", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_190 [label="Assert.IsTrue(reader.Read())", span="333-333", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_192 [label="Assert.IsTrue(reader.Read())", span="336-336", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_196 [label="Assert.IsTrue(reader.Read())", span="341-341", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_200 [label="Assert.IsTrue(reader.Read())", span="346-346", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_204 [label="Assert.IsTrue(reader.Read())", span="351-351", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_208 [label="Assert.IsTrue(reader.Read())", span="356-356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_191 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="334-334", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_193 [label="Assert.AreEqual(1.0m, reader.Value)", span="337-337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_194 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="338-338", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_195 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="339-339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_197 [label="Assert.AreEqual(1L, reader.Value)", span="342-342", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_198 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="343-343", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_199 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="344-344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_201 [label="Assert.AreEqual(9.9m, reader.Value)", span="347-347", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_202 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="348-348", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_203 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="349-349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_205 [label="Assert.AreEqual(Convert.ToDecimal(1E-06), reader.Value)", span="352-352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_206 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="353-353", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_207 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="354-354", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_209 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="357-357", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_187 [label="string json = ''[1.0,1,9.9,1E-06]''", span="328-328", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_189 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="331-331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_210 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", span="326-326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling()", file="JsonTextReaderTest.cs"];
m5_778 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1265-1265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_781 [label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="1270-1270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_782 [label="Assert.IsTrue(reader.Read())", span="1271-1271", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_784 [label="Assert.IsTrue(reader.Read())", span="1273-1273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_789 [label="Assert.IsTrue(reader.Read())", span="1278-1278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_783 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1272-1272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_785 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1274-1274", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_788 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1277-1277", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_790 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1279-1279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_780 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1268-1268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_786 [label="byte[] data = reader.ReadAsBytes()", span="1275-1275", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_791 [label="Assert.IsFalse(reader.Read())", span="1281-1281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_787 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1276-1276", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_779 [label="string helloWorld = ''Hello world!''", span="1267-1267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_792 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="1265-1265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs"];
m5_1214 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1878-1878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs"];
m5_1215 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1880-1880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs"];
m5_1216 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected end when reading bytes. Path '', line 1, position 1.'')", span="1882-1882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs"];
m5_1217 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1878-1878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs"];
m5_1418 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2176-2176", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1420 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2180-2180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1421 [label="Assert.IsTrue(reader.Read())", span="2182-2182", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1423 [label="Assert.IsTrue(reader.Read())", span="2185-2185", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1422 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2183-2183", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1424 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2186-2186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1426 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2189-2189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1427 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2190-2190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1428 [label="Assert.AreEqual(1m, reader.Value)", span="2191-2191", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1419 [label="string json = @''{''''Name'''':1}''", span="2178-2178", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1425 [label="reader.ReadAsDecimal()", span="2188-2188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1429 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2176-2176", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs"];
m5_1661 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2556-2556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m5_1663 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2559-2559", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m5_1664 [label="Assert.IsTrue(reader.Read())", span="2561-2561", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m5_1666 [label="Assert.IsTrue(reader.Read())", span="2564-2564", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m5_1665 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2562-2562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m5_1667 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2565-2565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m5_1662 [label="string json = ''new Date()''", span="2558-2558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m5_1668 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2556-2556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs"];
m5_211 [label="Entry System.Convert.ToDecimal(double)", span="0-0", cluster="System.Convert.ToDecimal(double)", file="JsonTextReaderTest.cs"];
m5_1402 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2150-2150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1404 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2154-2154", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1406 [label="Assert.IsTrue(reader.Read())", span="2157-2157", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1408 [label="Assert.IsTrue(reader.Read())", span="2160-2160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1415 [label="Assert.IsTrue(reader.Read())", span="2170-2170", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1407 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2158-2158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1409 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2161-2161", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1411 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2164-2164", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1412 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2165-2165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1416 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2171-2171", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1414 [label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2168-2168", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1403 [label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="2152-2152", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1405 [label="reader.Culture = new CultureInfo(''en-NZ'')", span="2155-2155", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1410 [label="reader.ReadAsDateTimeOffset()", span="2163-2163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1413 [label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2167-2167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_1417 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="2150-2150", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs"];
m5_66 [label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="385-385", cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonTextReaderTest.cs"];
m5_68 [label="Entry Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", span="243-243", cluster="Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JsonTextReaderTest.cs"];
m5_72 [label="Entry Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", span="256-256", cluster="Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JsonTextReaderTest.cs"];
m5_74 [label="Exit Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", span="256-256", cluster="Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JsonTextReaderTest.cs"];
m5_65 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="371-371", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs"];
m5_67 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="379-379", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextReaderTest.cs"];
m5_69 [label="return IndexOfItem(item);", span="245-245", cluster="Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JsonTextReaderTest.cs"];
m5_70 [label="Exit Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", span="243-243", cluster="Newtonsoft.Json.Linq.JArray.IndexOf(Newtonsoft.Json.Linq.JToken)", file="JsonTextReaderTest.cs"];
m5_71 [label="Entry Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", span="326-326", cluster="Newtonsoft.Json.Linq.JContainer.IndexOfItem(Newtonsoft.Json.Linq.JToken)", file="JsonTextReaderTest.cs"];
m5_73 [label="InsertItem(index, item, false)", span="258-258", cluster="Newtonsoft.Json.Linq.JArray.Insert(int, Newtonsoft.Json.Linq.JToken)", file="JsonTextReaderTest.cs"];
m5_77 [label="RemoveItemAt(index)", span="270-270", cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="JsonTextReaderTest.cs"];
m5_75 [label="Entry Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", span="331-331", cluster="Newtonsoft.Json.Linq.JContainer.InsertItem(int, Newtonsoft.Json.Linq.JToken, bool)", file="JsonTextReaderTest.cs"];
m5_76 [label="Entry Newtonsoft.Json.Linq.JArray.RemoveAt(int)", span="268-268", cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="JsonTextReaderTest.cs"];
m5_78 [label="Exit Newtonsoft.Json.Linq.JArray.RemoveAt(int)", span="268-268", cluster="Newtonsoft.Json.Linq.JArray.RemoveAt(int)", file="JsonTextReaderTest.cs"];
m5_294 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1621-1621", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs"];
m5_1226 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="368-368", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs"];
m5_300 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365", cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextReaderTest.cs"];
m5_31 [label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="99-99", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_549 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonTextReaderTest.cs"];
m5_612 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="999-999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_614 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1003-1003", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_615 [label="reader.Read()", span="1004-1004", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_617 [label="Assert.AreEqual(i, reader.Value)", span="1006-1006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_616 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1005-1005", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_613 [label="long i = int.MinValue", span="1001-1001", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_621 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n                {\r\n                    reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                    reader.ReadAsInt32();\r\n                }, ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'')", span="1011-1015", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_620 [label="long total = -j + i", span="1010-1010", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_618 [label="int j = 1", span="1008-1008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_622 [label="j++", span="1008-1008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_619 [label="j < 1000", span="1008-1008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_623 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="999-999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_2126 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3226-3226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs"];
m5_2127 [label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': !!! !!!\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="3228-3238", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs"];
m5_2128 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () =>\r\n                {\r\n                    JsonTextReader reader = new JsonTextReader(new StringReader(json));\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                },\r\n                ''Unexpected character encountered while parsing value: !. Path 'frameworks.dnxcore50.dependencies.['System.Xml.ReaderWriter'].source', line 6, position 21.'')", span="3240-3248", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs"];
m5_2129 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", span="3226-3226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedPathInExceptionMessage()", file="JsonTextReaderTest.cs"];
m5_1924 [label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m5_1269 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1950-1950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1271 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1954-1954", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1272 [label="Assert.IsTrue(reader.Read())", span="1959-1959", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1274 [label="Assert.IsTrue(reader.Read())", span="1962-1962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1277 [label="Assert.IsTrue(reader.Read())", span="1966-1966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1280 [label="Assert.IsTrue(reader.Read())", span="1970-1970", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1282 [label="Assert.IsFalse(reader.Read())", span="1973-1973", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1273 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1960-1960", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1275 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1963-1963", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1276 [label="Assert.AreEqual(''Message'', reader.Value)", span="1964-1964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1278 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1967-1967", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1279 [label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1968-1968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1281 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1971-1971", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1270 [label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1952-1952", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1283 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1950-1950", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs"];
m5_1227 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1897-1897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs"];
m5_1228 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1899-1899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs"];
m5_1229 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1901-1901", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs"];
m5_1230 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1897-1897", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs"];
m5_23 [label="reader.Read()", span="121-121", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m5_43 [label="string json = @''{''''NameOfStore'''':''''Forest's Bakery And Cafe''''}''", span="113-113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m5_1134 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonTextReaderTest.cs"];
m5_695 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1128-1128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_698 [label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="1133-1133", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_697 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1131-1131", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_699 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 17.'')", span="1135-1135", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_696 [label="string helloWorld = ''Hello world!''", span="1130-1130", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_700 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="1128-1128", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_1284 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1977-1977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1286 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1981-1981", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1287 [label="Assert.IsTrue(reader.Read())", span="1983-1983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1289 [label="Assert.IsTrue(reader.Read())", span="1986-1986", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1291 [label="Assert.IsTrue(reader.Read())", span="1989-1989", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1294 [label="Assert.IsTrue(reader.Read())", span="1993-1993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1288 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1984-1984", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1290 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1987-1987", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1292 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1990-1990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1293 [label="Assert.AreEqual(11806310474565, reader.Value)", span="1991-1991", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1295 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1994-1994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1285 [label="string json = @''{''''text'''':0xabcdef12345}''", span="1979-1979", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_1296 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1977-1977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs"];
m5_33 [label="jsonTextReader = new JsonTextReader(new StringReader('''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'''))", span="103-103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_32 [label="CollectionAssert.AreEqual(expected, data)", span="101-101", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_36 [label="CollectionAssert.AreEqual(expected, data)", span="107-107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_37 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", span="95-95", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs"];
m5_40 [label="Entry System.Guid.Parse(string)", span="0-0", cluster="System.Guid.Parse(string)", file="JsonTextReaderTest.cs"];
m5_42 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", span="111-111", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m5_1262 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1942-1942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs"];
m5_1263 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1944-1944", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs"];
m5_1264 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'')", span="1946-1946", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs"];
m5_1265 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1942-1942", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs"];
m5_1546 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2387-2387", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1548 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2390-2390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1549 [label="Assert.IsTrue(reader.Read())", span="2392-2392", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1551 [label="Assert.IsTrue(reader.Read())", span="2395-2395", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1553 [label="Assert.IsTrue(reader.Read())", span="2398-2398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1555 [label="Assert.IsTrue(reader.Read())", span="2401-2401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1557 [label="Assert.IsTrue(reader.Read())", span="2404-2404", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1559 [label="Assert.IsTrue(reader.Read())", span="2407-2407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1561 [label="Assert.IsTrue(reader.Read())", span="2410-2410", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1550 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2393-2393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1552 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2396-2396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1554 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2399-2399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1556 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2402-2402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1558 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2405-2405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1560 [label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2408-2408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1562 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2411-2411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1547 [label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2389-2389", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_1563 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2387-2387", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs"];
m5_100 [label="string json = @''[\r\n  333333333333333333333333333333333333333,\r\n  3.3,\r\n  ,\r\n  0f\r\n]''", span="205-210", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m5_101 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="212-212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m5_102 [label="Assert.IsTrue(jsonTextReader.Read())", span="214-214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m5_166 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="331-331", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1234 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1905-1905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs"];
m5_1235 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1907-1907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs"];
m5_1236 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1909-1909", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs"];
m5_1237 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1905-1905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs"];
m5_642 [label="Entry StringReader.cstr", span="", cluster="StringReader.cstr", file="JsonTextReaderTest.cs"];
m5_103 [label="Assert.AreEqual(JsonToken.StartArray, jsonTextReader.TokenType)", span="215-215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m5_1678 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2578-2578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1680 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2581-2581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1681 [label="Assert.IsTrue(reader.Read())", span="2583-2583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1683 [label="Assert.IsTrue(reader.Read())", span="2586-2586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1685 [label="Assert.IsTrue(reader.Read())", span="2589-2589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1687 [label="Assert.IsTrue(reader.Read())", span="2592-2592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1689 [label="Assert.IsTrue(reader.Read())", span="2595-2595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1691 [label="Assert.IsTrue(reader.Read())", span="2598-2598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1693 [label="Assert.IsTrue(reader.Read())", span="2601-2601", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1695 [label="Assert.IsTrue(reader.Read())", span="2604-2604", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1697 [label="Assert.IsTrue(reader.Read())", span="2607-2607", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1699 [label="Assert.IsFalse(reader.Read())", span="2610-2610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1682 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2584-2584", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1684 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2587-2587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1686 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2590-2590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1688 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2593-2593", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1690 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2596-2596", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1692 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2599-2599", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1694 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2602-2602", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1696 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2605-2605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1698 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2608-2608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1679 [label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2580-2580", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1700 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2578-2578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs"];
m5_1528 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2356-2356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m5_1530 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2359-2359", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m5_1531 [label="Assert.IsTrue(reader.Read())", span="2364-2364", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m5_1534 [label="Assert.IsTrue(reader.Read())", span="2368-2368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m5_1532 [label="Assert.AreEqual(''Date'', reader.Value)", span="2365-2365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m5_1533 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2366-2366", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m5_1535 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2369-2369", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m5_1529 [label="string json = ''new Date\0()''", span="2358-2358", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m5_1536 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2356-2356", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs"];
m5_528 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="870-870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_539 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="884-884", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_540 [label="Assert.IsTrue(reader.Read())", span="885-885", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_543 [label="Assert.IsTrue(reader.Read())", span="888-888", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_546 [label="Assert.IsTrue(reader.Read())", span="891-891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_547 [label="Assert.IsFalse(reader.Read())", span="892-892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_544 [label="Assert.AreEqual((long)i, reader.Value)", span="889-889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_538 [label="string json = sw.ToString()", span="882-882", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_541 [label="int i = 0", span="886-886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_542 [label="i < valueCount", span="886-886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_545 [label="i++", span="886-886", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_530 [label="StringWriter sw = new StringWriter()", span="873-873", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_537 [label="writer.WriteEndArray()", span="880-880", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_534 [label="i < valueCount", span="876-876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_529 [label="int valueCount = 10000", span="872-872", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_531 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="874-874", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_533 [label="int i = 0", span="876-876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_536 [label="i++", span="876-876", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_535 [label="writer.WriteValue(i)", span="878-878", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_532 [label="writer.WriteStartArray()", span="875-875", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_548 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="870-870", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs"];
m5_212 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="361-361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m5_214 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="365-365", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m5_216 [label="Assert.IsTrue(reader.Read())", span="368-368", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m5_217 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="369-369", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m5_213 [label="string json = ''[NaN]''", span="363-363", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m5_215 [label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="366-366", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m5_218 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Cannot read NaN as a decimal.'')", span="371-371", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m5_219 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="361-361", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs"];
m5_98 [label="Exit Newtonsoft.Json.Linq.JArray.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", span="324-324", cluster="Newtonsoft.Json.Linq.JArray.CopyTo(Newtonsoft.Json.Linq.JToken[], int)", file="JsonTextReaderTest.cs"];
m5_108 [label="Newtonsoft.Json.Linq.JArray", span="", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m5_110 [label="Assert.IsFalse(jsonTextReader.Read())", span="228-228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m5_109 [label="Assert.AreEqual(JsonToken.EndArray, jsonTextReader.TokenType)", span="226-226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m5_104 [label="Entry Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", span="353-353", cluster="Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", file="JsonTextReaderTest.cs"];
m5_105 [label="return ContentsHashCode();", span="355-355", cluster="Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", file="JsonTextReaderTest.cs"];
m5_106 [label="Exit Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", span="353-353", cluster="Newtonsoft.Json.Linq.JArray.GetDeepHashCode()", file="JsonTextReaderTest.cs"];
m5_107 [label="Entry Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", span="743-743", cluster="Newtonsoft.Json.Linq.JContainer.ContentsHashCode()", file="JsonTextReaderTest.cs"];
m5_111 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", span="203-203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithErrorInArray()", file="JsonTextReaderTest.cs"];
m5_278 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonTextReaderTest.cs"];
m5_1048 [label="Entry System.Convert.ToChar(string)", span="0-0", cluster="System.Convert.ToChar(string)", file="JsonTextReaderTest.cs"];
m5_45 [label="jsonTextReader.Read()", span="116-116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m5_46 [label="jsonTextReader.Read()", span="117-117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m5_47 [label="jsonTextReader.Read()", span="118-118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleQuoteInsideDoubleQuoteString()", file="JsonTextReaderTest.cs"];
m5_990 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs"];
m5_841 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1383-1383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_843 [label="reader = new JsonTextReader(new StringReader(''1''))", span="1387-1387", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_845 [label="reader = new JsonTextReader(new StringReader(''-1''))", span="1390-1390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_847 [label="reader = new JsonTextReader(new StringReader(''0''))", span="1393-1393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_849 [label="reader = new JsonTextReader(new StringReader(''-0''))", span="1396-1396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_851 [label="reader = new JsonTextReader(new StringReader(int.MaxValue.ToString()))", span="1399-1399", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_853 [label="reader = new JsonTextReader(new StringReader(int.MinValue.ToString()))", span="1402-1402", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_855 [label="reader = new JsonTextReader(new StringReader(long.MaxValue.ToString()))", span="1405-1405", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_857 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1408-1408", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_859 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1411-1411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_861 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1414-1414", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_863 [label="reader = new JsonTextReader(new StringReader(''''))", span="1417-1417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_865 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1420-1420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_844 [label="Assert.AreEqual(1, reader.ReadAsInt32())", span="1388-1388", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_846 [label="Assert.AreEqual(-1, reader.ReadAsInt32())", span="1391-1391", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_848 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1394-1394", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_850 [label="Assert.AreEqual(0, reader.ReadAsInt32())", span="1397-1397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_852 [label="Assert.AreEqual(int.MaxValue, reader.ReadAsInt32())", span="1400-1400", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_854 [label="Assert.AreEqual(int.MinValue, reader.ReadAsInt32())", span="1403-1403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_864 [label="Assert.AreEqual(null, reader.ReadAsInt32())", span="1418-1418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_842 [label="JsonTextReader reader = null", span="1385-1385", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_856 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''JSON integer 9223372036854775807 is too large or small for an Int32. Path '', line 1, position 19.'')", span="1406-1406", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_858 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1409-1409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_860 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1E-06' is not a valid integer. Path '', line 1, position 5.'')", span="1412-1412", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_862 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '1.1' is not a valid integer. Path '', line 1, position 3.'')", span="1415-1415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_866 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.ReadAsInt32(), ''Input string '-' is not a valid integer. Path '', line 1, position 1.'')", span="1421-1421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_867 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", span="1383-1383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs"];
m5_2142 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m5_644 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1041-1041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_646 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1045-1045", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_652 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1053-1053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_647 [label="reader.Read()", span="1046-1046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_653 [label="reader.Read()", span="1054-1054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_648 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1047-1047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_654 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1056-1056", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_645 [label="BigInteger i = new BigInteger(long.MinValue)", span="1043-1043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_651 [label="BigInteger total = i + -j", span="1051-1051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_649 [label="int j = 1", span="1049-1049", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_655 [label="j++", span="1049-1049", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_650 [label="j < 1000", span="1049-1049", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_656 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", span="1041-1041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow_Negative()", file="JsonTextReaderTest.cs"];
m5_508 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="841-841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs"];
m5_509 [label="ExceptionAssert.Throws<ArgumentNullException> (\r\n                () => { new JsonTextReader (null); },\r\n                new string[] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: reader'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: reader'' // Mono\r\n                })", span="843-848", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs"];
m5_510 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="841-841", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs"];
m5_256 [label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0", cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonTextReaderTest.cs"];
m5_44 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderTest.cs"];
m5_281 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_283 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="477-477", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_288 [label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="484-484", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_284 [label="Assert.IsTrue(ms.CanRead)", span="479-479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_289 [label="Assert.IsTrue(ms.CanRead)", span="486-486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_291 [label="Assert.IsTrue(ms.CanRead)", span="488-488", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_282 [label="MemoryStream ms = new MemoryStream()", span="476-476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_285 [label="reader.Close()", span="480-480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_287 [label="ms = new MemoryStream()", span="483-483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_290 [label="reader.Close()", span="487-487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_286 [label="Assert.IsFalse(ms.CanRead)", span="481-481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_292 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="474-474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs"];
m5_1925 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs"];
m5_80 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonTextReaderTest.cs"];
m5_81 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonTextReaderTest.cs"];
m5_82 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="180-180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_586 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="943-943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_588 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="964-964", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_591 [label="reader.Read()", span="971-971", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_593 [label="reader.Read()", span="974-974", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_594 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="975-975", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_587 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="945-962", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_589 [label="int i = 0", span="969-969", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_590 [label="i < 15", span="969-969", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_592 [label="i++", span="969-969", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_595 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="943-943", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs"];
m5_1971 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3030-3030", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1973 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="3034-3034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1974 [label="Assert.IsTrue(reader.Read())", span="3036-3036", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1975 [label="Assert.IsTrue(reader.Read())", span="3038-3038", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1977 [label="Assert.IsTrue(reader.Read())", span="3041-3041", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1980 [label="Assert.IsTrue(reader.Read())", span="3045-3045", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1983 [label="Assert.IsTrue(reader.Read())", span="3049-3049", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1986 [label="Assert.IsTrue(reader.Read())", span="3053-3053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1989 [label="Assert.IsTrue(reader.Read())", span="3057-3057", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1992 [label="Assert.IsTrue(reader.Read())", span="3061-3061", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1995 [label="Assert.IsTrue(reader.Read())", span="3065-3065", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1998 [label="Assert.IsTrue(reader.Read())", span="3069-3069", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2001 [label="Assert.IsTrue(reader.Read())", span="3073-3073", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2004 [label="Assert.IsTrue(reader.Read())", span="3077-3077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2007 [label="Assert.IsTrue(reader.Read())", span="3081-3081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2010 [label="Assert.IsTrue(reader.Read())", span="3085-3085", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1976 [label="Assert.AreEqual(false, reader.Value)", span="3039-3039", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1978 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3042-3042", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1979 [label="Assert.AreEqual(true, reader.Value)", span="3043-3043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1981 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3046-3046", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1982 [label="Assert.AreEqual(true, reader.Value)", span="3047-3047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1984 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="3050-3050", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1985 [label="Assert.AreEqual(false, reader.Value)", span="3051-3051", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1987 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3054-3054", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1988 [label="Assert.AreEqual(''test!'', reader.Value)", span="3055-3055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1990 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3058-3058", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1991 [label="Assert.AreEqual(1.11d, reader.Value)", span="3059-3059", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1993 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3062-3062", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1994 [label="Assert.AreEqual(0d, reader.Value)", span="3063-3063", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1996 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3066-3066", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1997 [label="Assert.AreEqual(0d, reader.Value)", span="3067-3067", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1999 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3070-3070", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2000 [label="Assert.AreEqual(0.0000025d, reader.Value)", span="3071-3071", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2002 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3074-3074", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2003 [label="Assert.AreEqual(3000000000d, reader.Value)", span="3075-3075", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2005 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="3078-3078", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2006 [label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="3079-3079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2008 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="3082-3082", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2009 [label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="3083-3083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_1972 [label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="3032-3032", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2011 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="3030-3030", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs"];
m5_2136 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3263-3263", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m5_2137 [label=Error, span="3265-3265", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m5_2139 [label="return _inner.Read(buffer, index, 1);", span="3268-3268", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m5_2138 [label="throw new Exception(''Read error'');", span="3266-3266", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m5_2140 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3263-3263", cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs"];
m5_1370 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2103-2103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1372 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2107-2107", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1373 [label="Assert.IsTrue(reader.Read())", span="2109-2109", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1375 [label="Assert.IsTrue(reader.Read())", span="2112-2112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1381 [label="Assert.IsTrue(reader.Read())", span="2120-2120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1374 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2110-2110", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1376 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2113-2113", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1378 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2116-2116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1379 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2117-2117", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1380 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="2118-2118", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1382 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2121-2121", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1371 [label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="2105-2105", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1377 [label="reader.ReadAsDateTimeOffset()", span="2115-2115", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_1383 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="2103-2103", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs"];
m5_991 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="884-884", cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReaderTest.cs"];
m5_1312 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonTextReaderTest.cs"];
m5_35 [label="expected = Guid.Parse(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="105-105", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytes_Base64AndGuid()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_151 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="286-286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m5_153 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="290-290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m5_155 [label="reader = new JsonTextReader(new StringReader(json))", span="294-294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m5_157 [label="reader = new JsonTextReader(new StringReader(json))", span="298-298", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m5_152 [label="string json = ''0aq2dun13.hod''", span="288-288", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m5_154 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="292-292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m5_156 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="296-296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m5_158 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Unexpected character encountered while parsing number: q. Path '', line 1, position 2.'')", span="300-300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m5_159 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", span="286-286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInvalidNonBase10Number()", file="JsonTextReaderTest.cs"];
m5_2065 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextReaderTest.cs"];
m5_1463 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2235-2235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs"];
m5_1464 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2237-2237", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs"];
m5_1465 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing comment. Path '', line 1, position 6.'')", span="2239-2239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs"];
m5_1466 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2235-2235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs"];
m5_1449 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2219-2219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs"];
m5_1450 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2221-2221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs"];
m5_1451 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2223-2223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs"];
m5_1452 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2219-2219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs"];
m5_223 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="375-375", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_225 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="379-379", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_226 [label="Assert.IsTrue(reader.Read())", span="381-381", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_228 [label="Assert.IsTrue(reader.Read())", span="384-384", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_230 [label="Assert.IsTrue(reader.Read())", span="387-387", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_232 [label="Assert.IsTrue(reader.Read())", span="390-390", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_234 [label="Assert.IsTrue(reader.Read())", span="393-393", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_236 [label="Assert.IsTrue(reader.Read())", span="396-396", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_239 [label="Assert.IsTrue(reader.Read())", span="400-400", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_227 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="382-382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_229 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="385-385", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_231 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="388-388", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_233 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="391-391", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_235 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="394-394", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_237 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="397-397", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_238 [label="Assert.AreEqual(''recipe_text'', reader.Value)", span="398-398", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_240 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="401-401", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_241 [label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="403-403", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_224 [label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="377-377", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_242 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="375-375", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs"];
m5_96 [label="jsonTextReader.ReadAsInt32()", span="194-194", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_97 [label="Exit lambda expression", span="194-194", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_243 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="407-407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_245 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="411-411", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_246 [label="Assert.IsTrue(reader.Read())", span="413-413", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_247 [label="Assert.IsTrue(reader.Read())", span="414-414", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_248 [label="Assert.IsTrue(reader.Read())", span="416-416", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_249 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="417-417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_251 [label="Assert.AreEqual(2, s.Length)", span="420-420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_253 [label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="423-423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_244 [label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="409-409", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_250 [label="string s = reader.Value.ToString()", span="419-419", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_252 [label="StringInfo stringInfo = new StringInfo(s)", span="422-422", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_254 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="407-407", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs"];
m5_4 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="67-67", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_5 [label="Assert.IsTrue(jsonTextReader.Read())", span="69-69", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_1470 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2243-2243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs"];
m5_1471 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2245-2245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs"];
m5_1472 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'')", span="2247-2247", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs"];
m5_1473 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2243-2243", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs"];
m5_328 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="569-569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_330 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="577-577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_331 [label="reader.Read()", span="582-582", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_333 [label="reader.Read()", span="585-585", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_335 [label="reader.Read()", span="588-588", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_337 [label="reader.Read()", span="591-591", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_339 [label="reader.Read()", span="594-594", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_332 [label="Assert.AreEqual(1, reader.LineNumber)", span="583-583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_334 [label="Assert.AreEqual(2, reader.LineNumber)", span="586-586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_336 [label="Assert.AreEqual(3, reader.LineNumber)", span="589-589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_338 [label="Assert.AreEqual(4, reader.LineNumber)", span="592-592", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_340 [label="Assert.AreEqual(5, reader.LineNumber)", span="595-595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_329 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]content''", span="571-575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_341 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Additional text encountered after finished reading JSON content: c. Path '', line 5, position 2.'')", span="597-597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_342 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", span="569-569", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Text()", file="JsonTextReaderTest.cs"];
m5_643 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonTextReaderTest.cs"];
m5_1622 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2501-2501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m5_1624 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2504-2504", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m5_1623 [label="string json = ''new Date !''", span="2503-2503", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m5_1625 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'')", span="2506-2506", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m5_1626 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2501-2501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs"];
m5_701 [label="Entry System.Convert.ToBase64String(byte[])", span="0-0", cluster="System.Convert.ToBase64String(byte[])", file="JsonTextReaderTest.cs"];
m5_1313 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonTextReaderTest.cs"];
m5_657 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1062-1062", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_659 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1079-1079", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_662 [label="Assert.IsTrue(reader.Read())", span="1086-1086", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_664 [label="Assert.IsTrue(reader.Read())", span="1089-1089", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_665 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1090-1090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_666 [label="Assert.AreEqual(''type'', reader.Value)", span="1091-1091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_658 [label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="1064-1077", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_660 [label="int i = 0", span="1084-1084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_661 [label="i < 14", span="1084-1084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_663 [label="i++", span="1084-1084", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_667 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", span="1062-1062", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNewLine()", file="JsonTextReaderTest.cs"];
m5_1430 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2195-2195", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m5_1432 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2199-2199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m5_1433 [label="Assert.IsTrue(reader.Read())", span="2201-2201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m5_1435 [label="Assert.IsTrue(reader.Read())", span="2204-2204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m5_1434 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2202-2202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m5_1436 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2205-2205", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m5_1431 [label="string json = @''{''''Name'''': 1.1}''", span="2197-2197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m5_1437 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'')", span="2207-2207", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m5_1438 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2195-2195", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs"];
m5_668 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1095-1095", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m5_669 [label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="1097-1097", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m5_670 [label="Assert.IsTrue(reader.Read())", span="1098-1098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m5_671 [label="Assert.AreEqual(''h\0i'', reader.Value)", span="1100-1100", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m5_672 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="1095-1095", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs"];
m5_916 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1459-1459", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_918 [label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1463-1463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_922 [label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1468-1468", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_926 [label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1473-1473", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_930 [label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1478-1478", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_934 [label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1483-1483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_936 [label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1486-1486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_940 [label="reader = new JsonTextReader(new StringReader(''''))", span="1491-1491", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_942 [label="reader = new JsonTextReader(new StringReader(''-''))", span="1494-1494", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_919 [label="Assert.IsTrue(reader.Read())", span="1464-1464", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_923 [label="Assert.IsTrue(reader.Read())", span="1469-1469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_927 [label="Assert.IsTrue(reader.Read())", span="1474-1474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_931 [label="Assert.IsTrue(reader.Read())", span="1479-1479", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_937 [label="Assert.IsTrue(reader.Read())", span="1487-1487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_941 [label="Assert.IsFalse(reader.Read())", span="1492-1492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_920 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1465-1465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_921 [label="Assert.AreEqual(1.1d, reader.Value)", span="1466-1466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_924 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1470-1470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_925 [label="Assert.AreEqual(-1.1d, reader.Value)", span="1471-1471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_928 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1475-1475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_929 [label="Assert.AreEqual(0.0d, reader.Value)", span="1476-1476", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_932 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1480-1480", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_933 [label="Assert.AreEqual(-0.0d, reader.Value)", span="1481-1481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_938 [label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1488-1488", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_939 [label="Assert.AreEqual(0.000001d, reader.Value)", span="1489-1489", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_917 [label="JsonTextReader reader = null", span="1461-1461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_935 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Unexpected character encountered while parsing number: s. Path '', line 1, position 77.'')", span="1484-1484", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_943 [label="ExceptionAssert.Throws<JsonReaderException>(() => reader.Read(), ''Input string '-' is not a valid number. Path '', line 1, position 1.'')", span="1495-1495", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_944 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1459-1459", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs"];
m5_15 [label="Assert.IsTrue(jsonTextReader.Read())", span="83-83", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_16 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="84-84", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_17 [label="Assert.AreEqual(''test'', jsonTextReader.Value)", span="85-85", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadCommentInsideArray()", file="JsonTextReaderTest.cs", color=green, community=0];
m5_869 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="JsonTextReaderTest.cs"];
m5_993 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReaderTest.cs"];
m5_1442 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2211-2211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs"];
m5_1443 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2213-2213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs"];
m5_1444 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 0, position 0.'')", span="2215-2215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs"];
m5_1445 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2211-2211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs"];
m5_91 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="197-197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_1477 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2251-2251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1479 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2255-2255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1480 [label="Assert.IsTrue(reader.Read())", span="2257-2257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1482 [label="Assert.IsTrue(reader.Read())", span="2260-2260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1488 [label="Assert.IsTrue(reader.Read())", span="2268-2268", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1481 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2258-2258", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1483 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2261-2261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1485 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2264-2264", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1486 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2265-2265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1489 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2269-2269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1487 [label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2266-2266", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1478 [label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2253-2253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1484 [label="decimal? d = reader.ReadAsDecimal()", span="2263-2263", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_1490 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2251-2251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs"];
m5_811 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1307-1307", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_814 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1313-1313", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_813 [label="StringReader sr = new StringReader(input)", span="1311-1311", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_815 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1315-1315", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_817 [label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="1318-1318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_818 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1319-1319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_820 [label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="1322-1322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_821 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1323-1323", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_823 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="1326-1326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_824 [label="Assert.AreEqual(''Purple\r \n monkey's:\tdishwasher'', jsonReader.Value)", span="1327-1327", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_825 [label="Assert.AreEqual('\'', jsonReader.QuoteChar)", span="1328-1328", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_826 [label="Assert.AreEqual(1, jsonReader.Depth)", span="1329-1329", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_828 [label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="1332-1332", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_829 [label="Assert.AreEqual(0, jsonReader.Depth)", span="1333-1333", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_816 [label="jsonReader.Read()", span="1317-1317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_819 [label="jsonReader.Read()", span="1321-1321", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_822 [label="jsonReader.Read()", span="1325-1325", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_827 [label="jsonReader.Read()", span="1331-1331", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_812 [label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="1309-1309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_830 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="1307-1307", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs"];
m5_1136 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1763-1763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1138 [label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1766-1766", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1137 [label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1765-1765", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1139 [label="Assert.IsTrue(jsonReader.Read())", span="1768-1768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1141 [label="Assert.IsTrue(jsonReader.Read())", span="1771-1771", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1144 [label="Assert.IsTrue(jsonReader.Read())", span="1775-1775", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1147 [label="Assert.IsTrue(jsonReader.Read())", span="1779-1779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1150 [label="Assert.IsTrue(jsonReader.Read())", span="1783-1783", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1152 [label="Assert.IsFalse(jsonReader.Read())", span="1786-1786", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1140 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1769-1769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1142 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1772-1772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1143 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1773-1773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1145 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1776-1776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1146 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1777-1777", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1148 [label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1780-1780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1149 [label="Assert.AreEqual(250L, jsonReader.Value)", span="1781-1781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1151 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1784-1784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1153 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1763-1763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs"];
m5_94 [label="Exit Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", span="314-314", cluster="Newtonsoft.Json.Linq.JArray.Contains(Newtonsoft.Json.Linq.JToken)", file="JsonTextReaderTest.cs"];
m5_24 [label="reader.TokenType != JsonToken.StartArray", span="124-124", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m5_793 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonTextReaderTest.cs"];
m5_83 [label="string json = @''{\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="182-184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_1878 [label="Entry lambda expression", span="2896-2896", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_512 [label="new JsonTextReader (null)", span="844-844", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_609 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="992-992", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_625 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1013-1013", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2131 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="3243-3243", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_161 [label="reader.Read()", span="292-292", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_184 [label="reader.Read()", span="322-322", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_221 [label="reader.Read()", span="371-371", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_326 [label="reader.Read()", span="562-562", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_344 [label="reader.Read()", span="597-597", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_357 [label="reader.Read()", span="626-626", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_911 [label="reader.Read()", span="1446-1446", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_946 [label="reader.Read()", span="1484-1484", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_949 [label="reader.Read()", span="1495-1495", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1124 [label="reader.Read()", span="1746-1746", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1202 [label="reader.Read()", span="1856-1856", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1447 [label="reader.Read()", span="2215-2215", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1454 [label="reader.Read()", span="2223-2223", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1461 [label="reader.Read()", span="2231-2231", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1468 [label="reader.Read()", span="2239-2239", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1475 [label="reader.Read()", span="2247-2247", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1620 [label="reader.Read()", span="2497-2497", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1628 [label="reader.Read()", span="2506-2506", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1659 [label="reader.Read()", span="2552-2552", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1676 [label="Assert.IsTrue(reader.Read())", span="2574-2574", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1840 [label="reader.Read()", span="2836-2836", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1934 [label="Assert.IsTrue(reader.Read())", span="2977-2977", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1966 [label="Assert.IsTrue(reader.Read())", span="2993-2993", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1969 [label="Assert.IsTrue(reader.Read())", span="3011-3011", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2091 [label="jsonTextReader.Read()", span="3169-3169", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2094 [label="jsonTextReader.Read()", span="3170-3170", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2097 [label="jsonTextReader.Read()", span="3179-3179", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2100 [label="jsonTextReader.Read()", span="3188-3188", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2103 [label="jsonTextReader.Read()", span="3189-3189", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2106 [label="jsonTextReader.Read()", span="3190-3190", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2132 [label="reader.Read()", span="3244-3244", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1219 [label="reader.ReadAsBytes()", span="1882-1882", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1239 [label="reader.ReadAsBytes()", span="1909-1909", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1260 [label="reader.ReadAsBytes()", span="1938-1938", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1267 [label="reader.ReadAsBytes()", span="1946-1946", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_113 [label="jsonTextReader.ReadAsInt32()", span="217-217", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_116 [label="jsonTextReader.ReadAsInt32()", span="219-219", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_119 [label="jsonTextReader.ReadAsInt32()", span="221-221", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_122 [label="jsonTextReader.ReadAsInt32()", span="223-223", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_164 [label="reader.ReadAsDecimal()", span="296-296", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_168 [label="reader.ReadAsInt32()", span="300-300", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_511 [label="Entry lambda expression", span="844-844", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_513 [label="Exit lambda expression", span="844-844", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_519 [label="reader.Read()", span="856-856", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_608 [label="Entry lambda expression", span="990-994", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_610 [label="reader.ReadAsInt32()", span="993-993", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_624 [label="Entry lambda expression", span="1011-1015", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_626 [label="reader.ReadAsInt32()", span="1014-1014", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_678 [label="reader.Read()", span="1108-1108", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_685 [label="reader.Read()", span="1116-1116", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_692 [label="reader.ReadAsBytes()", span="1124-1124", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_703 [label="reader.ReadAsBytes()", span="1135-1135", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_718 [label="reader.Read()", span="1154-1154", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_871 [label="reader.ReadAsInt32()", span="1406-1406", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_874 [label="reader.ReadAsInt32()", span="1409-1409", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_877 [label="reader.ReadAsInt32()", span="1412-1412", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_880 [label="reader.ReadAsInt32()", span="1415-1415", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_883 [label="reader.ReadAsInt32()", span="1421-1421", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_908 [label="reader.ReadAsDecimal()", span="1442-1442", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_914 [label="reader.ReadAsDecimal()", span="1455-1455", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1232 [label="reader.ReadAsDecimal()", span="1901-1901", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1246 [label="reader.ReadAsDateTimeOffset()", span="1918-1918", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1338 [label="reader.ReadAsDateTimeOffset()", span="2055-2055", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1440 [label="reader.ReadAsInt32()", span="2207-2207", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1879 [label="reader.Read()", span="2896-2896", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2130 [label="Entry lambda expression", span="3241-3247", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_160 [label="Entry lambda expression", span="292-292", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_162 [label="Exit lambda expression", span="292-292", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_183 [label="Entry lambda expression", span="322-322", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_185 [label="Exit lambda expression", span="322-322", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_220 [label="Entry lambda expression", span="371-371", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_222 [label="Exit lambda expression", span="371-371", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_325 [label="Entry lambda expression", span="560-565", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_327 [label="Exit lambda expression", span="560-565", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_343 [label="Entry lambda expression", span="597-597", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_345 [label="Exit lambda expression", span="597-597", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_356 [label="Entry lambda expression", span="624-629", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_358 [label="Exit lambda expression", span="624-629", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_910 [label="Entry lambda expression", span="1446-1446", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_912 [label="Exit lambda expression", span="1446-1446", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_945 [label="Entry lambda expression", span="1484-1484", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_947 [label="Exit lambda expression", span="1484-1484", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_948 [label="Entry lambda expression", span="1495-1495", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_950 [label="Exit lambda expression", span="1495-1495", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1123 [label="Entry lambda expression", span="1746-1746", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1125 [label="Exit lambda expression", span="1746-1746", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1201 [label="Entry lambda expression", span="1856-1856", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1203 [label="Exit lambda expression", span="1856-1856", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1446 [label="Entry lambda expression", span="2215-2215", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1448 [label="Exit lambda expression", span="2215-2215", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1453 [label="Entry lambda expression", span="2223-2223", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1455 [label="Exit lambda expression", span="2223-2223", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1460 [label="Entry lambda expression", span="2231-2231", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1462 [label="Exit lambda expression", span="2231-2231", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1467 [label="Entry lambda expression", span="2239-2239", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1469 [label="Exit lambda expression", span="2239-2239", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1474 [label="Entry lambda expression", span="2247-2247", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1476 [label="Exit lambda expression", span="2247-2247", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1619 [label="Entry lambda expression", span="2497-2497", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1621 [label="Exit lambda expression", span="2497-2497", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1627 [label="Entry lambda expression", span="2506-2506", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1629 [label="Exit lambda expression", span="2506-2506", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1658 [label="Entry lambda expression", span="2552-2552", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1660 [label="Exit lambda expression", span="2552-2552", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1675 [label="Entry lambda expression", span="2574-2574", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1677 [label="Exit lambda expression", span="2574-2574", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1839 [label="Entry lambda expression", span="2836-2836", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1841 [label="Exit lambda expression", span="2836-2836", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1933 [label="Entry lambda expression", span="2977-2977", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1935 [label="Exit lambda expression", span="2977-2977", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1965 [label="Entry lambda expression", span="2993-2993", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1967 [label="Exit lambda expression", span="2993-2993", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1968 [label="Entry lambda expression", span="3011-3011", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1970 [label="Exit lambda expression", span="3011-3011", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2090 [label="Entry lambda expression", span="3169-3169", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2092 [label="Exit lambda expression", span="3169-3169", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2093 [label="Entry lambda expression", span="3170-3170", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2095 [label="Exit lambda expression", span="3170-3170", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2096 [label="Entry lambda expression", span="3179-3179", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2098 [label="Exit lambda expression", span="3179-3179", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2099 [label="Entry lambda expression", span="3188-3188", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2101 [label="Exit lambda expression", span="3188-3188", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2102 [label="Entry lambda expression", span="3189-3189", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2104 [label="Exit lambda expression", span="3189-3189", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2105 [label="Entry lambda expression", span="3190-3190", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2107 [label="Exit lambda expression", span="3190-3190", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_2133 [label="Exit lambda expression", span="3241-3247", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1218 [label="Entry lambda expression", span="1882-1882", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1220 [label="Exit lambda expression", span="1882-1882", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1238 [label="Entry lambda expression", span="1909-1909", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1240 [label="Exit lambda expression", span="1909-1909", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1259 [label="Entry lambda expression", span="1938-1938", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1261 [label="Exit lambda expression", span="1938-1938", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1266 [label="Entry lambda expression", span="1946-1946", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1268 [label="Exit lambda expression", span="1946-1946", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_95 [label="Entry Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", span="498-498", cluster="Newtonsoft.Json.Linq.JContainer.ContainsItem(Newtonsoft.Json.Linq.JToken)", file="JsonTextReaderTest.cs"];
m5_112 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_114 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_115 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_117 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_118 [label="Entry lambda expression", span="221-221", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_120 [label="Exit lambda expression", span="221-221", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_121 [label="Entry lambda expression", span="223-223", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_123 [label="Exit lambda expression", span="223-223", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_163 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_165 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_167 [label="Entry lambda expression", span="300-300", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_169 [label="Exit lambda expression", span="300-300", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_518 [label="Entry lambda expression", span="856-856", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_520 [label="Exit lambda expression", span="856-856", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_611 [label="Exit lambda expression", span="990-994", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_627 [label="Exit lambda expression", span="1011-1015", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_677 [label="Entry lambda expression", span="1108-1108", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_679 [label="Exit lambda expression", span="1108-1108", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_684 [label="Entry lambda expression", span="1116-1116", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_686 [label="Exit lambda expression", span="1116-1116", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_691 [label="Entry lambda expression", span="1124-1124", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_693 [label="Exit lambda expression", span="1124-1124", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_702 [label="Entry lambda expression", span="1135-1135", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_704 [label="Exit lambda expression", span="1135-1135", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_717 [label="Entry lambda expression", span="1154-1154", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_719 [label="Exit lambda expression", span="1154-1154", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_870 [label="Entry lambda expression", span="1406-1406", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_872 [label="Exit lambda expression", span="1406-1406", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_873 [label="Entry lambda expression", span="1409-1409", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_875 [label="Exit lambda expression", span="1409-1409", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_876 [label="Entry lambda expression", span="1412-1412", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_878 [label="Exit lambda expression", span="1412-1412", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_879 [label="Entry lambda expression", span="1415-1415", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_881 [label="Exit lambda expression", span="1415-1415", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_882 [label="Entry lambda expression", span="1421-1421", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_884 [label="Exit lambda expression", span="1421-1421", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_907 [label="Entry lambda expression", span="1442-1442", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_909 [label="Exit lambda expression", span="1442-1442", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_913 [label="Entry lambda expression", span="1455-1455", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_915 [label="Exit lambda expression", span="1455-1455", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1231 [label="Entry lambda expression", span="1901-1901", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1233 [label="Exit lambda expression", span="1901-1901", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1245 [label="Entry lambda expression", span="1918-1918", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1247 [label="Exit lambda expression", span="1918-1918", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1337 [label="Entry lambda expression", span="2055-2055", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1339 [label="Exit lambda expression", span="2055-2055", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1439 [label="Entry lambda expression", span="2207-2207", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1441 [label="Exit lambda expression", span="2207-2207", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_1880 [label="Exit lambda expression", span="2896-2896", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_28 [label="a.ReadTokenFrom(reader)", span="130-130", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m5_29 [label="return a;", span="132-132", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JsonTextReaderTest.cs"];
m5_30 [label="Exit Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="111-111", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JsonTextReaderTest.cs"];
m5_34 [label="Entry Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", span="1789-1789", cluster="Newtonsoft.Json.Linq.JToken.SetLineInfo(Newtonsoft.Json.IJsonLineInfo)", color=green, community=0, file="JsonTextReaderTest.cs"];
m5_137 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="261-261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_139 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="267-267", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_140 [label="Assert.IsTrue(jsonTextReader.Read())", span="269-269", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_142 [label="Assert.IsTrue(jsonTextReader.Read())", span="272-272", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_144 [label="Assert.IsTrue(jsonTextReader.Read())", span="275-275", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_147 [label="Assert.IsTrue(jsonTextReader.Read())", span="279-279", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_149 [label="Assert.IsFalse(jsonTextReader.Read())", span="282-282", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_141 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="270-270", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_143 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="273-273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_145 [label="Assert.AreEqual(JsonToken.String, jsonTextReader.TokenType)", span="276-276", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_146 [label="Assert.AreEqual(@''/Date(9467082_PIE_340000-0631)/'', jsonTextReader.Value)", span="277-277", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_148 [label="Assert.AreEqual(JsonToken.EndObject, jsonTextReader.TokenType)", span="280-280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_138 [label="string json = @''{\r\n    ChildId: '\/Date(9467082_PIE_340000-0631)\/'\r\n}''", span="263-265", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_150 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", span="261-261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadMSDateAsString()", file="JsonTextReaderTest.cs"];
m5_1196 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1850-1850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m5_1197 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1852-1852", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m5_1198 [label="reader.Read()", span="1854-1854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m5_1199 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'')", span="1856-1856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m5_1200 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1850-1850", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs"];
m5_1049 [label="Entry System.Convert.ToInt32(char)", span="0-0", cluster="System.Convert.ToInt32(char)", file="JsonTextReaderTest.cs"];
m5_555 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="896-896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_557 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="899-899", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_558 [label="Assert.IsTrue(reader.Read())", span="901-901", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_560 [label="Assert.IsTrue(reader.Read())", span="904-904", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_562 [label="Assert.IsTrue(reader.Read())", span="907-907", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_564 [label="Assert.IsTrue(reader.Read())", span="910-910", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_566 [label="Assert.IsTrue(reader.Read())", span="913-913", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_568 [label="Assert.IsTrue(reader.Read())", span="916-916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_570 [label="Assert.IsTrue(reader.Read())", span="919-919", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_572 [label="Assert.IsTrue(reader.Read())", span="922-922", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_574 [label="Assert.IsTrue(reader.Read())", span="925-925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_576 [label="Assert.IsTrue(reader.Read())", span="928-928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_578 [label="Assert.IsTrue(reader.Read())", span="931-931", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_581 [label="Assert.IsTrue(reader.Read())", span="935-935", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_584 [label="Assert.IsFalse(reader.Read())", span="939-939", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_559 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="902-902", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_561 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="905-905", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_563 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="908-908", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_565 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="911-911", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_567 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="914-914", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_569 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="917-917", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_571 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="920-920", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_573 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="923-923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_575 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="926-926", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_577 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="929-929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_579 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="932-932", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_580 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="933-933", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_582 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="936-936", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_583 [label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="937-937", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_556 [label="string json = ''\0{\0'\0h\0i\0'\0:\0[\01\0,\0'\0'\0\0,\0null\0]\0,\0do\0:true\0}\0\0/*\0sd\0f\0*/\0/*\0sd\0f\0*/ \0''", span="898-898", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_585 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="896-896", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs"];
m5_1050 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1641-1641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1052 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1646-1646", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1054 [label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1649-1649", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1056 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1652-1652", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1057 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1653-1653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1059 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1656-1656", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1060 [label="Assert.AreEqual(0.0, jsonReader.Value)", span="1657-1657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1062 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1660-1660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1063 [label="Assert.AreEqual(0.1, jsonReader.Value)", span="1661-1661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1065 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1664-1664", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1066 [label="Assert.AreEqual(1.0, jsonReader.Value)", span="1665-1665", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1068 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1668-1668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1069 [label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1669-1669", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1071 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1672-1672", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1072 [label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1673-1673", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1074 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1676-1676", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1075 [label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1677-1677", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1077 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1680-1680", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1078 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1681-1681", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1080 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1684-1684", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1081 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1685-1685", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1083 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1688-1688", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1084 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1689-1689", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1086 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1692-1692", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1087 [label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1693-1693", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1089 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1696-1696", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1090 [label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1697-1697", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1092 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1700-1700", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1093 [label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1701-1701", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1095 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1704-1704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1096 [label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1705-1705", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1098 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1708-1708", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1099 [label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1709-1709", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1101 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1712-1712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1102 [label="Assert.AreEqual(0d, jsonReader.Value)", span="1713-1713", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1104 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1716-1716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1105 [label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1717-1717", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1107 [label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1720-1720", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1108 [label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1721-1721", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1110 [label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1724-1724", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1051 [label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1643-1644", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1053 [label="jsonReader.Read()", span="1648-1648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1055 [label="jsonReader.Read()", span="1651-1651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1058 [label="jsonReader.Read()", span="1655-1655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1061 [label="jsonReader.Read()", span="1659-1659", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1064 [label="jsonReader.Read()", span="1663-1663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1067 [label="jsonReader.Read()", span="1667-1667", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1070 [label="jsonReader.Read()", span="1671-1671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1073 [label="jsonReader.Read()", span="1675-1675", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1076 [label="jsonReader.Read()", span="1679-1679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1079 [label="jsonReader.Read()", span="1683-1683", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1082 [label="jsonReader.Read()", span="1687-1687", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1085 [label="jsonReader.Read()", span="1691-1691", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1088 [label="jsonReader.Read()", span="1695-1695", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1091 [label="jsonReader.Read()", span="1699-1699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1094 [label="jsonReader.Read()", span="1703-1703", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1097 [label="jsonReader.Read()", span="1707-1707", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1100 [label="jsonReader.Read()", span="1711-1711", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1103 [label="jsonReader.Read()", span="1715-1715", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1106 [label="jsonReader.Read()", span="1719-1719", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1109 [label="jsonReader.Read()", span="1723-1723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_1111 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1641-1641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs"];
m5_551 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="174-174", cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextReaderTest.cs"];
m5_673 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1104-1104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs"];
m5_674 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="1106-1106", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs"];
m5_675 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'')", span="1108-1108", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs"];
m5_676 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="1104-1104", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs"];
m5_836 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1352-1352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m5_838 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1376-1376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m5_839 [label="reader.Read()", span="1377-1377", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m5_837 [label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1354-1374", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m5_840 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1352-1352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs"];
m5_1517 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2326-2326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1519 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2339-2339", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1522 [label="Assert.IsTrue(reader.Read())", span="2346-2346", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1524 [label="Assert.IsTrue(reader.Read())", span="2349-2349", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1526 [label="Assert.IsFalse(reader.Read())", span="2352-2352", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1525 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2350-2350", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1518 [label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2328-2337", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1520 [label="int i = 0", span="2344-2344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1521 [label="i < 26", span="2344-2344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1523 [label="i++", span="2344-2344", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_1527 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2326-2326", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs"];
m5_301 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="524-524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_303 [label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="528-528", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_304 [label="Assert.IsTrue(reader.Read())", span="530-530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_305 [label="Assert.IsTrue(reader.Read())", span="531-531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_306 [label="Assert.IsTrue(reader.Read())", span="532-532", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_309 [label="Assert.IsTrue(reader.Read())", span="536-536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_311 [label="Assert.IsTrue(reader.Read())", span="539-539", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_313 [label="Assert.IsTrue(reader.Read())", span="542-542", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_315 [label="Assert.IsTrue(reader.Read())", span="545-545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_307 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="533-533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_308 [label="Assert.AreEqual(''Date'', reader.Value)", span="534-534", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_310 [label="Assert.AreEqual(0L, reader.Value)", span="537-537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_312 [label="Assert.AreEqual(''hi'', reader.Value)", span="540-540", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_314 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="543-543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_316 [label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="546-546", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_302 [label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="526-526", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_317 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="524-524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs"];
m5_1654 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2548-2548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs"];
m5_1655 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2550-2550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs"];
m5_1656 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing boolean value. Path '', line 1, position 4.'')", span="2552-2552", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs"];
m5_1657 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2548-2548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs"];
m5_1368 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="JsonTextReaderTest.cs"];
m5_1927 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2966-2966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m5_1929 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2970-2973", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m5_1930 [label="Assert.IsTrue(reader.Read())", span="2975-2975", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m5_1928 [label="string json = ''[[]]''", span="2968-2968", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m5_1931 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2977-2977", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m5_1932 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2966-2966", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs"];
m5_2068 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3160-3160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2070 [label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3163-3163", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2069 [label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3162-3162", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2071 [label="Assert.IsTrue(jsonTextReader.Read())", span="3165-3165", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2076 [label="Assert.IsTrue(jsonTextReader.Read())", span="3174-3174", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2081 [label="Assert.IsTrue(jsonTextReader.Read())", span="3183-3183", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2077 [label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3175-3175", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2082 [label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3184-3184", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2073 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3169-3169", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2074 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3170-3170", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2079 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3179-3179", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2084 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3188-3188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2085 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3189-3189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2086 [label="ExceptionAssert.Throws<Exception>(() => jsonTextReader.Read(), ''Read error'')", span="3190-3190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2072 [label="toggleReaderError.Error = true", span="3167-3167", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2075 [label="toggleReaderError.Error = false", span="3172-3172", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2078 [label="toggleReaderError.Error = true", span="3177-3177", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2080 [label="toggleReaderError.Error = false", span="3181-3181", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2083 [label="toggleReaderError.Error = true", span="3186-3186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2087 [label="toggleReaderError.Error = false", span="3192-3192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_2088 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3160-3160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs"];
m5_1674 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonTextReaderTest.cs"];
m5_1740 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2679-2679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1742 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2701-2701", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1743 [label="Assert.IsTrue(reader.Read())", span="2703-2703", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1747 [label="Assert.IsTrue(reader.Read())", span="2708-2708", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1750 [label="Assert.IsTrue(reader.Read())", span="2712-2712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1753 [label="Assert.IsTrue(reader.Read())", span="2716-2716", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1757 [label="Assert.IsTrue(reader.Read())", span="2721-2721", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1760 [label="Assert.IsTrue(reader.Read())", span="2725-2725", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1764 [label="Assert.IsTrue(reader.Read())", span="2730-2730", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1768 [label="Assert.IsTrue(reader.Read())", span="2735-2735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1772 [label="Assert.IsTrue(reader.Read())", span="2740-2740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1776 [label="Assert.IsTrue(reader.Read())", span="2745-2745", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1779 [label="Assert.IsTrue(reader.Read())", span="2749-2749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1783 [label="Assert.IsTrue(reader.Read())", span="2754-2754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1785 [label="Assert.IsTrue(reader.Read())", span="2757-2757", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1788 [label="Assert.IsTrue(reader.Read())", span="2761-2761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1791 [label="Assert.IsTrue(reader.Read())", span="2765-2765", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1794 [label="Assert.IsTrue(reader.Read())", span="2769-2769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1797 [label="Assert.IsTrue(reader.Read())", span="2773-2773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1799 [label="Assert.IsTrue(reader.Read())", span="2776-2776", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1802 [label="Assert.IsTrue(reader.Read())", span="2780-2780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1804 [label="Assert.IsTrue(reader.Read())", span="2783-2783", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1806 [label="Assert.IsTrue(reader.Read())", span="2786-2786", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1808 [label="Assert.IsTrue(reader.Read())", span="2789-2789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1810 [label="Assert.IsTrue(reader.Read())", span="2792-2792", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1812 [label="Assert.IsTrue(reader.Read())", span="2795-2795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1814 [label="Assert.IsTrue(reader.Read())", span="2798-2798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1816 [label="Assert.IsTrue(reader.Read())", span="2801-2801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1818 [label="Assert.IsTrue(reader.Read())", span="2804-2804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1821 [label="Assert.IsTrue(reader.Read())", span="2808-2808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1824 [label="Assert.IsFalse(reader.Read())", span="2812-2812", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1744 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2704-2704", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1745 [label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2705-2705", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1746 [label="Assert.AreEqual(2, reader.LineNumber)", span="2706-2706", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1748 [label="Assert.AreEqual(2, reader.LineNumber)", span="2709-2709", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1749 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2710-2710", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1751 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2713-2713", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1752 [label="Assert.AreEqual(3, reader.LineNumber)", span="2714-2714", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1754 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2717-2717", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1755 [label="Assert.AreEqual(''Name'', reader.Value)", span="2718-2718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1756 [label="Assert.AreEqual(3, reader.LineNumber)", span="2719-2719", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1758 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2722-2722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1759 [label="Assert.AreEqual(4, reader.LineNumber)", span="2723-2723", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1761 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2726-2726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1762 [label="Assert.AreEqual(true, reader.Value)", span="2727-2727", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1763 [label="Assert.AreEqual(4, reader.LineNumber)", span="2728-2728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1765 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2731-2731", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1766 [label="Assert.AreEqual(''comment after true'', reader.Value)", span="2732-2732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1767 [label="Assert.AreEqual(5, reader.LineNumber)", span="2733-2733", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1769 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2736-2736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1770 [label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2737-2737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1771 [label="Assert.AreEqual(6, reader.LineNumber)", span="2738-2738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1773 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2741-2741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1774 [label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2742-2742", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1775 [label="Assert.AreEqual(6, reader.LineNumber)", span="2743-2743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1777 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2746-2746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1778 [label="Assert.AreEqual(7, reader.LineNumber)", span="2747-2747", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1780 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2750-2750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1781 [label="Assert.AreEqual(9, reader.LineNumber)", span="2751-2751", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1782 [label="Assert.AreEqual(''Date'', reader.Value)", span="2752-2752", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1784 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2755-2755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1786 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2758-2758", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1787 [label="Assert.AreEqual(10, reader.LineNumber)", span="2759-2759", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1789 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2762-2762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1790 [label="Assert.AreEqual(11, reader.LineNumber)", span="2763-2763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1792 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2766-2766", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1793 [label="Assert.AreEqual(11, reader.LineNumber)", span="2767-2767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1795 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2770-2770", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1796 [label="Assert.AreEqual(''Price'', reader.Value)", span="2771-2771", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1798 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2774-2774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1800 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2777-2777", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1801 [label="Assert.AreEqual(''Sizes'', reader.Value)", span="2778-2778", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1803 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2781-2781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1805 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2784-2784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1807 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2787-2787", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1809 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2790-2790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1811 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2793-2793", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1813 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2796-2796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1815 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2799-2799", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1817 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2802-2802", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1819 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2805-2805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1820 [label="Assert.AreEqual(''comment '', reader.Value)", span="2806-2806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1822 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2809-2809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1823 [label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2810-2810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1741 [label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n@'',//comment after comma'' + StringUtils.CarriageReturnLineFeed + \r\n@''''''ExpiryDate''''://comment''  + StringUtils.LineFeed + \r\n@''new '' + StringUtils.LineFeed +\r\n@''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2681-2699", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_1825 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2679-2679", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs"];
m5_997 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReaderTest.cs"];
m5_319 [label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0", cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonTextReaderTest.cs"];
m5_999 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="JsonTextReaderTest.cs"];
m5_79 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonTextReaderTest.cs"];
m5_26 [label="JArray a = new JArray()", span="127-127", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m5_680 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1112-1112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs"];
m5_681 [label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="1114-1114", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs"];
m5_682 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="1116-1116", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs"];
m5_683 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="1112-1112", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs"];
m5_514 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="852-852", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs"];
m5_515 [label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="854-854", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs"];
m5_516 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'')", span="856-856", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs"];
m5_517 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="852-852", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs"];
m5_1491 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2273-2273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1493 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2277-2277", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1495 [label="Assert.IsTrue(reader.Read())", span="2280-2280", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1497 [label="Assert.IsTrue(reader.Read())", span="2283-2283", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1503 [label="Assert.IsTrue(reader.Read())", span="2291-2291", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1496 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2281-2281", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1498 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2284-2284", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1500 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2287-2287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1501 [label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2288-2288", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1504 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2292-2292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1502 [label="Assert.AreEqual(9.99m, d)", span="2289-2289", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1492 [label="string json = @''{''''decimal'''':''''9,99''''}''", span="2275-2275", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1494 [label="reader.Culture = new CultureInfo(''fr-FR'')", span="2278-2278", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1499 [label="decimal? d = reader.ReadAsDecimal()", span="2286-2286", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_1505 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2273-2273", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs"];
m5_92 [label="Assert.IsFalse(jsonTextReader.Read())", span="199-199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_93 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", span="180-180", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_279 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextReaderTest.cs"];
m5_2108 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3199-3199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2117 [label="JsonTextReader reader = new JsonTextReader(sr)", span="3212-3212", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2116 [label="StringReader sr = new StringReader(json)", span="3211-3211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2118 [label="Assert.IsTrue(reader.Read())", span="3214-3214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2123 [label="Assert.IsTrue(reader.Read())", span="3222-3222", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2120 [label="Assert.AreEqual(decimal.MaxValue, max)", span="3217-3217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2122 [label="Assert.AreEqual(decimal.MinValue, min)", span="3220-3220", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2119 [label="decimal? max = reader.ReadAsDecimal()", span="3216-3216", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2121 [label="decimal? min = reader.ReadAsDecimal()", span="3219-3219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2115 [label="string json = sw.ToString()", span="3209-3209", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2109 [label="StringWriter sw = new StringWriter()", span="3201-3201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2114 [label="writer.WriteEndArray()", span="3207-3207", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2110 [label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3202-3202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2113 [label="writer.WriteValue(decimal.MinValue)", span="3206-3206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2111 [label="writer.WriteStartArray()", span="3204-3204", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2112 [label="writer.WriteValue(decimal.MaxValue)", span="3205-3205", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_2124 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3199-3199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs"];
m5_1537 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2373-2373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m5_1539 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2376-2376", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m5_1540 [label="Assert.IsTrue(reader.Read())", span="2378-2378", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m5_1543 [label="Assert.IsTrue(reader.Read())", span="2382-2382", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m5_1541 [label="Assert.AreEqual(''Date'', reader.Value)", span="2379-2379", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m5_1542 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2380-2380", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m5_1544 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2383-2383", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m5_1538 [label="string json = ''new Date\n()''", span="2375-2375", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m5_1545 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2373-2373", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs"];
m5_411 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="712-712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_414 [label="JsonReader reader = new JsonTextReader(sr)", span="722-722", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_413 [label="StringReader sr = new StringReader(input)", span="720-720", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_415 [label="Assert.AreEqual(0, reader.Depth)", span="724-724", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_417 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="727-727", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_418 [label="Assert.AreEqual(0, reader.Depth)", span="728-728", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_419 [label="Assert.AreEqual('''', reader.Path)", span="729-729", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_421 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="732-732", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_422 [label="Assert.AreEqual(1, reader.Depth)", span="733-733", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_423 [label="Assert.AreEqual(''value'', reader.Path)", span="734-734", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_425 [label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="737-737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_426 [label="Assert.AreEqual(reader.Value, @''Purple'')", span="738-738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_427 [label="Assert.AreEqual(reader.QuoteChar, '\'')", span="739-739", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_428 [label="Assert.AreEqual(1, reader.Depth)", span="740-740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_429 [label="Assert.AreEqual(''value'', reader.Path)", span="741-741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_431 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="744-744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_432 [label="Assert.AreEqual(1, reader.Depth)", span="745-745", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_433 [label="Assert.AreEqual(''array'', reader.Path)", span="746-746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_435 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="749-749", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_436 [label="Assert.AreEqual(1, reader.Depth)", span="750-750", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_437 [label="Assert.AreEqual(''array'', reader.Path)", span="751-751", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_439 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="754-754", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_440 [label="Assert.AreEqual(1L, reader.Value)", span="755-755", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_441 [label="Assert.AreEqual(2, reader.Depth)", span="756-756", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_442 [label="Assert.AreEqual(''array[0]'', reader.Path)", span="757-757", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_444 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="760-760", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_445 [label="Assert.AreEqual(2L, reader.Value)", span="761-761", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_446 [label="Assert.AreEqual(2, reader.Depth)", span="762-762", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_447 [label="Assert.AreEqual(''array[1]'', reader.Path)", span="763-763", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_449 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="766-766", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_450 [label="Assert.AreEqual(''Date'', reader.Value)", span="767-767", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_451 [label="Assert.AreEqual(2, reader.Depth)", span="768-768", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_452 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="769-769", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_454 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="772-772", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_455 [label="Assert.AreEqual(1L, reader.Value)", span="773-773", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_456 [label="Assert.AreEqual(3, reader.Depth)", span="774-774", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_457 [label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="775-775", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_459 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="778-778", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_460 [label="Assert.AreEqual(null, reader.Value)", span="779-779", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_461 [label="Assert.AreEqual(2, reader.Depth)", span="780-780", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_462 [label="Assert.AreEqual(''array[2]'', reader.Path)", span="781-781", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_464 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="784-784", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_465 [label="Assert.AreEqual(1, reader.Depth)", span="785-785", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_466 [label="Assert.AreEqual(''array'', reader.Path)", span="786-786", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_468 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="789-789", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_469 [label="Assert.AreEqual(1, reader.Depth)", span="790-790", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_470 [label="Assert.AreEqual(''subobject'', reader.Path)", span="791-791", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_472 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="794-794", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_473 [label="Assert.AreEqual(1, reader.Depth)", span="795-795", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_474 [label="Assert.AreEqual(''subobject'', reader.Path)", span="796-796", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_476 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="799-799", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_477 [label="Assert.AreEqual(2, reader.Depth)", span="800-800", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_478 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="801-801", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_480 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="804-804", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_481 [label="Assert.AreEqual(2, reader.Depth)", span="805-805", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_482 [label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="806-806", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_484 [label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="809-809", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_485 [label="Assert.AreEqual(2, reader.Depth)", span="810-810", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_486 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="811-811", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_488 [label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="814-814", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_489 [label="Assert.AreEqual(2, reader.Depth)", span="815-815", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_490 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="816-816", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_492 [label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="819-819", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_493 [label="Assert.AreEqual(3, reader.Depth)", span="820-820", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_494 [label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="821-821", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_496 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="824-824", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_497 [label="Assert.AreEqual(2, reader.Depth)", span="825-825", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_498 [label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="826-826", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_500 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="829-829", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_501 [label="Assert.AreEqual(1, reader.Depth)", span="830-830", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_502 [label="Assert.AreEqual(''subobject'', reader.Path)", span="831-831", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_504 [label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="834-834", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_505 [label="Assert.AreEqual(0, reader.Depth)", span="835-835", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_506 [label="Assert.AreEqual('''', reader.Path)", span="836-836", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_416 [label="reader.Read()", span="726-726", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_420 [label="reader.Read()", span="731-731", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_424 [label="reader.Read()", span="736-736", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_430 [label="reader.Read()", span="743-743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_434 [label="reader.Read()", span="748-748", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_438 [label="reader.Read()", span="753-753", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_443 [label="reader.Read()", span="759-759", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_448 [label="reader.Read()", span="765-765", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_453 [label="reader.Read()", span="771-771", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_458 [label="reader.Read()", span="777-777", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_463 [label="reader.Read()", span="783-783", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_467 [label="reader.Read()", span="788-788", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_471 [label="reader.Read()", span="793-793", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_475 [label="reader.Read()", span="798-798", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_479 [label="reader.Read()", span="803-803", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_483 [label="reader.Read()", span="808-808", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_487 [label="reader.Read()", span="813-813", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_491 [label="reader.Read()", span="818-818", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_495 [label="reader.Read()", span="823-823", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_499 [label="reader.Read()", span="828-828", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_503 [label="reader.Read()", span="833-833", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_412 [label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="714-718", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_507 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="712-712", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs"];
m5_868 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="JsonTextReaderTest.cs"];
m5_1842 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2840-2840", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1844 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2844-2844", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1846 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2847-2847", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1847 [label="Assert.AreEqual(8m, reader.Value)", span="2848-2848", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1843 [label="string json = @''010''", span="2842-2842", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1845 [label="reader.ReadAsDecimal()", span="2846-2846", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m5_1848 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2840-2840", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs"];
m5_994 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="828-828", cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReaderTest.cs"];
m5_687 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1120-1120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs"];
m5_688 [label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="1122-1122", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs"];
m5_689 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsBytes(); }, ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'')", span="1124-1124", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs"];
m5_690 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="1120-1120", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs"];
m5_1456 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2227-2227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs"];
m5_1457 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2229-2229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs"];
m5_1458 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Error parsing null value. Path '', line 1, position 4.'')", span="2231-2231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs"];
m5_1459 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2227-2227", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs"];
m5_25 [label="throw JsonReaderException.Create(reader, ''Error reading JArray from JsonReader. Current JsonReader item is not an array: {0}''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="125-125", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m5_170 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="304-304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_172 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="308-308", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_173 [label="Assert.IsTrue(reader.Read())", span="310-310", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_175 [label="Assert.IsTrue(reader.Read())", span="313-313", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_177 [label="Assert.IsTrue(reader.Read())", span="316-316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_179 [label="Assert.IsTrue(reader.Read())", span="319-319", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_174 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="311-311", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_176 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="314-314", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_178 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="317-317", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_180 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="320-320", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_171 [label="string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="306-306", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_181 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected content while parsing JSON. Path 'u', line 1, position 27.'')", span="322-322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_182 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="304-304", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs"];
m5_765 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1249-1249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_766 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1251-1251", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_767 [label="Assert.IsTrue(reader.Read())", span="1252-1252", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_768 [label="Assert.IsTrue(reader.Read())", span="1253-1253", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_771 [label="Assert.IsTrue(reader.Read())", span="1256-1256", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_774 [label="Assert.IsTrue(reader.Read())", span="1259-1259", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_769 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1254-1254", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_770 [label="Assert.AreEqual(''hi\r\nbye'', reader.Value)", span="1255-1255", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_772 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1257-1257", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_773 [label="Assert.AreEqual(1L, reader.Value)", span="1258-1258", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_775 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1260-1260", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_776 [label="Assert.IsFalse(reader.Read())", span="1261-1261", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_777 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1249-1249", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs"];
m5_1701 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2614-2614", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1703 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2625-2625", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1704 [label="Assert.IsTrue(reader.Read())", span="2627-2627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1706 [label="Assert.IsTrue(reader.Read())", span="2630-2630", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1708 [label="Assert.IsTrue(reader.Read())", span="2633-2633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1710 [label="Assert.IsTrue(reader.Read())", span="2636-2636", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1713 [label="Assert.IsTrue(reader.Read())", span="2640-2640", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1715 [label="Assert.IsTrue(reader.Read())", span="2643-2643", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1718 [label="Assert.IsTrue(reader.Read())", span="2647-2647", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1720 [label="Assert.IsTrue(reader.Read())", span="2650-2650", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1722 [label="Assert.IsTrue(reader.Read())", span="2653-2653", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1725 [label="Assert.IsTrue(reader.Read())", span="2657-2657", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1727 [label="Assert.IsTrue(reader.Read())", span="2660-2660", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1731 [label="Assert.IsTrue(reader.Read())", span="2665-2665", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1733 [label="Assert.IsTrue(reader.Read())", span="2668-2668", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1735 [label="Assert.IsTrue(reader.Read())", span="2671-2671", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1737 [label="Assert.IsTrue(reader.Read())", span="2674-2674", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1705 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2628-2628", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1707 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2631-2631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1709 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2634-2634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1711 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2637-2637", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1712 [label="Assert.AreEqual(''Name'', reader.Value)", span="2638-2638", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1714 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2641-2641", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1716 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2644-2644", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1717 [label="Assert.AreEqual(true, reader.Value)", span="2645-2645", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1719 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2648-2648", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1721 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2651-2651", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1723 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2654-2654", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1724 [label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2655-2655", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1726 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2658-2658", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1728 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2661-2661", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1729 [label="Assert.AreEqual(5, reader.LineNumber)", span="2662-2662", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1730 [label="Assert.AreEqual(''Date'', reader.Value)", span="2663-2663", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1732 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2666-2666", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1734 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2669-2669", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1736 [label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2672-2672", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1738 [label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2675-2675", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1702 [label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2616-2623", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1739 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2614-2614", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs"];
m5_1001 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="650-650", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m5_84 [label="JsonTextReader jsonTextReader = new JsonTextReader(new StringReader(json))", span="186-186", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_2089 [label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3258-3258", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m5_2134 [label="_inner = inner", span="3260-3260", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m5_2135 [label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3258-3258", cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs"];
m5_271 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="461-461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m5_273 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="465-465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m5_274 [label="reader.Read()", span="466-466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m5_272 [label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="463-463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m5_275 [label="string s = (string)reader.Value", span="468-468", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m5_276 [label="return s;", span="470-470", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m5_277 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="461-461", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs"];
m5_1112 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1729-1729", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1114 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1735-1735", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1115 [label="reader.Read()", span="1737-1737", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1117 [label="reader.Read()", span="1740-1740", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1119 [label="reader.Read()", span="1743-1743", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1116 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1738-1738", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1118 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1741-1741", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1120 [label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1744-1744", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1113 [label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1731-1733", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1121 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'')", span="1746-1746", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1122 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1729-1729", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs"];
m5_1614 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2492-2492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_1616 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2495-2495", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_1615 [label="string json = ''new Dat''", span="2494-2494", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_1617 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.Read(); }, ''Unexpected end while parsing constructor. Path '', line 1, position 7.'')", span="2497-2497", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_1618 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2492-2492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs"];
m5_989 [label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0", cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTextReaderTest.cs"];
m5_1135 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextReaderTest.cs"];
m5_1021 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1595-1595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1024 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1600-1600", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1025 [label="reader.Read()", span="1602-1602", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1027 [label="reader.Read()", span="1605-1605", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1031 [label="Assert.IsTrue(reader.Read())", span="1610-1610", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1033 [label="Assert.IsFalse(reader.Read())", span="1613-1613", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1026 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1603-1603", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1028 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1606-1606", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1029 [label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1607-1607", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1030 [label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1608-1608", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1032 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1611-1611", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1034 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1614-1614", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1023 [label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1598-1598", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1022 [label="int length = 20000", span="1597-1597", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_1035 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1595-1595", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs"];
m5_295 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="492-492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m5_297 [label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="515-515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m5_296 [label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="494-513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m5_298 [label="jsonReader.Read()", span="517-517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m5_299 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="492-492", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs"];
m5_27 [label="a.SetLineInfo(reader as IJsonLineInfo)", span="128-128", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m5_346 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="601-601", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m5_348 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="611-611", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m5_349 [label="reader.Read()", span="612-612", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m5_347 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n]   \r\n\r\n''", span="603-609", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m5_350 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", span="601-601", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Whitespace()", file="JsonTextReaderTest.cs"];
m5_641 [label="Entry BigInteger.cstr", span="", cluster="BigInteger.cstr", file="JsonTextReaderTest.cs"];
m5_521 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="860-860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m5_523 [label="JsonReader reader = new JsonTextReader(new StringReader(''''' + s + '''''))", span="863-863", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m5_525 [label="Assert.AreEqual(s, reader.Value)", span="866-866", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m5_522 [label="string s = new string('a', 10000)", span="862-862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m5_524 [label="reader.Read()", span="864-864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m5_526 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", span="860-860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongString()", file="JsonTextReaderTest.cs"];
m5_1638 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2522-2522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m5_1640 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2525-2525", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m5_1641 [label="Assert.IsTrue(reader.Read())", span="2527-2527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m5_1643 [label="Assert.IsTrue(reader.Read())", span="2530-2530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m5_1642 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2528-2528", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m5_1644 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2531-2531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m5_1639 [label="string json = ''[]''", span="2524-2524", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m5_1645 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2522-2522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs"];
m5_318 [label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3285-3285", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs"];
m5_2148 [label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3285-3285", cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs"];
m5_550 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextReaderTest.cs"];
m5_794 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1285-1285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_797 [label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1290-1290", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_798 [label="Assert.IsTrue(reader.Read())", span="1291-1291", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_800 [label="Assert.IsTrue(reader.Read())", span="1293-1293", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_801 [label="Assert.IsTrue(reader.Read())", span="1294-1294", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_803 [label="Assert.IsTrue(reader.Read())", span="1296-1296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_807 [label="Assert.IsTrue(reader.Read())", span="1300-1300", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_799 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1292-1292", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_802 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1295-1295", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_806 [label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1299-1299", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_808 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1301-1301", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_796 [label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1288-1288", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_804 [label="byte[] data = reader.ReadAsBytes()", span="1297-1297", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_809 [label="Assert.IsFalse(reader.Read())", span="1303-1303", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_805 [label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1298-1298", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_795 [label="string helloWorld = ''Hello world!''", span="1287-1287", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_810 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1285-1285", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs"];
m5_951 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1499-1499", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_981 [label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1545-1545", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_986 [label="Assert.AreEqual(json, sb.ToString())", span="1558-1558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_979 [label="string json = sb.ToString()", span="1541-1541", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_980 [label="JsonSerializer serializer = new JsonSerializer()", span="1543-1543", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_982 [label="sb = new StringBuilder()", span="1547-1547", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_985 [label="serializer.Serialize(jsonWriter, jsonObject)", span="1555-1555", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_952 [label="StringBuilder sb = new StringBuilder()", span="1501-1501", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_978 [label="jsonWriter.WriteEndArray()", span="1538-1538", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_983 [label="sw = new StringWriter(sb)", span="1548-1548", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_984 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1550-1553", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_964 [label="int i = 0", span="1520-1520", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_953 [label="StringWriter sw = new StringWriter(sb)", span="1502-1502", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_954 [label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1504-1507", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_977 [label="jsonWriter.WriteNull()", span="1537-1537", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_963 [label="jsonWriter.WriteStartArray()", span="1519-1519", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_965 [label="i < 5", span="1520-1520", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_966 [label="jsonWriter.WriteValue(i)", span="1522-1522", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_967 [label="i++", span="1520-1520", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_955 [label="jsonWriter.WriteStartArray()", span="1509-1509", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_956 [label="jsonWriter.WriteValue(true)", span="1510-1510", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_957 [label="jsonWriter.WriteStartObject()", span="1512-1512", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_958 [label="jsonWriter.WritePropertyName(''integer'')", span="1513-1513", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_959 [label="jsonWriter.WriteValue(99)", span="1514-1514", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_960 [label="jsonWriter.WritePropertyName(''string'')", span="1515-1515", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_961 [label="jsonWriter.WriteValue(''how now brown cow?'')", span="1516-1516", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_962 [label="jsonWriter.WritePropertyName(''array'')", span="1517-1517", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_968 [label="jsonWriter.WriteStartObject()", span="1525-1525", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_969 [label="jsonWriter.WritePropertyName(''decimal'')", span="1526-1526", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_970 [label="jsonWriter.WriteValue(990.00990099m)", span="1527-1527", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_971 [label="jsonWriter.WriteEndObject()", span="1528-1528", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_972 [label="jsonWriter.WriteValue(5)", span="1530-1530", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_973 [label="jsonWriter.WriteEndArray()", span="1531-1531", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_974 [label="jsonWriter.WriteEndObject()", span="1533-1533", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_975 [label="jsonWriter.WriteValue(''This is a string.'')", span="1535-1535", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_976 [label="jsonWriter.WriteNull()", span="1536-1536", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_987 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1499-1499", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs"];
m5_257 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="427-427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_258 [label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="430-430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_259 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="433-433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_260 [label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="436-436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_261 [label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="439-439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_262 [label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="442-442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_263 [label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="445-445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_264 [label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="448-448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_265 [label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="451-451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_266 [label="Assert.AreEqual(''\ufffd\ufffd\ufffd'', ReadString(''\udc00\ud800\ud800''))", span="454-454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_267 [label="Assert.AreEqual(''ABC \ufffd\b'', ReadString(''ABC \\ud800\\b''))", span="456-456", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_268 [label="Assert.AreEqual(''ABC \ufffd '', ReadString(''ABC \\ud800 ''))", span="457-457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_269 [label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="458-458", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_270 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="427-427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs"];
m5_1506 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2296-2296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1508 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2311-2311", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1511 [label="reader.Read()", span="2318-2318", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1513 [label="Assert.IsTrue(reader.Read())", span="2321-2321", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1514 [label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2322-2322", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1507 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2298-2309", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1509 [label="int i = 0", span="2316-2316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1510 [label="i < 13", span="2316-2316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1512 [label="i++", span="2316-2316", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1515 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2296-2296", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs"];
m5_1516 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="JsonTextReaderTest.cs"];
m5_628 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1021-1021", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_630 [label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="1025-1025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_636 [label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="1033-1033", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_631 [label="reader.Read()", span="1026-1026", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_637 [label="reader.Read()", span="1034-1034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_632 [label="Assert.AreEqual(typeof(long), reader.ValueType)", span="1027-1027", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_638 [label="Assert.AreEqual(typeof(BigInteger), reader.ValueType)", span="1036-1036", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_629 [label="BigInteger i = new BigInteger(long.MaxValue)", span="1023-1023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_635 [label="BigInteger total = i + j", span="1031-1031", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_633 [label="int j = 1", span="1029-1029", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_639 [label="j++", span="1029-1029", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_634 [label="j < 1000", span="1029-1029", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_640 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", span="1021-1021", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs"];
m5_1204 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1860-1860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m5_1205 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1862-1862", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m5_1207 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1865-1865", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m5_1206 [label="Assert.IsNull(reader.ReadAsDecimal())", span="1864-1864", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m5_1208 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1860-1860", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs"];
m5_85 [label="Assert.IsTrue(jsonTextReader.Read())", span="188-188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_86 [label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="189-189", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_87 [label="Assert.IsTrue(jsonTextReader.Read())", span="191-191", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_1036 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1618-1618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1038 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1622-1622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1039 [label="reader.Read()", span="1627-1627", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1041 [label="reader.Read()", span="1630-1630", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1043 [label="reader.Read()", span="1633-1633", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1045 [label="reader.Read()", span="1636-1636", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1040 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1628-1628", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1042 [label="Assert.AreEqual(''<'', reader.Value)", span="1631-1631", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1044 [label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1634-1634", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1046 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1637-1637", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1037 [label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1620-1620", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1047 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1618-1618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs"];
m5_1311 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonTextReaderTest.cs"];
m5_1328 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2043-2043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m5_1330 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2047-2047", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m5_1331 [label="Assert.IsTrue(reader.Read())", span="2049-2049", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m5_1333 [label="Assert.IsTrue(reader.Read())", span="2052-2052", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m5_1332 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2050-2050", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m5_1334 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2053-2053", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m5_1329 [label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="2045-2045", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m5_1335 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'')", span="2055-2055", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m5_1336 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="2043-2043", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs"];
m5_88 [label="Assert.AreEqual(JsonToken.PropertyName, jsonTextReader.TokenType)", span="192-192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_89 [label="ExceptionAssert.Throws<JsonReaderException>(() => jsonTextReader.ReadAsInt32(), ''JSON integer 333333333333333333333333333333333333333 is too large or small for an Int32. Path 'ChildId', line 2, position 53.'')", span="194-194", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_90 [label="Assert.IsTrue(jsonTextReader.Read())", span="196-196", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadIntegerWithError()", file="JsonTextReaderTest.cs"];
m5_1248 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1923-1923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m5_1249 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1925-1925", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m5_1251 [label="Assert.AreEqual(2, data.Length)", span="1928-1928", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m5_1252 [label="Assert.AreEqual(1, data[0])", span="1929-1929", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m5_1253 [label="Assert.AreEqual(2, data[1])", span="1930-1930", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m5_1250 [label="byte[] data = reader.ReadAsBytes()", span="1927-1927", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m5_1254 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1923-1923", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs"];
m5_2125 [label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="545-545", cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs"];
m5_1241 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1914-1914", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs"];
m5_1242 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1916-1916", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs"];
m5_1243 [label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'')", span="1918-1918", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs"];
m5_1244 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1914-1914", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs"];
m5_720 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1158-1158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_727 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1197-1197", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_724 [label="StringReader sr = new StringReader(newLinesText)", span="1191-1191", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_728 [label="Assert.IsTrue(reader.Read())", span="1198-1198", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_730 [label="Assert.IsTrue(reader.Read())", span="1201-1201", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_733 [label="Assert.IsTrue(reader.Read())", span="1205-1205", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_735 [label="Assert.IsTrue(reader.Read())", span="1208-1208", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_739 [label="Assert.IsTrue(reader.Read())", span="1213-1213", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_742 [label="Assert.IsTrue(reader.Read())", span="1217-1217", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_745 [label="Assert.IsTrue(reader.Read())", span="1221-1221", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_748 [label="Assert.IsTrue(reader.Read())", span="1225-1225", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_750 [label="Assert.IsTrue(reader.Read())", span="1228-1228", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_752 [label="Assert.IsTrue(reader.Read())", span="1231-1231", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_754 [label="Assert.IsTrue(reader.Read())", span="1234-1234", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_757 [label="Assert.IsTrue(reader.Read())", span="1238-1238", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_759 [label="Assert.IsTrue(reader.Read())", span="1241-1241", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_761 [label="Assert.IsTrue(reader.Read())", span="1244-1244", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_732 [label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1203-1203", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_747 [label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1223-1223", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_729 [label="Assert.AreEqual(7, reader.LineNumber)", span="1199-1199", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_731 [label="Assert.AreEqual(31, reader.LineNumber)", span="1202-1202", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_734 [label="Assert.AreEqual(37, reader.LineNumber)", span="1206-1206", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_736 [label="Assert.AreEqual(55, reader.LineNumber)", span="1209-1209", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_737 [label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1210-1210", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_738 [label="Assert.AreEqual(''Date'', reader.Value)", span="1211-1211", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_740 [label="Assert.AreEqual(61, reader.LineNumber)", span="1214-1214", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_741 [label="Assert.AreEqual(1L, reader.Value)", span="1215-1215", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_743 [label="Assert.AreEqual(73, reader.LineNumber)", span="1218-1218", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_744 [label="Assert.AreEqual(null, reader.Value)", span="1219-1219", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_746 [label="Assert.AreEqual(91, reader.LineNumber)", span="1222-1222", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_749 [label="Assert.AreEqual(97, reader.LineNumber)", span="1226-1226", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_751 [label="Assert.AreEqual(109, reader.LineNumber)", span="1229-1229", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_753 [label="Assert.AreEqual(115, reader.LineNumber)", span="1232-1232", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_755 [label="Assert.AreEqual(133, reader.LineNumber)", span="1235-1235", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_756 [label="Assert.AreEqual(''name2'', reader.Value)", span="1236-1236", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_758 [label="Assert.AreEqual(139, reader.LineNumber)", span="1239-1239", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_760 [label="Assert.AreEqual(145, reader.LineNumber)", span="1242-1242", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_762 [label="Assert.AreEqual(151, reader.LineNumber)", span="1245-1245", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_722 [label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="1162-1188", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_725 [label="sr.ReadLine() != null", span="1192-1192", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_721 [label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="1160-1160", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_723 [label="int count = 0", span="1190-1190", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_726 [label="count++", span="1194-1194", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_763 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="1158-1158", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs"];
m5_1003 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1562-1562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1006 [label="JsonReader jsonReader = new JsonTextReader(sr)", span="1572-1572", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1005 [label="StringReader sr = new StringReader(input)", span="1570-1570", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1008 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1575-1575", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1010 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1578-1578", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1011 [label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1579-1579", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1013 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1582-1582", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1014 [label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1583-1583", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1016 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1586-1586", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1017 [label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1587-1587", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1019 [label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1590-1590", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1007 [label="jsonReader.Read()", span="1574-1574", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1009 [label="jsonReader.Read()", span="1577-1577", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1012 [label="jsonReader.Read()", span="1581-1581", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1015 [label="jsonReader.Read()", span="1585-1585", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1018 [label="jsonReader.Read()", span="1589-1589", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1004 [label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1564-1568", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1020 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1562-1562", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs"];
m5_1354 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2081-2081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1356 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2085-2085", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1357 [label="Assert.IsTrue(reader.Read())", span="2087-2087", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1359 [label="Assert.IsTrue(reader.Read())", span="2090-2090", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1365 [label="Assert.IsTrue(reader.Read())", span="2098-2098", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1358 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2088-2088", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1360 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2091-2091", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1362 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2094-2094", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1363 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2095-2095", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1364 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="2096-2096", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1366 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2099-2099", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1355 [label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="2083-2083", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1361 [label="reader.ReadAsDateTimeOffset()", span="2093-2093", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_1367 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="2081-2081", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs"];
m5_995 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs"];
m5_1564 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2415-2415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1565 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="2417-2417", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1567 [label="Assert.IsTrue(reader.Read())", span="2420-2420", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1569 [label="Assert.IsTrue(reader.Read())", span="2423-2423", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1571 [label="Assert.IsTrue(reader.Read())", span="2426-2426", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1573 [label="Assert.IsTrue(reader.Read())", span="2429-2429", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1575 [label="Assert.IsTrue(reader.Read())", span="2432-2432", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1577 [label="Assert.IsTrue(reader.Read())", span="2435-2435", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1579 [label="Assert.IsTrue(reader.Read())", span="2438-2438", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1581 [label="Assert.IsTrue(reader.Read())", span="2441-2441", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1583 [label="Assert.IsTrue(reader.Read())", span="2444-2444", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1585 [label="Assert.IsTrue(reader.Read())", span="2447-2447", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1587 [label="Assert.IsTrue(reader.Read())", span="2450-2450", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1589 [label="Assert.IsTrue(reader.Read())", span="2453-2453", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1591 [label="Assert.IsTrue(reader.Read())", span="2456-2456", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1593 [label="Assert.IsTrue(reader.Read())", span="2459-2459", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1595 [label="Assert.IsTrue(reader.Read())", span="2462-2462", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1597 [label="Assert.IsTrue(reader.Read())", span="2465-2465", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1599 [label="Assert.IsTrue(reader.Read())", span="2468-2468", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1601 [label="Assert.IsTrue(reader.Read())", span="2471-2471", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1603 [label="Assert.IsTrue(reader.Read())", span="2474-2474", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1605 [label="Assert.IsFalse(reader.Read())", span="2477-2477", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1568 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2421-2421", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1570 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2424-2424", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1572 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2427-2427", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1574 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2430-2430", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1576 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2433-2433", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1578 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2436-2436", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1580 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2439-2439", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1582 [label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2442-2442", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1584 [label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2445-2445", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1586 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2448-2448", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1588 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2451-2451", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1590 [label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2454-2454", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1592 [label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2457-2457", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1594 [label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2460-2460", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1596 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2463-2463", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1598 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2466-2466", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1600 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2469-2469", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1602 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2472-2472", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1604 [label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2475-2475", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1566 [label="reader.SupportMultipleContent = true", span="2418-2418", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1606 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2415-2415", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs"];
m5_1221 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1887-1887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m5_1222 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1889-1889", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m5_1224 [label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1892-1892", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m5_1223 [label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1891-1891", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m5_1225 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1887-1887", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs"];
m5_1607 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2481-2481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m5_1609 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2484-2484", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m5_1610 [label="Assert.IsTrue(reader.Read())", span="2486-2486", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m5_1611 [label="Assert.IsTrue(reader.Read())", span="2487-2487", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m5_1612 [label="Assert.IsFalse(reader.Read())", span="2488-2488", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m5_1608 [label="string json = ''[true ''", span="2483-2483", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m5_1613 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2481-2481", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs"];
m5_2141 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonTextReaderTest.cs"];
m5_1936 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2981-2981", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1938 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2985-2988", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1939 [label="Assert.IsTrue(reader.Read())", span="2990-2990", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1943 [label="Assert.IsTrue(reader.Read())", span="2996-2996", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1945 [label="Assert.IsTrue(reader.Read())", span="2999-2999", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1947 [label="Assert.IsTrue(reader.Read())", span="3002-3002", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1949 [label="Assert.IsTrue(reader.Read())", span="3005-3005", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1951 [label="Assert.IsTrue(reader.Read())", span="3008-3008", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1955 [label="Assert.IsTrue(reader.Read())", span="3014-3014", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1957 [label="Assert.IsTrue(reader.Read())", span="3017-3017", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1959 [label="Assert.IsTrue(reader.Read())", span="3020-3020", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1961 [label="Assert.IsTrue(reader.Read())", span="3023-3023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1963 [label="Assert.IsFalse(reader.Read())", span="3026-3026", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1940 [label="Assert.AreEqual(0, reader.Depth)", span="2991-2991", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1942 [label="Assert.AreEqual(1, reader.Depth)", span="2994-2994", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1944 [label="Assert.AreEqual(2, reader.Depth)", span="2997-2997", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1946 [label="Assert.AreEqual(3, reader.Depth)", span="3000-3000", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1948 [label="Assert.AreEqual(3, reader.Depth)", span="3003-3003", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1950 [label="Assert.AreEqual(2, reader.Depth)", span="3006-3006", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1952 [label="Assert.AreEqual(1, reader.Depth)", span="3009-3009", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1954 [label="Assert.AreEqual(1, reader.Depth)", span="3012-3012", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1956 [label="Assert.AreEqual(2, reader.Depth)", span="3015-3015", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1958 [label="Assert.AreEqual(2, reader.Depth)", span="3018-3018", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1960 [label="Assert.AreEqual(1, reader.Depth)", span="3021-3021", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1962 [label="Assert.AreEqual(0, reader.Depth)", span="3024-3024", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1937 [label="string json = ''[[[[]]],[[]]]''", span="2983-2983", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1941 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'')", span="2993-2993", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1953 [label="ExceptionAssert.Throws<JsonReaderException>(() => { Assert.IsTrue(reader.Read()); }, ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'')", span="3011-3011", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_1964 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2981-2981", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs"];
m5_14 [label="Entry Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", span="200-200", cluster="Newtonsoft.Json.Linq.JContainer.ContentsEqual(Newtonsoft.Json.Linq.JContainer)", color=green, community=0, file="JsonTextReaderTest.cs"];
m5_18 [label="Entry Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="111-111", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JsonTextReaderTest.cs"];
m5_19 [label="reader.TokenType == JsonToken.None", span="113-113", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JsonTextReaderTest.cs"];
m5_20 [label="!reader.Read()", span="115-115", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JsonTextReaderTest.cs"];
m5_21 [label="throw JsonReaderException.Create(reader, ''Error reading JArray from JsonReader.'');", span="116-116", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", color=green, community=0, file="JsonTextReaderTest.cs"];
m5_22 [label="reader.TokenType == JsonToken.Comment", span="119-119", cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m5_351 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="618-618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m5_353 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="622-622", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m5_352 [label="string json = @'''hi' a''", span="620-620", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m5_354 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: a. Path '', line 1, position 5.'')", span="624-629", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m5_355 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", span="618-618", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs"];
m5_320 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="550-550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m5_322 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="558-558", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m5_321 [label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="552-556", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m5_323 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                while (reader.Read())\r\n                {\r\n                }\r\n            }, ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'')", span="560-565", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m5_324 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="550-550", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs"];
m5_1314 [label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2021-2021", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1316 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2025-2025", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1317 [label="Assert.IsTrue(reader.Read())", span="2027-2027", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1319 [label="Assert.IsTrue(reader.Read())", span="2030-2030", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1325 [label="Assert.IsTrue(reader.Read())", span="2038-2038", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1318 [label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2028-2028", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1320 [label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2031-2031", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1322 [label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2034-2034", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1323 [label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2035-2035", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1324 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="2036-2036", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1326 [label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2039-2039", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1315 [label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="2023-2023", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1321 [label="reader.ReadAsDateTimeOffset()", span="2033-2033", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1327 [label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="2021-2021", cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs"];
m5_1000 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextReaderTest.cs"];
m5_2181 [label=total, span="", file="JsonTextReaderTest.cs"];
m5_2182 [label=total, span="", file="JsonTextReaderTest.cs"];
m5_2215 [label=json, span="", file="JsonTextReaderTest.cs"];
m5_2173 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2174 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2175 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2177 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2178 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2179 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2189 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2190 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2191 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2192 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2201 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2202 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2203 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2204 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2205 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2206 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2207 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2208 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2209 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2210 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2212 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2213 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2214 [label=jsonTextReader, span="", file="JsonTextReaderTest.cs"];
m5_2176 [label="Newtonsoft.Json.Tests.JsonTextReaderTest", span="", file="JsonTextReaderTest.cs"];
m5_2193 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2195 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2197 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2198 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2171 [label=jsonTextReader, span="", file="JsonTextReaderTest.cs"];
m5_2172 [label=jsonTextReader, span="", file="JsonTextReaderTest.cs"];
m5_2180 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2183 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2184 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2185 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2186 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2187 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2188 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2194 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2196 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2199 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2200 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2211 [label=reader, span="", file="JsonTextReaderTest.cs"];
m5_2216 [label="Newtonsoft.Json.Tests.ToggleReaderError", span="", file="JsonTextReaderTest.cs"];
m7_70 [label="Entry Unk.HasParameters", span="", cluster="Unk.HasParameters", file="LinqToJsonTest.cs"];
m7_21 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="152-152", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="LinqToJsonTest.cs"];
m7_22 [label="return type.IsEnum;", span="155-155", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="LinqToJsonTest.cs"];
m7_23 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", span="152-152", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsEnum(System.Type)", file="LinqToJsonTest.cs"];
m7_88 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="LinqToJsonTest.cs"];
m7_93 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", span="584-584", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="LinqToJsonTest.cs"];
m7_94 [label="target.GetInterfaces()", span="586-586", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="LinqToJsonTest.cs"];
m7_95 [label="yield return i;", span="588-588", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="LinqToJsonTest.cs"];
m7_97 [label="yield return ci;", span="591-591", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="LinqToJsonTest.cs"];
m7_96 [label="i.GetInterfaces()", span="589-589", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="LinqToJsonTest.cs"];
m7_98 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", span="584-584", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllInterfaces(System.Type)", file="LinqToJsonTest.cs"];
m7_54 [label="Entry System.Type.BaseType()", span="143-143", cluster="System.Type.BaseType()", file="LinqToJsonTest.cs"];
m7_6 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="107-107", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="LinqToJsonTest.cs"];
m7_7 [label="return type.ContainsGenericParameters;", span="110-110", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="LinqToJsonTest.cs"];
m7_8 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", span="107-107", cluster="Newtonsoft.Json.Utilities.TypeExtensions.ContainsGenericParameters(System.Type)", file="LinqToJsonTest.cs"];
m7_27 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="170-170", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="LinqToJsonTest.cs"];
m7_28 [label="return type.IsSealed;", span="173-173", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="LinqToJsonTest.cs"];
m7_29 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", span="170-170", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsSealed(System.Type)", file="LinqToJsonTest.cs"];
m7_36 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="514-514", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="LinqToJsonTest.cs"];
m7_37 [label="return type.IsValueType;", span="517-517", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="LinqToJsonTest.cs"];
m7_38 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", span="514-514", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsValueType(System.Type)", file="LinqToJsonTest.cs"];
m7_104 [label="Entry System.Type.GetAllInterfaces()", span="584-584", cluster="System.Type.GetAllInterfaces()", file="LinqToJsonTest.cs"];
m7_39 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="523-523", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_40 [label="Type current = type", span="525-525", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_42 [label="string.Equals(current.FullName, fullTypeName, StringComparison.Ordinal)", span="529-529", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_46 [label="type.GetInterfaces()", span="538-538", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_47 [label="string.Equals(i.Name, fullTypeName, StringComparison.Ordinal)", span="540-540", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_48 [label="match = type", span="542-542", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_41 [label="current != null", span="527-527", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_43 [label="match = current", span="531-531", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_45 [label="current = current.BaseType()", span="535-535", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_44 [label="return true;", span="532-532", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_50 [label="match = null", span="547-547", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_49 [label="return true;", span="543-543", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_51 [label="return false;", span="548-548", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_52 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", span="523-523", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string, out System.Type)", file="LinqToJsonTest.cs"];
m7_0 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="80-80", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="LinqToJsonTest.cs"];
m7_1 [label="return d.Method;", span="83-83", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="LinqToJsonTest.cs"];
m7_2 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", span="80-80", cluster="Newtonsoft.Json.Utilities.TypeExtensions.Method(System.Delegate)", file="LinqToJsonTest.cs"];
m7_85 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="LinqToJsonTest.cs"];
m7_55 [label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()", file="LinqToJsonTest.cs"];
m7_90 [label="Entry lambda expression", span="572-572", cluster="lambda expression", file="LinqToJsonTest.cs"];
m7_72 [label="method.Name == name", span="559-559", cluster="lambda expression", file="LinqToJsonTest.cs"];
m7_71 [label="Entry lambda expression", span="559-559", cluster="lambda expression", file="LinqToJsonTest.cs"];
m7_73 [label="Exit lambda expression", span="559-559", cluster="lambda expression", file="LinqToJsonTest.cs"];
m7_91 [label="parameter.ParameterType", span="572-572", cluster="lambda expression", file="LinqToJsonTest.cs"];
m7_92 [label="Exit lambda expression", span="572-572", cluster="lambda expression", file="LinqToJsonTest.cs"];
m7_33 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="505-505", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="LinqToJsonTest.cs"];
m7_34 [label="return type.IsVisible;", span="508-508", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="LinqToJsonTest.cs"];
m7_35 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", span="505-505", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsVisible(System.Type)", file="LinqToJsonTest.cs"];
m7_56 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="551-551", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="LinqToJsonTest.cs"];
m7_57 [label="Type match", span="553-553", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="LinqToJsonTest.cs"];
m7_58 [label="return type.AssignableToTypeName(fullTypeName, out match);", span="554-554", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="LinqToJsonTest.cs"];
m7_59 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", span="551-551", cluster="Newtonsoft.Json.Utilities.TypeExtensions.AssignableToTypeName(System.Type, string)", file="LinqToJsonTest.cs"];
m7_30 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="496-496", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="LinqToJsonTest.cs"];
m7_31 [label="return type.IsAbstract;", span="499-499", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="LinqToJsonTest.cs"];
m7_32 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", span="496-496", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsAbstract(System.Type)", file="LinqToJsonTest.cs"];
m7_89 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="LinqToJsonTest.cs"];
m7_18 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="143-143", cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="LinqToJsonTest.cs"];
m7_19 [label="return type.BaseType;", span="146-146", cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="LinqToJsonTest.cs"];
m7_20 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", span="143-143", cluster="Newtonsoft.Json.Utilities.TypeExtensions.BaseType(System.Type)", file="LinqToJsonTest.cs"];
m7_106 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="LinqToJsonTest.cs"];
m7_74 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", span="570-570", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_75 [label="var methodParameters = method.GetParameters().Select(parameter => parameter.ParameterType).ToArray()", span="572-572", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_76 [label="methodParameters.Length != parameterTypes.Length", span="574-574", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_80 [label="methodParameters[i].ToString() != parameterTypes[i].ToString()", span="578-578", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_79 [label="i < methodParameters.Length", span="577-577", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_77 [label="return false;", span="575-575", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_78 [label="int i = 0", span="577-577", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_82 [label="i++", span="577-577", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_83 [label="return true;", span="581-581", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_81 [label="return false;", span="579-579", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_84 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", span="570-570", cluster="Newtonsoft.Json.Utilities.TypeExtensions.HasParameters(System.Reflection.MethodInfo, params System.Type[])", file="LinqToJsonTest.cs"];
m7_3 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="89-89", cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m7_4 [label="return memberInfo.MemberType;", span="92-92", cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m7_5 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", span="89-89", cluster="Newtonsoft.Json.Utilities.TypeExtensions.MemberType(System.Reflection.MemberInfo)", file="LinqToJsonTest.cs"];
m7_61 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", span="557-557", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="LinqToJsonTest.cs"];
m7_62 [label="var methods = type.GetMethods().Where(method => method.Name == name)", span="559-559", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="LinqToJsonTest.cs"];
m7_64 [label="method.HasParameters(parameterTypes)", span="563-563", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="LinqToJsonTest.cs"];
m7_63 [label=methods, span="561-561", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="LinqToJsonTest.cs"];
m7_66 [label="return null;", span="567-567", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="LinqToJsonTest.cs"];
m7_65 [label="return method;", span="564-564", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="LinqToJsonTest.cs"];
m7_67 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", span="557-557", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetGenericMethod(System.Type, string, params System.Type[])", file="LinqToJsonTest.cs"];
m7_24 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="161-161", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="LinqToJsonTest.cs"];
m7_25 [label="return type.IsClass;", span="164-164", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="LinqToJsonTest.cs"];
m7_26 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", span="161-161", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsClass(System.Type)", file="LinqToJsonTest.cs"];
m7_69 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="LinqToJsonTest.cs"];
m7_86 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="LinqToJsonTest.cs"];
m7_15 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="134-134", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="LinqToJsonTest.cs"];
m7_16 [label="return type.IsGenericTypeDefinition;", span="137-137", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="LinqToJsonTest.cs"];
m7_17 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", span="134-134", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericTypeDefinition(System.Type)", file="LinqToJsonTest.cs"];
m7_99 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", span="596-596", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", file="LinqToJsonTest.cs"];
m7_100 [label="var allTypes = target.GetAllInterfaces().ToList()", span="598-598", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", file="LinqToJsonTest.cs"];
m7_101 [label="allTypes.Add(target)", span="599-599", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", file="LinqToJsonTest.cs"];
m7_102 [label="return from type in allTypes\r\n             from method in type.GetMethods()\r\n             select method;", span="601-603", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", file="LinqToJsonTest.cs"];
m7_103 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", span="596-596", cluster="Newtonsoft.Json.Utilities.TypeExtensions.GetAllMethods(System.Type)", file="LinqToJsonTest.cs"];
m7_105 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LinqToJsonTest.cs"];
m7_68 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="LinqToJsonTest.cs"];
m7_60 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="523-523", cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="LinqToJsonTest.cs"];
m7_9 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="116-116", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="LinqToJsonTest.cs"];
m7_10 [label="return type.IsInterface;", span="119-119", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="LinqToJsonTest.cs"];
m7_11 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", span="116-116", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsInterface(System.Type)", file="LinqToJsonTest.cs"];
m7_12 [label="Entry Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="125-125", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="LinqToJsonTest.cs"];
m7_13 [label="return type.IsGenericType;", span="128-128", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="LinqToJsonTest.cs"];
m7_14 [label="Exit Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", span="125-125", cluster="Newtonsoft.Json.Utilities.TypeExtensions.IsGenericType(System.Type)", file="LinqToJsonTest.cs"];
m7_53 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="LinqToJsonTest.cs"];
m7_87 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="LinqToJsonTest.cs"];
m7_107 [label=string, span="", file="LinqToJsonTest.cs"];
m8_16 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", span="41-41", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", file="Program.cs"];
m8_13 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Program.cs"];
m8_53 [label="Entry System.IO.File.CreateText(string)", span="0-0", cluster="System.IO.File.CreateText(string)", file="Program.cs"];
m8_80 [label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="139-139", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_81 [label="string json = System.IO.File.ReadAllText(''large.json'')", span="141-141", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_82 [label="JavaScriptSerializer s = new JavaScriptSerializer()", span="143-143", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_84 [label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="145-145", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_83 [label="s.MaxJsonLength = int.MaxValue", span="144-144", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_85 [label="Console.WriteLine(''Press any key to start deserialization'')", span="147-147", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_86 [label="Console.ReadKey()", span="148-148", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_87 [label="Console.WriteLine(''Deserializing...'')", span="149-149", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_88 [label="Stopwatch sw = new Stopwatch()", span="151-151", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_89 [label="sw.Start()", span="152-152", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_97 [label="sw.Stop()", span="163-163", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_98 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="165-165", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_90 [label="int i = 0", span="154-154", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_91 [label="i < 5", span="154-154", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_96 [label="i++", span="154-154", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_92 [label="json = System.IO.File.ReadAllText(''large.json'')", span="156-156", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_93 [label="s = new JavaScriptSerializer()", span="158-158", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_95 [label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="160-160", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_94 [label="s.MaxJsonLength = int.MaxValue", span="159-159", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_99 [label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="139-139", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m8_100 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="Program.cs"];
m8_31 [label="Entry Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="80-80", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_32 [label="var json = System.IO.File.ReadAllText(''large.json'')", span="82-82", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_33 [label="IList<PerformanceTests.RootObject> o = JsonConvert.DeserializeObject<IList<PerformanceTests.RootObject>>(json)", span="84-84", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_34 [label="Console.WriteLine(''Press any key to start serialize'')", span="86-86", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_44 [label="serializer.Serialize(file, o)", span="99-99", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_35 [label="Console.ReadKey()", span="87-87", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_36 [label="Console.WriteLine(''Serializing...'')", span="88-88", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_37 [label="Stopwatch sw = new Stopwatch()", span="90-90", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_38 [label="sw.Start()", span="91-91", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_46 [label="sw.Stop()", span="103-103", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_47 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="105-105", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_39 [label="int i = 0", span="93-93", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_40 [label="i < 10", span="93-93", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_45 [label="i++", span="93-93", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_41 [label="StreamWriter file = System.IO.File.CreateText(''largewrite.json'')", span="95-95", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_42 [label="JsonSerializer serializer = new JsonSerializer()", span="97-97", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_43 [label="serializer.Formatting = Formatting.Indented", span="98-98", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_48 [label="Exit Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="80-80", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m8_78 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="Program.cs"];
m8_49 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="Program.cs"];
m8_15 [label="Entry System.Console.ReadKey()", span="0-0", cluster="System.Console.ReadKey()", file="Program.cs"];
m8_0 [label="Entry Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_1 [label="Console.WriteLine(''Json.NET Test Console'')", span="42-42", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_2 [label="string version = FileVersionInfo.GetVersionInfo(typeof(JsonConvert).Assembly.Location).FileVersion", span="44-44", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", color=green, community=0, file="Program.cs"];
m8_3 [label="Console.WriteLine(''Json.NET Version: '' + version)", span="45-45", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_4 [label="Console.ReadKey()", span="46-46", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_5 [label="Console.WriteLine(''Doing stuff...'')", span="48-48", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_6 [label="DiscriminatedUnionConverterTests t = new DiscriminatedUnionConverterTests()", span="58-58", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_7 [label="t.SerializePerformance()", span="59-59", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_8 [label="t.DeserializePerformance()", span="60-60", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs", color=green, community=0];
m8_9 [label="Console.WriteLine()", span="62-62", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_10 [label="Console.WriteLine(''Press any key to exit'')", span="63-63", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_11 [label="Console.ReadKey()", span="64-64", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_12 [label="Exit Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m8_57 [label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="108-108", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_58 [label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="110-110", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_59 [label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="111-111", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_60 [label="JsonSerializer serializer = new JsonSerializer()", span="113-113", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_61 [label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="114-114", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_62 [label="Console.WriteLine(''Press any key to start deserialization'')", span="117-117", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_63 [label="Console.ReadKey()", span="118-118", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_64 [label="Console.WriteLine(''Deserializing...'')", span="119-119", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_65 [label="Stopwatch sw = new Stopwatch()", span="121-121", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_66 [label="sw.Start()", span="122-122", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_74 [label="sw.Stop()", span="134-134", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_75 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="136-136", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_67 [label="int i = 0", span="124-124", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_68 [label="i < 5", span="124-124", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_73 [label="i++", span="124-124", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_69 [label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="126-126", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_70 [label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="127-127", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_71 [label="JsonSerializer serializer = new JsonSerializer()", span="129-129", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_72 [label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="130-130", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_76 [label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="108-108", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m8_50 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="Program.cs"];
m8_77 [label="Entry System.IO.File.OpenText(string)", span="0-0", cluster="System.IO.File.OpenText(string)", file="Program.cs"];
m8_55 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="Program.cs"];
m8_51 [label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="Program.cs"];
m8_25 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="219-219", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="Program.cs"];
m8_26 [label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="74-74", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m8_27 [label="PerformanceTests t = new PerformanceTests()", span="76-76", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m8_28 [label="t.DeserializeLargeJson()", span="77-77", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m8_29 [label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="74-74", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m8_24 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", span="66-66", cluster="Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", file="Program.cs"];
m8_19 [label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="67-67", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m8_52 [label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0", cluster="System.Diagnostics.Stopwatch.Start()", file="Program.cs"];
m8_17 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="Program.cs"];
m8_14 [label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0", cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="Program.cs"];
m8_56 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="Program.cs"];
m8_79 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="Program.cs"];
m8_18 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="Program.cs"];
m8_101 [label="Entry Unk.>", span="", cluster="Unk.>", file="Program.cs"];
m8_30 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="182-182", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="Program.cs"];
m8_20 [label="PerformanceTests t = new PerformanceTests()", span="69-69", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m8_21 [label="t.Iterations = 50000", span="70-70", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m8_22 [label="t.Deserialize()", span="71-71", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m8_23 [label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="67-67", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m8_54 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="Program.cs"];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_235  [key=2, style=dotted];
m0_121 -> m0_282  [key=0, style=solid];
m0_121 -> m0_122  [key=0, style=solid];
m0_282 -> m0_283  [key=0, style=solid];
m0_283 -> m0_121  [key=0, style=bold, color=blue];
m0_283 -> m0_284  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_222 -> m0_224  [key=0, style=solid];
m0_222 -> m0_234  [key=2, style=dotted];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_167  [key=2, style=dotted];
m0_277 -> m0_155  [key=2, style=dotted];
m0_277 -> m0_156  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_166 -> m0_169  [key=0, style=solid];
m0_166 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_166 -> m0_211  [key=0, style=solid];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_111  [key=2, style=dotted];
m0_169 -> m0_174  [key=2, style=dotted];
m0_169 -> m0_220  [key=2, style=dotted];
m0_170 -> m0_173  [key=0, style=solid];
m0_170 -> m0_211  [key=0, style=solid];
m0_172 -> m0_23  [key=2, style=dotted];
m0_172 -> m0_153  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_154  [key=2, style=dotted];
m0_172 -> m0_221  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_174  [key=0, style=solid];
m0_173 -> m0_166  [key=0, style=bold, color=blue];
m0_173 -> m0_211  [key=0, style=solid];
m0_131 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m0_131 -> m0_132  [key=0, style=solid];
m0_73 -> m0_289  [key=0, style=solid];
m0_73 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_73 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_73 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_73 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_73 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_73 -> m0_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_73 -> m0_93  [key=0, style=solid];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_291  [key=0, style=solid];
m0_289 -> m0_96  [key=2, style=dotted];
m0_290 -> m0_300  [key=0, style=solid];
m0_290 -> m0_157  [key=2, style=dotted];
m0_290 -> m0_292  [key=0, style=solid];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_293  [key=0, style=solid];
m0_291 -> m0_124  [key=2, style=dotted];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_229  [key=2, style=dotted];
m0_293 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_293 -> m0_297  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m0_293 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_293 -> m0_301  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_293 -> m0_302  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_293 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_293 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_293 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m0_293 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m0_293 -> m0_210  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse"];
m0_293 -> m0_208  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse"];
m0_293 -> m0_19  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse"];
m0_293 -> m0_309  [key=3, color=darkorchid, style=bold, label="Parameter variable int value"];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_296  [key=0, style=solid];
m0_294 -> m0_309  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_294 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_294 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_294 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_294 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_23  [key=2, style=dotted];
m0_295 -> m0_167  [key=2, style=dotted];
m0_295 -> m0_155  [key=2, style=dotted];
m0_295 -> m0_156  [key=2, style=dotted];
m0_295 -> m0_297  [key=0, style=solid];
m0_296 -> m0_297  [key=0, style=solid];
m0_296 -> m0_13  [key=2, style=dotted];
m0_296 -> m0_301  [key=2, style=dotted];
m0_296 -> m0_325  [key=0, style=solid];
m0_297 -> m0_298  [key=0, style=solid];
m0_297 -> m0_299  [key=0, style=solid];
m0_297 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label=isNegative];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_23  [key=2, style=dotted];
m0_298 -> m0_167  [key=2, style=dotted];
m0_298 -> m0_155  [key=2, style=dotted];
m0_298 -> m0_156  [key=2, style=dotted];
m0_298 -> m0_303  [key=0, style=solid];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_235  [key=2, style=dotted];
m0_299 -> m0_301  [key=0, style=solid];
m0_292 -> m0_300  [key=0, style=solid];
m0_292 -> m0_215  [key=0, style=bold, color=blue];
m0_300 -> m0_73  [key=0, style=bold, color=blue];
m0_300 -> m0_325  [key=0, style=solid];
m0_130 -> m0_132  [key=0, style=solid];
m0_130 -> m0_131  [key=0, style=solid];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_134  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryConvert"];
m0_132 -> m0_50  [key=3, color=darkorchid, style=bold, label="method methodReturn bool TryConvert"];
m0_132 -> m0_235  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_132 -> m0_236  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_135  [key=0, style=solid];
m0_133 -> m0_127  [key=2, style=dotted];
m0_133 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m0_134 -> m0_139  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_150  [key=0, style=solid];
m0_134 -> m0_152  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_227  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m0_135 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=message];
m0_135 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=message];
m0_136 -> m0_139  [key=0, style=solid];
m0_136 -> m0_138  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m0_137 -> m0_153  [key=2, style=dotted];
m0_137 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label=message];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=message];
m0_138 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=message];
m0_138 -> m0_23  [key=2, style=dotted];
m0_138 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=message];
m0_138 -> m0_153  [key=2, style=dotted];
m0_138 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=message];
m0_139 -> m0_132  [key=0, style=bold, color=blue];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_142  [key=0, style=solid];
m0_139 -> m0_146  [key=0, style=solid];
m0_139 -> m0_120  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_71 -> m0_71  [key=3, color=darkorchid, style=bold, label="method methodReturn BigInteger ToBigInteger"];
m0_71 -> m0_127  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_278  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_84 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_84 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_84 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_84 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m0_84 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m0_84 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_85 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_85 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_85 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_85 -> m0_93  [key=0, style=solid];
m0_85 -> m0_95  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_88  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_87 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_87 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_87 -> m0_93  [key=0, style=solid];
m0_87 -> m0_95  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_90  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_89 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_89 -> m0_93  [key=0, style=solid];
m0_89 -> m0_95  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_92  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_91 -> m0_93  [key=0, style=solid];
m0_91 -> m0_95  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_71  [key=0, style=bold, color=blue];
m0_94 -> m0_95  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_94  [key=0, style=solid];
m0_92 -> m0_96  [key=2, style=dotted];
m0_92 -> m0_97  [key=2, style=dotted];
m0_92 -> m0_98  [key=2, style=dotted];
m0_95 -> m0_84  [key=0, style=bold, color=blue];
m0_70 -> m0_12  [key=0, style=bold, color=blue];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_224  [key=2, style=dotted];
m0_189 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=toConverter];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [key=0, style=solid];
m0_223 -> m0_228  [key=0, style=solid];
m0_216 -> m0_217  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m0_99 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_99 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m0_99 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_99 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m0_99 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_99 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m0_99 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=BigInteger];
m0_99 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_99 -> m0_99  [key=3, color=darkorchid, style=bold, label="method methodReturn object FromBigInteger"];
m0_99 -> m0_127  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_99 -> m0_96  [key=3, color=darkorchid, style=bold, label="Parameter variable bool isEnum"];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_102  [key=0, style=solid];
m0_100 -> m0_109  [key=0, style=solid];
m0_101 -> m0_111  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_84  [key=2, style=dotted];
m0_101 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [key=0, style=solid];
m0_102 -> m0_106  [key=0, style=solid];
m0_103 -> m0_111  [key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_105  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_106  [key=0, style=solid];
m0_104 -> m0_110  [key=2, style=dotted];
m0_105 -> m0_111  [key=0, style=solid];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_110  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_108  [key=0, style=solid];
m0_107 -> m0_111  [key=0, style=solid];
m0_107 -> m0_109  [key=0, style=solid];
m0_108 -> m0_111  [key=0, style=solid];
m0_108 -> m0_112  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_113  [key=2, style=dotted];
m0_110 -> m0_98  [key=2, style=dotted];
m0_110 -> m0_284  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_96  [key=0, style=bold, color=blue];
m0_111 -> m0_99  [key=0, style=bold, color=blue];
m0_258 -> m0_524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_258 -> m0_520  [key=0, style=solid];
m0_258 -> m0_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_523 -> m0_524  [key=0, style=solid];
m0_523 -> m0_525  [key=0, style=solid];
m0_524 -> m0_525  [key=0, style=solid];
m0_524 -> m0_528  [key=2, style=dotted];
m0_524 -> m0_155  [key=2, style=dotted];
m0_524 -> m0_156  [key=2, style=dotted];
m0_522 -> m0_523  [key=0, style=solid];
m0_522 -> m0_524  [key=1, style=dashed, color=darkseagreen4, label=shouldSerialize];
m0_522 -> m0_527  [key=2, style=dotted];
m0_522 -> m0_525  [key=1, style=dashed, color=darkseagreen4, label=shouldSerialize];
m0_525 -> m0_526  [key=0, style=solid];
m0_520 -> m0_522  [key=0, style=solid];
m0_520 -> m0_521  [key=0, style=solid];
m0_521 -> m0_526  [key=0, style=solid];
m0_526 -> m0_258  [key=0, style=bold, color=blue];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_70  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=2, style=dotted];
m0_46 -> m0_44  [key=0, style=bold, color=blue];
m0_46 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=converter];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_49  [key=0, style=solid];
m0_46 -> m0_72  [key=2, style=dotted];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_225  [key=0, style=solid];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_213  [key=0, style=solid];
m0_217 -> m0_231  [key=2, style=dotted];
m0_217 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
m0_188 -> m0_211  [key=0, style=solid];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_41  [key=2, style=dotted];
m0_220 -> m0_221  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_99  [key=2, style=dotted];
m0_224 -> m0_278  [key=0, style=solid];
m0_224 -> m0_144  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_224 -> m0_127  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_224 -> m0_213  [key=0, style=solid];
m0_224 -> m0_224  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_278 -> m0_279  [key=0, style=solid];
m0_278 -> m0_280  [key=2, style=dotted];
m0_278 -> m0_39  [key=2, style=dotted];
m0_279 -> m0_224  [key=0, style=bold, color=blue];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_168  [key=2, style=dotted];
m0_301 -> m0_302  [key=0, style=solid];
m0_301 -> m0_301  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_301 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_301 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_302  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m0_303 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label=end];
m0_303 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m0_303 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m0_303 -> m0_324  [key=1, style=dashed, color=darkseagreen4, label=underlyingList];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_304 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_304 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_304 -> m0_293  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m0_304 -> m0_196  [key=2, style=dotted];
m0_306 -> m0_307  [key=0, style=solid];
m0_306 -> m0_309  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_306 -> m0_326  [key=2, style=dotted];
m0_306 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label=hasWrittenMetadataObject];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_316  [key=0, style=solid];
m0_313 -> m0_310  [key=0, style=solid];
m0_313 -> m0_157  [key=2, style=dotted];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label=newValue];
m0_309 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_318  [key=0, style=solid];
m0_310 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_310 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_310 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_310 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_310 -> m0_320  [key=0, style=solid];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_323  [key=0, style=solid];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_323 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_323 -> m0_235  [key=2, style=dotted];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_324  [key=0, style=solid];
m0_320 -> m0_328  [key=2, style=dotted];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_320  [key=0, style=solid];
m0_305 -> m0_229  [key=2, style=dotted];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_317  [key=0, style=solid];
m0_312 -> m0_314  [key=0, style=solid];
m0_312 -> m0_96  [key=2, style=dotted];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_311 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_311 -> m0_316  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_311 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_311 -> m0_11  [key=2, style=dotted];
m0_311 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m0_311 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m0_319 -> m0_305  [key=0, style=solid];
m0_319 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_319 -> m0_325  [key=0, style=solid];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_309  [key=0, style=solid];
m0_307 -> m0_327  [key=2, style=dotted];
m0_308 -> m0_325  [key=0, style=solid];
m0_308 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m0_308 -> m0_309  [key=0, style=solid];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_318 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_318 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label="out int"];
m0_318 -> m0_310  [key=0, style=solid];
m0_318 -> m0_234  [key=2, style=dotted];
m0_316 -> m0_312  [key=0, style=solid];
m0_316 -> m0_316  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_316 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_316 -> m0_317  [key=0, style=solid];
m0_317 -> m0_325  [key=0, style=solid];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_319  [key=0, style=solid];
m0_317 -> m0_233  [key=2, style=dotted];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_316  [key=0, style=solid];
m0_314 -> m0_310  [key=0, style=solid];
m0_314 -> m0_124  [key=2, style=dotted];
m0_315 -> m0_325  [key=0, style=solid];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_310  [key=0, style=solid];
m0_315 -> m0_12  [key=2, style=dotted];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_197  [key=2, style=dotted];
m0_322 -> m0_325  [key=0, style=solid];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_41  [key=2, style=dotted];
m0_325 -> m0_293  [key=0, style=bold, color=blue];
m0_325 -> m0_75  [key=0, style=bold, color=blue];
m0_122 -> m0_126  [key=0, style=solid];
m0_122 -> m0_130  [key=2, style=dotted];
m0_122 -> m0_98  [key=2, style=dotted];
m0_155 -> m0_211  [key=0, style=solid];
m0_286 -> m0_287  [key=0, style=solid];
m0_287 -> m0_288  [key=0, style=solid];
m0_288 -> m0_286  [key=0, style=bold, color=blue];
m0_288 -> m0_289  [key=0, style=solid];
m0_219 -> m0_220  [key=0, style=solid];
m0_219 -> m0_224  [key=0, style=solid];
m0_219 -> m0_12  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_10 -> m0_11  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_74  [key=0, style=solid];
m0_227 -> m0_208  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_227 -> m0_209  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_227 -> m0_227  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_197  [key=2, style=dotted];
m0_227 -> m0_135  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_227 -> m0_179  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_227 -> m0_241  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal"];
m0_65 -> m0_70  [key=0, style=solid];
m0_65 -> m0_80  [key=2, style=dotted];
m0_362 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_362 -> m0_347  [key=0, style=solid];
m0_197 -> m0_203  [key=0, style=solid];
m0_197 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_197 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_197 -> m0_198  [key=0, style=solid];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_205  [key=0, style=solid];
m0_203 -> m0_206  [key=0, style=solid];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_153  [key=2, style=dotted];
m0_204 -> m0_155  [key=2, style=dotted];
m0_204 -> m0_156  [key=2, style=dotted];
m0_204 -> m0_231  [key=2, style=dotted];
m0_204 -> m0_230  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_207  [key=2, style=dotted];
m0_205 -> m0_211  [key=0, style=solid];
m0_206 -> m0_197  [key=0, style=bold, color=blue];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_209  [key=0, style=solid];
m0_206 -> m0_232  [key=2, style=dotted];
m0_206 -> m0_233  [key=2, style=dotted];
m0_206 -> m0_234  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=0, style=solid];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_235 -> m0_238  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_235 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_235 -> m0_241  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_235 -> m0_243  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_235 -> m0_235  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
m0_235 -> m0_61  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
m0_235 -> m0_230  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertOrCast"];
m0_338 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m0_338 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m0_338 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_338 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_338 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_338 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_338 -> m0_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_338 -> m0_361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_338 -> m0_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_338 -> m0_347  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m0_338 -> m0_349  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m0_338 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m0_338 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_11  [key=2, style=dotted];
m0_352 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m0_352 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m0_352 -> m0_338  [key=0, style=solid];
m0_352 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_353 -> m0_354  [key=0, style=solid];
m0_353 -> m0_355  [key=0, style=solid];
m0_353 -> m0_96  [key=2, style=dotted];
m0_353 -> m0_357  [key=0, style=solid];
m0_354 -> m0_357  [key=0, style=solid];
m0_354 -> m0_362  [key=0, style=solid];
m0_354 -> m0_157  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_354 -> m0_356  [key=0, style=solid];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_357  [key=0, style=solid];
m0_355 -> m0_362  [key=0, style=solid];
m0_355 -> m0_124  [key=2, style=dotted];
m0_355 -> m0_358  [key=0, style=solid];
m0_356 -> m0_357  [key=0, style=solid];
m0_356 -> m0_362  [key=0, style=solid];
m0_356 -> m0_12  [key=2, style=dotted];
m0_356 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_356 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_360  [key=0, style=solid];
m0_358 -> m0_233  [key=2, style=dotted];
m0_358 -> m0_326  [key=0, style=bold, color=blue];
m0_359 -> m0_362  [key=0, style=solid];
m0_359 -> m0_234  [key=2, style=dotted];
m0_359 -> m0_360  [key=0, style=solid, color=red];
m0_361 -> m0_362  [key=0, style=solid];
m0_361 -> m0_338  [key=2, style=dotted];
m0_361 -> m0_359  [key=0, style=bold, color=blue];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_351 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_351 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_351 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_351 -> m0_366  [key=2, style=dotted];
m0_351 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_357 -> m0_358  [key=0, style=solid];
m0_346 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_346 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_346 -> m0_347  [key=0, style=solid];
m0_346 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_360 -> m0_364  [key=0, style=solid];
m0_360 -> m0_361  [key=0, style=solid, color=red];
m0_360 -> m0_362  [key=2, style=dotted, color=red];
m0_340 -> m0_361  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m0_340 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m0_340 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m0_340 -> m0_349  [key=1, style=dashed, color=darkseagreen4, label=newIndices];
m0_340 -> m0_342  [key=0, style=solid];
m0_350 -> m0_361  [key=0, style=solid];
m0_350 -> m0_351  [key=0, style=solid];
m0_350 -> m0_358  [key=0, style=solid];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_339 -> m0_347  [key=1, style=dashed, color=darkseagreen4, label=dimension];
m0_339 -> m0_348  [key=1, style=dashed, color=darkseagreen4, label=dimension];
m0_343 -> m0_344  [key=0, style=solid];
m0_343 -> m0_351  [key=0, style=solid];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_327  [key=2, style=dotted];
m0_345 -> m0_350  [key=0, style=solid];
m0_347 -> m0_348  [key=0, style=solid];
m0_347 -> m0_363  [key=0, style=solid];
m0_347 -> m0_365  [key=2, style=dotted];
m0_347 -> m0_349  [key=0, style=solid];
m0_349 -> m0_350  [key=0, style=solid];
m0_349 -> m0_345  [key=0, style=solid];
m0_349 -> m0_349  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_349 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_363 -> m0_364  [key=0, style=solid];
m0_363 -> m0_328  [key=2, style=dotted];
m0_348 -> m0_349  [key=0, style=solid];
m0_348 -> m0_358  [key=0, style=solid];
m0_341 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_344  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_341 -> m0_358  [key=0, style=solid];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_345  [key=0, style=solid];
m0_342 -> m0_351  [key=1, style=dashed, color=darkseagreen4, label=newValue];
m0_344 -> m0_342  [key=0, style=solid];
m0_344 -> m0_344  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_346  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_344 -> m0_349  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_344 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_364 -> m0_338  [key=0, style=bold, color=blue];
m0_364 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_364 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_364 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_156  [key=0, style=solid];
m0_153 -> m0_215  [key=2, style=dotted];
m0_98 -> m0_109  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_112  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_268 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_268 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_268 -> m0_274  [key=0, style=solid];
m0_268 -> m0_275  [key=2, style=dotted];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_166  [key=2, style=dotted];
m0_269 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label=reference];
m0_269 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label=reference];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_272  [key=0, style=solid];
m0_270 -> m0_274  [key=0, style=solid];
m0_270 -> m0_275  [key=2, style=dotted];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_167  [key=2, style=dotted];
m0_271 -> m0_155  [key=2, style=dotted];
m0_271 -> m0_156  [key=2, style=dotted];
m0_271 -> m0_273  [key=0, style=solid];
m0_273 -> m0_274  [key=0, style=solid];
m0_273 -> m0_168  [key=2, style=dotted];
m0_273 -> m0_259  [key=2, style=dotted];
m0_273 -> m0_276  [key=2, style=dotted];
m0_273 -> m0_277  [key=2, style=dotted];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_39  [key=2, style=dotted];
m0_272 -> m0_274  [key=0, style=solid];
m0_272 -> m0_275  [key=2, style=dotted];
m0_274 -> m0_268  [key=0, style=bold, color=blue];
m0_274 -> m0_231  [key=0, style=bold, color=blue];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPrimitiveContract"];
m0_24 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_24 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_24 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_24 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_24 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_230 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_230 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_230 -> m0_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_230 -> m0_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_230 -> m0_261  [key=0, style=solid];
m0_230 -> m0_246  [key=0, style=solid];
m0_230 -> m0_247  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_230 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_230 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_230 -> m0_250  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_230 -> m0_252  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_230 -> m0_253  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_230 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_230 -> m0_61  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureTypeAssignable"];
m0_230 -> m0_231  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_230 -> m0_235  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_230 -> m0_144  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type initialType"];
m0_230 -> m0_127  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_230 -> m0_230  [key=3, color=darkorchid, style=bold, label="method methodReturn object EnsureTypeAssignable"];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_84  [key=2, style=dotted];
m0_262 -> m0_110  [key=2, style=dotted];
m0_262 -> m0_274  [key=0, style=solid];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_268  [key=2, style=dotted];
m0_264 -> m0_274  [key=0, style=solid];
m0_264 -> m0_275  [key=2, style=dotted];
m0_265 -> m0_36  [key=2, style=dotted];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_267  [key=0, style=solid];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_38  [key=2, style=dotted];
m0_266 -> m0_274  [key=0, style=solid];
m0_266 -> m0_275  [key=2, style=dotted];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_37  [key=2, style=dotted];
m0_261 -> m0_263  [key=0, style=solid];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_265  [key=0, style=solid];
m0_267 -> m0_230  [key=0, style=bold, color=blue];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_269  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_127  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_32 -> m0_41  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=2, style=dotted];
m0_34 -> m0_32  [key=0, style=bold, color=blue];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_40  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_42 -> m0_45  [key=0, style=solid];
m0_43 -> m0_40  [key=0, style=bold, color=blue];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_71  [key=2, style=dotted];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_327 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_327 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_327 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_327 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="out long"];
m0_83 -> m0_93  [key=0, style=solid];
m0_83 -> m0_95  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_177  [key=0, style=solid];
m0_80 -> m0_401  [key=0, style=solid];
m0_80 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.IDynamicMetaObjectProvider"];
m0_80 -> m0_403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_415  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_404  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m0_80 -> m0_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m0_80 -> m0_412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_419  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.IDynamicMetaObjectProvider"];
m0_80 -> m0_421  [key=1, style=dashed, color=darkseagreen4, label="System.Dynamic.IDynamicMetaObjectProvider"];
m0_80 -> m0_424  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDynamicContract"];
m0_80 -> m0_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_82  [key=0, style=solid];
m0_401 -> m0_402  [key=0, style=solid];
m0_401 -> m0_196  [key=2, style=dotted];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_229  [key=2, style=dotted];
m0_403 -> m0_404  [key=0, style=solid];
m0_403 -> m0_230  [key=2, style=dotted];
m0_411 -> m0_412  [key=0, style=solid];
m0_411 -> m0_406  [key=0, style=solid];
m0_411 -> m0_231  [key=2, style=dotted];
m0_411 -> m0_413  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
m0_413 -> m0_414  [key=0, style=solid];
m0_413 -> m0_418  [key=0, style=solid];
m0_413 -> m0_12  [key=2, style=dotted];
m0_415 -> m0_416  [key=0, style=solid];
m0_415 -> m0_417  [key=0, style=solid];
m0_415 -> m0_233  [key=2, style=dotted];
m0_416 -> m0_418  [key=0, style=solid];
m0_416 -> m0_234  [key=2, style=dotted];
m0_422 -> m0_423  [key=0, style=solid];
m0_422 -> m0_11  [key=2, style=dotted];
m0_422 -> m0_426  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m0_423 -> m0_424  [key=0, style=solid];
m0_423 -> m0_427  [key=0, style=solid];
m0_423 -> m0_419  [key=0, style=solid];
m0_423 -> m0_124  [key=2, style=dotted];
m0_426 -> m0_427  [key=0, style=solid];
m0_426 -> m0_419  [key=0, style=solid];
m0_426 -> m0_12  [key=2, style=dotted];
m0_428 -> m0_429  [key=0, style=solid];
m0_428 -> m0_430  [key=0, style=solid];
m0_428 -> m0_233  [key=2, style=dotted];
m0_429 -> m0_419  [key=0, style=solid];
m0_429 -> m0_234  [key=2, style=dotted];
m0_432 -> m0_433  [key=0, style=solid];
m0_432 -> m0_235  [key=2, style=dotted];
m0_433 -> m0_434  [key=0, style=solid];
m0_433 -> m0_197  [key=2, style=dotted];
m0_404 -> m0_416  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m0_404 -> m0_429  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m0_404 -> m0_405  [key=0, style=solid];
m0_407 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_407 -> m0_413  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_407 -> m0_415  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_412  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_410 -> m0_411  [key=0, style=solid];
m0_412 -> m0_413  [key=0, style=solid];
m0_412 -> m0_232  [key=2, style=dotted];
m0_406 -> m0_407  [key=0, style=solid];
m0_406 -> m0_419  [key=0, style=solid];
m0_414 -> m0_415  [key=0, style=solid];
m0_418 -> m0_406  [key=0, style=solid];
m0_418 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_417 -> m0_434  [key=0, style=solid];
m0_421 -> m0_422  [key=0, style=solid];
m0_421 -> m0_423  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
m0_421 -> m0_426  [key=1, style=dashed, color=darkseagreen4, label=memberValue];
m0_421 -> m0_419  [key=0, style=solid];
m0_421 -> m0_436  [key=2, style=dotted];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_437  [key=2, style=dotted];
m0_427 -> m0_428  [key=0, style=solid];
m0_419 -> m0_428  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m0_419 -> m0_421  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m0_419 -> m0_424  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m0_419 -> m0_420  [key=0, style=solid];
m0_419 -> m0_431  [key=0, style=solid];
m0_419 -> m0_435  [key=2, style=dotted];
m0_425 -> m0_426  [key=0, style=solid];
m0_425 -> m0_400  [key=2, style=dotted];
m0_430 -> m0_434  [key=0, style=solid];
m0_431 -> m0_432  [key=0, style=solid];
m0_431 -> m0_41  [key=2, style=dotted];
m0_405 -> m0_407  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_408 -> m0_418  [key=0, style=solid];
m0_408 -> m0_409  [key=0, style=solid];
m0_409 -> m0_410  [key=0, style=solid];
m0_420 -> m0_421  [key=0, style=solid];
m0_434 -> m0_80  [key=0, style=bold, color=blue];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_183  [key=0, style=solid];
m0_129 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m0_129 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m0_129 -> m0_130  [key=0, style=solid];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_281  [key=2, style=dotted];
m0_275 -> m0_277  [key=1, style=dashed, color=darkseagreen4, label=typeName];
m0_275 -> m0_279  [key=1, style=dashed, color=darkseagreen4, label=typeName];
m0_259 -> m0_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_259 -> m0_529  [key=0, style=solid];
m0_259 -> m0_531  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_534  [key=0, style=solid];
m0_533 -> m0_534  [key=0, style=solid];
m0_533 -> m0_528  [key=2, style=dotted];
m0_533 -> m0_155  [key=2, style=dotted];
m0_533 -> m0_156  [key=2, style=dotted];
m0_531 -> m0_532  [key=0, style=solid];
m0_531 -> m0_533  [key=1, style=dashed, color=darkseagreen4, label=isSpecified];
m0_531 -> m0_527  [key=2, style=dotted];
m0_531 -> m0_534  [key=1, style=dashed, color=darkseagreen4, label=isSpecified];
m0_534 -> m0_535  [key=0, style=solid];
m0_529 -> m0_531  [key=0, style=solid];
m0_529 -> m0_530  [key=0, style=solid];
m0_530 -> m0_535  [key=0, style=solid];
m0_535 -> m0_259  [key=0, style=bold, color=blue];
m0_257 -> m0_231  [key=0, style=bold, color=blue];
m0_36 -> m0_439  [key=1, style=dashed, color=green, label="Newtonsoft.Json.TypeNameHandling"];
m0_36 -> m0_438  [key=0, style=solid];
m0_36 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_36 -> m0_443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_36 -> m0_445  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m0_36 -> m0_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_36 -> m0_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_127  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m0_439 -> m0_440  [key=0, style=solid, color=green];
m0_439 -> m0_441  [key=0, style=solid, color=green];
m0_439 -> m0_286  [key=2, style=dotted, color=green];
m0_438 -> m0_439  [key=0, style=solid, color=green];
m0_438 -> m0_441  [key=1, style=dashed, color=darkseagreen4, label=resolvedTypeNameHandling];
m0_440 -> m0_452  [key=0, style=solid];
m0_441 -> m0_442  [key=0, style=solid];
m0_441 -> m0_451  [key=0, style=solid];
m0_441 -> m0_286  [key=2, style=dotted];
m0_448 -> m0_449  [key=0, style=solid];
m0_448 -> m0_451  [key=0, style=solid];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_451  [key=0, style=solid];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_445  [key=0, style=solid];
m0_443 -> m0_444  [key=0, style=solid];
m0_443 -> m0_451  [key=0, style=solid];
m0_445 -> m0_448  [key=0, style=solid];
m0_445 -> m0_446  [key=0, style=solid];
m0_446 -> m0_447  [key=0, style=solid];
m0_446 -> m0_451  [key=0, style=solid];
m0_451 -> m0_452  [key=0, style=solid];
m0_450 -> m0_452  [key=0, style=solid];
m0_444 -> m0_452  [key=0, style=solid];
m0_447 -> m0_452  [key=0, style=solid];
m0_452 -> m0_36  [key=0, style=bold, color=blue];
m0_76 -> m0_329  [key=0, style=solid];
m0_76 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label="System.Array"];
m0_76 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_76 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_76 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_76 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_78  [key=0, style=solid];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_196  [key=2, style=dotted];
m0_329 -> m0_358  [key=0, style=solid];
m0_330 -> m0_331  [key=0, style=solid];
m0_330 -> m0_229  [key=2, style=dotted];
m0_330 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label=isNegative];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_326  [key=2, style=dotted];
m0_331 -> m0_333  [key=1, style=dashed, color=darkseagreen4, label=hasWrittenMetadataObject];
m0_331 -> m0_336  [key=0, style=solid];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_338  [key=2, style=dotted];
m0_332 -> m0_334  [key=0, style=solid];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_235  [key=2, style=dotted];
m0_335 -> m0_335  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_197  [key=2, style=dotted];
m0_336 -> m0_338  [key=1, style=dashed, color=darkseagreen4, label=end];
m0_336 -> m0_345  [key=1, style=dashed, color=darkseagreen4, label=end];
m0_333 -> m0_335  [key=0, style=solid];
m0_333 -> m0_334  [key=0, style=solid];
m0_333 -> m0_358  [key=0, style=solid];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_41  [key=2, style=dotted];
m0_334 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_334 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_334 -> m0_337  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_337 -> m0_76  [key=0, style=bold, color=blue];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_337 -> m0_344  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_337 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_337 -> m0_326  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m0_35 -> m0_24  [key=0, style=bold, color=blue];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_254  [key=0, style=solid];
m0_236 -> m0_258  [key=2, style=dotted];
m0_236 -> m0_259  [key=2, style=dotted];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_239  [key=0, style=solid];
m0_238 -> m0_244  [key=0, style=solid];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_10  [key=2, style=dotted];
m0_239 -> m0_240  [key=0, style=solid];
m0_239 -> m0_241  [key=0, style=solid];
m0_239 -> m0_229  [key=2, style=dotted];
m0_239 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m0_239 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m0_239 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m0_239 -> m0_260  [key=2, style=dotted];
m0_239 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m0_241 -> m0_242  [key=0, style=solid];
m0_241 -> m0_243  [key=0, style=solid];
m0_241 -> m0_132  [key=2, style=dotted];
m0_241 -> m0_254  [key=0, style=solid];
m0_241 -> m0_113  [key=2, style=dotted];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_245  [key=2, style=dotted];
m0_243 -> m0_230  [key=2, style=dotted];
m0_243 -> m0_232  [key=2, style=dotted];
m0_240 -> m0_244  [key=0, style=solid];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_11  [key=2, style=dotted];
m0_240 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
m0_240 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
m0_242 -> m0_244  [key=0, style=solid];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_246  [key=0, style=solid];
m0_242 -> m0_96  [key=2, style=dotted];
m0_244 -> m0_235  [key=0, style=bold, color=blue];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_157  [key=2, style=dotted];
m0_202 -> m0_211  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_48 -> m0_50  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_48 -> m0_53  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_48 -> m0_70  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_51  [key=0, style=solid];
m0_49 -> m0_52  [key=0, style=solid];
m0_49 -> m0_57  [key=0, style=solid];
m0_49 -> m0_59  [key=0, style=solid];
m0_49 -> m0_61  [key=0, style=solid];
m0_49 -> m0_64  [key=0, style=solid];
m0_49 -> m0_66  [key=0, style=solid];
m0_49 -> m0_68  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_53  [key=2, style=dotted];
m0_51 -> m0_365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_51 -> m0_70  [key=0, style=solid];
m0_51 -> m0_74  [key=2, style=dotted];
m0_50 -> m0_52  [key=0, style=solid];
m0_50 -> m0_51  [key=0, style=solid];
m0_52 -> m0_48  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_284 -> m0_285  [key=0, style=solid];
m0_285 -> m0_110  [key=0, style=bold, color=blue];
m0_285 -> m0_286  [key=0, style=solid];
m0_228 -> m0_74  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_40  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_114 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_114 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_114 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_119  [key=0, style=solid];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_119  [key=0, style=solid];
m0_116 -> m0_121  [key=0, style=solid];
m0_116 -> m0_123  [key=0, style=solid];
m0_116 -> m0_125  [key=0, style=solid];
m0_116 -> m0_127  [key=2, style=dotted];
m0_116 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_116 -> m0_120  [key=2, style=dotted];
m0_116 -> m0_122  [key=2, style=dotted];
m0_120 -> m0_126  [key=0, style=solid];
m0_120 -> m0_128  [key=2, style=dotted];
m0_120 -> m0_97  [key=2, style=dotted];
m0_120 -> m0_129  [key=2, style=dotted];
m0_124 -> m0_126  [key=0, style=solid];
m0_124 -> m0_131  [key=2, style=dotted];
m0_124 -> m0_97  [key=2, style=dotted];
m0_124 -> m0_129  [key=2, style=dotted];
m0_124 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_124 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_124 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_124 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_124 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m0_124 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m0_124 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_124 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_124 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_124 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_119  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_113  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_131  [key=2, style=dotted];
m0_125 -> m0_127  [key=0, style=solid];
m0_118 -> m0_126  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_126 -> m0_114  [key=0, style=bold, color=blue];
m0_126 -> m0_151  [key=0, style=solid];
m0_365 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_34  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_31  [key=2, style=dotted];
m0_28 -> m0_37  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_38  [key=2, style=dotted];
m0_30 -> m0_27  [key=0, style=bold, color=blue];
m0_30 -> m0_6  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode"];
m0_30 -> m0_7  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode"];
m0_30 -> m0_15  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode"];
m0_30 -> m0_16  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode"];
m0_30 -> m0_2  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode"];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_39  [key=2, style=dotted];
m0_30 -> m0_167  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode"];
m0_30 -> m0_112  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode"];
m0_30 -> m0_3  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode"];
m0_30 -> m0_25  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Utilities.PrimitiveTypeCode TypeCode"];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_61  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<object, object> CreateCastConverter"];
m0_56 -> m0_63  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<object, object> CreateCastConverter"];
m0_56 -> m0_70  [key=0, style=solid];
m0_56 -> m0_76  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_65  [key=2, style=dotted];
m0_57 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_57 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_57 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
m0_57 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=0, style=solid];
m0_58 -> m0_70  [key=0, style=solid];
m0_58 -> m0_24  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_65  [key=2, style=dotted];
m0_59 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey"];
m0_59 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_62  [key=0, style=solid];
m0_60 -> m0_70  [key=0, style=solid];
m0_60 -> m0_77  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_66  [key=2, style=dotted];
m0_62 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=call];
m0_61 -> m0_64  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_63 -> m0_70  [key=0, style=solid];
m0_63 -> m0_78  [key=2, style=dotted];
m0_63 -> m0_79  [key=2, style=dotted];
m0_64 -> m0_56  [key=0, style=bold, color=blue];
m0_64 -> m0_65  [key=0, style=solid];
m0_74 -> m0_208  [key=0, style=solid];
m0_74 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_74 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_74 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_74 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_74 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_74 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_74 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_74 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_74 -> m0_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m0_74 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m0_74 -> m0_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_74 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [key=0, style=solid];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_196  [key=2, style=dotted];
m0_208 -> m0_211  [key=0, style=solid];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_229  [key=2, style=dotted];
m0_209 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_230  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_223  [key=0, style=solid];
m0_221 -> m0_233  [key=2, style=dotted];
m0_211 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_127  [key=0, style=bold, color=blue];
m0_214 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_214 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_214 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_218  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_232  [key=2, style=dotted];
m0_212 -> m0_214  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_212 -> m0_213  [key=0, style=solid];
m0_212 -> m0_224  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_281  [key=0, style=solid];
m0_215 -> m0_127  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_215 -> m0_134  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInteger"];
m0_215 -> m0_50  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsInteger"];
m0_231 -> m0_236  [key=0, style=solid];
m0_231 -> m0_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_231 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_231 -> m0_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_231 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m0_231 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_231 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_231 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_231 -> m0_239  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_231 -> m0_243  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_231 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContainerContract"];
m0_231 -> m0_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_231 -> m0_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_231 -> m0_261  [key=0, style=solid];
m0_231 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_265  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_266  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_268  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label=INullable];
m0_231 -> m0_127  [key=3, color=darkorchid, style=bold, label="Parameter variable INullable nullableValue"];
m0_231 -> m0_61  [key=3, color=darkorchid, style=bold, label="method methodReturn object ToValue"];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_248  [key=0, style=solid];
m0_246 -> m0_124  [key=2, style=dotted];
m0_246 -> m0_97  [key=2, style=dotted];
m0_246 -> m0_250  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_257  [key=1, style=dashed, color=darkseagreen4, label="out Newtonsoft.Json.Serialization.JsonContract"];
m0_254 -> m0_256  [key=0, style=solid];
m0_245 -> m0_257  [key=0, style=solid];
m0_247 -> m0_257  [key=0, style=solid];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_253  [key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_253  [key=0, style=solid];
m0_248 -> m0_250  [key=0, style=solid];
m0_248 -> m0_35  [key=2, style=dotted];
m0_252 -> m0_153  [key=2, style=dotted];
m0_252 -> m0_257  [key=0, style=solid];
m0_252 -> m0_154  [key=2, style=dotted];
m0_252 -> m0_256  [key=0, style=solid];
m0_252 -> m0_258  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_256  [key=0, style=solid];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_40  [key=2, style=dotted];
m0_250 -> m0_257  [key=2, style=dotted];
m0_250 -> m0_252  [key=1, style=dashed, color=darkseagreen4, label=castConverter];
m0_255 -> m0_257  [key=1, style=dashed, color=darkseagreen4, label="out object"];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_259  [key=2, style=dotted];
m0_255 -> m0_260  [key=2, style=dotted];
m0_255 -> m0_129  [key=2, style=dotted];
m0_253 -> m0_257  [key=0, style=solid];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_255  [key=0, style=solid];
m0_253 -> m0_229  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_253  [key=0, style=solid];
m0_251 -> m0_255  [key=0, style=solid];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_230  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_0 -> m0_4  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode"];
m0_0 -> m0_15  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_2 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_2 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_3 -> m0_5  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_34  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_12  [key=0, style=solid];
m0_9 -> m0_22  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_70  [key=0, style=solid];
m0_67 -> m0_81  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_70  [key=2, style=dotted];
m0_69 -> m0_67  [key=0, style=bold, color=blue];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_82  [key=2, style=dotted];
m0_69 -> m0_83  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_9  [key=0, style=solid];
m0_6 -> m0_21  [key=2, style=dotted];
m0_6 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=typeCode];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_11  [key=2, style=dotted];
m0_7 -> m0_12  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_4 -> m0_8  [key=0, style=solid];
m0_4 -> m0_9  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_4 -> m0_0  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode"];
m0_4 -> m0_1  [key=3, color=darkorchid, style=bold, label="Parameter variable bool isEnum"];
m0_4 -> m0_19  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode"];
m0_8 -> m0_2  [key=0, style=bold, color=blue];
m0_8 -> m0_20  [key=0, style=solid];
m0_11 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_11 -> m0_19  [key=0, style=solid];
m0_11 -> m0_20  [key=0, style=solid];
m0_11 -> m0_23  [key=2, style=dotted];
m0_11 -> m0_0  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_21 -> m0_10  [key=2, style=dotted];
m0_19 -> m0_21  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_22  [key=0, style=solid];
m0_20 -> m0_4  [key=0, style=bold, color=blue];
m0_22 -> m0_11  [key=0, style=bold, color=blue];
m0_12 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_12 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_42  [key=0, style=solid];
m0_12 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_12 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_12 -> m0_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_12 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_18  [key=0, style=solid];
m0_12 -> m0_24  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_73  [key=2, style=dotted];
m0_55 -> m0_70  [key=0, style=solid];
m0_55 -> m0_75  [key=2, style=dotted];
m0_55 -> m0_53  [key=0, style=bold, color=blue];
m0_53 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=arrayContract];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_48  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey other"];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_145  [key=0, style=solid];
m0_143 -> m0_25  [key=2, style=dotted];
m0_143 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_143 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_155  [key=2, style=dotted];
m0_144 -> m0_156  [key=2, style=dotted];
m0_144 -> m0_97  [key=2, style=dotted];
m0_144 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_144 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_144 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_144 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=initialType];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_149  [key=0, style=solid];
m0_147 -> m0_211  [key=0, style=solid];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_155  [key=2, style=dotted];
m0_148 -> m0_156  [key=2, style=dotted];
m0_148 -> m0_158  [key=0, style=solid];
m0_148 -> m0_97  [key=2, style=dotted];
m0_148 -> m0_32  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_153  [key=0, style=solid];
m0_127 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m0_127 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=referenceLoopHandling];
m0_127 -> m0_140  [key=0, style=solid];
m0_127 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_146  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_127 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_127 -> m0_114  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetType"];
m0_127 -> m0_115  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_127 -> m0_127  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_127 -> m0_36  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_127 -> m0_71  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_127 -> m0_99  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_127 -> m0_230  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_127 -> m0_147  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal"];
m0_127 -> m0_19  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal"];
m0_127 -> m0_208  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal"];
m0_127 -> m0_210  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal"];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_142  [key=0, style=solid];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_144  [key=0, style=solid];
m0_142 -> m0_24  [key=2, style=dotted];
m0_146 -> m0_144  [key=3, color=darkorchid, style=bold, label="Property variable System.Type InitialType"];
m0_146 -> m0_147  [key=0, style=solid];
m0_145 -> m0_151  [key=0, style=solid];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_148  [key=0, style=solid];
m0_149 -> m0_151  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_156  [key=0, style=solid];
m0_149 -> m0_22  [key=2, style=dotted];
m0_128 -> m0_227  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_130  [key=0, style=solid];
m0_141 -> m0_151  [key=0, style=solid];
m0_141 -> m0_154  [key=2, style=dotted];
m0_141 -> m0_211  [key=0, style=solid];
m0_141 -> m0_212  [key=2, style=dotted];
m0_151 -> m0_124  [key=0, style=bold, color=blue];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_213  [key=2, style=dotted];
m0_151 -> m0_214  [key=2, style=dotted];
m0_38 -> m0_36  [key=0, style=bold, color=blue];
m0_38 -> m0_275  [key=0, style=solid];
m0_38 -> m0_277  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_38 -> m0_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_38 -> m0_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_326 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m0_326 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_326 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_326 -> m0_335  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_326 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_326 -> m0_337  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_326 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m0_326 -> m0_346  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m0_326 -> m0_210  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse"];
m0_326 -> m0_208  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse"];
m0_326 -> m0_19  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse"];
m0_326 -> m0_342  [key=3, color=darkorchid, style=bold, label="Parameter variable long value"];
m0_326 -> m0_367  [key=0, style=solid];
m0_326 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m0_326 -> m0_373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_326 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_326 -> m0_378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m0_326 -> m0_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_326 -> m0_376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_326 -> m0_377  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_330  [key=0, style=solid];
m0_505 -> m0_483  [key=0, style=bold, color=blue];
m0_483 -> m0_484  [key=0, style=solid];
m0_483 -> m0_486  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_483 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_483 -> m0_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_500 -> m0_23  [key=2, style=dotted];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_503  [key=0, style=solid];
m0_500 -> m0_175  [key=2, style=dotted];
m0_500 -> m0_502  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m0_484 -> m0_500  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_484 -> m0_484  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.DictionaryEntry"];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_484 -> m0_496  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_484 -> m0_499  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_484 -> m0_504  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_486 -> m0_487  [key=0, style=solid];
m0_486 -> m0_488  [key=1, style=dashed, color=darkseagreen4, label=primitiveContract];
m0_486 -> m0_493  [key=1, style=dashed, color=darkseagreen4, label=primitiveContract];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_507  [key=2, style=dotted];
m0_496 -> m0_497  [key=0, style=solid];
m0_496 -> m0_509  [key=2, style=dotted];
m0_487 -> m0_500  [key=0, style=solid];
m0_487 -> m0_488  [key=0, style=solid];
m0_501 -> m0_505  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_501 -> m0_502  [key=0, style=solid];
m0_503 -> m0_505  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_503 -> m0_504  [key=0, style=solid];
m0_502 -> m0_505  [key=0, style=solid];
m0_499 -> m0_505  [key=0, style=solid];
m0_499 -> m0_510  [key=2, style=dotted];
m0_504 -> m0_505  [key=0, style=solid];
m0_504 -> m0_511  [key=2, style=dotted];
m0_489 -> m0_505  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_489 -> m0_490  [key=0, style=solid];
m0_492 -> m0_505  [key=0, style=solid];
m0_492 -> m0_508  [key=2, style=dotted];
m0_494 -> m0_505  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_494 -> m0_495  [key=0, style=solid];
m0_498 -> m0_505  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_498 -> m0_499  [key=0, style=solid];
m0_497 -> m0_505  [key=0, style=solid];
m0_497 -> m0_508  [key=2, style=dotted];
m0_485 -> m0_486  [key=0, style=solid];
m0_488 -> m0_489  [key=0, style=solid];
m0_488 -> m0_493  [key=0, style=solid];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_498  [key=0, style=solid];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_492  [key=1, style=dashed, color=darkseagreen4, label=sw];
m0_490 -> m0_506  [key=2, style=dotted];
m0_495 -> m0_496  [key=0, style=solid];
m0_495 -> m0_497  [key=1, style=dashed, color=darkseagreen4, label=sw];
m0_495 -> m0_506  [key=2, style=dotted];
m0_26 -> m0_36  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_234 -> m0_512  [key=0, style=solid];
m0_234 -> m0_513  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_234 -> m0_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_234 -> m0_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_234 -> m0_516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_512 -> m0_513  [key=0, style=solid];
m0_512 -> m0_518  [key=2, style=dotted];
m0_513 -> m0_514  [key=0, style=solid];
m0_513 -> m0_515  [key=0, style=solid];
m0_514 -> m0_515  [key=0, style=solid];
m0_514 -> m0_71  [key=2, style=dotted];
m0_515 -> m0_517  [key=0, style=solid];
m0_515 -> m0_516  [key=0, style=solid];
m0_516 -> m0_515  [key=0, style=solid];
m0_516 -> m0_519  [key=2, style=dotted];
m0_517 -> m0_234  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_25  [key=2, style=dotted];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=nonNullable];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [key=0, style=solid];
m0_14 -> m0_18  [key=0, style=solid];
m0_14 -> m0_22  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_18  [key=2, style=dotted];
m0_15 -> m0_23  [key=2, style=dotted];
m0_15 -> m0_26  [key=2, style=dotted];
m0_15 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=nullableUnderlyingType];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_13  [key=0, style=bold, color=blue];
m0_17 -> m0_20  [key=0, style=solid];
m0_17 -> m0_0  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_216  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_161  [key=0, style=solid];
m0_158 -> m0_166  [key=2, style=dotted];
m0_158 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=reference];
m0_158 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=reference];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_217  [key=2, style=dotted];
m0_159 -> m0_161  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_164  [key=0, style=solid];
m0_161 -> m0_37  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_218  [key=2, style=dotted];
m0_162 -> m0_39  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_167  [key=0, style=solid];
m0_164 -> m0_166  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_164 -> m0_41  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_219  [key=2, style=dotted];
m0_165 -> m0_157  [key=0, style=bold, color=blue];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_171  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_36  [key=2, style=dotted];
m0_175 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_175 -> m0_177  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Func<object, object> CreateCastConverter"];
m0_175 -> m0_181  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_175 -> m0_182  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_180  [key=0, style=solid];
m0_177 -> m0_23  [key=2, style=dotted];
m0_177 -> m0_181  [key=0, style=solid];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_222  [key=2, style=dotted];
m0_178 -> m0_181  [key=0, style=solid];
m0_178 -> m0_188  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_183  [key=0, style=solid];
m0_180 -> m0_35  [key=2, style=dotted];
m0_180 -> m0_186  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_223  [key=2, style=dotted];
m0_181 -> m0_184  [key=0, style=solid];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_186  [key=0, style=solid];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_71  [key=2, style=dotted];
m0_184 -> m0_186  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_189  [key=0, style=solid];
m0_186 -> m0_175  [key=0, style=bold, color=blue];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_193  [key=0, style=solid];
m0_190 -> m0_225  [key=2, style=dotted];
m0_190 -> m0_196  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_226  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_224  [key=2, style=dotted];
m0_193 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=fromConverter];
m0_193 -> m0_168  [key=2, style=dotted];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_228  [key=2, style=dotted];
m0_195 -> m0_77  [key=0, style=bold, color=blue];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_201  [key=0, style=solid];
m0_198 -> m0_229  [key=2, style=dotted];
m0_198 -> m0_200  [key=0, style=solid];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_230  [key=2, style=dotted];
m0_199 -> m0_153  [key=2, style=dotted];
m0_199 -> m0_155  [key=2, style=dotted];
m0_199 -> m0_156  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_197  [key=0, style=solid];
m0_194 -> m0_227  [key=2, style=dotted];
m0_152 -> m0_211  [key=0, style=solid];
m0_157 -> m0_211  [key=0, style=solid];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_157 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_157 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_157 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_157 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_160 -> m0_211  [key=0, style=solid];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_23  [key=2, style=dotted];
m0_160 -> m0_167  [key=2, style=dotted];
m0_160 -> m0_155  [key=2, style=dotted];
m0_160 -> m0_156  [key=2, style=dotted];
m0_163 -> m0_211  [key=0, style=solid];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_168  [key=2, style=dotted];
m0_176 -> m0_211  [key=0, style=solid];
m0_176 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=converter];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_187  [key=2, style=dotted];
m0_176 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=converter];
m0_179 -> m0_211  [key=0, style=solid];
m0_179 -> m0_227  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m0_179 -> m0_179  [key=3, color=darkorchid, style=bold, label="method methodReturn BigInteger ToBigInteger"];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_189  [key=2, style=dotted];
m0_182 -> m0_211  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_185 -> m0_211  [key=0, style=solid];
m0_185 -> m0_186  [key=0, style=solid];
m0_192 -> m0_211  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_175  [key=2, style=dotted];
m0_196 -> m0_211  [key=0, style=solid];
m0_196 -> m0_198  [key=0, style=solid];
m0_196 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_196 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_196  [key=0, style=bold, color=blue];
m0_200 -> m0_211  [key=0, style=solid];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_202  [key=2, style=dotted];
m0_75 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m0_75 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m0_75 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_302  [key=0, style=solid];
m0_75 -> m0_303  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
m0_75 -> m0_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IEnumerable"];
m0_75 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_75 -> m0_93  [key=0, style=solid];
m0_75 -> m0_94  [key=2, style=dotted];
m0_366 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=call];
m0_77 -> m0_93  [key=0, style=solid];
m0_77 -> m0_95  [key=2, style=dotted];
m0_77 -> m0_190  [key=0, style=solid];
m0_77 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_77 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_77 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_93  [key=0, style=solid];
m0_79 -> m0_95  [key=2, style=dotted];
m0_79 -> m0_455  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_79 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_79 -> m0_465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_468  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_79 -> m0_469  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_79 -> m0_471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_474  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_476  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_477  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_453  [key=0, style=solid];
m0_79 -> m0_454  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IDictionary"];
m0_79 -> m0_458  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_79 -> m0_460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_79 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_463  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.IDictionary"];
m0_79 -> m0_466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m0_79 -> m0_470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_473  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_79 -> m0_479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_81 -> m0_93  [key=0, style=solid];
m0_81 -> m0_95  [key=2, style=dotted];
m0_81 -> m0_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_81 -> m0_384  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.ISerializable"];
m0_81 -> m0_385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_81 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.ISerializable"];
m0_81 -> m0_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_81 -> m0_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_81 -> m0_395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_81 -> m0_381  [key=0, style=solid];
m0_81 -> m0_382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_81 -> m0_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonISerializableContract"];
m0_81 -> m0_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_81 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_97 -> m0_99  [key=0, style=solid];
m0_97 -> m0_98  [key=0, style=solid];
m0_280 -> m0_38  [key=0, style=bold, color=blue];
m0_455 -> m0_456  [key=0, style=solid];
m0_455 -> m0_196  [key=2, style=dotted];
m0_456 -> m0_457  [key=0, style=solid];
m0_456 -> m0_229  [key=2, style=dotted];
m0_457 -> m0_458  [key=0, style=solid];
m0_457 -> m0_230  [key=2, style=dotted];
m0_459 -> m0_460  [key=0, style=solid];
m0_459 -> m0_10  [key=2, style=dotted];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_10  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_465 -> m0_483  [key=2, style=dotted];
m0_465 -> m0_470  [key=1, style=dashed, color=darkseagreen4, label=escape];
m0_465 -> m0_473  [key=1, style=dashed, color=darkseagreen4, label=escape];
m0_468 -> m0_469  [key=0, style=solid];
m0_468 -> m0_11  [key=2, style=dotted];
m0_468 -> m0_472  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m0_468 -> m0_474  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m0_469 -> m0_470  [key=0, style=solid];
m0_469 -> m0_472  [key=0, style=solid];
m0_469 -> m0_96  [key=2, style=dotted];
m0_471 -> m0_475  [key=0, style=solid];
m0_471 -> m0_463  [key=0, style=solid];
m0_471 -> m0_157  [key=2, style=dotted];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_463  [key=0, style=solid];
m0_472 -> m0_124  [key=2, style=dotted];
m0_474 -> m0_475  [key=0, style=solid];
m0_474 -> m0_463  [key=0, style=solid];
m0_474 -> m0_12  [key=2, style=dotted];
m0_476 -> m0_477  [key=0, style=solid];
m0_476 -> m0_478  [key=0, style=solid];
m0_476 -> m0_233  [key=2, style=dotted];
m0_477 -> m0_463  [key=0, style=solid];
m0_477 -> m0_234  [key=2, style=dotted];
m0_480 -> m0_481  [key=0, style=solid];
m0_480 -> m0_235  [key=2, style=dotted];
m0_481 -> m0_482  [key=0, style=solid];
m0_481 -> m0_197  [key=2, style=dotted];
m0_454 -> m0_455  [key=0, style=solid];
m0_454 -> m0_456  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
m0_454 -> m0_457  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
m0_454 -> m0_476  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
m0_454 -> m0_481  [key=1, style=dashed, color=darkseagreen4, label=underlyingDictionary];
m0_458 -> m0_459  [key=0, style=solid];
m0_458 -> m0_460  [key=0, style=solid];
m0_460 -> m0_461  [key=0, style=solid];
m0_460 -> m0_462  [key=0, style=solid];
m0_462 -> m0_477  [key=1, style=dashed, color=darkseagreen4, label=initialDepth];
m0_462 -> m0_463  [key=0, style=solid];
m0_463 -> m0_465  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_479  [key=0, style=solid];
m0_463 -> m0_467  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_464 -> m0_465  [key=0, style=solid];
m0_466 -> m0_476  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m0_466 -> m0_466  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m0_466 -> m0_467  [key=0, style=solid];
m0_466 -> m0_437  [key=2, style=dotted];
m0_466 -> m0_470  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m0_466 -> m0_473  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m0_470 -> m0_471  [key=0, style=solid];
m0_470 -> m0_39  [key=2, style=dotted];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_39  [key=2, style=dotted];
m0_467 -> m0_468  [key=0, style=solid];
m0_467 -> m0_469  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_467 -> m0_471  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_467 -> m0_472  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_467 -> m0_474  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_467 -> m0_467  [key=1, style=dashed, color=darkseagreen4, label=entry];
m0_475 -> m0_476  [key=0, style=solid];
m0_478 -> m0_482  [key=0, style=solid];
m0_479 -> m0_480  [key=0, style=solid];
m0_479 -> m0_41  [key=2, style=dotted];
m0_453 -> m0_454  [key=0, style=solid];
m0_482 -> m0_79  [key=0, style=bold, color=blue];
m0_96 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_96 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_96 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_291  [key=0, style=solid];
m0_281 -> m0_97  [key=2, style=dotted];
m0_281 -> m0_0  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_84  [key=2, style=dotted];
m0_367 -> m0_110  [key=2, style=dotted];
m0_367 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_367 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label=isReference];
m0_368 -> m0_36  [key=2, style=dotted];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label=includeTypeDetails];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_268  [key=2, style=dotted];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_23  [key=2, style=dotted];
m0_375 -> m0_38  [key=2, style=dotted];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_10  [key=2, style=dotted];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_379  [key=1, style=dashed, color=darkseagreen4, label=writeMetadataObject];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_374  [key=0, style=solid];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_376  [key=0, style=solid];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_39  [key=2, style=dotted];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_379  [key=0, style=solid];
m0_379 -> m0_380  [key=0, style=solid];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_37  [key=2, style=dotted];
m0_370 -> m0_377  [key=0, style=solid];
m0_370 -> m0_371  [key=0, style=solid];
m0_380 -> m0_326  [key=0, style=bold, color=blue];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_391  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m0_391 -> m0_400  [key=2, style=dotted];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_196  [key=2, style=dotted];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_229  [key=2, style=dotted];
m0_385 -> m0_386  [key=0, style=solid];
m0_385 -> m0_230  [key=2, style=dotted];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_399  [key=2, style=dotted];
m0_389 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m0_389 -> m0_390  [key=0, style=solid];
m0_389 -> m0_11  [key=2, style=dotted];
m0_389 -> m0_392  [key=1, style=dashed, color=darkseagreen4, label=valueContract];
m0_390 -> m0_390  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_388  [key=0, style=solid];
m0_390 -> m0_124  [key=2, style=dotted];
m0_392 -> m0_392  [key=1, style=dashed, color=darkseagreen4, label=serializationEntry];
m0_392 -> m0_388  [key=0, style=solid];
m0_392 -> m0_12  [key=2, style=dotted];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_235  [key=2, style=dotted];
m0_395 -> m0_396  [key=0, style=solid];
m0_395 -> m0_197  [key=2, style=dotted];
m0_381 -> m0_383  [key=0, style=solid];
m0_381 -> m0_382  [key=0, style=solid];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_397  [key=2, style=dotted];
m0_386 -> m0_398  [key=2, style=dotted];
m0_386 -> m0_388  [key=1, style=dashed, color=darkseagreen4, label=serializationInfo];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_393  [key=0, style=solid];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_41  [key=2, style=dotted];
m0_382 -> m0_23  [key=2, style=dotted];
m0_382 -> m0_153  [key=2, style=dotted];
m0_382 -> m0_396  [key=0, style=solid];
m0_382 -> m0_154  [key=2, style=dotted];
m0_396 -> m0_81  [key=0, style=bold, color=blue];
m0_536 -> m0_439  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_276  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_277  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_324  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_394  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_415  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_422  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_438  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_455  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_468  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_469  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_474  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_476  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_477  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_480  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_523  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_524  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m0_536 -> m0_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter"];
m1_133 -> m1_134  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_136  [key=2, style=dotted];
m1_134 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_135 -> m1_133  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_21  [key=2, style=dotted];
m1_13 -> m1_22  [key=2, style=dotted];
m1_13 -> m1_23  [key=2, style=dotted];
m1_13 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_24  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_22  [key=2, style=dotted];
m1_15 -> m1_25  [key=2, style=dotted];
m1_15 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_24  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_24  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_24  [key=2, style=dotted];
m1_20 -> m1_12  [key=0, style=bold, color=blue];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_9  [key=0, style=bold, color=blue];
m1_106 -> m1_107  [key=0, style=solid];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_21  [key=2, style=dotted];
m1_107 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_107 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_115  [key=2, style=dotted];
m1_108 -> m1_82  [key=2, style=dotted];
m1_108 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=union];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_116  [key=2, style=dotted];
m1_109 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=tag];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_116  [key=2, style=dotted];
m1_111 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label=fields];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_117  [key=2, style=dotted];
m1_110 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_24  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_24  [key=2, style=dotted];
m1_114 -> m1_106  [key=0, style=bold, color=blue];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_136  [key=2, style=dotted];
m1_141 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_142 -> m1_140  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=2, style=dotted];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_170 -> m1_171  [key=0, style=solid];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_21  [key=2, style=dotted];
m1_171 -> m1_179  [key=2, style=dotted];
m1_171 -> m1_180  [key=2, style=dotted];
m1_171 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_24  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_62  [key=2, style=dotted];
m1_173 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_24  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_24  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_24  [key=2, style=dotted];
m1_178 -> m1_170  [key=0, style=bold, color=blue];
m1_152 -> m1_153  [key=0, style=solid];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_136  [key=2, style=dotted];
m1_153 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_154 -> m1_152  [key=0, style=bold, color=blue];
m1_167 -> m1_168  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_120 -> m1_118  [key=0, style=bold, color=blue];
m1_130 -> m1_131  [key=0, style=solid];
m1_131 -> m1_132  [key=0, style=solid];
m1_132 -> m1_130  [key=0, style=bold, color=blue];
m1_137 -> m1_138  [key=0, style=solid];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_62  [key=2, style=dotted];
m1_139 -> m1_137  [key=0, style=bold, color=blue];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_62  [key=2, style=dotted];
m1_145 -> m1_143  [key=0, style=bold, color=blue];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_62  [key=2, style=dotted];
m1_151 -> m1_149  [key=0, style=bold, color=blue];
m1_155 -> m1_156  [key=0, style=solid];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_62  [key=2, style=dotted];
m1_157 -> m1_155  [key=0, style=bold, color=blue];
m1_161 -> m1_162  [key=0, style=solid];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_62  [key=2, style=dotted];
m1_163 -> m1_161  [key=0, style=bold, color=blue];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_62  [key=2, style=dotted];
m1_169 -> m1_167  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_24  [key=2, style=dotted];
m1_29 -> m1_26  [key=0, style=bold, color=blue];
m1_75 -> m1_76  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_62  [key=2, style=dotted];
m1_76 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_24  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_24  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_24  [key=2, style=dotted];
m1_81 -> m1_75  [key=0, style=bold, color=blue];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_82 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_97  [key=2, style=dotted];
m1_83 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=u];
m1_83 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=u];
m1_83 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label=u];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_98  [key=2, style=dotted];
m1_84 -> m1_99  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_100  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_43  [key=2, style=dotted];
m1_94 -> m1_87  [key=0, style=solid];
m1_94 -> m1_105  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_95  [key=0, style=solid];
m1_87 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_87 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_87 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_87 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_87 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_101  [key=2, style=dotted];
m1_88 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_88 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_88 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_88 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_88 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_89 -> m1_90  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_102  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_103  [key=2, style=dotted];
m1_92 -> m1_99  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_104  [key=2, style=dotted];
m1_93 -> m1_99  [key=2, style=dotted];
m1_96 -> m1_82  [key=0, style=bold, color=blue];
m1_146 -> m1_147  [key=0, style=solid];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_136  [key=2, style=dotted];
m1_147 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_148 -> m1_146  [key=0, style=bold, color=blue];
m1_158 -> m1_159  [key=0, style=solid];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_136  [key=2, style=dotted];
m1_159 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_160 -> m1_158  [key=0, style=bold, color=blue];
m1_121 -> m1_122  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_82  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_117  [key=2, style=dotted];
m1_123 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_116  [key=2, style=dotted];
m1_124 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_124 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_129  [key=2, style=dotted];
m1_125 -> m1_24  [key=2, style=dotted];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_24  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_24  [key=2, style=dotted];
m1_128 -> m1_121  [key=0, style=bold, color=blue];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_51 -> m1_51  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_62  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid, color=red];
m1_57 -> m1_62  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_46  [key=2, style=dotted];
m1_53 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=ts];
m1_53 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=ts];
m1_54 -> m1_55  [key=0, style=solid, color=red];
m1_54 -> m1_47  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_48  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_49  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid, color=red];
m1_55 -> m1_58  [key=1, style=dashed, color=red, label=i];
m1_55 -> m1_36  [key=3, color=red, style=bold, label="Local variable int i"];
m1_56 -> m1_57  [key=0, style=solid, color=red];
m1_56 -> m1_59  [key=0, style=solid, color=red];
m1_58 -> m1_56  [key=0, style=solid, color=red];
m1_58 -> m1_58  [key=1, style=dashed, color=red, label=i];
m1_61 -> m1_50  [key=0, style=bold, color=blue];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_62  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_24  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_62  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_24  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_62  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_24  [key=2, style=dotted];
m1_74 -> m1_67  [key=0, style=bold, color=blue];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_43  [key=2, style=dotted];
m1_32 -> m1_21  [key=2, style=dotted];
m1_32 -> m1_44  [key=2, style=dotted];
m1_32 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_45  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid, color=red];
m1_38 -> m1_30  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_46  [key=2, style=dotted];
m1_34 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=ts];
m1_34 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=ts];
m1_35 -> m1_36  [key=0, style=solid, color=red];
m1_35 -> m1_47  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_48  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_49  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid, color=red];
m1_36 -> m1_39  [key=1, style=dashed, color=red, label=i];
m1_36 -> m1_36  [key=3, color=red, style=bold, label="Local variable int i"];
m1_37 -> m1_38  [key=0, style=solid, color=red];
m1_37 -> m1_40  [key=0, style=solid, color=red];
m1_39 -> m1_37  [key=0, style=solid, color=red];
m1_39 -> m1_39  [key=1, style=dashed, color=red, label=i];
m1_42 -> m1_31  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_5  [key=0, style=bold, color=blue];
m1_63 -> m1_64  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_21  [key=2, style=dotted];
m1_64 -> m1_30  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_24  [key=2, style=dotted];
m1_66 -> m1_63  [key=0, style=bold, color=blue];
m1_164 -> m1_165  [key=0, style=solid];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_136  [key=2, style=dotted];
m1_165 -> m1_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_166 -> m1_164  [key=0, style=bold, color=blue];
m1_181 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests"];
m1_181 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests"];
m1_182 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=tag];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_4  [key=1, style=dashed, color=green, label=bool];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_5 -> m2_2  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid, color=green];
m2_7 -> m2_7  [key=3, color=green, style=bold, label="Local variable string json"];
m2_7 -> m2_8  [key=0, style=solid, color=green];
m2_8 -> m2_9  [key=0, style=solid, color=green];
m2_8 -> m2_12  [key=2, style=dotted, color=green];
m2_8 -> m2_10  [key=1, style=dashed, color=green, label=user];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_9 -> m2_13  [key=2, style=dotted, color=green];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_10 -> m2_14  [key=2, style=dotted, color=green];
m2_11 -> m2_6  [key=0, style=bold, color=blue];
m2_15 -> m2_3  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User"];
m2_15 -> m2_4  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User"];
m3_1737 -> m3_1738  [key=0, style=solid];
m3_1738 -> m3_1739  [key=0, style=solid];
m3_1739 -> m3_1740  [key=0, style=solid];
m3_1739 -> m3_24  [key=2, style=dotted];
m3_1740 -> m3_1741  [key=0, style=solid];
m3_1740 -> m3_1745  [key=2, style=dotted];
m3_1740 -> m3_1742  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_1740 -> m3_1743  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_1741 -> m3_1742  [key=0, style=solid];
m3_1741 -> m3_25  [key=2, style=dotted];
m3_1742 -> m3_1743  [key=0, style=solid];
m3_1742 -> m3_25  [key=2, style=dotted];
m3_1743 -> m3_1744  [key=0, style=solid];
m3_1743 -> m3_25  [key=2, style=dotted];
m3_1744 -> m3_1737  [key=0, style=bold, color=blue];
m3_979 -> m3_980  [key=0, style=solid];
m3_980 -> m3_981  [key=0, style=solid];
m3_981 -> m3_982  [key=0, style=solid];
m3_981 -> m3_916  [key=2, style=dotted];
m3_981 -> m3_983  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_982 -> m3_983  [key=0, style=solid];
m3_982 -> m3_978  [key=2, style=dotted];
m3_982 -> m3_25  [key=2, style=dotted];
m3_983 -> m3_984  [key=0, style=solid];
m3_983 -> m3_978  [key=2, style=dotted];
m3_983 -> m3_17  [key=2, style=dotted];
m3_984 -> m3_979  [key=0, style=bold, color=blue];
m3_3478 -> m3_3479  [key=0, style=solid];
m3_3479 -> m3_3480  [key=0, style=solid];
m3_3479 -> m3_3483  [key=2, style=dotted];
m3_3479 -> m3_110  [key=2, style=dotted];
m3_3479 -> m3_3484  [key=2, style=dotted];
m3_3480 -> m3_3481  [key=0, style=solid];
m3_3480 -> m3_16  [key=2, style=dotted];
m3_3481 -> m3_3482  [key=0, style=solid];
m3_3481 -> m3_17  [key=2, style=dotted];
m3_3482 -> m3_3478  [key=0, style=bold, color=blue];
m3_4061 -> m3_4062  [key=0, style=solid];
m3_4062 -> m3_4063  [key=0, style=solid];
m3_4063 -> m3_4061  [key=0, style=bold, color=blue];
m3_3268 -> m3_3269  [key=0, style=solid];
m3_3269 -> m3_3270  [key=0, style=solid];
m3_3269 -> m3_3276  [key=2, style=dotted];
m3_3269 -> m3_3271  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_3269 -> m3_3272  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_3269 -> m3_3274  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_3270 -> m3_3271  [key=0, style=solid];
m3_3271 -> m3_3272  [key=0, style=solid];
m3_3272 -> m3_3273  [key=0, style=solid];
m3_3272 -> m3_105  [key=2, style=dotted];
m3_3274 -> m3_3275  [key=0, style=solid];
m3_3274 -> m3_25  [key=2, style=dotted];
m3_3273 -> m3_3274  [key=0, style=solid];
m3_3273 -> m3_24  [key=2, style=dotted];
m3_3275 -> m3_3268  [key=0, style=bold, color=blue];
m3_2998 -> m3_2999  [key=0, style=solid];
m3_2999 -> m3_3000  [key=0, style=solid];
m3_2999 -> m3_1846  [key=2, style=dotted];
m3_2999 -> m3_3003  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m3_2999 -> m3_3005  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m3_3000 -> m3_3001  [key=0, style=solid];
m3_3000 -> m3_3010  [key=2, style=dotted];
m3_3000 -> m3_3003  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_3003 -> m3_3004  [key=0, style=solid];
m3_3003 -> m3_151  [key=2, style=dotted];
m3_3003 -> m3_174  [key=2, style=dotted];
m3_3005 -> m3_3006  [key=0, style=solid];
m3_3005 -> m3_151  [key=2, style=dotted];
m3_3005 -> m3_272  [key=2, style=dotted];
m3_3001 -> m3_3002  [key=0, style=solid];
m3_3002 -> m3_3003  [key=0, style=solid];
m3_3004 -> m3_3005  [key=0, style=solid];
m3_3004 -> m3_17  [key=2, style=dotted];
m3_3006 -> m3_3007  [key=0, style=solid];
m3_3006 -> m3_25  [key=2, style=dotted];
m3_3007 -> m3_3008  [key=0, style=solid];
m3_3007 -> m3_25  [key=2, style=dotted];
m3_3008 -> m3_3009  [key=0, style=solid];
m3_3008 -> m3_25  [key=2, style=dotted];
m3_3009 -> m3_2998  [key=0, style=bold, color=blue];
m3_333 -> m3_334  [key=0, style=solid];
m3_334 -> m3_335  [key=0, style=solid];
m3_334 -> m3_24  [key=2, style=dotted];
m3_334 -> m3_336  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_335 -> m3_336  [key=0, style=solid];
m3_335 -> m3_25  [key=2, style=dotted];
m3_336 -> m3_337  [key=0, style=solid];
m3_336 -> m3_25  [key=2, style=dotted];
m3_337 -> m3_333  [key=0, style=bold, color=blue];
m3_3401 -> m3_3402  [key=0, style=solid];
m3_3402 -> m3_3403  [key=0, style=solid];
m3_3402 -> m3_172  [key=2, style=dotted];
m3_3402 -> m3_354  [key=2, style=dotted];
m3_3403 -> m3_3404  [key=0, style=solid];
m3_3403 -> m3_16  [key=2, style=dotted];
m3_3403 -> m3_3405  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3404 -> m3_3405  [key=0, style=solid];
m3_3404 -> m3_17  [key=2, style=dotted];
m3_3405 -> m3_3406  [key=0, style=solid];
m3_3405 -> m3_24  [key=2, style=dotted];
m3_3405 -> m3_3407  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3405 -> m3_3408  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3406 -> m3_3407  [key=0, style=solid];
m3_3406 -> m3_25  [key=2, style=dotted];
m3_3407 -> m3_3408  [key=0, style=solid];
m3_3407 -> m3_354  [key=2, style=dotted];
m3_3407 -> m3_25  [key=2, style=dotted];
m3_3408 -> m3_3409  [key=0, style=solid];
m3_3408 -> m3_354  [key=2, style=dotted];
m3_3408 -> m3_25  [key=2, style=dotted];
m3_3409 -> m3_3401  [key=0, style=bold, color=blue];
m3_2380 -> m3_2381  [key=0, style=solid];
m3_2380 -> m3_2383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m3_2380 -> m3_2384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m3_2381 -> m3_2382  [key=0, style=solid];
m3_2381 -> m3_2383  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_2383 -> m3_2385  [key=0, style=solid];
m3_2383 -> m3_2386  [key=2, style=dotted];
m3_2383 -> m3_2371  [key=2, style=dotted];
m3_2384 -> m3_2385  [key=0, style=solid];
m3_2384 -> m3_2372  [key=2, style=dotted];
m3_2382 -> m3_2383  [key=0, style=solid];
m3_2382 -> m3_2384  [key=0, style=solid];
m3_2385 -> m3_2380  [key=0, style=bold, color=blue];
m3_409 -> m3_410  [key=0, style=solid];
m3_410 -> m3_411  [key=0, style=solid];
m3_411 -> m3_412  [key=0, style=solid];
m3_411 -> m3_24  [key=2, style=dotted];
m3_411 -> m3_413  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_411 -> m3_414  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_411 -> m3_415  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_412 -> m3_413  [key=0, style=solid];
m3_412 -> m3_25  [key=2, style=dotted];
m3_413 -> m3_414  [key=0, style=solid];
m3_413 -> m3_25  [key=2, style=dotted];
m3_414 -> m3_415  [key=0, style=solid];
m3_414 -> m3_25  [key=2, style=dotted];
m3_415 -> m3_416  [key=0, style=solid];
m3_415 -> m3_25  [key=2, style=dotted];
m3_416 -> m3_409  [key=0, style=bold, color=blue];
m3_998 -> m3_999  [key=0, style=solid];
m3_999 -> m3_1000  [key=0, style=solid];
m3_999 -> m3_1005  [key=2, style=dotted];
m3_999 -> m3_105  [key=2, style=dotted];
m3_1000 -> m3_1001  [key=0, style=solid];
m3_1000 -> m3_25  [key=2, style=dotted];
m3_1001 -> m3_1002  [key=0, style=solid];
m3_1001 -> m3_24  [key=2, style=dotted];
m3_1001 -> m3_1003  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1002 -> m3_1003  [key=0, style=solid];
m3_1002 -> m3_25  [key=2, style=dotted];
m3_1003 -> m3_1004  [key=0, style=solid];
m3_1003 -> m3_25  [key=2, style=dotted];
m3_1004 -> m3_998  [key=0, style=bold, color=blue];
m3_1306 -> m3_1307  [key=0, style=solid];
m3_1307 -> m3_1308  [key=0, style=solid];
m3_1307 -> m3_1286  [key=2, style=dotted];
m3_1307 -> m3_1312  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_1307 -> m3_1313  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_1308 -> m3_1309  [key=0, style=solid];
m3_1308 -> m3_1287  [key=2, style=dotted];
m3_1312 -> m3_1313  [key=0, style=solid];
m3_1312 -> m3_25  [key=2, style=dotted];
m3_1313 -> m3_1314  [key=0, style=solid];
m3_1313 -> m3_25  [key=2, style=dotted];
m3_1309 -> m3_1310  [key=0, style=solid];
m3_1309 -> m3_151  [key=2, style=dotted];
m3_1309 -> m3_152  [key=2, style=dotted];
m3_1309 -> m3_1311  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1310 -> m3_1311  [key=0, style=solid];
m3_1310 -> m3_25  [key=2, style=dotted];
m3_1311 -> m3_1312  [key=0, style=solid];
m3_1311 -> m3_24  [key=2, style=dotted];
m3_1311 -> m3_1313  [key=1, style=dashed, color=darkseagreen4, label=m2];
m3_1314 -> m3_1306  [key=0, style=bold, color=blue];
m3_1430 -> m3_1431  [key=0, style=solid];
m3_1431 -> m3_1432  [key=0, style=solid];
m3_1432 -> m3_1433  [key=0, style=solid];
m3_1432 -> m3_24  [key=2, style=dotted];
m3_1433 -> m3_1434  [key=0, style=solid];
m3_1433 -> m3_1436  [key=0, style=solid];
m3_1433 -> m3_1437  [key=2, style=dotted];
m3_1434 -> m3_1435  [key=0, style=solid];
m3_1435 -> m3_1436  [key=0, style=solid];
m3_1435 -> m3_1438  [key=2, style=dotted];
m3_1435 -> m3_447  [key=2, style=dotted];
m3_1436 -> m3_1430  [key=0, style=bold, color=blue];
m3_4174 -> m3_4175  [key=0, style=solid];
m3_4175 -> m3_4176  [key=0, style=solid];
m3_4176 -> m3_4174  [key=0, style=bold, color=blue];
m3_3920 -> m3_3921  [key=0, style=solid];
m3_3921 -> m3_3922  [key=0, style=solid];
m3_3921 -> m3_3883  [key=2, style=dotted];
m3_3922 -> m3_3920  [key=0, style=bold, color=blue];
m3_3441 -> m3_3442  [key=0, style=solid];
m3_3442 -> m3_3443  [key=0, style=solid];
m3_3442 -> m3_172  [key=2, style=dotted];
m3_3442 -> m3_1082  [key=2, style=dotted];
m3_3443 -> m3_3444  [key=0, style=solid];
m3_3443 -> m3_151  [key=2, style=dotted];
m3_3443 -> m3_174  [key=2, style=dotted];
m3_3443 -> m3_3445  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3444 -> m3_3445  [key=0, style=solid];
m3_3444 -> m3_17  [key=2, style=dotted];
m3_3445 -> m3_3446  [key=0, style=solid];
m3_3445 -> m3_24  [key=2, style=dotted];
m3_3445 -> m3_3447  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3445 -> m3_3448  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3446 -> m3_3447  [key=0, style=solid];
m3_3446 -> m3_25  [key=2, style=dotted];
m3_3447 -> m3_3448  [key=0, style=solid];
m3_3447 -> m3_1082  [key=2, style=dotted];
m3_3447 -> m3_25  [key=2, style=dotted];
m3_3448 -> m3_3449  [key=0, style=solid];
m3_3448 -> m3_1082  [key=2, style=dotted];
m3_3448 -> m3_25  [key=2, style=dotted];
m3_3449 -> m3_3441  [key=0, style=bold, color=blue];
m3_663 -> m3_664  [key=0, style=solid];
m3_663 -> m3_665  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_663 -> m3_666  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m3_663 -> m3_667  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m3_663 -> m3_668  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m3_664 -> m3_665  [key=0, style=solid];
m3_665 -> m3_666  [key=0, style=solid];
m3_666 -> m3_667  [key=0, style=solid];
m3_667 -> m3_668  [key=0, style=solid];
m3_668 -> m3_669  [key=0, style=solid];
m3_669 -> m3_663  [key=0, style=bold, color=blue];
m3_1956 -> m3_1957  [key=0, style=solid];
m3_1957 -> m3_1958  [key=0, style=solid];
m3_1957 -> m3_172  [key=2, style=dotted];
m3_1958 -> m3_1959  [key=0, style=solid];
m3_1958 -> m3_110  [key=2, style=dotted];
m3_1959 -> m3_1956  [key=0, style=bold, color=blue];
m3_2114 -> m3_2115  [key=0, style=solid];
m3_2115 -> m3_2116  [key=0, style=solid];
m3_2115 -> m3_2117  [key=2, style=dotted];
m3_2116 -> m3_2114  [key=0, style=bold, color=blue];
m3_2258 -> m3_2259  [key=0, style=solid];
m3_2259 -> m3_2260  [key=0, style=solid];
m3_2259 -> m3_2266  [key=2, style=dotted];
m3_2260 -> m3_2261  [key=0, style=solid];
m3_2260 -> m3_16  [key=2, style=dotted];
m3_2261 -> m3_2262  [key=0, style=solid];
m3_2261 -> m3_17  [key=2, style=dotted];
m3_2262 -> m3_2263  [key=0, style=solid];
m3_2262 -> m3_2267  [key=2, style=dotted];
m3_2263 -> m3_2264  [key=0, style=solid];
m3_2263 -> m3_16  [key=2, style=dotted];
m3_2264 -> m3_2265  [key=0, style=solid];
m3_2264 -> m3_17  [key=2, style=dotted];
m3_2265 -> m3_2258  [key=0, style=bold, color=blue];
m3_2813 -> m3_2814  [key=0, style=solid];
m3_2814 -> m3_2815  [key=0, style=solid];
m3_2814 -> m3_2809  [key=2, style=dotted];
m3_2814 -> m3_2816  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2814 -> m3_2817  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2814 -> m3_2820  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2814 -> m3_2821  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2815 -> m3_2816  [key=0, style=solid];
m3_2815 -> m3_298  [key=2, style=dotted];
m3_2816 -> m3_2817  [key=0, style=solid];
m3_2816 -> m3_298  [key=2, style=dotted];
m3_2817 -> m3_2818  [key=0, style=solid];
m3_2817 -> m3_16  [key=2, style=dotted];
m3_2817 -> m3_2819  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2820 -> m3_2821  [key=0, style=solid];
m3_2820 -> m3_25  [key=2, style=dotted];
m3_2821 -> m3_2822  [key=0, style=solid];
m3_2821 -> m3_25  [key=2, style=dotted];
m3_2818 -> m3_2819  [key=0, style=solid];
m3_2818 -> m3_17  [key=2, style=dotted];
m3_2819 -> m3_2820  [key=0, style=solid];
m3_2819 -> m3_24  [key=2, style=dotted];
m3_2819 -> m3_2821  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2819 -> m3_2822  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2819 -> m3_2823  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2822 -> m3_2823  [key=0, style=solid];
m3_2822 -> m3_25  [key=2, style=dotted];
m3_2823 -> m3_2824  [key=0, style=solid];
m3_2823 -> m3_25  [key=2, style=dotted];
m3_2824 -> m3_2813  [key=0, style=bold, color=blue];
m3_1792 -> m3_1793  [key=0, style=solid];
m3_1793 -> m3_1794  [key=0, style=solid];
m3_1793 -> m3_1797  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1794 -> m3_1795  [key=0, style=solid];
m3_1794 -> m3_36  [key=2, style=dotted];
m3_1794 -> m3_1796  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1795 -> m3_1792  [key=0, style=bold, color=blue];
m3_3305 -> m3_3306  [key=0, style=solid];
m3_3306 -> m3_3307  [key=0, style=solid];
m3_3307 -> m3_3305  [key=0, style=bold, color=blue];
m3_2845 -> m3_2846  [key=0, style=solid];
m3_2846 -> m3_2847  [key=0, style=solid];
m3_2846 -> m3_2376  [key=2, style=dotted];
m3_2847 -> m3_2845  [key=0, style=bold, color=blue];
m3_3454 -> m3_3455  [key=0, style=solid];
m3_3455 -> m3_3456  [key=0, style=solid];
m3_3455 -> m3_3460  [key=2, style=dotted];
m3_3455 -> m3_3457  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m3_3456 -> m3_3457  [key=0, style=solid];
m3_3456 -> m3_3461  [key=2, style=dotted];
m3_3456 -> m3_3458  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m3_3457 -> m3_3458  [key=0, style=solid];
m3_3457 -> m3_25  [key=2, style=dotted];
m3_3458 -> m3_3459  [key=0, style=solid];
m3_3458 -> m3_25  [key=2, style=dotted];
m3_3459 -> m3_3454  [key=0, style=bold, color=blue];
m3_3789 -> m3_3790  [key=0, style=solid];
m3_3790 -> m3_3791  [key=0, style=solid];
m3_3790 -> m3_719  [key=2, style=dotted];
m3_3790 -> m3_1226  [key=2, style=dotted];
m3_3790 -> m3_3792  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3790 -> m3_3793  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3790 -> m3_3794  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3791 -> m3_3792  [key=0, style=solid];
m3_3791 -> m3_719  [key=2, style=dotted];
m3_3791 -> m3_1226  [key=2, style=dotted];
m3_3791 -> m3_3793  [key=1, style=dashed, color=darkseagreen4, label=jane];
m3_3791 -> m3_3794  [key=1, style=dashed, color=darkseagreen4, label=jane];
m3_3792 -> m3_3793  [key=0, style=solid];
m3_3793 -> m3_3794  [key=0, style=solid];
m3_3794 -> m3_3795  [key=0, style=solid];
m3_3794 -> m3_110  [key=2, style=dotted];
m3_3795 -> m3_3796  [key=0, style=solid];
m3_3795 -> m3_151  [key=2, style=dotted];
m3_3795 -> m3_521  [key=2, style=dotted];
m3_3795 -> m3_152  [key=2, style=dotted];
m3_3796 -> m3_3797  [key=0, style=solid];
m3_3796 -> m3_17  [key=2, style=dotted];
m3_3797 -> m3_3789  [key=0, style=bold, color=blue];
m3_3798 -> m3_3799  [key=0, style=solid];
m3_3799 -> m3_3800  [key=0, style=solid];
m3_3799 -> m3_719  [key=2, style=dotted];
m3_3799 -> m3_1226  [key=2, style=dotted];
m3_3799 -> m3_3801  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3799 -> m3_3802  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3799 -> m3_3803  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3800 -> m3_3801  [key=0, style=solid];
m3_3800 -> m3_719  [key=2, style=dotted];
m3_3800 -> m3_1226  [key=2, style=dotted];
m3_3800 -> m3_3802  [key=1, style=dashed, color=darkseagreen4, label=jane];
m3_3800 -> m3_3803  [key=1, style=dashed, color=darkseagreen4, label=jane];
m3_3801 -> m3_3802  [key=0, style=solid];
m3_3802 -> m3_3803  [key=0, style=solid];
m3_3803 -> m3_3804  [key=0, style=solid];
m3_3803 -> m3_110  [key=2, style=dotted];
m3_3804 -> m3_3805  [key=0, style=solid];
m3_3804 -> m3_151  [key=2, style=dotted];
m3_3804 -> m3_152  [key=2, style=dotted];
m3_3805 -> m3_3806  [key=0, style=solid];
m3_3805 -> m3_17  [key=2, style=dotted];
m3_3806 -> m3_3798  [key=0, style=bold, color=blue];
m3_4015 -> m3_4016  [key=0, style=solid];
m3_4016 -> m3_4017  [key=0, style=solid];
m3_4016 -> m3_354  [key=2, style=dotted];
m3_4016 -> m3_4019  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_4016 -> m3_4022  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_4017 -> m3_4018  [key=0, style=solid];
m3_4019 -> m3_4020  [key=0, style=solid];
m3_4019 -> m3_172  [key=2, style=dotted];
m3_4019 -> m3_152  [key=2, style=dotted];
m3_4019 -> m3_4021  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4022 -> m3_4023  [key=0, style=solid];
m3_4022 -> m3_1662  [key=2, style=dotted];
m3_4022 -> m3_25  [key=2, style=dotted];
m3_4018 -> m3_4019  [key=0, style=solid];
m3_4018 -> m3_151  [key=2, style=dotted];
m3_4018 -> m3_4021  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_4021 -> m3_4022  [key=0, style=solid];
m3_4021 -> m3_272  [key=2, style=dotted];
m3_4020 -> m3_4021  [key=0, style=solid];
m3_4020 -> m3_17  [key=2, style=dotted];
m3_4023 -> m3_4015  [key=0, style=bold, color=blue];
m3_175 -> m3_176  [key=0, style=solid];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_36  [key=2, style=dotted];
m3_176 -> m3_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_36  [key=2, style=dotted];
m3_177 -> m3_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_36  [key=2, style=dotted];
m3_178 -> m3_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_36  [key=2, style=dotted];
m3_179 -> m3_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_36  [key=2, style=dotted];
m3_180 -> m3_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_36  [key=2, style=dotted];
m3_181 -> m3_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_36  [key=2, style=dotted];
m3_182 -> m3_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_183 -> m3_175  [key=0, style=bold, color=blue];
m3_2024 -> m3_2025  [key=0, style=solid];
m3_2025 -> m3_2026  [key=0, style=solid];
m3_2025 -> m3_2027  [key=1, style=dashed, color=darkseagreen4, label=jsonIsoText];
m3_2026 -> m3_2027  [key=0, style=solid];
m3_2026 -> m3_151  [key=2, style=dotted];
m3_2026 -> m3_1129  [key=2, style=dotted];
m3_2026 -> m3_272  [key=2, style=dotted];
m3_2026 -> m3_2028  [key=1, style=dashed, color=darkseagreen4, label=cISO];
m3_2027 -> m3_2028  [key=0, style=solid];
m3_2027 -> m3_151  [key=2, style=dotted];
m3_2027 -> m3_272  [key=2, style=dotted];
m3_2028 -> m3_2029  [key=0, style=solid];
m3_2028 -> m3_25  [key=2, style=dotted];
m3_2029 -> m3_2024  [key=0, style=bold, color=blue];
m3_1813 -> m3_1814  [key=0, style=solid];
m3_1814 -> m3_1815  [key=0, style=solid];
m3_1815 -> m3_1816  [key=0, style=solid];
m3_1815 -> m3_24  [key=2, style=dotted];
m3_1816 -> m3_1817  [key=0, style=solid];
m3_1816 -> m3_1819  [key=0, style=solid];
m3_1816 -> m3_1437  [key=2, style=dotted];
m3_1817 -> m3_1818  [key=0, style=solid];
m3_1818 -> m3_1819  [key=0, style=solid];
m3_1818 -> m3_1438  [key=2, style=dotted];
m3_1818 -> m3_447  [key=2, style=dotted];
m3_1819 -> m3_1813  [key=0, style=bold, color=blue];
m3_3591 -> m3_3592  [key=0, style=solid];
m3_3592 -> m3_3593  [key=0, style=solid];
m3_3593 -> m3_3594  [key=0, style=solid];
m3_3593 -> m3_24  [key=2, style=dotted];
m3_3594 -> m3_3595  [key=0, style=solid];
m3_3595 -> m3_3596  [key=0, style=solid];
m3_3595 -> m3_25  [key=2, style=dotted];
m3_3596 -> m3_3591  [key=0, style=bold, color=blue];
m3_2312 -> m3_2313  [key=0, style=solid];
m3_2313 -> m3_2312  [key=0, style=bold, color=blue];
m3_234 -> m3_235  [key=0, style=solid];
m3_235 -> m3_236  [key=0, style=solid];
m3_236 -> m3_234  [key=0, style=bold, color=blue];
m3_1333 -> m3_1334  [key=0, style=solid];
m3_1334 -> m3_1335  [key=0, style=solid];
m3_1334 -> m3_1343  [key=2, style=dotted];
m3_1334 -> m3_1336  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_1334 -> m3_1337  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_1335 -> m3_1336  [key=0, style=solid];
m3_1335 -> m3_1267  [key=2, style=dotted];
m3_1336 -> m3_1337  [key=0, style=solid];
m3_1336 -> m3_1267  [key=2, style=dotted];
m3_1337 -> m3_1338  [key=0, style=solid];
m3_1337 -> m3_1275  [key=2, style=dotted];
m3_1337 -> m3_1276  [key=2, style=dotted];
m3_1337 -> m3_1339  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1338 -> m3_1339  [key=0, style=solid];
m3_1338 -> m3_25  [key=2, style=dotted];
m3_1339 -> m3_1340  [key=0, style=solid];
m3_1339 -> m3_1275  [key=2, style=dotted];
m3_1339 -> m3_212  [key=2, style=dotted];
m3_1339 -> m3_1341  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_1340 -> m3_1341  [key=0, style=solid];
m3_1340 -> m3_25  [key=2, style=dotted];
m3_1341 -> m3_1342  [key=0, style=solid];
m3_1341 -> m3_25  [key=2, style=dotted];
m3_1342 -> m3_1333  [key=0, style=bold, color=blue];
m3_957 -> m3_958  [key=0, style=solid];
m3_958 -> m3_959  [key=0, style=solid];
m3_958 -> m3_970  [key=2, style=dotted];
m3_958 -> m3_960  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m3_958 -> m3_961  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m3_958 -> m3_962  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m3_958 -> m3_964  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m3_959 -> m3_960  [key=0, style=solid];
m3_960 -> m3_961  [key=0, style=solid];
m3_961 -> m3_962  [key=0, style=solid];
m3_962 -> m3_963  [key=0, style=solid];
m3_962 -> m3_105  [key=2, style=dotted];
m3_964 -> m3_965  [key=0, style=solid];
m3_964 -> m3_971  [key=2, style=dotted];
m3_963 -> m3_964  [key=0, style=solid];
m3_963 -> m3_916  [key=2, style=dotted];
m3_963 -> m3_965  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m3_963 -> m3_966  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m3_963 -> m3_967  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m3_963 -> m3_968  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m3_965 -> m3_966  [key=0, style=solid];
m3_965 -> m3_25  [key=2, style=dotted];
m3_966 -> m3_967  [key=0, style=solid];
m3_966 -> m3_25  [key=2, style=dotted];
m3_967 -> m3_968  [key=0, style=solid];
m3_967 -> m3_972  [key=2, style=dotted];
m3_968 -> m3_969  [key=0, style=solid];
m3_968 -> m3_25  [key=2, style=dotted];
m3_969 -> m3_957  [key=0, style=bold, color=blue];
m3_2966 -> m3_2967  [key=0, style=solid];
m3_2967 -> m3_2968  [key=0, style=solid];
m3_2968 -> m3_2969  [key=0, style=solid];
m3_2968 -> m3_1689  [key=2, style=dotted];
m3_2968 -> m3_2971  [key=1, style=dashed, color=darkseagreen4, label=uri];
m3_2969 -> m3_2970  [key=0, style=solid];
m3_2969 -> m3_105  [key=2, style=dotted];
m3_2971 -> m3_2972  [key=0, style=solid];
m3_2971 -> m3_25  [key=2, style=dotted];
m3_2970 -> m3_2971  [key=0, style=solid];
m3_2970 -> m3_24  [key=2, style=dotted];
m3_2972 -> m3_2966  [key=0, style=bold, color=blue];
m3_3450 -> m3_3451  [key=0, style=solid];
m3_3451 -> m3_3452  [key=0, style=solid];
m3_3451 -> m3_351  [key=2, style=dotted];
m3_3451 -> m3_349  [key=2, style=dotted];
m3_3451 -> m3_350  [key=2, style=dotted];
m3_3451 -> m3_2992  [key=2, style=dotted];
m3_3452 -> m3_3453  [key=0, style=solid];
m3_3452 -> m3_25  [key=2, style=dotted];
m3_3453 -> m3_3450  [key=0, style=bold, color=blue];
m3_3914 -> m3_3915  [key=0, style=solid];
m3_3915 -> m3_3916  [key=0, style=solid];
m3_3915 -> m3_3883  [key=2, style=dotted];
m3_3916 -> m3_3914  [key=0, style=bold, color=blue];
m3_3872 -> m3_3873  [key=0, style=solid];
m3_3872 -> m3_3875  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_3872 -> m3_3877  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_3872 -> m3_3879  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_3873 -> m3_3874  [key=0, style=solid];
m3_3873 -> m3_3875  [key=0, style=solid];
m3_3875 -> m3_3876  [key=0, style=solid];
m3_3875 -> m3_3877  [key=0, style=solid];
m3_3877 -> m3_3878  [key=0, style=solid];
m3_3877 -> m3_3879  [key=0, style=solid];
m3_3879 -> m3_3880  [key=0, style=solid];
m3_3879 -> m3_3881  [key=0, style=solid];
m3_3874 -> m3_3882  [key=0, style=solid];
m3_3876 -> m3_3882  [key=0, style=solid];
m3_3878 -> m3_3882  [key=0, style=solid];
m3_3880 -> m3_3882  [key=0, style=solid];
m3_3880 -> m3_810  [key=2, style=dotted];
m3_3881 -> m3_3882  [key=0, style=solid];
m3_3881 -> m3_3883  [key=2, style=dotted];
m3_3882 -> m3_3872  [key=0, style=bold, color=blue];
m3_523 -> m3_524  [key=0, style=solid];
m3_524 -> m3_525  [key=0, style=solid];
m3_524 -> m3_151  [key=2, style=dotted];
m3_524 -> m3_526  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_527  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_528  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_529  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_530  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_531  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_532  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_533  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_535  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_536  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_537  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_538  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_539  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_540  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_541  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_542  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_543  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_544  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_545  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_546  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_547  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_548  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_549  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_550  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_551  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_552  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_553  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_554  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_555  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_556  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_557  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_558  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_559  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_560  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_561  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_562  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_563  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_564  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_565  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_566  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_567  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_568  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_569  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_570  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_572  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_573  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_574  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_575  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_576  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_577  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_578  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_580  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_581  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_582  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_583  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_584  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_524 -> m3_585  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_525 -> m3_526  [key=0, style=solid];
m3_525 -> m3_515  [key=2, style=dotted];
m3_525 -> m3_527  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m3_526 -> m3_527  [key=0, style=solid];
m3_527 -> m3_528  [key=0, style=solid];
m3_527 -> m3_25  [key=2, style=dotted];
m3_528 -> m3_529  [key=0, style=solid];
m3_529 -> m3_530  [key=0, style=solid];
m3_529 -> m3_25  [key=2, style=dotted];
m3_530 -> m3_531  [key=0, style=solid];
m3_531 -> m3_532  [key=0, style=solid];
m3_531 -> m3_25  [key=2, style=dotted];
m3_532 -> m3_533  [key=0, style=solid];
m3_532 -> m3_516  [key=2, style=dotted];
m3_533 -> m3_534  [key=0, style=solid];
m3_533 -> m3_516  [key=2, style=dotted];
m3_533 -> m3_25  [key=2, style=dotted];
m3_535 -> m3_536  [key=0, style=solid];
m3_536 -> m3_537  [key=0, style=solid];
m3_536 -> m3_25  [key=2, style=dotted];
m3_537 -> m3_538  [key=0, style=solid];
m3_537 -> m3_211  [key=2, style=dotted];
m3_537 -> m3_298  [key=2, style=dotted];
m3_538 -> m3_539  [key=0, style=solid];
m3_538 -> m3_25  [key=2, style=dotted];
m3_539 -> m3_540  [key=0, style=solid];
m3_539 -> m3_519  [key=2, style=dotted];
m3_540 -> m3_541  [key=0, style=solid];
m3_540 -> m3_520  [key=2, style=dotted];
m3_540 -> m3_25  [key=2, style=dotted];
m3_541 -> m3_542  [key=0, style=solid];
m3_542 -> m3_543  [key=0, style=solid];
m3_542 -> m3_25  [key=2, style=dotted];
m3_543 -> m3_544  [key=0, style=solid];
m3_544 -> m3_545  [key=0, style=solid];
m3_544 -> m3_25  [key=2, style=dotted];
m3_545 -> m3_546  [key=0, style=solid];
m3_546 -> m3_547  [key=0, style=solid];
m3_546 -> m3_25  [key=2, style=dotted];
m3_547 -> m3_548  [key=0, style=solid];
m3_548 -> m3_549  [key=0, style=solid];
m3_548 -> m3_25  [key=2, style=dotted];
m3_549 -> m3_550  [key=0, style=solid];
m3_550 -> m3_551  [key=0, style=solid];
m3_550 -> m3_25  [key=2, style=dotted];
m3_551 -> m3_552  [key=0, style=solid];
m3_552 -> m3_553  [key=0, style=solid];
m3_552 -> m3_25  [key=2, style=dotted];
m3_553 -> m3_554  [key=0, style=solid];
m3_554 -> m3_555  [key=0, style=solid];
m3_554 -> m3_25  [key=2, style=dotted];
m3_555 -> m3_556  [key=0, style=solid];
m3_556 -> m3_557  [key=0, style=solid];
m3_556 -> m3_25  [key=2, style=dotted];
m3_557 -> m3_558  [key=0, style=solid];
m3_558 -> m3_559  [key=0, style=solid];
m3_558 -> m3_25  [key=2, style=dotted];
m3_559 -> m3_560  [key=0, style=solid];
m3_560 -> m3_561  [key=0, style=solid];
m3_560 -> m3_25  [key=2, style=dotted];
m3_561 -> m3_562  [key=0, style=solid];
m3_562 -> m3_563  [key=0, style=solid];
m3_562 -> m3_25  [key=2, style=dotted];
m3_563 -> m3_564  [key=0, style=solid];
m3_564 -> m3_565  [key=0, style=solid];
m3_564 -> m3_25  [key=2, style=dotted];
m3_565 -> m3_566  [key=0, style=solid];
m3_566 -> m3_567  [key=0, style=solid];
m3_566 -> m3_25  [key=2, style=dotted];
m3_567 -> m3_568  [key=0, style=solid];
m3_568 -> m3_569  [key=0, style=solid];
m3_568 -> m3_25  [key=2, style=dotted];
m3_569 -> m3_570  [key=0, style=solid];
m3_570 -> m3_571  [key=0, style=solid];
m3_570 -> m3_25  [key=2, style=dotted];
m3_572 -> m3_573  [key=0, style=solid];
m3_573 -> m3_574  [key=0, style=solid];
m3_573 -> m3_25  [key=2, style=dotted];
m3_574 -> m3_575  [key=0, style=solid];
m3_574 -> m3_587  [key=2, style=dotted];
m3_574 -> m3_25  [key=2, style=dotted];
m3_575 -> m3_576  [key=0, style=solid];
m3_576 -> m3_577  [key=0, style=solid];
m3_576 -> m3_587  [key=2, style=dotted];
m3_576 -> m3_25  [key=2, style=dotted];
m3_577 -> m3_578  [key=0, style=solid];
m3_578 -> m3_579  [key=0, style=solid];
m3_578 -> m3_25  [key=2, style=dotted];
m3_580 -> m3_581  [key=0, style=solid];
m3_581 -> m3_582  [key=0, style=solid];
m3_581 -> m3_25  [key=2, style=dotted];
m3_582 -> m3_583  [key=0, style=solid];
m3_583 -> m3_584  [key=0, style=solid];
m3_583 -> m3_25  [key=2, style=dotted];
m3_584 -> m3_585  [key=0, style=solid];
m3_585 -> m3_586  [key=0, style=solid];
m3_585 -> m3_25  [key=2, style=dotted];
m3_534 -> m3_535  [key=0, style=solid];
m3_534 -> m3_517  [key=2, style=dotted];
m3_534 -> m3_536  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m3_571 -> m3_572  [key=0, style=solid];
m3_571 -> m3_521  [key=2, style=dotted];
m3_571 -> m3_573  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m3_571 -> m3_574  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m3_571 -> m3_575  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m3_571 -> m3_589  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m3_571 -> m3_576  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m3_579 -> m3_580  [key=0, style=solid];
m3_579 -> m3_522  [key=2, style=dotted];
m3_579 -> m3_581  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m3_586 -> m3_523  [key=0, style=bold, color=blue];
m3_1569 -> m3_1570  [key=0, style=solid];
m3_1570 -> m3_1571  [key=0, style=solid];
m3_1570 -> m3_1580  [key=2, style=dotted];
m3_1570 -> m3_1572  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1570 -> m3_1573  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1570 -> m3_1574  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1570 -> m3_1575  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1570 -> m3_1577  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1571 -> m3_1572  [key=0, style=solid];
m3_1572 -> m3_1573  [key=0, style=solid];
m3_1573 -> m3_1574  [key=0, style=solid];
m3_1574 -> m3_1575  [key=0, style=solid];
m3_1575 -> m3_1576  [key=0, style=solid];
m3_1575 -> m3_16  [key=2, style=dotted];
m3_1577 -> m3_1578  [key=0, style=solid];
m3_1577 -> m3_151  [key=2, style=dotted];
m3_1577 -> m3_174  [key=2, style=dotted];
m3_1576 -> m3_1577  [key=0, style=solid];
m3_1576 -> m3_17  [key=2, style=dotted];
m3_1578 -> m3_1579  [key=0, style=solid];
m3_1578 -> m3_17  [key=2, style=dotted];
m3_1579 -> m3_1569  [key=0, style=bold, color=blue];
m3_2676 -> m3_2677  [key=0, style=solid];
m3_2677 -> m3_2678  [key=0, style=solid];
m3_2677 -> m3_151  [key=2, style=dotted];
m3_2677 -> m3_272  [key=2, style=dotted];
m3_2678 -> m3_2676  [key=0, style=bold, color=blue];
m3_1972 -> m3_1973  [key=0, style=solid];
m3_1973 -> m3_1974  [key=0, style=solid];
m3_1973 -> m3_811  [key=2, style=dotted];
m3_1974 -> m3_1972  [key=0, style=bold, color=blue];
m3_1820 -> m3_1821  [key=0, style=solid];
m3_1821 -> m3_1822  [key=0, style=solid];
m3_1821 -> m3_1825  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1822 -> m3_1823  [key=0, style=solid];
m3_1822 -> m3_36  [key=2, style=dotted];
m3_1822 -> m3_1824  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1823 -> m3_1820  [key=0, style=bold, color=blue];
m3_3997 -> m3_3998  [key=0, style=solid];
m3_3998 -> m3_3999  [key=0, style=solid];
m3_3998 -> m3_934  [key=2, style=dotted];
m3_3998 -> m3_4001  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3998 -> m3_4004  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3999 -> m3_4000  [key=0, style=solid];
m3_4001 -> m3_4002  [key=0, style=solid];
m3_4001 -> m3_172  [key=2, style=dotted];
m3_4001 -> m3_152  [key=2, style=dotted];
m3_4001 -> m3_4003  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4004 -> m3_4005  [key=0, style=solid];
m3_4004 -> m3_1662  [key=2, style=dotted];
m3_4004 -> m3_25  [key=2, style=dotted];
m3_4000 -> m3_4001  [key=0, style=solid];
m3_4000 -> m3_151  [key=2, style=dotted];
m3_4000 -> m3_4003  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_4003 -> m3_4004  [key=0, style=solid];
m3_4003 -> m3_272  [key=2, style=dotted];
m3_4002 -> m3_4003  [key=0, style=solid];
m3_4002 -> m3_17  [key=2, style=dotted];
m3_4005 -> m3_3997  [key=0, style=bold, color=blue];
m3_1012 -> m3_1013  [key=0, style=solid];
m3_1013 -> m3_1014  [key=0, style=solid];
m3_1014 -> m3_1015  [key=0, style=solid];
m3_1014 -> m3_443  [key=2, style=dotted];
m3_1014 -> m3_1016  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1015 -> m3_1016  [key=0, style=solid];
m3_1015 -> m3_1020  [key=2, style=dotted];
m3_1015 -> m3_444  [key=2, style=dotted];
m3_1015 -> m3_25  [key=2, style=dotted];
m3_1016 -> m3_1017  [key=0, style=solid];
m3_1017 -> m3_1018  [key=0, style=solid];
m3_1018 -> m3_1019  [key=0, style=solid];
m3_1018 -> m3_1021  [key=2, style=dotted];
m3_1018 -> m3_444  [key=2, style=dotted];
m3_1018 -> m3_25  [key=2, style=dotted];
m3_1019 -> m3_1012  [key=0, style=bold, color=blue];
m3_2054 -> m3_2055  [key=0, style=solid];
m3_2055 -> m3_2056  [key=0, style=solid];
m3_2055 -> m3_2065  [key=2, style=dotted];
m3_2055 -> m3_2057  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_2055 -> m3_2058  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_2055 -> m3_2061  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_2056 -> m3_2057  [key=0, style=solid];
m3_2056 -> m3_2066  [key=2, style=dotted];
m3_2057 -> m3_2058  [key=0, style=solid];
m3_2057 -> m3_1226  [key=2, style=dotted];
m3_2058 -> m3_2059  [key=0, style=solid];
m3_2058 -> m3_2067  [key=2, style=dotted];
m3_2061 -> m3_2062  [key=0, style=solid];
m3_2061 -> m3_895  [key=2, style=dotted];
m3_2059 -> m3_2060  [key=0, style=solid];
m3_2059 -> m3_813  [key=2, style=dotted];
m3_2059 -> m3_2061  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_2059 -> m3_2062  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_2060 -> m3_2061  [key=0, style=solid];
m3_2060 -> m3_894  [key=2, style=dotted];
m3_2062 -> m3_2063  [key=0, style=solid];
m3_2062 -> m3_896  [key=2, style=dotted];
m3_2063 -> m3_2064  [key=0, style=solid];
m3_2063 -> m3_897  [key=2, style=dotted];
m3_2064 -> m3_2054  [key=0, style=bold, color=blue];
m3_2744 -> m3_2745  [key=0, style=solid];
m3_2745 -> m3_2746  [key=0, style=solid];
m3_2745 -> m3_2749  [key=2, style=dotted];
m3_2746 -> m3_2747  [key=0, style=solid];
m3_2746 -> m3_16  [key=2, style=dotted];
m3_2747 -> m3_2748  [key=0, style=solid];
m3_2747 -> m3_25  [key=2, style=dotted];
m3_2748 -> m3_2744  [key=0, style=bold, color=blue];
m3_2764 -> m3_2765  [key=0, style=solid];
m3_2765 -> m3_2766  [key=0, style=solid];
m3_2765 -> m3_2767  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2766 -> m3_2767  [key=0, style=solid];
m3_2766 -> m3_24  [key=2, style=dotted];
m3_2766 -> m3_2768  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m3_2767 -> m3_2768  [key=0, style=solid];
m3_2767 -> m3_24  [key=2, style=dotted];
m3_2768 -> m3_2769  [key=0, style=solid];
m3_2768 -> m3_25  [key=2, style=dotted];
m3_2769 -> m3_2764  [key=0, style=bold, color=blue];
m3_1096 -> m3_1097  [key=0, style=solid];
m3_1097 -> m3_1098  [key=0, style=solid];
m3_1097 -> m3_172  [key=2, style=dotted];
m3_1097 -> m3_1099  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_1097 -> m3_1100  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_1097 -> m3_1103  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_1098 -> m3_1099  [key=0, style=solid];
m3_1098 -> m3_811  [key=2, style=dotted];
m3_1099 -> m3_1100  [key=0, style=solid];
m3_1099 -> m3_811  [key=2, style=dotted];
m3_1100 -> m3_1101  [key=0, style=solid];
m3_1100 -> m3_105  [key=2, style=dotted];
m3_1100 -> m3_1102  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1103 -> m3_1104  [key=0, style=solid];
m3_1103 -> m3_25  [key=2, style=dotted];
m3_1101 -> m3_1102  [key=0, style=solid];
m3_1101 -> m3_25  [key=2, style=dotted];
m3_1102 -> m3_1103  [key=0, style=solid];
m3_1102 -> m3_24  [key=2, style=dotted];
m3_1104 -> m3_1096  [key=0, style=bold, color=blue];
m3_2474 -> m3_2475  [key=0, style=solid];
m3_2475 -> m3_2476  [key=0, style=solid];
m3_2475 -> m3_916  [key=2, style=dotted];
m3_2475 -> m3_2477  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2475 -> m3_2478  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2475 -> m3_2479  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2476 -> m3_2477  [key=0, style=solid];
m3_2476 -> m3_25  [key=2, style=dotted];
m3_2477 -> m3_2478  [key=0, style=solid];
m3_2477 -> m3_25  [key=2, style=dotted];
m3_2478 -> m3_2479  [key=0, style=solid];
m3_2478 -> m3_25  [key=2, style=dotted];
m3_2479 -> m3_2480  [key=0, style=solid];
m3_2479 -> m3_25  [key=2, style=dotted];
m3_2480 -> m3_2474  [key=0, style=bold, color=blue];
m3_2523 -> m3_2524  [key=0, style=solid];
m3_2524 -> m3_2525  [key=0, style=solid];
m3_2524 -> m3_2530  [key=2, style=dotted];
m3_2525 -> m3_2526  [key=0, style=solid];
m3_2525 -> m3_16  [key=2, style=dotted];
m3_2525 -> m3_2527  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2526 -> m3_2527  [key=0, style=solid];
m3_2526 -> m3_17  [key=2, style=dotted];
m3_2527 -> m3_2528  [key=0, style=solid];
m3_2527 -> m3_24  [key=2, style=dotted];
m3_2528 -> m3_2529  [key=0, style=solid];
m3_2528 -> m3_25  [key=2, style=dotted];
m3_2528 -> m3_2528  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m3_2529 -> m3_2523  [key=0, style=bold, color=blue];
m3_1462 -> m3_1463  [key=0, style=solid];
m3_1463 -> m3_1464  [key=0, style=solid];
m3_1463 -> m3_1472  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1464 -> m3_1465  [key=0, style=solid];
m3_1464 -> m3_24  [key=2, style=dotted];
m3_1464 -> m3_1466  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_1464 -> m3_1467  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_1464 -> m3_1468  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_1464 -> m3_1469  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_1464 -> m3_1470  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_1464 -> m3_1471  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_1472 -> m3_1473  [key=0, style=solid];
m3_1472 -> m3_25  [key=2, style=dotted];
m3_1465 -> m3_1466  [key=0, style=solid];
m3_1465 -> m3_25  [key=2, style=dotted];
m3_1466 -> m3_1467  [key=0, style=solid];
m3_1466 -> m3_25  [key=2, style=dotted];
m3_1467 -> m3_1468  [key=0, style=solid];
m3_1467 -> m3_25  [key=2, style=dotted];
m3_1468 -> m3_1469  [key=0, style=solid];
m3_1468 -> m3_25  [key=2, style=dotted];
m3_1469 -> m3_1470  [key=0, style=solid];
m3_1469 -> m3_25  [key=2, style=dotted];
m3_1470 -> m3_1471  [key=0, style=solid];
m3_1470 -> m3_25  [key=2, style=dotted];
m3_1471 -> m3_1472  [key=0, style=solid];
m3_1471 -> m3_105  [key=2, style=dotted];
m3_1473 -> m3_1462  [key=0, style=bold, color=blue];
m3_1682 -> m3_1683  [key=0, style=solid];
m3_1683 -> m3_1684  [key=0, style=solid];
m3_1683 -> m3_1689  [key=2, style=dotted];
m3_1683 -> m3_1685  [key=1, style=dashed, color=darkseagreen4, label=uri];
m3_1683 -> m3_1687  [key=1, style=dashed, color=darkseagreen4, label=uri];
m3_1684 -> m3_1685  [key=0, style=solid];
m3_1684 -> m3_105  [key=2, style=dotted];
m3_1684 -> m3_1686  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1685 -> m3_1686  [key=0, style=solid];
m3_1685 -> m3_1690  [key=2, style=dotted];
m3_1685 -> m3_25  [key=2, style=dotted];
m3_1687 -> m3_1688  [key=0, style=solid];
m3_1687 -> m3_25  [key=2, style=dotted];
m3_1686 -> m3_1687  [key=0, style=solid];
m3_1686 -> m3_24  [key=2, style=dotted];
m3_1688 -> m3_1682  [key=0, style=bold, color=blue];
m3_3554 -> m3_3555  [key=0, style=solid];
m3_3555 -> m3_3556  [key=0, style=solid];
m3_3556 -> m3_3554  [key=0, style=bold, color=blue];
m3_4091 -> m3_4092  [key=0, style=solid];
m3_4092 -> m3_4093  [key=0, style=solid];
m3_4093 -> m3_4094  [key=0, style=solid];
m3_4093 -> m3_24  [key=2, style=dotted];
m3_4093 -> m3_4095  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_4094 -> m3_4095  [key=0, style=solid];
m3_4094 -> m3_25  [key=2, style=dotted];
m3_4095 -> m3_4096  [key=0, style=solid];
m3_4095 -> m3_25  [key=2, style=dotted];
m3_4096 -> m3_4091  [key=0, style=bold, color=blue];
m3_1160 -> m3_1161  [key=0, style=solid];
m3_1161 -> m3_1162  [key=0, style=solid];
m3_1161 -> m3_1164  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1162 -> m3_1163  [key=0, style=solid];
m3_1162 -> m3_351  [key=2, style=dotted];
m3_1162 -> m3_1164  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1164 -> m3_1165  [key=0, style=solid];
m3_1164 -> m3_350  [key=2, style=dotted];
m3_1164 -> m3_820  [key=2, style=dotted];
m3_1164 -> m3_1166  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1163 -> m3_1164  [key=0, style=solid];
m3_1165 -> m3_1166  [key=0, style=solid];
m3_1165 -> m3_25  [key=2, style=dotted];
m3_1166 -> m3_1167  [key=0, style=solid];
m3_1166 -> m3_25  [key=2, style=dotted];
m3_1167 -> m3_1160  [key=0, style=bold, color=blue];
m3_943 -> m3_944  [key=0, style=solid];
m3_944 -> m3_945  [key=0, style=solid];
m3_944 -> m3_934  [key=2, style=dotted];
m3_944 -> m3_946  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m3_944 -> m3_955  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m3_945 -> m3_946  [key=0, style=solid];
m3_945 -> m3_172  [key=2, style=dotted];
m3_945 -> m3_947  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m3_945 -> m3_950  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m3_946 -> m3_947  [key=0, style=solid];
m3_955 -> m3_956  [key=0, style=solid];
m3_955 -> m3_25  [key=2, style=dotted];
m3_947 -> m3_948  [key=0, style=solid];
m3_947 -> m3_105  [key=2, style=dotted];
m3_947 -> m3_953  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_950 -> m3_951  [key=0, style=solid];
m3_950 -> m3_895  [key=2, style=dotted];
m3_948 -> m3_949  [key=0, style=solid];
m3_948 -> m3_813  [key=2, style=dotted];
m3_948 -> m3_950  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_948 -> m3_951  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_953 -> m3_954  [key=0, style=solid];
m3_953 -> m3_916  [key=2, style=dotted];
m3_949 -> m3_950  [key=0, style=solid];
m3_949 -> m3_894  [key=2, style=dotted];
m3_951 -> m3_952  [key=0, style=solid];
m3_951 -> m3_896  [key=2, style=dotted];
m3_952 -> m3_953  [key=0, style=solid];
m3_952 -> m3_897  [key=2, style=dotted];
m3_954 -> m3_955  [key=0, style=solid];
m3_956 -> m3_943  [key=0, style=bold, color=blue];
m3_3372 -> m3_3373  [key=0, style=solid];
m3_3373 -> m3_3374  [key=0, style=solid];
m3_3373 -> m3_110  [key=2, style=dotted];
m3_3373 -> m3_3384  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3373 -> m3_3377  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3373 -> m3_3378  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3373 -> m3_3379  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3373 -> m3_3380  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3374 -> m3_3375  [key=0, style=solid];
m3_3374 -> m3_3384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_3374 -> m3_3385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_3377 -> m3_3378  [key=0, style=solid];
m3_3377 -> m3_25  [key=2, style=dotted];
m3_3378 -> m3_3379  [key=0, style=solid];
m3_3378 -> m3_25  [key=2, style=dotted];
m3_3379 -> m3_3380  [key=0, style=solid];
m3_3379 -> m3_25  [key=2, style=dotted];
m3_3380 -> m3_3381  [key=0, style=solid];
m3_3380 -> m3_25  [key=2, style=dotted];
m3_3375 -> m3_3376  [key=0, style=solid];
m3_3375 -> m3_3382  [key=2, style=dotted];
m3_3375 -> m3_151  [key=2, style=dotted];
m3_3375 -> m3_152  [key=2, style=dotted];
m3_3376 -> m3_3377  [key=0, style=solid];
m3_3376 -> m3_17  [key=2, style=dotted];
m3_3381 -> m3_3372  [key=0, style=bold, color=blue];
m3_2494 -> m3_2495  [key=0, style=solid];
m3_2495 -> m3_2496  [key=0, style=solid];
m3_2495 -> m3_351  [key=2, style=dotted];
m3_2495 -> m3_2497  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m3_2495 -> m3_2500  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m3_2496 -> m3_2497  [key=0, style=solid];
m3_2496 -> m3_1129  [key=2, style=dotted];
m3_2496 -> m3_518  [key=2, style=dotted];
m3_2497 -> m3_2498  [key=0, style=solid];
m3_2500 -> m3_2501  [key=0, style=solid];
m3_2500 -> m3_2505  [key=2, style=dotted];
m3_2500 -> m3_2502  [key=1, style=dashed, color=darkseagreen4, label=z];
m3_2500 -> m3_2503  [key=1, style=dashed, color=darkseagreen4, label=z];
m3_2498 -> m3_2499  [key=0, style=solid];
m3_2499 -> m3_2500  [key=0, style=solid];
m3_2499 -> m3_349  [key=2, style=dotted];
m3_2499 -> m3_350  [key=2, style=dotted];
m3_2501 -> m3_2502  [key=0, style=solid];
m3_2501 -> m3_25  [key=2, style=dotted];
m3_2502 -> m3_2503  [key=0, style=solid];
m3_2502 -> m3_25  [key=2, style=dotted];
m3_2503 -> m3_2504  [key=0, style=solid];
m3_2503 -> m3_25  [key=2, style=dotted];
m3_2504 -> m3_2494  [key=0, style=bold, color=blue];
m3_2088 -> m3_2089  [key=0, style=solid];
m3_2089 -> m3_2090  [key=0, style=solid];
m3_2089 -> m3_2091  [key=2, style=dotted];
m3_2090 -> m3_2088  [key=0, style=bold, color=blue];
m3_1022 -> m3_1023  [key=0, style=solid];
m3_1023 -> m3_1024  [key=0, style=solid];
m3_1023 -> m3_1032  [key=2, style=dotted];
m3_1023 -> m3_1025  [key=1, style=dashed, color=darkseagreen4, label=test];
m3_1023 -> m3_1026  [key=1, style=dashed, color=darkseagreen4, label=test];
m3_1023 -> m3_1029  [key=1, style=dashed, color=darkseagreen4, label=test];
m3_1023 -> m3_1030  [key=1, style=dashed, color=darkseagreen4, label=test];
m3_1024 -> m3_1025  [key=0, style=solid];
m3_1025 -> m3_1026  [key=0, style=solid];
m3_1026 -> m3_1027  [key=0, style=solid];
m3_1026 -> m3_105  [key=2, style=dotted];
m3_1026 -> m3_1028  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_1029 -> m3_1030  [key=0, style=solid];
m3_1029 -> m3_25  [key=2, style=dotted];
m3_1030 -> m3_1031  [key=0, style=solid];
m3_1030 -> m3_25  [key=2, style=dotted];
m3_1027 -> m3_1028  [key=0, style=solid];
m3_1027 -> m3_25  [key=2, style=dotted];
m3_1028 -> m3_1029  [key=0, style=solid];
m3_1028 -> m3_24  [key=2, style=dotted];
m3_1028 -> m3_1030  [key=1, style=dashed, color=darkseagreen4, label=test2];
m3_1031 -> m3_1022  [key=0, style=bold, color=blue];
m3_3428 -> m3_3429  [key=0, style=solid];
m3_3429 -> m3_3430  [key=0, style=solid];
m3_3429 -> m3_172  [key=2, style=dotted];
m3_3429 -> m3_1082  [key=2, style=dotted];
m3_3430 -> m3_3431  [key=0, style=solid];
m3_3430 -> m3_151  [key=2, style=dotted];
m3_3430 -> m3_174  [key=2, style=dotted];
m3_3430 -> m3_3434  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3431 -> m3_3432  [key=0, style=solid];
m3_3431 -> m3_445  [key=2, style=dotted];
m3_3431 -> m3_3433  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_3434 -> m3_3435  [key=0, style=solid];
m3_3434 -> m3_151  [key=2, style=dotted];
m3_3434 -> m3_272  [key=2, style=dotted];
m3_3434 -> m3_3436  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3434 -> m3_3437  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3432 -> m3_3433  [key=0, style=solid];
m3_3432 -> m3_899  [key=2, style=dotted];
m3_3432 -> m3_1662  [key=2, style=dotted];
m3_3432 -> m3_3439  [key=2, style=dotted];
m3_3432 -> m3_3440  [key=2, style=dotted];
m3_3433 -> m3_3434  [key=0, style=solid];
m3_3433 -> m3_899  [key=2, style=dotted];
m3_3433 -> m3_1662  [key=2, style=dotted];
m3_3433 -> m3_3439  [key=2, style=dotted];
m3_3433 -> m3_3440  [key=2, style=dotted];
m3_3435 -> m3_3436  [key=0, style=solid];
m3_3435 -> m3_25  [key=2, style=dotted];
m3_3436 -> m3_3437  [key=0, style=solid];
m3_3436 -> m3_1082  [key=2, style=dotted];
m3_3436 -> m3_25  [key=2, style=dotted];
m3_3437 -> m3_3438  [key=0, style=solid];
m3_3437 -> m3_1082  [key=2, style=dotted];
m3_3437 -> m3_25  [key=2, style=dotted];
m3_3438 -> m3_3428  [key=0, style=bold, color=blue];
m3_253 -> m3_254  [key=0, style=solid];
m3_253 -> m3_256  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m3_254 -> m3_255  [key=0, style=solid];
m3_254 -> m3_256  [key=0, style=solid];
m3_256 -> m3_257  [key=0, style=solid];
m3_256 -> m3_259  [key=2, style=dotted];
m3_255 -> m3_257  [key=0, style=solid];
m3_255 -> m3_258  [key=2, style=dotted];
m3_255 -> m3_148  [key=3, color=darkorchid, style=bold, label="method methodReturn int? ReadAsInt32Internal"];
m3_257 -> m3_253  [key=0, style=bold, color=blue];
m3_2250 -> m3_2251  [key=0, style=solid];
m3_2251 -> m3_2252  [key=0, style=solid];
m3_2251 -> m3_24  [key=2, style=dotted];
m3_2251 -> m3_2253  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m3_2251 -> m3_2254  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m3_2251 -> m3_2255  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m3_2251 -> m3_2256  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m3_2252 -> m3_2253  [key=0, style=solid];
m3_2252 -> m3_25  [key=2, style=dotted];
m3_2253 -> m3_2254  [key=0, style=solid];
m3_2253 -> m3_25  [key=2, style=dotted];
m3_2254 -> m3_2255  [key=0, style=solid];
m3_2254 -> m3_25  [key=2, style=dotted];
m3_2255 -> m3_2256  [key=0, style=solid];
m3_2255 -> m3_25  [key=2, style=dotted];
m3_2256 -> m3_2257  [key=0, style=solid];
m3_2256 -> m3_25  [key=2, style=dotted];
m3_2257 -> m3_2250  [key=0, style=bold, color=blue];
m3_4069 -> m3_4070  [key=0, style=solid];
m3_4070 -> m3_4071  [key=0, style=solid];
m3_4070 -> m3_2376  [key=2, style=dotted];
m3_4071 -> m3_4069  [key=0, style=bold, color=blue];
m3_4181 -> m3_4182  [key=0, style=solid];
m3_4182 -> m3_4183  [key=0, style=solid];
m3_4183 -> m3_4184  [key=0, style=solid];
m3_4184 -> m3_4181  [key=0, style=bold, color=blue];
m3_2611 -> m3_2612  [key=0, style=solid];
m3_2612 -> m3_2613  [key=0, style=solid];
m3_2613 -> m3_2614  [key=0, style=solid];
m3_2613 -> m3_349  [key=2, style=dotted];
m3_2613 -> m3_350  [key=2, style=dotted];
m3_2613 -> m3_2616  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2614 -> m3_2615  [key=0, style=solid];
m3_2616 -> m3_2617  [key=0, style=solid];
m3_2616 -> m3_2543  [key=2, style=dotted];
m3_2615 -> m3_2616  [key=0, style=solid];
m3_2615 -> m3_351  [key=2, style=dotted];
m3_2617 -> m3_2618  [key=0, style=solid];
m3_2617 -> m3_25  [key=2, style=dotted];
m3_2618 -> m3_2611  [key=0, style=bold, color=blue];
m3_2871 -> m3_2872  [key=0, style=solid];
m3_2871 -> m3_2873  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_2871 -> m3_2874  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_2872 -> m3_2873  [key=0, style=solid];
m3_2873 -> m3_2874  [key=0, style=solid];
m3_2874 -> m3_2875  [key=0, style=solid];
m3_2875 -> m3_2871  [key=0, style=bold, color=blue];
m3_2544 -> m3_2545  [key=0, style=solid];
m3_2545 -> m3_2546  [key=0, style=solid];
m3_2545 -> m3_24  [key=2, style=dotted];
m3_2546 -> m3_2547  [key=0, style=solid];
m3_2546 -> m3_2542  [key=2, style=dotted];
m3_2546 -> m3_934  [key=2, style=dotted];
m3_2546 -> m3_1090  [key=2, style=dotted];
m3_2546 -> m3_25  [key=2, style=dotted];
m3_2547 -> m3_2544  [key=0, style=bold, color=blue];
m3_2068 -> m3_2069  [key=0, style=solid];
m3_2069 -> m3_2068  [key=0, style=bold, color=blue];
m3_2174 -> m3_2175  [key=0, style=solid];
m3_2174 -> m3_2176  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2177  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2178  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2179  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2180  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2181  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2182  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2183  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2184  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2185  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2186  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2187  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2188  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2189  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2190  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2191  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2174 -> m3_2192  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2175 -> m3_2176  [key=0, style=solid];
m3_2175 -> m3_681  [key=2, style=dotted];
m3_2176 -> m3_2177  [key=0, style=solid];
m3_2176 -> m3_682  [key=2, style=dotted];
m3_2177 -> m3_2178  [key=0, style=solid];
m3_2177 -> m3_681  [key=2, style=dotted];
m3_2178 -> m3_2179  [key=0, style=solid];
m3_2178 -> m3_681  [key=2, style=dotted];
m3_2179 -> m3_2180  [key=0, style=solid];
m3_2179 -> m3_681  [key=2, style=dotted];
m3_2180 -> m3_2181  [key=0, style=solid];
m3_2180 -> m3_681  [key=2, style=dotted];
m3_2181 -> m3_2182  [key=0, style=solid];
m3_2181 -> m3_2194  [key=2, style=dotted];
m3_2182 -> m3_2183  [key=0, style=solid];
m3_2182 -> m3_2195  [key=2, style=dotted];
m3_2183 -> m3_2184  [key=0, style=solid];
m3_2183 -> m3_2196  [key=2, style=dotted];
m3_2184 -> m3_2185  [key=0, style=solid];
m3_2184 -> m3_2197  [key=2, style=dotted];
m3_2185 -> m3_2186  [key=0, style=solid];
m3_2185 -> m3_2198  [key=2, style=dotted];
m3_2186 -> m3_2187  [key=0, style=solid];
m3_2186 -> m3_2199  [key=2, style=dotted];
m3_2187 -> m3_2188  [key=0, style=solid];
m3_2187 -> m3_2200  [key=2, style=dotted];
m3_2188 -> m3_2189  [key=0, style=solid];
m3_2188 -> m3_2201  [key=2, style=dotted];
m3_2189 -> m3_2190  [key=0, style=solid];
m3_2189 -> m3_2202  [key=2, style=dotted];
m3_2190 -> m3_2191  [key=0, style=solid];
m3_2190 -> m3_2203  [key=2, style=dotted];
m3_2191 -> m3_2192  [key=0, style=solid];
m3_2191 -> m3_2204  [key=2, style=dotted];
m3_2192 -> m3_2193  [key=0, style=solid];
m3_2192 -> m3_2205  [key=2, style=dotted];
m3_2193 -> m3_2174  [key=0, style=bold, color=blue];
m3_871 -> m3_872  [key=0, style=solid];
m3_872 -> m3_873  [key=0, style=solid];
m3_872 -> m3_880  [key=2, style=dotted];
m3_872 -> m3_874  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_872 -> m3_875  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_872 -> m3_876  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_872 -> m3_877  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_873 -> m3_874  [key=0, style=solid];
m3_874 -> m3_875  [key=0, style=solid];
m3_875 -> m3_876  [key=0, style=solid];
m3_876 -> m3_877  [key=0, style=solid];
m3_877 -> m3_878  [key=0, style=solid];
m3_877 -> m3_850  [key=2, style=dotted];
m3_878 -> m3_879  [key=0, style=solid];
m3_878 -> m3_17  [key=2, style=dotted];
m3_879 -> m3_871  [key=0, style=bold, color=blue];
m3_4072 -> m3_4073  [key=0, style=solid];
m3_4073 -> m3_4074  [key=0, style=solid];
m3_4073 -> m3_2376  [key=2, style=dotted];
m3_4074 -> m3_4072  [key=0, style=bold, color=blue];
m3_2803 -> m3_2804  [key=0, style=solid];
m3_2804 -> m3_2805  [key=0, style=solid];
m3_2804 -> m3_2808  [key=2, style=dotted];
m3_2804 -> m3_1082  [key=2, style=dotted];
m3_2805 -> m3_2806  [key=0, style=solid];
m3_2805 -> m3_16  [key=2, style=dotted];
m3_2806 -> m3_2807  [key=0, style=solid];
m3_2806 -> m3_17  [key=2, style=dotted];
m3_2807 -> m3_2803  [key=0, style=bold, color=blue];
m3_124 -> m3_125  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_24  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_128  [key=2, style=dotted];
m3_127 -> m3_124  [key=0, style=bold, color=blue];
m3_591 -> m3_592  [key=0, style=solid];
m3_592 -> m3_593  [key=0, style=solid];
m3_592 -> m3_652  [key=2, style=dotted];
m3_592 -> m3_653  [key=2, style=dotted];
m3_592 -> m3_351  [key=2, style=dotted];
m3_592 -> m3_594  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_595  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_596  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_597  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_598  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_599  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_600  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_601  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_603  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_604  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_605  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_606  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_607  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_608  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_609  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_610  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_611  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_612  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_613  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_614  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_615  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_616  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_617  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_618  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_619  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_620  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_621  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_622  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_623  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_624  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_625  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_626  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_627  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_628  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_629  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_630  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_631  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_632  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_633  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_634  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_635  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_636  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_637  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_638  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_640  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_641  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_642  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_643  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_645  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_646  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_647  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_648  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_649  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_592 -> m3_650  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m3_593 -> m3_594  [key=0, style=solid];
m3_593 -> m3_515  [key=2, style=dotted];
m3_593 -> m3_595  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m3_594 -> m3_595  [key=0, style=solid];
m3_595 -> m3_596  [key=0, style=solid];
m3_595 -> m3_25  [key=2, style=dotted];
m3_596 -> m3_597  [key=0, style=solid];
m3_597 -> m3_598  [key=0, style=solid];
m3_597 -> m3_25  [key=2, style=dotted];
m3_598 -> m3_599  [key=0, style=solid];
m3_599 -> m3_600  [key=0, style=solid];
m3_599 -> m3_25  [key=2, style=dotted];
m3_600 -> m3_601  [key=0, style=solid];
m3_600 -> m3_516  [key=2, style=dotted];
m3_601 -> m3_602  [key=0, style=solid];
m3_601 -> m3_516  [key=2, style=dotted];
m3_601 -> m3_25  [key=2, style=dotted];
m3_603 -> m3_604  [key=0, style=solid];
m3_604 -> m3_605  [key=0, style=solid];
m3_604 -> m3_25  [key=2, style=dotted];
m3_605 -> m3_606  [key=0, style=solid];
m3_605 -> m3_211  [key=2, style=dotted];
m3_605 -> m3_518  [key=2, style=dotted];
m3_606 -> m3_607  [key=0, style=solid];
m3_606 -> m3_25  [key=2, style=dotted];
m3_607 -> m3_608  [key=0, style=solid];
m3_607 -> m3_519  [key=2, style=dotted];
m3_608 -> m3_609  [key=0, style=solid];
m3_608 -> m3_520  [key=2, style=dotted];
m3_608 -> m3_25  [key=2, style=dotted];
m3_609 -> m3_610  [key=0, style=solid];
m3_610 -> m3_611  [key=0, style=solid];
m3_610 -> m3_25  [key=2, style=dotted];
m3_611 -> m3_612  [key=0, style=solid];
m3_612 -> m3_613  [key=0, style=solid];
m3_612 -> m3_25  [key=2, style=dotted];
m3_613 -> m3_614  [key=0, style=solid];
m3_614 -> m3_615  [key=0, style=solid];
m3_614 -> m3_25  [key=2, style=dotted];
m3_615 -> m3_616  [key=0, style=solid];
m3_616 -> m3_617  [key=0, style=solid];
m3_616 -> m3_25  [key=2, style=dotted];
m3_617 -> m3_618  [key=0, style=solid];
m3_618 -> m3_619  [key=0, style=solid];
m3_618 -> m3_25  [key=2, style=dotted];
m3_619 -> m3_620  [key=0, style=solid];
m3_620 -> m3_621  [key=0, style=solid];
m3_620 -> m3_25  [key=2, style=dotted];
m3_621 -> m3_622  [key=0, style=solid];
m3_622 -> m3_623  [key=0, style=solid];
m3_622 -> m3_25  [key=2, style=dotted];
m3_623 -> m3_624  [key=0, style=solid];
m3_624 -> m3_625  [key=0, style=solid];
m3_624 -> m3_25  [key=2, style=dotted];
m3_625 -> m3_626  [key=0, style=solid];
m3_626 -> m3_627  [key=0, style=solid];
m3_626 -> m3_25  [key=2, style=dotted];
m3_627 -> m3_628  [key=0, style=solid];
m3_628 -> m3_629  [key=0, style=solid];
m3_628 -> m3_25  [key=2, style=dotted];
m3_629 -> m3_630  [key=0, style=solid];
m3_630 -> m3_631  [key=0, style=solid];
m3_630 -> m3_25  [key=2, style=dotted];
m3_631 -> m3_632  [key=0, style=solid];
m3_632 -> m3_633  [key=0, style=solid];
m3_632 -> m3_25  [key=2, style=dotted];
m3_633 -> m3_634  [key=0, style=solid];
m3_634 -> m3_635  [key=0, style=solid];
m3_634 -> m3_25  [key=2, style=dotted];
m3_635 -> m3_636  [key=0, style=solid];
m3_636 -> m3_637  [key=0, style=solid];
m3_636 -> m3_25  [key=2, style=dotted];
m3_637 -> m3_638  [key=0, style=solid];
m3_638 -> m3_639  [key=0, style=solid];
m3_638 -> m3_25  [key=2, style=dotted];
m3_640 -> m3_641  [key=0, style=solid];
m3_641 -> m3_642  [key=0, style=solid];
m3_641 -> m3_25  [key=2, style=dotted];
m3_642 -> m3_643  [key=0, style=solid];
m3_643 -> m3_644  [key=0, style=solid];
m3_643 -> m3_25  [key=2, style=dotted];
m3_645 -> m3_646  [key=0, style=solid];
m3_646 -> m3_647  [key=0, style=solid];
m3_646 -> m3_25  [key=2, style=dotted];
m3_647 -> m3_648  [key=0, style=solid];
m3_648 -> m3_649  [key=0, style=solid];
m3_648 -> m3_25  [key=2, style=dotted];
m3_649 -> m3_650  [key=0, style=solid];
m3_650 -> m3_651  [key=0, style=solid];
m3_650 -> m3_25  [key=2, style=dotted];
m3_602 -> m3_603  [key=0, style=solid];
m3_602 -> m3_517  [key=2, style=dotted];
m3_602 -> m3_604  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m3_639 -> m3_640  [key=0, style=solid];
m3_639 -> m3_521  [key=2, style=dotted];
m3_639 -> m3_641  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m3_644 -> m3_645  [key=0, style=solid];
m3_644 -> m3_522  [key=2, style=dotted];
m3_644 -> m3_646  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m3_651 -> m3_591  [key=0, style=bold, color=blue];
m3_1185 -> m3_1186  [key=0, style=solid];
m3_1186 -> m3_1187  [key=0, style=solid];
m3_1186 -> m3_1195  [key=2, style=dotted];
m3_1186 -> m3_16  [key=2, style=dotted];
m3_1186 -> m3_1189  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1186 -> m3_1190  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1187 -> m3_1188  [key=0, style=solid];
m3_1189 -> m3_1190  [key=0, style=solid];
m3_1189 -> m3_17  [key=2, style=dotted];
m3_1190 -> m3_1191  [key=0, style=solid];
m3_1190 -> m3_24  [key=2, style=dotted];
m3_1190 -> m3_1192  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1190 -> m3_1193  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1188 -> m3_1189  [key=0, style=solid];
m3_1191 -> m3_1192  [key=0, style=solid];
m3_1191 -> m3_25  [key=2, style=dotted];
m3_1192 -> m3_1193  [key=0, style=solid];
m3_1192 -> m3_25  [key=2, style=dotted];
m3_1193 -> m3_1194  [key=0, style=solid];
m3_1193 -> m3_25  [key=2, style=dotted];
m3_1194 -> m3_1185  [key=0, style=bold, color=blue];
m3_1474 -> m3_1475  [key=0, style=solid];
m3_1475 -> m3_1476  [key=0, style=solid];
m3_1476 -> m3_1477  [key=0, style=solid];
m3_1476 -> m3_24  [key=2, style=dotted];
m3_1477 -> m3_1474  [key=0, style=bold, color=blue];
m3_1641 -> m3_1642  [key=0, style=solid];
m3_1642 -> m3_1643  [key=0, style=solid];
m3_1643 -> m3_1644  [key=0, style=solid];
m3_1643 -> m3_151  [key=2, style=dotted];
m3_1643 -> m3_272  [key=2, style=dotted];
m3_1643 -> m3_1645  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1643 -> m3_1646  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1644 -> m3_1645  [key=0, style=solid];
m3_1644 -> m3_25  [key=2, style=dotted];
m3_1645 -> m3_1646  [key=0, style=solid];
m3_1645 -> m3_25  [key=2, style=dotted];
m3_1646 -> m3_1647  [key=0, style=solid];
m3_1646 -> m3_25  [key=2, style=dotted];
m3_1647 -> m3_1641  [key=0, style=bold, color=blue];
m3_2100 -> m3_2101  [key=0, style=solid];
m3_2101 -> m3_2102  [key=0, style=solid];
m3_2101 -> m3_2103  [key=2, style=dotted];
m3_2102 -> m3_2100  [key=0, style=bold, color=blue];
m3_2118 -> m3_2119  [key=0, style=solid];
m3_2119 -> m3_2120  [key=0, style=solid];
m3_2119 -> m3_2121  [key=2, style=dotted];
m3_2120 -> m3_2118  [key=0, style=bold, color=blue];
m3_4075 -> m3_4076  [key=0, style=solid];
m3_4076 -> m3_4077  [key=0, style=solid];
m3_4076 -> m3_2376  [key=2, style=dotted];
m3_4077 -> m3_4075  [key=0, style=bold, color=blue];
m3_3566 -> m3_3567  [key=0, style=solid];
m3_3567 -> m3_3568  [key=0, style=solid];
m3_3567 -> m3_3570  [key=2, style=dotted];
m3_3567 -> m3_151  [key=2, style=dotted];
m3_3567 -> m3_517  [key=2, style=dotted];
m3_3567 -> m3_174  [key=2, style=dotted];
m3_3568 -> m3_3569  [key=0, style=solid];
m3_3568 -> m3_17  [key=2, style=dotted];
m3_3569 -> m3_3566  [key=0, style=bold, color=blue];
m3_4140 -> m3_4141  [key=0, style=solid];
m3_4141 -> m3_4142  [key=0, style=solid];
m3_4141 -> m3_2543  [key=2, style=dotted];
m3_4142 -> m3_4143  [key=0, style=solid];
m3_4142 -> m3_4145  [key=2, style=dotted];
m3_4142 -> m3_1055  [key=2, style=dotted];
m3_4142 -> m3_3061  [key=2, style=dotted];
m3_4143 -> m3_4144  [key=0, style=solid];
m3_4144 -> m3_4140  [key=0, style=bold, color=blue];
m3_112 -> m3_113  [key=0, style=solid];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_36  [key=2, style=dotted];
m3_113 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_114 -> m3_112  [key=0, style=bold, color=blue];
m3_2142 -> m3_2143  [key=0, style=solid];
m3_2142 -> m3_2144  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2145  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2146  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2147  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2148  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2149  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2150  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2151  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2152  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2153  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2154  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2155  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2156  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2157  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2158  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2159  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2142 -> m3_2160  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_2143 -> m3_2144  [key=0, style=solid];
m3_2143 -> m3_695  [key=2, style=dotted];
m3_2144 -> m3_2145  [key=0, style=solid];
m3_2144 -> m3_696  [key=2, style=dotted];
m3_2145 -> m3_2146  [key=0, style=solid];
m3_2145 -> m3_697  [key=2, style=dotted];
m3_2146 -> m3_2147  [key=0, style=solid];
m3_2146 -> m3_697  [key=2, style=dotted];
m3_2147 -> m3_2148  [key=0, style=solid];
m3_2147 -> m3_697  [key=2, style=dotted];
m3_2148 -> m3_2149  [key=0, style=solid];
m3_2148 -> m3_697  [key=2, style=dotted];
m3_2149 -> m3_2150  [key=0, style=solid];
m3_2149 -> m3_2162  [key=2, style=dotted];
m3_2150 -> m3_2151  [key=0, style=solid];
m3_2150 -> m3_2163  [key=2, style=dotted];
m3_2151 -> m3_2152  [key=0, style=solid];
m3_2151 -> m3_2164  [key=2, style=dotted];
m3_2152 -> m3_2153  [key=0, style=solid];
m3_2152 -> m3_2165  [key=2, style=dotted];
m3_2153 -> m3_2154  [key=0, style=solid];
m3_2153 -> m3_2166  [key=2, style=dotted];
m3_2154 -> m3_2155  [key=0, style=solid];
m3_2154 -> m3_2167  [key=2, style=dotted];
m3_2155 -> m3_2156  [key=0, style=solid];
m3_2155 -> m3_2168  [key=2, style=dotted];
m3_2156 -> m3_2157  [key=0, style=solid];
m3_2156 -> m3_2169  [key=2, style=dotted];
m3_2157 -> m3_2158  [key=0, style=solid];
m3_2157 -> m3_2170  [key=2, style=dotted];
m3_2158 -> m3_2159  [key=0, style=solid];
m3_2158 -> m3_2171  [key=2, style=dotted];
m3_2159 -> m3_2160  [key=0, style=solid];
m3_2159 -> m3_2172  [key=2, style=dotted];
m3_2160 -> m3_2161  [key=0, style=solid];
m3_2160 -> m3_2173  [key=2, style=dotted];
m3_2161 -> m3_2142  [key=0, style=bold, color=blue];
m3_2700 -> m3_2701  [key=0, style=solid];
m3_2701 -> m3_2702  [key=0, style=solid];
m3_2701 -> m3_24  [key=2, style=dotted];
m3_2701 -> m3_2703  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_2702 -> m3_2703  [key=0, style=solid];
m3_2702 -> m3_25  [key=2, style=dotted];
m3_2703 -> m3_2704  [key=0, style=solid];
m3_2703 -> m3_25  [key=2, style=dotted];
m3_2704 -> m3_2700  [key=0, style=bold, color=blue];
m3_1909 -> m3_1910  [key=0, style=solid];
m3_1910 -> m3_1911  [key=0, style=solid];
m3_1910 -> m3_172  [key=2, style=dotted];
m3_1910 -> m3_1912  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_1910 -> m3_1913  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_1911 -> m3_1912  [key=0, style=solid];
m3_1911 -> m3_1226  [key=2, style=dotted];
m3_1911 -> m3_811  [key=2, style=dotted];
m3_1912 -> m3_1913  [key=0, style=solid];
m3_1912 -> m3_1226  [key=2, style=dotted];
m3_1912 -> m3_811  [key=2, style=dotted];
m3_1913 -> m3_1914  [key=0, style=solid];
m3_1913 -> m3_16  [key=2, style=dotted];
m3_1914 -> m3_1915  [key=0, style=solid];
m3_1914 -> m3_17  [key=2, style=dotted];
m3_1915 -> m3_1909  [key=0, style=bold, color=blue];
m3_1140 -> m3_1141  [key=0, style=solid];
m3_1141 -> m3_1142  [key=0, style=solid];
m3_1142 -> m3_1143  [key=0, style=solid];
m3_1142 -> m3_24  [key=2, style=dotted];
m3_1142 -> m3_1144  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1142 -> m3_1145  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1142 -> m3_1146  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1142 -> m3_1147  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1142 -> m3_1148  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1143 -> m3_1144  [key=0, style=solid];
m3_1143 -> m3_25  [key=2, style=dotted];
m3_1144 -> m3_1145  [key=0, style=solid];
m3_1144 -> m3_25  [key=2, style=dotted];
m3_1145 -> m3_1146  [key=0, style=solid];
m3_1145 -> m3_25  [key=2, style=dotted];
m3_1146 -> m3_1147  [key=0, style=solid];
m3_1146 -> m3_25  [key=2, style=dotted];
m3_1147 -> m3_1148  [key=0, style=solid];
m3_1147 -> m3_25  [key=2, style=dotted];
m3_1148 -> m3_1149  [key=0, style=solid];
m3_1148 -> m3_25  [key=2, style=dotted];
m3_1149 -> m3_1140  [key=0, style=bold, color=blue];
m3_129 -> m3_130  [key=0, style=solid];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_36  [key=2, style=dotted];
m3_130 -> m3_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_131 -> m3_129  [key=0, style=bold, color=blue];
m3_454 -> m3_455  [key=0, style=solid];
m3_455 -> m3_456  [key=0, style=solid];
m3_455 -> m3_351  [key=2, style=dotted];
m3_455 -> m3_457  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_458  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_459  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_460  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_461  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_462  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_463  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_464  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_466  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_467  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_468  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_469  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_470  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_471  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_472  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_473  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_474  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_475  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_476  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_477  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_478  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_479  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_480  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_481  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_482  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_483  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_484  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_485  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_486  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_487  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_488  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_489  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_490  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_491  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_492  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_493  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_494  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_495  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_496  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_497  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_498  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_499  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_500  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_501  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_503  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_504  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_505  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_506  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_508  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_509  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_510  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_511  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_512  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_455 -> m3_513  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_456 -> m3_457  [key=0, style=solid];
m3_456 -> m3_515  [key=2, style=dotted];
m3_456 -> m3_458  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m3_457 -> m3_458  [key=0, style=solid];
m3_458 -> m3_459  [key=0, style=solid];
m3_458 -> m3_25  [key=2, style=dotted];
m3_459 -> m3_460  [key=0, style=solid];
m3_460 -> m3_461  [key=0, style=solid];
m3_460 -> m3_25  [key=2, style=dotted];
m3_461 -> m3_462  [key=0, style=solid];
m3_462 -> m3_463  [key=0, style=solid];
m3_462 -> m3_25  [key=2, style=dotted];
m3_463 -> m3_464  [key=0, style=solid];
m3_463 -> m3_516  [key=2, style=dotted];
m3_464 -> m3_465  [key=0, style=solid];
m3_464 -> m3_516  [key=2, style=dotted];
m3_464 -> m3_25  [key=2, style=dotted];
m3_466 -> m3_467  [key=0, style=solid];
m3_467 -> m3_468  [key=0, style=solid];
m3_467 -> m3_25  [key=2, style=dotted];
m3_468 -> m3_469  [key=0, style=solid];
m3_468 -> m3_211  [key=2, style=dotted];
m3_468 -> m3_518  [key=2, style=dotted];
m3_469 -> m3_470  [key=0, style=solid];
m3_469 -> m3_25  [key=2, style=dotted];
m3_470 -> m3_471  [key=0, style=solid];
m3_470 -> m3_519  [key=2, style=dotted];
m3_471 -> m3_472  [key=0, style=solid];
m3_471 -> m3_520  [key=2, style=dotted];
m3_471 -> m3_25  [key=2, style=dotted];
m3_472 -> m3_473  [key=0, style=solid];
m3_473 -> m3_474  [key=0, style=solid];
m3_473 -> m3_25  [key=2, style=dotted];
m3_474 -> m3_475  [key=0, style=solid];
m3_475 -> m3_476  [key=0, style=solid];
m3_475 -> m3_25  [key=2, style=dotted];
m3_476 -> m3_477  [key=0, style=solid];
m3_477 -> m3_478  [key=0, style=solid];
m3_477 -> m3_25  [key=2, style=dotted];
m3_478 -> m3_479  [key=0, style=solid];
m3_479 -> m3_480  [key=0, style=solid];
m3_479 -> m3_25  [key=2, style=dotted];
m3_480 -> m3_481  [key=0, style=solid];
m3_481 -> m3_482  [key=0, style=solid];
m3_481 -> m3_25  [key=2, style=dotted];
m3_482 -> m3_483  [key=0, style=solid];
m3_483 -> m3_484  [key=0, style=solid];
m3_483 -> m3_25  [key=2, style=dotted];
m3_484 -> m3_485  [key=0, style=solid];
m3_485 -> m3_486  [key=0, style=solid];
m3_485 -> m3_25  [key=2, style=dotted];
m3_486 -> m3_487  [key=0, style=solid];
m3_487 -> m3_488  [key=0, style=solid];
m3_487 -> m3_25  [key=2, style=dotted];
m3_488 -> m3_489  [key=0, style=solid];
m3_489 -> m3_490  [key=0, style=solid];
m3_489 -> m3_25  [key=2, style=dotted];
m3_490 -> m3_491  [key=0, style=solid];
m3_491 -> m3_492  [key=0, style=solid];
m3_491 -> m3_25  [key=2, style=dotted];
m3_492 -> m3_493  [key=0, style=solid];
m3_493 -> m3_494  [key=0, style=solid];
m3_493 -> m3_25  [key=2, style=dotted];
m3_494 -> m3_495  [key=0, style=solid];
m3_495 -> m3_496  [key=0, style=solid];
m3_495 -> m3_25  [key=2, style=dotted];
m3_496 -> m3_497  [key=0, style=solid];
m3_497 -> m3_498  [key=0, style=solid];
m3_497 -> m3_25  [key=2, style=dotted];
m3_498 -> m3_499  [key=0, style=solid];
m3_499 -> m3_500  [key=0, style=solid];
m3_499 -> m3_25  [key=2, style=dotted];
m3_500 -> m3_501  [key=0, style=solid];
m3_501 -> m3_502  [key=0, style=solid];
m3_501 -> m3_25  [key=2, style=dotted];
m3_503 -> m3_504  [key=0, style=solid];
m3_504 -> m3_505  [key=0, style=solid];
m3_504 -> m3_25  [key=2, style=dotted];
m3_505 -> m3_506  [key=0, style=solid];
m3_506 -> m3_507  [key=0, style=solid];
m3_506 -> m3_25  [key=2, style=dotted];
m3_508 -> m3_509  [key=0, style=solid];
m3_509 -> m3_510  [key=0, style=solid];
m3_509 -> m3_25  [key=2, style=dotted];
m3_510 -> m3_511  [key=0, style=solid];
m3_511 -> m3_512  [key=0, style=solid];
m3_511 -> m3_25  [key=2, style=dotted];
m3_512 -> m3_513  [key=0, style=solid];
m3_513 -> m3_514  [key=0, style=solid];
m3_513 -> m3_25  [key=2, style=dotted];
m3_465 -> m3_466  [key=0, style=solid];
m3_465 -> m3_517  [key=2, style=dotted];
m3_465 -> m3_467  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m3_502 -> m3_503  [key=0, style=solid];
m3_502 -> m3_521  [key=2, style=dotted];
m3_502 -> m3_504  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m3_507 -> m3_508  [key=0, style=solid];
m3_507 -> m3_522  [key=2, style=dotted];
m3_507 -> m3_509  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m3_514 -> m3_454  [key=0, style=bold, color=blue];
m3_2797 -> m3_2798  [key=0, style=solid];
m3_2798 -> m3_2799  [key=0, style=solid];
m3_2798 -> m3_2802  [key=2, style=dotted];
m3_2799 -> m3_2800  [key=0, style=solid];
m3_2799 -> m3_105  [key=2, style=dotted];
m3_2800 -> m3_2801  [key=0, style=solid];
m3_2800 -> m3_25  [key=2, style=dotted];
m3_2801 -> m3_2797  [key=0, style=bold, color=blue];
m3_94 -> m3_95  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_104  [key=2, style=dotted];
m3_95 -> m3_99  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m3_95 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m3_95 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m3_95 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_105  [key=2, style=dotted];
m3_96 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_25  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_25  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_25  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_25  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_17  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_24  [key=2, style=dotted];
m3_98 -> m3_100  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m3_98 -> m3_101  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m3_98 -> m3_102  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m3_103 -> m3_94  [key=0, style=bold, color=blue];
m3_3911 -> m3_3912  [key=0, style=solid];
m3_3912 -> m3_3913  [key=0, style=solid];
m3_3912 -> m3_3883  [key=2, style=dotted];
m3_3913 -> m3_3911  [key=0, style=bold, color=blue];
m3_1859 -> m3_1860  [key=0, style=solid];
m3_1860 -> m3_1861  [key=0, style=solid];
m3_1860 -> m3_36  [key=2, style=dotted];
m3_1860 -> m3_1862  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1861 -> m3_1859  [key=0, style=bold, color=blue];
m3_4167 -> m3_4168  [key=0, style=solid];
m3_4168 -> m3_4169  [key=0, style=solid];
m3_4169 -> m3_4167  [key=0, style=bold, color=blue];
m3_3917 -> m3_3918  [key=0, style=solid];
m3_3918 -> m3_3919  [key=0, style=solid];
m3_3918 -> m3_3883  [key=2, style=dotted];
m3_3919 -> m3_3917  [key=0, style=bold, color=blue];
m3_1119 -> m3_1120  [key=0, style=solid];
m3_1120 -> m3_1121  [key=0, style=solid];
m3_1120 -> m3_934  [key=2, style=dotted];
m3_1120 -> m3_1127  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1121 -> m3_1122  [key=0, style=solid];
m3_1121 -> m3_1124  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1121 -> m3_1126  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1127 -> m3_1128  [key=0, style=solid];
m3_1127 -> m3_25  [key=2, style=dotted];
m3_1122 -> m3_1123  [key=0, style=solid];
m3_1122 -> m3_151  [key=2, style=dotted];
m3_1122 -> m3_1124  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_1122 -> m3_1126  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_1124 -> m3_1125  [key=0, style=solid];
m3_1124 -> m3_152  [key=2, style=dotted];
m3_1124 -> m3_1126  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1126 -> m3_1127  [key=0, style=solid];
m3_1126 -> m3_1130  [key=2, style=dotted];
m3_1126 -> m3_1126  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1123 -> m3_1124  [key=0, style=solid];
m3_1123 -> m3_1129  [key=2, style=dotted];
m3_1123 -> m3_298  [key=2, style=dotted];
m3_1125 -> m3_1126  [key=0, style=solid];
m3_1125 -> m3_25  [key=2, style=dotted];
m3_1128 -> m3_1119  [key=0, style=bold, color=blue];
m3_2092 -> m3_2093  [key=0, style=solid];
m3_2093 -> m3_2094  [key=0, style=solid];
m3_2093 -> m3_2095  [key=2, style=dotted];
m3_2094 -> m3_2092  [key=0, style=bold, color=blue];
m3_2734 -> m3_2735  [key=0, style=solid];
m3_2735 -> m3_2736  [key=0, style=solid];
m3_2735 -> m3_36  [key=2, style=dotted];
m3_2735 -> m3_2737  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2736 -> m3_2734  [key=0, style=bold, color=blue];
m3_3869 -> m3_3870  [key=0, style=solid];
m3_3870 -> m3_3871  [key=0, style=solid];
m3_3871 -> m3_3869  [key=0, style=bold, color=blue];
m3_1630 -> m3_1631  [key=0, style=solid];
m3_1631 -> m3_1632  [key=0, style=solid];
m3_1632 -> m3_1630  [key=0, style=bold, color=blue];
m3_1883 -> m3_1884  [key=0, style=solid];
m3_1884 -> m3_1885  [key=0, style=solid];
m3_1884 -> m3_1893  [key=2, style=dotted];
m3_1884 -> m3_1888  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_1885 -> m3_1886  [key=0, style=solid];
m3_1885 -> m3_16  [key=2, style=dotted];
m3_1885 -> m3_1887  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1888 -> m3_1889  [key=0, style=solid];
m3_1888 -> m3_25  [key=2, style=dotted];
m3_1888 -> m3_1888  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_1888 -> m3_1890  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_1886 -> m3_1887  [key=0, style=solid];
m3_1886 -> m3_17  [key=2, style=dotted];
m3_1887 -> m3_1888  [key=0, style=solid];
m3_1887 -> m3_24  [key=2, style=dotted];
m3_1889 -> m3_1890  [key=0, style=solid];
m3_1889 -> m3_25  [key=2, style=dotted];
m3_1890 -> m3_1891  [key=0, style=solid];
m3_1890 -> m3_25  [key=2, style=dotted];
m3_1890 -> m3_1890  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_1891 -> m3_1892  [key=0, style=solid];
m3_1891 -> m3_25  [key=2, style=dotted];
m3_1892 -> m3_1883  [key=0, style=bold, color=blue];
m3_1757 -> m3_1758  [key=0, style=solid];
m3_1758 -> m3_1759  [key=0, style=solid];
m3_1758 -> m3_1762  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1759 -> m3_1760  [key=0, style=solid];
m3_1759 -> m3_36  [key=2, style=dotted];
m3_1759 -> m3_1761  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1760 -> m3_1757  [key=0, style=bold, color=blue];
m3_670 -> m3_671  [key=0, style=solid];
m3_671 -> m3_672  [key=0, style=solid];
m3_672 -> m3_670  [key=0, style=bold, color=blue];
m3_2750 -> m3_2751  [key=0, style=solid];
m3_2751 -> m3_2752  [key=0, style=solid];
m3_2752 -> m3_2753  [key=0, style=solid];
m3_2752 -> m3_24  [key=2, style=dotted];
m3_2752 -> m3_2754  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m3_2752 -> m3_2755  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m3_2753 -> m3_2754  [key=0, style=solid];
m3_2753 -> m3_25  [key=2, style=dotted];
m3_2754 -> m3_2755  [key=0, style=solid];
m3_2754 -> m3_25  [key=2, style=dotted];
m3_2755 -> m3_2756  [key=0, style=solid];
m3_2755 -> m3_25  [key=2, style=dotted];
m3_2756 -> m3_2750  [key=0, style=bold, color=blue];
m3_2598 -> m3_2599  [key=0, style=solid];
m3_2599 -> m3_2600  [key=0, style=solid];
m3_2600 -> m3_2601  [key=0, style=solid];
m3_2600 -> m3_349  [key=2, style=dotted];
m3_2600 -> m3_350  [key=2, style=dotted];
m3_2600 -> m3_2603  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2601 -> m3_2602  [key=0, style=solid];
m3_2603 -> m3_2604  [key=0, style=solid];
m3_2603 -> m3_2543  [key=2, style=dotted];
m3_2602 -> m3_2603  [key=0, style=solid];
m3_2602 -> m3_351  [key=2, style=dotted];
m3_2604 -> m3_2605  [key=0, style=solid];
m3_2604 -> m3_25  [key=2, style=dotted];
m3_2605 -> m3_2598  [key=0, style=bold, color=blue];
m3_3186 -> m3_3187  [key=0, style=solid];
m3_3187 -> m3_3188  [key=0, style=solid];
m3_3187 -> m3_24  [key=2, style=dotted];
m3_3188 -> m3_3189  [key=0, style=solid];
m3_3188 -> m3_128  [key=2, style=dotted];
m3_3189 -> m3_3190  [key=0, style=solid];
m3_3189 -> m3_24  [key=2, style=dotted];
m3_3190 -> m3_3191  [key=0, style=solid];
m3_3190 -> m3_128  [key=2, style=dotted];
m3_3191 -> m3_3192  [key=0, style=solid];
m3_3191 -> m3_24  [key=2, style=dotted];
m3_3192 -> m3_3193  [key=0, style=solid];
m3_3192 -> m3_128  [key=2, style=dotted];
m3_3193 -> m3_3194  [key=0, style=solid];
m3_3193 -> m3_24  [key=2, style=dotted];
m3_3194 -> m3_3195  [key=0, style=solid];
m3_3194 -> m3_128  [key=2, style=dotted];
m3_3195 -> m3_3196  [key=0, style=solid];
m3_3195 -> m3_24  [key=2, style=dotted];
m3_3196 -> m3_3197  [key=0, style=solid];
m3_3196 -> m3_128  [key=2, style=dotted];
m3_3197 -> m3_3198  [key=0, style=solid];
m3_3197 -> m3_24  [key=2, style=dotted];
m3_3198 -> m3_3199  [key=0, style=solid];
m3_3198 -> m3_128  [key=2, style=dotted];
m3_3199 -> m3_3200  [key=0, style=solid];
m3_3199 -> m3_24  [key=2, style=dotted];
m3_3200 -> m3_3201  [key=0, style=solid];
m3_3200 -> m3_128  [key=2, style=dotted];
m3_3201 -> m3_3186  [key=0, style=bold, color=blue];
m3_2641 -> m3_2642  [key=0, style=solid];
m3_2642 -> m3_2643  [key=0, style=solid];
m3_2643 -> m3_2641  [key=0, style=bold, color=blue];
m3_1344 -> m3_1345  [key=0, style=solid];
m3_1345 -> m3_1346  [key=0, style=solid];
m3_1345 -> m3_36  [key=2, style=dotted];
m3_1345 -> m3_1347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1346 -> m3_1344  [key=0, style=bold, color=blue];
m3_2879 -> m3_2880  [key=0, style=solid];
m3_2880 -> m3_2881  [key=0, style=solid];
m3_2881 -> m3_2879  [key=0, style=bold, color=blue];
m3_4114 -> m3_4115  [key=0, style=solid];
m3_4115 -> m3_4116  [key=0, style=solid];
m3_4116 -> m3_4114  [key=0, style=bold, color=blue];
m3_828 -> m3_829  [key=0, style=solid];
m3_829 -> m3_830  [key=0, style=solid];
m3_829 -> m3_832  [key=2, style=dotted];
m3_830 -> m3_831  [key=0, style=solid];
m3_830 -> m3_809  [key=2, style=dotted];
m3_830 -> m3_833  [key=2, style=dotted];
m3_831 -> m3_828  [key=0, style=bold, color=blue];
m3_1372 -> m3_1373  [key=0, style=solid];
m3_1373 -> m3_1374  [key=0, style=solid];
m3_1374 -> m3_1375  [key=0, style=solid];
m3_1374 -> m3_24  [key=2, style=dotted];
m3_1374 -> m3_1376  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m3_1374 -> m3_1377  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m3_1375 -> m3_1376  [key=0, style=solid];
m3_1375 -> m3_25  [key=2, style=dotted];
m3_1376 -> m3_1377  [key=0, style=solid];
m3_1376 -> m3_1379  [key=2, style=dotted];
m3_1376 -> m3_25  [key=2, style=dotted];
m3_1377 -> m3_1378  [key=0, style=solid];
m3_1377 -> m3_25  [key=2, style=dotted];
m3_1378 -> m3_1372  [key=0, style=bold, color=blue];
m3_2761 -> m3_2762  [key=0, style=solid];
m3_2762 -> m3_2763  [key=0, style=solid];
m3_2763 -> m3_2761  [key=0, style=bold, color=blue];
m3_907 -> m3_908  [key=0, style=solid];
m3_908 -> m3_909  [key=0, style=solid];
m3_908 -> m3_915  [key=2, style=dotted];
m3_908 -> m3_911  [key=1, style=dashed, color=darkseagreen4, label=store];
m3_908 -> m3_912  [key=1, style=dashed, color=darkseagreen4, label=store];
m3_909 -> m3_910  [key=0, style=solid];
m3_909 -> m3_105  [key=2, style=dotted];
m3_909 -> m3_913  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_911 -> m3_912  [key=0, style=solid];
m3_911 -> m3_25  [key=2, style=dotted];
m3_912 -> m3_913  [key=0, style=solid];
m3_912 -> m3_25  [key=2, style=dotted];
m3_910 -> m3_911  [key=0, style=solid];
m3_910 -> m3_916  [key=2, style=dotted];
m3_910 -> m3_912  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m3_913 -> m3_914  [key=0, style=solid];
m3_913 -> m3_917  [key=2, style=dotted];
m3_914 -> m3_907  [key=0, style=bold, color=blue];
m3_1916 -> m3_1917  [key=0, style=solid];
m3_1917 -> m3_1918  [key=0, style=solid];
m3_1917 -> m3_172  [key=2, style=dotted];
m3_1917 -> m3_1919  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_1917 -> m3_1920  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_1918 -> m3_1919  [key=0, style=solid];
m3_1918 -> m3_1493  [key=2, style=dotted];
m3_1918 -> m3_811  [key=2, style=dotted];
m3_1919 -> m3_1920  [key=0, style=solid];
m3_1919 -> m3_1493  [key=2, style=dotted];
m3_1919 -> m3_811  [key=2, style=dotted];
m3_1920 -> m3_1921  [key=0, style=solid];
m3_1920 -> m3_16  [key=2, style=dotted];
m3_1921 -> m3_1922  [key=0, style=solid];
m3_1921 -> m3_17  [key=2, style=dotted];
m3_1922 -> m3_1916  [key=0, style=bold, color=blue];
m3_2567 -> m3_2568  [key=0, style=solid];
m3_2568 -> m3_2569  [key=0, style=solid];
m3_2568 -> m3_2588  [key=2, style=dotted];
m3_2568 -> m3_2570  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_2568 -> m3_2571  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_2568 -> m3_2572  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_2568 -> m3_2573  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_2568 -> m3_2574  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_2568 -> m3_2578  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_2568 -> m3_2580  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_2568 -> m3_2584  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_2568 -> m3_2586  [key=1, style=dashed, color=darkseagreen4, label=expando];
m3_2569 -> m3_2570  [key=0, style=solid];
m3_2570 -> m3_2571  [key=0, style=solid];
m3_2571 -> m3_2572  [key=0, style=solid];
m3_2571 -> m3_2588  [key=2, style=dotted];
m3_2572 -> m3_2573  [key=0, style=solid];
m3_2573 -> m3_2574  [key=0, style=solid];
m3_2573 -> m3_1082  [key=2, style=dotted];
m3_2574 -> m3_2575  [key=0, style=solid];
m3_2574 -> m3_2589  [key=2, style=dotted];
m3_2574 -> m3_2576  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2578 -> m3_2579  [key=0, style=solid];
m3_2578 -> m3_25  [key=2, style=dotted];
m3_2580 -> m3_2581  [key=0, style=solid];
m3_2580 -> m3_25  [key=2, style=dotted];
m3_2584 -> m3_2585  [key=0, style=solid];
m3_2584 -> m3_25  [key=2, style=dotted];
m3_2586 -> m3_2587  [key=0, style=solid];
m3_2586 -> m3_25  [key=2, style=dotted];
m3_2575 -> m3_2576  [key=0, style=solid];
m3_2575 -> m3_17  [key=2, style=dotted];
m3_2576 -> m3_2577  [key=0, style=solid];
m3_2576 -> m3_24  [key=2, style=dotted];
m3_2576 -> m3_2578  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_2576 -> m3_2579  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_2576 -> m3_2580  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_2576 -> m3_2581  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_2576 -> m3_2582  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m3_2577 -> m3_2578  [key=0, style=solid];
m3_2577 -> m3_725  [key=2, style=dotted];
m3_2579 -> m3_2580  [key=0, style=solid];
m3_2579 -> m3_725  [key=2, style=dotted];
m3_2581 -> m3_2582  [key=0, style=solid];
m3_2581 -> m3_725  [key=2, style=dotted];
m3_2582 -> m3_2583  [key=0, style=solid];
m3_2582 -> m3_2584  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_2582 -> m3_2585  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_2582 -> m3_2586  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_2583 -> m3_2584  [key=0, style=solid];
m3_2583 -> m3_725  [key=2, style=dotted];
m3_2585 -> m3_2586  [key=0, style=solid];
m3_2585 -> m3_725  [key=2, style=dotted];
m3_2587 -> m3_2567  [key=0, style=bold, color=blue];
m3_3128 -> m3_3129  [key=0, style=solid];
m3_3129 -> m3_3130  [key=0, style=solid];
m3_3129 -> m3_36  [key=2, style=dotted];
m3_3129 -> m3_3131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3130 -> m3_3128  [key=0, style=bold, color=blue];
m3_1999 -> m3_2000  [key=0, style=solid];
m3_2000 -> m3_2001  [key=0, style=solid];
m3_2001 -> m3_2002  [key=0, style=solid];
m3_2001 -> m3_24  [key=2, style=dotted];
m3_2001 -> m3_2003  [key=1, style=dashed, color=darkseagreen4, label=dic];
m3_2001 -> m3_2004  [key=1, style=dashed, color=darkseagreen4, label=dic];
m3_2001 -> m3_2005  [key=1, style=dashed, color=darkseagreen4, label=dic];
m3_2002 -> m3_2003  [key=0, style=solid];
m3_2002 -> m3_25  [key=2, style=dotted];
m3_2003 -> m3_2004  [key=0, style=solid];
m3_2003 -> m3_25  [key=2, style=dotted];
m3_2004 -> m3_2005  [key=0, style=solid];
m3_2004 -> m3_25  [key=2, style=dotted];
m3_2005 -> m3_2006  [key=0, style=solid];
m3_2005 -> m3_25  [key=2, style=dotted];
m3_2006 -> m3_1999  [key=0, style=bold, color=blue];
m3_1750 -> m3_1751  [key=0, style=solid];
m3_1751 -> m3_1752  [key=0, style=solid];
m3_1751 -> m3_24  [key=2, style=dotted];
m3_1751 -> m3_1753  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_1751 -> m3_1754  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_1751 -> m3_1755  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_1752 -> m3_1753  [key=0, style=solid];
m3_1752 -> m3_25  [key=2, style=dotted];
m3_1753 -> m3_1754  [key=0, style=solid];
m3_1753 -> m3_25  [key=2, style=dotted];
m3_1754 -> m3_1755  [key=0, style=solid];
m3_1754 -> m3_25  [key=2, style=dotted];
m3_1755 -> m3_1756  [key=0, style=solid];
m3_1755 -> m3_25  [key=2, style=dotted];
m3_1756 -> m3_1750  [key=0, style=bold, color=blue];
m3_2876 -> m3_2877  [key=0, style=solid];
m3_2877 -> m3_2878  [key=0, style=solid];
m3_2878 -> m3_2876  [key=0, style=bold, color=blue];
m3_75 -> m3_76  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_24  [key=2, style=dotted];
m3_76 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_90  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_76 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_77 -> m3_78  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_25  [key=2, style=dotted];
m3_78 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_25  [key=2, style=dotted];
m3_79 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_25  [key=2, style=dotted];
m3_80 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_25  [key=2, style=dotted];
m3_81 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_25  [key=2, style=dotted];
m3_82 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_25  [key=2, style=dotted];
m3_83 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_25  [key=2, style=dotted];
m3_84 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_84 -> m3_305  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonContainerType value"];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_25  [key=2, style=dotted];
m3_85 -> m3_85  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_25  [key=2, style=dotted];
m3_86 -> m3_86  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_25  [key=2, style=dotted];
m3_87 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_25  [key=2, style=dotted];
m3_88 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_25  [key=2, style=dotted];
m3_89 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_25  [key=2, style=dotted];
m3_90 -> m3_90  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_25  [key=2, style=dotted];
m3_91 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_25  [key=2, style=dotted];
m3_92 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_93 -> m3_75  [key=0, style=bold, color=blue];
m3_2842 -> m3_2843  [key=0, style=solid];
m3_2843 -> m3_2844  [key=0, style=solid];
m3_2843 -> m3_2376  [key=2, style=dotted];
m3_2844 -> m3_2842  [key=0, style=bold, color=blue];
m3_3322 -> m3_3323  [key=0, style=solid];
m3_3323 -> m3_3324  [key=0, style=solid];
m3_3323 -> m3_813  [key=2, style=dotted];
m3_3323 -> m3_3328  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_3324 -> m3_3325  [key=0, style=solid];
m3_3324 -> m3_3335  [key=2, style=dotted];
m3_3324 -> m3_3326  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_3324 -> m3_3327  [key=1, style=dashed, color=darkseagreen4, label=writer];
m3_3328 -> m3_3329  [key=0, style=solid];
m3_3328 -> m3_896  [key=2, style=dotted];
m3_3325 -> m3_3326  [key=0, style=solid];
m3_3325 -> m3_3336  [key=2, style=dotted];
m3_3326 -> m3_3327  [key=0, style=solid];
m3_3326 -> m3_3337  [key=2, style=dotted];
m3_3327 -> m3_3328  [key=0, style=solid];
m3_3327 -> m3_3338  [key=2, style=dotted];
m3_3329 -> m3_3330  [key=0, style=solid];
m3_3329 -> m3_3339  [key=2, style=dotted];
m3_3329 -> m3_1055  [key=2, style=dotted];
m3_3330 -> m3_3331  [key=0, style=solid];
m3_3330 -> m3_3340  [key=2, style=dotted];
m3_3330 -> m3_3333  [key=1, style=dashed, color=darkseagreen4, label=a];
m3_3331 -> m3_3332  [key=0, style=solid];
m3_3333 -> m3_3334  [key=0, style=solid];
m3_3333 -> m3_749  [key=2, style=dotted];
m3_3333 -> m3_17  [key=2, style=dotted];
m3_3332 -> m3_3333  [key=0, style=solid];
m3_3332 -> m3_353  [key=2, style=dotted];
m3_3332 -> m3_25  [key=2, style=dotted];
m3_3334 -> m3_3322  [key=0, style=bold, color=blue];
m3_1105 -> m3_1106  [key=0, style=solid];
m3_1106 -> m3_1107  [key=0, style=solid];
m3_1106 -> m3_933  [key=2, style=dotted];
m3_1106 -> m3_1109  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1107 -> m3_1108  [key=0, style=solid];
m3_1107 -> m3_105  [key=2, style=dotted];
m3_1107 -> m3_1109  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1109 -> m3_1110  [key=0, style=solid];
m3_1109 -> m3_1118  [key=2, style=dotted];
m3_1109 -> m3_1109  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1109 -> m3_1111  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1109 -> m3_1112  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1109 -> m3_1113  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1109 -> m3_1114  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1109 -> m3_1115  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1109 -> m3_1116  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m3_1108 -> m3_1109  [key=0, style=solid];
m3_1108 -> m3_25  [key=2, style=dotted];
m3_1110 -> m3_1111  [key=0, style=solid];
m3_1110 -> m3_25  [key=2, style=dotted];
m3_1111 -> m3_1112  [key=0, style=solid];
m3_1111 -> m3_25  [key=2, style=dotted];
m3_1112 -> m3_1113  [key=0, style=solid];
m3_1112 -> m3_25  [key=2, style=dotted];
m3_1113 -> m3_1114  [key=0, style=solid];
m3_1113 -> m3_25  [key=2, style=dotted];
m3_1114 -> m3_1115  [key=0, style=solid];
m3_1114 -> m3_25  [key=2, style=dotted];
m3_1115 -> m3_1116  [key=0, style=solid];
m3_1115 -> m3_25  [key=2, style=dotted];
m3_1116 -> m3_1117  [key=0, style=solid];
m3_1116 -> m3_25  [key=2, style=dotted];
m3_1117 -> m3_1105  [key=0, style=bold, color=blue];
m3_3714 -> m3_3715  [key=0, style=solid];
m3_3714 -> m3_3716  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
m3_3715 -> m3_3716  [key=0, style=solid];
m3_3716 -> m3_3717  [key=0, style=solid];
m3_3717 -> m3_3714  [key=0, style=bold, color=blue];
m3_3093 -> m3_3094  [key=0, style=solid];
m3_3094 -> m3_3095  [key=0, style=solid];
m3_3094 -> m3_3098  [key=2, style=dotted];
m3_3094 -> m3_3099  [key=2, style=dotted];
m3_3095 -> m3_3096  [key=0, style=solid];
m3_3095 -> m3_16  [key=2, style=dotted];
m3_3096 -> m3_3097  [key=0, style=solid];
m3_3096 -> m3_17  [key=2, style=dotted];
m3_3097 -> m3_3093  [key=0, style=bold, color=blue];
m3_2084 -> m3_2085  [key=0, style=solid];
m3_2085 -> m3_2086  [key=0, style=solid];
m3_2085 -> m3_2087  [key=2, style=dotted];
m3_2086 -> m3_2084  [key=0, style=bold, color=blue];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_5 -> m3_0  [key=2, style=dotted];
m3_6 -> m3_4  [key=0, style=bold, color=blue];
m3_3923 -> m3_3924  [key=0, style=solid];
m3_3924 -> m3_3925  [key=0, style=solid];
m3_3924 -> m3_3883  [key=2, style=dotted];
m3_3925 -> m3_3923  [key=0, style=bold, color=blue];
m3_3547 -> m3_3548  [key=0, style=solid];
m3_3548 -> m3_3549  [key=0, style=solid];
m3_3548 -> m3_3550  [key=2, style=dotted];
m3_3549 -> m3_3547  [key=0, style=bold, color=blue];
m3_762 -> m3_763  [key=0, style=solid];
m3_763 -> m3_764  [key=0, style=solid];
m3_763 -> m3_768  [key=2, style=dotted];
m3_763 -> m3_769  [key=2, style=dotted];
m3_764 -> m3_765  [key=0, style=solid];
m3_764 -> m3_105  [key=2, style=dotted];
m3_764 -> m3_766  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_765 -> m3_766  [key=0, style=solid];
m3_766 -> m3_767  [key=0, style=solid];
m3_766 -> m3_25  [key=2, style=dotted];
m3_767 -> m3_762  [key=0, style=bold, color=blue];
m3_3049 -> m3_3050  [key=0, style=solid];
m3_3050 -> m3_3051  [key=0, style=solid];
m3_3050 -> m3_110  [key=2, style=dotted];
m3_3050 -> m3_3053  [key=1, style=dashed, color=darkseagreen4, label=d1];
m3_3050 -> m3_3054  [key=1, style=dashed, color=darkseagreen4, label=d1];
m3_3051 -> m3_3052  [key=0, style=solid];
m3_3051 -> m3_105  [key=2, style=dotted];
m3_3053 -> m3_3054  [key=0, style=solid];
m3_3053 -> m3_25  [key=2, style=dotted];
m3_3054 -> m3_3055  [key=0, style=solid];
m3_3054 -> m3_25  [key=2, style=dotted];
m3_3052 -> m3_3053  [key=0, style=solid];
m3_3052 -> m3_24  [key=2, style=dotted];
m3_3052 -> m3_3054  [key=1, style=dashed, color=darkseagreen4, label=d2];
m3_3055 -> m3_3049  [key=0, style=bold, color=blue];
m3_1828 -> m3_1829  [key=0, style=solid];
m3_1829 -> m3_1830  [key=0, style=solid];
m3_1829 -> m3_1833  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1830 -> m3_1831  [key=0, style=solid];
m3_1830 -> m3_36  [key=2, style=dotted];
m3_1830 -> m3_1832  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1831 -> m3_1828  [key=0, style=bold, color=blue];
m3_2854 -> m3_2855  [key=0, style=solid];
m3_2855 -> m3_2856  [key=0, style=solid];
m3_2855 -> m3_2376  [key=2, style=dotted];
m3_2856 -> m3_2854  [key=0, style=bold, color=blue];
m3_1234 -> m3_1235  [key=0, style=solid];
m3_1235 -> m3_1236  [key=0, style=solid];
m3_1235 -> m3_1241  [key=2, style=dotted];
m3_1235 -> m3_1239  [key=1, style=dashed, color=darkseagreen4, label=ts];
m3_1236 -> m3_1237  [key=0, style=solid];
m3_1236 -> m3_1242  [key=2, style=dotted];
m3_1236 -> m3_16  [key=2, style=dotted];
m3_1236 -> m3_1238  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1239 -> m3_1240  [key=0, style=solid];
m3_1239 -> m3_25  [key=2, style=dotted];
m3_1237 -> m3_1238  [key=0, style=solid];
m3_1237 -> m3_17  [key=2, style=dotted];
m3_1238 -> m3_1239  [key=0, style=solid];
m3_1238 -> m3_24  [key=2, style=dotted];
m3_1240 -> m3_1234  [key=0, style=bold, color=blue];
m3_1874 -> m3_1875  [key=0, style=solid];
m3_1875 -> m3_1876  [key=0, style=solid];
m3_1875 -> m3_1882  [key=2, style=dotted];
m3_1876 -> m3_1877  [key=0, style=solid];
m3_1876 -> m3_16  [key=2, style=dotted];
m3_1876 -> m3_1878  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1877 -> m3_1878  [key=0, style=solid];
m3_1877 -> m3_17  [key=2, style=dotted];
m3_1878 -> m3_1879  [key=0, style=solid];
m3_1878 -> m3_24  [key=2, style=dotted];
m3_1878 -> m3_1880  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_1879 -> m3_1880  [key=0, style=solid];
m3_1879 -> m3_25  [key=2, style=dotted];
m3_1880 -> m3_1881  [key=0, style=solid];
m3_1880 -> m3_25  [key=2, style=dotted];
m3_1881 -> m3_1874  [key=0, style=bold, color=blue];
m3_2070 -> m3_2071  [key=0, style=solid];
m3_2070 -> m3_2072  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_2070 -> m3_2073  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_2071 -> m3_2072  [key=0, style=solid];
m3_2071 -> m3_2073  [key=0, style=solid];
m3_2072 -> m3_2075  [key=0, style=solid];
m3_2072 -> m3_2076  [key=2, style=dotted];
m3_2072 -> m3_2077  [key=2, style=dotted];
m3_2073 -> m3_2074  [key=0, style=solid];
m3_2073 -> m3_2075  [key=0, style=solid];
m3_2074 -> m3_2073  [key=0, style=solid];
m3_2074 -> m3_811  [key=2, style=dotted];
m3_2074 -> m3_2074  [key=1, style=dashed, color=darkseagreen4, label=entry];
m3_2075 -> m3_2070  [key=0, style=bold, color=blue];
m3_1550 -> m3_1551  [key=0, style=solid];
m3_1551 -> m3_1552  [key=0, style=solid];
m3_1551 -> m3_1559  [key=2, style=dotted];
m3_1551 -> m3_1553  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_1552 -> m3_1553  [key=0, style=solid];
m3_1553 -> m3_1554  [key=0, style=solid];
m3_1553 -> m3_105  [key=2, style=dotted];
m3_1553 -> m3_1555  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1554 -> m3_1555  [key=0, style=solid];
m3_1554 -> m3_25  [key=2, style=dotted];
m3_1555 -> m3_1556  [key=0, style=solid];
m3_1555 -> m3_24  [key=2, style=dotted];
m3_1556 -> m3_1557  [key=0, style=solid];
m3_1556 -> m3_105  [key=2, style=dotted];
m3_1557 -> m3_1558  [key=0, style=solid];
m3_1557 -> m3_25  [key=2, style=dotted];
m3_1558 -> m3_1550  [key=0, style=bold, color=blue];
m3_1084 -> m3_1085  [key=0, style=solid];
m3_1085 -> m3_1086  [key=0, style=solid];
m3_1085 -> m3_110  [key=2, style=dotted];
m3_1085 -> m3_1089  [key=2, style=dotted];
m3_1085 -> m3_1082  [key=2, style=dotted];
m3_1085 -> m3_354  [key=2, style=dotted];
m3_1085 -> m3_1090  [key=2, style=dotted];
m3_1086 -> m3_1087  [key=0, style=solid];
m3_1086 -> m3_105  [key=2, style=dotted];
m3_1087 -> m3_1088  [key=0, style=solid];
m3_1087 -> m3_25  [key=2, style=dotted];
m3_1088 -> m3_1084  [key=0, style=bold, color=blue];
m3_1840 -> m3_1841  [key=0, style=solid];
m3_1841 -> m3_1842  [key=0, style=solid];
m3_1841 -> m3_36  [key=2, style=dotted];
m3_1841 -> m3_1843  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1842 -> m3_1840  [key=0, style=bold, color=blue];
m3_3718 -> m3_3719  [key=0, style=solid];
m3_3719 -> m3_3720  [key=0, style=solid];
m3_3719 -> m3_3714  [key=2, style=dotted];
m3_3719 -> m3_3724  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_3720 -> m3_3721  [key=0, style=solid];
m3_3720 -> m3_105  [key=2, style=dotted];
m3_3724 -> m3_3725  [key=0, style=solid];
m3_3724 -> m3_151  [key=2, style=dotted];
m3_3724 -> m3_152  [key=2, style=dotted];
m3_3721 -> m3_3722  [key=0, style=solid];
m3_3721 -> m3_25  [key=2, style=dotted];
m3_3722 -> m3_3723  [key=0, style=solid];
m3_3722 -> m3_1846  [key=2, style=dotted];
m3_3722 -> m3_3724  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_3723 -> m3_3724  [key=0, style=solid];
m3_3725 -> m3_3726  [key=0, style=solid];
m3_3725 -> m3_25  [key=2, style=dotted];
m3_3726 -> m3_3718  [key=0, style=bold, color=blue];
m3_2018 -> m3_2019  [key=0, style=solid];
m3_2019 -> m3_2020  [key=0, style=solid];
m3_2019 -> m3_2023  [key=2, style=dotted];
m3_2020 -> m3_2021  [key=0, style=solid];
m3_2020 -> m3_16  [key=2, style=dotted];
m3_2021 -> m3_2022  [key=0, style=solid];
m3_2021 -> m3_17  [key=2, style=dotted];
m3_2022 -> m3_2018  [key=0, style=bold, color=blue];
m3_2606 -> m3_2607  [key=0, style=solid];
m3_2607 -> m3_2608  [key=0, style=solid];
m3_2608 -> m3_2609  [key=0, style=solid];
m3_2608 -> m3_24  [key=2, style=dotted];
m3_2609 -> m3_2610  [key=0, style=solid];
m3_2609 -> m3_25  [key=2, style=dotted];
m3_2610 -> m3_2606  [key=0, style=bold, color=blue];
m3_1624 -> m3_1625  [key=0, style=solid];
m3_1624 -> m3_1626  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1624 -> m3_1627  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_1624 -> m3_1628  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_1625 -> m3_1626  [key=0, style=solid];
m3_1626 -> m3_1627  [key=0, style=solid];
m3_1627 -> m3_1628  [key=0, style=solid];
m3_1628 -> m3_1629  [key=0, style=solid];
m3_1629 -> m3_1624  [key=0, style=bold, color=blue];
m3_3774 -> m3_3775  [key=0, style=solid];
m3_3775 -> m3_3776  [key=0, style=solid];
m3_3775 -> m3_2338  [key=2, style=dotted];
m3_3776 -> m3_3777  [key=0, style=solid];
m3_3776 -> m3_16  [key=2, style=dotted];
m3_3777 -> m3_3778  [key=0, style=solid];
m3_3777 -> m3_17  [key=2, style=dotted];
m3_3778 -> m3_3774  [key=0, style=bold, color=blue];
m3_3689 -> m3_3690  [key=0, style=solid];
m3_3690 -> m3_3689  [key=0, style=bold, color=blue];
m3_1131 -> m3_1132  [key=0, style=solid];
m3_1132 -> m3_1133  [key=0, style=solid];
m3_1132 -> m3_1135  [key=2, style=dotted];
m3_1132 -> m3_105  [key=2, style=dotted];
m3_1133 -> m3_1134  [key=0, style=solid];
m3_1133 -> m3_25  [key=2, style=dotted];
m3_1134 -> m3_1131  [key=0, style=bold, color=blue];
m3_2636 -> m3_2637  [key=0, style=solid];
m3_2637 -> m3_2638  [key=0, style=solid];
m3_2638 -> m3_2636  [key=0, style=bold, color=blue];
m3_3616 -> m3_3617  [key=0, style=solid];
m3_3617 -> m3_3618  [key=0, style=solid];
m3_3617 -> m3_3623  [key=2, style=dotted];
m3_3618 -> m3_3619  [key=0, style=solid];
m3_3618 -> m3_151  [key=2, style=dotted];
m3_3618 -> m3_3624  [key=2, style=dotted];
m3_3618 -> m3_152  [key=2, style=dotted];
m3_3618 -> m3_3620  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3619 -> m3_3620  [key=0, style=solid];
m3_3619 -> m3_25  [key=2, style=dotted];
m3_3620 -> m3_3621  [key=0, style=solid];
m3_3620 -> m3_151  [key=2, style=dotted];
m3_3620 -> m3_3624  [key=2, style=dotted];
m3_3620 -> m3_272  [key=2, style=dotted];
m3_3621 -> m3_3622  [key=0, style=solid];
m3_3621 -> m3_25  [key=2, style=dotted];
m3_3622 -> m3_3616  [key=0, style=bold, color=blue];
m3_3230 -> m3_3231  [key=0, style=solid];
m3_3231 -> m3_3232  [key=0, style=solid];
m3_3231 -> m3_36  [key=2, style=dotted];
m3_3231 -> m3_3233  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3232 -> m3_3230  [key=0, style=bold, color=blue];
m3_918 -> m3_919  [key=0, style=solid];
m3_919 -> m3_920  [key=0, style=solid];
m3_919 -> m3_933  [key=2, style=dotted];
m3_919 -> m3_921  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_919 -> m3_922  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_919 -> m3_923  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_919 -> m3_924  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_920 -> m3_921  [key=0, style=solid];
m3_921 -> m3_922  [key=0, style=solid];
m3_921 -> m3_934  [key=2, style=dotted];
m3_922 -> m3_923  [key=0, style=solid];
m3_923 -> m3_924  [key=0, style=solid];
m3_924 -> m3_925  [key=0, style=solid];
m3_924 -> m3_105  [key=2, style=dotted];
m3_925 -> m3_926  [key=0, style=solid];
m3_925 -> m3_916  [key=2, style=dotted];
m3_925 -> m3_927  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_925 -> m3_928  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_925 -> m3_929  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_925 -> m3_930  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_925 -> m3_931  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_926 -> m3_927  [key=0, style=solid];
m3_926 -> m3_25  [key=2, style=dotted];
m3_927 -> m3_928  [key=0, style=solid];
m3_927 -> m3_934  [key=2, style=dotted];
m3_927 -> m3_25  [key=2, style=dotted];
m3_928 -> m3_929  [key=0, style=solid];
m3_928 -> m3_25  [key=2, style=dotted];
m3_929 -> m3_930  [key=0, style=solid];
m3_929 -> m3_25  [key=2, style=dotted];
m3_930 -> m3_931  [key=0, style=solid];
m3_930 -> m3_25  [key=2, style=dotted];
m3_931 -> m3_932  [key=0, style=solid];
m3_931 -> m3_25  [key=2, style=dotted];
m3_932 -> m3_918  [key=0, style=bold, color=blue];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_24  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_25  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_24  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_25  [key=2, style=dotted];
m3_23 -> m3_18  [key=0, style=bold, color=blue];
m3_3410 -> m3_3411  [key=0, style=solid];
m3_3411 -> m3_3412  [key=0, style=solid];
m3_3411 -> m3_172  [key=2, style=dotted];
m3_3411 -> m3_354  [key=2, style=dotted];
m3_3412 -> m3_3413  [key=0, style=solid];
m3_3412 -> m3_151  [key=2, style=dotted];
m3_3412 -> m3_174  [key=2, style=dotted];
m3_3412 -> m3_3414  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3413 -> m3_3414  [key=0, style=solid];
m3_3413 -> m3_17  [key=2, style=dotted];
m3_3414 -> m3_3415  [key=0, style=solid];
m3_3414 -> m3_24  [key=2, style=dotted];
m3_3414 -> m3_3416  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3414 -> m3_3417  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3415 -> m3_3416  [key=0, style=solid];
m3_3415 -> m3_25  [key=2, style=dotted];
m3_3416 -> m3_3417  [key=0, style=solid];
m3_3416 -> m3_354  [key=2, style=dotted];
m3_3416 -> m3_25  [key=2, style=dotted];
m3_3417 -> m3_3418  [key=0, style=solid];
m3_3417 -> m3_354  [key=2, style=dotted];
m3_3417 -> m3_25  [key=2, style=dotted];
m3_3418 -> m3_3410  [key=0, style=bold, color=blue];
m3_3293 -> m3_3294  [key=0, style=solid];
m3_3293 -> m3_3296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m3_3294 -> m3_3295  [key=0, style=solid];
m3_3296 -> m3_3297  [key=0, style=solid];
m3_3296 -> m3_3298  [key=2, style=dotted];
m3_3296 -> m3_2339  [key=2, style=dotted];
m3_3296 -> m3_3299  [key=2, style=dotted];
m3_3296 -> m3_3300  [key=2, style=dotted];
m3_3295 -> m3_3296  [key=0, style=solid];
m3_3297 -> m3_3293  [key=0, style=bold, color=blue];
m3_1853 -> m3_1854  [key=0, style=solid];
m3_1854 -> m3_1855  [key=0, style=solid];
m3_1854 -> m3_36  [key=2, style=dotted];
m3_1854 -> m3_1856  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1855 -> m3_1853  [key=0, style=bold, color=blue];
m3_1560 -> m3_1561  [key=0, style=solid];
m3_1561 -> m3_1562  [key=0, style=solid];
m3_1561 -> m3_1559  [key=2, style=dotted];
m3_1561 -> m3_1563  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_1562 -> m3_1563  [key=0, style=solid];
m3_1563 -> m3_1564  [key=0, style=solid];
m3_1563 -> m3_151  [key=2, style=dotted];
m3_1563 -> m3_152  [key=2, style=dotted];
m3_1563 -> m3_1565  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1564 -> m3_1565  [key=0, style=solid];
m3_1564 -> m3_25  [key=2, style=dotted];
m3_1565 -> m3_1566  [key=0, style=solid];
m3_1565 -> m3_151  [key=2, style=dotted];
m3_1565 -> m3_272  [key=2, style=dotted];
m3_1566 -> m3_1567  [key=0, style=solid];
m3_1566 -> m3_151  [key=2, style=dotted];
m3_1566 -> m3_152  [key=2, style=dotted];
m3_1567 -> m3_1568  [key=0, style=solid];
m3_1567 -> m3_25  [key=2, style=dotted];
m3_1568 -> m3_1560  [key=0, style=bold, color=blue];
m3_1806 -> m3_1807  [key=0, style=solid];
m3_1807 -> m3_1808  [key=0, style=solid];
m3_1807 -> m3_1811  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1808 -> m3_1809  [key=0, style=solid];
m3_1808 -> m3_36  [key=2, style=dotted];
m3_1808 -> m3_1810  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1809 -> m3_1806  [key=0, style=bold, color=blue];
m3_3887 -> m3_3888  [key=0, style=solid];
m3_3888 -> m3_3889  [key=0, style=solid];
m3_3888 -> m3_3883  [key=2, style=dotted];
m3_3889 -> m3_3887  [key=0, style=bold, color=blue];
m3_3988 -> m3_3989  [key=0, style=solid];
m3_3989 -> m3_3990  [key=0, style=solid];
m3_3989 -> m3_934  [key=2, style=dotted];
m3_3989 -> m3_3992  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3989 -> m3_3995  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3990 -> m3_3991  [key=0, style=solid];
m3_3992 -> m3_3993  [key=0, style=solid];
m3_3992 -> m3_172  [key=2, style=dotted];
m3_3992 -> m3_152  [key=2, style=dotted];
m3_3992 -> m3_3994  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3995 -> m3_3996  [key=0, style=solid];
m3_3995 -> m3_1662  [key=2, style=dotted];
m3_3995 -> m3_25  [key=2, style=dotted];
m3_3991 -> m3_3992  [key=0, style=solid];
m3_3991 -> m3_151  [key=2, style=dotted];
m3_3991 -> m3_3994  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_3994 -> m3_3995  [key=0, style=solid];
m3_3994 -> m3_272  [key=2, style=dotted];
m3_3993 -> m3_3994  [key=0, style=solid];
m3_3993 -> m3_17  [key=2, style=dotted];
m3_3996 -> m3_3988  [key=0, style=bold, color=blue];
m3_3902 -> m3_3903  [key=0, style=solid];
m3_3903 -> m3_3904  [key=0, style=solid];
m3_3904 -> m3_3902  [key=0, style=bold, color=blue];
m3_399 -> m3_400  [key=0, style=solid];
m3_400 -> m3_401  [key=0, style=solid];
m3_400 -> m3_380  [key=2, style=dotted];
m3_400 -> m3_407  [key=2, style=dotted];
m3_400 -> m3_408  [key=2, style=dotted];
m3_400 -> m3_403  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_400 -> m3_404  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_400 -> m3_405  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_401 -> m3_402  [key=0, style=solid];
m3_401 -> m3_105  [key=2, style=dotted];
m3_403 -> m3_404  [key=0, style=solid];
m3_403 -> m3_25  [key=2, style=dotted];
m3_404 -> m3_405  [key=0, style=solid];
m3_404 -> m3_25  [key=2, style=dotted];
m3_405 -> m3_406  [key=0, style=solid];
m3_405 -> m3_25  [key=2, style=dotted];
m3_402 -> m3_403  [key=0, style=solid];
m3_402 -> m3_24  [key=2, style=dotted];
m3_402 -> m3_404  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_402 -> m3_405  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_406 -> m3_399  [key=0, style=bold, color=blue];
m3_3396 -> m3_3397  [key=0, style=solid];
m3_3397 -> m3_3398  [key=0, style=solid];
m3_3397 -> m3_3395  [key=2, style=dotted];
m3_3398 -> m3_3399  [key=0, style=solid];
m3_3398 -> m3_105  [key=2, style=dotted];
m3_3399 -> m3_3400  [key=0, style=solid];
m3_3399 -> m3_25  [key=2, style=dotted];
m3_3400 -> m3_3396  [key=0, style=bold, color=blue];
m3_3533 -> m3_3534  [key=0, style=solid];
m3_3534 -> m3_3535  [key=0, style=solid];
m3_3534 -> m3_24  [key=2, style=dotted];
m3_3534 -> m3_3536  [key=1, style=dashed, color=darkseagreen4, label=uris];
m3_3535 -> m3_3536  [key=0, style=solid];
m3_3535 -> m3_25  [key=2, style=dotted];
m3_3536 -> m3_3537  [key=0, style=solid];
m3_3536 -> m3_1689  [key=2, style=dotted];
m3_3536 -> m3_25  [key=2, style=dotted];
m3_3537 -> m3_3538  [key=0, style=solid];
m3_3537 -> m3_24  [key=2, style=dotted];
m3_3538 -> m3_3539  [key=0, style=solid];
m3_3538 -> m3_776  [key=2, style=dotted];
m3_3539 -> m3_3540  [key=0, style=solid];
m3_3539 -> m3_3546  [key=2, style=dotted];
m3_3539 -> m3_3541  [key=1, style=dashed, color=darkseagreen4, label=i1];
m3_3540 -> m3_3541  [key=0, style=solid];
m3_3540 -> m3_1689  [key=2, style=dotted];
m3_3541 -> m3_3542  [key=0, style=solid];
m3_3541 -> m3_25  [key=2, style=dotted];
m3_3542 -> m3_3543  [key=0, style=solid];
m3_3542 -> m3_24  [key=2, style=dotted];
m3_3542 -> m3_3544  [key=1, style=dashed, color=darkseagreen4, label=uri];
m3_3543 -> m3_3544  [key=0, style=solid];
m3_3543 -> m3_776  [key=2, style=dotted];
m3_3544 -> m3_3545  [key=0, style=solid];
m3_3544 -> m3_3546  [key=2, style=dotted];
m3_3544 -> m3_25  [key=2, style=dotted];
m3_3545 -> m3_3533  [key=0, style=bold, color=blue];
m3_2457 -> m3_2458  [key=0, style=solid];
m3_2458 -> m3_2459  [key=0, style=solid];
m3_2458 -> m3_2460  [key=2, style=dotted];
m3_2459 -> m3_2457  [key=0, style=bold, color=blue];
m3_2030 -> m3_2031  [key=0, style=solid];
m3_2031 -> m3_2032  [key=0, style=solid];
m3_2031 -> m3_2043  [key=2, style=dotted];
m3_2031 -> m3_2033  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2031 -> m3_2034  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2031 -> m3_2035  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2032 -> m3_2033  [key=0, style=solid];
m3_2032 -> m3_2044  [key=2, style=dotted];
m3_2032 -> m3_2034  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2033 -> m3_2034  [key=0, style=solid];
m3_2034 -> m3_2035  [key=0, style=solid];
m3_2035 -> m3_2036  [key=0, style=solid];
m3_2035 -> m3_151  [key=2, style=dotted];
m3_2035 -> m3_152  [key=2, style=dotted];
m3_2036 -> m3_2037  [key=0, style=solid];
m3_2036 -> m3_17  [key=2, style=dotted];
m3_2037 -> m3_2038  [key=0, style=solid];
m3_2037 -> m3_24  [key=2, style=dotted];
m3_2037 -> m3_2039  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m3_2037 -> m3_2040  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m3_2037 -> m3_2041  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m3_2038 -> m3_2039  [key=0, style=solid];
m3_2038 -> m3_25  [key=2, style=dotted];
m3_2039 -> m3_2040  [key=0, style=solid];
m3_2039 -> m3_25  [key=2, style=dotted];
m3_2040 -> m3_2041  [key=0, style=solid];
m3_2040 -> m3_25  [key=2, style=dotted];
m3_2041 -> m3_2042  [key=0, style=solid];
m3_2041 -> m3_25  [key=2, style=dotted];
m3_2042 -> m3_2030  [key=0, style=bold, color=blue];
m3_2078 -> m3_2079  [key=0, style=solid];
m3_2079 -> m3_2080  [key=0, style=solid];
m3_2079 -> m3_298  [key=2, style=dotted];
m3_2080 -> m3_2078  [key=0, style=bold, color=blue];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_0  [key=2, style=dotted];
m3_9 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label=mySubclass];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_4  [key=2, style=dotted];
m3_10 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=myMainClass];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_16  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_16  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_17  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_17  [key=2, style=dotted];
m3_15 -> m3_8  [key=0, style=bold, color=blue];
m3_1589 -> m3_1590  [key=0, style=solid];
m3_1590 -> m3_1591  [key=0, style=solid];
m3_1591 -> m3_1592  [key=0, style=solid];
m3_1591 -> m3_36  [key=2, style=dotted];
m3_1591 -> m3_1593  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1592 -> m3_1589  [key=0, style=bold, color=blue];
m3_2809 -> m3_2810  [key=0, style=solid];
m3_2810 -> m3_2811  [key=0, style=solid];
m3_2811 -> m3_2812  [key=0, style=solid];
m3_2811 -> m3_110  [key=2, style=dotted];
m3_2812 -> m3_2809  [key=0, style=bold, color=blue];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_148  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffsetInternal"];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_36  [key=2, style=dotted];
m3_141 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_142 -> m3_140  [key=0, style=bold, color=blue];
m3_3308 -> m3_3309  [key=0, style=solid];
m3_3309 -> m3_3310  [key=0, style=solid];
m3_3309 -> m3_110  [key=2, style=dotted];
m3_3309 -> m3_3316  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_3309 -> m3_3317  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_3309 -> m3_3318  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_3309 -> m3_3319  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_3310 -> m3_3311  [key=0, style=solid];
m3_3310 -> m3_349  [key=2, style=dotted];
m3_3310 -> m3_350  [key=2, style=dotted];
m3_3310 -> m3_3313  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_3310 -> m3_3315  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_3316 -> m3_3312  [key=0, style=solid];
m3_3316 -> m3_298  [key=2, style=dotted];
m3_3317 -> m3_3318  [key=0, style=solid];
m3_3317 -> m3_25  [key=2, style=dotted];
m3_3318 -> m3_3319  [key=0, style=solid];
m3_3318 -> m3_25  [key=2, style=dotted];
m3_3319 -> m3_3320  [key=0, style=solid];
m3_3319 -> m3_25  [key=2, style=dotted];
m3_3311 -> m3_3312  [key=0, style=solid];
m3_3313 -> m3_3314  [key=0, style=solid];
m3_3313 -> m3_3317  [key=0, style=solid];
m3_3313 -> m3_3321  [key=2, style=dotted];
m3_3315 -> m3_3316  [key=0, style=solid];
m3_3315 -> m3_2543  [key=2, style=dotted];
m3_3312 -> m3_3313  [key=0, style=solid];
m3_3312 -> m3_3317  [key=0, style=solid];
m3_3314 -> m3_3315  [key=0, style=solid];
m3_3314 -> m3_351  [key=2, style=dotted];
m3_3320 -> m3_3308  [key=0, style=bold, color=blue];
m3_784 -> m3_785  [key=0, style=solid];
m3_785 -> m3_786  [key=0, style=solid];
m3_786 -> m3_787  [key=0, style=solid];
m3_786 -> m3_24  [key=2, style=dotted];
m3_786 -> m3_788  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_786 -> m3_789  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_786 -> m3_790  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_787 -> m3_788  [key=0, style=solid];
m3_787 -> m3_776  [key=2, style=dotted];
m3_788 -> m3_789  [key=0, style=solid];
m3_788 -> m3_25  [key=2, style=dotted];
m3_789 -> m3_790  [key=0, style=solid];
m3_789 -> m3_776  [key=2, style=dotted];
m3_790 -> m3_791  [key=0, style=solid];
m3_790 -> m3_25  [key=2, style=dotted];
m3_791 -> m3_784  [key=0, style=bold, color=blue];
m3_654 -> m3_655  [key=0, style=solid];
m3_655 -> m3_656  [key=0, style=solid];
m3_655 -> m3_662  [key=2, style=dotted];
m3_655 -> m3_659  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m3_656 -> m3_657  [key=0, style=solid];
m3_656 -> m3_105  [key=2, style=dotted];
m3_656 -> m3_658  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_659 -> m3_660  [key=0, style=solid];
m3_659 -> m3_25  [key=2, style=dotted];
m3_659 -> m3_659  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m3_657 -> m3_658  [key=0, style=solid];
m3_657 -> m3_25  [key=2, style=dotted];
m3_658 -> m3_659  [key=0, style=solid];
m3_658 -> m3_24  [key=2, style=dotted];
m3_660 -> m3_661  [key=0, style=solid];
m3_660 -> m3_25  [key=2, style=dotted];
m3_660 -> m3_660  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m3_661 -> m3_654  [key=0, style=bold, color=blue];
m3_850 -> m3_881  [key=0, style=solid];
m3_850 -> m3_882  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_850 -> m3_883  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_850 -> m3_887  [key=1, style=dashed, color=darkseagreen4, label=object];
m3_881 -> m3_882  [key=0, style=solid];
m3_881 -> m3_813  [key=2, style=dotted];
m3_881 -> m3_883  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_881 -> m3_884  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_882 -> m3_883  [key=0, style=solid];
m3_882 -> m3_894  [key=2, style=dotted];
m3_882 -> m3_353  [key=2, style=dotted];
m3_883 -> m3_884  [key=0, style=solid];
m3_883 -> m3_895  [key=2, style=dotted];
m3_887 -> m3_888  [key=0, style=solid];
m3_887 -> m3_105  [key=2, style=dotted];
m3_887 -> m3_445  [key=2, style=dotted];
m3_884 -> m3_885  [key=0, style=solid];
m3_884 -> m3_896  [key=2, style=dotted];
m3_885 -> m3_886  [key=0, style=solid];
m3_885 -> m3_897  [key=2, style=dotted];
m3_885 -> m3_445  [key=2, style=dotted];
m3_886 -> m3_887  [key=0, style=solid];
m3_886 -> m3_898  [key=2, style=dotted];
m3_886 -> m3_899  [key=2, style=dotted];
m3_886 -> m3_900  [key=2, style=dotted];
m3_886 -> m3_886  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m3_886 -> m3_901  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_886 -> m3_889  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m3_886 -> m3_890  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m3_889 -> m3_890  [key=0, style=solid];
m3_889 -> m3_25  [key=2, style=dotted];
m3_890 -> m3_891  [key=0, style=solid];
m3_890 -> m3_892  [key=0, style=solid];
m3_888 -> m3_889  [key=0, style=solid];
m3_888 -> m3_898  [key=2, style=dotted];
m3_888 -> m3_899  [key=2, style=dotted];
m3_888 -> m3_900  [key=2, style=dotted];
m3_888 -> m3_888  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m3_888 -> m3_904  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_888 -> m3_891  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m3_888 -> m3_892  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m3_891 -> m3_890  [key=0, style=solid];
m3_891 -> m3_446  [key=2, style=dotted];
m3_891 -> m3_447  [key=2, style=dotted];
m3_891 -> m3_891  [key=1, style=dashed, color=darkseagreen4, label=property];
m3_892 -> m3_893  [key=0, style=solid];
m3_892 -> m3_749  [key=2, style=dotted];
m3_893 -> m3_850  [key=0, style=bold, color=blue];
m3_1609 -> m3_1610  [key=0, style=solid];
m3_1610 -> m3_1611  [key=0, style=solid];
m3_1610 -> m3_1621  [key=2, style=dotted];
m3_1610 -> m3_1612  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m3_1610 -> m3_1613  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m3_1610 -> m3_1614  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m3_1611 -> m3_1612  [key=0, style=solid];
m3_1612 -> m3_1613  [key=0, style=solid];
m3_1613 -> m3_1614  [key=0, style=solid];
m3_1614 -> m3_1615  [key=0, style=solid];
m3_1614 -> m3_16  [key=2, style=dotted];
m3_1615 -> m3_1616  [key=0, style=solid];
m3_1615 -> m3_17  [key=2, style=dotted];
m3_1616 -> m3_1617  [key=0, style=solid];
m3_1616 -> m3_24  [key=2, style=dotted];
m3_1616 -> m3_1618  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m3_1616 -> m3_1619  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m3_1617 -> m3_1618  [key=0, style=solid];
m3_1617 -> m3_25  [key=2, style=dotted];
m3_1618 -> m3_1619  [key=0, style=solid];
m3_1618 -> m3_25  [key=2, style=dotted];
m3_1619 -> m3_1620  [key=0, style=solid];
m3_1619 -> m3_25  [key=2, style=dotted];
m3_1620 -> m3_1609  [key=0, style=bold, color=blue];
m3_3551 -> m3_3552  [key=0, style=solid];
m3_3552 -> m3_3553  [key=0, style=solid];
m3_3553 -> m3_3551  [key=0, style=bold, color=blue];
m3_1519 -> m3_1520  [key=0, style=solid];
m3_1520 -> m3_1521  [key=0, style=solid];
m3_1521 -> m3_1522  [key=0, style=solid];
m3_1521 -> m3_24  [key=2, style=dotted];
m3_1521 -> m3_1523  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1521 -> m3_1524  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1521 -> m3_1525  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1521 -> m3_1526  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1522 -> m3_1523  [key=0, style=solid];
m3_1522 -> m3_776  [key=2, style=dotted];
m3_1523 -> m3_1524  [key=0, style=solid];
m3_1523 -> m3_25  [key=2, style=dotted];
m3_1524 -> m3_1525  [key=0, style=solid];
m3_1524 -> m3_25  [key=2, style=dotted];
m3_1525 -> m3_1526  [key=0, style=solid];
m3_1525 -> m3_25  [key=2, style=dotted];
m3_1526 -> m3_1527  [key=0, style=solid];
m3_1526 -> m3_25  [key=2, style=dotted];
m3_1527 -> m3_1519  [key=0, style=bold, color=blue];
m3_3744 -> m3_3745  [key=0, style=solid];
m3_3745 -> m3_3746  [key=0, style=solid];
m3_3746 -> m3_3747  [key=0, style=solid];
m3_3746 -> m3_24  [key=2, style=dotted];
m3_3746 -> m3_3748  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3746 -> m3_3749  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3746 -> m3_3750  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3746 -> m3_3751  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3747 -> m3_3748  [key=0, style=solid];
m3_3747 -> m3_128  [key=2, style=dotted];
m3_3748 -> m3_3749  [key=0, style=solid];
m3_3748 -> m3_128  [key=2, style=dotted];
m3_3749 -> m3_3750  [key=0, style=solid];
m3_3749 -> m3_128  [key=2, style=dotted];
m3_3750 -> m3_3751  [key=0, style=solid];
m3_3750 -> m3_128  [key=2, style=dotted];
m3_3751 -> m3_3752  [key=0, style=solid];
m3_3751 -> m3_128  [key=2, style=dotted];
m3_3752 -> m3_3744  [key=0, style=bold, color=blue];
m3_3035 -> m3_3036  [key=0, style=solid];
m3_3036 -> m3_3037  [key=0, style=solid];
m3_3036 -> m3_110  [key=2, style=dotted];
m3_3036 -> m3_3039  [key=1, style=dashed, color=darkseagreen4, label=d1];
m3_3036 -> m3_3040  [key=1, style=dashed, color=darkseagreen4, label=d1];
m3_3037 -> m3_3038  [key=0, style=solid];
m3_3037 -> m3_105  [key=2, style=dotted];
m3_3039 -> m3_3040  [key=0, style=solid];
m3_3039 -> m3_25  [key=2, style=dotted];
m3_3040 -> m3_3041  [key=0, style=solid];
m3_3040 -> m3_25  [key=2, style=dotted];
m3_3038 -> m3_3039  [key=0, style=solid];
m3_3038 -> m3_24  [key=2, style=dotted];
m3_3038 -> m3_3040  [key=1, style=dashed, color=darkseagreen4, label=d2];
m3_3041 -> m3_3035  [key=0, style=bold, color=blue];
m3_33 -> m3_34  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_36  [key=2, style=dotted];
m3_34 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_35 -> m3_33  [key=0, style=bold, color=blue];
m3_3929 -> m3_3930  [key=0, style=solid];
m3_3930 -> m3_3931  [key=0, style=solid];
m3_3930 -> m3_3934  [key=2, style=dotted];
m3_3930 -> m3_3935  [key=2, style=dotted];
m3_3931 -> m3_3932  [key=0, style=solid];
m3_3931 -> m3_16  [key=2, style=dotted];
m3_3932 -> m3_3933  [key=0, style=solid];
m3_3932 -> m3_17  [key=2, style=dotted];
m3_3933 -> m3_3929  [key=0, style=bold, color=blue];
m3_2393 -> m3_2394  [key=0, style=solid];
m3_2394 -> m3_2395  [key=0, style=solid];
m3_2394 -> m3_172  [key=2, style=dotted];
m3_2394 -> m3_2396  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_2394 -> m3_2400  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_2395 -> m3_2396  [key=0, style=solid];
m3_2395 -> m3_811  [key=2, style=dotted];
m3_2396 -> m3_2397  [key=0, style=solid];
m3_2396 -> m3_811  [key=2, style=dotted];
m3_2400 -> m3_2401  [key=0, style=solid];
m3_2400 -> m3_811  [key=2, style=dotted];
m3_2397 -> m3_2398  [key=0, style=solid];
m3_2397 -> m3_172  [key=2, style=dotted];
m3_2397 -> m3_2399  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_2397 -> m3_2400  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_2397 -> m3_2401  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_2398 -> m3_2399  [key=0, style=solid];
m3_2398 -> m3_811  [key=2, style=dotted];
m3_2399 -> m3_2400  [key=0, style=solid];
m3_2399 -> m3_811  [key=2, style=dotted];
m3_2401 -> m3_2402  [key=0, style=solid];
m3_2401 -> m3_16  [key=2, style=dotted];
m3_2401 -> m3_2405  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2402 -> m3_2403  [key=0, style=solid];
m3_2402 -> m3_36  [key=2, style=dotted];
m3_2402 -> m3_2404  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2403 -> m3_2393  [key=0, style=bold, color=blue];
m3_2007 -> m3_2008  [key=0, style=solid];
m3_2008 -> m3_2009  [key=0, style=solid];
m3_2008 -> m3_2012  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2009 -> m3_2010  [key=0, style=solid];
m3_2009 -> m3_36  [key=2, style=dotted];
m3_2009 -> m3_2011  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2010 -> m3_2007  [key=0, style=bold, color=blue];
m3_1725 -> m3_1726  [key=0, style=solid];
m3_1726 -> m3_1727  [key=0, style=solid];
m3_1727 -> m3_1728  [key=0, style=solid];
m3_1727 -> m3_24  [key=2, style=dotted];
m3_1728 -> m3_1729  [key=0, style=solid];
m3_1728 -> m3_25  [key=2, style=dotted];
m3_1729 -> m3_1725  [key=0, style=bold, color=blue];
m3_3357 -> m3_3358  [key=0, style=solid];
m3_3358 -> m3_3359  [key=0, style=solid];
m3_3358 -> m3_3361  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3359 -> m3_3360  [key=0, style=solid];
m3_3359 -> m3_110  [key=2, style=dotted];
m3_3359 -> m3_3369  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3359 -> m3_3363  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3359 -> m3_3364  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3359 -> m3_3365  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3359 -> m3_3366  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3361 -> m3_3362  [key=0, style=solid];
m3_3361 -> m3_151  [key=2, style=dotted];
m3_3361 -> m3_272  [key=2, style=dotted];
m3_3360 -> m3_3361  [key=0, style=solid];
m3_3360 -> m3_3369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_3360 -> m3_3370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_3363 -> m3_3364  [key=0, style=solid];
m3_3363 -> m3_25  [key=2, style=dotted];
m3_3364 -> m3_3365  [key=0, style=solid];
m3_3364 -> m3_1438  [key=2, style=dotted];
m3_3364 -> m3_447  [key=2, style=dotted];
m3_3365 -> m3_3366  [key=0, style=solid];
m3_3365 -> m3_1438  [key=2, style=dotted];
m3_3365 -> m3_447  [key=2, style=dotted];
m3_3366 -> m3_3367  [key=0, style=solid];
m3_3366 -> m3_1438  [key=2, style=dotted];
m3_3366 -> m3_447  [key=2, style=dotted];
m3_3362 -> m3_3363  [key=0, style=solid];
m3_3362 -> m3_776  [key=2, style=dotted];
m3_3367 -> m3_3357  [key=0, style=bold, color=blue];
m3_1978 -> m3_1979  [key=0, style=solid];
m3_1979 -> m3_1980  [key=0, style=solid];
m3_1979 -> m3_16  [key=2, style=dotted];
m3_1980 -> m3_1978  [key=0, style=bold, color=blue];
m3_3387 -> m3_3388  [key=0, style=solid];
m3_3388 -> m3_3389  [key=0, style=solid];
m3_3388 -> m3_3395  [key=2, style=dotted];
m3_3389 -> m3_3390  [key=0, style=solid];
m3_3389 -> m3_24  [key=2, style=dotted];
m3_3389 -> m3_3391  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3389 -> m3_3392  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3389 -> m3_3393  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3390 -> m3_3391  [key=0, style=solid];
m3_3390 -> m3_776  [key=2, style=dotted];
m3_3391 -> m3_3392  [key=0, style=solid];
m3_3391 -> m3_25  [key=2, style=dotted];
m3_3392 -> m3_3393  [key=0, style=solid];
m3_3392 -> m3_25  [key=2, style=dotted];
m3_3393 -> m3_3394  [key=0, style=solid];
m3_3393 -> m3_25  [key=2, style=dotted];
m3_3394 -> m3_3387  [key=0, style=bold, color=blue];
m3_3779 -> m3_3780  [key=0, style=solid];
m3_3779 -> m3_3781  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_3779 -> m3_3782  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_3780 -> m3_3781  [key=0, style=solid];
m3_3780 -> m3_3782  [key=0, style=solid];
m3_3781 -> m3_3783  [key=0, style=solid];
m3_3781 -> m3_2076  [key=2, style=dotted];
m3_3781 -> m3_2077  [key=2, style=dotted];
m3_3782 -> m3_3783  [key=0, style=solid];
m3_3783 -> m3_3779  [key=0, style=bold, color=blue];
m3_3224 -> m3_3225  [key=0, style=solid];
m3_3225 -> m3_3226  [key=0, style=solid];
m3_3225 -> m3_36  [key=2, style=dotted];
m3_3225 -> m3_3227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3226 -> m3_3224  [key=0, style=bold, color=blue];
m3_1399 -> m3_1400  [key=0, style=solid];
m3_1400 -> m3_1401  [key=0, style=solid];
m3_1400 -> m3_1403  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m3_1401 -> m3_1402  [key=0, style=solid];
m3_1401 -> m3_1413  [key=2, style=dotted];
m3_1403 -> m3_1404  [key=0, style=solid];
m3_1403 -> m3_25  [key=2, style=dotted];
m3_1402 -> m3_1403  [key=0, style=solid];
m3_1402 -> m3_105  [key=2, style=dotted];
m3_1402 -> m3_1404  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1404 -> m3_1405  [key=0, style=solid];
m3_1404 -> m3_24  [key=2, style=dotted];
m3_1405 -> m3_1406  [key=0, style=solid];
m3_1405 -> m3_25  [key=2, style=dotted];
m3_1406 -> m3_1407  [key=0, style=solid];
m3_1406 -> m3_1409  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m3_1407 -> m3_1408  [key=0, style=solid];
m3_1407 -> m3_1413  [key=2, style=dotted];
m3_1409 -> m3_1410  [key=0, style=solid];
m3_1409 -> m3_25  [key=2, style=dotted];
m3_1408 -> m3_1409  [key=0, style=solid];
m3_1408 -> m3_105  [key=2, style=dotted];
m3_1408 -> m3_1410  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1410 -> m3_1411  [key=0, style=solid];
m3_1410 -> m3_24  [key=2, style=dotted];
m3_1411 -> m3_1412  [key=0, style=solid];
m3_1411 -> m3_25  [key=2, style=dotted];
m3_1412 -> m3_1399  [key=0, style=bold, color=blue];
m3_118 -> m3_119  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_36  [key=2, style=dotted];
m3_119 -> m3_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_120 -> m3_118  [key=0, style=bold, color=blue];
m3_736 -> m3_737  [key=0, style=solid];
m3_737 -> m3_738  [key=0, style=solid];
m3_738 -> m3_739  [key=0, style=solid];
m3_738 -> m3_746  [key=2, style=dotted];
m3_738 -> m3_740  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_738 -> m3_742  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_738 -> m3_743  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_739 -> m3_740  [key=0, style=solid];
m3_739 -> m3_747  [key=2, style=dotted];
m3_739 -> m3_741  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_740 -> m3_741  [key=0, style=solid];
m3_740 -> m3_748  [key=2, style=dotted];
m3_742 -> m3_743  [key=0, style=solid];
m3_742 -> m3_25  [key=2, style=dotted];
m3_743 -> m3_744  [key=0, style=solid];
m3_743 -> m3_25  [key=2, style=dotted];
m3_741 -> m3_742  [key=0, style=solid];
m3_741 -> m3_749  [key=2, style=dotted];
m3_741 -> m3_744  [key=1, style=dashed, color=darkseagreen4, label=output];
m3_744 -> m3_745  [key=0, style=solid];
m3_744 -> m3_17  [key=2, style=dotted];
m3_745 -> m3_736  [key=0, style=bold, color=blue];
m3_4149 -> m3_4150  [key=0, style=solid];
m3_4150 -> m3_4151  [key=0, style=solid];
m3_4150 -> m3_4152  [key=2, style=dotted];
m3_4151 -> m3_4149  [key=0, style=bold, color=blue];
m3_673 -> m3_674  [key=0, style=solid];
m3_673 -> m3_675  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_673 -> m3_676  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_673 -> m3_677  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_673 -> m3_678  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_673 -> m3_679  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m3_674 -> m3_675  [key=0, style=solid];
m3_674 -> m3_681  [key=2, style=dotted];
m3_675 -> m3_676  [key=0, style=solid];
m3_675 -> m3_682  [key=2, style=dotted];
m3_676 -> m3_677  [key=0, style=solid];
m3_676 -> m3_683  [key=2, style=dotted];
m3_677 -> m3_678  [key=0, style=solid];
m3_677 -> m3_683  [key=2, style=dotted];
m3_678 -> m3_679  [key=0, style=solid];
m3_678 -> m3_683  [key=2, style=dotted];
m3_679 -> m3_680  [key=0, style=solid];
m3_679 -> m3_683  [key=2, style=dotted];
m3_680 -> m3_673  [key=0, style=bold, color=blue];
m3_2390 -> m3_2391  [key=0, style=solid];
m3_2391 -> m3_2392  [key=0, style=solid];
m3_2392 -> m3_2390  [key=0, style=bold, color=blue];
m3_2679 -> m3_2680  [key=0, style=solid];
m3_2680 -> m3_2681  [key=0, style=solid];
m3_2680 -> m3_2686  [key=2, style=dotted];
m3_2680 -> m3_2687  [key=2, style=dotted];
m3_2680 -> m3_1696  [key=2, style=dotted];
m3_2680 -> m3_2684  [key=1, style=dashed, color=darkseagreen4, label=response];
m3_2681 -> m3_2682  [key=0, style=solid];
m3_2681 -> m3_16  [key=2, style=dotted];
m3_2684 -> m3_2685  [key=0, style=solid];
m3_2684 -> m3_2688  [key=2, style=dotted];
m3_2684 -> m3_447  [key=2, style=dotted];
m3_2682 -> m3_2683  [key=0, style=solid];
m3_2682 -> m3_24  [key=2, style=dotted];
m3_2682 -> m3_2684  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m3_2683 -> m3_2684  [key=0, style=solid];
m3_2683 -> m3_25  [key=2, style=dotted];
m3_2685 -> m3_2679  [key=0, style=bold, color=blue];
m3_3905 -> m3_3906  [key=0, style=solid];
m3_3906 -> m3_3907  [key=0, style=solid];
m3_3907 -> m3_3905  [key=0, style=bold, color=blue];
m3_2619 -> m3_2620  [key=0, style=solid];
m3_2620 -> m3_2621  [key=0, style=solid];
m3_2620 -> m3_2622  [key=2, style=dotted];
m3_2621 -> m3_2619  [key=0, style=bold, color=blue];
m3_3277 -> m3_3278  [key=0, style=solid];
m3_3278 -> m3_3279  [key=0, style=solid];
m3_3278 -> m3_933  [key=2, style=dotted];
m3_3278 -> m3_3280  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_3278 -> m3_3281  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_3278 -> m3_3282  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_3278 -> m3_3283  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_3278 -> m3_3284  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_3279 -> m3_3280  [key=0, style=solid];
m3_3280 -> m3_3281  [key=0, style=solid];
m3_3280 -> m3_934  [key=2, style=dotted];
m3_3281 -> m3_3282  [key=0, style=solid];
m3_3282 -> m3_3283  [key=0, style=solid];
m3_3283 -> m3_3284  [key=0, style=solid];
m3_3283 -> m3_105  [key=2, style=dotted];
m3_3284 -> m3_3285  [key=0, style=solid];
m3_3284 -> m3_151  [key=2, style=dotted];
m3_3284 -> m3_3290  [key=2, style=dotted];
m3_3284 -> m3_3291  [key=2, style=dotted];
m3_3284 -> m3_152  [key=2, style=dotted];
m3_3285 -> m3_3286  [key=0, style=solid];
m3_3285 -> m3_17  [key=2, style=dotted];
m3_3286 -> m3_3287  [key=0, style=solid];
m3_3287 -> m3_3288  [key=0, style=solid];
m3_3287 -> m3_151  [key=2, style=dotted];
m3_3287 -> m3_3290  [key=2, style=dotted];
m3_3287 -> m3_3291  [key=2, style=dotted];
m3_3287 -> m3_3292  [key=2, style=dotted];
m3_3287 -> m3_152  [key=2, style=dotted];
m3_3288 -> m3_3289  [key=0, style=solid];
m3_3288 -> m3_17  [key=2, style=dotted];
m3_3289 -> m3_3277  [key=0, style=bold, color=blue];
m3_1648 -> m3_1649  [key=0, style=solid];
m3_1649 -> m3_1650  [key=0, style=solid];
m3_1650 -> m3_1651  [key=0, style=solid];
m3_1650 -> m3_151  [key=2, style=dotted];
m3_1650 -> m3_272  [key=2, style=dotted];
m3_1650 -> m3_1652  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1650 -> m3_1653  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1650 -> m3_1654  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1650 -> m3_1655  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1650 -> m3_1656  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1650 -> m3_1657  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1650 -> m3_1658  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1650 -> m3_1659  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1650 -> m3_1660  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1651 -> m3_1652  [key=0, style=solid];
m3_1651 -> m3_25  [key=2, style=dotted];
m3_1652 -> m3_1653  [key=0, style=solid];
m3_1652 -> m3_25  [key=2, style=dotted];
m3_1653 -> m3_1654  [key=0, style=solid];
m3_1653 -> m3_25  [key=2, style=dotted];
m3_1654 -> m3_1655  [key=0, style=solid];
m3_1654 -> m3_25  [key=2, style=dotted];
m3_1655 -> m3_1656  [key=0, style=solid];
m3_1655 -> m3_25  [key=2, style=dotted];
m3_1656 -> m3_1657  [key=0, style=solid];
m3_1656 -> m3_1662  [key=2, style=dotted];
m3_1656 -> m3_25  [key=2, style=dotted];
m3_1657 -> m3_1658  [key=0, style=solid];
m3_1657 -> m3_1662  [key=2, style=dotted];
m3_1657 -> m3_25  [key=2, style=dotted];
m3_1658 -> m3_1659  [key=0, style=solid];
m3_1658 -> m3_25  [key=2, style=dotted];
m3_1659 -> m3_1660  [key=0, style=solid];
m3_1659 -> m3_25  [key=2, style=dotted];
m3_1660 -> m3_1661  [key=0, style=solid];
m3_1660 -> m3_776  [key=2, style=dotted];
m3_1661 -> m3_1648  [key=0, style=bold, color=blue];
m3_3236 -> m3_3237  [key=0, style=solid];
m3_3237 -> m3_3238  [key=0, style=solid];
m3_3238 -> m3_3239  [key=0, style=solid];
m3_3238 -> m3_1129  [key=2, style=dotted];
m3_3238 -> m3_212  [key=2, style=dotted];
m3_3239 -> m3_3240  [key=0, style=solid];
m3_3239 -> m3_25  [key=2, style=dotted];
m3_3240 -> m3_3236  [key=0, style=bold, color=blue];
m3_2301 -> m3_2302  [key=0, style=solid];
m3_2302 -> m3_2301  [key=0, style=bold, color=blue];
m3_3056 -> m3_3057  [key=0, style=solid];
m3_3057 -> m3_3058  [key=0, style=solid];
m3_3058 -> m3_3059  [key=0, style=solid];
m3_3058 -> m3_151  [key=2, style=dotted];
m3_3058 -> m3_272  [key=2, style=dotted];
m3_3059 -> m3_3060  [key=0, style=solid];
m3_3059 -> m3_3061  [key=2, style=dotted];
m3_3059 -> m3_2993  [key=2, style=dotted];
m3_3060 -> m3_3056  [key=0, style=bold, color=blue];
m3_3485 -> m3_3486  [key=0, style=solid];
m3_3486 -> m3_3487  [key=0, style=solid];
m3_3486 -> m3_3489  [key=2, style=dotted];
m3_3486 -> m3_16  [key=2, style=dotted];
m3_3487 -> m3_3488  [key=0, style=solid];
m3_3487 -> m3_25  [key=2, style=dotted];
m3_3488 -> m3_3485  [key=0, style=bold, color=blue];
m3_3807 -> m3_3808  [key=0, style=solid];
m3_3808 -> m3_3809  [key=0, style=solid];
m3_3808 -> m3_172  [key=2, style=dotted];
m3_3808 -> m3_3814  [key=2, style=dotted];
m3_3808 -> m3_105  [key=2, style=dotted];
m3_3808 -> m3_3810  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3809 -> m3_3810  [key=0, style=solid];
m3_3809 -> m3_25  [key=2, style=dotted];
m3_3810 -> m3_3811  [key=0, style=solid];
m3_3810 -> m3_24  [key=2, style=dotted];
m3_3810 -> m3_3812  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_3811 -> m3_3812  [key=0, style=solid];
m3_3811 -> m3_3814  [key=2, style=dotted];
m3_3811 -> m3_3815  [key=2, style=dotted];
m3_3811 -> m3_25  [key=2, style=dotted];
m3_3812 -> m3_3813  [key=0, style=solid];
m3_3812 -> m3_3814  [key=2, style=dotted];
m3_3812 -> m3_3815  [key=2, style=dotted];
m3_3812 -> m3_25  [key=2, style=dotted];
m3_3813 -> m3_3807  [key=0, style=bold, color=blue];
m3_1243 -> m3_1244  [key=0, style=solid];
m3_1244 -> m3_1245  [key=0, style=solid];
m3_1244 -> m3_1250  [key=2, style=dotted];
m3_1244 -> m3_105  [key=2, style=dotted];
m3_1245 -> m3_1246  [key=0, style=solid];
m3_1245 -> m3_25  [key=2, style=dotted];
m3_1246 -> m3_1247  [key=0, style=solid];
m3_1246 -> m3_24  [key=2, style=dotted];
m3_1246 -> m3_1248  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1247 -> m3_1248  [key=0, style=solid];
m3_1247 -> m3_25  [key=2, style=dotted];
m3_1248 -> m3_1249  [key=0, style=solid];
m3_1248 -> m3_25  [key=2, style=dotted];
m3_1249 -> m3_1243  [key=0, style=bold, color=blue];
m3_3784 -> m3_3785  [key=0, style=solid];
m3_3785 -> m3_3786  [key=0, style=solid];
m3_3786 -> m3_3787  [key=0, style=solid];
m3_3786 -> m3_24  [key=2, style=dotted];
m3_3787 -> m3_3788  [key=0, style=solid];
m3_3787 -> m3_25  [key=2, style=dotted];
m3_3788 -> m3_3784  [key=0, style=bold, color=blue];
m3_1206 -> m3_1207  [key=0, style=solid];
m3_1207 -> m3_1208  [key=0, style=solid];
m3_1207 -> m3_1209  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_1207 -> m3_1210  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_1208 -> m3_1209  [key=0, style=solid];
m3_1208 -> m3_151  [key=2, style=dotted];
m3_1208 -> m3_1210  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_1209 -> m3_1210  [key=0, style=solid];
m3_1209 -> m3_152  [key=2, style=dotted];
m3_1209 -> m3_1211  [key=1, style=dashed, color=darkseagreen4, label=indented];
m3_1210 -> m3_1211  [key=0, style=solid];
m3_1210 -> m3_174  [key=2, style=dotted];
m3_1211 -> m3_1212  [key=0, style=solid];
m3_1211 -> m3_1213  [key=2, style=dotted];
m3_1212 -> m3_1206  [key=0, style=bold, color=blue];
m3_3256 -> m3_3257  [key=0, style=solid];
m3_3257 -> m3_3258  [key=0, style=solid];
m3_3257 -> m3_151  [key=2, style=dotted];
m3_3257 -> m3_272  [key=2, style=dotted];
m3_3257 -> m3_3259  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_3257 -> m3_3260  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_3257 -> m3_3261  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_3258 -> m3_3259  [key=0, style=solid];
m3_3258 -> m3_3253  [key=2, style=dotted];
m3_3258 -> m3_3254  [key=2, style=dotted];
m3_3258 -> m3_25  [key=2, style=dotted];
m3_3259 -> m3_3260  [key=0, style=solid];
m3_3259 -> m3_3255  [key=2, style=dotted];
m3_3259 -> m3_25  [key=2, style=dotted];
m3_3260 -> m3_3261  [key=0, style=solid];
m3_3260 -> m3_25  [key=2, style=dotted];
m3_3261 -> m3_3262  [key=0, style=solid];
m3_3261 -> m3_25  [key=2, style=dotted];
m3_3262 -> m3_3263  [key=0, style=solid];
m3_3262 -> m3_24  [key=2, style=dotted];
m3_3262 -> m3_3264  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3262 -> m3_3265  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3262 -> m3_3266  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3263 -> m3_3264  [key=0, style=solid];
m3_3263 -> m3_25  [key=2, style=dotted];
m3_3264 -> m3_3265  [key=0, style=solid];
m3_3264 -> m3_25  [key=2, style=dotted];
m3_3265 -> m3_3266  [key=0, style=solid];
m3_3265 -> m3_25  [key=2, style=dotted];
m3_3266 -> m3_3267  [key=0, style=solid];
m3_3266 -> m3_25  [key=2, style=dotted];
m3_3267 -> m3_3256  [key=0, style=bold, color=blue];
m3_2325 -> m3_2326  [key=0, style=solid];
m3_2326 -> m3_2327  [key=0, style=solid];
m3_2326 -> m3_2337  [key=2, style=dotted];
m3_2326 -> m3_2328  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_2326 -> m3_2329  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_2326 -> m3_2333  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_2326 -> m3_2334  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_2327 -> m3_2328  [key=0, style=solid];
m3_2327 -> m3_2338  [key=2, style=dotted];
m3_2328 -> m3_2329  [key=0, style=solid];
m3_2328 -> m3_2338  [key=2, style=dotted];
m3_2329 -> m3_2330  [key=0, style=solid];
m3_2329 -> m3_16  [key=2, style=dotted];
m3_2329 -> m3_2331  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2329 -> m3_2332  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2333 -> m3_2334  [key=0, style=solid];
m3_2333 -> m3_2339  [key=2, style=dotted];
m3_2333 -> m3_25  [key=2, style=dotted];
m3_2334 -> m3_2335  [key=0, style=solid];
m3_2334 -> m3_2339  [key=2, style=dotted];
m3_2334 -> m3_25  [key=2, style=dotted];
m3_2330 -> m3_2331  [key=0, style=solid];
m3_2331 -> m3_2332  [key=0, style=solid];
m3_2331 -> m3_17  [key=2, style=dotted];
m3_2332 -> m3_2333  [key=0, style=solid];
m3_2332 -> m3_24  [key=2, style=dotted];
m3_2332 -> m3_2334  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m3_2332 -> m3_2335  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m3_2335 -> m3_2336  [key=0, style=solid];
m3_2335 -> m3_128  [key=2, style=dotted];
m3_2336 -> m3_2325  [key=0, style=bold, color=blue];
m3_3597 -> m3_3598  [key=0, style=solid];
m3_3598 -> m3_3599  [key=0, style=solid];
m3_3599 -> m3_3600  [key=0, style=solid];
m3_3599 -> m3_24  [key=2, style=dotted];
m3_3599 -> m3_3601  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_3600 -> m3_3601  [key=0, style=solid];
m3_3600 -> m3_25  [key=2, style=dotted];
m3_3601 -> m3_3602  [key=0, style=solid];
m3_3601 -> m3_25  [key=2, style=dotted];
m3_3602 -> m3_3597  [key=0, style=bold, color=blue];
m3_1778 -> m3_1779  [key=0, style=solid];
m3_1779 -> m3_1780  [key=0, style=solid];
m3_1779 -> m3_1783  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1780 -> m3_1781  [key=0, style=solid];
m3_1780 -> m3_36  [key=2, style=dotted];
m3_1780 -> m3_1782  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1781 -> m3_1778  [key=0, style=bold, color=blue];
m3_2044 -> m3_2047  [key=0, style=solid];
m3_2047 -> m3_2048  [key=0, style=solid];
m3_2048 -> m3_2044  [key=0, style=bold, color=blue];
m3_372 -> m3_373  [key=0, style=solid];
m3_373 -> m3_374  [key=0, style=solid];
m3_373 -> m3_380  [key=2, style=dotted];
m3_373 -> m3_376  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_373 -> m3_377  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_373 -> m3_378  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_374 -> m3_375  [key=0, style=solid];
m3_374 -> m3_105  [key=2, style=dotted];
m3_376 -> m3_377  [key=0, style=solid];
m3_376 -> m3_25  [key=2, style=dotted];
m3_377 -> m3_378  [key=0, style=solid];
m3_377 -> m3_25  [key=2, style=dotted];
m3_378 -> m3_379  [key=0, style=solid];
m3_378 -> m3_25  [key=2, style=dotted];
m3_375 -> m3_376  [key=0, style=solid];
m3_375 -> m3_24  [key=2, style=dotted];
m3_375 -> m3_377  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_375 -> m3_378  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_379 -> m3_372  [key=0, style=bold, color=blue];
m3_3160 -> m3_3161  [key=0, style=solid];
m3_3161 -> m3_3162  [key=0, style=solid];
m3_3161 -> m3_3170  [key=2, style=dotted];
m3_3161 -> m3_105  [key=2, style=dotted];
m3_3161 -> m3_3163  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3162 -> m3_3163  [key=0, style=solid];
m3_3162 -> m3_25  [key=2, style=dotted];
m3_3163 -> m3_3164  [key=0, style=solid];
m3_3163 -> m3_24  [key=2, style=dotted];
m3_3164 -> m3_3165  [key=0, style=solid];
m3_3164 -> m3_25  [key=2, style=dotted];
m3_3165 -> m3_3166  [key=0, style=solid];
m3_3165 -> m3_3170  [key=2, style=dotted];
m3_3165 -> m3_105  [key=2, style=dotted];
m3_3165 -> m3_3167  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3166 -> m3_3167  [key=0, style=solid];
m3_3166 -> m3_25  [key=2, style=dotted];
m3_3167 -> m3_3168  [key=0, style=solid];
m3_3167 -> m3_24  [key=2, style=dotted];
m3_3168 -> m3_3169  [key=0, style=solid];
m3_3168 -> m3_25  [key=2, style=dotted];
m3_3169 -> m3_3160  [key=0, style=bold, color=blue];
m3_4153 -> m3_4154  [key=0, style=solid];
m3_4154 -> m3_4155  [key=0, style=solid];
m3_4154 -> m3_2543  [key=2, style=dotted];
m3_4154 -> m3_4157  [key=1, style=dashed, color=darkseagreen4, label=encodingName];
m3_4155 -> m3_4156  [key=0, style=solid];
m3_4155 -> m3_4157  [key=0, style=solid];
m3_4157 -> m3_4158  [key=0, style=solid];
m3_4157 -> m3_4159  [key=2, style=dotted];
m3_4156 -> m3_4158  [key=0, style=solid];
m3_4158 -> m3_4153  [key=0, style=bold, color=blue];
m3_2658 -> m3_2659  [key=0, style=solid];
m3_2659 -> m3_2660  [key=0, style=solid];
m3_2659 -> m3_2674  [key=2, style=dotted];
m3_2659 -> m3_2661  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m3_2659 -> m3_2665  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m3_2660 -> m3_2661  [key=0, style=solid];
m3_2660 -> m3_2675  [key=2, style=dotted];
m3_2661 -> m3_2662  [key=0, style=solid];
m3_2661 -> m3_2675  [key=2, style=dotted];
m3_2665 -> m3_2666  [key=0, style=solid];
m3_2665 -> m3_105  [key=2, style=dotted];
m3_2662 -> m3_2663  [key=0, style=solid];
m3_2662 -> m3_2674  [key=2, style=dotted];
m3_2662 -> m3_2664  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m3_2662 -> m3_2669  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m3_2663 -> m3_2664  [key=0, style=solid];
m3_2663 -> m3_2675  [key=2, style=dotted];
m3_2664 -> m3_2665  [key=0, style=solid];
m3_2669 -> m3_2670  [key=0, style=solid];
m3_2669 -> m3_105  [key=2, style=dotted];
m3_2666 -> m3_2667  [key=0, style=solid];
m3_2666 -> m3_2676  [key=2, style=dotted];
m3_2666 -> m3_2668  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_2667 -> m3_2668  [key=0, style=solid];
m3_2667 -> m3_25  [key=2, style=dotted];
m3_2668 -> m3_2669  [key=0, style=solid];
m3_2668 -> m3_25  [key=2, style=dotted];
m3_2670 -> m3_2671  [key=0, style=solid];
m3_2670 -> m3_2676  [key=2, style=dotted];
m3_2670 -> m3_2672  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_2671 -> m3_2672  [key=0, style=solid];
m3_2671 -> m3_25  [key=2, style=dotted];
m3_2672 -> m3_2673  [key=0, style=solid];
m3_2672 -> m3_25  [key=2, style=dotted];
m3_2673 -> m3_2658  [key=0, style=bold, color=blue];
m3_381 -> m3_382  [key=0, style=solid];
m3_382 -> m3_383  [key=0, style=solid];
m3_382 -> m3_389  [key=2, style=dotted];
m3_382 -> m3_385  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_382 -> m3_386  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_382 -> m3_387  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_383 -> m3_384  [key=0, style=solid];
m3_383 -> m3_105  [key=2, style=dotted];
m3_385 -> m3_386  [key=0, style=solid];
m3_385 -> m3_25  [key=2, style=dotted];
m3_386 -> m3_387  [key=0, style=solid];
m3_386 -> m3_25  [key=2, style=dotted];
m3_387 -> m3_388  [key=0, style=solid];
m3_387 -> m3_25  [key=2, style=dotted];
m3_384 -> m3_385  [key=0, style=solid];
m3_384 -> m3_24  [key=2, style=dotted];
m3_384 -> m3_386  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_384 -> m3_387  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_388 -> m3_381  [key=0, style=bold, color=blue];
m3_1531 -> m3_1532  [key=0, style=solid];
m3_1532 -> m3_1533  [key=0, style=solid];
m3_1532 -> m3_1536  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1533 -> m3_1534  [key=0, style=solid];
m3_1533 -> m3_151  [key=2, style=dotted];
m3_1533 -> m3_272  [key=2, style=dotted];
m3_1533 -> m3_1535  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1536 -> m3_1537  [key=0, style=solid];
m3_1536 -> m3_151  [key=2, style=dotted];
m3_1536 -> m3_272  [key=2, style=dotted];
m3_1536 -> m3_1538  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1534 -> m3_1535  [key=0, style=solid];
m3_1534 -> m3_25  [key=2, style=dotted];
m3_1535 -> m3_1536  [key=0, style=solid];
m3_1535 -> m3_25  [key=2, style=dotted];
m3_1537 -> m3_1538  [key=0, style=solid];
m3_1537 -> m3_25  [key=2, style=dotted];
m3_1538 -> m3_1539  [key=0, style=solid];
m3_1538 -> m3_25  [key=2, style=dotted];
m3_1539 -> m3_1531  [key=0, style=bold, color=blue];
m3_2757 -> m3_2758  [key=0, style=solid];
m3_2758 -> m3_2759  [key=0, style=solid];
m3_2759 -> m3_2760  [key=0, style=solid];
m3_2760 -> m3_2757  [key=0, style=bold, color=blue];
m3_237 -> m3_238  [key=0, style=solid];
m3_238 -> m3_239  [key=0, style=solid];
m3_238 -> m3_234  [key=2, style=dotted];
m3_238 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_36  [key=2, style=dotted];
m3_239 -> m3_247  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_234  [key=2, style=dotted];
m3_241 -> m3_242  [key=0, style=solid];
m3_241 -> m3_105  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_25  [key=2, style=dotted];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_36  [key=2, style=dotted];
m3_243 -> m3_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_24  [key=2, style=dotted];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_25  [key=2, style=dotted];
m3_246 -> m3_237  [key=0, style=bold, color=blue];
m3_1598 -> m3_1599  [key=0, style=solid];
m3_1599 -> m3_1600  [key=0, style=solid];
m3_1599 -> m3_1602  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1600 -> m3_1601  [key=0, style=solid];
m3_1600 -> m3_24  [key=2, style=dotted];
m3_1602 -> m3_1603  [key=0, style=solid];
m3_1602 -> m3_24  [key=2, style=dotted];
m3_1602 -> m3_1604  [key=1, style=dashed, color=darkseagreen4, label=n];
m3_1602 -> m3_1605  [key=1, style=dashed, color=darkseagreen4, label=n];
m3_1602 -> m3_1606  [key=1, style=dashed, color=darkseagreen4, label=n];
m3_1602 -> m3_1607  [key=1, style=dashed, color=darkseagreen4, label=n];
m3_1601 -> m3_1602  [key=0, style=solid];
m3_1601 -> m3_25  [key=2, style=dotted];
m3_1603 -> m3_1604  [key=0, style=solid];
m3_1603 -> m3_1226  [key=2, style=dotted];
m3_1603 -> m3_25  [key=2, style=dotted];
m3_1604 -> m3_1605  [key=0, style=solid];
m3_1604 -> m3_1226  [key=2, style=dotted];
m3_1604 -> m3_25  [key=2, style=dotted];
m3_1605 -> m3_1606  [key=0, style=solid];
m3_1605 -> m3_25  [key=2, style=dotted];
m3_1606 -> m3_1607  [key=0, style=solid];
m3_1606 -> m3_25  [key=2, style=dotted];
m3_1607 -> m3_1608  [key=0, style=solid];
m3_1607 -> m3_25  [key=2, style=dotted];
m3_1608 -> m3_1598  [key=0, style=bold, color=blue];
m3_3585 -> m3_3586  [key=0, style=solid];
m3_3586 -> m3_3587  [key=0, style=solid];
m3_3587 -> m3_3588  [key=0, style=solid];
m3_3587 -> m3_24  [key=2, style=dotted];
m3_3588 -> m3_3589  [key=0, style=solid];
m3_3589 -> m3_3590  [key=0, style=solid];
m3_3589 -> m3_2338  [key=2, style=dotted];
m3_3589 -> m3_25  [key=2, style=dotted];
m3_3590 -> m3_3585  [key=0, style=bold, color=blue];
m3_4185 -> m3_4186  [key=0, style=solid];
m3_4185 -> m3_4187  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_4186 -> m3_4187  [key=0, style=solid];
m3_4187 -> m3_4188  [key=0, style=solid];
m3_4188 -> m3_4189  [key=0, style=solid];
m3_4189 -> m3_4185  [key=0, style=bold, color=blue];
m3_3214 -> m3_3215  [key=0, style=solid];
m3_3215 -> m3_3216  [key=0, style=solid];
m3_3215 -> m3_36  [key=2, style=dotted];
m3_3215 -> m3_3217  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3216 -> m3_3214  [key=0, style=bold, color=blue];
m3_3816 -> m3_3817  [key=0, style=solid];
m3_3817 -> m3_3818  [key=0, style=solid];
m3_3818 -> m3_3819  [key=0, style=solid];
m3_3818 -> m3_151  [key=2, style=dotted];
m3_3818 -> m3_521  [key=2, style=dotted];
m3_3818 -> m3_272  [key=2, style=dotted];
m3_3818 -> m3_3820  [key=1, style=dashed, color=darkseagreen4, label=people];
m3_3818 -> m3_3821  [key=1, style=dashed, color=darkseagreen4, label=people];
m3_3819 -> m3_3820  [key=0, style=solid];
m3_3819 -> m3_25  [key=2, style=dotted];
m3_3820 -> m3_3821  [key=0, style=solid];
m3_3820 -> m3_3822  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3820 -> m3_3823  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3821 -> m3_3822  [key=0, style=solid];
m3_3821 -> m3_3823  [key=1, style=dashed, color=darkseagreen4, label=jane];
m3_3822 -> m3_3823  [key=0, style=solid];
m3_3822 -> m3_25  [key=2, style=dotted];
m3_3823 -> m3_3824  [key=0, style=solid];
m3_3823 -> m3_25  [key=2, style=dotted];
m3_3824 -> m3_3816  [key=0, style=bold, color=blue];
m3_2558 -> m3_2559  [key=0, style=solid];
m3_2559 -> m3_2560  [key=0, style=solid];
m3_2559 -> m3_24  [key=2, style=dotted];
m3_2560 -> m3_2561  [key=0, style=solid];
m3_2560 -> m3_2542  [key=2, style=dotted];
m3_2560 -> m3_934  [key=2, style=dotted];
m3_2560 -> m3_1090  [key=2, style=dotted];
m3_2560 -> m3_25  [key=2, style=dotted];
m3_2561 -> m3_2558  [key=0, style=bold, color=blue];
m3_4117 -> m3_4118  [key=0, style=solid];
m3_4118 -> m3_4119  [key=0, style=solid];
m3_4118 -> m3_2543  [key=2, style=dotted];
m3_4118 -> m3_4121  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m3_4118 -> m3_4124  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m3_4119 -> m3_4120  [key=0, style=solid];
m3_4119 -> m3_4121  [key=0, style=solid];
m3_4121 -> m3_4122  [key=0, style=solid];
m3_4121 -> m3_4128  [key=2, style=dotted];
m3_4121 -> m3_4129  [key=2, style=dotted];
m3_4121 -> m3_4125  [key=1, style=dashed, color=darkseagreen4, label=address];
m3_4121 -> m3_4126  [key=1, style=dashed, color=darkseagreen4, label=address];
m3_4124 -> m3_4125  [key=0, style=solid];
m3_4124 -> m3_4126  [key=0, style=solid];
m3_4124 -> m3_4130  [key=2, style=dotted];
m3_4124 -> m3_4129  [key=2, style=dotted];
m3_4124 -> m3_4131  [key=2, style=dotted];
m3_4124 -> m3_4124  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m3_4120 -> m3_4127  [key=0, style=solid];
m3_4122 -> m3_4123  [key=0, style=solid];
m3_4122 -> m3_4124  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m3_4125 -> m3_4127  [key=0, style=solid];
m3_4125 -> m3_4132  [key=2, style=dotted];
m3_4126 -> m3_4127  [key=0, style=solid];
m3_4126 -> m3_4133  [key=2, style=dotted];
m3_4123 -> m3_4124  [key=0, style=solid];
m3_4127 -> m3_4117  [key=0, style=bold, color=blue];
m3_3936 -> m3_3937  [key=0, style=solid];
m3_3937 -> m3_3938  [key=0, style=solid];
m3_3938 -> m3_3939  [key=0, style=solid];
m3_3938 -> m3_24  [key=2, style=dotted];
m3_3939 -> m3_3940  [key=0, style=solid];
m3_3940 -> m3_3941  [key=0, style=solid];
m3_3940 -> m3_25  [key=2, style=dotted];
m3_3941 -> m3_3936  [key=0, style=bold, color=blue];
m3_2407 -> m3_2408  [key=0, style=solid];
m3_2408 -> m3_2409  [key=0, style=solid];
m3_2408 -> m3_36  [key=2, style=dotted];
m3_2408 -> m3_2410  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2409 -> m3_2407  [key=0, style=bold, color=blue];
m3_2851 -> m3_2852  [key=0, style=solid];
m3_2852 -> m3_2853  [key=0, style=solid];
m3_2852 -> m3_2376  [key=2, style=dotted];
m3_2853 -> m3_2851  [key=0, style=bold, color=blue];
m3_3069 -> m3_3070  [key=0, style=solid];
m3_3070 -> m3_3071  [key=0, style=solid];
m3_3071 -> m3_3072  [key=0, style=solid];
m3_3071 -> m3_151  [key=2, style=dotted];
m3_3071 -> m3_272  [key=2, style=dotted];
m3_3071 -> m3_3073  [key=1, style=dashed, color=darkseagreen4, label=value];
m3_3072 -> m3_3073  [key=0, style=solid];
m3_3072 -> m3_776  [key=2, style=dotted];
m3_3073 -> m3_3074  [key=0, style=solid];
m3_3073 -> m3_3061  [key=2, style=dotted];
m3_3073 -> m3_2993  [key=2, style=dotted];
m3_3074 -> m3_3069  [key=0, style=bold, color=blue];
m3_2377 -> m3_2378  [key=0, style=solid];
m3_2378 -> m3_2379  [key=0, style=solid];
m3_2379 -> m3_2377  [key=0, style=bold, color=blue];
m3_4160 -> m3_4161  [key=0, style=solid];
m3_4161 -> m3_4162  [key=0, style=solid];
m3_4161 -> m3_2376  [key=2, style=dotted];
m3_4162 -> m3_4160  [key=0, style=bold, color=blue];
m3_3896 -> m3_3897  [key=0, style=solid];
m3_3897 -> m3_3898  [key=0, style=solid];
m3_3897 -> m3_3883  [key=2, style=dotted];
m3_3898 -> m3_3896  [key=0, style=bold, color=blue];
m3_1325 -> m3_1326  [key=0, style=solid];
m3_1326 -> m3_1327  [key=0, style=solid];
m3_1326 -> m3_1331  [key=2, style=dotted];
m3_1326 -> m3_1332  [key=2, style=dotted];
m3_1327 -> m3_1328  [key=0, style=solid];
m3_1327 -> m3_1287  [key=2, style=dotted];
m3_1328 -> m3_1329  [key=0, style=solid];
m3_1328 -> m3_16  [key=2, style=dotted];
m3_1329 -> m3_1330  [key=0, style=solid];
m3_1329 -> m3_17  [key=2, style=dotted];
m3_1330 -> m3_1325  [key=0, style=bold, color=blue];
m3_3769 -> m3_3770  [key=0, style=solid];
m3_3770 -> m3_3771  [key=0, style=solid];
m3_3770 -> m3_3773  [key=2, style=dotted];
m3_3770 -> m3_151  [key=2, style=dotted];
m3_3770 -> m3_1846  [key=2, style=dotted];
m3_3770 -> m3_174  [key=2, style=dotted];
m3_3771 -> m3_3772  [key=0, style=solid];
m3_3771 -> m3_17  [key=2, style=dotted];
m3_3772 -> m3_3769  [key=0, style=bold, color=blue];
m3_4134 -> m3_4135  [key=0, style=solid];
m3_4135 -> m3_4136  [key=0, style=solid];
m3_4135 -> m3_2376  [key=2, style=dotted];
m3_4136 -> m3_4134  [key=0, style=bold, color=blue];
m3_3466 -> m3_3473  [key=0, style=solid];
m3_3473 -> m3_3474  [key=0, style=solid];
m3_3473 -> m3_349  [key=2, style=dotted];
m3_3473 -> m3_350  [key=2, style=dotted];
m3_3473 -> m3_3476  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m3_3474 -> m3_3475  [key=0, style=solid];
m3_3474 -> m3_351  [key=2, style=dotted];
m3_3474 -> m3_3476  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_3476 -> m3_3477  [key=0, style=solid];
m3_3476 -> m3_2505  [key=2, style=dotted];
m3_3475 -> m3_3476  [key=0, style=solid];
m3_3475 -> m3_1846  [key=2, style=dotted];
m3_3477 -> m3_3466  [key=0, style=bold, color=blue];
m3_792 -> m3_793  [key=0, style=solid];
m3_793 -> m3_794  [key=0, style=solid];
m3_793 -> m3_172  [key=2, style=dotted];
m3_793 -> m3_796  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m3_793 -> m3_802  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m3_794 -> m3_795  [key=0, style=solid];
m3_794 -> m3_796  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_794 -> m3_797  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_796 -> m3_797  [key=0, style=solid];
m3_796 -> m3_809  [key=2, style=dotted];
m3_796 -> m3_810  [key=2, style=dotted];
m3_796 -> m3_811  [key=2, style=dotted];
m3_802 -> m3_803  [key=0, style=solid];
m3_802 -> m3_815  [key=2, style=dotted];
m3_795 -> m3_796  [key=0, style=solid];
m3_795 -> m3_798  [key=0, style=solid];
m3_797 -> m3_795  [key=0, style=solid];
m3_797 -> m3_797  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_798 -> m3_799  [key=0, style=solid];
m3_798 -> m3_151  [key=2, style=dotted];
m3_799 -> m3_800  [key=0, style=solid];
m3_799 -> m3_812  [key=2, style=dotted];
m3_799 -> m3_802  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_799 -> m3_806  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m3_800 -> m3_801  [key=0, style=solid];
m3_800 -> m3_813  [key=2, style=dotted];
m3_800 -> m3_804  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_800 -> m3_806  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_806 -> m3_807  [key=0, style=solid];
m3_806 -> m3_819  [key=2, style=dotted];
m3_806 -> m3_820  [key=2, style=dotted];
m3_801 -> m3_802  [key=0, style=solid];
m3_801 -> m3_814  [key=2, style=dotted];
m3_801 -> m3_803  [key=1, style=dashed, color=darkseagreen4, label=streamWriter];
m3_804 -> m3_805  [key=0, style=solid];
m3_804 -> m3_817  [key=2, style=dotted];
m3_803 -> m3_804  [key=0, style=solid];
m3_803 -> m3_816  [key=2, style=dotted];
m3_805 -> m3_806  [key=0, style=solid];
m3_805 -> m3_818  [key=2, style=dotted];
m3_805 -> m3_807  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m3_807 -> m3_808  [key=0, style=solid];
m3_807 -> m3_821  [key=2, style=dotted];
m3_808 -> m3_792  [key=0, style=bold, color=blue];
m3_1663 -> m3_1664  [key=0, style=solid];
m3_1664 -> m3_1665  [key=0, style=solid];
m3_1665 -> m3_1666  [key=0, style=solid];
m3_1665 -> m3_916  [key=2, style=dotted];
m3_1665 -> m3_1667  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_1665 -> m3_1668  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_1665 -> m3_1669  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_1665 -> m3_1670  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_1665 -> m3_1671  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m3_1666 -> m3_1667  [key=0, style=solid];
m3_1666 -> m3_25  [key=2, style=dotted];
m3_1667 -> m3_1668  [key=0, style=solid];
m3_1667 -> m3_1082  [key=2, style=dotted];
m3_1667 -> m3_25  [key=2, style=dotted];
m3_1668 -> m3_1669  [key=0, style=solid];
m3_1668 -> m3_25  [key=2, style=dotted];
m3_1669 -> m3_1670  [key=0, style=solid];
m3_1669 -> m3_25  [key=2, style=dotted];
m3_1670 -> m3_1671  [key=0, style=solid];
m3_1670 -> m3_25  [key=2, style=dotted];
m3_1671 -> m3_1672  [key=0, style=solid];
m3_1671 -> m3_25  [key=2, style=dotted];
m3_1672 -> m3_1663  [key=0, style=bold, color=blue];
m3_160 -> m3_161  [key=0, style=solid];
m3_161 -> m3_162  [key=0, style=solid];
m3_162 -> m3_160  [key=0, style=bold, color=blue];
m3_834 -> m3_835  [key=0, style=solid];
m3_835 -> m3_836  [key=0, style=solid];
m3_835 -> m3_839  [key=2, style=dotted];
m3_836 -> m3_837  [key=0, style=solid];
m3_836 -> m3_105  [key=2, style=dotted];
m3_837 -> m3_838  [key=0, style=solid];
m3_837 -> m3_25  [key=2, style=dotted];
m3_838 -> m3_834  [key=0, style=bold, color=blue];
m3_2506 -> m3_2507  [key=0, style=solid];
m3_2507 -> m3_2508  [key=0, style=solid];
m3_2507 -> m3_2516  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m3_2508 -> m3_2509  [key=0, style=solid];
m3_2508 -> m3_2518  [key=2, style=dotted];
m3_2508 -> m3_2519  [key=2, style=dotted];
m3_2508 -> m3_2510  [key=1, style=dashed, color=darkseagreen4, label=s1];
m3_2516 -> m3_2517  [key=0, style=solid];
m3_2516 -> m3_36  [key=2, style=dotted];
m3_2516 -> m3_2520  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_2509 -> m3_2510  [key=0, style=solid];
m3_2509 -> m3_16  [key=2, style=dotted];
m3_2509 -> m3_2511  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2509 -> m3_2516  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2509 -> m3_2521  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2510 -> m3_2511  [key=0, style=solid];
m3_2510 -> m3_2516  [key=0, style=solid];
m3_2511 -> m3_2512  [key=0, style=solid];
m3_2511 -> m3_24  [key=2, style=dotted];
m3_2511 -> m3_2513  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2511 -> m3_2514  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2511 -> m3_2515  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2512 -> m3_2513  [key=0, style=solid];
m3_2512 -> m3_25  [key=2, style=dotted];
m3_2513 -> m3_2514  [key=0, style=solid];
m3_2513 -> m3_25  [key=2, style=dotted];
m3_2514 -> m3_2515  [key=0, style=solid];
m3_2514 -> m3_25  [key=2, style=dotted];
m3_2515 -> m3_2517  [key=0, style=solid];
m3_2515 -> m3_25  [key=2, style=dotted];
m3_2517 -> m3_2506  [key=0, style=bold, color=blue];
m3_1746 -> m3_1747  [key=0, style=solid];
m3_1747 -> m3_1748  [key=0, style=solid];
m3_1748 -> m3_1749  [key=0, style=solid];
m3_1748 -> m3_24  [key=2, style=dotted];
m3_1749 -> m3_1746  [key=0, style=bold, color=blue];
m3_4146 -> m3_4147  [key=0, style=solid];
m3_4147 -> m3_4148  [key=0, style=solid];
m3_4147 -> m3_2376  [key=2, style=dotted];
m3_4148 -> m3_4146  [key=0, style=bold, color=blue];
m3_2226 -> m3_2227  [key=0, style=solid];
m3_2227 -> m3_2228  [key=0, style=solid];
m3_2227 -> m3_1493  [key=2, style=dotted];
m3_2227 -> m3_2229  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_2227 -> m3_2230  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_2227 -> m3_2231  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_2227 -> m3_2235  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_2228 -> m3_2229  [key=0, style=solid];
m3_2228 -> m3_1082  [key=2, style=dotted];
m3_2229 -> m3_2230  [key=0, style=solid];
m3_2230 -> m3_2231  [key=0, style=solid];
m3_2231 -> m3_2232  [key=0, style=solid];
m3_2235 -> m3_2236  [key=0, style=solid];
m3_2235 -> m3_2135  [key=2, style=dotted];
m3_2232 -> m3_2233  [key=0, style=solid];
m3_2232 -> m3_354  [key=2, style=dotted];
m3_2232 -> m3_1090  [key=2, style=dotted];
m3_2232 -> m3_2235  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m3_2232 -> m3_2241  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m3_2233 -> m3_2234  [key=0, style=solid];
m3_2241 -> m3_2242  [key=0, style=solid];
m3_2241 -> m3_25  [key=2, style=dotted];
m3_2234 -> m3_2235  [key=0, style=solid];
m3_2234 -> m3_2237  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m3_2237 -> m3_2238  [key=0, style=solid];
m3_2237 -> m3_17  [key=2, style=dotted];
m3_2236 -> m3_2237  [key=0, style=solid];
m3_2236 -> m3_151  [key=2, style=dotted];
m3_2236 -> m3_174  [key=2, style=dotted];
m3_2236 -> m3_2238  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2238 -> m3_2239  [key=0, style=solid];
m3_2238 -> m3_24  [key=2, style=dotted];
m3_2238 -> m3_2240  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2238 -> m3_2241  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2238 -> m3_2242  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2238 -> m3_2243  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2238 -> m3_2244  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2239 -> m3_2240  [key=0, style=solid];
m3_2239 -> m3_25  [key=2, style=dotted];
m3_2240 -> m3_2241  [key=0, style=solid];
m3_2240 -> m3_25  [key=2, style=dotted];
m3_2242 -> m3_2243  [key=0, style=solid];
m3_2242 -> m3_25  [key=2, style=dotted];
m3_2243 -> m3_2244  [key=0, style=solid];
m3_2243 -> m3_25  [key=2, style=dotted];
m3_2244 -> m3_2245  [key=0, style=solid];
m3_2244 -> m3_25  [key=2, style=dotted];
m3_2245 -> m3_2226  [key=0, style=bold, color=blue];
m3_3603 -> m3_3604  [key=0, style=solid];
m3_3604 -> m3_3605  [key=0, style=solid];
m3_3604 -> m3_3571  [key=2, style=dotted];
m3_3605 -> m3_3606  [key=0, style=solid];
m3_3605 -> m3_105  [key=2, style=dotted];
m3_3605 -> m3_3608  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3605 -> m3_3614  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3606 -> m3_3607  [key=0, style=solid];
m3_3606 -> m3_25  [key=2, style=dotted];
m3_3608 -> m3_3609  [key=0, style=solid];
m3_3607 -> m3_3608  [key=0, style=solid];
m3_3609 -> m3_3610  [key=0, style=solid];
m3_3609 -> m3_3612  [key=2, style=dotted];
m3_3610 -> m3_3611  [key=0, style=solid];
m3_3610 -> m3_25  [key=2, style=dotted];
m3_3611 -> m3_3603  [key=0, style=bold, color=blue];
m3_1196 -> m3_1197  [key=0, style=solid];
m3_1197 -> m3_1198  [key=0, style=solid];
m3_1197 -> m3_1204  [key=2, style=dotted];
m3_1197 -> m3_1199  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1197 -> m3_1200  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1197 -> m3_1201  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1198 -> m3_1199  [key=0, style=solid];
m3_1198 -> m3_1205  [key=2, style=dotted];
m3_1199 -> m3_1200  [key=0, style=solid];
m3_1199 -> m3_1205  [key=2, style=dotted];
m3_1200 -> m3_1201  [key=0, style=solid];
m3_1200 -> m3_1205  [key=2, style=dotted];
m3_1201 -> m3_1202  [key=0, style=solid];
m3_1201 -> m3_105  [key=2, style=dotted];
m3_1202 -> m3_1203  [key=0, style=solid];
m3_1202 -> m3_25  [key=2, style=dotted];
m3_1203 -> m3_1196  [key=0, style=bold, color=blue];
m3_1673 -> m3_1674  [key=0, style=solid];
m3_1674 -> m3_1675  [key=0, style=solid];
m3_1675 -> m3_1676  [key=0, style=solid];
m3_1675 -> m3_445  [key=2, style=dotted];
m3_1676 -> m3_1677  [key=0, style=solid];
m3_1676 -> m3_749  [key=2, style=dotted];
m3_1676 -> m3_24  [key=2, style=dotted];
m3_1676 -> m3_1678  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1676 -> m3_1679  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1676 -> m3_1680  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1677 -> m3_1678  [key=0, style=solid];
m3_1677 -> m3_776  [key=2, style=dotted];
m3_1678 -> m3_1679  [key=0, style=solid];
m3_1678 -> m3_25  [key=2, style=dotted];
m3_1679 -> m3_1680  [key=0, style=solid];
m3_1679 -> m3_25  [key=2, style=dotted];
m3_1680 -> m3_1681  [key=0, style=solid];
m3_1680 -> m3_25  [key=2, style=dotted];
m3_1681 -> m3_1673  [key=0, style=bold, color=blue];
m3_2897 -> m3_2898  [key=0, style=solid];
m3_2898 -> m3_2899  [key=0, style=solid];
m3_2898 -> m3_2902  [key=2, style=dotted];
m3_2899 -> m3_2900  [key=0, style=solid];
m3_2899 -> m3_16  [key=2, style=dotted];
m3_2900 -> m3_2901  [key=0, style=solid];
m3_2900 -> m3_17  [key=2, style=dotted];
m3_2901 -> m3_2897  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_2857 -> m3_2858  [key=0, style=solid];
m3_2858 -> m3_2859  [key=0, style=solid];
m3_2858 -> m3_2376  [key=2, style=dotted];
m3_2859 -> m3_2857  [key=0, style=bold, color=blue];
m3_3697 -> m3_3698  [key=0, style=solid];
m3_3698 -> m3_3697  [key=0, style=bold, color=blue];
m3_1446 -> m3_1447  [key=0, style=solid];
m3_1447 -> m3_1448  [key=0, style=solid];
m3_1448 -> m3_1449  [key=0, style=solid];
m3_1448 -> m3_24  [key=2, style=dotted];
m3_1449 -> m3_1450  [key=0, style=solid];
m3_1449 -> m3_1452  [key=0, style=solid];
m3_1449 -> m3_1437  [key=2, style=dotted];
m3_1450 -> m3_1451  [key=0, style=solid];
m3_1451 -> m3_1452  [key=0, style=solid];
m3_1451 -> m3_1438  [key=2, style=dotted];
m3_1451 -> m3_447  [key=2, style=dotted];
m3_1452 -> m3_1446  [key=0, style=bold, color=blue];
m3_992 -> m3_993  [key=0, style=solid];
m3_993 -> m3_994  [key=0, style=solid];
m3_993 -> m3_997  [key=2, style=dotted];
m3_993 -> m3_105  [key=2, style=dotted];
m3_994 -> m3_995  [key=0, style=solid];
m3_994 -> m3_24  [key=2, style=dotted];
m3_995 -> m3_996  [key=0, style=solid];
m3_995 -> m3_25  [key=2, style=dotted];
m3_996 -> m3_992  [key=0, style=bold, color=blue];
m3_4078 -> m3_4079  [key=0, style=solid];
m3_4079 -> m3_4080  [key=0, style=solid];
m3_4079 -> m3_36  [key=2, style=dotted];
m3_4079 -> m3_4081  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_4080 -> m3_4078  [key=0, style=bold, color=blue];
m3_1785 -> m3_1786  [key=0, style=solid];
m3_1786 -> m3_1787  [key=0, style=solid];
m3_1786 -> m3_1790  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1787 -> m3_1788  [key=0, style=solid];
m3_1787 -> m3_36  [key=2, style=dotted];
m3_1787 -> m3_1789  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1788 -> m3_1785  [key=0, style=bold, color=blue];
m3_2096 -> m3_2097  [key=0, style=solid];
m3_2097 -> m3_2098  [key=0, style=solid];
m3_2097 -> m3_2099  [key=2, style=dotted];
m3_2098 -> m3_2096  [key=0, style=bold, color=blue];
m3_2590 -> m3_2591  [key=0, style=solid];
m3_2591 -> m3_2592  [key=0, style=solid];
m3_2591 -> m3_24  [key=2, style=dotted];
m3_2592 -> m3_2593  [key=0, style=solid];
m3_2592 -> m3_25  [key=2, style=dotted];
m3_2593 -> m3_2590  [key=0, style=bold, color=blue];
m3_273 -> m3_274  [key=0, style=solid];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_281  [key=2, style=dotted];
m3_274 -> m3_276  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_275 -> m3_276  [key=0, style=solid];
m3_275 -> m3_282  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_276 -> m3_105  [key=2, style=dotted];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> m3_25  [key=2, style=dotted];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_24  [key=2, style=dotted];
m3_279 -> m3_280  [key=0, style=solid];
m3_279 -> m3_25  [key=2, style=dotted];
m3_280 -> m3_273  [key=0, style=bold, color=blue];
m3_1297 -> m3_1298  [key=0, style=solid];
m3_1298 -> m3_1299  [key=0, style=solid];
m3_1298 -> m3_1286  [key=2, style=dotted];
m3_1299 -> m3_1300  [key=0, style=solid];
m3_1299 -> m3_1287  [key=2, style=dotted];
m3_1300 -> m3_1301  [key=0, style=solid];
m3_1300 -> m3_151  [key=2, style=dotted];
m3_1300 -> m3_152  [key=2, style=dotted];
m3_1300 -> m3_1302  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1301 -> m3_1302  [key=0, style=solid];
m3_1301 -> m3_25  [key=2, style=dotted];
m3_1302 -> m3_1303  [key=0, style=solid];
m3_1302 -> m3_151  [key=2, style=dotted];
m3_1302 -> m3_272  [key=2, style=dotted];
m3_1302 -> m3_1304  [key=1, style=dashed, color=darkseagreen4, label=m2];
m3_1303 -> m3_1304  [key=0, style=solid];
m3_1303 -> m3_934  [key=2, style=dotted];
m3_1303 -> m3_25  [key=2, style=dotted];
m3_1304 -> m3_1305  [key=0, style=solid];
m3_1304 -> m3_934  [key=2, style=dotted];
m3_1304 -> m3_25  [key=2, style=dotted];
m3_1305 -> m3_1297  [key=0, style=bold, color=blue];
m3_2695 -> m3_4165  [key=0, style=solid];
m3_4165 -> m3_4166  [key=0, style=solid];
m3_4166 -> m3_2695  [key=0, style=bold, color=blue];
m3_1540 -> m3_1541  [key=0, style=solid];
m3_1541 -> m3_1542  [key=0, style=solid];
m3_1542 -> m3_1540  [key=0, style=bold, color=blue];
m3_2689 -> m3_2690  [key=0, style=solid];
m3_2690 -> m3_2691  [key=0, style=solid];
m3_2690 -> m3_2695  [key=2, style=dotted];
m3_2691 -> m3_2692  [key=0, style=solid];
m3_2691 -> m3_105  [key=2, style=dotted];
m3_2692 -> m3_2693  [key=0, style=solid];
m3_2692 -> m3_151  [key=2, style=dotted];
m3_2692 -> m3_272  [key=2, style=dotted];
m3_2693 -> m3_2694  [key=0, style=solid];
m3_2693 -> m3_25  [key=2, style=dotted];
m3_2694 -> m3_2689  [key=0, style=bold, color=blue];
m3_2848 -> m3_2849  [key=0, style=solid];
m3_2849 -> m3_2850  [key=0, style=solid];
m3_2849 -> m3_2376  [key=2, style=dotted];
m3_2850 -> m3_2848  [key=0, style=bold, color=blue];
m3_3561 -> m3_3562  [key=0, style=solid];
m3_3562 -> m3_3563  [key=0, style=solid];
m3_3562 -> m3_24  [key=2, style=dotted];
m3_3563 -> m3_3564  [key=0, style=solid];
m3_3563 -> m3_25  [key=2, style=dotted];
m3_3563 -> m3_3563  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_3564 -> m3_3565  [key=0, style=solid];
m3_3564 -> m3_25  [key=2, style=dotted];
m3_3564 -> m3_3564  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_3565 -> m3_3561  [key=0, style=bold, color=blue];
m3_1315 -> m3_1316  [key=0, style=solid];
m3_1316 -> m3_1317  [key=0, style=solid];
m3_1316 -> m3_1286  [key=2, style=dotted];
m3_1316 -> m3_1321  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_1316 -> m3_1322  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_1317 -> m3_1318  [key=0, style=solid];
m3_1317 -> m3_1287  [key=2, style=dotted];
m3_1321 -> m3_1322  [key=0, style=solid];
m3_1321 -> m3_25  [key=2, style=dotted];
m3_1322 -> m3_1323  [key=0, style=solid];
m3_1322 -> m3_25  [key=2, style=dotted];
m3_1318 -> m3_1319  [key=0, style=solid];
m3_1318 -> m3_1324  [key=2, style=dotted];
m3_1318 -> m3_1276  [key=2, style=dotted];
m3_1318 -> m3_1320  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1319 -> m3_1320  [key=0, style=solid];
m3_1319 -> m3_25  [key=2, style=dotted];
m3_1320 -> m3_1321  [key=0, style=solid];
m3_1320 -> m3_1324  [key=2, style=dotted];
m3_1320 -> m3_212  [key=2, style=dotted];
m3_1320 -> m3_1322  [key=1, style=dashed, color=darkseagreen4, label=m2];
m3_1323 -> m3_1315  [key=0, style=bold, color=blue];
m3_1865 -> m3_1866  [key=0, style=solid];
m3_1866 -> m3_1867  [key=0, style=solid];
m3_1866 -> m3_110  [key=2, style=dotted];
m3_1866 -> m3_1868  [key=1, style=dashed, color=darkseagreen4, label=strings];
m3_1866 -> m3_1869  [key=1, style=dashed, color=darkseagreen4, label=strings];
m3_1866 -> m3_1870  [key=1, style=dashed, color=darkseagreen4, label=strings];
m3_1867 -> m3_1868  [key=0, style=solid];
m3_1867 -> m3_1873  [key=2, style=dotted];
m3_1868 -> m3_1869  [key=0, style=solid];
m3_1868 -> m3_1873  [key=2, style=dotted];
m3_1869 -> m3_1870  [key=0, style=solid];
m3_1869 -> m3_1873  [key=2, style=dotted];
m3_1870 -> m3_1871  [key=0, style=solid];
m3_1870 -> m3_105  [key=2, style=dotted];
m3_1871 -> m3_1872  [key=0, style=solid];
m3_1871 -> m3_25  [key=2, style=dotted];
m3_1872 -> m3_1865  [key=0, style=bold, color=blue];
m3_720 -> m3_721  [key=0, style=solid];
m3_721 -> m3_722  [key=0, style=solid];
m3_721 -> m3_443  [key=2, style=dotted];
m3_721 -> m3_723  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_722 -> m3_723  [key=0, style=solid];
m3_722 -> m3_725  [key=2, style=dotted];
m3_723 -> m3_724  [key=0, style=solid];
m3_723 -> m3_726  [key=2, style=dotted];
m3_723 -> m3_447  [key=2, style=dotted];
m3_724 -> m3_720  [key=0, style=bold, color=blue];
m3_750 -> m3_751  [key=0, style=solid];
m3_751 -> m3_752  [key=0, style=solid];
m3_751 -> m3_756  [key=2, style=dotted];
m3_752 -> m3_753  [key=0, style=solid];
m3_752 -> m3_105  [key=2, style=dotted];
m3_752 -> m3_754  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_753 -> m3_754  [key=0, style=solid];
m3_754 -> m3_755  [key=0, style=solid];
m3_754 -> m3_25  [key=2, style=dotted];
m3_755 -> m3_750  [key=0, style=bold, color=blue];
m3_1622 -> m3_1623  [key=0, style=solid];
m3_1623 -> m3_1622  [key=0, style=bold, color=blue];
m3_3419 -> m3_3420  [key=0, style=solid];
m3_3420 -> m3_3421  [key=0, style=solid];
m3_3420 -> m3_172  [key=2, style=dotted];
m3_3420 -> m3_1082  [key=2, style=dotted];
m3_3421 -> m3_3422  [key=0, style=solid];
m3_3421 -> m3_16  [key=2, style=dotted];
m3_3421 -> m3_3423  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3422 -> m3_3423  [key=0, style=solid];
m3_3422 -> m3_17  [key=2, style=dotted];
m3_3423 -> m3_3424  [key=0, style=solid];
m3_3423 -> m3_24  [key=2, style=dotted];
m3_3423 -> m3_3425  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3423 -> m3_3426  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m3_3424 -> m3_3425  [key=0, style=solid];
m3_3424 -> m3_25  [key=2, style=dotted];
m3_3425 -> m3_3426  [key=0, style=solid];
m3_3425 -> m3_1082  [key=2, style=dotted];
m3_3425 -> m3_25  [key=2, style=dotted];
m3_3426 -> m3_3427  [key=0, style=solid];
m3_3426 -> m3_1082  [key=2, style=dotted];
m3_3426 -> m3_25  [key=2, style=dotted];
m3_3427 -> m3_3419  [key=0, style=bold, color=blue];
m3_3656 -> m3_3657  [key=0, style=solid];
m3_3657 -> m3_3658  [key=0, style=solid];
m3_3657 -> m3_519  [key=2, style=dotted];
m3_3657 -> m3_3659  [key=1, style=dashed, color=darkseagreen4, label=culture];
m3_3657 -> m3_3663  [key=1, style=dashed, color=darkseagreen4, label=culture];
m3_3658 -> m3_3659  [key=0, style=solid];
m3_3659 -> m3_3660  [key=0, style=solid];
m3_3663 -> m3_3664  [key=0, style=solid];
m3_3663 -> m3_151  [key=2, style=dotted];
m3_3663 -> m3_812  [key=2, style=dotted];
m3_3660 -> m3_3661  [key=0, style=solid];
m3_3660 -> m3_110  [key=2, style=dotted];
m3_3660 -> m3_1082  [key=2, style=dotted];
m3_3660 -> m3_354  [key=2, style=dotted];
m3_3660 -> m3_1090  [key=2, style=dotted];
m3_3660 -> m3_3664  [key=1, style=dashed, color=darkseagreen4, label=dates];
m3_3661 -> m3_3662  [key=0, style=solid];
m3_3661 -> m3_2953  [key=2, style=dotted];
m3_3661 -> m3_3668  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_3664 -> m3_3665  [key=0, style=solid];
m3_3664 -> m3_2990  [key=2, style=dotted];
m3_3662 -> m3_3663  [key=0, style=solid];
m3_3662 -> m3_2954  [key=2, style=dotted];
m3_3662 -> m3_3664  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_3662 -> m3_3665  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_3662 -> m3_3666  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_3662 -> m3_3667  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_3668 -> m3_3669  [key=0, style=solid];
m3_3668 -> m3_2958  [key=2, style=dotted];
m3_3665 -> m3_3666  [key=0, style=solid];
m3_3665 -> m3_128  [key=2, style=dotted];
m3_3666 -> m3_3667  [key=0, style=solid];
m3_3666 -> m3_25  [key=2, style=dotted];
m3_3667 -> m3_3668  [key=0, style=solid];
m3_3667 -> m3_25  [key=2, style=dotted];
m3_3669 -> m3_3670  [key=0, style=solid];
m3_3669 -> m3_17  [key=2, style=dotted];
m3_3670 -> m3_3656  [key=0, style=bold, color=blue];
m3_2639 -> m3_2640  [key=0, style=solid];
m3_2640 -> m3_2639  [key=0, style=bold, color=blue];
m3_52 -> m3_53  [key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_36  [key=2, style=dotted];
m3_53 -> m3_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_54 -> m3_52  [key=0, style=bold, color=blue];
m3_3899 -> m3_3900  [key=0, style=solid];
m3_3900 -> m3_3901  [key=0, style=solid];
m3_3900 -> m3_3883  [key=2, style=dotted];
m3_3901 -> m3_3899  [key=0, style=bold, color=blue];
m3_2387 -> m3_2388  [key=0, style=solid];
m3_2388 -> m3_2389  [key=0, style=solid];
m3_2388 -> m3_2376  [key=2, style=dotted];
m3_2389 -> m3_2387  [key=0, style=bold, color=blue];
m3_1040 -> m3_1041  [key=0, style=solid];
m3_1041 -> m3_1042  [key=0, style=solid];
m3_1041 -> m3_1045  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1042 -> m3_1043  [key=0, style=solid];
m3_1042 -> m3_36  [key=2, style=dotted];
m3_1042 -> m3_1044  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1043 -> m3_1040  [key=0, style=bold, color=blue];
m3_4024 -> m3_4025  [key=0, style=solid];
m3_4025 -> m3_4026  [key=0, style=solid];
m3_4025 -> m3_1089  [key=2, style=dotted];
m3_4025 -> m3_934  [key=2, style=dotted];
m3_4025 -> m3_4028  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_4025 -> m3_4031  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_4025 -> m3_4036  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_4026 -> m3_4027  [key=0, style=solid];
m3_4026 -> m3_4032  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m3_4028 -> m3_4029  [key=0, style=solid];
m3_4028 -> m3_152  [key=2, style=dotted];
m3_4028 -> m3_4030  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4028 -> m3_4032  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4031 -> m3_4032  [key=0, style=solid];
m3_4031 -> m3_25  [key=2, style=dotted];
m3_4036 -> m3_4037  [key=0, style=solid];
m3_4036 -> m3_25  [key=2, style=dotted];
m3_4027 -> m3_4028  [key=0, style=solid];
m3_4027 -> m3_151  [key=2, style=dotted];
m3_4027 -> m3_4030  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_4032 -> m3_4033  [key=0, style=solid];
m3_4032 -> m3_349  [key=2, style=dotted];
m3_4032 -> m3_350  [key=2, style=dotted];
m3_4030 -> m3_4031  [key=0, style=solid];
m3_4030 -> m3_272  [key=2, style=dotted];
m3_4029 -> m3_4030  [key=0, style=solid];
m3_4029 -> m3_25  [key=2, style=dotted];
m3_4033 -> m3_4034  [key=0, style=solid];
m3_4033 -> m3_3340  [key=2, style=dotted];
m3_4033 -> m3_4035  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_4033 -> m3_4036  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_4034 -> m3_4035  [key=0, style=solid];
m3_4034 -> m3_25  [key=2, style=dotted];
m3_4035 -> m3_4036  [key=0, style=solid];
m3_4035 -> m3_353  [key=2, style=dotted];
m3_4035 -> m3_25  [key=2, style=dotted];
m3_4037 -> m3_4024  [key=0, style=bold, color=blue];
m3_3890 -> m3_3891  [key=0, style=solid];
m3_3891 -> m3_3892  [key=0, style=solid];
m3_3891 -> m3_3883  [key=2, style=dotted];
m3_3892 -> m3_3890  [key=0, style=bold, color=blue];
m3_851 -> m3_852  [key=0, style=solid];
m3_852 -> m3_853  [key=0, style=solid];
m3_852 -> m3_860  [key=2, style=dotted];
m3_852 -> m3_854  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_852 -> m3_855  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_852 -> m3_856  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_852 -> m3_857  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_853 -> m3_854  [key=0, style=solid];
m3_854 -> m3_855  [key=0, style=solid];
m3_855 -> m3_856  [key=0, style=solid];
m3_856 -> m3_857  [key=0, style=solid];
m3_857 -> m3_858  [key=0, style=solid];
m3_857 -> m3_16  [key=2, style=dotted];
m3_858 -> m3_859  [key=0, style=solid];
m3_858 -> m3_17  [key=2, style=dotted];
m3_859 -> m3_851  [key=0, style=bold, color=blue];
m3_1453 -> m3_1454  [key=0, style=solid];
m3_1454 -> m3_1455  [key=0, style=solid];
m3_1454 -> m3_1461  [key=2, style=dotted];
m3_1454 -> m3_1456  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_1454 -> m3_1457  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_1454 -> m3_1458  [key=1, style=dashed, color=darkseagreen4, label=aa];
m3_1455 -> m3_1456  [key=0, style=solid];
m3_1456 -> m3_1457  [key=0, style=solid];
m3_1457 -> m3_1458  [key=0, style=solid];
m3_1458 -> m3_1459  [key=0, style=solid];
m3_1458 -> m3_105  [key=2, style=dotted];
m3_1459 -> m3_1460  [key=0, style=solid];
m3_1459 -> m3_25  [key=2, style=dotted];
m3_1460 -> m3_1453  [key=0, style=bold, color=blue];
m3_1251 -> m3_1252  [key=0, style=solid];
m3_1252 -> m3_1253  [key=0, style=solid];
m3_1252 -> m3_1259  [key=2, style=dotted];
m3_1253 -> m3_1254  [key=0, style=solid];
m3_1253 -> m3_105  [key=2, style=dotted];
m3_1254 -> m3_1255  [key=0, style=solid];
m3_1254 -> m3_24  [key=2, style=dotted];
m3_1254 -> m3_1256  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1254 -> m3_1257  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_1255 -> m3_1256  [key=0, style=solid];
m3_1255 -> m3_25  [key=2, style=dotted];
m3_1256 -> m3_1257  [key=0, style=solid];
m3_1256 -> m3_25  [key=2, style=dotted];
m3_1257 -> m3_1258  [key=0, style=solid];
m3_1257 -> m3_25  [key=2, style=dotted];
m3_1258 -> m3_1251  [key=0, style=bold, color=blue];
m3_809 -> m3_822  [key=0, style=solid];
m3_809 -> m3_823  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_822 -> m3_823  [key=0, style=solid];
m3_823 -> m3_824  [key=0, style=solid];
m3_824 -> m3_809  [key=0, style=bold, color=blue];
m3_1847 -> m3_1848  [key=0, style=solid];
m3_1848 -> m3_1849  [key=0, style=solid];
m3_1848 -> m3_36  [key=2, style=dotted];
m3_1848 -> m3_1850  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1849 -> m3_1847  [key=0, style=bold, color=blue];
m3_1581 -> m3_1582  [key=0, style=solid];
m3_1582 -> m3_1583  [key=0, style=solid];
m3_1583 -> m3_1584  [key=0, style=solid];
m3_1583 -> m3_24  [key=2, style=dotted];
m3_1583 -> m3_1585  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1583 -> m3_1586  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1583 -> m3_1587  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1584 -> m3_1585  [key=0, style=solid];
m3_1584 -> m3_25  [key=2, style=dotted];
m3_1585 -> m3_1586  [key=0, style=solid];
m3_1585 -> m3_25  [key=2, style=dotted];
m3_1586 -> m3_1587  [key=0, style=solid];
m3_1586 -> m3_25  [key=2, style=dotted];
m3_1587 -> m3_1588  [key=0, style=solid];
m3_1587 -> m3_25  [key=2, style=dotted];
m3_1588 -> m3_1581  [key=0, style=bold, color=blue];
m3_2882 -> m3_2883  [key=0, style=solid];
m3_2883 -> m3_2884  [key=0, style=solid];
m3_2883 -> m3_2871  [key=2, style=dotted];
m3_2884 -> m3_2885  [key=0, style=solid];
m3_2884 -> m3_16  [key=2, style=dotted];
m3_2884 -> m3_2886  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2885 -> m3_2886  [key=0, style=solid];
m3_2885 -> m3_17  [key=2, style=dotted];
m3_2886 -> m3_2887  [key=0, style=solid];
m3_2886 -> m3_24  [key=2, style=dotted];
m3_2887 -> m3_2888  [key=0, style=solid];
m3_2887 -> m3_2879  [key=2, style=dotted];
m3_2887 -> m3_25  [key=2, style=dotted];
m3_2888 -> m3_2882  [key=0, style=bold, color=blue];
m3_2491 -> m3_2492  [key=0, style=solid];
m3_2492 -> m3_2493  [key=0, style=solid];
m3_2493 -> m3_2491  [key=0, style=bold, color=blue];
m3_2860 -> m3_2861  [key=0, style=solid];
m3_2861 -> m3_2862  [key=0, style=solid];
m3_2861 -> m3_2376  [key=2, style=dotted];
m3_2862 -> m3_2860  [key=0, style=bold, color=blue];
m3_1764 -> m3_1765  [key=0, style=solid];
m3_1765 -> m3_1766  [key=0, style=solid];
m3_1765 -> m3_1769  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1766 -> m3_1767  [key=0, style=solid];
m3_1766 -> m3_36  [key=2, style=dotted];
m3_1766 -> m3_1768  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1767 -> m3_1764  [key=0, style=bold, color=blue];
m3_4097 -> m3_4098  [key=0, style=solid];
m3_4098 -> m3_4099  [key=0, style=solid];
m3_4098 -> m3_4103  [key=2, style=dotted];
m3_4099 -> m3_4100  [key=0, style=solid];
m3_4099 -> m3_105  [key=2, style=dotted];
m3_4100 -> m3_4101  [key=0, style=solid];
m3_4100 -> m3_24  [key=2, style=dotted];
m3_4101 -> m3_4102  [key=0, style=solid];
m3_4101 -> m3_25  [key=2, style=dotted];
m3_4102 -> m3_4097  [key=0, style=bold, color=blue];
m3_2994 -> m3_2995  [key=0, style=solid];
m3_2995 -> m3_2996  [key=0, style=solid];
m3_2995 -> m3_2997  [key=2, style=dotted];
m3_2996 -> m3_2994  [key=0, style=bold, color=blue];
m3_840 -> m3_841  [key=0, style=solid];
m3_841 -> m3_842  [key=0, style=solid];
m3_841 -> m3_849  [key=2, style=dotted];
m3_841 -> m3_843  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_841 -> m3_844  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_841 -> m3_845  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_841 -> m3_846  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_842 -> m3_843  [key=0, style=solid];
m3_843 -> m3_844  [key=0, style=solid];
m3_844 -> m3_845  [key=0, style=solid];
m3_845 -> m3_846  [key=0, style=solid];
m3_846 -> m3_847  [key=0, style=solid];
m3_846 -> m3_850  [key=2, style=dotted];
m3_847 -> m3_848  [key=0, style=solid];
m3_847 -> m3_17  [key=2, style=dotted];
m3_848 -> m3_840  [key=0, style=bold, color=blue];
m3_3825 -> m3_3826  [key=0, style=solid];
m3_3826 -> m3_3827  [key=0, style=solid];
m3_3827 -> m3_3828  [key=0, style=solid];
m3_3827 -> m3_151  [key=2, style=dotted];
m3_3827 -> m3_272  [key=2, style=dotted];
m3_3827 -> m3_3829  [key=1, style=dashed, color=darkseagreen4, label=people];
m3_3827 -> m3_3830  [key=1, style=dashed, color=darkseagreen4, label=people];
m3_3828 -> m3_3829  [key=0, style=solid];
m3_3828 -> m3_25  [key=2, style=dotted];
m3_3829 -> m3_3830  [key=0, style=solid];
m3_3829 -> m3_3831  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3829 -> m3_3832  [key=1, style=dashed, color=darkseagreen4, label=john];
m3_3830 -> m3_3831  [key=0, style=solid];
m3_3830 -> m3_3832  [key=1, style=dashed, color=darkseagreen4, label=jane];
m3_3831 -> m3_3832  [key=0, style=solid];
m3_3831 -> m3_25  [key=2, style=dotted];
m3_3832 -> m3_3833  [key=0, style=solid];
m3_3832 -> m3_25  [key=2, style=dotted];
m3_3833 -> m3_3825  [key=0, style=bold, color=blue];
m3_319 -> m3_320  [key=0, style=solid];
m3_320 -> m3_321  [key=0, style=solid];
m3_321 -> m3_322  [key=0, style=solid];
m3_321 -> m3_151  [key=2, style=dotted];
m3_321 -> m3_272  [key=2, style=dotted];
m3_321 -> m3_325  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_322 -> m3_323  [key=0, style=solid];
m3_322 -> m3_25  [key=2, style=dotted];
m3_323 -> m3_319  [key=0, style=bold, color=blue];
m3_4170 -> m3_4171  [key=0, style=solid];
m3_4171 -> m3_4172  [key=0, style=solid];
m3_4172 -> m3_4173  [key=0, style=solid];
m3_4173 -> m3_4170  [key=0, style=bold, color=blue];
m3_1058 -> m3_1059  [key=0, style=solid];
m3_1059 -> m3_1060  [key=0, style=solid];
m3_1059 -> m3_1061  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1059 -> m3_1063  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1059 -> m3_1064  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1060 -> m3_1061  [key=0, style=solid];
m3_1060 -> m3_1069  [key=2, style=dotted];
m3_1061 -> m3_1062  [key=0, style=solid];
m3_1061 -> m3_1070  [key=2, style=dotted];
m3_1061 -> m3_1067  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m3_1063 -> m3_1064  [key=0, style=solid];
m3_1063 -> m3_1055  [key=2, style=dotted];
m3_1063 -> m3_1056  [key=2, style=dotted];
m3_1063 -> m3_1057  [key=2, style=dotted];
m3_1063 -> m3_1066  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m3_1064 -> m3_1065  [key=0, style=solid];
m3_1064 -> m3_24  [key=2, style=dotted];
m3_1064 -> m3_1066  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m3_1064 -> m3_1067  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m3_1062 -> m3_1063  [key=0, style=solid];
m3_1062 -> m3_894  [key=2, style=dotted];
m3_1067 -> m3_1068  [key=0, style=solid];
m3_1067 -> m3_25  [key=2, style=dotted];
m3_1066 -> m3_1067  [key=0, style=solid];
m3_1066 -> m3_25  [key=2, style=dotted];
m3_1065 -> m3_1066  [key=0, style=solid];
m3_1065 -> m3_25  [key=2, style=dotted];
m3_1068 -> m3_1058  [key=0, style=bold, color=blue];
m3_4067 -> m3_4068  [key=0, style=solid];
m3_4068 -> m3_4067  [key=0, style=bold, color=blue];
m3_2548 -> m3_2549  [key=0, style=solid];
m3_2549 -> m3_2550  [key=0, style=solid];
m3_2549 -> m3_2541  [key=2, style=dotted];
m3_2549 -> m3_2542  [key=2, style=dotted];
m3_2549 -> m3_934  [key=2, style=dotted];
m3_2549 -> m3_1090  [key=2, style=dotted];
m3_2549 -> m3_151  [key=2, style=dotted];
m3_2549 -> m3_174  [key=2, style=dotted];
m3_2549 -> m3_2551  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m3_2550 -> m3_2551  [key=0, style=solid];
m3_2550 -> m3_25  [key=2, style=dotted];
m3_2551 -> m3_2552  [key=0, style=solid];
m3_2551 -> m3_349  [key=2, style=dotted];
m3_2551 -> m3_350  [key=2, style=dotted];
m3_2551 -> m3_2554  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2552 -> m3_2553  [key=0, style=solid];
m3_2552 -> m3_351  [key=2, style=dotted];
m3_2552 -> m3_2554  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_2554 -> m3_2555  [key=0, style=solid];
m3_2554 -> m3_2543  [key=2, style=dotted];
m3_2554 -> m3_2556  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m3_2553 -> m3_2554  [key=0, style=solid];
m3_2555 -> m3_2556  [key=0, style=solid];
m3_2555 -> m3_1090  [key=2, style=dotted];
m3_2555 -> m3_25  [key=2, style=dotted];
m3_2556 -> m3_2557  [key=0, style=solid];
m3_2556 -> m3_934  [key=2, style=dotted];
m3_2556 -> m3_25  [key=2, style=dotted];
m3_2557 -> m3_2548  [key=0, style=bold, color=blue];
m3_2903 -> m3_2904  [key=0, style=solid];
m3_2904 -> m3_2905  [key=0, style=solid];
m3_2904 -> m3_110  [key=2, style=dotted];
m3_2905 -> m3_2903  [key=0, style=bold, color=blue];
m3_2126 -> m3_2127  [key=0, style=solid];
m3_2127 -> m3_2128  [key=0, style=solid];
m3_2127 -> m3_2068  [key=2, style=dotted];
m3_2127 -> m3_2129  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m3_2128 -> m3_2129  [key=0, style=solid];
m3_2128 -> m3_2081  [key=2, style=dotted];
m3_2129 -> m3_2130  [key=0, style=solid];
m3_2129 -> m3_105  [key=2, style=dotted];
m3_2129 -> m3_2131  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2130 -> m3_2131  [key=0, style=solid];
m3_2130 -> m3_25  [key=2, style=dotted];
m3_2131 -> m3_2132  [key=0, style=solid];
m3_2131 -> m3_24  [key=2, style=dotted];
m3_2131 -> m3_2133  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m3_2132 -> m3_2133  [key=0, style=solid];
m3_2132 -> m3_25  [key=2, style=dotted];
m3_2133 -> m3_2134  [key=0, style=solid];
m3_2133 -> m3_25  [key=2, style=dotted];
m3_2134 -> m3_2126  [key=0, style=bold, color=blue];
m3_4006 -> m3_4007  [key=0, style=solid];
m3_4007 -> m3_4008  [key=0, style=solid];
m3_4007 -> m3_354  [key=2, style=dotted];
m3_4007 -> m3_4010  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_4007 -> m3_4013  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_4008 -> m3_4009  [key=0, style=solid];
m3_4010 -> m3_4011  [key=0, style=solid];
m3_4010 -> m3_172  [key=2, style=dotted];
m3_4010 -> m3_152  [key=2, style=dotted];
m3_4010 -> m3_4012  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4013 -> m3_4014  [key=0, style=solid];
m3_4013 -> m3_1662  [key=2, style=dotted];
m3_4013 -> m3_25  [key=2, style=dotted];
m3_4009 -> m3_4010  [key=0, style=solid];
m3_4009 -> m3_151  [key=2, style=dotted];
m3_4009 -> m3_4012  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_4012 -> m3_4013  [key=0, style=solid];
m3_4012 -> m3_272  [key=2, style=dotted];
m3_4011 -> m3_4012  [key=0, style=solid];
m3_4011 -> m3_17  [key=2, style=dotted];
m3_4014 -> m3_4006  [key=0, style=bold, color=blue];
m3_3301 -> m3_3302  [key=0, style=solid];
m3_3302 -> m3_3303  [key=0, style=solid];
m3_3302 -> m3_978  [key=2, style=dotted];
m3_3302 -> m3_3304  [key=2, style=dotted];
m3_3303 -> m3_3301  [key=0, style=bold, color=blue];
m3_770 -> m3_771  [key=0, style=solid];
m3_771 -> m3_772  [key=0, style=solid];
m3_772 -> m3_773  [key=0, style=solid];
m3_772 -> m3_24  [key=2, style=dotted];
m3_772 -> m3_774  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_773 -> m3_774  [key=0, style=solid];
m3_773 -> m3_776  [key=2, style=dotted];
m3_774 -> m3_775  [key=0, style=solid];
m3_774 -> m3_25  [key=2, style=dotted];
m3_775 -> m3_770  [key=0, style=bold, color=blue];
m3_2740 -> m3_2741  [key=0, style=solid];
m3_2741 -> m3_2742  [key=0, style=solid];
m3_2741 -> m3_916  [key=2, style=dotted];
m3_2742 -> m3_2743  [key=0, style=solid];
m3_2742 -> m3_128  [key=2, style=dotted];
m3_2743 -> m3_2740  [key=0, style=bold, color=blue];
m3_3121 -> m3_3122  [key=0, style=solid];
m3_3122 -> m3_3123  [key=0, style=solid];
m3_3122 -> m3_36  [key=2, style=dotted];
m3_3122 -> m3_3124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3123 -> m3_3121  [key=0, style=bold, color=blue];
m3_3671 -> m3_3672  [key=0, style=solid];
m3_3672 -> m3_3673  [key=0, style=solid];
m3_3672 -> m3_3679  [key=2, style=dotted];
m3_3673 -> m3_3674  [key=0, style=solid];
m3_3673 -> m3_105  [key=2, style=dotted];
m3_3673 -> m3_3675  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3674 -> m3_3675  [key=0, style=solid];
m3_3674 -> m3_25  [key=2, style=dotted];
m3_3675 -> m3_3676  [key=0, style=solid];
m3_3675 -> m3_24  [key=2, style=dotted];
m3_3675 -> m3_3677  [key=1, style=dashed, color=darkseagreen4, label=tuple2];
m3_3676 -> m3_3677  [key=0, style=solid];
m3_3676 -> m3_25  [key=2, style=dotted];
m3_3677 -> m3_3678  [key=0, style=solid];
m3_3677 -> m3_25  [key=2, style=dotted];
m3_3678 -> m3_3671  [key=0, style=bold, color=blue];
m3_287 -> m3_288  [key=0, style=solid];
m3_288 -> m3_289  [key=0, style=solid];
m3_288 -> m3_283  [key=2, style=dotted];
m3_288 -> m3_290  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_288 -> m3_291  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_289 -> m3_290  [key=0, style=solid];
m3_290 -> m3_291  [key=0, style=solid];
m3_290 -> m3_297  [key=2, style=dotted];
m3_290 -> m3_298  [key=2, style=dotted];
m3_291 -> m3_292  [key=0, style=solid];
m3_291 -> m3_16  [key=2, style=dotted];
m3_291 -> m3_293  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_292 -> m3_293  [key=0, style=solid];
m3_292 -> m3_17  [key=2, style=dotted];
m3_292 -> m3_312  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsWrappedInTypeObject"];
m3_292 -> m3_153  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsWrappedInTypeObject"];
m3_293 -> m3_294  [key=0, style=solid];
m3_293 -> m3_24  [key=2, style=dotted];
m3_293 -> m3_295  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_294 -> m3_295  [key=0, style=solid];
m3_294 -> m3_25  [key=2, style=dotted];
m3_295 -> m3_296  [key=0, style=solid];
m3_295 -> m3_25  [key=2, style=dotted];
m3_296 -> m3_287  [key=0, style=bold, color=blue];
m3_3727 -> m3_3728  [key=0, style=solid];
m3_3728 -> m3_3729  [key=0, style=solid];
m3_3728 -> m3_3733  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3729 -> m3_3730  [key=0, style=solid];
m3_3729 -> m3_24  [key=2, style=dotted];
m3_3729 -> m3_3731  [key=1, style=dashed, color=darkseagreen4, label=floats];
m3_3729 -> m3_3732  [key=1, style=dashed, color=darkseagreen4, label=floats];
m3_3733 -> m3_3734  [key=0, style=solid];
m3_3733 -> m3_24  [key=2, style=dotted];
m3_3733 -> m3_3735  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m3_3733 -> m3_3736  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m3_3730 -> m3_3731  [key=0, style=solid];
m3_3730 -> m3_25  [key=2, style=dotted];
m3_3731 -> m3_3732  [key=0, style=solid];
m3_3731 -> m3_25  [key=2, style=dotted];
m3_3732 -> m3_3733  [key=0, style=solid];
m3_3732 -> m3_25  [key=2, style=dotted];
m3_3734 -> m3_3735  [key=0, style=solid];
m3_3734 -> m3_25  [key=2, style=dotted];
m3_3735 -> m3_3736  [key=0, style=solid];
m3_3735 -> m3_25  [key=2, style=dotted];
m3_3736 -> m3_3737  [key=0, style=solid];
m3_3736 -> m3_25  [key=2, style=dotted];
m3_3737 -> m3_3727  [key=0, style=bold, color=blue];
m3_1277 -> m3_1278  [key=0, style=solid];
m3_1278 -> m3_1279  [key=0, style=solid];
m3_1278 -> m3_1286  [key=2, style=dotted];
m3_1278 -> m3_1283  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_1278 -> m3_1284  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_1279 -> m3_1280  [key=0, style=solid];
m3_1279 -> m3_1287  [key=2, style=dotted];
m3_1283 -> m3_1284  [key=0, style=solid];
m3_1283 -> m3_25  [key=2, style=dotted];
m3_1284 -> m3_1285  [key=0, style=solid];
m3_1284 -> m3_25  [key=2, style=dotted];
m3_1280 -> m3_1281  [key=0, style=solid];
m3_1280 -> m3_105  [key=2, style=dotted];
m3_1280 -> m3_1282  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1281 -> m3_1282  [key=0, style=solid];
m3_1281 -> m3_25  [key=2, style=dotted];
m3_1282 -> m3_1283  [key=0, style=solid];
m3_1282 -> m3_24  [key=2, style=dotted];
m3_1282 -> m3_1284  [key=1, style=dashed, color=darkseagreen4, label=m2];
m3_1285 -> m3_1277  [key=0, style=bold, color=blue];
m3_135 -> m3_136  [key=0, style=solid];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_24  [key=2, style=dotted];
m3_136 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_128  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_128  [key=2, style=dotted];
m3_139 -> m3_135  [key=0, style=bold, color=blue];
m3_1894 -> m3_1895  [key=0, style=solid];
m3_1895 -> m3_1896  [key=0, style=solid];
m3_1895 -> m3_1907  [key=2, style=dotted];
m3_1895 -> m3_1897  [key=1, style=dashed, color=darkseagreen4, label=f];
m3_1895 -> m3_1898  [key=1, style=dashed, color=darkseagreen4, label=f];
m3_1895 -> m3_1899  [key=1, style=dashed, color=darkseagreen4, label=f];
m3_1896 -> m3_1897  [key=0, style=solid];
m3_1896 -> m3_1908  [key=2, style=dotted];
m3_1896 -> m3_1873  [key=2, style=dotted];
m3_1897 -> m3_1898  [key=0, style=solid];
m3_1897 -> m3_1908  [key=2, style=dotted];
m3_1897 -> m3_1873  [key=2, style=dotted];
m3_1898 -> m3_1899  [key=0, style=solid];
m3_1898 -> m3_1908  [key=2, style=dotted];
m3_1898 -> m3_1873  [key=2, style=dotted];
m3_1899 -> m3_1900  [key=0, style=solid];
m3_1899 -> m3_16  [key=2, style=dotted];
m3_1899 -> m3_1901  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1900 -> m3_1901  [key=0, style=solid];
m3_1900 -> m3_17  [key=2, style=dotted];
m3_1901 -> m3_1902  [key=0, style=solid];
m3_1901 -> m3_24  [key=2, style=dotted];
m3_1901 -> m3_1903  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m3_1901 -> m3_1904  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m3_1901 -> m3_1905  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m3_1902 -> m3_1903  [key=0, style=solid];
m3_1902 -> m3_25  [key=2, style=dotted];
m3_1903 -> m3_1904  [key=0, style=solid];
m3_1903 -> m3_25  [key=2, style=dotted];
m3_1904 -> m3_1905  [key=0, style=solid];
m3_1904 -> m3_25  [key=2, style=dotted];
m3_1905 -> m3_1906  [key=0, style=solid];
m3_1905 -> m3_25  [key=2, style=dotted];
m3_1906 -> m3_1894  [key=0, style=bold, color=blue];
m3_4045 -> m3_4046  [key=0, style=solid];
m3_4046 -> m3_4047  [key=0, style=solid];
m3_4046 -> m3_4052  [key=2, style=dotted];
m3_4047 -> m3_4048  [key=0, style=solid];
m3_4047 -> m3_16  [key=2, style=dotted];
m3_4047 -> m3_4049  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4048 -> m3_4049  [key=0, style=solid];
m3_4048 -> m3_17  [key=2, style=dotted];
m3_4049 -> m3_4050  [key=0, style=solid];
m3_4049 -> m3_24  [key=2, style=dotted];
m3_4050 -> m3_4051  [key=0, style=solid];
m3_4050 -> m3_25  [key=2, style=dotted];
m3_4051 -> m3_4045  [key=0, style=bold, color=blue];
m3_1981 -> m3_1982  [key=0, style=solid];
m3_1982 -> m3_1983  [key=0, style=solid];
m3_1982 -> m3_1991  [key=2, style=dotted];
m3_1982 -> m3_1984  [key=1, style=dashed, color=darkseagreen4, label=g];
m3_1982 -> m3_1985  [key=1, style=dashed, color=darkseagreen4, label=g];
m3_1982 -> m3_1986  [key=1, style=dashed, color=darkseagreen4, label=g];
m3_1983 -> m3_1984  [key=0, style=solid];
m3_1983 -> m3_1992  [key=2, style=dotted];
m3_1983 -> m3_1972  [key=2, style=dotted];
m3_1984 -> m3_1985  [key=0, style=solid];
m3_1984 -> m3_1992  [key=2, style=dotted];
m3_1984 -> m3_1972  [key=2, style=dotted];
m3_1985 -> m3_1986  [key=0, style=solid];
m3_1986 -> m3_1987  [key=0, style=solid];
m3_1986 -> m3_1978  [key=2, style=dotted];
m3_1986 -> m3_1988  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1987 -> m3_1988  [key=0, style=solid];
m3_1987 -> m3_17  [key=2, style=dotted];
m3_1988 -> m3_1989  [key=0, style=solid];
m3_1988 -> m3_24  [key=2, style=dotted];
m3_1989 -> m3_1990  [key=0, style=solid];
m3_1989 -> m3_25  [key=2, style=dotted];
m3_1990 -> m3_1981  [key=0, style=bold, color=blue];
m3_1219 -> m3_1220  [key=0, style=solid];
m3_1220 -> m3_1221  [key=0, style=solid];
m3_1220 -> m3_1226  [key=2, style=dotted];
m3_1220 -> m3_1224  [key=1, style=dashed, color=darkseagreen4, label=guid];
m3_1221 -> m3_1222  [key=0, style=solid];
m3_1221 -> m3_1227  [key=2, style=dotted];
m3_1221 -> m3_105  [key=2, style=dotted];
m3_1221 -> m3_1223  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1224 -> m3_1225  [key=0, style=solid];
m3_1224 -> m3_25  [key=2, style=dotted];
m3_1222 -> m3_1223  [key=0, style=solid];
m3_1222 -> m3_25  [key=2, style=dotted];
m3_1223 -> m3_1224  [key=0, style=solid];
m3_1223 -> m3_24  [key=2, style=dotted];
m3_1225 -> m3_1219  [key=0, style=bold, color=blue];
m3_2775 -> m3_2776  [key=0, style=solid];
m3_2776 -> m3_2777  [key=0, style=solid];
m3_2776 -> m3_2780  [key=2, style=dotted];
m3_2777 -> m3_2778  [key=0, style=solid];
m3_2777 -> m3_16  [key=2, style=dotted];
m3_2778 -> m3_2779  [key=0, style=solid];
m3_2778 -> m3_17  [key=2, style=dotted];
m3_2779 -> m3_2775  [key=0, style=bold, color=blue];
m3_367 -> m3_368  [key=0, style=solid];
m3_368 -> m3_367  [key=0, style=bold, color=blue];
m3_4163 -> m3_4164  [key=0, style=solid];
m3_4164 -> m3_4163  [key=0, style=bold, color=blue];
m3_1835 -> m3_1836  [key=0, style=solid];
m3_1836 -> m3_1837  [key=0, style=solid];
m3_1837 -> m3_1838  [key=0, style=solid];
m3_1837 -> m3_24  [key=2, style=dotted];
m3_1838 -> m3_1839  [key=0, style=solid];
m3_1838 -> m3_25  [key=2, style=dotted];
m3_1839 -> m3_1835  [key=0, style=bold, color=blue];
m3_1357 -> m3_1358  [key=0, style=solid];
m3_1358 -> m3_1359  [key=0, style=solid];
m3_1359 -> m3_1360  [key=0, style=solid];
m3_1359 -> m3_105  [key=2, style=dotted];
m3_1360 -> m3_1361  [key=0, style=solid];
m3_1360 -> m3_25  [key=2, style=dotted];
m3_1361 -> m3_1362  [key=0, style=solid];
m3_1361 -> m3_105  [key=2, style=dotted];
m3_1362 -> m3_1363  [key=0, style=solid];
m3_1362 -> m3_25  [key=2, style=dotted];
m3_1363 -> m3_1357  [key=0, style=bold, color=blue];
m3_1136 -> m3_1137  [key=0, style=solid];
m3_1137 -> m3_1138  [key=0, style=solid];
m3_1137 -> m3_105  [key=2, style=dotted];
m3_1138 -> m3_1139  [key=0, style=solid];
m3_1138 -> m3_25  [key=2, style=dotted];
m3_1139 -> m3_1136  [key=0, style=bold, color=blue];
m3_3571 -> m3_3572  [key=0, style=solid];
m3_3572 -> m3_3573  [key=0, style=solid];
m3_3573 -> m3_3571  [key=0, style=bold, color=blue];
m3_355 -> m3_356  [key=0, style=solid];
m3_355 -> m3_112  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonContainerType currentObject"];
m3_356 -> m3_357  [key=0, style=solid];
m3_356 -> m3_360  [key=2, style=dotted];
m3_356 -> m3_105  [key=2, style=dotted];
m3_356 -> m3_25  [key=2, style=dotted];
m3_357 -> m3_358  [key=0, style=solid];
m3_357 -> m3_24  [key=2, style=dotted];
m3_358 -> m3_359  [key=0, style=solid];
m3_358 -> m3_25  [key=2, style=dotted];
m3_359 -> m3_355  [key=0, style=bold, color=blue];
m3_3154 -> m3_3155  [key=0, style=solid];
m3_3155 -> m3_3156  [key=0, style=solid];
m3_3155 -> m3_151  [key=2, style=dotted];
m3_3155 -> m3_812  [key=2, style=dotted];
m3_3156 -> m3_3157  [key=0, style=solid];
m3_3156 -> m3_349  [key=2, style=dotted];
m3_3156 -> m3_350  [key=2, style=dotted];
m3_3156 -> m3_2543  [key=2, style=dotted];
m3_3156 -> m3_3158  [key=1, style=dashed, color=darkseagreen4, label=dict];
m3_3157 -> m3_3158  [key=0, style=solid];
m3_3157 -> m3_25  [key=2, style=dotted];
m3_3158 -> m3_3159  [key=0, style=solid];
m3_3158 -> m3_25  [key=2, style=dotted];
m3_3159 -> m3_3154  [key=0, style=bold, color=blue];
m3_390 -> m3_391  [key=0, style=solid];
m3_391 -> m3_392  [key=0, style=solid];
m3_391 -> m3_398  [key=2, style=dotted];
m3_391 -> m3_394  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_391 -> m3_395  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_391 -> m3_396  [key=1, style=dashed, color=darkseagreen4, label=input];
m3_392 -> m3_393  [key=0, style=solid];
m3_392 -> m3_105  [key=2, style=dotted];
m3_394 -> m3_395  [key=0, style=solid];
m3_394 -> m3_25  [key=2, style=dotted];
m3_395 -> m3_396  [key=0, style=solid];
m3_395 -> m3_25  [key=2, style=dotted];
m3_396 -> m3_397  [key=0, style=solid];
m3_396 -> m3_25  [key=2, style=dotted];
m3_393 -> m3_394  [key=0, style=solid];
m3_393 -> m3_24  [key=2, style=dotted];
m3_393 -> m3_395  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_393 -> m3_396  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m3_397 -> m3_390  [key=0, style=bold, color=blue];
m3_985 -> m3_986  [key=0, style=solid];
m3_986 -> m3_987  [key=0, style=solid];
m3_986 -> m3_991  [key=2, style=dotted];
m3_986 -> m3_105  [key=2, style=dotted];
m3_987 -> m3_988  [key=0, style=solid];
m3_987 -> m3_24  [key=2, style=dotted];
m3_987 -> m3_989  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_988 -> m3_989  [key=0, style=solid];
m3_988 -> m3_25  [key=2, style=dotted];
m3_989 -> m3_990  [key=0, style=solid];
m3_989 -> m3_25  [key=2, style=dotted];
m3_990 -> m3_985  [key=0, style=bold, color=blue];
m3_3893 -> m3_3894  [key=0, style=solid];
m3_3894 -> m3_3895  [key=0, style=solid];
m3_3894 -> m3_3883  [key=2, style=dotted];
m3_3895 -> m3_3893  [key=0, style=bold, color=blue];
m3_1543 -> m3_1544  [key=0, style=solid];
m3_1544 -> m3_1545  [key=0, style=solid];
m3_1545 -> m3_1546  [key=0, style=solid];
m3_1545 -> m3_24  [key=2, style=dotted];
m3_1546 -> m3_1547  [key=0, style=solid];
m3_1546 -> m3_1549  [key=0, style=solid];
m3_1546 -> m3_1437  [key=2, style=dotted];
m3_1547 -> m3_1548  [key=0, style=solid];
m3_1548 -> m3_1549  [key=0, style=solid];
m3_1548 -> m3_1438  [key=2, style=dotted];
m3_1548 -> m3_447  [key=2, style=dotted];
m3_1549 -> m3_1543  [key=0, style=bold, color=blue];
m3_153 -> m3_154  [key=0, style=solid];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_36  [key=2, style=dotted];
m3_154 -> m3_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_155 -> m3_153  [key=0, style=bold, color=blue];
m3_757 -> m3_758  [key=0, style=solid];
m3_758 -> m3_759  [key=0, style=solid];
m3_759 -> m3_760  [key=0, style=solid];
m3_759 -> m3_24  [key=2, style=dotted];
m3_760 -> m3_761  [key=0, style=solid];
m3_760 -> m3_25  [key=2, style=dotted];
m3_761 -> m3_757  [key=0, style=bold, color=blue];
m3_104 -> m3_106  [key=0, style=solid];
m3_104 -> m3_107  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_104 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_110  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_109  [key=0, style=solid];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_111  [key=2, style=dotted];
m3_109 -> m3_104  [key=0, style=bold, color=blue];
m3_1071 -> m3_1072  [key=0, style=solid];
m3_1072 -> m3_1073  [key=0, style=solid];
m3_1072 -> m3_110  [key=2, style=dotted];
m3_1072 -> m3_1082  [key=2, style=dotted];
m3_1072 -> m3_1075  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m3_1072 -> m3_1079  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m3_1073 -> m3_1074  [key=0, style=solid];
m3_1073 -> m3_813  [key=2, style=dotted];
m3_1073 -> m3_1075  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_1073 -> m3_1076  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_1073 -> m3_1077  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_1075 -> m3_1076  [key=0, style=solid];
m3_1075 -> m3_895  [key=2, style=dotted];
m3_1079 -> m3_1080  [key=0, style=solid];
m3_1079 -> m3_151  [key=2, style=dotted];
m3_1079 -> m3_152  [key=2, style=dotted];
m3_1074 -> m3_1075  [key=0, style=solid];
m3_1074 -> m3_894  [key=2, style=dotted];
m3_1076 -> m3_1077  [key=0, style=solid];
m3_1076 -> m3_817  [key=2, style=dotted];
m3_1077 -> m3_1078  [key=0, style=solid];
m3_1077 -> m3_819  [key=2, style=dotted];
m3_1078 -> m3_1079  [key=0, style=solid];
m3_1078 -> m3_1083  [key=2, style=dotted];
m3_1078 -> m3_1080  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_1080 -> m3_1081  [key=0, style=solid];
m3_1080 -> m3_25  [key=2, style=dotted];
m3_1081 -> m3_1071  [key=0, style=bold, color=blue];
m3_361 -> m3_362  [key=0, style=solid];
m3_362 -> m3_363  [key=0, style=solid];
m3_362 -> m3_366  [key=2, style=dotted];
m3_362 -> m3_105  [key=2, style=dotted];
m3_362 -> m3_25  [key=2, style=dotted];
m3_363 -> m3_364  [key=0, style=solid];
m3_363 -> m3_24  [key=2, style=dotted];
m3_364 -> m3_365  [key=0, style=solid];
m3_364 -> m3_25  [key=2, style=dotted];
m3_365 -> m3_361  [key=0, style=bold, color=blue];
m3_1697 -> m3_1698  [key=0, style=solid];
m3_1698 -> m3_1699  [key=0, style=solid];
m3_1698 -> m3_1702  [key=2, style=dotted];
m3_1698 -> m3_110  [key=2, style=dotted];
m3_1699 -> m3_1700  [key=0, style=solid];
m3_1699 -> m3_16  [key=2, style=dotted];
m3_1700 -> m3_1701  [key=0, style=solid];
m3_1700 -> m3_17  [key=2, style=dotted];
m3_1701 -> m3_1697  [key=0, style=bold, color=blue];
m3_4177 -> m3_4178  [key=0, style=solid];
m3_4178 -> m3_4179  [key=0, style=solid];
m3_4179 -> m3_4180  [key=0, style=solid];
m3_4180 -> m3_4177  [key=0, style=bold, color=blue];
m3_1364 -> m3_1365  [key=0, style=solid];
m3_1365 -> m3_1366  [key=0, style=solid];
m3_1365 -> m3_1370  [key=2, style=dotted];
m3_1365 -> m3_1371  [key=2, style=dotted];
m3_1365 -> m3_1367  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m3_1366 -> m3_1367  [key=0, style=solid];
m3_1367 -> m3_1368  [key=0, style=solid];
m3_1367 -> m3_105  [key=2, style=dotted];
m3_1368 -> m3_1369  [key=0, style=solid];
m3_1368 -> m3_25  [key=2, style=dotted];
m3_1369 -> m3_1364  [key=0, style=bold, color=blue];
m3_260 -> m3_261  [key=0, style=solid];
m3_261 -> m3_262  [key=0, style=solid];
m3_261 -> m3_269  [key=2, style=dotted];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_270  [key=2, style=dotted];
m3_262 -> m3_110  [key=2, style=dotted];
m3_262 -> m3_172  [key=2, style=dotted];
m3_263 -> m3_264  [key=0, style=solid];
m3_263 -> m3_151  [key=2, style=dotted];
m3_263 -> m3_271  [key=2, style=dotted];
m3_263 -> m3_174  [key=2, style=dotted];
m3_264 -> m3_265  [key=0, style=solid];
m3_264 -> m3_25  [key=2, style=dotted];
m3_265 -> m3_266  [key=0, style=solid];
m3_265 -> m3_148  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadAsStringInternal"];
m3_265 -> m3_276  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadAsStringInternal"];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_151  [key=2, style=dotted];
m3_266 -> m3_271  [key=2, style=dotted];
m3_266 -> m3_272  [key=2, style=dotted];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_25  [key=2, style=dotted];
m3_268 -> m3_260  [key=0, style=bold, color=blue];
m3_1214 -> m3_1215  [key=0, style=solid];
m3_1215 -> m3_1216  [key=0, style=solid];
m3_1215 -> m3_1082  [key=2, style=dotted];
m3_1216 -> m3_1217  [key=0, style=solid];
m3_1216 -> m3_105  [key=2, style=dotted];
m3_1217 -> m3_1218  [key=0, style=solid];
m3_1217 -> m3_25  [key=2, style=dotted];
m3_1218 -> m3_1214  [key=0, style=bold, color=blue];
m3_1495 -> m3_1496  [key=0, style=solid];
m3_1495 -> m3_1503  [key=2, style=dotted];
m3_1495 -> m3_1082  [key=2, style=dotted];
m3_1495 -> m3_1497  [key=1, style=dashed, color=darkseagreen4, label=entry];
m3_1495 -> m3_1498  [key=1, style=dashed, color=darkseagreen4, label=entry];
m3_1494 -> m3_1495  [key=0, style=solid];
m3_1496 -> m3_1497  [key=0, style=solid];
m3_1496 -> m3_105  [key=2, style=dotted];
m3_1496 -> m3_1499  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m3_1497 -> m3_1498  [key=0, style=solid];
m3_1497 -> m3_1129  [key=2, style=dotted];
m3_1497 -> m3_1276  [key=2, style=dotted];
m3_1497 -> m3_1500  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m3_1498 -> m3_1499  [key=0, style=solid];
m3_1498 -> m3_1324  [key=2, style=dotted];
m3_1498 -> m3_1276  [key=2, style=dotted];
m3_1498 -> m3_1501  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m3_1499 -> m3_1500  [key=0, style=solid];
m3_1499 -> m3_25  [key=2, style=dotted];
m3_1500 -> m3_1501  [key=0, style=solid];
m3_1500 -> m3_25  [key=2, style=dotted];
m3_1501 -> m3_1502  [key=0, style=solid];
m3_1501 -> m3_25  [key=2, style=dotted];
m3_1502 -> m3_1494  [key=0, style=bold, color=blue];
m3_1930 -> m3_1931  [key=0, style=solid];
m3_1931 -> m3_1932  [key=0, style=solid];
m3_1932 -> m3_1933  [key=0, style=solid];
m3_1932 -> m3_445  [key=2, style=dotted];
m3_1933 -> m3_1934  [key=0, style=solid];
m3_1933 -> m3_1021  [key=2, style=dotted];
m3_1933 -> m3_408  [key=2, style=dotted];
m3_1933 -> m3_1935  [key=1, style=dashed, color=darkseagreen4, label=results];
m3_1934 -> m3_1935  [key=0, style=solid];
m3_1934 -> m3_110  [key=2, style=dotted];
m3_1934 -> m3_1937  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m3_1934 -> m3_1938  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m3_1934 -> m3_1939  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m3_1934 -> m3_1940  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m3_1935 -> m3_1936  [key=0, style=solid];
m3_1935 -> m3_1938  [key=0, style=solid];
m3_1937 -> m3_1935  [key=0, style=solid];
m3_1937 -> m3_298  [key=2, style=dotted];
m3_1938 -> m3_1939  [key=0, style=solid];
m3_1938 -> m3_25  [key=2, style=dotted];
m3_1939 -> m3_1940  [key=0, style=solid];
m3_1939 -> m3_25  [key=2, style=dotted];
m3_1940 -> m3_1941  [key=0, style=solid];
m3_1940 -> m3_25  [key=2, style=dotted];
m3_1936 -> m3_1937  [key=0, style=solid];
m3_1936 -> m3_749  [key=2, style=dotted];
m3_1936 -> m3_24  [key=2, style=dotted];
m3_1941 -> m3_1930  [key=0, style=bold, color=blue];
m3_2931 -> m3_2932  [key=0, style=solid];
m3_2932 -> m3_2933  [key=0, style=solid];
m3_2932 -> m3_2930  [key=2, style=dotted];
m3_2932 -> m3_1226  [key=2, style=dotted];
m3_2932 -> m3_2942  [key=2, style=dotted];
m3_2932 -> m3_1090  [key=2, style=dotted];
m3_2932 -> m3_1689  [key=2, style=dotted];
m3_2932 -> m3_2936  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2932 -> m3_2937  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2932 -> m3_2938  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2932 -> m3_2939  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2932 -> m3_2940  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2933 -> m3_2934  [key=0, style=solid];
m3_2933 -> m3_16  [key=2, style=dotted];
m3_2933 -> m3_2935  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2936 -> m3_2937  [key=0, style=solid];
m3_2936 -> m3_25  [key=2, style=dotted];
m3_2937 -> m3_2938  [key=0, style=solid];
m3_2937 -> m3_25  [key=2, style=dotted];
m3_2938 -> m3_2939  [key=0, style=solid];
m3_2938 -> m3_25  [key=2, style=dotted];
m3_2939 -> m3_2940  [key=0, style=solid];
m3_2939 -> m3_25  [key=2, style=dotted];
m3_2940 -> m3_2941  [key=0, style=solid];
m3_2940 -> m3_25  [key=2, style=dotted];
m3_2934 -> m3_2935  [key=0, style=solid];
m3_2934 -> m3_17  [key=2, style=dotted];
m3_2935 -> m3_2936  [key=0, style=solid];
m3_2935 -> m3_24  [key=2, style=dotted];
m3_2935 -> m3_2937  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2935 -> m3_2938  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2935 -> m3_2939  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2935 -> m3_2940  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2941 -> m3_2931  [key=0, style=bold, color=blue];
m3_777 -> m3_778  [key=0, style=solid];
m3_778 -> m3_779  [key=0, style=solid];
m3_778 -> m3_783  [key=2, style=dotted];
m3_778 -> m3_769  [key=2, style=dotted];
m3_779 -> m3_780  [key=0, style=solid];
m3_779 -> m3_105  [key=2, style=dotted];
m3_779 -> m3_781  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_780 -> m3_781  [key=0, style=solid];
m3_781 -> m3_782  [key=0, style=solid];
m3_781 -> m3_25  [key=2, style=dotted];
m3_782 -> m3_777  [key=0, style=bold, color=blue];
m3_3680 -> m3_3681  [key=0, style=solid];
m3_3681 -> m3_3682  [key=0, style=solid];
m3_3681 -> m3_2953  [key=2, style=dotted];
m3_3681 -> m3_3686  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_3682 -> m3_3683  [key=0, style=solid];
m3_3682 -> m3_2954  [key=2, style=dotted];
m3_3682 -> m3_3684  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_3682 -> m3_3685  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_3686 -> m3_3687  [key=0, style=solid];
m3_3686 -> m3_2958  [key=2, style=dotted];
m3_3683 -> m3_3684  [key=0, style=solid];
m3_3683 -> m3_151  [key=2, style=dotted];
m3_3683 -> m3_812  [key=2, style=dotted];
m3_3684 -> m3_3685  [key=0, style=solid];
m3_3684 -> m3_2990  [key=2, style=dotted];
m3_3685 -> m3_3686  [key=0, style=solid];
m3_3685 -> m3_25  [key=2, style=dotted];
m3_3687 -> m3_3688  [key=0, style=solid];
m3_3687 -> m3_17  [key=2, style=dotted];
m3_3688 -> m3_3680  [key=0, style=bold, color=blue];
m3_861 -> m3_862  [key=0, style=solid];
m3_862 -> m3_863  [key=0, style=solid];
m3_862 -> m3_870  [key=2, style=dotted];
m3_862 -> m3_864  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_862 -> m3_865  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_862 -> m3_866  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_862 -> m3_867  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m3_863 -> m3_864  [key=0, style=solid];
m3_864 -> m3_865  [key=0, style=solid];
m3_865 -> m3_866  [key=0, style=solid];
m3_866 -> m3_867  [key=0, style=solid];
m3_867 -> m3_868  [key=0, style=solid];
m3_867 -> m3_850  [key=2, style=dotted];
m3_868 -> m3_869  [key=0, style=solid];
m3_868 -> m3_17  [key=2, style=dotted];
m3_869 -> m3_861  [key=0, style=bold, color=blue];
m3_4104 -> m3_4105  [key=0, style=solid];
m3_4105 -> m3_4106  [key=0, style=solid];
m3_4105 -> m3_4109  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m3_4106 -> m3_4107  [key=0, style=solid];
m3_4106 -> m3_36  [key=2, style=dotted];
m3_4106 -> m3_4108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_4107 -> m3_4104  [key=0, style=bold, color=blue];
m3_2441 -> m3_2442  [key=0, style=solid];
m3_2442 -> m3_2443  [key=0, style=solid];
m3_2443 -> m3_2444  [key=0, style=solid];
m3_2443 -> m3_24  [key=2, style=dotted];
m3_2443 -> m3_2445  [key=1, style=dashed, color=darkseagreen4, label=cc];
m3_2443 -> m3_2446  [key=1, style=dashed, color=darkseagreen4, label=cc];
m3_2444 -> m3_2445  [key=0, style=solid];
m3_2444 -> m3_25  [key=2, style=dotted];
m3_2445 -> m3_2446  [key=0, style=solid];
m3_2445 -> m3_25  [key=2, style=dotted];
m3_2446 -> m3_2447  [key=0, style=solid];
m3_2446 -> m3_25  [key=2, style=dotted];
m3_2447 -> m3_2441  [key=0, style=bold, color=blue];
m3_3062 -> m3_3063  [key=0, style=solid];
m3_3063 -> m3_3064  [key=0, style=solid];
m3_3063 -> m3_3067  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3064 -> m3_3065  [key=0, style=solid];
m3_3064 -> m3_36  [key=2, style=dotted];
m3_3064 -> m3_3066  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3065 -> m3_3062  [key=0, style=bold, color=blue];
m3_1703 -> m3_1704  [key=0, style=solid];
m3_1704 -> m3_1705  [key=0, style=solid];
m3_1705 -> m3_1706  [key=0, style=solid];
m3_1705 -> m3_24  [key=2, style=dotted];
m3_1705 -> m3_1707  [key=1, style=dashed, color=darkseagreen4, label=content];
m3_1705 -> m3_1708  [key=1, style=dashed, color=darkseagreen4, label=content];
m3_1705 -> m3_1709  [key=1, style=dashed, color=darkseagreen4, label=content];
m3_1706 -> m3_1707  [key=0, style=solid];
m3_1706 -> m3_25  [key=2, style=dotted];
m3_1707 -> m3_1708  [key=0, style=solid];
m3_1707 -> m3_25  [key=2, style=dotted];
m3_1708 -> m3_1709  [key=0, style=solid];
m3_1708 -> m3_25  [key=2, style=dotted];
m3_1709 -> m3_1710  [key=0, style=solid];
m3_1709 -> m3_25  [key=2, style=dotted];
m3_1710 -> m3_1703  [key=0, style=bold, color=blue];
m3_3705 -> m3_3706  [key=0, style=solid];
m3_3706 -> m3_3707  [key=0, style=solid];
m3_3706 -> m3_3709  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3706 -> m3_3712  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3707 -> m3_3708  [key=0, style=solid];
m3_3707 -> m3_24  [key=2, style=dotted];
m3_3709 -> m3_3710  [key=0, style=solid];
m3_3709 -> m3_36  [key=2, style=dotted];
m3_3709 -> m3_3711  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3708 -> m3_3709  [key=0, style=solid];
m3_3708 -> m3_2338  [key=2, style=dotted];
m3_3708 -> m3_25  [key=2, style=dotted];
m3_3710 -> m3_3705  [key=0, style=bold, color=blue];
m3_2594 -> m3_2595  [key=0, style=solid];
m3_2595 -> m3_2596  [key=0, style=solid];
m3_2595 -> m3_24  [key=2, style=dotted];
m3_2596 -> m3_2597  [key=0, style=solid];
m3_2596 -> m3_25  [key=2, style=dotted];
m3_2597 -> m3_2594  [key=0, style=bold, color=blue];
m3_2727 -> m3_2728  [key=0, style=solid];
m3_2728 -> m3_2729  [key=0, style=solid];
m3_2729 -> m3_2730  [key=0, style=solid];
m3_2729 -> m3_24  [key=2, style=dotted];
m3_2729 -> m3_2731  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_2729 -> m3_2732  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_2730 -> m3_2731  [key=0, style=solid];
m3_2730 -> m3_25  [key=2, style=dotted];
m3_2731 -> m3_2732  [key=0, style=solid];
m3_2731 -> m3_25  [key=2, style=dotted];
m3_2732 -> m3_2733  [key=0, style=solid];
m3_2732 -> m3_25  [key=2, style=dotted];
m3_2733 -> m3_2727  [key=0, style=bold, color=blue];
m3_2696 -> m3_2697  [key=0, style=solid];
m3_2697 -> m3_2698  [key=0, style=solid];
m3_2697 -> m3_24  [key=2, style=dotted];
m3_2698 -> m3_2699  [key=0, style=solid];
m3_2698 -> m3_25  [key=2, style=dotted];
m3_2699 -> m3_2696  [key=0, style=bold, color=blue];
m3_3220 -> m3_3221  [key=0, style=solid];
m3_3221 -> m3_3222  [key=0, style=solid];
m3_3221 -> m3_24  [key=2, style=dotted];
m3_3222 -> m3_3223  [key=0, style=solid];
m3_3222 -> m3_128  [key=2, style=dotted];
m3_3223 -> m3_3220  [key=0, style=bold, color=blue];
m3_299 -> m3_300  [key=0, style=solid];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_310  [key=2, style=dotted];
m3_300 -> m3_302  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_300 -> m3_303  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_300 -> m3_304  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_301 -> m3_302  [key=0, style=solid];
m3_302 -> m3_303  [key=0, style=solid];
m3_302 -> m3_297  [key=2, style=dotted];
m3_302 -> m3_298  [key=2, style=dotted];
m3_303 -> m3_304  [key=0, style=solid];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_16  [key=2, style=dotted];
m3_304 -> m3_306  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_305 -> m3_306  [key=0, style=solid];
m3_305 -> m3_17  [key=2, style=dotted];
m3_306 -> m3_307  [key=0, style=solid];
m3_306 -> m3_24  [key=2, style=dotted];
m3_306 -> m3_308  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_25  [key=2, style=dotted];
m3_308 -> m3_309  [key=0, style=solid];
m3_308 -> m3_25  [key=2, style=dotted];
m3_309 -> m3_299  [key=0, style=bold, color=blue];
m3_2354 -> m3_2355  [key=0, style=solid];
m3_2355 -> m3_2356  [key=0, style=solid];
m3_2355 -> m3_2359  [key=2, style=dotted];
m3_2355 -> m3_2360  [key=2, style=dotted];
m3_2355 -> m3_2361  [key=2, style=dotted];
m3_2356 -> m3_2357  [key=0, style=solid];
m3_2356 -> m3_2362  [key=2, style=dotted];
m3_2356 -> m3_2363  [key=2, style=dotted];
m3_2356 -> m3_1276  [key=2, style=dotted];
m3_2357 -> m3_2358  [key=0, style=solid];
m3_2357 -> m3_25  [key=2, style=dotted];
m3_2358 -> m3_2354  [key=0, style=bold, color=blue];
m3_2461 -> m3_2462  [key=0, style=solid];
m3_2462 -> m3_2463  [key=0, style=solid];
m3_2462 -> m3_172  [key=2, style=dotted];
m3_2462 -> m3_2464  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_2462 -> m3_2465  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m3_2463 -> m3_2464  [key=0, style=solid];
m3_2463 -> m3_2460  [key=2, style=dotted];
m3_2463 -> m3_811  [key=2, style=dotted];
m3_2464 -> m3_2465  [key=0, style=solid];
m3_2464 -> m3_2460  [key=2, style=dotted];
m3_2464 -> m3_811  [key=2, style=dotted];
m3_2465 -> m3_2466  [key=0, style=solid];
m3_2465 -> m3_16  [key=2, style=dotted];
m3_2465 -> m3_2467  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2466 -> m3_2467  [key=0, style=solid];
m3_2466 -> m3_17  [key=2, style=dotted];
m3_2467 -> m3_2468  [key=0, style=solid];
m3_2467 -> m3_24  [key=2, style=dotted];
m3_2468 -> m3_2469  [key=0, style=solid];
m3_2468 -> m3_25  [key=2, style=dotted];
m3_2469 -> m3_2461  [key=0, style=bold, color=blue];
m3_4190 -> m3_4191  [key=0, style=solid];
m3_4191 -> m3_4192  [key=0, style=solid];
m3_4192 -> m3_4190  [key=0, style=bold, color=blue];
m3_2206 -> m3_2207  [key=0, style=solid];
m3_2207 -> m3_2208  [key=0, style=solid];
m3_2207 -> m3_1493  [key=2, style=dotted];
m3_2207 -> m3_2209  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_2207 -> m3_2210  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_2207 -> m3_2211  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_2207 -> m3_2215  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_2208 -> m3_2209  [key=0, style=solid];
m3_2208 -> m3_1082  [key=2, style=dotted];
m3_2209 -> m3_2210  [key=0, style=solid];
m3_2210 -> m3_2211  [key=0, style=solid];
m3_2211 -> m3_2212  [key=0, style=solid];
m3_2215 -> m3_2216  [key=0, style=solid];
m3_2215 -> m3_2135  [key=2, style=dotted];
m3_2212 -> m3_2213  [key=0, style=solid];
m3_2212 -> m3_354  [key=2, style=dotted];
m3_2212 -> m3_1090  [key=2, style=dotted];
m3_2212 -> m3_2215  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m3_2212 -> m3_2221  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m3_2213 -> m3_2214  [key=0, style=solid];
m3_2221 -> m3_2222  [key=0, style=solid];
m3_2221 -> m3_25  [key=2, style=dotted];
m3_2214 -> m3_2215  [key=0, style=solid];
m3_2214 -> m3_2217  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m3_2217 -> m3_2218  [key=0, style=solid];
m3_2217 -> m3_17  [key=2, style=dotted];
m3_2216 -> m3_2217  [key=0, style=solid];
m3_2216 -> m3_16  [key=2, style=dotted];
m3_2216 -> m3_2218  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2218 -> m3_2219  [key=0, style=solid];
m3_2218 -> m3_24  [key=2, style=dotted];
m3_2218 -> m3_2220  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2218 -> m3_2221  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2218 -> m3_2222  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2218 -> m3_2223  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2218 -> m3_2224  [key=1, style=dashed, color=darkseagreen4, label=o2];
m3_2219 -> m3_2220  [key=0, style=solid];
m3_2219 -> m3_25  [key=2, style=dotted];
m3_2220 -> m3_2221  [key=0, style=solid];
m3_2220 -> m3_25  [key=2, style=dotted];
m3_2222 -> m3_2223  [key=0, style=solid];
m3_2222 -> m3_25  [key=2, style=dotted];
m3_2223 -> m3_2224  [key=0, style=solid];
m3_2223 -> m3_25  [key=2, style=dotted];
m3_2224 -> m3_2225  [key=0, style=solid];
m3_2224 -> m3_25  [key=2, style=dotted];
m3_2225 -> m3_2206  [key=0, style=bold, color=blue];
m3_3762 -> m3_3763  [key=0, style=solid];
m3_3763 -> m3_3764  [key=0, style=solid];
m3_3763 -> m3_349  [key=2, style=dotted];
m3_3763 -> m3_350  [key=2, style=dotted];
m3_3763 -> m3_3766  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_3764 -> m3_3765  [key=0, style=solid];
m3_3764 -> m3_151  [key=2, style=dotted];
m3_3766 -> m3_3767  [key=0, style=solid];
m3_3766 -> m3_2543  [key=2, style=dotted];
m3_3765 -> m3_3766  [key=0, style=solid];
m3_3765 -> m3_812  [key=2, style=dotted];
m3_3767 -> m3_3768  [key=0, style=solid];
m3_3767 -> m3_25  [key=2, style=dotted];
m3_3768 -> m3_3762  [key=0, style=bold, color=blue];
m3_167 -> m3_168  [key=0, style=solid];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_172  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_151  [key=2, style=dotted];
m3_169 -> m3_173  [key=2, style=dotted];
m3_169 -> m3_174  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_25  [key=2, style=dotted];
m3_170 -> m3_148  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytesInternal"];
m3_170 -> m3_178  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytesInternal"];
m3_170 -> m3_181  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytesInternal"];
m3_170 -> m3_208  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytesInternal"];
m3_170 -> m3_216  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytesInternal"];
m3_171 -> m3_167  [key=0, style=bold, color=blue];
m3_2421 -> m3_2422  [key=0, style=solid];
m3_2422 -> m3_2423  [key=0, style=solid];
m3_2422 -> m3_172  [key=2, style=dotted];
m3_2422 -> m3_2424  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_2422 -> m3_2425  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_2422 -> m3_2429  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_2423 -> m3_2424  [key=0, style=solid];
m3_2423 -> m3_811  [key=2, style=dotted];
m3_2424 -> m3_2425  [key=0, style=solid];
m3_2424 -> m3_811  [key=2, style=dotted];
m3_2425 -> m3_2426  [key=0, style=solid];
m3_2425 -> m3_811  [key=2, style=dotted];
m3_2429 -> m3_2430  [key=0, style=solid];
m3_2429 -> m3_811  [key=2, style=dotted];
m3_2426 -> m3_2427  [key=0, style=solid];
m3_2426 -> m3_172  [key=2, style=dotted];
m3_2426 -> m3_2428  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_2426 -> m3_2429  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_2426 -> m3_2430  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_2427 -> m3_2428  [key=0, style=solid];
m3_2427 -> m3_811  [key=2, style=dotted];
m3_2428 -> m3_2429  [key=0, style=solid];
m3_2428 -> m3_811  [key=2, style=dotted];
m3_2430 -> m3_2431  [key=0, style=solid];
m3_2430 -> m3_105  [key=2, style=dotted];
m3_2430 -> m3_2432  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2431 -> m3_2432  [key=0, style=solid];
m3_2431 -> m3_25  [key=2, style=dotted];
m3_2432 -> m3_2433  [key=0, style=solid];
m3_2432 -> m3_24  [key=2, style=dotted];
m3_2432 -> m3_2434  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_2432 -> m3_2435  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_2433 -> m3_2434  [key=0, style=solid];
m3_2433 -> m3_25  [key=2, style=dotted];
m3_2434 -> m3_2435  [key=0, style=solid];
m3_2434 -> m3_25  [key=2, style=dotted];
m3_2435 -> m3_2436  [key=0, style=solid];
m3_2435 -> m3_25  [key=2, style=dotted];
m3_2436 -> m3_2421  [key=0, style=bold, color=blue];
m3_2973 -> m3_2974  [key=0, style=solid];
m3_2974 -> m3_2975  [key=0, style=solid];
m3_2974 -> m3_2989  [key=2, style=dotted];
m3_2974 -> m3_2980  [key=1, style=dashed, color=darkseagreen4, label=test];
m3_2975 -> m3_2976  [key=0, style=solid];
m3_2975 -> m3_351  [key=2, style=dotted];
m3_2975 -> m3_2980  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_2975 -> m3_2985  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_2980 -> m3_2981  [key=0, style=solid];
m3_2980 -> m3_2990  [key=2, style=dotted];
m3_2976 -> m3_2977  [key=0, style=solid];
m3_2985 -> m3_2986  [key=0, style=solid];
m3_2985 -> m3_2992  [key=2, style=dotted];
m3_2985 -> m3_2987  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m3_2977 -> m3_2978  [key=0, style=solid];
m3_2978 -> m3_2979  [key=0, style=solid];
m3_2978 -> m3_813  [key=2, style=dotted];
m3_2978 -> m3_2982  [key=1, style=dashed, color=darkseagreen4, label=stream];
m3_2979 -> m3_2980  [key=0, style=solid];
m3_2979 -> m3_2954  [key=2, style=dotted];
m3_2979 -> m3_814  [key=2, style=dotted];
m3_2979 -> m3_2981  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m3_2982 -> m3_2983  [key=0, style=solid];
m3_2982 -> m3_896  [key=2, style=dotted];
m3_2981 -> m3_2982  [key=0, style=solid];
m3_2981 -> m3_2991  [key=2, style=dotted];
m3_2983 -> m3_2984  [key=0, style=solid];
m3_2983 -> m3_1055  [key=2, style=dotted];
m3_2984 -> m3_2985  [key=0, style=solid];
m3_2984 -> m3_349  [key=2, style=dotted];
m3_2984 -> m3_819  [key=2, style=dotted];
m3_2986 -> m3_2987  [key=0, style=solid];
m3_2986 -> m3_25  [key=2, style=dotted];
m3_2987 -> m3_2988  [key=0, style=solid];
m3_2987 -> m3_2993  [key=2, style=dotted];
m3_2988 -> m3_2973  [key=0, style=bold, color=blue];
m3_3738 -> m3_3739  [key=0, style=solid];
m3_3739 -> m3_3740  [key=0, style=solid];
m3_3739 -> m3_172  [key=2, style=dotted];
m3_3739 -> m3_1082  [key=2, style=dotted];
m3_3739 -> m3_354  [key=2, style=dotted];
m3_3739 -> m3_1090  [key=2, style=dotted];
m3_3739 -> m3_3741  [key=1, style=dashed, color=darkseagreen4, label=dates];
m3_3740 -> m3_3741  [key=0, style=solid];
m3_3740 -> m3_16  [key=2, style=dotted];
m3_3740 -> m3_3742  [key=1, style=dashed, color=darkseagreen4, label=expected];
m3_3741 -> m3_3742  [key=0, style=solid];
m3_3741 -> m3_151  [key=2, style=dotted];
m3_3741 -> m3_174  [key=2, style=dotted];
m3_3742 -> m3_3743  [key=0, style=solid];
m3_3742 -> m3_25  [key=2, style=dotted];
m3_3743 -> m3_3738  [key=0, style=bold, color=blue];
m3_2781 -> m3_2782  [key=0, style=solid];
m3_2782 -> m3_2783  [key=0, style=solid];
m3_2782 -> m3_2780  [key=2, style=dotted];
m3_2782 -> m3_2785  [key=1, style=dashed, color=darkseagreen4, label=cc];
m3_2783 -> m3_2784  [key=0, style=solid];
m3_2783 -> m3_2789  [key=2, style=dotted];
m3_2783 -> m3_2785  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_2785 -> m3_2786  [key=0, style=solid];
m3_2785 -> m3_895  [key=2, style=dotted];
m3_2784 -> m3_2785  [key=0, style=solid];
m3_2784 -> m3_813  [key=2, style=dotted];
m3_2784 -> m3_2786  [key=1, style=dashed, color=darkseagreen4, label=ms];
m3_2786 -> m3_2787  [key=0, style=solid];
m3_2786 -> m3_896  [key=2, style=dotted];
m3_2786 -> m3_2790  [key=2, style=dotted];
m3_2786 -> m3_897  [key=2, style=dotted];
m3_2787 -> m3_2788  [key=0, style=solid];
m3_2787 -> m3_25  [key=2, style=dotted];
m3_2788 -> m3_2781  [key=0, style=bold, color=blue];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_24  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_32  [key=2, style=dotted];
m3_28 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_28 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_25  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_25  [key=2, style=dotted];
m3_30 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_31 -> m3_26  [key=0, style=bold, color=blue];
m3_3135 -> m3_3136  [key=0, style=solid];
m3_3136 -> m3_3137  [key=0, style=solid];
m3_3137 -> m3_3138  [key=0, style=solid];
m3_3137 -> m3_24  [key=2, style=dotted];
m3_3138 -> m3_3139  [key=0, style=solid];
m3_3138 -> m3_25  [key=2, style=dotted];
m3_3139 -> m3_3140  [key=0, style=solid];
m3_3140 -> m3_3141  [key=0, style=solid];
m3_3140 -> m3_24  [key=2, style=dotted];
m3_3141 -> m3_3142  [key=0, style=solid];
m3_3141 -> m3_1226  [key=2, style=dotted];
m3_3141 -> m3_25  [key=2, style=dotted];
m3_3142 -> m3_3135  [key=0, style=bold, color=blue];
m3_3643 -> m3_3644  [key=0, style=solid];
m3_3644 -> m3_3645  [key=0, style=solid];
m3_3644 -> m3_519  [key=2, style=dotted];
m3_3644 -> m3_3646  [key=1, style=dashed, color=darkseagreen4, label=culture];
m3_3644 -> m3_3648  [key=1, style=dashed, color=darkseagreen4, label=culture];
m3_3645 -> m3_3646  [key=0, style=solid];
m3_3646 -> m3_3647  [key=0, style=solid];
m3_3648 -> m3_3649  [key=0, style=solid];
m3_3648 -> m3_151  [key=2, style=dotted];
m3_3648 -> m3_174  [key=2, style=dotted];
m3_3647 -> m3_3648  [key=0, style=solid];
m3_3647 -> m3_110  [key=2, style=dotted];
m3_3647 -> m3_1082  [key=2, style=dotted];
m3_3647 -> m3_354  [key=2, style=dotted];
m3_3647 -> m3_1090  [key=2, style=dotted];
m3_3649 -> m3_3650  [key=0, style=solid];
m3_3649 -> m3_17  [key=2, style=dotted];
m3_3650 -> m3_3643  [key=0, style=bold, color=blue];
m3_2959 -> m3_2960  [key=0, style=solid];
m3_2960 -> m3_2961  [key=0, style=solid];
m3_2961 -> m3_2962  [key=0, style=solid];
m3_2961 -> m3_1689  [key=2, style=dotted];
m3_2961 -> m3_2964  [key=1, style=dashed, color=darkseagreen4, label=uri];
m3_2962 -> m3_2963  [key=0, style=solid];
m3_2962 -> m3_105  [key=2, style=dotted];
m3_2964 -> m3_2965  [key=0, style=solid];
m3_2964 -> m3_25  [key=2, style=dotted];
m3_2963 -> m3_2964  [key=0, style=solid];
m3_2963 -> m3_24  [key=2, style=dotted];
m3_2965 -> m3_2959  [key=0, style=bold, color=blue];
m3_2791 -> m3_2792  [key=0, style=solid];
m3_2792 -> m3_2793  [key=0, style=solid];
m3_2792 -> m3_2796  [key=2, style=dotted];
m3_2793 -> m3_2794  [key=0, style=solid];
m3_2793 -> m3_105  [key=2, style=dotted];
m3_2794 -> m3_2795  [key=0, style=solid];
m3_2794 -> m3_25  [key=2, style=dotted];
m3_2795 -> m3_2791  [key=0, style=bold, color=blue];
m3_1993 -> m3_1994  [key=0, style=solid];
m3_1994 -> m3_1995  [key=0, style=solid];
m3_1994 -> m3_24  [key=2, style=dotted];
m3_1995 -> m3_1996  [key=0, style=solid];
m3_1995 -> m3_1379  [key=2, style=dotted];
m3_1995 -> m3_25  [key=2, style=dotted];
m3_1996 -> m3_1997  [key=0, style=solid];
m3_1996 -> m3_24  [key=2, style=dotted];
m3_1997 -> m3_1998  [key=0, style=solid];
m3_1997 -> m3_1379  [key=2, style=dotted];
m3_1997 -> m3_25  [key=2, style=dotted];
m3_1998 -> m3_1993  [key=0, style=bold, color=blue];
m3_3884 -> m3_3885  [key=0, style=solid];
m3_3885 -> m3_3886  [key=0, style=solid];
m3_3885 -> m3_3883  [key=2, style=dotted];
m3_3886 -> m3_3884  [key=0, style=bold, color=blue];
m3_2655 -> m3_2656  [key=0, style=solid];
m3_2656 -> m3_2657  [key=0, style=solid];
m3_2656 -> m3_681  [key=2, style=dotted];
m3_2657 -> m3_2655  [key=0, style=bold, color=blue];
m3_2268 -> m3_2269  [key=0, style=solid];
m3_2269 -> m3_2270  [key=0, style=solid];
m3_2269 -> m3_24  [key=2, style=dotted];
m3_2269 -> m3_2271  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_2269 -> m3_2272  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_2269 -> m3_2273  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_2269 -> m3_2274  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_2269 -> m3_2275  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_2269 -> m3_2276  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_2269 -> m3_2277  [key=1, style=dashed, color=darkseagreen4, label=myA];
m3_2270 -> m3_2271  [key=0, style=solid];
m3_2270 -> m3_2298  [key=2, style=dotted];
m3_2270 -> m3_2299  [key=2, style=dotted];
m3_2270 -> m3_25  [key=2, style=dotted];
m3_2271 -> m3_2272  [key=0, style=solid];
m3_2271 -> m3_2298  [key=2, style=dotted];
m3_2271 -> m3_2299  [key=2, style=dotted];
m3_2271 -> m3_25  [key=2, style=dotted];
m3_2272 -> m3_2273  [key=0, style=solid];
m3_2272 -> m3_2300  [key=2, style=dotted];
m3_2272 -> m3_2299  [key=2, style=dotted];
m3_2272 -> m3_25  [key=2, style=dotted];
m3_2273 -> m3_2274  [key=0, style=solid];
m3_2273 -> m3_2300  [key=2, style=dotted];
m3_2273 -> m3_2299  [key=2, style=dotted];
m3_2273 -> m3_25  [key=2, style=dotted];
m3_2274 -> m3_2275  [key=0, style=solid];
m3_2274 -> m3_2300  [key=2, style=dotted];
m3_2274 -> m3_2299  [key=2, style=dotted];
m3_2274 -> m3_25  [key=2, style=dotted];
m3_2275 -> m3_2276  [key=0, style=solid];
m3_2275 -> m3_2300  [key=2, style=dotted];
m3_2275 -> m3_2299  [key=2, style=dotted];
m3_2275 -> m3_25  [key=2, style=dotted];
m3_2276 -> m3_2277  [key=0, style=solid];
m3_2276 -> m3_2300  [key=2, style=dotted];
m3_2276 -> m3_2299  [key=2, style=dotted];
m3_2276 -> m3_25  [key=2, style=dotted];
m3_2277 -> m3_2278  [key=0, style=solid];
m3_2277 -> m3_2300  [key=2, style=dotted];
m3_2277 -> m3_2299  [key=2, style=dotted];
m3_2277 -> m3_25  [key=2, style=dotted];
m3_2278 -> m3_2279  [key=0, style=solid];
m3_2278 -> m3_24  [key=2, style=dotted];
m3_2278 -> m3_2280  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2281  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2282  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2283  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2284  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2285  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2286  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2287  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2288  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2289  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2290  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2291  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2292  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2293  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2294  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2295  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2278 -> m3_2296  [key=1, style=dashed, color=darkseagreen4, label=myB];
m3_2279 -> m3_2280  [key=0, style=solid];
m3_2279 -> m3_2298  [key=2, style=dotted];
m3_2279 -> m3_2299  [key=2, style=dotted];
m3_2279 -> m3_25  [key=2, style=dotted];
m3_2280 -> m3_2281  [key=0, style=solid];
m3_2280 -> m3_2298  [key=2, style=dotted];
m3_2280 -> m3_2299  [key=2, style=dotted];
m3_2280 -> m3_25  [key=2, style=dotted];
m3_2281 -> m3_2282  [key=0, style=solid];
m3_2281 -> m3_2300  [key=2, style=dotted];
m3_2281 -> m3_2299  [key=2, style=dotted];
m3_2281 -> m3_25  [key=2, style=dotted];
m3_2282 -> m3_2283  [key=0, style=solid];
m3_2282 -> m3_2300  [key=2, style=dotted];
m3_2282 -> m3_2299  [key=2, style=dotted];
m3_2282 -> m3_25  [key=2, style=dotted];
m3_2283 -> m3_2284  [key=0, style=solid];
m3_2283 -> m3_2300  [key=2, style=dotted];
m3_2283 -> m3_2299  [key=2, style=dotted];
m3_2283 -> m3_25  [key=2, style=dotted];
m3_2284 -> m3_2285  [key=0, style=solid];
m3_2284 -> m3_2300  [key=2, style=dotted];
m3_2284 -> m3_2299  [key=2, style=dotted];
m3_2284 -> m3_25  [key=2, style=dotted];
m3_2285 -> m3_2286  [key=0, style=solid];
m3_2285 -> m3_2300  [key=2, style=dotted];
m3_2285 -> m3_2299  [key=2, style=dotted];
m3_2285 -> m3_25  [key=2, style=dotted];
m3_2286 -> m3_2287  [key=0, style=solid];
m3_2286 -> m3_2300  [key=2, style=dotted];
m3_2286 -> m3_2299  [key=2, style=dotted];
m3_2286 -> m3_25  [key=2, style=dotted];
m3_2287 -> m3_2288  [key=0, style=solid];
m3_2287 -> m3_25  [key=2, style=dotted];
m3_2288 -> m3_2289  [key=0, style=solid];
m3_2288 -> m3_25  [key=2, style=dotted];
m3_2289 -> m3_2290  [key=0, style=solid];
m3_2289 -> m3_25  [key=2, style=dotted];
m3_2290 -> m3_2291  [key=0, style=solid];
m3_2290 -> m3_25  [key=2, style=dotted];
m3_2291 -> m3_2292  [key=0, style=solid];
m3_2291 -> m3_2300  [key=2, style=dotted];
m3_2291 -> m3_2299  [key=2, style=dotted];
m3_2291 -> m3_25  [key=2, style=dotted];
m3_2292 -> m3_2293  [key=0, style=solid];
m3_2292 -> m3_2300  [key=2, style=dotted];
m3_2292 -> m3_2299  [key=2, style=dotted];
m3_2292 -> m3_25  [key=2, style=dotted];
m3_2293 -> m3_2294  [key=0, style=solid];
m3_2293 -> m3_25  [key=2, style=dotted];
m3_2294 -> m3_2295  [key=0, style=solid];
m3_2294 -> m3_2300  [key=2, style=dotted];
m3_2294 -> m3_2299  [key=2, style=dotted];
m3_2294 -> m3_25  [key=2, style=dotted];
m3_2295 -> m3_2296  [key=0, style=solid];
m3_2295 -> m3_2300  [key=2, style=dotted];
m3_2295 -> m3_2299  [key=2, style=dotted];
m3_2295 -> m3_25  [key=2, style=dotted];
m3_2296 -> m3_2297  [key=0, style=solid];
m3_2296 -> m3_2300  [key=2, style=dotted];
m3_2296 -> m3_2299  [key=2, style=dotted];
m3_2296 -> m3_25  [key=2, style=dotted];
m3_2297 -> m3_2268  [key=0, style=bold, color=blue];
m3_3627 -> m3_3628  [key=0, style=solid];
m3_3628 -> m3_3629  [key=0, style=solid];
m3_3628 -> m3_3630  [key=1, style=dashed, color=darkseagreen4, label=content];
m3_3629 -> m3_3630  [key=0, style=solid];
m3_3629 -> m3_151  [key=2, style=dotted];
m3_3630 -> m3_3631  [key=0, style=solid];
m3_3630 -> m3_3635  [key=2, style=dotted];
m3_3631 -> m3_3632  [key=0, style=solid];
m3_3632 -> m3_3633  [key=0, style=solid];
m3_3632 -> m3_1090  [key=2, style=dotted];
m3_3632 -> m3_25  [key=2, style=dotted];
m3_3632 -> m3_3632  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m3_3633 -> m3_3634  [key=0, style=solid];
m3_3633 -> m3_3636  [key=2, style=dotted];
m3_3633 -> m3_25  [key=2, style=dotted];
m3_3633 -> m3_3633  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m3_3634 -> m3_3627  [key=0, style=bold, color=blue];
m3_3926 -> m3_3927  [key=0, style=solid];
m3_3927 -> m3_3928  [key=0, style=solid];
m3_3927 -> m3_3883  [key=2, style=dotted];
m3_3928 -> m3_3926  [key=0, style=bold, color=blue];
m3_1380 -> m3_1381  [key=0, style=solid];
m3_1381 -> m3_1382  [key=0, style=solid];
m3_1381 -> m3_1393  [key=2, style=dotted];
m3_1381 -> m3_1226  [key=2, style=dotted];
m3_1382 -> m3_1383  [key=0, style=solid];
m3_1382 -> m3_105  [key=2, style=dotted];
m3_1382 -> m3_1384  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1383 -> m3_1384  [key=0, style=solid];
m3_1383 -> m3_25  [key=2, style=dotted];
m3_1384 -> m3_1385  [key=0, style=solid];
m3_1384 -> m3_24  [key=2, style=dotted];
m3_1384 -> m3_1386  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_1384 -> m3_1387  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_1384 -> m3_1388  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_1384 -> m3_1389  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_1384 -> m3_1390  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_1384 -> m3_1391  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m3_1385 -> m3_1386  [key=0, style=solid];
m3_1385 -> m3_1226  [key=2, style=dotted];
m3_1385 -> m3_25  [key=2, style=dotted];
m3_1386 -> m3_1387  [key=0, style=solid];
m3_1386 -> m3_25  [key=2, style=dotted];
m3_1387 -> m3_1388  [key=0, style=solid];
m3_1387 -> m3_25  [key=2, style=dotted];
m3_1388 -> m3_1389  [key=0, style=solid];
m3_1388 -> m3_25  [key=2, style=dotted];
m3_1389 -> m3_1390  [key=0, style=solid];
m3_1389 -> m3_25  [key=2, style=dotted];
m3_1390 -> m3_1391  [key=0, style=solid];
m3_1390 -> m3_25  [key=2, style=dotted];
m3_1391 -> m3_1392  [key=0, style=solid];
m3_1391 -> m3_25  [key=2, style=dotted];
m3_1392 -> m3_1380  [key=0, style=bold, color=blue];
m3_3086 -> m3_3087  [key=0, style=solid];
m3_3087 -> m3_3088  [key=0, style=solid];
m3_3087 -> m3_3091  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3088 -> m3_3089  [key=0, style=solid];
m3_3088 -> m3_36  [key=2, style=dotted];
m3_3088 -> m3_3090  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3089 -> m3_3086  [key=0, style=bold, color=blue];
m3_3208 -> m3_3209  [key=0, style=solid];
m3_3209 -> m3_3210  [key=0, style=solid];
m3_3209 -> m3_36  [key=2, style=dotted];
m3_3209 -> m3_3211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3210 -> m3_3208  [key=0, style=bold, color=blue];
m3_2470 -> m3_2471  [key=0, style=solid];
m3_2471 -> m3_2472  [key=0, style=solid];
m3_2471 -> m3_16  [key=2, style=dotted];
m3_2472 -> m3_2473  [key=0, style=solid];
m3_2472 -> m3_17  [key=2, style=dotted];
m3_2473 -> m3_2470  [key=0, style=bold, color=blue];
m3_727 -> m3_728  [key=0, style=solid];
m3_728 -> m3_729  [key=0, style=solid];
m3_728 -> m3_734  [key=2, style=dotted];
m3_729 -> m3_730  [key=0, style=solid];
m3_729 -> m3_16  [key=2, style=dotted];
m3_730 -> m3_731  [key=0, style=solid];
m3_730 -> m3_24  [key=2, style=dotted];
m3_730 -> m3_732  [key=1, style=dashed, color=darkseagreen4, label=r2];
m3_731 -> m3_732  [key=0, style=solid];
m3_731 -> m3_735  [key=2, style=dotted];
m3_731 -> m3_25  [key=2, style=dotted];
m3_732 -> m3_733  [key=0, style=solid];
m3_732 -> m3_25  [key=2, style=dotted];
m3_733 -> m3_727  [key=0, style=bold, color=blue];
m3_2373 -> m3_2374  [key=0, style=solid];
m3_2374 -> m3_2375  [key=0, style=solid];
m3_2374 -> m3_2376  [key=2, style=dotted];
m3_2375 -> m3_2373  [key=0, style=bold, color=blue];
m3_2246 -> m3_2247  [key=0, style=solid];
m3_2246 -> m3_2248  [key=1, style=dashed, color=darkseagreen4, label=TValue];
m3_2247 -> m3_2248  [key=0, style=solid];
m3_2248 -> m3_2249  [key=0, style=solid];
m3_2249 -> m3_2246  [key=0, style=bold, color=blue];
m3_448 -> m3_449  [key=0, style=solid];
m3_449 -> m3_450  [key=0, style=solid];
m3_449 -> m3_24  [key=2, style=dotted];
m3_450 -> m3_451  [key=0, style=solid];
m3_450 -> m3_25  [key=2, style=dotted];
m3_451 -> m3_452  [key=0, style=solid];
m3_451 -> m3_24  [key=2, style=dotted];
m3_452 -> m3_453  [key=0, style=solid];
m3_452 -> m3_25  [key=2, style=dotted];
m3_453 -> m3_448  [key=0, style=bold, color=blue];
m3_2081 -> m3_2082  [key=0, style=solid];
m3_2082 -> m3_2083  [key=0, style=solid];
m3_2082 -> m3_811  [key=2, style=dotted];
m3_2083 -> m3_2081  [key=0, style=bold, color=blue];
m3_3942 -> m3_3943  [key=0, style=solid];
m3_3943 -> m3_3944  [key=0, style=solid];
m3_3943 -> m3_3947  [key=1, style=dashed, color=darkseagreen4, label=originalUri];
m3_3944 -> m3_3945  [key=0, style=solid];
m3_3944 -> m3_1689  [key=2, style=dotted];
m3_3947 -> m3_3948  [key=0, style=solid];
m3_3947 -> m3_25  [key=2, style=dotted];
m3_3945 -> m3_3946  [key=0, style=solid];
m3_3945 -> m3_105  [key=2, style=dotted];
m3_3946 -> m3_3947  [key=0, style=solid];
m3_3946 -> m3_24  [key=2, style=dotted];
m3_3948 -> m3_3942  [key=0, style=bold, color=blue];
m3_1711 -> m3_1712  [key=0, style=solid];
m3_1712 -> m3_1713  [key=0, style=solid];
m3_1713 -> m3_1714  [key=0, style=solid];
m3_1713 -> m3_24  [key=2, style=dotted];
m3_1713 -> m3_1715  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_1713 -> m3_1716  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_1714 -> m3_1715  [key=0, style=solid];
m3_1714 -> m3_25  [key=2, style=dotted];
m3_1715 -> m3_1716  [key=0, style=solid];
m3_1715 -> m3_25  [key=2, style=dotted];
m3_1716 -> m3_1717  [key=0, style=solid];
m3_1716 -> m3_25  [key=2, style=dotted];
m3_1717 -> m3_1711  [key=0, style=bold, color=blue];
m3_3500 -> m3_3501  [key=0, style=solid];
m3_3501 -> m3_3502  [key=0, style=solid];
m3_3501 -> m3_3504  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3501 -> m3_3509  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3501 -> m3_3512  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3502 -> m3_3503  [key=0, style=solid];
m3_3502 -> m3_151  [key=2, style=dotted];
m3_3502 -> m3_3507  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_3502 -> m3_3508  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_3504 -> m3_3505  [key=0, style=solid];
m3_3504 -> m3_349  [key=2, style=dotted];
m3_3504 -> m3_350  [key=2, style=dotted];
m3_3504 -> m3_2543  [key=2, style=dotted];
m3_3504 -> m3_3506  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_3509 -> m3_3510  [key=0, style=solid];
m3_3509 -> m3_36  [key=2, style=dotted];
m3_3509 -> m3_3511  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3503 -> m3_3504  [key=0, style=solid];
m3_3503 -> m3_812  [key=2, style=dotted];
m3_3507 -> m3_3508  [key=0, style=solid];
m3_3508 -> m3_3509  [key=0, style=solid];
m3_3508 -> m3_812  [key=2, style=dotted];
m3_3508 -> m3_3512  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_3505 -> m3_3506  [key=0, style=solid];
m3_3505 -> m3_776  [key=2, style=dotted];
m3_3506 -> m3_3507  [key=0, style=solid];
m3_3506 -> m3_25  [key=2, style=dotted];
m3_3510 -> m3_3500  [key=0, style=bold, color=blue];
m3_2481 -> m3_2482  [key=0, style=solid];
m3_2482 -> m3_2483  [key=0, style=solid];
m3_2482 -> m3_286  [key=2, style=dotted];
m3_2482 -> m3_16  [key=2, style=dotted];
m3_2482 -> m3_2484  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m3_2483 -> m3_2484  [key=0, style=solid];
m3_2483 -> m3_17  [key=2, style=dotted];
m3_2484 -> m3_2485  [key=0, style=solid];
m3_2484 -> m3_24  [key=2, style=dotted];
m3_2484 -> m3_2486  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2484 -> m3_2487  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2484 -> m3_2488  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_2485 -> m3_2486  [key=0, style=solid];
m3_2485 -> m3_25  [key=2, style=dotted];
m3_2486 -> m3_2487  [key=0, style=solid];
m3_2486 -> m3_2490  [key=2, style=dotted];
m3_2486 -> m3_447  [key=2, style=dotted];
m3_2487 -> m3_2488  [key=0, style=solid];
m3_2487 -> m3_2490  [key=2, style=dotted];
m3_2487 -> m3_447  [key=2, style=dotted];
m3_2488 -> m3_2489  [key=0, style=solid];
m3_2488 -> m3_2490  [key=2, style=dotted];
m3_2488 -> m3_447  [key=2, style=dotted];
m3_2489 -> m3_2481  [key=0, style=bold, color=blue];
m3_3968 -> m3_3969  [key=0, style=solid];
m3_3969 -> m3_3970  [key=0, style=solid];
m3_3969 -> m3_519  [key=2, style=dotted];
m3_3969 -> m3_3972  [key=1, style=dashed, color=darkseagreen4, label=culture];
m3_3969 -> m3_3977  [key=1, style=dashed, color=darkseagreen4, label=culture];
m3_3969 -> m3_3982  [key=1, style=dashed, color=darkseagreen4, label=culture];
m3_3970 -> m3_3971  [key=0, style=solid];
m3_3970 -> m3_934  [key=2, style=dotted];
m3_3970 -> m3_3973  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3970 -> m3_3976  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3970 -> m3_3981  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3972 -> m3_3973  [key=0, style=solid];
m3_3972 -> m3_151  [key=2, style=dotted];
m3_3972 -> m3_3975  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_3977 -> m3_3978  [key=0, style=solid];
m3_3977 -> m3_349  [key=2, style=dotted];
m3_3977 -> m3_350  [key=2, style=dotted];
m3_3982 -> m3_3983  [key=0, style=solid];
m3_3982 -> m3_349  [key=2, style=dotted];
m3_3982 -> m3_350  [key=2, style=dotted];
m3_3971 -> m3_3972  [key=0, style=solid];
m3_3971 -> m3_3977  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m3_3971 -> m3_3982  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m3_3973 -> m3_3974  [key=0, style=solid];
m3_3973 -> m3_152  [key=2, style=dotted];
m3_3973 -> m3_3975  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3973 -> m3_3977  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3976 -> m3_3977  [key=0, style=solid];
m3_3976 -> m3_25  [key=2, style=dotted];
m3_3981 -> m3_3982  [key=0, style=solid];
m3_3981 -> m3_25  [key=2, style=dotted];
m3_3975 -> m3_3976  [key=0, style=solid];
m3_3975 -> m3_272  [key=2, style=dotted];
m3_3974 -> m3_3975  [key=0, style=solid];
m3_3974 -> m3_25  [key=2, style=dotted];
m3_3978 -> m3_3979  [key=0, style=solid];
m3_3978 -> m3_3340  [key=2, style=dotted];
m3_3978 -> m3_3980  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_3978 -> m3_3981  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_3979 -> m3_3980  [key=0, style=solid];
m3_3979 -> m3_25  [key=2, style=dotted];
m3_3980 -> m3_3981  [key=0, style=solid];
m3_3980 -> m3_353  [key=2, style=dotted];
m3_3980 -> m3_25  [key=2, style=dotted];
m3_3983 -> m3_3984  [key=0, style=solid];
m3_3983 -> m3_3340  [key=2, style=dotted];
m3_3983 -> m3_3985  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_3983 -> m3_3986  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_3984 -> m3_3985  [key=0, style=solid];
m3_3984 -> m3_25  [key=2, style=dotted];
m3_3985 -> m3_3986  [key=0, style=solid];
m3_3985 -> m3_353  [key=2, style=dotted];
m3_3985 -> m3_25  [key=2, style=dotted];
m3_3986 -> m3_3987  [key=0, style=solid];
m3_3986 -> m3_25  [key=2, style=dotted];
m3_3987 -> m3_3968  [key=0, style=bold, color=blue];
m3_2634 -> m3_2635  [key=0, style=solid];
m3_2635 -> m3_2634  [key=0, style=bold, color=blue];
m3_2266 -> m3_2303  [key=0, style=solid];
m3_2266 -> m3_2304  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2266 -> m3_2305  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2266 -> m3_2306  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2266 -> m3_2307  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2266 -> m3_2308  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2266 -> m3_2309  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2266 -> m3_2310  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2303 -> m3_2304  [key=0, style=solid];
m3_2304 -> m3_2305  [key=0, style=solid];
m3_2305 -> m3_2306  [key=0, style=solid];
m3_2306 -> m3_2307  [key=0, style=solid];
m3_2307 -> m3_2308  [key=0, style=solid];
m3_2308 -> m3_2309  [key=0, style=solid];
m3_2309 -> m3_2310  [key=0, style=solid];
m3_2310 -> m3_2311  [key=0, style=solid];
m3_2311 -> m3_2266  [key=0, style=bold, color=blue];
m3_825 -> m3_826  [key=0, style=solid];
m3_826 -> m3_827  [key=0, style=solid];
m3_827 -> m3_825  [key=0, style=bold, color=blue];
m3_2340 -> m3_2341  [key=0, style=solid];
m3_2341 -> m3_2342  [key=0, style=solid];
m3_2341 -> m3_2351  [key=2, style=dotted];
m3_2341 -> m3_2344  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_2341 -> m3_2345  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_2341 -> m3_2349  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m3_2342 -> m3_2343  [key=0, style=solid];
m3_2342 -> m3_2352  [key=2, style=dotted];
m3_2342 -> m3_2344  [key=1, style=dashed, color=darkseagreen4, label=document];
m3_2344 -> m3_2345  [key=0, style=solid];
m3_2345 -> m3_2346  [key=0, style=solid];
m3_2345 -> m3_16  [key=2, style=dotted];
m3_2345 -> m3_2347  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2345 -> m3_2348  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2349 -> m3_2350  [key=0, style=solid];
m3_2349 -> m3_25  [key=2, style=dotted];
m3_2343 -> m3_2344  [key=0, style=solid];
m3_2343 -> m3_2353  [key=2, style=dotted];
m3_2346 -> m3_2347  [key=0, style=solid];
m3_2347 -> m3_2348  [key=0, style=solid];
m3_2347 -> m3_17  [key=2, style=dotted];
m3_2348 -> m3_2349  [key=0, style=solid];
m3_2348 -> m3_24  [key=2, style=dotted];
m3_2350 -> m3_2340  [key=0, style=bold, color=blue];
m3_2943 -> m3_2944  [key=0, style=solid];
m3_2944 -> m3_2945  [key=0, style=solid];
m3_2945 -> m3_2946  [key=0, style=solid];
m3_2945 -> m3_747  [key=2, style=dotted];
m3_2945 -> m3_2948  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2946 -> m3_2947  [key=0, style=solid];
m3_2946 -> m3_2953  [key=2, style=dotted];
m3_2946 -> m3_2950  [key=1, style=dashed, color=darkseagreen4, label=sw];
m3_2948 -> m3_2949  [key=0, style=solid];
m3_2948 -> m3_2955  [key=2, style=dotted];
m3_2948 -> m3_2956  [key=2, style=dotted];
m3_2947 -> m3_2948  [key=0, style=solid];
m3_2947 -> m3_2954  [key=2, style=dotted];
m3_2947 -> m3_2949  [key=1, style=dashed, color=darkseagreen4, label=jw];
m3_2950 -> m3_2951  [key=0, style=solid];
m3_2950 -> m3_2958  [key=2, style=dotted];
m3_2949 -> m3_2950  [key=0, style=solid];
m3_2949 -> m3_2957  [key=2, style=dotted];
m3_2951 -> m3_2952  [key=0, style=solid];
m3_2951 -> m3_25  [key=2, style=dotted];
m3_2952 -> m3_2943  [key=0, style=bold, color=blue];
m3_2437 -> m3_2438  [key=0, style=solid];
m3_2437 -> m3_2439  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2438 -> m3_2439  [key=0, style=solid];
m3_2439 -> m3_2440  [key=0, style=solid];
m3_2440 -> m3_2437  [key=0, style=bold, color=blue];
m3_1718 -> m3_1719  [key=0, style=solid];
m3_1719 -> m3_1720  [key=0, style=solid];
m3_1720 -> m3_1721  [key=0, style=solid];
m3_1720 -> m3_24  [key=2, style=dotted];
m3_1720 -> m3_1722  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_1720 -> m3_1723  [key=1, style=dashed, color=darkseagreen4, label=values];
m3_1721 -> m3_1722  [key=0, style=solid];
m3_1721 -> m3_25  [key=2, style=dotted];
m3_1722 -> m3_1723  [key=0, style=solid];
m3_1722 -> m3_25  [key=2, style=dotted];
m3_1723 -> m3_1724  [key=0, style=solid];
m3_1723 -> m3_25  [key=2, style=dotted];
m3_1724 -> m3_1718  [key=0, style=bold, color=blue];
m3_2531 -> m3_2532  [key=0, style=solid];
m3_2532 -> m3_2533  [key=0, style=solid];
m3_2532 -> m3_2541  [key=2, style=dotted];
m3_2532 -> m3_2542  [key=2, style=dotted];
m3_2532 -> m3_934  [key=2, style=dotted];
m3_2532 -> m3_1090  [key=2, style=dotted];
m3_2532 -> m3_105  [key=2, style=dotted];
m3_2532 -> m3_2534  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m3_2533 -> m3_2534  [key=0, style=solid];
m3_2533 -> m3_25  [key=2, style=dotted];
m3_2534 -> m3_2535  [key=0, style=solid];
m3_2534 -> m3_349  [key=2, style=dotted];
m3_2534 -> m3_350  [key=2, style=dotted];
m3_2534 -> m3_2537  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_2535 -> m3_2536  [key=0, style=solid];
m3_2537 -> m3_2538  [key=0, style=solid];
m3_2537 -> m3_2543  [key=2, style=dotted];
m3_2537 -> m3_2539  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m3_2536 -> m3_2537  [key=0, style=solid];
m3_2536 -> m3_351  [key=2, style=dotted];
m3_2538 -> m3_2539  [key=0, style=solid];
m3_2538 -> m3_1090  [key=2, style=dotted];
m3_2538 -> m3_25  [key=2, style=dotted];
m3_2539 -> m3_2540  [key=0, style=solid];
m3_2539 -> m3_934  [key=2, style=dotted];
m3_2539 -> m3_25  [key=2, style=dotted];
m3_2540 -> m3_2531  [key=0, style=bold, color=blue];
m3_2652 -> m3_2653  [key=0, style=solid];
m3_2653 -> m3_2654  [key=0, style=solid];
m3_2653 -> m3_695  [key=2, style=dotted];
m3_2653 -> m3_4240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m3_2654 -> m3_2652  [key=0, style=bold, color=blue];
m3_213 -> m3_214  [key=0, style=solid];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_224  [key=2, style=dotted];
m3_214 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_215 -> m3_216  [key=0, style=solid];
m3_215 -> m3_36  [key=2, style=dotted];
m3_215 -> m3_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_224  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_105  [key=2, style=dotted];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_25  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_219 -> m3_36  [key=2, style=dotted];
m3_219 -> m3_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_36  [key=2, style=dotted];
m3_220 -> m3_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_24  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_25  [key=2, style=dotted];
m3_223 -> m3_213  [key=0, style=bold, color=blue];
m3_3202 -> m3_3203  [key=0, style=solid];
m3_3203 -> m3_3204  [key=0, style=solid];
m3_3203 -> m3_36  [key=2, style=dotted];
m3_3203 -> m3_3205  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3204 -> m3_3202  [key=0, style=bold, color=blue];
m3_283 -> m3_284  [key=0, style=solid];
m3_284 -> m3_285  [key=0, style=solid];
m3_284 -> m3_286  [key=2, style=dotted];
m3_285 -> m3_283  [key=0, style=bold, color=blue];
m3_2825 -> m3_2826  [key=0, style=solid];
m3_2826 -> m3_2827  [key=0, style=solid];
m3_2827 -> m3_2828  [key=0, style=solid];
m3_2827 -> m3_172  [key=2, style=dotted];
m3_2828 -> m3_2825  [key=0, style=bold, color=blue];
m3_3341 -> m3_3342  [key=0, style=solid];
m3_3342 -> m3_3343  [key=0, style=solid];
m3_3342 -> m3_3345  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3343 -> m3_3344  [key=0, style=solid];
m3_3343 -> m3_110  [key=2, style=dotted];
m3_3343 -> m3_3354  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3343 -> m3_3347  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3343 -> m3_3348  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3343 -> m3_3349  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3343 -> m3_3350  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3343 -> m3_3351  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_3345 -> m3_3346  [key=0, style=solid];
m3_3345 -> m3_151  [key=2, style=dotted];
m3_3345 -> m3_272  [key=2, style=dotted];
m3_3344 -> m3_3345  [key=0, style=solid];
m3_3344 -> m3_3354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_3344 -> m3_3355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_3347 -> m3_3348  [key=0, style=solid];
m3_3347 -> m3_25  [key=2, style=dotted];
m3_3348 -> m3_3349  [key=0, style=solid];
m3_3348 -> m3_1438  [key=2, style=dotted];
m3_3348 -> m3_447  [key=2, style=dotted];
m3_3349 -> m3_3350  [key=0, style=solid];
m3_3349 -> m3_1438  [key=2, style=dotted];
m3_3349 -> m3_447  [key=2, style=dotted];
m3_3350 -> m3_3351  [key=0, style=solid];
m3_3350 -> m3_1438  [key=2, style=dotted];
m3_3350 -> m3_447  [key=2, style=dotted];
m3_3351 -> m3_3352  [key=0, style=solid];
m3_3351 -> m3_1438  [key=2, style=dotted];
m3_3351 -> m3_447  [key=2, style=dotted];
m3_3346 -> m3_3347  [key=0, style=solid];
m3_3346 -> m3_776  [key=2, style=dotted];
m3_3352 -> m3_3341  [key=0, style=bold, color=blue];
m3_1730 -> m3_1731  [key=0, style=solid];
m3_1731 -> m3_1732  [key=0, style=solid];
m3_1731 -> m3_1735  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1732 -> m3_1733  [key=0, style=solid];
m3_1732 -> m3_36  [key=2, style=dotted];
m3_1732 -> m3_1734  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1733 -> m3_1730  [key=0, style=bold, color=blue];
m3_3699 -> m3_3700  [key=0, style=solid];
m3_3700 -> m3_3701  [key=0, style=solid];
m3_3700 -> m3_36  [key=2, style=dotted];
m3_3700 -> m3_3702  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3701 -> m3_3699  [key=0, style=bold, color=blue];
m3_2770 -> m3_2771  [key=0, style=solid];
m3_2771 -> m3_2772  [key=0, style=solid];
m3_2771 -> m3_2774  [key=2, style=dotted];
m3_2771 -> m3_105  [key=2, style=dotted];
m3_2772 -> m3_2773  [key=0, style=solid];
m3_2772 -> m3_24  [key=2, style=dotted];
m3_2773 -> m3_2770  [key=0, style=bold, color=blue];
m3_4053 -> m3_4054  [key=0, style=solid];
m3_4054 -> m3_4055  [key=0, style=solid];
m3_4054 -> m3_4061  [key=2, style=dotted];
m3_4054 -> m3_4056  [key=1, style=dashed, color=darkseagreen4, label=original];
m3_4055 -> m3_4056  [key=0, style=solid];
m3_4055 -> m3_151  [key=2, style=dotted];
m3_4055 -> m3_4057  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m3_4056 -> m3_4057  [key=0, style=solid];
m3_4056 -> m3_152  [key=2, style=dotted];
m3_4057 -> m3_4058  [key=0, style=solid];
m3_4057 -> m3_272  [key=2, style=dotted];
m3_4057 -> m3_4059  [key=1, style=dashed, color=darkseagreen4, label=clonedObject];
m3_4058 -> m3_4059  [key=0, style=solid];
m3_4058 -> m3_25  [key=2, style=dotted];
m3_4059 -> m3_4060  [key=0, style=solid];
m3_4059 -> m3_25  [key=2, style=dotted];
m3_4060 -> m3_4053  [key=0, style=bold, color=blue];
m3_3490 -> m3_3491  [key=0, style=solid];
m3_3491 -> m3_3492  [key=0, style=solid];
m3_3491 -> m3_3498  [key=2, style=dotted];
m3_3492 -> m3_3493  [key=0, style=solid];
m3_3492 -> m3_16  [key=2, style=dotted];
m3_3493 -> m3_3494  [key=0, style=solid];
m3_3493 -> m3_17  [key=2, style=dotted];
m3_3494 -> m3_3495  [key=0, style=solid];
m3_3494 -> m3_3499  [key=2, style=dotted];
m3_3495 -> m3_3496  [key=0, style=solid];
m3_3495 -> m3_16  [key=2, style=dotted];
m3_3496 -> m3_3497  [key=0, style=solid];
m3_3496 -> m3_17  [key=2, style=dotted];
m3_3497 -> m3_3490  [key=0, style=bold, color=blue];
m3_1691 -> m3_1692  [key=0, style=solid];
m3_1692 -> m3_1693  [key=0, style=solid];
m3_1692 -> m3_898  [key=2, style=dotted];
m3_1692 -> m3_1696  [key=2, style=dotted];
m3_1693 -> m3_1694  [key=0, style=solid];
m3_1693 -> m3_105  [key=2, style=dotted];
m3_1694 -> m3_1695  [key=0, style=solid];
m3_1694 -> m3_25  [key=2, style=dotted];
m3_1695 -> m3_1691  [key=0, style=bold, color=blue];
m3_3514 -> m3_3515  [key=0, style=solid];
m3_3515 -> m3_3516  [key=0, style=solid];
m3_3516 -> m3_3517  [key=0, style=solid];
m3_3516 -> m3_24  [key=2, style=dotted];
m3_3516 -> m3_3518  [key=1, style=dashed, color=darkseagreen4, label=exception];
m3_3516 -> m3_3519  [key=1, style=dashed, color=darkseagreen4, label=exception];
m3_3517 -> m3_3518  [key=0, style=solid];
m3_3517 -> m3_776  [key=2, style=dotted];
m3_3518 -> m3_3519  [key=0, style=solid];
m3_3518 -> m3_725  [key=2, style=dotted];
m3_3519 -> m3_3520  [key=0, style=solid];
m3_3519 -> m3_25  [key=2, style=dotted];
m3_3520 -> m3_3514  [key=0, style=bold, color=blue];
m3_2644 -> m3_2645  [key=0, style=solid];
m3_2645 -> m3_2646  [key=0, style=solid];
m3_2645 -> m3_2636  [key=2, style=dotted];
m3_2645 -> m3_2647  [key=1, style=dashed, color=darkseagreen4, label=derived];
m3_2646 -> m3_2647  [key=0, style=solid];
m3_2646 -> m3_151  [key=2, style=dotted];
m3_2646 -> m3_2648  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_2647 -> m3_2648  [key=0, style=solid];
m3_2647 -> m3_174  [key=2, style=dotted];
m3_2648 -> m3_2649  [key=0, style=solid];
m3_2648 -> m3_272  [key=2, style=dotted];
m3_2648 -> m3_2650  [key=1, style=dashed, color=darkseagreen4, label=meh];
m3_2649 -> m3_2650  [key=0, style=solid];
m3_2649 -> m3_25  [key=2, style=dotted];
m3_2650 -> m3_2651  [key=0, style=solid];
m3_2650 -> m3_25  [key=2, style=dotted];
m3_2651 -> m3_2644  [key=0, style=bold, color=blue];
m3_2919 -> m3_2920  [key=0, style=solid];
m3_2920 -> m3_2921  [key=0, style=solid];
m3_2920 -> m3_2930  [key=2, style=dotted];
m3_2920 -> m3_2924  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2920 -> m3_2925  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2920 -> m3_2926  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2920 -> m3_2927  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2920 -> m3_2928  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2921 -> m3_2922  [key=0, style=solid];
m3_2921 -> m3_16  [key=2, style=dotted];
m3_2921 -> m3_2923  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2924 -> m3_2925  [key=0, style=solid];
m3_2924 -> m3_25  [key=2, style=dotted];
m3_2925 -> m3_2926  [key=0, style=solid];
m3_2925 -> m3_25  [key=2, style=dotted];
m3_2926 -> m3_2927  [key=0, style=solid];
m3_2926 -> m3_25  [key=2, style=dotted];
m3_2927 -> m3_2928  [key=0, style=solid];
m3_2927 -> m3_25  [key=2, style=dotted];
m3_2928 -> m3_2929  [key=0, style=solid];
m3_2928 -> m3_25  [key=2, style=dotted];
m3_2922 -> m3_2923  [key=0, style=solid];
m3_2922 -> m3_17  [key=2, style=dotted];
m3_2923 -> m3_2924  [key=0, style=solid];
m3_2923 -> m3_24  [key=2, style=dotted];
m3_2923 -> m3_2925  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2923 -> m3_2926  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2923 -> m3_2927  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2923 -> m3_2928  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2929 -> m3_2919  [key=0, style=bold, color=blue];
m3_1288 -> m3_1289  [key=0, style=solid];
m3_1289 -> m3_1290  [key=0, style=solid];
m3_1289 -> m3_1286  [key=2, style=dotted];
m3_1289 -> m3_1294  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_1289 -> m3_1295  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m3_1290 -> m3_1291  [key=0, style=solid];
m3_1290 -> m3_1287  [key=2, style=dotted];
m3_1294 -> m3_1295  [key=0, style=solid];
m3_1294 -> m3_25  [key=2, style=dotted];
m3_1295 -> m3_1296  [key=0, style=solid];
m3_1295 -> m3_25  [key=2, style=dotted];
m3_1291 -> m3_1292  [key=0, style=solid];
m3_1291 -> m3_151  [key=2, style=dotted];
m3_1291 -> m3_152  [key=2, style=dotted];
m3_1291 -> m3_1293  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1292 -> m3_1293  [key=0, style=solid];
m3_1292 -> m3_25  [key=2, style=dotted];
m3_1293 -> m3_1294  [key=0, style=solid];
m3_1293 -> m3_24  [key=2, style=dotted];
m3_1293 -> m3_1295  [key=1, style=dashed, color=darkseagreen4, label=m2];
m3_1296 -> m3_1288  [key=0, style=bold, color=blue];
m3_3949 -> m3_3950  [key=0, style=solid];
m3_3950 -> m3_3951  [key=0, style=solid];
m3_3950 -> m3_934  [key=2, style=dotted];
m3_3950 -> m3_3953  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3950 -> m3_3956  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3950 -> m3_3961  [key=1, style=dashed, color=darkseagreen4, label=dt];
m3_3951 -> m3_3952  [key=0, style=solid];
m3_3951 -> m3_3957  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m3_3951 -> m3_3962  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m3_3953 -> m3_3954  [key=0, style=solid];
m3_3953 -> m3_152  [key=2, style=dotted];
m3_3953 -> m3_3955  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3953 -> m3_3957  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3956 -> m3_3957  [key=0, style=solid];
m3_3956 -> m3_25  [key=2, style=dotted];
m3_3961 -> m3_3962  [key=0, style=solid];
m3_3961 -> m3_25  [key=2, style=dotted];
m3_3952 -> m3_3953  [key=0, style=solid];
m3_3952 -> m3_151  [key=2, style=dotted];
m3_3952 -> m3_3955  [key=1, style=dashed, color=darkseagreen4, label=settings];
m3_3957 -> m3_3958  [key=0, style=solid];
m3_3957 -> m3_349  [key=2, style=dotted];
m3_3957 -> m3_350  [key=2, style=dotted];
m3_3962 -> m3_3963  [key=0, style=solid];
m3_3962 -> m3_349  [key=2, style=dotted];
m3_3962 -> m3_350  [key=2, style=dotted];
m3_3955 -> m3_3956  [key=0, style=solid];
m3_3955 -> m3_272  [key=2, style=dotted];
m3_3954 -> m3_3955  [key=0, style=solid];
m3_3954 -> m3_25  [key=2, style=dotted];
m3_3958 -> m3_3959  [key=0, style=solid];
m3_3958 -> m3_3340  [key=2, style=dotted];
m3_3958 -> m3_3960  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_3958 -> m3_3961  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_3959 -> m3_3960  [key=0, style=solid];
m3_3959 -> m3_25  [key=2, style=dotted];
m3_3960 -> m3_3961  [key=0, style=solid];
m3_3960 -> m3_353  [key=2, style=dotted];
m3_3960 -> m3_25  [key=2, style=dotted];
m3_3963 -> m3_3964  [key=0, style=solid];
m3_3963 -> m3_3340  [key=2, style=dotted];
m3_3963 -> m3_3965  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_3963 -> m3_3966  [key=1, style=dashed, color=darkseagreen4, label=v];
m3_3964 -> m3_3965  [key=0, style=solid];
m3_3964 -> m3_25  [key=2, style=dotted];
m3_3965 -> m3_3966  [key=0, style=solid];
m3_3965 -> m3_353  [key=2, style=dotted];
m3_3965 -> m3_25  [key=2, style=dotted];
m3_3966 -> m3_3967  [key=0, style=solid];
m3_3966 -> m3_25  [key=2, style=dotted];
m3_3967 -> m3_3949  [key=0, style=bold, color=blue];
m3_4064 -> m3_4065  [key=0, style=solid];
m3_4065 -> m3_4066  [key=0, style=solid];
m3_4066 -> m3_4064  [key=0, style=bold, color=blue];
m3_1439 -> m3_1440  [key=0, style=solid];
m3_1440 -> m3_1441  [key=0, style=solid];
m3_1440 -> m3_36  [key=2, style=dotted];
m3_1440 -> m3_1442  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1441 -> m3_1439  [key=0, style=bold, color=blue];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_36  [key=2, style=dotted];
m3_47 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_48 -> m3_46  [key=0, style=bold, color=blue];
m3_1423 -> m3_1424  [key=0, style=solid];
m3_1424 -> m3_1425  [key=0, style=solid];
m3_1425 -> m3_1426  [key=0, style=solid];
m3_1425 -> m3_24  [key=2, style=dotted];
m3_1425 -> m3_1427  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1425 -> m3_1428  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1426 -> m3_1427  [key=0, style=solid];
m3_1426 -> m3_25  [key=2, style=dotted];
m3_1427 -> m3_1428  [key=0, style=solid];
m3_1427 -> m3_25  [key=2, style=dotted];
m3_1428 -> m3_1429  [key=0, style=solid];
m3_1428 -> m3_25  [key=2, style=dotted];
m3_1429 -> m3_1423  [key=0, style=bold, color=blue];
m3_684 -> m3_685  [key=0, style=solid];
m3_685 -> m3_686  [key=0, style=solid];
m3_685 -> m3_687  [key=0, style=solid];
m3_686 -> m3_694  [key=0, style=solid];
m3_687 -> m3_688  [key=0, style=solid];
m3_687 -> m3_695  [key=2, style=dotted];
m3_688 -> m3_689  [key=0, style=solid];
m3_688 -> m3_696  [key=2, style=dotted];
m3_689 -> m3_690  [key=0, style=solid];
m3_689 -> m3_697  [key=2, style=dotted];
m3_690 -> m3_691  [key=0, style=solid];
m3_690 -> m3_697  [key=2, style=dotted];
m3_691 -> m3_692  [key=0, style=solid];
m3_691 -> m3_697  [key=2, style=dotted];
m3_692 -> m3_693  [key=0, style=solid];
m3_692 -> m3_697  [key=2, style=dotted];
m3_693 -> m3_694  [key=0, style=solid];
m3_694 -> m3_684  [key=0, style=bold, color=blue];
m3_1942 -> m3_1943  [key=0, style=solid];
m3_1943 -> m3_1944  [key=0, style=solid];
m3_1943 -> m3_1955  [key=2, style=dotted];
m3_1943 -> m3_1950  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m3_1944 -> m3_1945  [key=0, style=solid];
m3_1944 -> m3_1946  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_1944 -> m3_1947  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_1944 -> m3_1948  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_1944 -> m3_1949  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_1944 -> m3_1953  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m3_1950 -> m3_1951  [key=0, style=solid];
m3_1950 -> m3_16  [key=2, style=dotted];
m3_1950 -> m3_1952  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1945 -> m3_1946  [key=0, style=solid];
m3_1945 -> m3_1082  [key=2, style=dotted];
m3_1946 -> m3_1947  [key=0, style=solid];
m3_1947 -> m3_1948  [key=0, style=solid];
m3_1948 -> m3_1949  [key=0, style=solid];
m3_1948 -> m3_1082  [key=2, style=dotted];
m3_1949 -> m3_1950  [key=0, style=solid];
m3_1953 -> m3_1954  [key=0, style=solid];
m3_1953 -> m3_25  [key=2, style=dotted];
m3_1951 -> m3_1952  [key=0, style=solid];
m3_1951 -> m3_17  [key=2, style=dotted];
m3_1952 -> m3_1953  [key=0, style=solid];
m3_1952 -> m3_24  [key=2, style=dotted];
m3_1954 -> m3_1942  [key=0, style=bold, color=blue];
m3_3075 -> m3_3076  [key=0, style=solid];
m3_3076 -> m3_3077  [key=0, style=solid];
m3_3076 -> m3_3085  [key=2, style=dotted];
m3_3076 -> m3_3078  [key=1, style=dashed, color=darkseagreen4, label=b];
m3_3076 -> m3_3080  [key=1, style=dashed, color=darkseagreen4, label=b];
m3_3077 -> m3_3078  [key=0, style=solid];
m3_3078 -> m3_3079  [key=0, style=solid];
m3_3080 -> m3_3081  [key=0, style=solid];
m3_3080 -> m3_105  [key=2, style=dotted];
m3_3080 -> m3_3082  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3079 -> m3_3080  [key=0, style=solid];
m3_3081 -> m3_3082  [key=0, style=solid];
m3_3081 -> m3_25  [key=2, style=dotted];
m3_3082 -> m3_3083  [key=0, style=solid];
m3_3082 -> m3_24  [key=2, style=dotted];
m3_3083 -> m3_3084  [key=0, style=solid];
m3_3083 -> m3_25  [key=2, style=dotted];
m3_3084 -> m3_3075  [key=0, style=bold, color=blue];
m3_1006 -> m3_1007  [key=0, style=solid];
m3_1007 -> m3_1008  [key=0, style=solid];
m3_1008 -> m3_1009  [key=0, style=solid];
m3_1008 -> m3_443  [key=2, style=dotted];
m3_1009 -> m3_1010  [key=0, style=solid];
m3_1010 -> m3_1011  [key=0, style=solid];
m3_1010 -> m3_1010  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_1011 -> m3_1006  [key=0, style=bold, color=blue];
m3_2104 -> m3_2105  [key=0, style=solid];
m3_2104 -> m3_2107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_2105 -> m3_2106  [key=0, style=solid];
m3_2105 -> m3_2107  [key=0, style=solid];
m3_2107 -> m3_2108  [key=0, style=solid];
m3_2107 -> m3_2109  [key=0, style=solid];
m3_2106 -> m3_2109  [key=0, style=solid];
m3_2108 -> m3_2107  [key=0, style=solid];
m3_2108 -> m3_2108  [key=1, style=dashed, color=darkseagreen4, label=entry];
m3_2109 -> m3_2104  [key=0, style=bold, color=blue];
m3_2135 -> m3_2136  [key=0, style=solid];
m3_2135 -> m3_2137  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2135 -> m3_2138  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m3_2135 -> m3_2139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m3_2136 -> m3_2137  [key=0, style=solid];
m3_2137 -> m3_2138  [key=0, style=solid];
m3_2138 -> m3_2139  [key=0, style=solid];
m3_2139 -> m3_2140  [key=0, style=solid];
m3_2140 -> m3_2141  [key=0, style=solid];
m3_2140 -> m3_1286  [key=2, style=dotted];
m3_2141 -> m3_2135  [key=0, style=bold, color=blue];
m3_3143 -> m3_3144  [key=0, style=solid];
m3_3144 -> m3_3145  [key=0, style=solid];
m3_3144 -> m3_3153  [key=2, style=dotted];
m3_3144 -> m3_1226  [key=2, style=dotted];
m3_3144 -> m3_1082  [key=2, style=dotted];
m3_3145 -> m3_3146  [key=0, style=solid];
m3_3145 -> m3_16  [key=2, style=dotted];
m3_3145 -> m3_3147  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m3_3146 -> m3_3147  [key=0, style=solid];
m3_3146 -> m3_17  [key=2, style=dotted];
m3_3147 -> m3_3148  [key=0, style=solid];
m3_3147 -> m3_24  [key=2, style=dotted];
m3_3147 -> m3_3149  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_3147 -> m3_3150  [key=1, style=dashed, color=darkseagreen4, label=actual];
m3_3148 -> m3_3149  [key=0, style=solid];
m3_3148 -> m3_1226  [key=2, style=dotted];
m3_3148 -> m3_25  [key=2, style=dotted];
m3_3149 -> m3_3150  [key=0, style=solid];
m3_3149 -> m3_1226  [key=2, style=dotted];
m3_3149 -> m3_25  [key=2, style=dotted];
m3_3150 -> m3_3151  [key=0, style=solid];
m3_3151 -> m3_3152  [key=0, style=solid];
m3_3151 -> m3_408  [key=2, style=dotted];
m3_3151 -> m3_2993  [key=2, style=dotted];
m3_3152 -> m3_3143  [key=0, style=bold, color=blue];
m3_3465 -> m3_3467  [key=0, style=solid];
m3_3465 -> m3_3470  [key=1, style=dashed, color=darkseagreen4, label=T];
m3_3467 -> m3_3468  [key=0, style=solid];
m3_3467 -> m3_2953  [key=2, style=dotted];
m3_3467 -> m3_3470  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m3_3467 -> m3_3471  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m3_3470 -> m3_3471  [key=0, style=solid];
m3_3470 -> m3_815  [key=2, style=dotted];
m3_3468 -> m3_3469  [key=0, style=solid];
m3_3468 -> m3_351  [key=2, style=dotted];
m3_3468 -> m3_3470  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_3471 -> m3_3472  [key=0, style=solid];
m3_3471 -> m3_2958  [key=2, style=dotted];
m3_3469 -> m3_3470  [key=0, style=solid];
m3_3469 -> m3_1846  [key=2, style=dotted];
m3_3472 -> m3_3465  [key=0, style=bold, color=blue];
m3_1923 -> m3_1924  [key=0, style=solid];
m3_1924 -> m3_1925  [key=0, style=solid];
m3_1925 -> m3_1926  [key=0, style=solid];
m3_1925 -> m3_24  [key=2, style=dotted];
m3_1926 -> m3_1927  [key=0, style=solid];
m3_1926 -> m3_1929  [key=0, style=solid];
m3_1926 -> m3_1437  [key=2, style=dotted];
m3_1927 -> m3_1928  [key=0, style=solid];
m3_1928 -> m3_1929  [key=0, style=solid];
m3_1928 -> m3_1438  [key=2, style=dotted];
m3_1928 -> m3_447  [key=2, style=dotted];
m3_1929 -> m3_1923  [key=0, style=bold, color=blue];
m3_147 -> m3_148  [key=0, style=solid];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_146  [key=2, style=dotted];
m3_148 -> m3_151  [key=2, style=dotted];
m3_148 -> m3_152  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_25  [key=2, style=dotted];
m3_150 -> m3_147  [key=0, style=bold, color=blue];
m3_311 -> m3_312  [key=0, style=solid];
m3_312 -> m3_313  [key=0, style=solid];
m3_312 -> m3_24  [key=2, style=dotted];
m3_312 -> m3_314  [key=1, style=dashed, color=darkseagreen4, label=otc];
m3_312 -> m3_315  [key=1, style=dashed, color=darkseagreen4, label=otc];
m3_312 -> m3_316  [key=1, style=dashed, color=darkseagreen4, label=otc];
m3_312 -> m3_317  [key=1, style=dashed, color=darkseagreen4, label=otc];
m3_312 -> m3_148  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken newToken"];
m3_313 -> m3_314  [key=0, style=solid];
m3_313 -> m3_128  [key=2, style=dotted];
m3_314 -> m3_315  [key=0, style=solid];
m3_314 -> m3_25  [key=2, style=dotted];
m3_315 -> m3_316  [key=0, style=solid];
m3_315 -> m3_25  [key=2, style=dotted];
m3_316 -> m3_317  [key=0, style=solid];
m3_316 -> m3_25  [key=2, style=dotted];
m3_317 -> m3_318  [key=0, style=solid];
m3_317 -> m3_128  [key=2, style=dotted];
m3_318 -> m3_311  [key=0, style=bold, color=blue];
m3_3461 -> m3_3462  [key=0, style=solid];
m3_3462 -> m3_3463  [key=0, style=solid];
m3_3462 -> m3_3465  [key=2, style=dotted];
m3_3463 -> m3_3464  [key=0, style=solid];
m3_3463 -> m3_3466  [key=2, style=dotted];
m3_3464 -> m3_3461  [key=0, style=bold, color=blue];
m3_935 -> m3_936  [key=0, style=solid];
m3_936 -> m3_937  [key=0, style=solid];
m3_937 -> m3_938  [key=0, style=solid];
m3_937 -> m3_916  [key=2, style=dotted];
m3_937 -> m3_939  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_937 -> m3_940  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_938 -> m3_939  [key=0, style=solid];
m3_938 -> m3_25  [key=2, style=dotted];
m3_939 -> m3_940  [key=0, style=solid];
m3_939 -> m3_942  [key=2, style=dotted];
m3_939 -> m3_25  [key=2, style=dotted];
m3_940 -> m3_941  [key=0, style=solid];
m3_940 -> m3_25  [key=2, style=dotted];
m3_941 -> m3_935  [key=0, style=bold, color=blue];
m3_1260 -> m3_1261  [key=0, style=solid];
m3_1261 -> m3_1262  [key=0, style=solid];
m3_1261 -> m3_1267  [key=2, style=dotted];
m3_1262 -> m3_1263  [key=0, style=solid];
m3_1262 -> m3_105  [key=2, style=dotted];
m3_1262 -> m3_1264  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1263 -> m3_1264  [key=0, style=solid];
m3_1263 -> m3_25  [key=2, style=dotted];
m3_1264 -> m3_1265  [key=0, style=solid];
m3_1264 -> m3_24  [key=2, style=dotted];
m3_1265 -> m3_1266  [key=0, style=solid];
m3_1265 -> m3_25  [key=2, style=dotted];
m3_1266 -> m3_1260  [key=0, style=bold, color=blue];
m3_1352 -> m3_1353  [key=0, style=solid];
m3_1353 -> m3_1354  [key=0, style=solid];
m3_1353 -> m3_1356  [key=2, style=dotted];
m3_1353 -> m3_105  [key=2, style=dotted];
m3_1354 -> m3_1355  [key=0, style=solid];
m3_1354 -> m3_25  [key=2, style=dotted];
m3_1355 -> m3_1352  [key=0, style=bold, color=blue];
m3_2049 -> m3_2050  [key=0, style=solid];
m3_2050 -> m3_2051  [key=0, style=solid];
m3_2051 -> m3_2052  [key=0, style=solid];
m3_2051 -> m3_24  [key=2, style=dotted];
m3_2052 -> m3_2053  [key=0, style=solid];
m3_2052 -> m3_25  [key=2, style=dotted];
m3_2053 -> m3_2049  [key=0, style=bold, color=blue];
m3_3753 -> m3_3754  [key=0, style=solid];
m3_3754 -> m3_3755  [key=0, style=solid];
m3_3754 -> m3_3761  [key=2, style=dotted];
m3_3754 -> m3_3757  [key=1, style=dashed, color=darkseagreen4, label=s1];
m3_3754 -> m3_3758  [key=1, style=dashed, color=darkseagreen4, label=s1];
m3_3755 -> m3_3756  [key=0, style=solid];
m3_3755 -> m3_105  [key=2, style=dotted];
m3_3757 -> m3_3758  [key=0, style=solid];
m3_3757 -> m3_25  [key=2, style=dotted];
m3_3758 -> m3_3759  [key=0, style=solid];
m3_3758 -> m3_3760  [key=0, style=solid];
m3_3756 -> m3_3757  [key=0, style=solid];
m3_3756 -> m3_24  [key=2, style=dotted];
m3_3756 -> m3_3759  [key=1, style=dashed, color=darkseagreen4, label=s2];
m3_3759 -> m3_3758  [key=0, style=solid];
m3_3759 -> m3_2091  [key=2, style=dotted];
m3_3759 -> m3_447  [key=2, style=dotted];
m3_3760 -> m3_3753  [key=0, style=bold, color=blue];
m3_2267 -> m3_2314  [key=0, style=solid];
m3_2267 -> m3_2315  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2267 -> m3_2316  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2267 -> m3_2317  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2267 -> m3_2318  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2267 -> m3_2319  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2267 -> m3_2320  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2267 -> m3_2321  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2267 -> m3_2322  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2267 -> m3_2323  [key=1, style=dashed, color=darkseagreen4, label=int];
m3_2314 -> m3_2315  [key=0, style=solid];
m3_2315 -> m3_2316  [key=0, style=solid];
m3_2316 -> m3_2317  [key=0, style=solid];
m3_2317 -> m3_2318  [key=0, style=solid];
m3_2318 -> m3_2319  [key=0, style=solid];
m3_2319 -> m3_2320  [key=0, style=solid];
m3_2320 -> m3_2321  [key=0, style=solid];
m3_2321 -> m3_2322  [key=0, style=solid];
m3_2322 -> m3_2323  [key=0, style=solid];
m3_2323 -> m3_2324  [key=0, style=solid];
m3_2324 -> m3_2267  [key=0, style=bold, color=blue];
m3_3557 -> m3_3558  [key=0, style=solid];
m3_3558 -> m3_3559  [key=0, style=solid];
m3_3558 -> m3_24  [key=2, style=dotted];
m3_3559 -> m3_3560  [key=0, style=solid];
m3_3559 -> m3_25  [key=2, style=dotted];
m3_3560 -> m3_3557  [key=0, style=bold, color=blue];
m3_3577 -> m3_3578  [key=0, style=solid];
m3_3578 -> m3_3579  [key=0, style=solid];
m3_3579 -> m3_3580  [key=0, style=solid];
m3_3579 -> m3_110  [key=2, style=dotted];
m3_3579 -> m3_3581  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_3579 -> m3_3582  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_3580 -> m3_3581  [key=0, style=solid];
m3_3580 -> m3_105  [key=2, style=dotted];
m3_3581 -> m3_3582  [key=0, style=solid];
m3_3581 -> m3_151  [key=2, style=dotted];
m3_3581 -> m3_152  [key=2, style=dotted];
m3_3582 -> m3_3583  [key=0, style=solid];
m3_3582 -> m3_151  [key=2, style=dotted];
m3_3582 -> m3_152  [key=2, style=dotted];
m3_3583 -> m3_3584  [key=0, style=solid];
m3_3583 -> m3_25  [key=2, style=dotted];
m3_3584 -> m3_3577  [key=0, style=bold, color=blue];
m3_2110 -> m3_2111  [key=0, style=solid];
m3_2111 -> m3_2112  [key=0, style=solid];
m3_2111 -> m3_2113  [key=2, style=dotted];
m3_2112 -> m3_2110  [key=0, style=bold, color=blue];
m3_205 -> m3_206  [key=0, style=solid];
m3_206 -> m3_207  [key=0, style=solid];
m3_206 -> m3_24  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_207 -> m3_25  [key=2, style=dotted];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_211  [key=2, style=dotted];
m3_208 -> m3_212  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_25  [key=2, style=dotted];
m3_210 -> m3_205  [key=0, style=bold, color=blue];
m3_2043 -> m3_2045  [key=0, style=solid];
m3_2045 -> m3_2046  [key=0, style=solid];
m3_2046 -> m3_2043  [key=0, style=bold, color=blue];
m3_58 -> m3_59  [key=0, style=solid];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_24  [key=2, style=dotted];
m3_59 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_59 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_25  [key=2, style=dotted];
m3_61 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_25  [key=2, style=dotted];
m3_62 -> m3_62  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_25  [key=2, style=dotted];
m3_63 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_25  [key=2, style=dotted];
m3_64 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_25  [key=2, style=dotted];
m3_65 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_25  [key=2, style=dotted];
m3_66 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_25  [key=2, style=dotted];
m3_67 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_25  [key=2, style=dotted];
m3_68 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_25  [key=2, style=dotted];
m3_69 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_25  [key=2, style=dotted];
m3_70 -> m3_70  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_25  [key=2, style=dotted];
m3_71 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_25  [key=2, style=dotted];
m3_72 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_25  [key=2, style=dotted];
m3_73 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label=i];
m3_74 -> m3_58  [key=0, style=bold, color=blue];
m3_3637 -> m3_3638  [key=0, style=solid];
m3_3638 -> m3_3639  [key=0, style=solid];
m3_3638 -> m3_3642  [key=2, style=dotted];
m3_3639 -> m3_3640  [key=0, style=solid];
m3_3639 -> m3_151  [key=2, style=dotted];
m3_3639 -> m3_174  [key=2, style=dotted];
m3_3640 -> m3_3641  [key=0, style=solid];
m3_3640 -> m3_17  [key=2, style=dotted];
m3_3641 -> m3_3637  [key=0, style=bold, color=blue];
m3_1228 -> m3_1229  [key=0, style=solid];
m3_1229 -> m3_1230  [key=0, style=solid];
m3_1229 -> m3_105  [key=2, style=dotted];
m3_1229 -> m3_1231  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1230 -> m3_1231  [key=0, style=solid];
m3_1230 -> m3_25  [key=2, style=dotted];
m3_1231 -> m3_1232  [key=0, style=solid];
m3_1231 -> m3_24  [key=2, style=dotted];
m3_1232 -> m3_1233  [key=0, style=solid];
m3_1232 -> m3_25  [key=2, style=dotted];
m3_1233 -> m3_1228  [key=0, style=bold, color=blue];
m3_1633 -> m3_1634  [key=0, style=solid];
m3_1634 -> m3_1635  [key=0, style=solid];
m3_1634 -> m3_1624  [key=2, style=dotted];
m3_1634 -> m3_1636  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_1635 -> m3_1636  [key=0, style=solid];
m3_1636 -> m3_1637  [key=0, style=solid];
m3_1636 -> m3_16  [key=2, style=dotted];
m3_1636 -> m3_1638  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1637 -> m3_1638  [key=0, style=solid];
m3_1637 -> m3_17  [key=2, style=dotted];
m3_1638 -> m3_1639  [key=0, style=solid];
m3_1638 -> m3_24  [key=2, style=dotted];
m3_1639 -> m3_1640  [key=0, style=solid];
m3_1639 -> m3_1630  [key=2, style=dotted];
m3_1639 -> m3_25  [key=2, style=dotted];
m3_1640 -> m3_1633  [key=0, style=bold, color=blue];
m3_3107 -> m3_3108  [key=0, style=solid];
m3_3108 -> m3_3109  [key=0, style=solid];
m3_3108 -> m3_3112  [key=2, style=dotted];
m3_3108 -> m3_3113  [key=2, style=dotted];
m3_3109 -> m3_3110  [key=0, style=solid];
m3_3109 -> m3_105  [key=2, style=dotted];
m3_3110 -> m3_3111  [key=0, style=solid];
m3_3110 -> m3_25  [key=2, style=dotted];
m3_3111 -> m3_3107  [key=0, style=bold, color=blue];
m3_2014 -> m3_2015  [key=0, style=solid];
m3_2015 -> m3_2016  [key=0, style=solid];
m3_2015 -> m3_2017  [key=0, style=solid];
m3_2016 -> m3_2015  [key=0, style=solid];
m3_2016 -> m3_811  [key=2, style=dotted];
m3_2016 -> m3_2016  [key=1, style=dashed, color=darkseagreen4, label=pair];
m3_2017 -> m3_2014  [key=0, style=bold, color=blue];
m3_2863 -> m3_2864  [key=0, style=solid];
m3_2864 -> m3_2865  [key=0, style=solid];
m3_2864 -> m3_2869  [key=2, style=dotted];
m3_2864 -> m3_16  [key=2, style=dotted];
m3_2865 -> m3_2866  [key=0, style=solid];
m3_2865 -> m3_17  [key=2, style=dotted];
m3_2866 -> m3_2867  [key=0, style=solid];
m3_2866 -> m3_2870  [key=2, style=dotted];
m3_2866 -> m3_16  [key=2, style=dotted];
m3_2867 -> m3_2868  [key=0, style=solid];
m3_2867 -> m3_17  [key=2, style=dotted];
m3_2868 -> m3_2863  [key=0, style=bold, color=blue];
m3_1528 -> m3_1529  [key=0, style=solid];
m3_1529 -> m3_1530  [key=0, style=solid];
m3_1530 -> m3_1528  [key=0, style=bold, color=blue];
m3_2454 -> m3_2455  [key=0, style=solid];
m3_2455 -> m3_2456  [key=0, style=solid];
m3_2456 -> m3_2454  [key=0, style=bold, color=blue];
m3_3179 -> m3_3180  [key=0, style=solid];
m3_3180 -> m3_3181  [key=0, style=solid];
m3_3180 -> m3_151  [key=2, style=dotted];
m3_3180 -> m3_812  [key=2, style=dotted];
m3_3180 -> m3_3183  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_3181 -> m3_3182  [key=0, style=solid];
m3_3181 -> m3_349  [key=2, style=dotted];
m3_3181 -> m3_350  [key=2, style=dotted];
m3_3181 -> m3_2543  [key=2, style=dotted];
m3_3181 -> m3_3184  [key=1, style=dashed, color=darkseagreen4, label=dict];
m3_3183 -> m3_3184  [key=0, style=solid];
m3_3183 -> m3_2543  [key=2, style=dotted];
m3_3182 -> m3_3183  [key=0, style=solid];
m3_3182 -> m3_349  [key=2, style=dotted];
m3_3182 -> m3_350  [key=2, style=dotted];
m3_3184 -> m3_3185  [key=0, style=solid];
m3_3184 -> m3_25  [key=2, style=dotted];
m3_3185 -> m3_3179  [key=0, style=bold, color=blue];
m3_4108 -> m3_4109  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_24  [key=2, style=dotted];
m3_39 -> m3_37  [key=0, style=bold, color=blue];
m3_43 -> m3_44  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_24  [key=2, style=dotted];
m3_45 -> m3_43  [key=0, style=bold, color=blue];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_24  [key=2, style=dotted];
m3_51 -> m3_49  [key=0, style=bold, color=blue];
m3_55 -> m3_56  [key=0, style=solid];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_24  [key=2, style=dotted];
m3_57 -> m3_55  [key=0, style=bold, color=blue];
m3_115 -> m3_116  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_24  [key=2, style=dotted];
m3_117 -> m3_115  [key=0, style=bold, color=blue];
m3_121 -> m3_122  [key=0, style=solid];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_24  [key=2, style=dotted];
m3_123 -> m3_121  [key=0, style=bold, color=blue];
m3_132 -> m3_133  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_24  [key=2, style=dotted];
m3_134 -> m3_132  [key=0, style=bold, color=blue];
m3_143 -> m3_144  [key=0, style=solid];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_146  [key=2, style=dotted];
m3_144 -> m3_105  [key=2, style=dotted];
m3_145 -> m3_143  [key=0, style=bold, color=blue];
m3_156 -> m3_157  [key=0, style=solid];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_159  [key=2, style=dotted];
m3_157 -> m3_105  [key=2, style=dotted];
m3_158 -> m3_156  [key=0, style=bold, color=blue];
m3_184 -> m3_185  [key=0, style=solid];
m3_187 -> m3_188  [key=0, style=solid];
m3_190 -> m3_191  [key=0, style=solid];
m3_193 -> m3_194  [key=0, style=solid];
m3_196 -> m3_197  [key=0, style=solid];
m3_199 -> m3_200  [key=0, style=solid];
m3_202 -> m3_203  [key=0, style=solid];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_24  [key=2, style=dotted];
m3_186 -> m3_184  [key=0, style=bold, color=blue];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_24  [key=2, style=dotted];
m3_189 -> m3_187  [key=0, style=bold, color=blue];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_24  [key=2, style=dotted];
m3_192 -> m3_190  [key=0, style=bold, color=blue];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_24  [key=2, style=dotted];
m3_195 -> m3_193  [key=0, style=bold, color=blue];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_24  [key=2, style=dotted];
m3_198 -> m3_196  [key=0, style=bold, color=blue];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_24  [key=2, style=dotted];
m3_201 -> m3_199  [key=0, style=bold, color=blue];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_24  [key=2, style=dotted];
m3_204 -> m3_202  [key=0, style=bold, color=blue];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_105  [key=2, style=dotted];
m3_225 -> m3_226  [key=0, style=solid];
m3_228 -> m3_229  [key=0, style=solid];
m3_231 -> m3_232  [key=0, style=solid];
m3_227 -> m3_225  [key=0, style=bold, color=blue];
m3_229 -> m3_230  [key=0, style=solid];
m3_229 -> m3_24  [key=2, style=dotted];
m3_230 -> m3_228  [key=0, style=bold, color=blue];
m3_232 -> m3_233  [key=0, style=solid];
m3_232 -> m3_24  [key=2, style=dotted];
m3_233 -> m3_231  [key=0, style=bold, color=blue];
m3_248 -> m3_249  [key=0, style=solid];
m3_248 -> m3_105  [key=2, style=dotted];
m3_247 -> m3_248  [key=0, style=solid];
m3_250 -> m3_251  [key=0, style=solid];
m3_249 -> m3_247  [key=0, style=bold, color=blue];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_24  [key=2, style=dotted];
m3_252 -> m3_250  [key=0, style=bold, color=blue];
m3_325 -> m3_326  [key=0, style=solid];
m3_324 -> m3_325  [key=0, style=solid];
m3_326 -> m3_324  [key=0, style=bold, color=blue];
m3_422 -> m3_423  [key=0, style=solid];
m3_422 -> m3_24  [key=2, style=dotted];
m3_421 -> m3_422  [key=0, style=solid];
m3_423 -> m3_421  [key=0, style=bold, color=blue];
m3_589 -> m3_590  [key=0, style=solid];
m3_588 -> m3_589  [key=0, style=solid];
m3_590 -> m3_588  [key=0, style=bold, color=blue];
m3_901 -> m3_902  [key=0, style=solid];
m3_904 -> m3_905  [key=0, style=solid];
m3_902 -> m3_903  [key=0, style=solid];
m3_903 -> m3_901  [key=0, style=bold, color=blue];
m3_905 -> m3_906  [key=0, style=solid];
m3_906 -> m3_904  [key=0, style=bold, color=blue];
m3_1036 -> m3_1037  [key=0, style=solid];
m3_1037 -> m3_1038  [key=0, style=solid];
m3_1037 -> m3_1039  [key=2, style=dotted];
m3_1037 -> m3_105  [key=2, style=dotted];
m3_1038 -> m3_1036  [key=0, style=bold, color=blue];
m3_1045 -> m3_1046  [key=0, style=solid];
m3_1045 -> m3_24  [key=2, style=dotted];
m3_1044 -> m3_1045  [key=0, style=solid];
m3_1046 -> m3_1044  [key=0, style=bold, color=blue];
m3_1347 -> m3_1348  [key=0, style=solid];
m3_1348 -> m3_1349  [key=0, style=solid];
m3_1348 -> m3_1351  [key=2, style=dotted];
m3_1349 -> m3_1350  [key=0, style=solid];
m3_1349 -> m3_105  [key=2, style=dotted];
m3_1350 -> m3_1347  [key=0, style=bold, color=blue];
m3_1442 -> m3_1443  [key=0, style=solid];
m3_1443 -> m3_1444  [key=0, style=solid];
m3_1443 -> m3_1422  [key=2, style=dotted];
m3_1443 -> m3_1082  [key=2, style=dotted];
m3_1444 -> m3_1445  [key=0, style=solid];
m3_1444 -> m3_105  [key=2, style=dotted];
m3_1445 -> m3_1442  [key=0, style=bold, color=blue];
m3_1487 -> m3_1488  [key=0, style=solid];
m3_1487 -> m3_916  [key=2, style=dotted];
m3_1486 -> m3_1487  [key=0, style=solid];
m3_1488 -> m3_1486  [key=0, style=bold, color=blue];
m3_1593 -> m3_1594  [key=0, style=solid];
m3_1594 -> m3_1595  [key=0, style=solid];
m3_1594 -> m3_1580  [key=2, style=dotted];
m3_1594 -> m3_1596  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1595 -> m3_1596  [key=0, style=solid];
m3_1596 -> m3_1597  [key=0, style=solid];
m3_1596 -> m3_151  [key=2, style=dotted];
m3_1596 -> m3_174  [key=2, style=dotted];
m3_1597 -> m3_1593  [key=0, style=bold, color=blue];
m3_1735 -> m3_1736  [key=0, style=solid];
m3_1735 -> m3_24  [key=2, style=dotted];
m3_1734 -> m3_1735  [key=0, style=solid];
m3_1736 -> m3_1734  [key=0, style=bold, color=blue];
m3_1762 -> m3_1763  [key=0, style=solid];
m3_1762 -> m3_24  [key=2, style=dotted];
m3_1761 -> m3_1762  [key=0, style=solid];
m3_1763 -> m3_1761  [key=0, style=bold, color=blue];
m3_1769 -> m3_1770  [key=0, style=solid];
m3_1769 -> m3_24  [key=2, style=dotted];
m3_1768 -> m3_1769  [key=0, style=solid];
m3_1770 -> m3_1768  [key=0, style=bold, color=blue];
m3_1776 -> m3_1777  [key=0, style=solid];
m3_1776 -> m3_24  [key=2, style=dotted];
m3_1775 -> m3_1776  [key=0, style=solid];
m3_1777 -> m3_1775  [key=0, style=bold, color=blue];
m3_1783 -> m3_1784  [key=0, style=solid];
m3_1783 -> m3_24  [key=2, style=dotted];
m3_1782 -> m3_1783  [key=0, style=solid];
m3_1784 -> m3_1782  [key=0, style=bold, color=blue];
m3_1790 -> m3_1791  [key=0, style=solid];
m3_1790 -> m3_24  [key=2, style=dotted];
m3_1789 -> m3_1790  [key=0, style=solid];
m3_1791 -> m3_1789  [key=0, style=bold, color=blue];
m3_1797 -> m3_1798  [key=0, style=solid];
m3_1797 -> m3_24  [key=2, style=dotted];
m3_1796 -> m3_1797  [key=0, style=solid];
m3_1798 -> m3_1796  [key=0, style=bold, color=blue];
m3_1804 -> m3_1805  [key=0, style=solid];
m3_1804 -> m3_24  [key=2, style=dotted];
m3_1803 -> m3_1804  [key=0, style=solid];
m3_1805 -> m3_1803  [key=0, style=bold, color=blue];
m3_1811 -> m3_1812  [key=0, style=solid];
m3_1811 -> m3_24  [key=2, style=dotted];
m3_1810 -> m3_1811  [key=0, style=solid];
m3_1812 -> m3_1810  [key=0, style=bold, color=blue];
m3_1825 -> m3_1826  [key=0, style=solid];
m3_1825 -> m3_1493  [key=2, style=dotted];
m3_1825 -> m3_1827  [key=2, style=dotted];
m3_1824 -> m3_1825  [key=0, style=solid];
m3_1826 -> m3_1824  [key=0, style=bold, color=blue];
m3_1833 -> m3_1834  [key=0, style=solid];
m3_1833 -> m3_110  [key=2, style=dotted];
m3_1833 -> m3_1827  [key=2, style=dotted];
m3_1832 -> m3_1833  [key=0, style=solid];
m3_1834 -> m3_1832  [key=0, style=bold, color=blue];
m3_1843 -> m3_1844  [key=0, style=solid];
m3_1844 -> m3_1845  [key=0, style=solid];
m3_1844 -> m3_813  [key=2, style=dotted];
m3_1844 -> m3_151  [key=2, style=dotted];
m3_1844 -> m3_1846  [key=2, style=dotted];
m3_1844 -> m3_152  [key=2, style=dotted];
m3_1845 -> m3_1843  [key=0, style=bold, color=blue];
m3_1850 -> m3_1851  [key=0, style=solid];
m3_1851 -> m3_1852  [key=0, style=solid];
m3_1851 -> m3_151  [key=2, style=dotted];
m3_1851 -> m3_1846  [key=2, style=dotted];
m3_1851 -> m3_272  [key=2, style=dotted];
m3_1852 -> m3_1850  [key=0, style=bold, color=blue];
m3_1856 -> m3_1857  [key=0, style=solid];
m3_1857 -> m3_1858  [key=0, style=solid];
m3_1857 -> m3_151  [key=2, style=dotted];
m3_1857 -> m3_1846  [key=2, style=dotted];
m3_1857 -> m3_272  [key=2, style=dotted];
m3_1858 -> m3_1856  [key=0, style=bold, color=blue];
m3_1862 -> m3_1863  [key=0, style=solid];
m3_1863 -> m3_1864  [key=0, style=solid];
m3_1863 -> m3_151  [key=2, style=dotted];
m3_1863 -> m3_1846  [key=2, style=dotted];
m3_1863 -> m3_272  [key=2, style=dotted];
m3_1864 -> m3_1862  [key=0, style=bold, color=blue];
m3_1975 -> m3_1976  [key=0, style=solid];
m3_1976 -> m3_1977  [key=0, style=solid];
m3_1977 -> m3_1975  [key=0, style=bold, color=blue];
m3_2012 -> m3_2013  [key=0, style=solid];
m3_2012 -> m3_151  [key=2, style=dotted];
m3_2012 -> m3_272  [key=2, style=dotted];
m3_2011 -> m3_2012  [key=0, style=solid];
m3_2013 -> m3_2011  [key=0, style=bold, color=blue];
m3_2405 -> m3_2406  [key=0, style=solid];
m3_2405 -> m3_24  [key=2, style=dotted];
m3_2404 -> m3_2405  [key=0, style=solid];
m3_2406 -> m3_2404  [key=0, style=bold, color=blue];
m3_2410 -> m3_2411  [key=0, style=solid];
m3_2411 -> m3_2412  [key=0, style=solid];
m3_2411 -> m3_172  [key=2, style=dotted];
m3_2411 -> m3_2413  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_2411 -> m3_2417  [key=1, style=dashed, color=darkseagreen4, label=reference];
m3_2412 -> m3_2413  [key=0, style=solid];
m3_2412 -> m3_811  [key=2, style=dotted];
m3_2413 -> m3_2414  [key=0, style=solid];
m3_2413 -> m3_811  [key=2, style=dotted];
m3_2417 -> m3_2418  [key=0, style=solid];
m3_2417 -> m3_811  [key=2, style=dotted];
m3_2414 -> m3_2415  [key=0, style=solid];
m3_2414 -> m3_172  [key=2, style=dotted];
m3_2414 -> m3_2416  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_2414 -> m3_2417  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_2414 -> m3_2418  [key=1, style=dashed, color=darkseagreen4, label=child];
m3_2415 -> m3_2416  [key=0, style=solid];
m3_2415 -> m3_811  [key=2, style=dotted];
m3_2416 -> m3_2417  [key=0, style=solid];
m3_2416 -> m3_811  [key=2, style=dotted];
m3_2418 -> m3_2419  [key=0, style=solid];
m3_2418 -> m3_16  [key=2, style=dotted];
m3_2419 -> m3_2420  [key=0, style=solid];
m3_2419 -> m3_24  [key=2, style=dotted];
m3_2420 -> m3_2410  [key=0, style=bold, color=blue];
m3_2521 -> m3_2522  [key=0, style=solid];
m3_2521 -> m3_24  [key=2, style=dotted];
m3_2520 -> m3_2521  [key=0, style=solid];
m3_2522 -> m3_2520  [key=0, style=bold, color=blue];
m3_2737 -> m3_2738  [key=0, style=solid];
m3_2738 -> m3_2739  [key=0, style=solid];
m3_2738 -> m3_916  [key=2, style=dotted];
m3_2739 -> m3_2737  [key=0, style=bold, color=blue];
m3_3067 -> m3_3068  [key=0, style=solid];
m3_3067 -> m3_151  [key=2, style=dotted];
m3_3067 -> m3_272  [key=2, style=dotted];
m3_3066 -> m3_3067  [key=0, style=solid];
m3_3068 -> m3_3066  [key=0, style=bold, color=blue];
m3_3091 -> m3_3092  [key=0, style=solid];
m3_3091 -> m3_24  [key=2, style=dotted];
m3_3090 -> m3_3091  [key=0, style=solid];
m3_3092 -> m3_3090  [key=0, style=bold, color=blue];
m3_3105 -> m3_3106  [key=0, style=solid];
m3_3105 -> m3_24  [key=2, style=dotted];
m3_3104 -> m3_3105  [key=0, style=solid];
m3_3106 -> m3_3104  [key=0, style=bold, color=blue];
m3_3124 -> m3_3125  [key=0, style=solid];
m3_3125 -> m3_3126  [key=0, style=solid];
m3_3126 -> m3_3127  [key=0, style=solid];
m3_3126 -> m3_24  [key=2, style=dotted];
m3_3127 -> m3_3124  [key=0, style=bold, color=blue];
m3_3131 -> m3_3132  [key=0, style=solid];
m3_3132 -> m3_3133  [key=0, style=solid];
m3_3133 -> m3_3134  [key=0, style=solid];
m3_3133 -> m3_24  [key=2, style=dotted];
m3_3134 -> m3_3131  [key=0, style=bold, color=blue];
m3_3205 -> m3_3206  [key=0, style=solid];
m3_3206 -> m3_3207  [key=0, style=solid];
m3_3206 -> m3_24  [key=2, style=dotted];
m3_3207 -> m3_3205  [key=0, style=bold, color=blue];
m3_3211 -> m3_3212  [key=0, style=solid];
m3_3212 -> m3_3213  [key=0, style=solid];
m3_3212 -> m3_24  [key=2, style=dotted];
m3_3213 -> m3_3211  [key=0, style=bold, color=blue];
m3_3217 -> m3_3218  [key=0, style=solid];
m3_3218 -> m3_3219  [key=0, style=solid];
m3_3218 -> m3_24  [key=2, style=dotted];
m3_3219 -> m3_3217  [key=0, style=bold, color=blue];
m3_3227 -> m3_3228  [key=0, style=solid];
m3_3228 -> m3_3229  [key=0, style=solid];
m3_3228 -> m3_24  [key=2, style=dotted];
m3_3229 -> m3_3227  [key=0, style=bold, color=blue];
m3_3233 -> m3_3234  [key=0, style=solid];
m3_3234 -> m3_3235  [key=0, style=solid];
m3_3234 -> m3_443  [key=2, style=dotted];
m3_3235 -> m3_3233  [key=0, style=bold, color=blue];
m3_3354 -> m3_3355  [key=0, style=solid];
m3_3354 -> m3_298  [key=2, style=dotted];
m3_3355 -> m3_3356  [key=0, style=solid];
m3_3353 -> m3_3354  [key=0, style=solid];
m3_3353 -> m3_3355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_3356 -> m3_3353  [key=0, style=bold, color=blue];
m3_3369 -> m3_3370  [key=0, style=solid];
m3_3369 -> m3_298  [key=2, style=dotted];
m3_3370 -> m3_3371  [key=0, style=solid];
m3_3368 -> m3_3369  [key=0, style=solid];
m3_3368 -> m3_3370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_3371 -> m3_3368  [key=0, style=bold, color=blue];
m3_3384 -> m3_3385  [key=0, style=solid];
m3_3384 -> m3_298  [key=2, style=dotted];
m3_3385 -> m3_3386  [key=0, style=solid];
m3_3383 -> m3_3384  [key=0, style=solid];
m3_3383 -> m3_3385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m3_3386 -> m3_3383  [key=0, style=bold, color=blue];
m3_3512 -> m3_3513  [key=0, style=solid];
m3_3512 -> m3_349  [key=2, style=dotted];
m3_3512 -> m3_350  [key=2, style=dotted];
m3_3512 -> m3_2543  [key=2, style=dotted];
m3_3511 -> m3_3512  [key=0, style=solid];
m3_3513 -> m3_3511  [key=0, style=bold, color=blue];
m3_3524 -> m3_3525  [key=0, style=solid];
m3_3525 -> m3_3526  [key=0, style=solid];
m3_3525 -> m3_3528  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3526 -> m3_3527  [key=0, style=solid];
m3_3526 -> m3_351  [key=2, style=dotted];
m3_3526 -> m3_3531  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_3528 -> m3_3529  [key=0, style=solid];
m3_3528 -> m3_349  [key=2, style=dotted];
m3_3528 -> m3_350  [key=2, style=dotted];
m3_3528 -> m3_3530  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_3528 -> m3_3531  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_3527 -> m3_3528  [key=0, style=solid];
m3_3531 -> m3_3532  [key=0, style=solid];
m3_3531 -> m3_2505  [key=2, style=dotted];
m3_3529 -> m3_3530  [key=0, style=solid];
m3_3529 -> m3_3321  [key=2, style=dotted];
m3_3530 -> m3_3531  [key=0, style=solid];
m3_3530 -> m3_3321  [key=2, style=dotted];
m3_3532 -> m3_3524  [key=0, style=bold, color=blue];
m3_3614 -> m3_3615  [key=0, style=solid];
m3_3614 -> m3_24  [key=2, style=dotted];
m3_3614 -> m3_3610  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_3613 -> m3_3614  [key=0, style=solid];
m3_3615 -> m3_3613  [key=0, style=bold, color=blue];
m3_3694 -> m3_3695  [key=0, style=solid];
m3_3695 -> m3_3696  [key=0, style=solid];
m3_3695 -> m3_24  [key=2, style=dotted];
m3_3696 -> m3_3694  [key=0, style=bold, color=blue];
m3_3702 -> m3_3703  [key=0, style=solid];
m3_3703 -> m3_3704  [key=0, style=solid];
m3_3703 -> m3_24  [key=2, style=dotted];
m3_3704 -> m3_3702  [key=0, style=bold, color=blue];
m3_3712 -> m3_3713  [key=0, style=solid];
m3_3712 -> m3_24  [key=2, style=dotted];
m3_3711 -> m3_3712  [key=0, style=solid];
m3_3713 -> m3_3711  [key=0, style=bold, color=blue];
m3_3834 -> m3_3835  [key=0, style=solid];
m3_3835 -> m3_3836  [key=0, style=solid];
m3_3835 -> m3_521  [key=2, style=dotted];
m3_3836 -> m3_3834  [key=0, style=bold, color=blue];
m3_4081 -> m3_4082  [key=0, style=solid];
m3_4082 -> m3_4083  [key=0, style=solid];
m3_4082 -> m3_4084  [key=2, style=dotted];
m3_4082 -> m3_105  [key=2, style=dotted];
m3_4083 -> m3_4081  [key=0, style=bold, color=blue];
m3_4088 -> m3_4089  [key=0, style=solid];
m3_4089 -> m3_4090  [key=0, style=solid];
m3_4089 -> m3_24  [key=2, style=dotted];
m3_4090 -> m3_4088  [key=0, style=bold, color=blue];
m3_4109 -> m3_4110  [key=0, style=solid];
m3_4109 -> m3_4111  [key=2, style=dotted];
m3_4109 -> m3_4112  [key=2, style=dotted];
m3_4109 -> m3_4113  [key=2, style=dotted];
m3_4109 -> m3_212  [key=2, style=dotted];
m3_4110 -> m3_4108  [key=0, style=bold, color=blue];
m3_3861 -> m3_3862  [key=0, style=solid];
m3_3862 -> m3_3863  [key=0, style=solid];
m3_3862 -> m3_3868  [key=2, style=dotted];
m3_3862 -> m3_3864  [key=1, style=dashed, color=darkseagreen4, label=product];
m3_3863 -> m3_3864  [key=0, style=solid];
m3_3863 -> m3_172  [key=2, style=dotted];
m3_3864 -> m3_3865  [key=0, style=solid];
m3_3864 -> m3_105  [key=2, style=dotted];
m3_3864 -> m3_3866  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3865 -> m3_3866  [key=0, style=solid];
m3_3865 -> m3_25  [key=2, style=dotted];
m3_3866 -> m3_3867  [key=0, style=solid];
m3_3866 -> m3_24  [key=2, style=dotted];
m3_3867 -> m3_3861  [key=0, style=bold, color=blue];
m3_1091 -> m3_1092  [key=0, style=solid];
m3_1092 -> m3_1093  [key=0, style=solid];
m3_1092 -> m3_110  [key=2, style=dotted];
m3_1092 -> m3_1089  [key=2, style=dotted];
m3_1092 -> m3_1082  [key=2, style=dotted];
m3_1092 -> m3_354  [key=2, style=dotted];
m3_1092 -> m3_1090  [key=2, style=dotted];
m3_1093 -> m3_1094  [key=0, style=solid];
m3_1093 -> m3_151  [key=2, style=dotted];
m3_1093 -> m3_152  [key=2, style=dotted];
m3_1094 -> m3_1095  [key=0, style=solid];
m3_1094 -> m3_25  [key=2, style=dotted];
m3_1095 -> m3_1091  [key=0, style=bold, color=blue];
m3_1799 -> m3_1800  [key=0, style=solid];
m3_1800 -> m3_1801  [key=0, style=solid];
m3_1800 -> m3_1804  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1801 -> m3_1802  [key=0, style=solid];
m3_1801 -> m3_36  [key=2, style=dotted];
m3_1801 -> m3_1803  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1802 -> m3_1799  [key=0, style=bold, color=blue];
m3_1960 -> m3_1961  [key=0, style=solid];
m3_1961 -> m3_1962  [key=0, style=solid];
m3_1961 -> m3_24  [key=2, style=dotted];
m3_1961 -> m3_1963  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1961 -> m3_1964  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1961 -> m3_1965  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1961 -> m3_1966  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1961 -> m3_1967  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1961 -> m3_1968  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1961 -> m3_1969  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1961 -> m3_1970  [key=1, style=dashed, color=darkseagreen4, label=d];
m3_1962 -> m3_1963  [key=0, style=solid];
m3_1962 -> m3_776  [key=2, style=dotted];
m3_1963 -> m3_1964  [key=0, style=solid];
m3_1963 -> m3_776  [key=2, style=dotted];
m3_1964 -> m3_1965  [key=0, style=solid];
m3_1964 -> m3_353  [key=2, style=dotted];
m3_1964 -> m3_25  [key=2, style=dotted];
m3_1965 -> m3_1966  [key=0, style=solid];
m3_1965 -> m3_353  [key=2, style=dotted];
m3_1965 -> m3_25  [key=2, style=dotted];
m3_1966 -> m3_1967  [key=0, style=solid];
m3_1966 -> m3_25  [key=2, style=dotted];
m3_1967 -> m3_1968  [key=0, style=solid];
m3_1967 -> m3_25  [key=2, style=dotted];
m3_1968 -> m3_1969  [key=0, style=solid];
m3_1968 -> m3_25  [key=2, style=dotted];
m3_1969 -> m3_1970  [key=0, style=solid];
m3_1969 -> m3_25  [key=2, style=dotted];
m3_1970 -> m3_1971  [key=0, style=solid];
m3_1970 -> m3_25  [key=2, style=dotted];
m3_1971 -> m3_1960  [key=0, style=bold, color=blue];
m3_1489 -> m3_1490  [key=0, style=solid];
m3_1490 -> m3_1491  [key=0, style=solid];
m3_1490 -> m3_1493  [key=2, style=dotted];
m3_1490 -> m3_1082  [key=2, style=dotted];
m3_1491 -> m3_1492  [key=0, style=solid];
m3_1492 -> m3_1489  [key=0, style=bold, color=blue];
m3_1268 -> m3_1269  [key=0, style=solid];
m3_1269 -> m3_1270  [key=0, style=solid];
m3_1269 -> m3_1267  [key=2, style=dotted];
m3_1270 -> m3_1271  [key=0, style=solid];
m3_1270 -> m3_1275  [key=2, style=dotted];
m3_1270 -> m3_1276  [key=2, style=dotted];
m3_1270 -> m3_1272  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1271 -> m3_1272  [key=0, style=solid];
m3_1271 -> m3_25  [key=2, style=dotted];
m3_1272 -> m3_1273  [key=0, style=solid];
m3_1272 -> m3_1275  [key=2, style=dotted];
m3_1272 -> m3_212  [key=2, style=dotted];
m3_1273 -> m3_1274  [key=0, style=solid];
m3_1273 -> m3_25  [key=2, style=dotted];
m3_1274 -> m3_1268  [key=0, style=bold, color=blue];
m3_163 -> m3_164  [key=0, style=solid];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_166  [key=2, style=dotted];
m3_165 -> m3_163  [key=0, style=bold, color=blue];
m3_3114 -> m3_3115  [key=0, style=solid];
m3_3115 -> m3_3116  [key=0, style=solid];
m3_3116 -> m3_3117  [key=0, style=solid];
m3_3116 -> m3_24  [key=2, style=dotted];
m3_3116 -> m3_3118  [key=1, style=dashed, color=darkseagreen4, label=w];
m3_3116 -> m3_3119  [key=1, style=dashed, color=darkseagreen4, label=w];
m3_3117 -> m3_3118  [key=0, style=solid];
m3_3117 -> m3_3113  [key=2, style=dotted];
m3_3117 -> m3_25  [key=2, style=dotted];
m3_3118 -> m3_3119  [key=0, style=solid];
m3_3118 -> m3_3113  [key=2, style=dotted];
m3_3118 -> m3_25  [key=2, style=dotted];
m3_3119 -> m3_3120  [key=0, style=solid];
m3_3119 -> m3_25  [key=2, style=dotted];
m3_3120 -> m3_3114  [key=0, style=bold, color=blue];
m3_3011 -> m3_3012  [key=0, style=solid];
m3_3012 -> m3_3013  [key=0, style=solid];
m3_3012 -> m3_3023  [key=2, style=dotted];
m3_3012 -> m3_3016  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m3_3012 -> m3_3018  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m3_3013 -> m3_3014  [key=0, style=solid];
m3_3013 -> m3_3010  [key=2, style=dotted];
m3_3013 -> m3_3016  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_3016 -> m3_3017  [key=0, style=solid];
m3_3016 -> m3_151  [key=2, style=dotted];
m3_3016 -> m3_174  [key=2, style=dotted];
m3_3018 -> m3_3019  [key=0, style=solid];
m3_3018 -> m3_151  [key=2, style=dotted];
m3_3018 -> m3_272  [key=2, style=dotted];
m3_3014 -> m3_3015  [key=0, style=solid];
m3_3015 -> m3_3016  [key=0, style=solid];
m3_3017 -> m3_3018  [key=0, style=solid];
m3_3017 -> m3_17  [key=2, style=dotted];
m3_3019 -> m3_3020  [key=0, style=solid];
m3_3019 -> m3_25  [key=2, style=dotted];
m3_3020 -> m3_3021  [key=0, style=solid];
m3_3020 -> m3_25  [key=2, style=dotted];
m3_3021 -> m3_3022  [key=0, style=solid];
m3_3021 -> m3_25  [key=2, style=dotted];
m3_3022 -> m3_3011  [key=0, style=bold, color=blue];
m3_3624 -> m3_3625  [key=0, style=solid];
m3_3625 -> m3_3626  [key=0, style=solid];
m3_3626 -> m3_3624  [key=0, style=bold, color=blue];
m3_3042 -> m3_3043  [key=0, style=solid];
m3_3043 -> m3_3044  [key=0, style=solid];
m3_3043 -> m3_110  [key=2, style=dotted];
m3_3043 -> m3_3046  [key=1, style=dashed, color=darkseagreen4, label=d1];
m3_3043 -> m3_3047  [key=1, style=dashed, color=darkseagreen4, label=d1];
m3_3044 -> m3_3045  [key=0, style=solid];
m3_3044 -> m3_105  [key=2, style=dotted];
m3_3046 -> m3_3047  [key=0, style=solid];
m3_3046 -> m3_25  [key=2, style=dotted];
m3_3047 -> m3_3048  [key=0, style=solid];
m3_3047 -> m3_25  [key=2, style=dotted];
m3_3045 -> m3_3046  [key=0, style=solid];
m3_3045 -> m3_24  [key=2, style=dotted];
m3_3045 -> m3_3047  [key=1, style=dashed, color=darkseagreen4, label=d2];
m3_3048 -> m3_3042  [key=0, style=bold, color=blue];
m3_3241 -> m3_3242  [key=0, style=solid];
m3_3242 -> m3_3243  [key=0, style=solid];
m3_3242 -> m3_151  [key=2, style=dotted];
m3_3242 -> m3_272  [key=2, style=dotted];
m3_3242 -> m3_3244  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_3242 -> m3_3245  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_3242 -> m3_3246  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_3243 -> m3_3244  [key=0, style=solid];
m3_3243 -> m3_3253  [key=2, style=dotted];
m3_3243 -> m3_3254  [key=2, style=dotted];
m3_3243 -> m3_25  [key=2, style=dotted];
m3_3244 -> m3_3245  [key=0, style=solid];
m3_3244 -> m3_3255  [key=2, style=dotted];
m3_3244 -> m3_25  [key=2, style=dotted];
m3_3245 -> m3_3246  [key=0, style=solid];
m3_3245 -> m3_25  [key=2, style=dotted];
m3_3246 -> m3_3247  [key=0, style=solid];
m3_3246 -> m3_25  [key=2, style=dotted];
m3_3247 -> m3_3248  [key=0, style=solid];
m3_3247 -> m3_151  [key=2, style=dotted];
m3_3247 -> m3_272  [key=2, style=dotted];
m3_3247 -> m3_3249  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3247 -> m3_3250  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3247 -> m3_3251  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_3248 -> m3_3249  [key=0, style=solid];
m3_3248 -> m3_3253  [key=2, style=dotted];
m3_3248 -> m3_3254  [key=2, style=dotted];
m3_3248 -> m3_25  [key=2, style=dotted];
m3_3249 -> m3_3250  [key=0, style=solid];
m3_3249 -> m3_3255  [key=2, style=dotted];
m3_3249 -> m3_25  [key=2, style=dotted];
m3_3250 -> m3_3251  [key=0, style=solid];
m3_3250 -> m3_25  [key=2, style=dotted];
m3_3251 -> m3_3252  [key=0, style=solid];
m3_3251 -> m3_25  [key=2, style=dotted];
m3_3252 -> m3_3241  [key=0, style=bold, color=blue];
m3_2705 -> m3_2706  [key=0, style=solid];
m3_2706 -> m3_2707  [key=0, style=solid];
m3_2706 -> m3_24  [key=2, style=dotted];
m3_2706 -> m3_2708  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_2706 -> m3_2709  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_2707 -> m3_2708  [key=0, style=solid];
m3_2707 -> m3_25  [key=2, style=dotted];
m3_2708 -> m3_2709  [key=0, style=solid];
m3_2708 -> m3_25  [key=2, style=dotted];
m3_2709 -> m3_2710  [key=0, style=solid];
m3_2709 -> m3_25  [key=2, style=dotted];
m3_2710 -> m3_2705  [key=0, style=bold, color=blue];
m3_2829 -> m3_2830  [key=0, style=solid];
m3_2830 -> m3_2831  [key=0, style=solid];
m3_2830 -> m3_2825  [key=2, style=dotted];
m3_2830 -> m3_2832  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2830 -> m3_2833  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2830 -> m3_2836  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2830 -> m3_2837  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_2831 -> m3_2832  [key=0, style=solid];
m3_2831 -> m3_2841  [key=2, style=dotted];
m3_2832 -> m3_2833  [key=0, style=solid];
m3_2832 -> m3_2841  [key=2, style=dotted];
m3_2833 -> m3_2834  [key=0, style=solid];
m3_2833 -> m3_16  [key=2, style=dotted];
m3_2833 -> m3_2835  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2836 -> m3_2837  [key=0, style=solid];
m3_2836 -> m3_25  [key=2, style=dotted];
m3_2837 -> m3_2838  [key=0, style=solid];
m3_2837 -> m3_25  [key=2, style=dotted];
m3_2834 -> m3_2835  [key=0, style=solid];
m3_2834 -> m3_17  [key=2, style=dotted];
m3_2835 -> m3_2836  [key=0, style=solid];
m3_2835 -> m3_24  [key=2, style=dotted];
m3_2835 -> m3_2837  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2835 -> m3_2838  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2835 -> m3_2839  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2838 -> m3_2839  [key=0, style=solid];
m3_2838 -> m3_25  [key=2, style=dotted];
m3_2839 -> m3_2840  [key=0, style=solid];
m3_2839 -> m3_25  [key=2, style=dotted];
m3_2840 -> m3_2829  [key=0, style=bold, color=blue];
m3_3691 -> m3_3692  [key=0, style=solid];
m3_3692 -> m3_3693  [key=0, style=solid];
m3_3692 -> m3_36  [key=2, style=dotted];
m3_3692 -> m3_3694  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3693 -> m3_3691  [key=0, style=bold, color=blue];
m3_4137 -> m3_4138  [key=0, style=solid];
m3_4138 -> m3_4139  [key=0, style=solid];
m3_4139 -> m3_4137  [key=0, style=bold, color=blue];
m3_2623 -> m3_2624  [key=0, style=solid];
m3_2624 -> m3_2625  [key=0, style=solid];
m3_2624 -> m3_2632  [key=2, style=dotted];
m3_2624 -> m3_2626  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_2625 -> m3_2626  [key=0, style=solid];
m3_2625 -> m3_2633  [key=2, style=dotted];
m3_2626 -> m3_2627  [key=0, style=solid];
m3_2626 -> m3_105  [key=2, style=dotted];
m3_2627 -> m3_2628  [key=0, style=solid];
m3_2627 -> m3_24  [key=2, style=dotted];
m3_2627 -> m3_2629  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_2627 -> m3_2630  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_2628 -> m3_2629  [key=0, style=solid];
m3_2628 -> m3_25  [key=2, style=dotted];
m3_2629 -> m3_2630  [key=0, style=solid];
m3_2629 -> m3_25  [key=2, style=dotted];
m3_2630 -> m3_2631  [key=0, style=solid];
m3_2630 -> m3_25  [key=2, style=dotted];
m3_2631 -> m3_2623  [key=0, style=bold, color=blue];
m3_1047 -> m3_1048  [key=0, style=solid];
m3_1048 -> m3_1049  [key=0, style=solid];
m3_1048 -> m3_1050  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1048 -> m3_1051  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1049 -> m3_1050  [key=0, style=solid];
m3_1049 -> m3_894  [key=2, style=dotted];
m3_1050 -> m3_1051  [key=0, style=solid];
m3_1050 -> m3_1055  [key=2, style=dotted];
m3_1050 -> m3_1056  [key=2, style=dotted];
m3_1050 -> m3_1057  [key=2, style=dotted];
m3_1050 -> m3_1053  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m3_1051 -> m3_1052  [key=0, style=solid];
m3_1051 -> m3_24  [key=2, style=dotted];
m3_1051 -> m3_1053  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m3_1053 -> m3_1054  [key=0, style=solid];
m3_1053 -> m3_25  [key=2, style=dotted];
m3_1052 -> m3_1053  [key=0, style=solid];
m3_1052 -> m3_25  [key=2, style=dotted];
m3_1054 -> m3_1047  [key=0, style=bold, color=blue];
m3_3837 -> m3_3838  [key=0, style=solid];
m3_3838 -> m3_3839  [key=0, style=solid];
m3_3838 -> m3_3857  [key=2, style=dotted];
m3_3838 -> m3_3840  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m3_3838 -> m3_3845  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m3_3838 -> m3_3851  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m3_3839 -> m3_3840  [key=0, style=solid];
m3_3839 -> m3_151  [key=2, style=dotted];
m3_3839 -> m3_3858  [key=2, style=dotted];
m3_3839 -> m3_3859  [key=2, style=dotted];
m3_3839 -> m3_3842  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_3839 -> m3_3846  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_3839 -> m3_3848  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_3839 -> m3_3852  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_3839 -> m3_3854  [key=1, style=dashed, color=darkseagreen4, label=options];
m3_3840 -> m3_3841  [key=0, style=solid];
m3_3840 -> m3_174  [key=2, style=dotted];
m3_3840 -> m3_3842  [key=1, style=dashed, color=darkseagreen4, label=text1];
m3_3845 -> m3_3846  [key=0, style=solid];
m3_3845 -> m3_811  [key=2, style=dotted];
m3_3851 -> m3_3852  [key=0, style=solid];
m3_3851 -> m3_811  [key=2, style=dotted];
m3_3842 -> m3_3843  [key=0, style=solid];
m3_3842 -> m3_272  [key=2, style=dotted];
m3_3846 -> m3_3847  [key=0, style=solid];
m3_3846 -> m3_174  [key=2, style=dotted];
m3_3846 -> m3_3848  [key=1, style=dashed, color=darkseagreen4, label=text2];
m3_3848 -> m3_3849  [key=0, style=solid];
m3_3848 -> m3_272  [key=2, style=dotted];
m3_3852 -> m3_3853  [key=0, style=solid];
m3_3852 -> m3_174  [key=2, style=dotted];
m3_3852 -> m3_3854  [key=1, style=dashed, color=darkseagreen4, label=text3];
m3_3854 -> m3_3855  [key=0, style=solid];
m3_3854 -> m3_272  [key=2, style=dotted];
m3_3841 -> m3_3842  [key=0, style=solid];
m3_3841 -> m3_25  [key=2, style=dotted];
m3_3843 -> m3_3844  [key=0, style=solid];
m3_3843 -> m3_3860  [key=2, style=dotted];
m3_3843 -> m3_25  [key=2, style=dotted];
m3_3844 -> m3_3845  [key=0, style=solid];
m3_3844 -> m3_172  [key=2, style=dotted];
m3_3844 -> m3_3846  [key=1, style=dashed, color=darkseagreen4, label=dict2];
m3_3847 -> m3_3848  [key=0, style=solid];
m3_3847 -> m3_17  [key=2, style=dotted];
m3_3849 -> m3_3850  [key=0, style=solid];
m3_3849 -> m3_3815  [key=2, style=dotted];
m3_3849 -> m3_3860  [key=2, style=dotted];
m3_3849 -> m3_25  [key=2, style=dotted];
m3_3850 -> m3_3851  [key=0, style=solid];
m3_3850 -> m3_172  [key=2, style=dotted];
m3_3850 -> m3_3852  [key=1, style=dashed, color=darkseagreen4, label=dict3];
m3_3853 -> m3_3854  [key=0, style=solid];
m3_3853 -> m3_17  [key=2, style=dotted];
m3_3855 -> m3_3856  [key=0, style=solid];
m3_3855 -> m3_3815  [key=2, style=dotted];
m3_3855 -> m3_3860  [key=2, style=dotted];
m3_3855 -> m3_25  [key=2, style=dotted];
m3_3856 -> m3_3837  [key=0, style=bold, color=blue];
m3_1150 -> m3_1151  [key=0, style=solid];
m3_1151 -> m3_1152  [key=0, style=solid];
m3_1152 -> m3_1153  [key=0, style=solid];
m3_1152 -> m3_24  [key=2, style=dotted];
m3_1152 -> m3_1154  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1152 -> m3_1155  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1152 -> m3_1156  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1152 -> m3_1157  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1152 -> m3_1158  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1153 -> m3_1154  [key=0, style=solid];
m3_1153 -> m3_25  [key=2, style=dotted];
m3_1154 -> m3_1155  [key=0, style=solid];
m3_1154 -> m3_25  [key=2, style=dotted];
m3_1155 -> m3_1156  [key=0, style=solid];
m3_1155 -> m3_25  [key=2, style=dotted];
m3_1156 -> m3_1157  [key=0, style=solid];
m3_1156 -> m3_25  [key=2, style=dotted];
m3_1157 -> m3_1158  [key=0, style=solid];
m3_1157 -> m3_25  [key=2, style=dotted];
m3_1158 -> m3_1159  [key=0, style=solid];
m3_1158 -> m3_25  [key=2, style=dotted];
m3_1159 -> m3_1150  [key=0, style=bold, color=blue];
m3_2711 -> m3_2712  [key=0, style=solid];
m3_2712 -> m3_2713  [key=0, style=solid];
m3_2712 -> m3_2720  [key=2, style=dotted];
m3_2712 -> m3_110  [key=2, style=dotted];
m3_2713 -> m3_2714  [key=0, style=solid];
m3_2713 -> m3_16  [key=2, style=dotted];
m3_2713 -> m3_2715  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_2714 -> m3_2715  [key=0, style=solid];
m3_2714 -> m3_17  [key=2, style=dotted];
m3_2715 -> m3_2716  [key=0, style=solid];
m3_2715 -> m3_24  [key=2, style=dotted];
m3_2715 -> m3_2717  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2715 -> m3_2718  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_2716 -> m3_2717  [key=0, style=solid];
m3_2716 -> m3_1662  [key=2, style=dotted];
m3_2716 -> m3_25  [key=2, style=dotted];
m3_2717 -> m3_2718  [key=0, style=solid];
m3_2717 -> m3_1662  [key=2, style=dotted];
m3_2717 -> m3_25  [key=2, style=dotted];
m3_2718 -> m3_2719  [key=0, style=solid];
m3_2718 -> m3_1662  [key=2, style=dotted];
m3_2718 -> m3_25  [key=2, style=dotted];
m3_2719 -> m3_2711  [key=0, style=bold, color=blue];
m3_1168 -> m3_1169  [key=0, style=solid];
m3_1169 -> m3_1170  [key=0, style=solid];
m3_1169 -> m3_1184  [key=2, style=dotted];
m3_1169 -> m3_1171  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1169 -> m3_1172  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1169 -> m3_1173  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1169 -> m3_1174  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m3_1170 -> m3_1171  [key=0, style=solid];
m3_1171 -> m3_1172  [key=0, style=solid];
m3_1171 -> m3_298  [key=2, style=dotted];
m3_1172 -> m3_1173  [key=0, style=solid];
m3_1172 -> m3_298  [key=2, style=dotted];
m3_1173 -> m3_1174  [key=0, style=solid];
m3_1173 -> m3_298  [key=2, style=dotted];
m3_1174 -> m3_1175  [key=0, style=solid];
m3_1174 -> m3_105  [key=2, style=dotted];
m3_1175 -> m3_1176  [key=0, style=solid];
m3_1175 -> m3_24  [key=2, style=dotted];
m3_1175 -> m3_1177  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_1175 -> m3_1178  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_1175 -> m3_1179  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_1175 -> m3_1180  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_1175 -> m3_1181  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_1175 -> m3_1182  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m3_1176 -> m3_1177  [key=0, style=solid];
m3_1176 -> m3_25  [key=2, style=dotted];
m3_1177 -> m3_1178  [key=0, style=solid];
m3_1177 -> m3_25  [key=2, style=dotted];
m3_1178 -> m3_1179  [key=0, style=solid];
m3_1178 -> m3_25  [key=2, style=dotted];
m3_1179 -> m3_1180  [key=0, style=solid];
m3_1179 -> m3_25  [key=2, style=dotted];
m3_1180 -> m3_1181  [key=0, style=solid];
m3_1180 -> m3_25  [key=2, style=dotted];
m3_1181 -> m3_1182  [key=0, style=solid];
m3_1181 -> m3_25  [key=2, style=dotted];
m3_1182 -> m3_1183  [key=0, style=solid];
m3_1182 -> m3_25  [key=2, style=dotted];
m3_1183 -> m3_1168  [key=0, style=bold, color=blue];
m3_1771 -> m3_1772  [key=0, style=solid];
m3_1772 -> m3_1773  [key=0, style=solid];
m3_1772 -> m3_1776  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1773 -> m3_1774  [key=0, style=solid];
m3_1773 -> m3_36  [key=2, style=dotted];
m3_1773 -> m3_1775  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1774 -> m3_1771  [key=0, style=bold, color=blue];
m3_2906 -> m3_2907  [key=0, style=solid];
m3_2907 -> m3_2908  [key=0, style=solid];
m3_2907 -> m3_2903  [key=2, style=dotted];
m3_2907 -> m3_2910  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m3_2907 -> m3_2911  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m3_2907 -> m3_2914  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m3_2908 -> m3_2911  [key=0, style=solid];
m3_2908 -> m3_258  [key=2, style=dotted];
m3_2910 -> m3_2911  [key=0, style=solid];
m3_2910 -> m3_298  [key=2, style=dotted];
m3_2911 -> m3_2912  [key=0, style=solid];
m3_2911 -> m3_105  [key=2, style=dotted];
m3_2914 -> m3_2915  [key=0, style=solid];
m3_2914 -> m3_16  [key=2, style=dotted];
m3_2909 -> m3_2910  [key=0, style=solid];
m3_2912 -> m3_2913  [key=0, style=solid];
m3_2912 -> m3_24  [key=2, style=dotted];
m3_2913 -> m3_2914  [key=0, style=solid];
m3_2913 -> m3_2918  [key=2, style=dotted];
m3_2913 -> m3_25  [key=2, style=dotted];
m3_2915 -> m3_2916  [key=0, style=solid];
m3_2915 -> m3_24  [key=2, style=dotted];
m3_2916 -> m3_2917  [key=0, style=solid];
m3_2916 -> m3_2918  [key=2, style=dotted];
m3_2916 -> m3_25  [key=2, style=dotted];
m3_2917 -> m3_2906  [key=0, style=bold, color=blue];
m3_3574 -> m3_3575  [key=0, style=solid];
m3_3575 -> m3_3576  [key=0, style=solid];
m3_3576 -> m3_3574  [key=0, style=bold, color=blue];
m3_3651 -> m3_3652  [key=0, style=solid];
m3_3652 -> m3_3653  [key=0, style=solid];
m3_3652 -> m3_110  [key=2, style=dotted];
m3_3652 -> m3_1082  [key=2, style=dotted];
m3_3652 -> m3_354  [key=2, style=dotted];
m3_3652 -> m3_1090  [key=2, style=dotted];
m3_3653 -> m3_3654  [key=0, style=solid];
m3_3653 -> m3_151  [key=2, style=dotted];
m3_3653 -> m3_174  [key=2, style=dotted];
m3_3654 -> m3_3655  [key=0, style=solid];
m3_3654 -> m3_17  [key=2, style=dotted];
m3_3655 -> m3_3651  [key=0, style=bold, color=blue];
m3_40 -> m3_41  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_36  [key=2, style=dotted];
m3_41 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_42 -> m3_40  [key=0, style=bold, color=blue];
m3_698 -> m3_699  [key=0, style=solid];
m3_699 -> m3_700  [key=0, style=solid];
m3_699 -> m3_719  [key=2, style=dotted];
m3_699 -> m3_701  [key=1, style=dashed, color=darkseagreen4, label=p1];
m3_699 -> m3_702  [key=1, style=dashed, color=darkseagreen4, label=p1];
m3_699 -> m3_703  [key=1, style=dashed, color=darkseagreen4, label=p1];
m3_700 -> m3_701  [key=0, style=solid];
m3_700 -> m3_719  [key=2, style=dotted];
m3_700 -> m3_702  [key=1, style=dashed, color=darkseagreen4, label=p2];
m3_700 -> m3_703  [key=1, style=dashed, color=darkseagreen4, label=p2];
m3_701 -> m3_702  [key=0, style=solid];
m3_702 -> m3_703  [key=0, style=solid];
m3_703 -> m3_704  [key=0, style=solid];
m3_703 -> m3_663  [key=2, style=dotted];
m3_703 -> m3_706  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_703 -> m3_709  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_703 -> m3_710  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_703 -> m3_711  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_703 -> m3_712  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_703 -> m3_713  [key=1, style=dashed, color=darkseagreen4, label=obj];
m3_704 -> m3_705  [key=0, style=solid];
m3_706 -> m3_707  [key=0, style=solid];
m3_706 -> m3_152  [key=2, style=dotted];
m3_706 -> m3_708  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_709 -> m3_710  [key=0, style=solid];
m3_709 -> m3_25  [key=2, style=dotted];
m3_710 -> m3_711  [key=0, style=solid];
m3_710 -> m3_25  [key=2, style=dotted];
m3_711 -> m3_712  [key=0, style=solid];
m3_711 -> m3_25  [key=2, style=dotted];
m3_712 -> m3_713  [key=0, style=solid];
m3_712 -> m3_25  [key=2, style=dotted];
m3_713 -> m3_714  [key=0, style=solid];
m3_713 -> m3_25  [key=2, style=dotted];
m3_705 -> m3_706  [key=0, style=solid];
m3_705 -> m3_151  [key=2, style=dotted];
m3_707 -> m3_708  [key=0, style=solid];
m3_707 -> m3_17  [key=2, style=dotted];
m3_708 -> m3_709  [key=0, style=solid];
m3_708 -> m3_24  [key=2, style=dotted];
m3_708 -> m3_710  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m3_708 -> m3_711  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m3_708 -> m3_712  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m3_708 -> m3_713  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m3_708 -> m3_714  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m3_708 -> m3_715  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m3_708 -> m3_716  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m3_708 -> m3_717  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m3_714 -> m3_715  [key=0, style=solid];
m3_714 -> m3_25  [key=2, style=dotted];
m3_715 -> m3_716  [key=0, style=solid];
m3_715 -> m3_25  [key=2, style=dotted];
m3_716 -> m3_717  [key=0, style=solid];
m3_716 -> m3_25  [key=2, style=dotted];
m3_717 -> m3_718  [key=0, style=solid];
m3_717 -> m3_25  [key=2, style=dotted];
m3_718 -> m3_698  [key=0, style=bold, color=blue];
m3_2364 -> m3_2365  [key=0, style=solid];
m3_2364 -> m3_2367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m3_2364 -> m3_2368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m3_2365 -> m3_2366  [key=0, style=solid];
m3_2365 -> m3_2367  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_2367 -> m3_2369  [key=0, style=solid];
m3_2367 -> m3_2370  [key=2, style=dotted];
m3_2367 -> m3_2371  [key=2, style=dotted];
m3_2368 -> m3_2369  [key=0, style=solid];
m3_2368 -> m3_2372  [key=2, style=dotted];
m3_2366 -> m3_2367  [key=0, style=solid];
m3_2366 -> m3_2368  [key=0, style=solid];
m3_2369 -> m3_2364  [key=0, style=bold, color=blue];
m3_2721 -> m3_2722  [key=0, style=solid];
m3_2722 -> m3_2723  [key=0, style=solid];
m3_2722 -> m3_2726  [key=2, style=dotted];
m3_2723 -> m3_2724  [key=0, style=solid];
m3_2723 -> m3_16  [key=2, style=dotted];
m3_2724 -> m3_2725  [key=0, style=solid];
m3_2724 -> m3_17  [key=2, style=dotted];
m3_2725 -> m3_2721  [key=0, style=bold, color=blue];
m3_424 -> m3_425  [key=0, style=solid];
m3_425 -> m3_426  [key=0, style=solid];
m3_425 -> m3_432  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_426 -> m3_427  [key=0, style=solid];
m3_426 -> m3_443  [key=2, style=dotted];
m3_426 -> m3_428  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_426 -> m3_429  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_426 -> m3_430  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_426 -> m3_431  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_426 -> m3_432  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_432 -> m3_433  [key=0, style=solid];
m3_432 -> m3_445  [key=2, style=dotted];
m3_432 -> m3_446  [key=2, style=dotted];
m3_432 -> m3_447  [key=2, style=dotted];
m3_427 -> m3_428  [key=0, style=solid];
m3_427 -> m3_25  [key=2, style=dotted];
m3_428 -> m3_429  [key=0, style=solid];
m3_428 -> m3_25  [key=2, style=dotted];
m3_429 -> m3_430  [key=0, style=solid];
m3_429 -> m3_25  [key=2, style=dotted];
m3_430 -> m3_431  [key=0, style=solid];
m3_430 -> m3_444  [key=2, style=dotted];
m3_430 -> m3_25  [key=2, style=dotted];
m3_431 -> m3_432  [key=0, style=solid];
m3_431 -> m3_25  [key=2, style=dotted];
m3_433 -> m3_434  [key=0, style=solid];
m3_433 -> m3_436  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_434 -> m3_435  [key=0, style=solid];
m3_434 -> m3_443  [key=2, style=dotted];
m3_434 -> m3_436  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_436 -> m3_437  [key=0, style=solid];
m3_436 -> m3_445  [key=2, style=dotted];
m3_436 -> m3_446  [key=2, style=dotted];
m3_436 -> m3_447  [key=2, style=dotted];
m3_435 -> m3_436  [key=0, style=solid];
m3_435 -> m3_25  [key=2, style=dotted];
m3_437 -> m3_438  [key=0, style=solid];
m3_437 -> m3_441  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_438 -> m3_439  [key=0, style=solid];
m3_438 -> m3_443  [key=2, style=dotted];
m3_438 -> m3_440  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_438 -> m3_441  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_441 -> m3_442  [key=0, style=solid];
m3_441 -> m3_445  [key=2, style=dotted];
m3_441 -> m3_446  [key=2, style=dotted];
m3_441 -> m3_447  [key=2, style=dotted];
m3_439 -> m3_440  [key=0, style=solid];
m3_439 -> m3_25  [key=2, style=dotted];
m3_440 -> m3_441  [key=0, style=solid];
m3_440 -> m3_25  [key=2, style=dotted];
m3_442 -> m3_424  [key=0, style=bold, color=blue];
m3_2889 -> m3_2890  [key=0, style=solid];
m3_2890 -> m3_2891  [key=0, style=solid];
m3_2890 -> m3_24  [key=2, style=dotted];
m3_2890 -> m3_2892  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2890 -> m3_2893  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2890 -> m3_2894  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2890 -> m3_2895  [key=1, style=dashed, color=darkseagreen4, label=r];
m3_2891 -> m3_2892  [key=0, style=solid];
m3_2891 -> m3_353  [key=2, style=dotted];
m3_2891 -> m3_25  [key=2, style=dotted];
m3_2892 -> m3_2893  [key=0, style=solid];
m3_2892 -> m3_444  [key=2, style=dotted];
m3_2892 -> m3_25  [key=2, style=dotted];
m3_2893 -> m3_2894  [key=0, style=solid];
m3_2893 -> m3_1662  [key=2, style=dotted];
m3_2893 -> m3_776  [key=2, style=dotted];
m3_2894 -> m3_2895  [key=0, style=solid];
m3_2894 -> m3_1662  [key=2, style=dotted];
m3_2894 -> m3_776  [key=2, style=dotted];
m3_2895 -> m3_2896  [key=0, style=solid];
m3_2895 -> m3_1662  [key=2, style=dotted];
m3_2895 -> m3_128  [key=2, style=dotted];
m3_2896 -> m3_2889  [key=0, style=bold, color=blue];
m3_2562 -> m3_2563  [key=0, style=solid];
m3_2563 -> m3_2564  [key=0, style=solid];
m3_2563 -> m3_2566  [key=2, style=dotted];
m3_2563 -> m3_16  [key=2, style=dotted];
m3_2564 -> m3_2565  [key=0, style=solid];
m3_2564 -> m3_17  [key=2, style=dotted];
m3_2565 -> m3_2562  [key=0, style=bold, color=blue];
m3_3521 -> m3_3522  [key=0, style=solid];
m3_3522 -> m3_3523  [key=0, style=solid];
m3_3522 -> m3_36  [key=2, style=dotted];
m3_3522 -> m3_3524  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3523 -> m3_3521  [key=0, style=bold, color=blue];
m3_3908 -> m3_3909  [key=0, style=solid];
m3_3909 -> m3_3910  [key=0, style=solid];
m3_3910 -> m3_3908  [key=0, style=bold, color=blue];
m3_3171 -> m3_3172  [key=0, style=solid];
m3_3172 -> m3_3173  [key=0, style=solid];
m3_3172 -> m3_3177  [key=2, style=dotted];
m3_3172 -> m3_3178  [key=2, style=dotted];
m3_3172 -> m3_105  [key=2, style=dotted];
m3_3173 -> m3_3174  [key=0, style=solid];
m3_3173 -> m3_25  [key=2, style=dotted];
m3_3174 -> m3_3175  [key=0, style=solid];
m3_3174 -> m3_24  [key=2, style=dotted];
m3_3175 -> m3_3176  [key=0, style=solid];
m3_3175 -> m3_3178  [key=2, style=dotted];
m3_3175 -> m3_25  [key=2, style=dotted];
m3_3176 -> m3_3171  [key=0, style=bold, color=blue];
m3_3024 -> m3_3025  [key=0, style=solid];
m3_3025 -> m3_3026  [key=0, style=solid];
m3_3026 -> m3_3027  [key=0, style=solid];
m3_3026 -> m3_3034  [key=2, style=dotted];
m3_3026 -> m3_3028  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m3_3027 -> m3_3028  [key=0, style=solid];
m3_3028 -> m3_3029  [key=0, style=solid];
m3_3029 -> m3_3030  [key=0, style=solid];
m3_3030 -> m3_3031  [key=0, style=solid];
m3_3030 -> m3_24  [key=2, style=dotted];
m3_3030 -> m3_3032  [key=1, style=dashed, color=darkseagreen4, label=c];
m3_3031 -> m3_3032  [key=0, style=solid];
m3_3031 -> m3_25  [key=2, style=dotted];
m3_3032 -> m3_3033  [key=0, style=solid];
m3_3032 -> m3_25  [key=2, style=dotted];
m3_3033 -> m3_3024  [key=0, style=bold, color=blue];
m3_2122 -> m3_2123  [key=0, style=solid];
m3_2123 -> m3_2124  [key=0, style=solid];
m3_2123 -> m3_2125  [key=2, style=dotted];
m3_2124 -> m3_2122  [key=0, style=bold, color=blue];
m3_327 -> m3_328  [key=0, style=solid];
m3_328 -> m3_329  [key=0, style=solid];
m3_328 -> m3_24  [key=2, style=dotted];
m3_328 -> m3_330  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_328 -> m3_331  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_329 -> m3_330  [key=0, style=solid];
m3_329 -> m3_25  [key=2, style=dotted];
m3_330 -> m3_331  [key=0, style=solid];
m3_330 -> m3_25  [key=2, style=dotted];
m3_331 -> m3_332  [key=0, style=solid];
m3_331 -> m3_25  [key=2, style=dotted];
m3_332 -> m3_327  [key=0, style=bold, color=blue];
m3_1504 -> m3_1505  [key=0, style=solid];
m3_1505 -> m3_1506  [key=0, style=solid];
m3_1505 -> m3_1517  [key=2, style=dotted];
m3_1505 -> m3_1507  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1505 -> m3_1508  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1505 -> m3_1509  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1505 -> m3_1513  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1505 -> m3_1514  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1505 -> m3_1515  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_1506 -> m3_1507  [key=0, style=solid];
m3_1506 -> m3_172  [key=2, style=dotted];
m3_1507 -> m3_1508  [key=0, style=solid];
m3_1507 -> m3_110  [key=2, style=dotted];
m3_1508 -> m3_1509  [key=0, style=solid];
m3_1508 -> m3_110  [key=2, style=dotted];
m3_1509 -> m3_1510  [key=0, style=solid];
m3_1509 -> m3_16  [key=2, style=dotted];
m3_1509 -> m3_1511  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1513 -> m3_1514  [key=0, style=solid];
m3_1513 -> m3_1518  [key=2, style=dotted];
m3_1513 -> m3_25  [key=2, style=dotted];
m3_1514 -> m3_1515  [key=0, style=solid];
m3_1514 -> m3_1518  [key=2, style=dotted];
m3_1514 -> m3_25  [key=2, style=dotted];
m3_1515 -> m3_1516  [key=0, style=solid];
m3_1515 -> m3_1518  [key=2, style=dotted];
m3_1515 -> m3_25  [key=2, style=dotted];
m3_1510 -> m3_1511  [key=0, style=solid];
m3_1510 -> m3_25  [key=2, style=dotted];
m3_1511 -> m3_1512  [key=0, style=solid];
m3_1511 -> m3_24  [key=2, style=dotted];
m3_1511 -> m3_1513  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m3_1511 -> m3_1514  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m3_1511 -> m3_1515  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m3_1512 -> m3_1513  [key=0, style=solid];
m3_1512 -> m3_776  [key=2, style=dotted];
m3_1516 -> m3_1504  [key=0, style=bold, color=blue];
m3_1414 -> m3_1415  [key=0, style=solid];
m3_1415 -> m3_1416  [key=0, style=solid];
m3_1415 -> m3_1422  [key=2, style=dotted];
m3_1415 -> m3_1082  [key=2, style=dotted];
m3_1416 -> m3_1417  [key=0, style=solid];
m3_1416 -> m3_16  [key=2, style=dotted];
m3_1416 -> m3_1418  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_1417 -> m3_1418  [key=0, style=solid];
m3_1417 -> m3_17  [key=2, style=dotted];
m3_1418 -> m3_1419  [key=0, style=solid];
m3_1418 -> m3_24  [key=2, style=dotted];
m3_1418 -> m3_1420  [key=1, style=dashed, color=darkseagreen4, label=c2];
m3_1419 -> m3_1420  [key=0, style=solid];
m3_1419 -> m3_25  [key=2, style=dotted];
m3_1420 -> m3_1421  [key=0, style=solid];
m3_1420 -> m3_1082  [key=2, style=dotted];
m3_1420 -> m3_25  [key=2, style=dotted];
m3_1421 -> m3_1414  [key=0, style=bold, color=blue];
m3_1394 -> m3_1395  [key=0, style=solid];
m3_1395 -> m3_1396  [key=0, style=solid];
m3_1396 -> m3_1397  [key=0, style=solid];
m3_1396 -> m3_24  [key=2, style=dotted];
m3_1397 -> m3_1398  [key=0, style=solid];
m3_1397 -> m3_25  [key=2, style=dotted];
m3_1398 -> m3_1394  [key=0, style=bold, color=blue];
m3_3100 -> m3_3101  [key=0, style=solid];
m3_3101 -> m3_3102  [key=0, style=solid];
m3_3101 -> m3_3105  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_3102 -> m3_3103  [key=0, style=solid];
m3_3102 -> m3_36  [key=2, style=dotted];
m3_3102 -> m3_3104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_3103 -> m3_3100  [key=0, style=bold, color=blue];
m3_338 -> m3_339  [key=0, style=solid];
m3_339 -> m3_340  [key=0, style=solid];
m3_339 -> m3_349  [key=2, style=dotted];
m3_339 -> m3_350  [key=2, style=dotted];
m3_339 -> m3_344  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_339 -> m3_347  [key=1, style=dashed, color=darkseagreen4, label=reader];
m3_340 -> m3_341  [key=0, style=solid];
m3_340 -> m3_25  [key=2, style=dotted];
m3_344 -> m3_345  [key=0, style=solid];
m3_344 -> m3_352  [key=2, style=dotted];
m3_347 -> m3_348  [key=0, style=solid];
m3_347 -> m3_25  [key=2, style=dotted];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_351  [key=2, style=dotted];
m3_341 -> m3_344  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m3_342 -> m3_343  [key=0, style=solid];
m3_343 -> m3_344  [key=0, style=solid];
m3_343 -> m3_110  [key=2, style=dotted];
m3_343 -> m3_345  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_343 -> m3_346  [key=1, style=dashed, color=darkseagreen4, label=l];
m3_345 -> m3_346  [key=0, style=solid];
m3_345 -> m3_353  [key=2, style=dotted];
m3_345 -> m3_25  [key=2, style=dotted];
m3_345 -> m3_320  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken endToken"];
m3_345 -> m3_321  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonToken endToken"];
m3_346 -> m3_347  [key=0, style=solid];
m3_346 -> m3_354  [key=2, style=dotted];
m3_346 -> m3_25  [key=2, style=dotted];
m3_348 -> m3_338  [key=0, style=bold, color=blue];
m3_369 -> m3_370  [key=0, style=solid];
m3_370 -> m3_371  [key=0, style=solid];
m3_371 -> m3_369  [key=0, style=bold, color=blue];
m3_4085 -> m3_4086  [key=0, style=solid];
m3_4086 -> m3_4087  [key=0, style=solid];
m3_4086 -> m3_36  [key=2, style=dotted];
m3_4086 -> m3_4088  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_4087 -> m3_4085  [key=0, style=bold, color=blue];
m3_1033 -> m3_1034  [key=0, style=solid];
m3_1034 -> m3_1035  [key=0, style=solid];
m3_1034 -> m3_36  [key=2, style=dotted];
m3_1034 -> m3_1036  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1035 -> m3_1033  [key=0, style=bold, color=blue];
m3_417 -> m3_418  [key=0, style=solid];
m3_418 -> m3_419  [key=0, style=solid];
m3_418 -> m3_422  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_419 -> m3_420  [key=0, style=solid];
m3_419 -> m3_36  [key=2, style=dotted];
m3_419 -> m3_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_420 -> m3_417  [key=0, style=bold, color=blue];
m3_2448 -> m3_2449  [key=0, style=solid];
m3_2449 -> m3_2450  [key=0, style=solid];
m3_2450 -> m3_2451  [key=0, style=solid];
m3_2450 -> m3_151  [key=2, style=dotted];
m3_2450 -> m3_272  [key=2, style=dotted];
m3_2450 -> m3_2452  [key=1, style=dashed, color=darkseagreen4, label=dic];
m3_2451 -> m3_2452  [key=0, style=solid];
m3_2451 -> m3_353  [key=2, style=dotted];
m3_2451 -> m3_25  [key=2, style=dotted];
m3_2452 -> m3_2453  [key=0, style=solid];
m3_2452 -> m3_25  [key=2, style=dotted];
m3_2453 -> m3_2448  [key=0, style=bold, color=blue];
m3_973 -> m3_974  [key=0, style=solid];
m3_974 -> m3_975  [key=0, style=solid];
m3_975 -> m3_976  [key=0, style=solid];
m3_975 -> m3_916  [key=2, style=dotted];
m3_976 -> m3_977  [key=0, style=solid];
m3_976 -> m3_978  [key=2, style=dotted];
m3_976 -> m3_25  [key=2, style=dotted];
m3_977 -> m3_973  [key=0, style=bold, color=blue];
m3_4038 -> m3_4039  [key=0, style=solid];
m3_4039 -> m3_4040  [key=0, style=solid];
m3_4039 -> m3_4044  [key=2, style=dotted];
m3_4040 -> m3_4041  [key=0, style=solid];
m3_4040 -> m3_16  [key=2, style=dotted];
m3_4040 -> m3_4042  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4041 -> m3_4042  [key=0, style=solid];
m3_4041 -> m3_17  [key=2, style=dotted];
m3_4042 -> m3_4043  [key=0, style=solid];
m3_4042 -> m3_24  [key=2, style=dotted];
m3_4043 -> m3_4038  [key=0, style=bold, color=blue];
m3_1478 -> m3_1479  [key=0, style=solid];
m3_1479 -> m3_1480  [key=0, style=solid];
m3_1479 -> m3_1484  [key=2, style=dotted];
m3_1479 -> m3_1481  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m3_1480 -> m3_1481  [key=0, style=solid];
m3_1480 -> m3_1485  [key=2, style=dotted];
m3_1481 -> m3_1482  [key=0, style=solid];
m3_1481 -> m3_105  [key=2, style=dotted];
m3_1481 -> m3_1487  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m3_1482 -> m3_1483  [key=0, style=solid];
m3_1482 -> m3_36  [key=2, style=dotted];
m3_1482 -> m3_1486  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1483 -> m3_1478  [key=0, style=bold, color=blue];
m3_4193 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired"];
m3_4193 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired"];
m3_4194 -> m3_226  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_4195 -> m3_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass"];
m3_4196 -> m3_248  [key=1, style=dashed, color=darkseagreen4, label=c1];
m3_4197 -> m3_256  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver"];
m3_4198 -> m3_284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem"];
m3_4199 -> m3_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse"];
m3_4200 -> m3_422  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4201 -> m3_589  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m3_4202 -> m3_664  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_665  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_666  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_667  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_668  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_671  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_674  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_675  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_676  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_678  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_679  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_685  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_687  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_688  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_689  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_690  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_691  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_692  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4202 -> m3_693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m3_4203 -> m3_822  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m3_4203 -> m3_823  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m3_4203 -> m3_826  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m3_4204 -> m3_846  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m3_4204 -> m3_867  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m3_4204 -> m3_877  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m3_4204 -> m3_3456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m3_4204 -> m3_3462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m3_4204 -> m3_3463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m3_4205 -> m3_1045  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4206 -> m3_1487  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m3_4207 -> m3_1529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass"];
m3_4208 -> m3_1541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass"];
m3_4209 -> m3_1625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_4209 -> m3_1626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_4209 -> m3_1627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_4209 -> m3_1628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_4209 -> m3_1631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m3_4210 -> m3_1735  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4211 -> m3_1762  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4212 -> m3_1769  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4213 -> m3_1776  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4214 -> m3_1783  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4215 -> m3_1790  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4216 -> m3_1797  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4217 -> m3_1804  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4218 -> m3_1811  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4219 -> m3_1825  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4220 -> m3_1833  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4221 -> m3_1957  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m3_4221 -> m3_1958  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m3_4222 -> m3_1973  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m3_4222 -> m3_1976  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m3_4222 -> m3_1979  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m3_4223 -> m3_2012  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4224 -> m3_2016  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m3_4225 -> m3_2045  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1"];
m3_4226 -> m3_2047  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2"];
m3_4227 -> m3_2074  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2079  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2082  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2085  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2089  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2093  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2097  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2115  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4227 -> m3_2123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m3_4228 -> m3_2136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2146  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2181  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2184  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2185  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4228 -> m3_2192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m3_4229 -> m3_2247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m3_4229 -> m3_2248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m3_4230 -> m3_2303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_4230 -> m3_2304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_4230 -> m3_2305  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_4230 -> m3_2306  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_4230 -> m3_2307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_4230 -> m3_2308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_4230 -> m3_2309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_4230 -> m3_2310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m3_4231 -> m3_2314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4231 -> m3_2315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4231 -> m3_2316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4231 -> m3_2317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4231 -> m3_2318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4231 -> m3_2319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4231 -> m3_2320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4231 -> m3_2321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4231 -> m3_2322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4231 -> m3_2323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m3_4232 -> m3_2405  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4233 -> m3_2438  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m3_4233 -> m3_2439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m3_4234 -> m3_2455  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey"];
m3_4235 -> m3_2492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass"];
m3_4236 -> m3_2521  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4237 -> m3_2620  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector"];
m3_4238 -> m3_2637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m3_4239 -> m3_2642  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base"];
m3_4241 -> m3_2656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m3_4242 -> m3_2758  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m3_4242 -> m3_2759  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m3_4243 -> m3_2762  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor"];
m3_4244 -> m3_2810  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m3_4244 -> m3_2811  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m3_4245 -> m3_2826  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m3_4245 -> m3_2827  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m3_4246 -> m3_2872  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m3_4246 -> m3_2873  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m3_4246 -> m3_2874  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m3_4246 -> m3_2877  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m3_4246 -> m3_2880  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m3_4247 -> m3_2904  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m3_4248 -> m3_3067  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4249 -> m3_3091  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4250 -> m3_3105  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4251 -> m3_3354  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_4252 -> m3_3369  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_4253 -> m3_3384  [key=1, style=dashed, color=darkseagreen4, label=errors];
m3_4254 -> m3_3512  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4255 -> m3_3512  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_4256 -> m3_3572  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m3_4257 -> m3_3575  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>"];
m3_4258 -> m3_3614  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4259 -> m3_3625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m3_4260 -> m3_3712  [key=1, style=dashed, color=darkseagreen4, label=json];
m3_4261 -> m3_3782  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor"];
m3_4262 -> m3_3874  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m3_4262 -> m3_3876  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m3_4262 -> m3_3878  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m3_4262 -> m3_3880  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m3_4262 -> m3_3903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m3_4262 -> m3_3906  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m3_4262 -> m3_3909  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m3_4263 -> m3_4062  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType"];
m3_4264 -> m3_4065  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType"];
m3_4265 -> m3_4109  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m3_4266 -> m3_4165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DecimalTest"];
m3_4267 -> m3_4168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor"];
m3_4267 -> m3_4171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor"];
m3_4267 -> m3_4172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor"];
m3_4268 -> m3_4175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor"];
m3_4268 -> m3_4178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor"];
m3_4268 -> m3_4179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor"];
m3_4269 -> m3_4182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m3_4269 -> m3_4183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m3_4269 -> m3_4186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m3_4269 -> m3_4187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m3_4269 -> m3_4188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m4_561 -> m4_811  [key=0, style=solid];
m4_811 -> m4_812  [key=0, style=solid];
m4_811 -> m4_813  [key=0, style=solid];
m4_811 -> m4_635  [key=2, style=dotted];
m4_812 -> m4_814  [key=0, style=solid];
m4_812 -> m4_462  [key=2, style=dotted];
m4_813 -> m4_814  [key=0, style=solid];
m4_813 -> m4_188  [key=2, style=dotted];
m4_814 -> m4_561  [key=0, style=bold, color=blue];
m4_147 -> m4_148  [key=0, style=solid];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_150  [key=2, style=dotted];
m4_149 -> m4_147  [key=0, style=bold, color=blue];
m4_131 -> m4_132  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_134  [key=2, style=dotted];
m4_133 -> m4_131  [key=0, style=bold, color=blue];
m4_459 -> m4_463  [key=0, style=solid];
m4_459 -> m4_432  [key=3, color=darkorchid, style=bold, label="Parameter variable char value"];
m4_459 -> m4_51  [key=3, color=darkorchid, style=bold, label="Parameter variable char value"];
m4_463 -> m4_464  [key=0, style=solid];
m4_463 -> m4_465  [key=2, style=dotted];
m4_464 -> m4_459  [key=0, style=bold, color=blue];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_15  [key=0, style=bold, color=blue];
m4_567 -> m4_827  [key=0, style=solid];
m4_827 -> m4_828  [key=0, style=solid];
m4_827 -> m4_831  [key=0, style=solid];
m4_827 -> m4_635  [key=2, style=dotted];
m4_828 -> m4_829  [key=0, style=solid];
m4_828 -> m4_830  [key=0, style=solid];
m4_831 -> m4_832  [key=0, style=solid];
m4_831 -> m4_188  [key=2, style=dotted];
m4_829 -> m4_832  [key=0, style=solid];
m4_829 -> m4_833  [key=2, style=dotted];
m4_830 -> m4_832  [key=0, style=solid];
m4_830 -> m4_462  [key=2, style=dotted];
m4_832 -> m4_567  [key=0, style=bold, color=blue];
m4_186 -> m4_726  [key=0, style=solid];
m4_726 -> m4_727  [key=0, style=solid];
m4_727 -> m4_728  [key=0, style=solid];
m4_727 -> m4_729  [key=0, style=solid];
m4_727 -> m4_104  [key=2, style=dotted];
m4_728 -> m4_769  [key=0, style=solid];
m4_728 -> m4_188  [key=2, style=dotted];
m4_729 -> m4_730  [key=0, style=solid];
m4_729 -> m4_743  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_729 -> m4_750  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_729 -> m4_757  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_729 -> m4_762  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_730 -> m4_731  [key=0, style=solid];
m4_730 -> m4_732  [key=0, style=solid];
m4_743 -> m4_744  [key=0, style=solid];
m4_743 -> m4_745  [key=0, style=solid];
m4_750 -> m4_751  [key=0, style=solid];
m4_750 -> m4_738  [key=0, style=solid];
m4_757 -> m4_758  [key=0, style=solid];
m4_757 -> m4_760  [key=0, style=solid];
m4_762 -> m4_763  [key=0, style=solid];
m4_762 -> m4_765  [key=0, style=solid];
m4_731 -> m4_735  [key=0, style=solid];
m4_731 -> m4_743  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_731 -> m4_750  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_731 -> m4_757  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_731 -> m4_762  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_732 -> m4_733  [key=0, style=solid];
m4_732 -> m4_734  [key=0, style=solid];
m4_733 -> m4_735  [key=0, style=solid];
m4_733 -> m4_743  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_733 -> m4_750  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_733 -> m4_757  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_733 -> m4_762  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m4_734 -> m4_769  [key=0, style=solid];
m4_734 -> m4_187  [key=2, style=dotted];
m4_734 -> m4_188  [key=2, style=dotted];
m4_735 -> m4_736  [key=0, style=solid];
m4_736 -> m4_737  [key=0, style=solid];
m4_736 -> m4_745  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_736 -> m4_753  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_736 -> m4_758  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_736 -> m4_763  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_737 -> m4_738  [key=0, style=solid];
m4_737 -> m4_29  [key=3, color=darkorchid, style=bold, label="Local variable bool commentFinished"];
m4_745 -> m4_746  [key=0, style=solid];
m4_745 -> m4_294  [key=2, style=dotted];
m4_753 -> m4_754  [key=0, style=solid];
m4_753 -> m4_294  [key=2, style=dotted];
m4_758 -> m4_759  [key=0, style=solid];
m4_758 -> m4_294  [key=2, style=dotted];
m4_763 -> m4_764  [key=0, style=solid];
m4_763 -> m4_294  [key=2, style=dotted];
m4_738 -> m4_739  [key=0, style=solid];
m4_738 -> m4_767  [key=0, style=solid];
m4_739 -> m4_740  [key=0, style=solid];
m4_739 -> m4_748  [key=0, style=solid];
m4_739 -> m4_756  [key=0, style=solid];
m4_739 -> m4_761  [key=0, style=solid];
m4_739 -> m4_766  [key=0, style=solid];
m4_767 -> m4_768  [key=0, style=solid];
m4_767 -> m4_54  [key=2, style=dotted];
m4_767 -> m4_462  [key=2, style=dotted];
m4_740 -> m4_741  [key=0, style=solid];
m4_748 -> m4_749  [key=0, style=solid];
m4_756 -> m4_757  [key=0, style=solid];
m4_761 -> m4_762  [key=0, style=solid];
m4_766 -> m4_738  [key=0, style=solid];
m4_741 -> m4_742  [key=0, style=solid];
m4_741 -> m4_747  [key=0, style=solid];
m4_742 -> m4_743  [key=0, style=solid];
m4_742 -> m4_738  [key=0, style=solid];
m4_742 -> m4_71  [key=2, style=dotted];
m4_747 -> m4_738  [key=0, style=solid];
m4_744 -> m4_769  [key=0, style=solid];
m4_744 -> m4_188  [key=2, style=dotted];
m4_746 -> m4_738  [key=0, style=solid];
m4_749 -> m4_750  [key=0, style=solid];
m4_751 -> m4_752  [key=0, style=solid];
m4_751 -> m4_738  [key=0, style=solid];
m4_751 -> m4_104  [key=2, style=dotted];
m4_752 -> m4_753  [key=0, style=solid];
m4_752 -> m4_738  [key=0, style=solid];
m4_754 -> m4_755  [key=0, style=solid];
m4_755 -> m4_738  [key=0, style=solid];
m4_760 -> m4_738  [key=0, style=solid];
m4_760 -> m4_292  [key=2, style=dotted];
m4_759 -> m4_760  [key=0, style=solid];
m4_765 -> m4_738  [key=0, style=solid];
m4_765 -> m4_293  [key=2, style=dotted];
m4_764 -> m4_765  [key=0, style=solid];
m4_768 -> m4_769  [key=0, style=solid];
m4_768 -> m4_359  [key=2, style=dotted];
m4_769 -> m4_186  [key=0, style=bold, color=blue];
m4_563 -> m4_815  [key=0, style=solid];
m4_815 -> m4_816  [key=0, style=solid];
m4_815 -> m4_817  [key=0, style=solid];
m4_815 -> m4_635  [key=2, style=dotted];
m4_816 -> m4_818  [key=0, style=solid];
m4_816 -> m4_130  [key=2, style=dotted];
m4_817 -> m4_818  [key=0, style=solid];
m4_817 -> m4_188  [key=2, style=dotted];
m4_818 -> m4_563  [key=0, style=bold, color=blue];
m4_635 -> m4_781  [key=0, style=solid];
m4_635 -> m4_599  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m4_635 -> m4_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValueWithTrailingSeparator"];
m4_635 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValueWithTrailingSeparator"];
m4_781 -> m4_782  [key=0, style=solid];
m4_781 -> m4_770  [key=2, style=dotted];
m4_782 -> m4_783  [key=0, style=solid];
m4_782 -> m4_784  [key=0, style=solid];
m4_783 -> m4_787  [key=0, style=solid];
m4_784 -> m4_785  [key=0, style=solid];
m4_784 -> m4_786  [key=0, style=solid];
m4_784 -> m4_104  [key=2, style=dotted];
m4_785 -> m4_787  [key=0, style=solid];
m4_786 -> m4_787  [key=0, style=solid];
m4_786 -> m4_788  [key=2, style=dotted];
m4_787 -> m4_635  [key=0, style=bold, color=blue];
m4_129 -> m4_155  [key=0, style=solid];
m4_129 -> m4_182  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadInternal"];
m4_129 -> m4_183  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadInternal"];
m4_129 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadInternal"];
m4_129 -> m4_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadInternal"];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_181  [key=0, style=solid];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_164  [key=0, style=solid];
m4_156 -> m4_167  [key=0, style=solid];
m4_156 -> m4_170  [key=0, style=solid];
m4_156 -> m4_180  [key=0, style=solid];
m4_157 -> m4_158  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_167 -> m4_168  [key=0, style=solid];
m4_170 -> m4_171  [key=0, style=solid];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_187  [key=2, style=dotted];
m4_180 -> m4_188  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_159 -> m4_160  [key=0, style=solid];
m4_160 -> m4_161  [key=0, style=solid];
m4_161 -> m4_162  [key=0, style=solid];
m4_162 -> m4_163  [key=0, style=solid];
m4_163 -> m4_181  [key=0, style=solid];
m4_163 -> m4_182  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_166 -> m4_181  [key=0, style=solid];
m4_166 -> m4_183  [key=2, style=dotted];
m4_168 -> m4_169  [key=0, style=solid];
m4_168 -> m4_155  [key=0, style=solid];
m4_168 -> m4_184  [key=2, style=dotted];
m4_169 -> m4_181  [key=0, style=solid];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_179  [key=0, style=solid];
m4_171 -> m4_104  [key=2, style=dotted];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_185  [key=2, style=dotted];
m4_179 -> m4_181  [key=0, style=solid];
m4_173 -> m4_174  [key=0, style=solid];
m4_173 -> m4_175  [key=0, style=solid];
m4_174 -> m4_181  [key=0, style=solid];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_178  [key=0, style=solid];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_186  [key=2, style=dotted];
m4_178 -> m4_181  [key=0, style=solid];
m4_178 -> m4_187  [key=2, style=dotted];
m4_178 -> m4_188  [key=2, style=dotted];
m4_177 -> m4_181  [key=0, style=solid];
m4_181 -> m4_129  [key=0, style=bold, color=blue];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_109 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_109 -> m4_104  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_109 -> m4_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadChars"];
m4_109 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadChars"];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_112  [key=0, style=solid];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m4_112 -> m4_117  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m4_112 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_74  [key=2, style=dotted];
m4_114 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m4_111 -> m4_121  [key=0, style=solid];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m4_113 -> m4_81  [key=3, color=darkorchid, style=bold, label="Local variable int totalCharsRead"];
m4_117 -> m4_113  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_120  [key=0, style=solid];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m4_116 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_118  [key=0, style=solid];
m4_119 -> m4_121  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_121 -> m4_109  [key=0, style=bold, color=blue];
m4_566 -> m4_834  [key=0, style=solid];
m4_834 -> m4_835  [key=0, style=solid];
m4_834 -> m4_838  [key=0, style=solid];
m4_834 -> m4_635  [key=2, style=dotted];
m4_835 -> m4_836  [key=0, style=solid];
m4_835 -> m4_837  [key=0, style=solid];
m4_838 -> m4_839  [key=0, style=solid];
m4_838 -> m4_188  [key=2, style=dotted];
m4_836 -> m4_839  [key=0, style=solid];
m4_836 -> m4_833  [key=2, style=dotted];
m4_837 -> m4_839  [key=0, style=solid];
m4_837 -> m4_462  [key=2, style=dotted];
m4_839 -> m4_566  [key=0, style=bold, color=blue];
m4_846 -> m4_847  [key=0, style=solid];
m4_847 -> m4_848  [key=0, style=solid];
m4_847 -> m4_853  [key=2, style=dotted];
m4_848 -> m4_849  [key=0, style=solid];
m4_848 -> m4_850  [key=0, style=solid];
m4_849 -> m4_850  [key=0, style=solid];
m4_849 -> m4_854  [key=2, style=dotted];
m4_850 -> m4_851  [key=0, style=solid];
m4_850 -> m4_852  [key=0, style=solid];
m4_851 -> m4_852  [key=0, style=solid];
m4_851 -> m4_855  [key=2, style=dotted];
m4_852 -> m4_846  [key=0, style=bold, color=blue];
m4_151 -> m4_152  [key=0, style=solid];
m4_152 -> m4_153  [key=0, style=solid];
m4_152 -> m4_154  [key=2, style=dotted];
m4_153 -> m4_151  [key=0, style=bold, color=blue];
m4_183 -> m4_405  [key=0, style=solid];
m4_183 -> m4_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m4_183 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m4_183 -> m4_431  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m4_405 -> m4_406  [key=0, style=solid];
m4_405 -> m4_430  [key=0, style=solid];
m4_406 -> m4_407  [key=0, style=solid];
m4_406 -> m4_427  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_407 -> m4_408  [key=0, style=solid];
m4_407 -> m4_413  [key=0, style=solid];
m4_407 -> m4_417  [key=0, style=solid];
m4_407 -> m4_420  [key=0, style=solid];
m4_407 -> m4_422  [key=0, style=solid];
m4_407 -> m4_424  [key=0, style=solid];
m4_407 -> m4_427  [key=0, style=solid];
m4_427 -> m4_428  [key=0, style=solid];
m4_427 -> m4_429  [key=0, style=solid];
m4_427 -> m4_358  [key=2, style=dotted];
m4_408 -> m4_409  [key=0, style=solid];
m4_413 -> m4_414  [key=0, style=solid];
m4_417 -> m4_418  [key=0, style=solid];
m4_420 -> m4_421  [key=0, style=solid];
m4_422 -> m4_423  [key=0, style=solid];
m4_424 -> m4_425  [key=0, style=solid];
m4_409 -> m4_410  [key=0, style=solid];
m4_409 -> m4_412  [key=0, style=solid];
m4_410 -> m4_411  [key=0, style=solid];
m4_410 -> m4_405  [key=0, style=solid];
m4_410 -> m4_71  [key=2, style=dotted];
m4_412 -> m4_405  [key=0, style=solid];
m4_411 -> m4_430  [key=0, style=solid];
m4_414 -> m4_415  [key=0, style=solid];
m4_414 -> m4_130  [key=2, style=dotted];
m4_415 -> m4_416  [key=0, style=solid];
m4_416 -> m4_430  [key=0, style=solid];
m4_418 -> m4_419  [key=0, style=solid];
m4_418 -> m4_186  [key=2, style=dotted];
m4_419 -> m4_430  [key=0, style=solid];
m4_421 -> m4_405  [key=0, style=solid];
m4_421 -> m4_292  [key=2, style=dotted];
m4_423 -> m4_405  [key=0, style=solid];
m4_423 -> m4_293  [key=2, style=dotted];
m4_425 -> m4_426  [key=0, style=solid];
m4_426 -> m4_405  [key=0, style=solid];
m4_428 -> m4_405  [key=0, style=solid];
m4_429 -> m4_430  [key=0, style=solid];
m4_429 -> m4_431  [key=2, style=dotted];
m4_430 -> m4_183  [key=0, style=bold, color=blue];
m4_721 -> m4_723  [key=0, style=solid];
m4_721 -> m4_693  [key=3, color=darkorchid, style=bold, label="Parameter variable string number"];
m4_723 -> m4_724  [key=0, style=solid];
m4_723 -> m4_725  [key=2, style=dotted];
m4_724 -> m4_721  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextReader"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_2 -> m4_6  [key=0, style=solid];
m4_2 -> m4_7  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_0  [key=0, style=bold, color=blue];
m4_50 -> m4_189  [key=0, style=solid];
m4_50 -> m4_200  [key=1, style=dashed, color=darkseagreen4, label=char];
m4_50 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label=char];
m4_50 -> m4_275  [key=1, style=dashed, color=darkseagreen4, label=char];
m4_50 -> m4_19  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m4_50 -> m4_433  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_194  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_200 -> m4_287  [key=0, style=solid];
m4_200 -> m4_187  [key=2, style=dotted];
m4_200 -> m4_188  [key=2, style=dotted];
m4_205 -> m4_287  [key=0, style=solid];
m4_205 -> m4_187  [key=2, style=dotted];
m4_205 -> m4_188  [key=2, style=dotted];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_193  [key=0, style=solid];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_277  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_190 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_201  [key=0, style=solid];
m4_194 -> m4_265  [key=0, style=solid];
m4_194 -> m4_269  [key=0, style=solid];
m4_194 -> m4_273  [key=0, style=solid];
m4_194 -> m4_194  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_194 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_194 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_194 -> m4_202  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_194 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_194 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_194 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_194 -> m4_211  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m4_191 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m4_191 -> m4_189  [key=3, color=darkorchid, style=bold, label="Local variable int lastWritePosition"];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_279  [key=0, style=solid];
m4_278 -> m4_284  [key=0, style=solid];
m4_278 -> m4_294  [key=2, style=dotted];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_251  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_192 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_192 -> m4_261  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_192 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_192 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_192 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_192 -> m4_283  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_192 -> m4_192  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Utilities.StringBuffer buffer"];
m4_192 -> m4_8  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Utilities.StringBuffer buffer"];
m4_253 -> m4_254  [key=0, style=solid];
m4_253 -> m4_291  [key=2, style=dotted];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_291  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_287  [key=0, style=solid];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_253  [key=0, style=solid];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_263  [key=0, style=solid];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_281  [key=0, style=solid];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_295  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_294  [key=2, style=dotted];
m4_283 -> m4_296  [key=2, style=dotted];
m4_195 -> m4_196  [key=0, style=solid];
m4_201 -> m4_202  [key=0, style=solid];
m4_265 -> m4_266  [key=0, style=solid];
m4_269 -> m4_270  [key=0, style=solid];
m4_273 -> m4_274  [key=0, style=solid];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_193  [key=0, style=solid];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_197  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_197 -> m4_199  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_197 -> m4_202  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_197 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_197 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_197 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_197 -> m4_211  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_202 -> m4_203  [key=0, style=solid];
m4_204 -> m4_205  [key=0, style=solid];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m4_206 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_207 -> m4_231  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_207 -> m4_260  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_211  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_211 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_193  [key=0, style=solid];
m4_198 -> m4_71  [key=2, style=dotted];
m4_199 -> m4_200  [key=0, style=solid];
m4_203 -> m4_204  [key=0, style=solid];
m4_203 -> m4_206  [key=0, style=solid];
m4_203 -> m4_104  [key=2, style=dotted];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_207  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m4_208 -> m4_288  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_213  [key=0, style=solid];
m4_209 -> m4_216  [key=0, style=solid];
m4_209 -> m4_219  [key=0, style=solid];
m4_209 -> m4_222  [key=0, style=solid];
m4_209 -> m4_225  [key=0, style=solid];
m4_209 -> m4_228  [key=0, style=solid];
m4_209 -> m4_233  [key=0, style=solid];
m4_209 -> m4_258  [key=0, style=solid];
m4_231 -> m4_232  [key=0, style=solid];
m4_260 -> m4_287  [key=0, style=solid];
m4_260 -> m4_187  [key=2, style=dotted];
m4_260 -> m4_188  [key=2, style=dotted];
m4_210 -> m4_211  [key=0, style=solid];
m4_213 -> m4_214  [key=0, style=solid];
m4_216 -> m4_217  [key=0, style=solid];
m4_219 -> m4_220  [key=0, style=solid];
m4_222 -> m4_223  [key=0, style=solid];
m4_225 -> m4_226  [key=0, style=solid];
m4_228 -> m4_229  [key=0, style=solid];
m4_233 -> m4_234  [key=0, style=solid];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_258 -> m4_264  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_258 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_212 -> m4_261  [key=0, style=solid];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_214  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_214 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_215 -> m4_261  [key=0, style=solid];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_217  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_217 -> m4_220  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_218 -> m4_261  [key=0, style=solid];
m4_220 -> m4_221  [key=0, style=solid];
m4_220 -> m4_220  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_220 -> m4_223  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_221 -> m4_261  [key=0, style=solid];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_223  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_223 -> m4_226  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_224 -> m4_261  [key=0, style=solid];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_226  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_226 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_227 -> m4_261  [key=0, style=solid];
m4_232 -> m4_261  [key=0, style=solid];
m4_232 -> m4_232  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_232 -> m4_234  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_229 -> m4_230  [key=0, style=solid];
m4_230 -> m4_231  [key=0, style=solid];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_234  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_235 -> m4_236  [key=0, style=solid];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_288  [key=2, style=dotted];
m4_236 -> m4_239  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m4_236 -> m4_243  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m4_236 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m4_237 -> m4_238  [key=0, style=solid];
m4_237 -> m4_239  [key=0, style=solid];
m4_237 -> m4_289  [key=2, style=dotted];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_257  [key=0, style=solid];
m4_239 -> m4_290  [key=2, style=dotted];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m4_243 -> m4_208  [key=3, color=darkorchid, style=bold, label="Local variable char highSurrogate"];
m4_238 -> m4_257  [key=0, style=solid];
m4_238 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m4_240 -> m4_241  [key=0, style=solid];
m4_257 -> m4_261  [key=0, style=solid];
m4_257 -> m4_258  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_256  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m4_242 -> m4_243  [key=0, style=solid];
m4_242 -> m4_255  [key=0, style=solid];
m4_242 -> m4_104  [key=2, style=dotted];
m4_256 -> m4_240  [key=0, style=solid];
m4_256 -> m4_257  [key=0, style=solid];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m4_244 -> m4_245  [key=0, style=solid];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_288  [key=2, style=dotted];
m4_245 -> m4_247  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m4_245 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_251  [key=0, style=solid];
m4_246 -> m4_289  [key=2, style=dotted];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_250  [key=0, style=solid];
m4_247 -> m4_290  [key=2, style=dotted];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m4_249 -> m4_251  [key=0, style=solid];
m4_249 -> m4_256  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_8  [key=2, style=dotted];
m4_252 -> m4_261  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_252 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_252 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_252 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_252 -> m4_283  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_254 -> m4_256  [key=0, style=solid];
m4_254 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m4_259 -> m4_260  [key=0, style=solid];
m4_264 -> m4_193  [key=0, style=solid];
m4_264 -> m4_277  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m4_264 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m4_264 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m4_266 -> m4_267  [key=0, style=solid];
m4_262 -> m4_263  [key=0, style=solid];
m4_262 -> m4_8  [key=2, style=dotted];
m4_262 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_262 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_262 -> m4_283  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_292  [key=2, style=dotted];
m4_268 -> m4_193  [key=0, style=solid];
m4_268 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_270 -> m4_271  [key=0, style=solid];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_293  [key=2, style=dotted];
m4_272 -> m4_193  [key=0, style=solid];
m4_272 -> m4_275  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_272 -> m4_276  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_274 -> m4_275  [key=0, style=solid];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_276  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_276 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_276 -> m4_281  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_276 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_276 -> m4_284  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_283  [key=0, style=solid];
m4_284 -> m4_285  [key=0, style=solid];
m4_284 -> m4_284  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_8  [key=2, style=dotted];
m4_280 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_280 -> m4_283  [key=1, style=dashed, color=darkseagreen4, label=buffer];
m4_285 -> m4_286  [key=0, style=solid];
m4_286 -> m4_287  [key=0, style=solid];
m4_287 -> m4_50  [key=0, style=bold, color=blue];
m4_135 -> m4_136  [key=0, style=solid];
m4_136 -> m4_137  [key=0, style=solid];
m4_136 -> m4_138  [key=2, style=dotted];
m4_137 -> m4_135  [key=0, style=bold, color=blue];
m4_139 -> m4_140  [key=0, style=solid];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_142  [key=2, style=dotted];
m4_141 -> m4_139  [key=0, style=bold, color=blue];
m4_184 -> m4_365  [key=0, style=solid];
m4_184 -> m4_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParsePostValue"];
m4_184 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParsePostValue"];
m4_365 -> m4_366  [key=0, style=solid];
m4_365 -> m4_403  [key=0, style=solid];
m4_366 -> m4_367  [key=0, style=solid];
m4_366 -> m4_400  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_366 -> m4_402  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_367 -> m4_368  [key=0, style=solid];
m4_367 -> m4_374  [key=0, style=solid];
m4_367 -> m4_378  [key=0, style=solid];
m4_367 -> m4_382  [key=0, style=solid];
m4_367 -> m4_386  [key=0, style=solid];
m4_367 -> m4_389  [key=0, style=solid];
m4_367 -> m4_393  [key=0, style=solid];
m4_367 -> m4_396  [key=0, style=solid];
m4_367 -> m4_398  [key=0, style=solid];
m4_367 -> m4_400  [key=0, style=solid];
m4_400 -> m4_401  [key=0, style=solid];
m4_400 -> m4_402  [key=0, style=solid];
m4_400 -> m4_358  [key=2, style=dotted];
m4_402 -> m4_403  [key=0, style=solid];
m4_402 -> m4_187  [key=2, style=dotted];
m4_402 -> m4_188  [key=2, style=dotted];
m4_368 -> m4_369  [key=0, style=solid];
m4_374 -> m4_375  [key=0, style=solid];
m4_378 -> m4_379  [key=0, style=solid];
m4_382 -> m4_383  [key=0, style=solid];
m4_386 -> m4_387  [key=0, style=solid];
m4_389 -> m4_390  [key=0, style=solid];
m4_393 -> m4_394  [key=0, style=solid];
m4_396 -> m4_397  [key=0, style=solid];
m4_398 -> m4_399  [key=0, style=solid];
m4_369 -> m4_370  [key=0, style=solid];
m4_369 -> m4_373  [key=0, style=solid];
m4_370 -> m4_371  [key=0, style=solid];
m4_370 -> m4_365  [key=0, style=solid];
m4_370 -> m4_71  [key=2, style=dotted];
m4_373 -> m4_365  [key=0, style=solid];
m4_371 -> m4_372  [key=0, style=solid];
m4_372 -> m4_403  [key=0, style=solid];
m4_375 -> m4_376  [key=0, style=solid];
m4_376 -> m4_377  [key=0, style=solid];
m4_376 -> m4_130  [key=2, style=dotted];
m4_377 -> m4_403  [key=0, style=solid];
m4_379 -> m4_380  [key=0, style=solid];
m4_380 -> m4_381  [key=0, style=solid];
m4_380 -> m4_130  [key=2, style=dotted];
m4_381 -> m4_403  [key=0, style=solid];
m4_383 -> m4_384  [key=0, style=solid];
m4_384 -> m4_385  [key=0, style=solid];
m4_384 -> m4_130  [key=2, style=dotted];
m4_385 -> m4_403  [key=0, style=solid];
m4_387 -> m4_388  [key=0, style=solid];
m4_387 -> m4_186  [key=2, style=dotted];
m4_388 -> m4_403  [key=0, style=solid];
m4_390 -> m4_391  [key=0, style=solid];
m4_391 -> m4_392  [key=0, style=solid];
m4_391 -> m4_404  [key=2, style=dotted];
m4_392 -> m4_403  [key=0, style=solid];
m4_394 -> m4_395  [key=0, style=solid];
m4_395 -> m4_365  [key=0, style=solid];
m4_397 -> m4_365  [key=0, style=solid];
m4_397 -> m4_292  [key=2, style=dotted];
m4_399 -> m4_365  [key=0, style=solid];
m4_399 -> m4_293  [key=2, style=dotted];
m4_401 -> m4_365  [key=0, style=solid];
m4_403 -> m4_184  [key=0, style=bold, color=blue];
m4_788 -> m4_789  [key=0, style=solid];
m4_788 -> m4_807  [key=1, style=dashed, color=darkseagreen4, label=char];
m4_788 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSeparator"];
m4_788 -> m4_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSeparator"];
m4_789 -> m4_790  [key=0, style=solid];
m4_789 -> m4_794  [key=0, style=solid];
m4_789 -> m4_799  [key=0, style=solid];
m4_789 -> m4_802  [key=0, style=solid];
m4_789 -> m4_807  [key=0, style=solid];
m4_807 -> m4_808  [key=0, style=solid];
m4_807 -> m4_809  [key=0, style=solid];
m4_807 -> m4_358  [key=2, style=dotted];
m4_790 -> m4_791  [key=0, style=solid];
m4_794 -> m4_795  [key=0, style=solid];
m4_799 -> m4_800  [key=0, style=solid];
m4_802 -> m4_803  [key=0, style=solid];
m4_791 -> m4_792  [key=0, style=solid];
m4_792 -> m4_793  [key=0, style=solid];
m4_793 -> m4_810  [key=0, style=solid];
m4_795 -> m4_796  [key=0, style=solid];
m4_795 -> m4_797  [key=0, style=solid];
m4_795 -> m4_104  [key=2, style=dotted];
m4_796 -> m4_810  [key=0, style=solid];
m4_797 -> m4_798  [key=0, style=solid];
m4_798 -> m4_810  [key=0, style=solid];
m4_800 -> m4_801  [key=0, style=solid];
m4_800 -> m4_809  [key=0, style=solid];
m4_801 -> m4_810  [key=0, style=solid];
m4_809 -> m4_810  [key=0, style=solid];
m4_803 -> m4_804  [key=0, style=solid];
m4_804 -> m4_805  [key=0, style=solid];
m4_805 -> m4_806  [key=0, style=solid];
m4_806 -> m4_810  [key=0, style=solid];
m4_808 -> m4_810  [key=0, style=solid];
m4_810 -> m4_788  [key=0, style=bold, color=blue];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m4_56 -> m4_81  [key=3, color=darkorchid, style=bold, label="Parameter variable int dstOffset"];
m4_56 -> m4_80  [key=3, color=darkorchid, style=bold, label="Parameter variable char[] dst"];
m4_56 -> m4_85  [key=3, color=darkorchid, style=bold, label="Parameter variable char[] dst"];
m4_56 -> m4_63  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m4_56 -> m4_83  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_57  [key=3, color=darkorchid, style=bold, label="Local variable int charByteCount"];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_60  [key=2, style=dotted];
m4_59 -> m4_56  [key=0, style=bold, color=blue];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label=char];
m4_19 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=char];
m4_19 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label=char];
m4_19 -> m4_484  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m4_20 -> m4_21  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_50  [key=2, style=dotted];
m4_33 -> m4_48  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_49  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_51  [key=2, style=dotted];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_30  [key=0, style=solid];
m4_25 -> m4_26  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_34  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_52  [key=2, style=dotted];
m4_29 -> m4_48  [key=0, style=solid];
m4_29 -> m4_53  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_54  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_54  [key=2, style=dotted];
m4_34 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=text];
m4_34 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label=text];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_53  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_46  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_46  [key=0, style=solid];
m4_43 -> m4_55  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_53  [key=2, style=dotted];
m4_36 -> m4_37  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_39  [key=0, style=solid];
m4_38 -> m4_42  [key=0, style=solid];
m4_38 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=dateParseHandling];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_41  [key=0, style=solid];
m4_40 -> m4_42  [key=0, style=solid];
m4_40 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=dateParseHandling];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=dateParseHandling];
m4_42 -> m4_43  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_53  [key=2, style=dotted];
m4_45 -> m4_48  [key=0, style=solid];
m4_48 -> m4_19  [key=0, style=bold, color=blue];
m4_359 -> m4_360  [key=0, style=solid];
m4_360 -> m4_361  [key=0, style=solid];
m4_360 -> m4_362  [key=0, style=solid];
m4_361 -> m4_362  [key=0, style=solid];
m4_362 -> m4_363  [key=0, style=solid];
m4_362 -> m4_364  [key=2, style=dotted];
m4_363 -> m4_359  [key=0, style=bold, color=blue];
m4_292 -> m4_574  [key=0, style=solid];
m4_292 -> m4_575  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_292 -> m4_23  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_292 -> m4_29  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_574 -> m4_575  [key=0, style=solid];
m4_575 -> m4_576  [key=0, style=solid];
m4_575 -> m4_577  [key=0, style=solid];
m4_575 -> m4_104  [key=2, style=dotted];
m4_576 -> m4_577  [key=0, style=solid];
m4_577 -> m4_578  [key=0, style=solid];
m4_577 -> m4_15  [key=2, style=dotted];
m4_578 -> m4_292  [key=0, style=bold, color=blue];
m4_185 -> m4_579  [key=0, style=solid];
m4_185 -> m4_597  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_185 -> m4_29  [key=3, color=darkorchid, style=bold, label="Parameter variable bool oneOrMore"];
m4_579 -> m4_580  [key=0, style=solid];
m4_579 -> m4_581  [key=1, style=dashed, color=darkseagreen4, label=finished];
m4_579 -> m4_29  [key=3, color=darkorchid, style=bold, label="Local variable bool finished"];
m4_597 -> m4_598  [key=0, style=solid];
m4_580 -> m4_581  [key=0, style=solid];
m4_580 -> m4_597  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m4_580 -> m4_29  [key=3, color=darkorchid, style=bold, label="Local variable bool ateWhitespace"];
m4_581 -> m4_582  [key=0, style=solid];
m4_581 -> m4_597  [key=0, style=solid];
m4_582 -> m4_583  [key=0, style=solid];
m4_582 -> m4_593  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_583 -> m4_584  [key=0, style=solid];
m4_583 -> m4_589  [key=0, style=solid];
m4_583 -> m4_591  [key=0, style=solid];
m4_583 -> m4_593  [key=0, style=solid];
m4_593 -> m4_594  [key=0, style=solid];
m4_593 -> m4_596  [key=0, style=solid];
m4_593 -> m4_358  [key=2, style=dotted];
m4_584 -> m4_585  [key=0, style=solid];
m4_589 -> m4_590  [key=0, style=solid];
m4_591 -> m4_592  [key=0, style=solid];
m4_585 -> m4_586  [key=0, style=solid];
m4_585 -> m4_588  [key=0, style=solid];
m4_586 -> m4_587  [key=0, style=solid];
m4_586 -> m4_581  [key=0, style=solid];
m4_586 -> m4_71  [key=2, style=dotted];
m4_588 -> m4_581  [key=0, style=solid];
m4_587 -> m4_581  [key=0, style=solid];
m4_590 -> m4_581  [key=0, style=solid];
m4_590 -> m4_292  [key=2, style=dotted];
m4_592 -> m4_581  [key=0, style=solid];
m4_592 -> m4_293  [key=2, style=dotted];
m4_594 -> m4_595  [key=0, style=solid];
m4_594 -> m4_597  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m4_596 -> m4_581  [key=0, style=solid];
m4_595 -> m4_581  [key=0, style=solid];
m4_598 -> m4_185  [key=0, style=bold, color=blue];
m4_143 -> m4_144  [key=0, style=solid];
m4_144 -> m4_145  [key=0, style=solid];
m4_144 -> m4_146  [key=2, style=dotted];
m4_145 -> m4_143  [key=0, style=bold, color=blue];
m4_564 -> m4_599  [key=0, style=solid];
m4_599 -> m4_600  [key=0, style=solid];
m4_599 -> m4_633  [key=0, style=solid];
m4_599 -> m4_635  [key=2, style=dotted];
m4_600 -> m4_601  [key=0, style=solid];
m4_600 -> m4_185  [key=2, style=dotted];
m4_633 -> m4_634  [key=0, style=solid];
m4_633 -> m4_188  [key=2, style=dotted];
m4_601 -> m4_602  [key=0, style=solid];
m4_601 -> m4_625  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_602 -> m4_603  [key=0, style=solid];
m4_602 -> m4_625  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m4_625 -> m4_626  [key=0, style=solid];
m4_625 -> m4_294  [key=2, style=dotted];
m4_603 -> m4_604  [key=0, style=solid];
m4_603 -> m4_625  [key=0, style=solid];
m4_604 -> m4_605  [key=0, style=solid];
m4_604 -> m4_611  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_604 -> m4_613  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_604 -> m4_616  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_604 -> m4_619  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_604 -> m4_622  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_604 -> m4_624  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_605 -> m4_606  [key=0, style=solid];
m4_605 -> m4_611  [key=0, style=solid];
m4_611 -> m4_612  [key=0, style=solid];
m4_611 -> m4_613  [key=0, style=solid];
m4_611 -> m4_465  [key=2, style=dotted];
m4_613 -> m4_614  [key=0, style=solid];
m4_613 -> m4_616  [key=0, style=solid];
m4_616 -> m4_617  [key=0, style=solid];
m4_616 -> m4_619  [key=0, style=solid];
m4_619 -> m4_620  [key=0, style=solid];
m4_619 -> m4_622  [key=0, style=solid];
m4_619 -> m4_358  [key=2, style=dotted];
m4_622 -> m4_623  [key=0, style=solid];
m4_622 -> m4_624  [key=0, style=solid];
m4_624 -> m4_634  [key=0, style=solid];
m4_624 -> m4_187  [key=2, style=dotted];
m4_624 -> m4_188  [key=2, style=dotted];
m4_606 -> m4_607  [key=0, style=solid];
m4_606 -> m4_609  [key=0, style=solid];
m4_607 -> m4_608  [key=0, style=solid];
m4_607 -> m4_603  [key=0, style=solid];
m4_607 -> m4_71  [key=2, style=dotted];
m4_609 -> m4_610  [key=0, style=solid];
m4_609 -> m4_625  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m4_608 -> m4_634  [key=0, style=solid];
m4_608 -> m4_188  [key=2, style=dotted];
m4_610 -> m4_625  [key=0, style=solid];
m4_612 -> m4_603  [key=0, style=solid];
m4_614 -> m4_615  [key=0, style=solid];
m4_614 -> m4_625  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m4_615 -> m4_625  [key=0, style=solid];
m4_615 -> m4_292  [key=2, style=dotted];
m4_617 -> m4_618  [key=0, style=solid];
m4_617 -> m4_625  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m4_618 -> m4_625  [key=0, style=solid];
m4_618 -> m4_293  [key=2, style=dotted];
m4_620 -> m4_621  [key=0, style=solid];
m4_620 -> m4_625  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m4_621 -> m4_625  [key=0, style=solid];
m4_623 -> m4_625  [key=0, style=solid];
m4_626 -> m4_627  [key=0, style=solid];
m4_626 -> m4_54  [key=2, style=dotted];
m4_626 -> m4_632  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m4_627 -> m4_628  [key=0, style=solid];
m4_627 -> m4_185  [key=2, style=dotted];
m4_632 -> m4_634  [key=0, style=solid];
m4_632 -> m4_462  [key=2, style=dotted];
m4_628 -> m4_629  [key=0, style=solid];
m4_628 -> m4_630  [key=0, style=solid];
m4_629 -> m4_634  [key=0, style=solid];
m4_629 -> m4_187  [key=2, style=dotted];
m4_629 -> m4_188  [key=2, style=dotted];
m4_630 -> m4_631  [key=0, style=solid];
m4_631 -> m4_632  [key=0, style=solid];
m4_631 -> m4_359  [key=2, style=dotted];
m4_634 -> m4_564  [key=0, style=bold, color=blue];
m4_856 -> m4_857  [key=0, style=solid];
m4_856 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasLineInfo"];
m4_857 -> m4_858  [key=0, style=solid];
m4_858 -> m4_856  [key=0, style=bold, color=blue];
m4_291 -> m4_297  [key=0, style=solid];
m4_291 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m4_291 -> m4_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.StringBuffer"];
m4_291 -> m4_192  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Utilities.StringBuffer buffer"];
m4_291 -> m4_243  [key=3, color=darkorchid, style=bold, label="Parameter variable char writeChar"];
m4_291 -> m4_208  [key=3, color=darkorchid, style=bold, label="Parameter variable char writeChar"];
m4_291 -> m4_191  [key=3, color=darkorchid, style=bold, label="Parameter variable int lastWritePosition"];
m4_291 -> m4_206  [key=3, color=darkorchid, style=bold, label="Parameter variable int writeToPosition"];
m4_297 -> m4_298  [key=0, style=solid];
m4_297 -> m4_299  [key=0, style=solid];
m4_298 -> m4_299  [key=0, style=solid];
m4_298 -> m4_295  [key=2, style=dotted];
m4_299 -> m4_300  [key=0, style=solid];
m4_299 -> m4_301  [key=2, style=dotted];
m4_300 -> m4_291  [key=0, style=bold, color=blue];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_104 -> m4_109  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnsureChars"];
m4_104 -> m4_23  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_104 -> m4_81  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m4_104 -> m4_57  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m4_104 -> m4_303  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m4_104 -> m4_530  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m4_104 -> m4_29  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_104 -> m4_292  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_107  [key=0, style=solid];
m4_106 -> m4_108  [key=0, style=solid];
m4_106 -> m4_109  [key=2, style=dotted];
m4_107 -> m4_108  [key=0, style=solid];
m4_108 -> m4_104  [key=0, style=bold, color=blue];
m4_568 -> m4_636  [key=0, style=solid];
m4_636 -> m4_637  [key=0, style=solid];
m4_636 -> m4_49  [key=2, style=dotted];
m4_637 -> m4_638  [key=0, style=solid];
m4_637 -> m4_644  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m4_637 -> m4_645  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m4_637 -> m4_648  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m4_637 -> m4_665  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m4_637 -> m4_679  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m4_638 -> m4_639  [key=0, style=solid];
m4_638 -> m4_641  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_644 -> m4_645  [key=0, style=solid];
m4_644 -> m4_712  [key=2, style=dotted];
m4_644 -> m4_647  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m4_644 -> m4_664  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m4_644 -> m4_678  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m4_645 -> m4_646  [key=0, style=solid];
m4_645 -> m4_649  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m4_645 -> m4_666  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m4_645 -> m4_681  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m4_648 -> m4_662  [key=0, style=solid];
m4_648 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_665 -> m4_677  [key=0, style=solid];
m4_665 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_679 -> m4_680  [key=0, style=solid];
m4_679 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_639 -> m4_640  [key=0, style=solid];
m4_639 -> m4_314  [key=2, style=dotted];
m4_641 -> m4_642  [key=0, style=solid];
m4_641 -> m4_294  [key=2, style=dotted];
m4_640 -> m4_641  [key=0, style=solid];
m4_640 -> m4_51  [key=2, style=dotted];
m4_642 -> m4_643  [key=0, style=solid];
m4_642 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_642 -> m4_651  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m4_642 -> m4_655  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m4_642 -> m4_673  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m4_642 -> m4_687  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m4_642 -> m4_721  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m4_642 -> m4_700  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m4_642 -> m4_704  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m4_643 -> m4_644  [key=0, style=solid];
m4_710 -> m4_711  [key=0, style=solid];
m4_710 -> m4_53  [key=2, style=dotted];
m4_647 -> m4_648  [key=0, style=solid];
m4_647 -> m4_649  [key=0, style=solid];
m4_664 -> m4_665  [key=0, style=solid];
m4_664 -> m4_666  [key=0, style=solid];
m4_678 -> m4_679  [key=0, style=solid];
m4_678 -> m4_681  [key=0, style=solid];
m4_646 -> m4_647  [key=0, style=solid];
m4_646 -> m4_663  [key=0, style=solid];
m4_649 -> m4_650  [key=0, style=solid];
m4_649 -> m4_655  [key=0, style=solid];
m4_666 -> m4_667  [key=0, style=solid];
m4_666 -> m4_672  [key=0, style=solid];
m4_681 -> m4_682  [key=0, style=solid];
m4_681 -> m4_687  [key=0, style=solid];
m4_663 -> m4_664  [key=0, style=solid];
m4_663 -> m4_678  [key=0, style=solid];
m4_650 -> m4_651  [key=0, style=solid];
m4_650 -> m4_54  [key=2, style=dotted];
m4_650 -> m4_654  [key=1, style=dashed, color=darkseagreen4, label=number];
m4_655 -> m4_656  [key=0, style=solid];
m4_651 -> m4_652  [key=0, style=solid];
m4_651 -> m4_713  [key=2, style=dotted];
m4_651 -> m4_714  [key=2, style=dotted];
m4_654 -> m4_711  [key=0, style=solid];
m4_654 -> m4_187  [key=2, style=dotted];
m4_654 -> m4_715  [key=2, style=dotted];
m4_652 -> m4_653  [key=0, style=solid];
m4_652 -> m4_662  [key=0, style=solid];
m4_652 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_653 -> m4_654  [key=0, style=solid];
m4_662 -> m4_709  [key=0, style=solid];
m4_662 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m4_656 -> m4_657  [key=0, style=solid];
m4_656 -> m4_716  [key=2, style=dotted];
m4_656 -> m4_658  [key=1, style=dashed, color=darkseagreen4, label=value];
m4_656 -> m4_659  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m4_657 -> m4_658  [key=0, style=solid];
m4_657 -> m4_659  [key=0, style=solid];
m4_658 -> m4_662  [key=0, style=solid];
m4_658 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_659 -> m4_660  [key=0, style=solid];
m4_659 -> m4_661  [key=0, style=solid];
m4_660 -> m4_711  [key=0, style=solid];
m4_660 -> m4_54  [key=2, style=dotted];
m4_660 -> m4_187  [key=2, style=dotted];
m4_660 -> m4_188  [key=2, style=dotted];
m4_661 -> m4_711  [key=0, style=solid];
m4_661 -> m4_54  [key=2, style=dotted];
m4_661 -> m4_187  [key=2, style=dotted];
m4_661 -> m4_188  [key=2, style=dotted];
m4_667 -> m4_668  [key=0, style=solid];
m4_667 -> m4_54  [key=2, style=dotted];
m4_667 -> m4_671  [key=1, style=dashed, color=darkseagreen4, label=number];
m4_672 -> m4_673  [key=0, style=solid];
m4_672 -> m4_54  [key=2, style=dotted];
m4_672 -> m4_674  [key=1, style=dashed, color=darkseagreen4, label=number];
m4_668 -> m4_669  [key=0, style=solid];
m4_668 -> m4_713  [key=2, style=dotted];
m4_668 -> m4_717  [key=2, style=dotted];
m4_671 -> m4_711  [key=0, style=solid];
m4_671 -> m4_187  [key=2, style=dotted];
m4_671 -> m4_715  [key=2, style=dotted];
m4_669 -> m4_670  [key=0, style=solid];
m4_669 -> m4_677  [key=0, style=solid];
m4_669 -> m4_718  [key=2, style=dotted];
m4_669 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_670 -> m4_671  [key=0, style=solid];
m4_677 -> m4_709  [key=0, style=solid];
m4_677 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m4_673 -> m4_674  [key=0, style=solid];
m4_674 -> m4_675  [key=0, style=solid];
m4_674 -> m4_676  [key=0, style=solid];
m4_674 -> m4_719  [key=2, style=dotted];
m4_675 -> m4_677  [key=0, style=solid];
m4_675 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_676 -> m4_711  [key=0, style=solid];
m4_676 -> m4_54  [key=2, style=dotted];
m4_676 -> m4_187  [key=2, style=dotted];
m4_676 -> m4_188  [key=2, style=dotted];
m4_680 -> m4_709  [key=0, style=solid];
m4_680 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m4_682 -> m4_683  [key=0, style=solid];
m4_682 -> m4_54  [key=2, style=dotted];
m4_682 -> m4_685  [key=1, style=dashed, color=darkseagreen4, label=number];
m4_687 -> m4_688  [key=0, style=solid];
m4_683 -> m4_684  [key=0, style=solid];
m4_683 -> m4_686  [key=0, style=solid];
m4_683 -> m4_713  [key=2, style=dotted];
m4_683 -> m4_717  [key=2, style=dotted];
m4_683 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_685 -> m4_711  [key=0, style=solid];
m4_685 -> m4_187  [key=2, style=dotted];
m4_685 -> m4_715  [key=2, style=dotted];
m4_684 -> m4_685  [key=0, style=solid];
m4_686 -> m4_709  [key=0, style=solid];
m4_686 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m4_688 -> m4_689  [key=0, style=solid];
m4_688 -> m4_720  [key=2, style=dotted];
m4_688 -> m4_690  [key=1, style=dashed, color=darkseagreen4, label=value];
m4_688 -> m4_692  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m4_689 -> m4_690  [key=0, style=solid];
m4_689 -> m4_692  [key=0, style=solid];
m4_690 -> m4_691  [key=0, style=solid];
m4_690 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_692 -> m4_693  [key=0, style=solid];
m4_692 -> m4_698  [key=0, style=solid];
m4_691 -> m4_709  [key=0, style=solid];
m4_691 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m4_693 -> m4_694  [key=0, style=solid];
m4_693 -> m4_54  [key=2, style=dotted];
m4_693 -> m4_696  [key=1, style=dashed, color=darkseagreen4, label=number];
m4_698 -> m4_699  [key=0, style=solid];
m4_698 -> m4_54  [key=2, style=dotted];
m4_698 -> m4_701  [key=1, style=dashed, color=darkseagreen4, label=number];
m4_698 -> m4_703  [key=1, style=dashed, color=darkseagreen4, label=number];
m4_698 -> m4_705  [key=1, style=dashed, color=darkseagreen4, label=number];
m4_698 -> m4_707  [key=1, style=dashed, color=darkseagreen4, label=number];
m4_694 -> m4_695  [key=0, style=solid];
m4_694 -> m4_696  [key=0, style=solid];
m4_696 -> m4_697  [key=0, style=solid];
m4_696 -> m4_721  [key=2, style=dotted];
m4_696 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_695 -> m4_711  [key=0, style=solid];
m4_695 -> m4_54  [key=2, style=dotted];
m4_695 -> m4_187  [key=2, style=dotted];
m4_695 -> m4_188  [key=2, style=dotted];
m4_697 -> m4_709  [key=0, style=solid];
m4_697 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m4_699 -> m4_700  [key=0, style=solid];
m4_699 -> m4_704  [key=0, style=solid];
m4_701 -> m4_702  [key=0, style=solid];
m4_701 -> m4_703  [key=0, style=solid];
m4_701 -> m4_719  [key=2, style=dotted];
m4_703 -> m4_711  [key=0, style=solid];
m4_703 -> m4_187  [key=2, style=dotted];
m4_703 -> m4_188  [key=2, style=dotted];
m4_705 -> m4_706  [key=0, style=solid];
m4_705 -> m4_707  [key=0, style=solid];
m4_705 -> m4_722  [key=2, style=dotted];
m4_707 -> m4_711  [key=0, style=solid];
m4_707 -> m4_187  [key=2, style=dotted];
m4_707 -> m4_188  [key=2, style=dotted];
m4_700 -> m4_701  [key=0, style=solid];
m4_704 -> m4_705  [key=0, style=solid];
m4_702 -> m4_708  [key=0, style=solid];
m4_702 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_706 -> m4_708  [key=0, style=solid];
m4_706 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m4_708 -> m4_709  [key=0, style=solid];
m4_708 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m4_709 -> m4_710  [key=0, style=solid];
m4_709 -> m4_359  [key=2, style=dotted];
m4_711 -> m4_568  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=0, style=solid];
m4_10 -> m4_14  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_8  [key=0, style=bold, color=blue];
m4_460 -> m4_466  [key=0, style=solid];
m4_466 -> m4_467  [key=0, style=solid];
m4_466 -> m4_473  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_466 -> m4_479  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m4_467 -> m4_468  [key=0, style=solid];
m4_467 -> m4_482  [key=0, style=solid];
m4_473 -> m4_474  [key=0, style=solid];
m4_473 -> m4_294  [key=2, style=dotted];
m4_479 -> m4_480  [key=0, style=solid];
m4_479 -> m4_294  [key=2, style=dotted];
m4_468 -> m4_469  [key=0, style=solid];
m4_468 -> m4_475  [key=0, style=solid];
m4_469 -> m4_470  [key=0, style=solid];
m4_475 -> m4_476  [key=0, style=solid];
m4_475 -> m4_478  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_475 -> m4_481  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_470 -> m4_471  [key=0, style=solid];
m4_470 -> m4_473  [key=0, style=solid];
m4_471 -> m4_472  [key=0, style=solid];
m4_471 -> m4_467  [key=0, style=solid];
m4_471 -> m4_71  [key=2, style=dotted];
m4_472 -> m4_482  [key=0, style=solid];
m4_472 -> m4_188  [key=2, style=dotted];
m4_474 -> m4_482  [key=0, style=solid];
m4_476 -> m4_477  [key=0, style=solid];
m4_476 -> m4_478  [key=0, style=solid];
m4_476 -> m4_459  [key=2, style=dotted];
m4_478 -> m4_479  [key=0, style=solid];
m4_478 -> m4_481  [key=0, style=solid];
m4_478 -> m4_358  [key=2, style=dotted];
m4_481 -> m4_482  [key=0, style=solid];
m4_481 -> m4_187  [key=2, style=dotted];
m4_481 -> m4_188  [key=2, style=dotted];
m4_477 -> m4_467  [key=0, style=solid];
m4_480 -> m4_482  [key=0, style=solid];
m4_482 -> m4_460  [key=0, style=bold, color=blue];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_74  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m4_71 -> m4_23  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_71 -> m4_29  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_74  [key=2, style=dotted];
m4_73 -> m4_71  [key=0, style=bold, color=blue];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_74 -> m4_78  [key=1, style=dashed, color=darkseagreen4, label=bool];
m4_74 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_74 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_74 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_74 -> m4_71  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_74 -> m4_109  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m4_74 -> m4_81  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m4_74 -> m4_95  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_77  [key=0, style=solid];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_94  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_83  [key=0, style=solid];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_102  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_89  [key=0, style=solid];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=dst];
m4_85 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label=dst];
m4_76 -> m4_101  [key=0, style=solid];
m4_94 -> m4_95  [key=0, style=solid];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m4_83 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m4_83 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m4_83 -> m4_89  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m4_83 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m4_83 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label=dst];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_56  [key=2, style=dotted];
m4_82 -> m4_94  [key=0, style=solid];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_88  [key=0, style=solid];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_56  [key=2, style=dotted];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_91  [key=0, style=solid];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_56  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_88 -> m4_91  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_103  [key=2, style=dotted];
m4_95 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m4_95 -> m4_100  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m4_96 -> m4_97  [key=0, style=solid];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_99  [key=0, style=solid];
m4_100 -> m4_101  [key=0, style=solid];
m4_98 -> m4_99  [key=0, style=solid];
m4_99 -> m4_100  [key=0, style=solid];
m4_101 -> m4_74  [key=0, style=bold, color=blue];
m4_569 -> m4_819  [key=0, style=solid];
m4_819 -> m4_820  [key=0, style=solid];
m4_819 -> m4_821  [key=0, style=solid];
m4_819 -> m4_635  [key=2, style=dotted];
m4_820 -> m4_822  [key=0, style=solid];
m4_820 -> m4_130  [key=2, style=dotted];
m4_821 -> m4_822  [key=0, style=solid];
m4_821 -> m4_188  [key=2, style=dotted];
m4_822 -> m4_569  [key=0, style=bold, color=blue];
m4_288 -> m4_302  [key=0, style=solid];
m4_302 -> m4_303  [key=0, style=solid];
m4_302 -> m4_309  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m4_302 -> m4_305  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_308  [key=0, style=solid];
m4_303 -> m4_104  [key=2, style=dotted];
m4_309 -> m4_310  [key=0, style=solid];
m4_304 -> m4_305  [key=0, style=solid];
m4_304 -> m4_311  [key=2, style=dotted];
m4_308 -> m4_310  [key=0, style=solid];
m4_308 -> m4_188  [key=2, style=dotted];
m4_305 -> m4_306  [key=0, style=solid];
m4_305 -> m4_312  [key=2, style=dotted];
m4_305 -> m4_313  [key=2, style=dotted];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_309  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m4_307 -> m4_309  [key=0, style=solid];
m4_310 -> m4_288  [key=0, style=bold, color=blue];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m4_122 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m4_123 -> m4_124  [key=0, style=solid];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_127  [key=0, style=solid];
m4_124 -> m4_129  [key=2, style=dotted];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_130  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_126 -> m4_128  [key=0, style=solid];
m4_128 -> m4_122  [key=0, style=bold, color=blue];
m4_562 -> m4_823  [key=0, style=solid];
m4_823 -> m4_824  [key=0, style=solid];
m4_823 -> m4_825  [key=0, style=solid];
m4_823 -> m4_635  [key=2, style=dotted];
m4_824 -> m4_826  [key=0, style=solid];
m4_824 -> m4_462  [key=2, style=dotted];
m4_825 -> m4_826  [key=0, style=solid];
m4_825 -> m4_188  [key=2, style=dotted];
m4_826 -> m4_562  [key=0, style=bold, color=blue];
m4_49 -> m4_61  [key=0, style=solid];
m4_61 -> m4_62  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_70  [key=0, style=solid];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label=count];
m4_63 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label=count];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_66  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_56  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_67 -> m4_68  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_70 -> m4_49  [key=0, style=bold, color=blue];
m4_565 -> m4_840  [key=0, style=solid];
m4_840 -> m4_841  [key=0, style=solid];
m4_840 -> m4_844  [key=0, style=solid];
m4_840 -> m4_635  [key=2, style=dotted];
m4_841 -> m4_842  [key=0, style=solid];
m4_841 -> m4_843  [key=0, style=solid];
m4_844 -> m4_845  [key=0, style=solid];
m4_844 -> m4_188  [key=2, style=dotted];
m4_842 -> m4_845  [key=0, style=solid];
m4_842 -> m4_833  [key=2, style=dotted];
m4_843 -> m4_845  [key=0, style=solid];
m4_843 -> m4_462  [key=2, style=dotted];
m4_845 -> m4_565  [key=0, style=bold, color=blue];
m4_770 -> m4_771  [key=0, style=solid];
m4_770 -> m4_774  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_770 -> m4_775  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_770 -> m4_778  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_770 -> m4_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValue"];
m4_770 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValue"];
m4_770 -> m4_635  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m4_771 -> m4_772  [key=0, style=solid];
m4_771 -> m4_773  [key=0, style=solid];
m4_771 -> m4_104  [key=2, style=dotted];
m4_774 -> m4_775  [key=0, style=solid];
m4_774 -> m4_778  [key=0, style=solid];
m4_774 -> m4_81  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m4_775 -> m4_776  [key=0, style=solid];
m4_775 -> m4_777  [key=0, style=solid];
m4_778 -> m4_779  [key=0, style=solid];
m4_772 -> m4_780  [key=0, style=solid];
m4_773 -> m4_774  [key=0, style=solid];
m4_773 -> m4_775  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_773 -> m4_777  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_777 -> m4_774  [key=0, style=solid];
m4_777 -> m4_777  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_776 -> m4_780  [key=0, style=solid];
m4_779 -> m4_780  [key=0, style=solid];
m4_780 -> m4_770  [key=0, style=bold, color=blue];
m4_182 -> m4_483  [key=0, style=solid];
m4_182 -> m4_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseValue"];
m4_182 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseValue"];
m4_483 -> m4_484  [key=0, style=solid];
m4_483 -> m4_560  [key=0, style=solid];
m4_484 -> m4_485  [key=0, style=solid];
m4_484 -> m4_493  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_484 -> m4_554  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_484 -> m4_556  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_484 -> m4_559  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_485 -> m4_486  [key=0, style=solid];
m4_485 -> m4_491  [key=0, style=solid];
m4_485 -> m4_495  [key=0, style=solid];
m4_485 -> m4_498  [key=0, style=solid];
m4_485 -> m4_501  [key=0, style=solid];
m4_485 -> m4_511  [key=0, style=solid];
m4_485 -> m4_514  [key=0, style=solid];
m4_485 -> m4_517  [key=0, style=solid];
m4_485 -> m4_522  [key=0, style=solid];
m4_485 -> m4_525  [key=0, style=solid];
m4_485 -> m4_528  [key=0, style=solid];
m4_485 -> m4_532  [key=0, style=solid];
m4_485 -> m4_536  [key=0, style=solid];
m4_485 -> m4_540  [key=0, style=solid];
m4_485 -> m4_543  [key=0, style=solid];
m4_485 -> m4_547  [key=0, style=solid];
m4_485 -> m4_549  [key=0, style=solid];
m4_485 -> m4_551  [key=0, style=solid];
m4_485 -> m4_554  [key=0, style=solid];
m4_493 -> m4_494  [key=0, style=solid];
m4_493 -> m4_19  [key=2, style=dotted];
m4_554 -> m4_555  [key=0, style=solid];
m4_554 -> m4_556  [key=0, style=solid];
m4_554 -> m4_358  [key=2, style=dotted];
m4_556 -> m4_557  [key=0, style=solid];
m4_556 -> m4_559  [key=0, style=solid];
m4_556 -> m4_570  [key=2, style=dotted];
m4_559 -> m4_560  [key=0, style=solid];
m4_559 -> m4_187  [key=2, style=dotted];
m4_559 -> m4_188  [key=2, style=dotted];
m4_486 -> m4_487  [key=0, style=solid];
m4_491 -> m4_492  [key=0, style=solid];
m4_495 -> m4_496  [key=0, style=solid];
m4_498 -> m4_499  [key=0, style=solid];
m4_501 -> m4_502  [key=0, style=solid];
m4_511 -> m4_512  [key=0, style=solid];
m4_514 -> m4_515  [key=0, style=solid];
m4_517 -> m4_518  [key=0, style=solid];
m4_522 -> m4_523  [key=0, style=solid];
m4_525 -> m4_526  [key=0, style=solid];
m4_528 -> m4_529  [key=0, style=solid];
m4_532 -> m4_533  [key=0, style=solid];
m4_536 -> m4_537  [key=0, style=solid];
m4_540 -> m4_541  [key=0, style=solid];
m4_543 -> m4_544  [key=0, style=solid];
m4_547 -> m4_548  [key=0, style=solid];
m4_549 -> m4_550  [key=0, style=solid];
m4_551 -> m4_552  [key=0, style=solid];
m4_487 -> m4_488  [key=0, style=solid];
m4_487 -> m4_490  [key=0, style=solid];
m4_488 -> m4_489  [key=0, style=solid];
m4_488 -> m4_483  [key=0, style=solid];
m4_488 -> m4_71  [key=2, style=dotted];
m4_490 -> m4_483  [key=0, style=solid];
m4_489 -> m4_560  [key=0, style=solid];
m4_492 -> m4_493  [key=0, style=solid];
m4_494 -> m4_560  [key=0, style=solid];
m4_496 -> m4_497  [key=0, style=solid];
m4_496 -> m4_561  [key=2, style=dotted];
m4_497 -> m4_560  [key=0, style=solid];
m4_499 -> m4_500  [key=0, style=solid];
m4_499 -> m4_562  [key=2, style=dotted];
m4_500 -> m4_560  [key=0, style=solid];
m4_502 -> m4_503  [key=0, style=solid];
m4_502 -> m4_509  [key=0, style=solid];
m4_502 -> m4_104  [key=2, style=dotted];
m4_503 -> m4_504  [key=0, style=solid];
m4_503 -> m4_506  [key=1, style=dashed, color=darkseagreen4, label=next];
m4_509 -> m4_560  [key=0, style=solid];
m4_509 -> m4_188  [key=2, style=dotted];
m4_504 -> m4_505  [key=0, style=solid];
m4_504 -> m4_506  [key=0, style=solid];
m4_506 -> m4_507  [key=0, style=solid];
m4_506 -> m4_508  [key=0, style=solid];
m4_505 -> m4_510  [key=0, style=solid];
m4_505 -> m4_563  [key=2, style=dotted];
m4_507 -> m4_510  [key=0, style=solid];
m4_507 -> m4_564  [key=2, style=dotted];
m4_508 -> m4_560  [key=0, style=solid];
m4_508 -> m4_187  [key=2, style=dotted];
m4_508 -> m4_188  [key=2, style=dotted];
m4_510 -> m4_560  [key=0, style=solid];
m4_512 -> m4_513  [key=0, style=solid];
m4_512 -> m4_565  [key=2, style=dotted];
m4_513 -> m4_560  [key=0, style=solid];
m4_515 -> m4_516  [key=0, style=solid];
m4_515 -> m4_566  [key=2, style=dotted];
m4_516 -> m4_560  [key=0, style=solid];
m4_518 -> m4_519  [key=0, style=solid];
m4_518 -> m4_520  [key=0, style=solid];
m4_518 -> m4_104  [key=2, style=dotted];
m4_519 -> m4_521  [key=0, style=solid];
m4_519 -> m4_567  [key=2, style=dotted];
m4_520 -> m4_521  [key=0, style=solid];
m4_520 -> m4_568  [key=2, style=dotted];
m4_521 -> m4_560  [key=0, style=solid];
m4_523 -> m4_524  [key=0, style=solid];
m4_523 -> m4_186  [key=2, style=dotted];
m4_524 -> m4_560  [key=0, style=solid];
m4_526 -> m4_527  [key=0, style=solid];
m4_526 -> m4_569  [key=2, style=dotted];
m4_527 -> m4_560  [key=0, style=solid];
m4_529 -> m4_530  [key=0, style=solid];
m4_530 -> m4_531  [key=0, style=solid];
m4_530 -> m4_130  [key=2, style=dotted];
m4_531 -> m4_560  [key=0, style=solid];
m4_533 -> m4_534  [key=0, style=solid];
m4_534 -> m4_535  [key=0, style=solid];
m4_534 -> m4_130  [key=2, style=dotted];
m4_535 -> m4_560  [key=0, style=solid];
m4_537 -> m4_538  [key=0, style=solid];
m4_538 -> m4_539  [key=0, style=solid];
m4_538 -> m4_130  [key=2, style=dotted];
m4_539 -> m4_560  [key=0, style=solid];
m4_541 -> m4_542  [key=0, style=solid];
m4_541 -> m4_130  [key=2, style=dotted];
m4_542 -> m4_560  [key=0, style=solid];
m4_544 -> m4_545  [key=0, style=solid];
m4_545 -> m4_546  [key=0, style=solid];
m4_545 -> m4_130  [key=2, style=dotted];
m4_546 -> m4_560  [key=0, style=solid];
m4_548 -> m4_483  [key=0, style=solid];
m4_548 -> m4_292  [key=2, style=dotted];
m4_550 -> m4_483  [key=0, style=solid];
m4_550 -> m4_293  [key=2, style=dotted];
m4_552 -> m4_553  [key=0, style=solid];
m4_553 -> m4_483  [key=0, style=solid];
m4_555 -> m4_483  [key=0, style=solid];
m4_557 -> m4_558  [key=0, style=solid];
m4_557 -> m4_568  [key=2, style=dotted];
m4_558 -> m4_560  [key=0, style=solid];
m4_560 -> m4_182  [key=0, style=bold, color=blue];
m4_431 -> m4_432  [key=0, style=solid];
m4_431 -> m4_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseProperty"];
m4_432 -> m4_433  [key=0, style=solid];
m4_432 -> m4_434  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m4_432 -> m4_436  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m4_432 -> m4_439  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m4_433 -> m4_434  [key=0, style=solid];
m4_433 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m4_433 -> m4_432  [key=3, color=darkorchid, style=bold, label="Local variable char quoteChar"];
m4_434 -> m4_435  [key=0, style=solid];
m4_434 -> m4_439  [key=0, style=solid];
m4_436 -> m4_437  [key=0, style=solid];
m4_436 -> m4_438  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m4_436 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m4_439 -> m4_440  [key=0, style=solid];
m4_439 -> m4_443  [key=0, style=solid];
m4_439 -> m4_459  [key=2, style=dotted];
m4_455 -> m4_456  [key=0, style=solid];
m4_435 -> m4_436  [key=0, style=solid];
m4_437 -> m4_438  [key=0, style=solid];
m4_437 -> m4_49  [key=2, style=dotted];
m4_438 -> m4_444  [key=0, style=solid];
m4_438 -> m4_50  [key=2, style=dotted];
m4_440 -> m4_441  [key=0, style=solid];
m4_440 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m4_443 -> m4_458  [key=0, style=solid];
m4_443 -> m4_187  [key=2, style=dotted];
m4_443 -> m4_188  [key=2, style=dotted];
m4_441 -> m4_442  [key=0, style=solid];
m4_441 -> m4_49  [key=2, style=dotted];
m4_442 -> m4_444  [key=0, style=solid];
m4_442 -> m4_460  [key=2, style=dotted];
m4_444 -> m4_445  [key=0, style=solid];
m4_445 -> m4_446  [key=0, style=solid];
m4_445 -> m4_449  [key=0, style=solid];
m4_446 -> m4_447  [key=0, style=solid];
m4_446 -> m4_461  [key=2, style=dotted];
m4_446 -> m4_454  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m4_449 -> m4_450  [key=0, style=solid];
m4_449 -> m4_54  [key=2, style=dotted];
m4_449 -> m4_454  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m4_447 -> m4_448  [key=0, style=solid];
m4_447 -> m4_450  [key=0, style=solid];
m4_454 -> m4_455  [key=0, style=solid];
m4_454 -> m4_462  [key=2, style=dotted];
m4_448 -> m4_450  [key=0, style=solid];
m4_448 -> m4_54  [key=2, style=dotted];
m4_448 -> m4_454  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m4_450 -> m4_451  [key=0, style=solid];
m4_450 -> m4_185  [key=2, style=dotted];
m4_451 -> m4_452  [key=0, style=solid];
m4_451 -> m4_453  [key=0, style=solid];
m4_452 -> m4_458  [key=0, style=solid];
m4_452 -> m4_187  [key=2, style=dotted];
m4_452 -> m4_188  [key=2, style=dotted];
m4_453 -> m4_454  [key=0, style=solid];
m4_456 -> m4_457  [key=0, style=solid];
m4_456 -> m4_359  [key=2, style=dotted];
m4_457 -> m4_458  [key=0, style=solid];
m4_458 -> m4_431  [key=0, style=bold, color=blue];
m4_314 -> m4_315  [key=0, style=solid];
m4_315 -> m4_316  [key=0, style=solid];
m4_315 -> m4_317  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_315 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_315 -> m4_320  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_315 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_357  [key=0, style=solid];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_324  [key=0, style=solid];
m4_317 -> m4_352  [key=0, style=solid];
m4_319 -> m4_320  [key=0, style=solid];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_323  [key=0, style=solid];
m4_351 -> m4_316  [key=0, style=solid];
m4_351 -> m4_351  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_351 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m4_318 -> m4_319  [key=0, style=solid];
m4_324 -> m4_325  [key=0, style=solid];
m4_352 -> m4_353  [key=0, style=solid];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_316  [key=0, style=solid];
m4_321 -> m4_71  [key=2, style=dotted];
m4_323 -> m4_357  [key=0, style=solid];
m4_322 -> m4_357  [key=0, style=solid];
m4_325 -> m4_326  [key=0, style=solid];
m4_326 -> m4_327  [key=0, style=solid];
m4_327 -> m4_328  [key=0, style=solid];
m4_328 -> m4_329  [key=0, style=solid];
m4_329 -> m4_330  [key=0, style=solid];
m4_330 -> m4_331  [key=0, style=solid];
m4_331 -> m4_332  [key=0, style=solid];
m4_332 -> m4_333  [key=0, style=solid];
m4_333 -> m4_334  [key=0, style=solid];
m4_334 -> m4_335  [key=0, style=solid];
m4_335 -> m4_336  [key=0, style=solid];
m4_336 -> m4_337  [key=0, style=solid];
m4_337 -> m4_338  [key=0, style=solid];
m4_338 -> m4_339  [key=0, style=solid];
m4_339 -> m4_340  [key=0, style=solid];
m4_340 -> m4_341  [key=0, style=solid];
m4_341 -> m4_342  [key=0, style=solid];
m4_342 -> m4_343  [key=0, style=solid];
m4_343 -> m4_344  [key=0, style=solid];
m4_344 -> m4_345  [key=0, style=solid];
m4_345 -> m4_346  [key=0, style=solid];
m4_346 -> m4_347  [key=0, style=solid];
m4_347 -> m4_348  [key=0, style=solid];
m4_348 -> m4_349  [key=0, style=solid];
m4_349 -> m4_350  [key=0, style=solid];
m4_350 -> m4_351  [key=0, style=solid];
m4_353 -> m4_354  [key=0, style=solid];
m4_353 -> m4_356  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m4_354 -> m4_355  [key=0, style=solid];
m4_354 -> m4_356  [key=0, style=solid];
m4_354 -> m4_358  [key=2, style=dotted];
m4_356 -> m4_357  [key=0, style=solid];
m4_356 -> m4_187  [key=2, style=dotted];
m4_356 -> m4_188  [key=2, style=dotted];
m4_355 -> m4_357  [key=0, style=solid];
m4_357 -> m4_314  [key=0, style=bold, color=blue];
m4_54 -> m4_54  [key=3, color=darkorchid, style=bold, label="Field variable int MaximumJavascriptIntegerCharacterLength"];
m4_293 -> m4_571  [key=0, style=solid];
m4_571 -> m4_572  [key=0, style=solid];
m4_572 -> m4_573  [key=0, style=solid];
m4_572 -> m4_15  [key=2, style=dotted];
m4_573 -> m4_293  [key=0, style=bold, color=blue];
m4_859 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_168  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_189  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_257  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_271  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_285  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_303  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_308  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_352  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_353  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_356  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_360  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_375  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_397  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_414  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_415  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_435  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_438  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_445  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_450  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_455  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_468  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_473  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_476  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_477  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_484  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_487  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_490  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_505  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_515  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_518  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_523  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_537  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_545  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_548  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_550  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_553  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_557  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_559  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_572  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_575  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_576  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_577  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_582  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_585  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_590  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_592  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_595  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_599  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_600  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_601  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_604  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_607  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_608  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_610  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_612  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_615  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_618  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_620  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_621  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_629  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_630  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_633  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_636  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_640  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_645  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_646  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_650  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_654  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_660  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_661  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_663  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_667  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_671  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_672  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_676  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_682  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_685  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_688  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_695  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_698  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_699  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_703  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_707  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_709  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_710  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_726  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_727  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_730  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_732  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_734  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_735  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_736  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_739  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_741  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_742  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_744  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_747  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_749  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_751  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_752  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_753  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_754  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_758  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_760  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_763  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_765  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_766  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_767  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_768  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_771  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_775  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_778  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_781  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_784  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_786  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_795  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_797  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_800  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_811  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_812  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_813  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_815  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_816  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_817  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_819  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_820  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_821  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_823  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_824  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_825  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_827  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_828  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_830  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_831  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_834  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_835  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_837  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_838  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_840  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_841  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_843  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_844  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_847  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_848  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_849  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_850  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m4_859 -> m4_851  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m5_1630 -> m5_1631  [key=0, style=solid];
m5_1632 -> m5_23  [key=2, style=dotted];
m5_1632 -> m5_24  [key=2, style=dotted];
m5_1632 -> m5_1633  [key=0, style=solid];
m5_1632 -> m5_1634  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1632 -> m5_1635  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1632 -> m5_1636  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1633 -> m5_25  [key=2, style=dotted];
m5_1633 -> m5_26  [key=2, style=dotted];
m5_1633 -> m5_1634  [key=0, style=solid];
m5_1634 -> m5_25  [key=2, style=dotted];
m5_1634 -> m5_26  [key=2, style=dotted];
m5_1634 -> m5_1635  [key=0, style=solid];
m5_1635 -> m5_25  [key=2, style=dotted];
m5_1635 -> m5_26  [key=2, style=dotted];
m5_1635 -> m5_1636  [key=0, style=solid];
m5_1636 -> m5_25  [key=2, style=dotted];
m5_1636 -> m5_1637  [key=0, style=solid];
m5_1636 -> m5_80  [key=2, style=dotted];
m5_1631 -> m5_1632  [key=0, style=solid];
m5_1631 -> m5_1631  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1637 -> m5_1630  [key=0, style=bold, color=blue];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_41  [key=0, style=solid];
m5_39 -> m5_31  [key=2, style=dotted];
m5_39 -> m5_39  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_48 -> m5_27  [key=2, style=dotted];
m5_48 -> m5_49  [key=0, style=solid];
m5_1126 -> m5_1127  [key=0, style=solid];
m5_1128 -> m5_23  [key=2, style=dotted];
m5_1128 -> m5_1129  [key=0, style=solid];
m5_1127 -> m5_24  [key=2, style=dotted];
m5_1127 -> m5_1128  [key=0, style=solid];
m5_1132 -> m5_27  [key=2, style=dotted];
m5_1132 -> m5_1133  [key=0, style=solid];
m5_1129 -> m5_38  [key=2, style=dotted];
m5_1129 -> m5_1130  [key=0, style=solid];
m5_1129 -> m5_1131  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_1131 -> m5_1132  [key=0, style=solid];
m5_1131 -> m5_1135  [key=2, style=dotted];
m5_1130 -> m5_1131  [key=0, style=solid];
m5_1130 -> m5_1134  [key=2, style=dotted];
m5_1133 -> m5_1126  [key=0, style=bold, color=blue];
m5_359 -> m5_360  [key=0, style=solid];
m5_362 -> m5_23  [key=2, style=dotted];
m5_362 -> m5_363  [key=0, style=solid];
m5_362 -> m5_364  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_365  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_366  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_367  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_368  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_369  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_370  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_371  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_372  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_373  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_374  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_375  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_376  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_377  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_378  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_379  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_380  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_381  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_382  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_383  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_384  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_385  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_386  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_387  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_388  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_389  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_390  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_391  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_392  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_393  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_394  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_395  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_396  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_397  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_398  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_399  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_400  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_401  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_402  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_403  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_404  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_405  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_406  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_407  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_408  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_362 -> m5_409  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_361 -> m5_24  [key=2, style=dotted];
m5_361 -> m5_362  [key=0, style=solid];
m5_366 -> m5_25  [key=2, style=dotted];
m5_366 -> m5_367  [key=0, style=solid];
m5_370 -> m5_25  [key=2, style=dotted];
m5_370 -> m5_371  [key=0, style=solid];
m5_375 -> m5_25  [key=2, style=dotted];
m5_375 -> m5_376  [key=0, style=solid];
m5_380 -> m5_25  [key=2, style=dotted];
m5_380 -> m5_381  [key=0, style=solid];
m5_385 -> m5_25  [key=2, style=dotted];
m5_385 -> m5_386  [key=0, style=solid];
m5_389 -> m5_25  [key=2, style=dotted];
m5_389 -> m5_390  [key=0, style=solid];
m5_395 -> m5_25  [key=2, style=dotted];
m5_395 -> m5_396  [key=0, style=solid];
m5_401 -> m5_25  [key=2, style=dotted];
m5_401 -> m5_402  [key=0, style=solid];
m5_405 -> m5_25  [key=2, style=dotted];
m5_405 -> m5_406  [key=0, style=solid];
m5_409 -> m5_25  [key=2, style=dotted];
m5_409 -> m5_410  [key=0, style=solid];
m5_409 -> m5_80  [key=2, style=dotted];
m5_363 -> m5_27  [key=2, style=dotted];
m5_363 -> m5_364  [key=0, style=solid];
m5_364 -> m5_27  [key=2, style=dotted];
m5_364 -> m5_365  [key=0, style=solid];
m5_365 -> m5_27  [key=2, style=dotted];
m5_365 -> m5_366  [key=0, style=solid];
m5_367 -> m5_27  [key=2, style=dotted];
m5_367 -> m5_368  [key=0, style=solid];
m5_368 -> m5_27  [key=2, style=dotted];
m5_368 -> m5_369  [key=0, style=solid];
m5_369 -> m5_27  [key=2, style=dotted];
m5_369 -> m5_370  [key=0, style=solid];
m5_371 -> m5_27  [key=2, style=dotted];
m5_371 -> m5_372  [key=0, style=solid];
m5_372 -> m5_27  [key=2, style=dotted];
m5_372 -> m5_373  [key=0, style=solid];
m5_373 -> m5_27  [key=2, style=dotted];
m5_373 -> m5_374  [key=0, style=solid];
m5_374 -> m5_27  [key=2, style=dotted];
m5_374 -> m5_375  [key=0, style=solid];
m5_376 -> m5_27  [key=2, style=dotted];
m5_376 -> m5_377  [key=0, style=solid];
m5_377 -> m5_27  [key=2, style=dotted];
m5_377 -> m5_378  [key=0, style=solid];
m5_378 -> m5_27  [key=2, style=dotted];
m5_378 -> m5_379  [key=0, style=solid];
m5_379 -> m5_27  [key=2, style=dotted];
m5_379 -> m5_380  [key=0, style=solid];
m5_381 -> m5_27  [key=2, style=dotted];
m5_381 -> m5_382  [key=0, style=solid];
m5_382 -> m5_27  [key=2, style=dotted];
m5_382 -> m5_383  [key=0, style=solid];
m5_383 -> m5_27  [key=2, style=dotted];
m5_383 -> m5_384  [key=0, style=solid];
m5_384 -> m5_27  [key=2, style=dotted];
m5_384 -> m5_385  [key=0, style=solid];
m5_386 -> m5_27  [key=2, style=dotted];
m5_386 -> m5_387  [key=0, style=solid];
m5_387 -> m5_27  [key=2, style=dotted];
m5_387 -> m5_388  [key=0, style=solid];
m5_388 -> m5_27  [key=2, style=dotted];
m5_388 -> m5_389  [key=0, style=solid];
m5_390 -> m5_27  [key=2, style=dotted];
m5_390 -> m5_391  [key=0, style=solid];
m5_391 -> m5_27  [key=2, style=dotted];
m5_391 -> m5_392  [key=0, style=solid];
m5_392 -> m5_27  [key=2, style=dotted];
m5_392 -> m5_393  [key=0, style=solid];
m5_393 -> m5_27  [key=2, style=dotted];
m5_393 -> m5_394  [key=0, style=solid];
m5_394 -> m5_27  [key=2, style=dotted];
m5_394 -> m5_395  [key=0, style=solid];
m5_396 -> m5_27  [key=2, style=dotted];
m5_396 -> m5_397  [key=0, style=solid];
m5_397 -> m5_27  [key=2, style=dotted];
m5_397 -> m5_398  [key=0, style=solid];
m5_398 -> m5_27  [key=2, style=dotted];
m5_398 -> m5_399  [key=0, style=solid];
m5_399 -> m5_27  [key=2, style=dotted];
m5_399 -> m5_400  [key=0, style=solid];
m5_400 -> m5_27  [key=2, style=dotted];
m5_400 -> m5_401  [key=0, style=solid];
m5_402 -> m5_27  [key=2, style=dotted];
m5_402 -> m5_403  [key=0, style=solid];
m5_403 -> m5_27  [key=2, style=dotted];
m5_403 -> m5_404  [key=0, style=solid];
m5_404 -> m5_27  [key=2, style=dotted];
m5_404 -> m5_405  [key=0, style=solid];
m5_406 -> m5_27  [key=2, style=dotted];
m5_406 -> m5_407  [key=0, style=solid];
m5_407 -> m5_27  [key=2, style=dotted];
m5_407 -> m5_408  [key=0, style=solid];
m5_408 -> m5_27  [key=2, style=dotted];
m5_408 -> m5_409  [key=0, style=solid];
m5_360 -> m5_361  [key=0, style=solid];
m5_360 -> m5_360  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m5_410 -> m5_359  [key=0, style=bold, color=blue];
m5_1826 -> m5_1827  [key=0, style=solid];
m5_1828 -> m5_23  [key=2, style=dotted];
m5_1828 -> m5_1829  [key=0, style=solid];
m5_1828 -> m5_280  [key=2, style=dotted];
m5_1828 -> m5_318  [key=2, style=dotted];
m5_1828 -> m5_319  [key=2, style=dotted];
m5_1828 -> m5_1830  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1828 -> m5_1831  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1828 -> m5_1832  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1829 -> m5_25  [key=2, style=dotted];
m5_1829 -> m5_26  [key=2, style=dotted];
m5_1829 -> m5_1830  [key=0, style=solid];
m5_1832 -> m5_25  [key=2, style=dotted];
m5_1832 -> m5_1833  [key=0, style=solid];
m5_1832 -> m5_80  [key=2, style=dotted];
m5_1830 -> m5_27  [key=2, style=dotted];
m5_1830 -> m5_1831  [key=0, style=solid];
m5_1831 -> m5_27  [key=2, style=dotted];
m5_1831 -> m5_1832  [key=0, style=solid];
m5_1827 -> m5_1828  [key=0, style=solid];
m5_1827 -> m5_1827  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1833 -> m5_1826  [key=0, style=bold, color=blue];
m5_1255 -> m5_1256  [key=0, style=solid];
m5_1256 -> m5_23  [key=2, style=dotted];
m5_1256 -> m5_24  [key=2, style=dotted];
m5_1256 -> m5_1257  [key=0, style=solid];
m5_1256 -> m5_1260  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1257 -> m5_1258  [key=0, style=solid];
m5_1257 -> m5_94  [key=2, style=dotted];
m5_1257 -> m5_1259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1258 -> m5_1255  [key=0, style=bold, color=blue];
m5_1646 -> m5_1647  [key=0, style=solid];
m5_1648 -> m5_23  [key=2, style=dotted];
m5_1648 -> m5_24  [key=2, style=dotted];
m5_1648 -> m5_1649  [key=0, style=solid];
m5_1648 -> m5_1650  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1648 -> m5_1651  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1648 -> m5_1652  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1649 -> m5_25  [key=2, style=dotted];
m5_1649 -> m5_26  [key=2, style=dotted];
m5_1649 -> m5_1650  [key=0, style=solid];
m5_1651 -> m5_25  [key=2, style=dotted];
m5_1651 -> m5_26  [key=2, style=dotted];
m5_1651 -> m5_1652  [key=0, style=solid];
m5_1650 -> m5_27  [key=2, style=dotted];
m5_1650 -> m5_1651  [key=0, style=solid];
m5_1652 -> m5_27  [key=2, style=dotted];
m5_1652 -> m5_1653  [key=0, style=solid];
m5_1647 -> m5_1648  [key=0, style=solid];
m5_1647 -> m5_1647  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1653 -> m5_1646  [key=0, style=bold, color=blue];
m5_10 -> m5_11  [key=0, style=solid, color=green];
m5_10 -> m5_27  [key=2, style=dotted, color=green];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_11 -> m5_27  [key=2, style=dotted, color=green];
m5_12 -> m5_13  [key=0, style=solid, color=green];
m5_12 -> m5_14  [key=2, style=dotted];
m5_12 -> m5_25  [key=2, style=dotted, color=green];
m5_12 -> m5_26  [key=2, style=dotted, color=green];
m5_13 -> m5_10  [key=0, style=bold, color=blue];
m5_13 -> m5_14  [key=0, style=solid, color=green];
m5_13 -> m5_27  [key=2, style=dotted, color=green];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_57 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_65  [key=2, style=dotted];
m5_58 -> m5_58  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_58 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_66  [key=2, style=dotted];
m5_61 -> m5_27  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_67  [key=2, style=dotted];
m5_63 -> m5_27  [key=2, style=dotted];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_59  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_59 -> m5_23  [key=2, style=dotted];
m5_59 -> m5_24  [key=2, style=dotted];
m5_59 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_65  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_66  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_59 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_63  [key=0, style=solid];
m5_60 -> m5_25  [key=2, style=dotted];
m5_60 -> m5_26  [key=2, style=dotted];
m5_62 -> m5_60  [key=0, style=solid];
m5_62 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_62 -> m5_25  [key=2, style=dotted];
m5_62 -> m5_26  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_64 -> m5_57  [key=0, style=bold, color=blue];
m5_64 -> m5_25  [key=2, style=dotted];
m5_64 -> m5_26  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_1834 -> m5_1835  [key=0, style=solid];
m5_1836 -> m5_23  [key=2, style=dotted];
m5_1836 -> m5_1837  [key=0, style=solid];
m5_1836 -> m5_280  [key=2, style=dotted];
m5_1836 -> m5_318  [key=2, style=dotted];
m5_1836 -> m5_319  [key=2, style=dotted];
m5_1836 -> m5_1840  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1835 -> m5_1836  [key=0, style=solid];
m5_1835 -> m5_1835  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1837 -> m5_1838  [key=0, style=solid];
m5_1837 -> m5_94  [key=2, style=dotted];
m5_1837 -> m5_1839  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1838 -> m5_1834  [key=0, style=bold, color=blue];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_45  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m5_49 -> m5_42  [key=0, style=bold, color=blue];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_55  [key=2, style=dotted];
m5_50 -> m5_52  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_50 -> m5_53  [key=1, style=dashed, color=darkseagreen4, label=token];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_53  [key=0, style=solid];
m5_51 -> m5_51  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_52 -> m5_54  [key=0, style=solid];
m5_52 -> m5_56  [key=2, style=dotted];
m5_52 -> m5_33  [key=2, style=dotted];
m5_52 -> m5_23  [key=2, style=dotted];
m5_52 -> m5_24  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_53  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_53 -> m5_25  [key=2, style=dotted];
m5_53 -> m5_26  [key=2, style=dotted];
m5_54 -> m5_49  [key=0, style=bold, color=blue];
m5_54 -> m5_27  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid, color=green];
m5_6 -> m5_27  [key=2, style=dotted, color=green];
m5_7 -> m5_8  [key=0, style=solid, color=green];
m5_7 -> m5_9  [key=2, style=dotted];
m5_7 -> m5_25  [key=2, style=dotted, color=green];
m5_7 -> m5_26  [key=2, style=dotted, color=green];
m5_8 -> m5_6  [key=0, style=bold, color=blue];
m5_8 -> m5_9  [key=0, style=solid, color=green];
m5_8 -> m5_27  [key=2, style=dotted, color=green];
m5_124 -> m5_125  [key=0, style=solid];
m5_126 -> m5_23  [key=2, style=dotted];
m5_126 -> m5_24  [key=2, style=dotted];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_128  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_126 -> m5_129  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_126 -> m5_130  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_126 -> m5_131  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_126 -> m5_133  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_126 -> m5_134  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_126 -> m5_135  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_127 -> m5_25  [key=2, style=dotted];
m5_127 -> m5_26  [key=2, style=dotted];
m5_127 -> m5_128  [key=0, style=solid];
m5_129 -> m5_25  [key=2, style=dotted];
m5_129 -> m5_26  [key=2, style=dotted];
m5_129 -> m5_130  [key=0, style=solid];
m5_133 -> m5_25  [key=2, style=dotted];
m5_133 -> m5_26  [key=2, style=dotted];
m5_133 -> m5_134  [key=0, style=solid];
m5_135 -> m5_25  [key=2, style=dotted];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_80  [key=2, style=dotted];
m5_128 -> m5_27  [key=2, style=dotted];
m5_128 -> m5_129  [key=0, style=solid];
m5_130 -> m5_27  [key=2, style=dotted];
m5_130 -> m5_131  [key=0, style=solid];
m5_134 -> m5_27  [key=2, style=dotted];
m5_134 -> m5_135  [key=0, style=solid];
m5_131 -> m5_38  [key=2, style=dotted];
m5_131 -> m5_133  [key=0, style=solid];
m5_131 -> m5_132  [key=0, style=solid];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_125  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_132 -> m5_133  [key=0, style=solid];
m5_136 -> m5_124  [key=0, style=bold, color=blue];
m5_55 -> m5_27  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid];
m5_56 -> m5_50  [key=0, style=bold, color=blue];
m5_1154 -> m5_1155  [key=0, style=solid];
m5_1156 -> m5_23  [key=2, style=dotted];
m5_1156 -> m5_1157  [key=0, style=solid];
m5_1156 -> m5_1158  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1159  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1160  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1161  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1162  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1163  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1164  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1165  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1166  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1167  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1168  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1169  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1170  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1171  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1172  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1156 -> m5_1173  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1155 -> m5_24  [key=2, style=dotted];
m5_1155 -> m5_1156  [key=0, style=solid];
m5_1157 -> m5_25  [key=2, style=dotted];
m5_1157 -> m5_26  [key=2, style=dotted];
m5_1157 -> m5_1158  [key=0, style=solid];
m5_1159 -> m5_25  [key=2, style=dotted];
m5_1159 -> m5_1160  [key=0, style=solid];
m5_1163 -> m5_25  [key=2, style=dotted];
m5_1163 -> m5_1164  [key=0, style=solid];
m5_1167 -> m5_25  [key=2, style=dotted];
m5_1167 -> m5_1168  [key=0, style=solid];
m5_1171 -> m5_25  [key=2, style=dotted];
m5_1171 -> m5_26  [key=2, style=dotted];
m5_1171 -> m5_1172  [key=0, style=solid];
m5_1173 -> m5_25  [key=2, style=dotted];
m5_1173 -> m5_1174  [key=0, style=solid];
m5_1173 -> m5_80  [key=2, style=dotted];
m5_1158 -> m5_27  [key=2, style=dotted];
m5_1158 -> m5_1159  [key=0, style=solid];
m5_1160 -> m5_27  [key=2, style=dotted];
m5_1160 -> m5_1161  [key=0, style=solid];
m5_1161 -> m5_27  [key=2, style=dotted];
m5_1161 -> m5_1162  [key=0, style=solid];
m5_1162 -> m5_27  [key=2, style=dotted];
m5_1162 -> m5_1163  [key=0, style=solid];
m5_1164 -> m5_27  [key=2, style=dotted];
m5_1164 -> m5_1165  [key=0, style=solid];
m5_1165 -> m5_27  [key=2, style=dotted];
m5_1165 -> m5_1166  [key=0, style=solid];
m5_1166 -> m5_27  [key=2, style=dotted];
m5_1166 -> m5_1167  [key=0, style=solid];
m5_1168 -> m5_27  [key=2, style=dotted];
m5_1168 -> m5_1169  [key=0, style=solid];
m5_1169 -> m5_27  [key=2, style=dotted];
m5_1169 -> m5_1170  [key=0, style=solid];
m5_1170 -> m5_27  [key=2, style=dotted];
m5_1170 -> m5_1171  [key=0, style=solid];
m5_1172 -> m5_27  [key=2, style=dotted];
m5_1172 -> m5_1173  [key=0, style=solid];
m5_1174 -> m5_1154  [key=0, style=bold, color=blue];
m5_712 -> m5_713  [key=0, style=solid];
m5_713 -> m5_23  [key=2, style=dotted];
m5_713 -> m5_24  [key=2, style=dotted];
m5_713 -> m5_714  [key=0, style=solid];
m5_713 -> m5_715  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_713 -> m5_718  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_714 -> m5_26  [key=2, style=dotted];
m5_714 -> m5_715  [key=0, style=solid];
m5_714 -> m5_300  [key=2, style=dotted];
m5_715 -> m5_716  [key=0, style=solid];
m5_715 -> m5_94  [key=2, style=dotted];
m5_715 -> m5_717  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_716 -> m5_712  [key=0, style=bold, color=blue];
m5_1669 -> m5_1670  [key=0, style=solid];
m5_1671 -> m5_23  [key=2, style=dotted];
m5_1671 -> m5_24  [key=2, style=dotted];
m5_1671 -> m5_1672  [key=0, style=solid];
m5_1671 -> m5_1676  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1670 -> m5_1671  [key=0, style=solid];
m5_1670 -> m5_1670  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1672 -> m5_1673  [key=0, style=solid];
m5_1672 -> m5_1674  [key=2, style=dotted];
m5_1672 -> m5_1675  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1673 -> m5_1669  [key=0, style=bold, color=blue];
m5_1297 -> m5_1298  [key=0, style=solid];
m5_1299 -> m5_23  [key=2, style=dotted];
m5_1299 -> m5_24  [key=2, style=dotted];
m5_1299 -> m5_1300  [key=0, style=solid];
m5_1299 -> m5_1301  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1299 -> m5_1302  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1299 -> m5_1303  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1299 -> m5_1304  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1299 -> m5_1305  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1299 -> m5_1306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1299 -> m5_1307  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1299 -> m5_1308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1299 -> m5_1309  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1300 -> m5_25  [key=2, style=dotted];
m5_1300 -> m5_26  [key=2, style=dotted];
m5_1300 -> m5_1301  [key=0, style=solid];
m5_1302 -> m5_25  [key=2, style=dotted];
m5_1302 -> m5_26  [key=2, style=dotted];
m5_1302 -> m5_1303  [key=0, style=solid];
m5_1308 -> m5_25  [key=2, style=dotted];
m5_1308 -> m5_26  [key=2, style=dotted];
m5_1308 -> m5_1309  [key=0, style=solid];
m5_1301 -> m5_27  [key=2, style=dotted];
m5_1301 -> m5_1302  [key=0, style=solid];
m5_1303 -> m5_27  [key=2, style=dotted];
m5_1303 -> m5_1304  [key=0, style=solid];
m5_1305 -> m5_27  [key=2, style=dotted];
m5_1305 -> m5_1306  [key=0, style=solid];
m5_1306 -> m5_27  [key=2, style=dotted];
m5_1306 -> m5_1307  [key=0, style=solid];
m5_1307 -> m5_27  [key=2, style=dotted];
m5_1307 -> m5_1308  [key=0, style=solid];
m5_1307 -> m5_1311  [key=2, style=dotted];
m5_1307 -> m5_1312  [key=2, style=dotted];
m5_1307 -> m5_1313  [key=2, style=dotted];
m5_1309 -> m5_27  [key=2, style=dotted];
m5_1309 -> m5_1310  [key=0, style=solid];
m5_1298 -> m5_1299  [key=0, style=solid];
m5_1298 -> m5_1298  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1304 -> m5_1305  [key=0, style=solid];
m5_1304 -> m5_1226  [key=2, style=dotted];
m5_1310 -> m5_1297  [key=0, style=bold, color=blue];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_18  [key=2, style=dotted];
m5_38 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_9 -> m5_10  [key=0, style=solid, color=green];
m5_9 -> m5_25  [key=2, style=dotted, color=green];
m5_9 -> m5_26  [key=2, style=dotted, color=green];
m5_596 -> m5_597  [key=0, style=solid];
m5_598 -> m5_23  [key=2, style=dotted];
m5_598 -> m5_24  [key=2, style=dotted];
m5_598 -> m5_599  [key=0, style=solid];
m5_598 -> m5_607  [key=2, style=dotted];
m5_598 -> m5_600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_598 -> m5_604  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_599 -> m5_25  [key=2, style=dotted];
m5_599 -> m5_600  [key=0, style=solid];
m5_600 -> m5_27  [key=2, style=dotted];
m5_600 -> m5_601  [key=0, style=solid];
m5_597 -> m5_598  [key=0, style=solid];
m5_597 -> m5_597  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m5_597 -> m5_603  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_604 -> m5_605  [key=0, style=solid];
m5_604 -> m5_94  [key=2, style=dotted];
m5_604 -> m5_608  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_603 -> m5_609  [key=1, style=dashed, color=darkseagreen4, label=total];
m5_603 -> m5_604  [key=0, style=solid];
m5_601 -> m5_603  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_601 -> m5_601  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m5_601 -> m5_602  [key=0, style=solid];
m5_601 -> m5_605  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_605 -> m5_605  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_605 -> m5_602  [key=0, style=solid];
m5_602 -> m5_603  [key=0, style=solid];
m5_602 -> m5_606  [key=0, style=solid];
m5_606 -> m5_596  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid, color=green];
m5_2 -> m5_23  [key=2, style=dotted, color=green];
m5_2 -> m5_24  [key=2, style=dotted, color=green];
m5_2 -> m5_4  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_5  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_6  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_7  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_8  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_9  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_10  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_11  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_12  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_13  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_14  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_15  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_16  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_17  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_18  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_19  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_20  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_2 -> m5_21  [key=1, style=dashed, color=green, label=jsonTextReader];
m5_3 -> m5_2  [key=0, style=bold, color=blue];
m5_3 -> m5_4  [key=0, style=solid, color=green];
m5_3 -> m5_25  [key=2, style=dotted, color=green];
m5_3 -> m5_26  [key=2, style=dotted, color=green];
m5_1872 -> m5_1873  [key=0, style=solid];
m5_1873 -> m5_23  [key=2, style=dotted];
m5_1873 -> m5_24  [key=2, style=dotted];
m5_1873 -> m5_1874  [key=0, style=solid];
m5_1873 -> m5_1875  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1873 -> m5_1876  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1873 -> m5_1879  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1874 -> m5_26  [key=2, style=dotted];
m5_1874 -> m5_1875  [key=0, style=solid];
m5_1874 -> m5_300  [key=2, style=dotted];
m5_1875 -> m5_26  [key=2, style=dotted];
m5_1875 -> m5_1876  [key=0, style=solid];
m5_1875 -> m5_300  [key=2, style=dotted];
m5_1876 -> m5_1877  [key=0, style=solid];
m5_1876 -> m5_94  [key=2, style=dotted];
m5_1876 -> m5_1878  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1877 -> m5_1872  [key=0, style=bold, color=blue];
m5_1175 -> m5_1176  [key=0, style=solid];
m5_1177 -> m5_23  [key=2, style=dotted];
m5_1177 -> m5_1178  [key=0, style=solid];
m5_1177 -> m5_1179  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1180  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1181  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1182  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1183  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1184  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1185  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1186  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1187  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1188  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1189  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1190  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1191  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1192  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1193  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1177 -> m5_1194  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1176 -> m5_24  [key=2, style=dotted];
m5_1176 -> m5_1177  [key=0, style=solid];
m5_1178 -> m5_25  [key=2, style=dotted];
m5_1178 -> m5_26  [key=2, style=dotted];
m5_1178 -> m5_1179  [key=0, style=solid];
m5_1192 -> m5_25  [key=2, style=dotted];
m5_1192 -> m5_26  [key=2, style=dotted];
m5_1192 -> m5_1193  [key=0, style=solid];
m5_1194 -> m5_25  [key=2, style=dotted];
m5_1194 -> m5_1195  [key=0, style=solid];
m5_1194 -> m5_80  [key=2, style=dotted];
m5_1179 -> m5_27  [key=2, style=dotted];
m5_1179 -> m5_1180  [key=0, style=solid];
m5_1181 -> m5_27  [key=2, style=dotted];
m5_1181 -> m5_1182  [key=0, style=solid];
m5_1182 -> m5_27  [key=2, style=dotted];
m5_1182 -> m5_1183  [key=0, style=solid];
m5_1183 -> m5_27  [key=2, style=dotted];
m5_1183 -> m5_1184  [key=0, style=solid];
m5_1185 -> m5_27  [key=2, style=dotted];
m5_1185 -> m5_1186  [key=0, style=solid];
m5_1186 -> m5_27  [key=2, style=dotted];
m5_1186 -> m5_1187  [key=0, style=solid];
m5_1187 -> m5_27  [key=2, style=dotted];
m5_1187 -> m5_1188  [key=0, style=solid];
m5_1189 -> m5_27  [key=2, style=dotted];
m5_1189 -> m5_1190  [key=0, style=solid];
m5_1190 -> m5_27  [key=2, style=dotted];
m5_1190 -> m5_1191  [key=0, style=solid];
m5_1191 -> m5_27  [key=2, style=dotted];
m5_1191 -> m5_1192  [key=0, style=solid];
m5_1193 -> m5_27  [key=2, style=dotted];
m5_1193 -> m5_1194  [key=0, style=solid];
m5_1180 -> m5_1181  [key=0, style=solid];
m5_1180 -> m5_98  [key=2, style=dotted];
m5_1184 -> m5_1185  [key=0, style=solid];
m5_1184 -> m5_98  [key=2, style=dotted];
m5_1188 -> m5_1189  [key=0, style=solid];
m5_1188 -> m5_98  [key=2, style=dotted];
m5_1195 -> m5_1175  [key=0, style=bold, color=blue];
m5_1385 -> m5_1386  [key=0, style=solid];
m5_1387 -> m5_23  [key=2, style=dotted];
m5_1387 -> m5_24  [key=2, style=dotted];
m5_1387 -> m5_1388  [key=0, style=solid];
m5_1387 -> m5_1389  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1387 -> m5_1390  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1387 -> m5_1391  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1387 -> m5_1392  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1387 -> m5_1393  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1387 -> m5_1394  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1387 -> m5_1395  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1387 -> m5_1396  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1387 -> m5_1398  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1387 -> m5_1399  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1389 -> m5_25  [key=2, style=dotted];
m5_1389 -> m5_26  [key=2, style=dotted];
m5_1389 -> m5_1390  [key=0, style=solid];
m5_1391 -> m5_25  [key=2, style=dotted];
m5_1391 -> m5_26  [key=2, style=dotted];
m5_1391 -> m5_1392  [key=0, style=solid];
m5_1398 -> m5_25  [key=2, style=dotted];
m5_1398 -> m5_26  [key=2, style=dotted];
m5_1398 -> m5_1399  [key=0, style=solid];
m5_1390 -> m5_27  [key=2, style=dotted];
m5_1390 -> m5_1391  [key=0, style=solid];
m5_1392 -> m5_27  [key=2, style=dotted];
m5_1392 -> m5_1393  [key=0, style=solid];
m5_1394 -> m5_27  [key=2, style=dotted];
m5_1394 -> m5_1395  [key=0, style=solid];
m5_1395 -> m5_27  [key=2, style=dotted];
m5_1395 -> m5_1396  [key=0, style=solid];
m5_1399 -> m5_27  [key=2, style=dotted];
m5_1399 -> m5_1400  [key=0, style=solid];
m5_1397 -> m5_27  [key=2, style=dotted];
m5_1397 -> m5_1398  [key=0, style=solid];
m5_1397 -> m5_1397  [key=1, style=dashed, color=darkseagreen4, label=dt];
m5_1397 -> m5_1384  [key=2, style=dotted];
m5_1386 -> m5_1387  [key=0, style=solid];
m5_1386 -> m5_1386  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1388 -> m5_1389  [key=0, style=solid];
m5_1388 -> m5_1401  [key=2, style=dotted];
m5_1393 -> m5_1394  [key=0, style=solid];
m5_1393 -> m5_1226  [key=2, style=dotted];
m5_1396 -> m5_1397  [key=0, style=solid];
m5_1400 -> m5_1385  [key=0, style=bold, color=blue];
m5_2012 -> m5_2013  [key=0, style=solid];
m5_2014 -> m5_23  [key=2, style=dotted];
m5_2014 -> m5_24  [key=2, style=dotted];
m5_2014 -> m5_2015  [key=0, style=solid];
m5_2014 -> m5_2016  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2014 -> m5_2017  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2014 -> m5_2018  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2014 -> m5_2019  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2014 -> m5_2020  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2014 -> m5_2021  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2014 -> m5_2022  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2014 -> m5_2023  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2024 -> m5_23  [key=2, style=dotted];
m5_2024 -> m5_24  [key=2, style=dotted];
m5_2024 -> m5_2025  [key=0, style=solid];
m5_2024 -> m5_2026  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2024 -> m5_2027  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2024 -> m5_2028  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2024 -> m5_2029  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2024 -> m5_2030  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2024 -> m5_2031  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2024 -> m5_2032  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2024 -> m5_2033  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2034 -> m5_23  [key=2, style=dotted];
m5_2034 -> m5_24  [key=2, style=dotted];
m5_2034 -> m5_2035  [key=0, style=solid];
m5_2034 -> m5_2036  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2034 -> m5_2037  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2034 -> m5_2038  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2034 -> m5_2039  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2034 -> m5_2040  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2034 -> m5_2041  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2034 -> m5_2042  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2034 -> m5_2043  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2044 -> m5_23  [key=2, style=dotted];
m5_2044 -> m5_24  [key=2, style=dotted];
m5_2044 -> m5_2045  [key=0, style=solid];
m5_2044 -> m5_2046  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2044 -> m5_2047  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2044 -> m5_2048  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2044 -> m5_2049  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2044 -> m5_2050  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2044 -> m5_2051  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2044 -> m5_2052  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2044 -> m5_2053  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2054 -> m5_23  [key=2, style=dotted];
m5_2054 -> m5_24  [key=2, style=dotted];
m5_2054 -> m5_2055  [key=0, style=solid];
m5_2054 -> m5_2056  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2054 -> m5_2057  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2054 -> m5_2058  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2054 -> m5_2059  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2054 -> m5_2060  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2054 -> m5_2061  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2054 -> m5_2062  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2054 -> m5_2063  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2016 -> m5_25  [key=2, style=dotted];
m5_2016 -> m5_26  [key=2, style=dotted];
m5_2016 -> m5_2017  [key=0, style=solid];
m5_2017 -> m5_25  [key=2, style=dotted];
m5_2017 -> m5_26  [key=2, style=dotted];
m5_2017 -> m5_2018  [key=0, style=solid];
m5_2020 -> m5_25  [key=2, style=dotted];
m5_2020 -> m5_26  [key=2, style=dotted];
m5_2020 -> m5_2021  [key=0, style=solid];
m5_2023 -> m5_25  [key=2, style=dotted];
m5_2023 -> m5_26  [key=2, style=dotted];
m5_2023 -> m5_2024  [key=0, style=solid];
m5_2026 -> m5_25  [key=2, style=dotted];
m5_2026 -> m5_26  [key=2, style=dotted];
m5_2026 -> m5_2027  [key=0, style=solid];
m5_2027 -> m5_25  [key=2, style=dotted];
m5_2027 -> m5_26  [key=2, style=dotted];
m5_2027 -> m5_2028  [key=0, style=solid];
m5_2030 -> m5_25  [key=2, style=dotted];
m5_2030 -> m5_26  [key=2, style=dotted];
m5_2030 -> m5_2031  [key=0, style=solid];
m5_2033 -> m5_25  [key=2, style=dotted];
m5_2033 -> m5_26  [key=2, style=dotted];
m5_2033 -> m5_2034  [key=0, style=solid];
m5_2036 -> m5_25  [key=2, style=dotted];
m5_2036 -> m5_26  [key=2, style=dotted];
m5_2036 -> m5_2037  [key=0, style=solid];
m5_2037 -> m5_25  [key=2, style=dotted];
m5_2037 -> m5_26  [key=2, style=dotted];
m5_2037 -> m5_2038  [key=0, style=solid];
m5_2040 -> m5_25  [key=2, style=dotted];
m5_2040 -> m5_26  [key=2, style=dotted];
m5_2040 -> m5_2041  [key=0, style=solid];
m5_2043 -> m5_25  [key=2, style=dotted];
m5_2043 -> m5_26  [key=2, style=dotted];
m5_2043 -> m5_2044  [key=0, style=solid];
m5_2046 -> m5_25  [key=2, style=dotted];
m5_2046 -> m5_26  [key=2, style=dotted];
m5_2046 -> m5_2047  [key=0, style=solid];
m5_2053 -> m5_25  [key=2, style=dotted];
m5_2053 -> m5_26  [key=2, style=dotted];
m5_2053 -> m5_2054  [key=0, style=solid];
m5_2056 -> m5_25  [key=2, style=dotted];
m5_2056 -> m5_26  [key=2, style=dotted];
m5_2056 -> m5_2057  [key=0, style=solid];
m5_2063 -> m5_25  [key=2, style=dotted];
m5_2063 -> m5_26  [key=2, style=dotted];
m5_2063 -> m5_2064  [key=0, style=solid];
m5_2018 -> m5_27  [key=2, style=dotted];
m5_2018 -> m5_2019  [key=0, style=solid];
m5_2018 -> m5_2065  [key=2, style=dotted];
m5_2019 -> m5_27  [key=2, style=dotted];
m5_2019 -> m5_2020  [key=0, style=solid];
m5_2021 -> m5_27  [key=2, style=dotted];
m5_2021 -> m5_2022  [key=0, style=solid];
m5_2021 -> m5_2065  [key=2, style=dotted];
m5_2022 -> m5_27  [key=2, style=dotted];
m5_2022 -> m5_2023  [key=0, style=solid];
m5_2028 -> m5_27  [key=2, style=dotted];
m5_2028 -> m5_2029  [key=0, style=solid];
m5_2028 -> m5_2066  [key=2, style=dotted];
m5_2029 -> m5_27  [key=2, style=dotted];
m5_2029 -> m5_2030  [key=0, style=solid];
m5_2031 -> m5_27  [key=2, style=dotted];
m5_2031 -> m5_2032  [key=0, style=solid];
m5_2031 -> m5_2066  [key=2, style=dotted];
m5_2032 -> m5_27  [key=2, style=dotted];
m5_2032 -> m5_2033  [key=0, style=solid];
m5_2038 -> m5_27  [key=2, style=dotted];
m5_2038 -> m5_2039  [key=0, style=solid];
m5_2039 -> m5_27  [key=2, style=dotted];
m5_2039 -> m5_2040  [key=0, style=solid];
m5_2041 -> m5_27  [key=2, style=dotted];
m5_2041 -> m5_2042  [key=0, style=solid];
m5_2042 -> m5_27  [key=2, style=dotted];
m5_2042 -> m5_2043  [key=0, style=solid];
m5_2048 -> m5_27  [key=2, style=dotted];
m5_2048 -> m5_2049  [key=0, style=solid];
m5_2048 -> m5_2066  [key=2, style=dotted];
m5_2049 -> m5_27  [key=2, style=dotted];
m5_2049 -> m5_2050  [key=0, style=solid];
m5_2051 -> m5_27  [key=2, style=dotted];
m5_2051 -> m5_2052  [key=0, style=solid];
m5_2051 -> m5_2066  [key=2, style=dotted];
m5_2052 -> m5_27  [key=2, style=dotted];
m5_2052 -> m5_2053  [key=0, style=solid];
m5_2058 -> m5_27  [key=2, style=dotted];
m5_2058 -> m5_2059  [key=0, style=solid];
m5_2058 -> m5_2065  [key=2, style=dotted];
m5_2059 -> m5_27  [key=2, style=dotted];
m5_2059 -> m5_2060  [key=0, style=solid];
m5_2061 -> m5_27  [key=2, style=dotted];
m5_2061 -> m5_2062  [key=0, style=solid];
m5_2061 -> m5_2065  [key=2, style=dotted];
m5_2062 -> m5_27  [key=2, style=dotted];
m5_2062 -> m5_2063  [key=0, style=solid];
m5_2013 -> m5_2014  [key=0, style=solid];
m5_2013 -> m5_2024  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_2013 -> m5_2034  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_2013 -> m5_2044  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_2013 -> m5_2054  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_2013 -> m5_2013  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_2015 -> m5_2016  [key=0, style=solid];
m5_2025 -> m5_2026  [key=0, style=solid];
m5_2035 -> m5_2036  [key=0, style=solid];
m5_2045 -> m5_2046  [key=0, style=solid];
m5_2047 -> m5_2048  [key=0, style=solid];
m5_2047 -> m5_1226  [key=2, style=dotted];
m5_2050 -> m5_2051  [key=0, style=solid];
m5_2050 -> m5_1226  [key=2, style=dotted];
m5_2055 -> m5_2056  [key=0, style=solid];
m5_2057 -> m5_2058  [key=0, style=solid];
m5_2057 -> m5_2067  [key=2, style=dotted];
m5_2060 -> m5_2061  [key=0, style=solid];
m5_2060 -> m5_2067  [key=2, style=dotted];
m5_2064 -> m5_2012  [key=0, style=bold, color=blue];
m5_1209 -> m5_1210  [key=0, style=solid];
m5_1210 -> m5_23  [key=2, style=dotted];
m5_1210 -> m5_24  [key=2, style=dotted];
m5_1210 -> m5_1211  [key=0, style=solid];
m5_1210 -> m5_1212  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1212 -> m5_27  [key=2, style=dotted];
m5_1212 -> m5_1213  [key=0, style=solid];
m5_1211 -> m5_38  [key=2, style=dotted];
m5_1211 -> m5_1212  [key=0, style=solid];
m5_1211 -> m5_711  [key=2, style=dotted];
m5_1213 -> m5_1209  [key=0, style=bold, color=blue];
m5_1881 -> m5_1882  [key=0, style=solid];
m5_1887 -> m5_23  [key=2, style=dotted];
m5_1887 -> m5_24  [key=2, style=dotted];
m5_1887 -> m5_1888  [key=0, style=solid];
m5_1887 -> m5_1889  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1890  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1891  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1892  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1893  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1894  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1895  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1896  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1897  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1898  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1899  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1900  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1901  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1902  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1903  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1887 -> m5_1904  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_23  [key=2, style=dotted];
m5_1905 -> m5_24  [key=2, style=dotted];
m5_1905 -> m5_1906  [key=0, style=solid];
m5_1905 -> m5_1907  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1908  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1909  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1910  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1911  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1912  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1913  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1914  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1915  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1916  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1917  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1918  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1919  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1920  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1921  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1905 -> m5_1922  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1888 -> m5_25  [key=2, style=dotted];
m5_1888 -> m5_1889  [key=0, style=solid];
m5_1889 -> m5_25  [key=2, style=dotted];
m5_1889 -> m5_1890  [key=0, style=solid];
m5_1892 -> m5_25  [key=2, style=dotted];
m5_1892 -> m5_1893  [key=0, style=solid];
m5_1895 -> m5_25  [key=2, style=dotted];
m5_1895 -> m5_1896  [key=0, style=solid];
m5_1898 -> m5_25  [key=2, style=dotted];
m5_1898 -> m5_1899  [key=0, style=solid];
m5_1901 -> m5_25  [key=2, style=dotted];
m5_1901 -> m5_1902  [key=0, style=solid];
m5_1904 -> m5_25  [key=2, style=dotted];
m5_1904 -> m5_1905  [key=0, style=solid];
m5_1906 -> m5_25  [key=2, style=dotted];
m5_1906 -> m5_1907  [key=0, style=solid];
m5_1922 -> m5_25  [key=2, style=dotted];
m5_1922 -> m5_1923  [key=0, style=solid];
m5_1884 -> m5_27  [key=2, style=dotted];
m5_1884 -> m5_1885  [key=0, style=solid];
m5_1884 -> m5_1401  [key=2, style=dotted];
m5_1884 -> m5_1925  [key=2, style=dotted];
m5_1885 -> m5_27  [key=2, style=dotted];
m5_1885 -> m5_1886  [key=0, style=solid];
m5_1885 -> m5_1926  [key=2, style=dotted];
m5_1890 -> m5_27  [key=2, style=dotted];
m5_1890 -> m5_1891  [key=0, style=solid];
m5_1891 -> m5_27  [key=2, style=dotted];
m5_1891 -> m5_1892  [key=0, style=solid];
m5_1893 -> m5_27  [key=2, style=dotted];
m5_1893 -> m5_1894  [key=0, style=solid];
m5_1894 -> m5_27  [key=2, style=dotted];
m5_1894 -> m5_1895  [key=0, style=solid];
m5_1896 -> m5_27  [key=2, style=dotted];
m5_1896 -> m5_1897  [key=0, style=solid];
m5_1897 -> m5_27  [key=2, style=dotted];
m5_1897 -> m5_1898  [key=0, style=solid];
m5_1899 -> m5_27  [key=2, style=dotted];
m5_1899 -> m5_1900  [key=0, style=solid];
m5_1900 -> m5_27  [key=2, style=dotted];
m5_1900 -> m5_1901  [key=0, style=solid];
m5_1902 -> m5_27  [key=2, style=dotted];
m5_1902 -> m5_1903  [key=0, style=solid];
m5_1903 -> m5_27  [key=2, style=dotted];
m5_1903 -> m5_1904  [key=0, style=solid];
m5_1908 -> m5_27  [key=2, style=dotted];
m5_1908 -> m5_1909  [key=0, style=solid];
m5_1909 -> m5_27  [key=2, style=dotted];
m5_1909 -> m5_1910  [key=0, style=solid];
m5_1911 -> m5_27  [key=2, style=dotted];
m5_1911 -> m5_1912  [key=0, style=solid];
m5_1912 -> m5_27  [key=2, style=dotted];
m5_1912 -> m5_1913  [key=0, style=solid];
m5_1914 -> m5_27  [key=2, style=dotted];
m5_1914 -> m5_1915  [key=0, style=solid];
m5_1915 -> m5_27  [key=2, style=dotted];
m5_1915 -> m5_1916  [key=0, style=solid];
m5_1917 -> m5_27  [key=2, style=dotted];
m5_1917 -> m5_1918  [key=0, style=solid];
m5_1918 -> m5_27  [key=2, style=dotted];
m5_1918 -> m5_1919  [key=0, style=solid];
m5_1920 -> m5_27  [key=2, style=dotted];
m5_1920 -> m5_1921  [key=0, style=solid];
m5_1921 -> m5_27  [key=2, style=dotted];
m5_1921 -> m5_1922  [key=0, style=solid];
m5_1886 -> m5_1887  [key=0, style=solid];
m5_1886 -> m5_1905  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_1886 -> m5_1886  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1907 -> m5_1908  [key=0, style=solid];
m5_1907 -> m5_166  [key=2, style=dotted];
m5_1910 -> m5_1911  [key=0, style=solid];
m5_1910 -> m5_166  [key=2, style=dotted];
m5_1913 -> m5_1914  [key=0, style=solid];
m5_1913 -> m5_166  [key=2, style=dotted];
m5_1916 -> m5_1917  [key=0, style=solid];
m5_1916 -> m5_166  [key=2, style=dotted];
m5_1919 -> m5_1920  [key=0, style=solid];
m5_1919 -> m5_166  [key=2, style=dotted];
m5_1883 -> m5_1884  [key=0, style=solid];
m5_1883 -> m5_1885  [key=1, style=dashed, color=darkseagreen4, label=d];
m5_1883 -> m5_1924  [key=2, style=dotted];
m5_1882 -> m5_1883  [key=0, style=solid];
m5_1923 -> m5_1881  [key=0, style=bold, color=blue];
m5_99 -> m5_100  [key=0, style=solid];
m5_1340 -> m5_1341  [key=0, style=solid];
m5_1342 -> m5_23  [key=2, style=dotted];
m5_1342 -> m5_24  [key=2, style=dotted];
m5_1342 -> m5_1343  [key=0, style=solid];
m5_1342 -> m5_1344  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1342 -> m5_1345  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1342 -> m5_1346  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1342 -> m5_1347  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1342 -> m5_1348  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1342 -> m5_1349  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1342 -> m5_1350  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1342 -> m5_1351  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1342 -> m5_1352  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1343 -> m5_25  [key=2, style=dotted];
m5_1343 -> m5_26  [key=2, style=dotted];
m5_1343 -> m5_1344  [key=0, style=solid];
m5_1345 -> m5_25  [key=2, style=dotted];
m5_1345 -> m5_26  [key=2, style=dotted];
m5_1345 -> m5_1346  [key=0, style=solid];
m5_1351 -> m5_25  [key=2, style=dotted];
m5_1351 -> m5_26  [key=2, style=dotted];
m5_1351 -> m5_1352  [key=0, style=solid];
m5_1344 -> m5_27  [key=2, style=dotted];
m5_1344 -> m5_1345  [key=0, style=solid];
m5_1346 -> m5_27  [key=2, style=dotted];
m5_1346 -> m5_1347  [key=0, style=solid];
m5_1348 -> m5_27  [key=2, style=dotted];
m5_1348 -> m5_1349  [key=0, style=solid];
m5_1349 -> m5_27  [key=2, style=dotted];
m5_1349 -> m5_1350  [key=0, style=solid];
m5_1350 -> m5_27  [key=2, style=dotted];
m5_1350 -> m5_1351  [key=0, style=solid];
m5_1350 -> m5_1311  [key=2, style=dotted];
m5_1350 -> m5_1312  [key=2, style=dotted];
m5_1350 -> m5_1313  [key=2, style=dotted];
m5_1352 -> m5_27  [key=2, style=dotted];
m5_1352 -> m5_1353  [key=0, style=solid];
m5_1341 -> m5_1342  [key=0, style=solid];
m5_1341 -> m5_1341  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1347 -> m5_1348  [key=0, style=solid];
m5_1347 -> m5_1226  [key=2, style=dotted];
m5_1353 -> m5_1340  [key=0, style=bold, color=blue];
m5_705 -> m5_706  [key=0, style=solid];
m5_706 -> m5_23  [key=2, style=dotted];
m5_706 -> m5_24  [key=2, style=dotted];
m5_706 -> m5_707  [key=0, style=solid];
m5_706 -> m5_708  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_706 -> m5_709  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_707 -> m5_26  [key=2, style=dotted];
m5_707 -> m5_708  [key=0, style=solid];
m5_707 -> m5_300  [key=2, style=dotted];
m5_709 -> m5_27  [key=2, style=dotted];
m5_709 -> m5_710  [key=0, style=solid];
m5_708 -> m5_709  [key=0, style=solid];
m5_708 -> m5_694  [key=2, style=dotted];
m5_708 -> m5_711  [key=2, style=dotted];
m5_710 -> m5_705  [key=0, style=bold, color=blue];
m5_1856 -> m5_1857  [key=0, style=solid];
m5_1858 -> m5_23  [key=2, style=dotted];
m5_1858 -> m5_24  [key=2, style=dotted];
m5_1858 -> m5_1859  [key=0, style=solid];
m5_1858 -> m5_1860  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1861  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1862  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1863  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1864  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1865  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1866  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1867  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1868  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1869  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1858 -> m5_1870  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1859 -> m5_25  [key=2, style=dotted];
m5_1859 -> m5_1860  [key=0, style=solid];
m5_1861 -> m5_25  [key=2, style=dotted];
m5_1861 -> m5_1862  [key=0, style=solid];
m5_1863 -> m5_25  [key=2, style=dotted];
m5_1863 -> m5_1864  [key=0, style=solid];
m5_1865 -> m5_25  [key=2, style=dotted];
m5_1865 -> m5_1866  [key=0, style=solid];
m5_1867 -> m5_25  [key=2, style=dotted];
m5_1867 -> m5_1868  [key=0, style=solid];
m5_1869 -> m5_25  [key=2, style=dotted];
m5_1869 -> m5_1870  [key=0, style=solid];
m5_1860 -> m5_27  [key=2, style=dotted];
m5_1860 -> m5_1861  [key=0, style=solid];
m5_1862 -> m5_27  [key=2, style=dotted];
m5_1862 -> m5_1863  [key=0, style=solid];
m5_1864 -> m5_27  [key=2, style=dotted];
m5_1864 -> m5_1865  [key=0, style=solid];
m5_1866 -> m5_27  [key=2, style=dotted];
m5_1866 -> m5_1867  [key=0, style=solid];
m5_1868 -> m5_27  [key=2, style=dotted];
m5_1868 -> m5_1869  [key=0, style=solid];
m5_1870 -> m5_27  [key=2, style=dotted];
m5_1870 -> m5_1871  [key=0, style=solid];
m5_1857 -> m5_1858  [key=0, style=solid];
m5_1857 -> m5_1857  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1871 -> m5_1856  [key=0, style=bold, color=blue];
m5_1849 -> m5_1850  [key=0, style=solid];
m5_1851 -> m5_23  [key=2, style=dotted];
m5_1851 -> m5_24  [key=2, style=dotted];
m5_1851 -> m5_1852  [key=0, style=solid];
m5_1851 -> m5_1853  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1851 -> m5_1854  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1853 -> m5_27  [key=2, style=dotted];
m5_1853 -> m5_1854  [key=0, style=solid];
m5_1854 -> m5_27  [key=2, style=dotted];
m5_1854 -> m5_1855  [key=0, style=solid];
m5_1850 -> m5_1851  [key=0, style=solid];
m5_1850 -> m5_1850  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1852 -> m5_1853  [key=0, style=solid];
m5_1852 -> m5_166  [key=2, style=dotted];
m5_1855 -> m5_1849  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_1 -> m5_1  [key=3, color=green, style=bold, label="Local variable string json"];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_41 -> m5_42  [key=0, style=solid];
m5_885 -> m5_886  [key=0, style=solid];
m5_887 -> m5_23  [key=2, style=dotted];
m5_887 -> m5_24  [key=2, style=dotted];
m5_887 -> m5_888  [key=0, style=solid];
m5_889 -> m5_23  [key=2, style=dotted];
m5_889 -> m5_24  [key=2, style=dotted];
m5_889 -> m5_890  [key=0, style=solid];
m5_891 -> m5_23  [key=2, style=dotted];
m5_891 -> m5_24  [key=2, style=dotted];
m5_891 -> m5_892  [key=0, style=solid];
m5_893 -> m5_23  [key=2, style=dotted];
m5_893 -> m5_24  [key=2, style=dotted];
m5_893 -> m5_894  [key=0, style=solid];
m5_895 -> m5_23  [key=2, style=dotted];
m5_895 -> m5_24  [key=2, style=dotted];
m5_895 -> m5_896  [key=0, style=solid];
m5_895 -> m5_908  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_897 -> m5_23  [key=2, style=dotted];
m5_897 -> m5_24  [key=2, style=dotted];
m5_897 -> m5_898  [key=0, style=solid];
m5_897 -> m5_899  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_897 -> m5_911  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_900 -> m5_23  [key=2, style=dotted];
m5_900 -> m5_24  [key=2, style=dotted];
m5_900 -> m5_901  [key=0, style=solid];
m5_902 -> m5_23  [key=2, style=dotted];
m5_902 -> m5_24  [key=2, style=dotted];
m5_902 -> m5_903  [key=0, style=solid];
m5_904 -> m5_23  [key=2, style=dotted];
m5_904 -> m5_24  [key=2, style=dotted];
m5_904 -> m5_905  [key=0, style=solid];
m5_904 -> m5_914  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_888 -> m5_27  [key=2, style=dotted];
m5_888 -> m5_889  [key=0, style=solid];
m5_888 -> m5_166  [key=2, style=dotted];
m5_890 -> m5_27  [key=2, style=dotted];
m5_890 -> m5_891  [key=0, style=solid];
m5_890 -> m5_166  [key=2, style=dotted];
m5_892 -> m5_27  [key=2, style=dotted];
m5_892 -> m5_893  [key=0, style=solid];
m5_892 -> m5_166  [key=2, style=dotted];
m5_894 -> m5_27  [key=2, style=dotted];
m5_894 -> m5_895  [key=0, style=solid];
m5_894 -> m5_166  [key=2, style=dotted];
m5_901 -> m5_27  [key=2, style=dotted];
m5_901 -> m5_902  [key=0, style=solid];
m5_901 -> m5_166  [key=2, style=dotted];
m5_903 -> m5_27  [key=2, style=dotted];
m5_903 -> m5_904  [key=0, style=solid];
m5_903 -> m5_166  [key=2, style=dotted];
m5_886 -> m5_887  [key=0, style=solid];
m5_886 -> m5_842  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m5_896 -> m5_897  [key=0, style=solid];
m5_896 -> m5_94  [key=2, style=dotted];
m5_896 -> m5_907  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_898 -> m5_899  [key=0, style=solid];
m5_899 -> m5_900  [key=0, style=solid];
m5_899 -> m5_94  [key=2, style=dotted];
m5_899 -> m5_910  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_905 -> m5_906  [key=0, style=solid];
m5_905 -> m5_94  [key=2, style=dotted];
m5_905 -> m5_913  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_906 -> m5_885  [key=0, style=bold, color=blue];
m5_186 -> m5_187  [key=0, style=solid];
m5_188 -> m5_23  [key=2, style=dotted];
m5_188 -> m5_24  [key=2, style=dotted];
m5_188 -> m5_189  [key=0, style=solid];
m5_188 -> m5_190  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_191  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_192  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_193  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_194  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_195  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_196  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_197  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_198  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_199  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_200  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_201  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_202  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_203  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_204  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_205  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_206  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_207  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_208  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_188 -> m5_209  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_190 -> m5_25  [key=2, style=dotted];
m5_190 -> m5_26  [key=2, style=dotted];
m5_190 -> m5_191  [key=0, style=solid];
m5_192 -> m5_25  [key=2, style=dotted];
m5_192 -> m5_26  [key=2, style=dotted];
m5_192 -> m5_193  [key=0, style=solid];
m5_196 -> m5_25  [key=2, style=dotted];
m5_196 -> m5_26  [key=2, style=dotted];
m5_196 -> m5_197  [key=0, style=solid];
m5_200 -> m5_25  [key=2, style=dotted];
m5_200 -> m5_26  [key=2, style=dotted];
m5_200 -> m5_201  [key=0, style=solid];
m5_204 -> m5_25  [key=2, style=dotted];
m5_204 -> m5_26  [key=2, style=dotted];
m5_204 -> m5_205  [key=0, style=solid];
m5_208 -> m5_25  [key=2, style=dotted];
m5_208 -> m5_26  [key=2, style=dotted];
m5_208 -> m5_209  [key=0, style=solid];
m5_191 -> m5_27  [key=2, style=dotted];
m5_191 -> m5_192  [key=0, style=solid];
m5_193 -> m5_27  [key=2, style=dotted];
m5_193 -> m5_194  [key=0, style=solid];
m5_194 -> m5_27  [key=2, style=dotted];
m5_194 -> m5_195  [key=0, style=solid];
m5_195 -> m5_27  [key=2, style=dotted];
m5_195 -> m5_196  [key=0, style=solid];
m5_197 -> m5_27  [key=2, style=dotted];
m5_197 -> m5_198  [key=0, style=solid];
m5_198 -> m5_27  [key=2, style=dotted];
m5_198 -> m5_199  [key=0, style=solid];
m5_199 -> m5_27  [key=2, style=dotted];
m5_199 -> m5_200  [key=0, style=solid];
m5_201 -> m5_27  [key=2, style=dotted];
m5_201 -> m5_202  [key=0, style=solid];
m5_202 -> m5_27  [key=2, style=dotted];
m5_202 -> m5_203  [key=0, style=solid];
m5_203 -> m5_27  [key=2, style=dotted];
m5_203 -> m5_204  [key=0, style=solid];
m5_205 -> m5_27  [key=2, style=dotted];
m5_205 -> m5_206  [key=0, style=solid];
m5_205 -> m5_211  [key=2, style=dotted];
m5_206 -> m5_27  [key=2, style=dotted];
m5_206 -> m5_207  [key=0, style=solid];
m5_207 -> m5_27  [key=2, style=dotted];
m5_207 -> m5_208  [key=0, style=solid];
m5_209 -> m5_27  [key=2, style=dotted];
m5_209 -> m5_210  [key=0, style=solid];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_187  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_189 -> m5_190  [key=0, style=solid];
m5_210 -> m5_186  [key=0, style=bold, color=blue];
m5_778 -> m5_779  [key=0, style=solid];
m5_781 -> m5_23  [key=2, style=dotted];
m5_781 -> m5_24  [key=2, style=dotted];
m5_781 -> m5_782  [key=0, style=solid];
m5_781 -> m5_701  [key=2, style=dotted];
m5_781 -> m5_783  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_781 -> m5_784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_781 -> m5_785  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_781 -> m5_786  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_781 -> m5_788  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_781 -> m5_789  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_781 -> m5_790  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_781 -> m5_791  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_782 -> m5_26  [key=2, style=dotted];
m5_782 -> m5_783  [key=0, style=solid];
m5_782 -> m5_300  [key=2, style=dotted];
m5_784 -> m5_26  [key=2, style=dotted];
m5_784 -> m5_785  [key=0, style=solid];
m5_784 -> m5_300  [key=2, style=dotted];
m5_789 -> m5_26  [key=2, style=dotted];
m5_789 -> m5_790  [key=0, style=solid];
m5_789 -> m5_300  [key=2, style=dotted];
m5_783 -> m5_27  [key=2, style=dotted];
m5_783 -> m5_784  [key=0, style=solid];
m5_785 -> m5_27  [key=2, style=dotted];
m5_785 -> m5_786  [key=0, style=solid];
m5_788 -> m5_27  [key=2, style=dotted];
m5_788 -> m5_789  [key=0, style=solid];
m5_790 -> m5_27  [key=2, style=dotted];
m5_790 -> m5_791  [key=0, style=solid];
m5_780 -> m5_781  [key=0, style=solid];
m5_780 -> m5_279  [key=2, style=dotted];
m5_780 -> m5_787  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m5_786 -> m5_787  [key=0, style=solid];
m5_786 -> m5_694  [key=2, style=dotted];
m5_791 -> m5_792  [key=0, style=solid];
m5_791 -> m5_300  [key=2, style=dotted];
m5_791 -> m5_80  [key=2, style=dotted];
m5_787 -> m5_788  [key=0, style=solid];
m5_787 -> m5_793  [key=2, style=dotted];
m5_779 -> m5_780  [key=0, style=solid];
m5_779 -> m5_696  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m5_792 -> m5_778  [key=0, style=bold, color=blue];
m5_1214 -> m5_1215  [key=0, style=solid];
m5_1215 -> m5_23  [key=2, style=dotted];
m5_1215 -> m5_24  [key=2, style=dotted];
m5_1215 -> m5_1216  [key=0, style=solid];
m5_1215 -> m5_1219  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1216 -> m5_1217  [key=0, style=solid];
m5_1216 -> m5_94  [key=2, style=dotted];
m5_1216 -> m5_1218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1217 -> m5_1214  [key=0, style=bold, color=blue];
m5_1418 -> m5_1419  [key=0, style=solid];
m5_1420 -> m5_23  [key=2, style=dotted];
m5_1420 -> m5_24  [key=2, style=dotted];
m5_1420 -> m5_1421  [key=0, style=solid];
m5_1420 -> m5_1422  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1420 -> m5_1423  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1420 -> m5_1424  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1420 -> m5_1425  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1420 -> m5_1426  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1420 -> m5_1427  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1420 -> m5_1428  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1421 -> m5_25  [key=2, style=dotted];
m5_1421 -> m5_26  [key=2, style=dotted];
m5_1421 -> m5_1422  [key=0, style=solid];
m5_1423 -> m5_25  [key=2, style=dotted];
m5_1423 -> m5_26  [key=2, style=dotted];
m5_1423 -> m5_1424  [key=0, style=solid];
m5_1422 -> m5_27  [key=2, style=dotted];
m5_1422 -> m5_1423  [key=0, style=solid];
m5_1424 -> m5_27  [key=2, style=dotted];
m5_1424 -> m5_1425  [key=0, style=solid];
m5_1426 -> m5_27  [key=2, style=dotted];
m5_1426 -> m5_1427  [key=0, style=solid];
m5_1427 -> m5_27  [key=2, style=dotted];
m5_1427 -> m5_1428  [key=0, style=solid];
m5_1428 -> m5_27  [key=2, style=dotted];
m5_1428 -> m5_1429  [key=0, style=solid];
m5_1419 -> m5_1420  [key=0, style=solid];
m5_1419 -> m5_1419  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1425 -> m5_1426  [key=0, style=solid];
m5_1425 -> m5_166  [key=2, style=dotted];
m5_1429 -> m5_1418  [key=0, style=bold, color=blue];
m5_1661 -> m5_1662  [key=0, style=solid];
m5_1663 -> m5_23  [key=2, style=dotted];
m5_1663 -> m5_24  [key=2, style=dotted];
m5_1663 -> m5_1664  [key=0, style=solid];
m5_1663 -> m5_1665  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1663 -> m5_1666  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1663 -> m5_1667  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1664 -> m5_25  [key=2, style=dotted];
m5_1664 -> m5_26  [key=2, style=dotted];
m5_1664 -> m5_1665  [key=0, style=solid];
m5_1666 -> m5_25  [key=2, style=dotted];
m5_1666 -> m5_26  [key=2, style=dotted];
m5_1666 -> m5_1667  [key=0, style=solid];
m5_1665 -> m5_27  [key=2, style=dotted];
m5_1665 -> m5_1666  [key=0, style=solid];
m5_1667 -> m5_27  [key=2, style=dotted];
m5_1667 -> m5_1668  [key=0, style=solid];
m5_1662 -> m5_1663  [key=0, style=solid];
m5_1662 -> m5_1662  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1668 -> m5_1661  [key=0, style=bold, color=blue];
m5_1402 -> m5_1403  [key=0, style=solid];
m5_1404 -> m5_23  [key=2, style=dotted];
m5_1404 -> m5_24  [key=2, style=dotted];
m5_1404 -> m5_1405  [key=0, style=solid];
m5_1404 -> m5_1406  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1404 -> m5_1407  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1404 -> m5_1408  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1404 -> m5_1409  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1404 -> m5_1410  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1404 -> m5_1411  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1404 -> m5_1412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1404 -> m5_1413  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1404 -> m5_1415  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1404 -> m5_1416  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1406 -> m5_25  [key=2, style=dotted];
m5_1406 -> m5_26  [key=2, style=dotted];
m5_1406 -> m5_1407  [key=0, style=solid];
m5_1408 -> m5_25  [key=2, style=dotted];
m5_1408 -> m5_26  [key=2, style=dotted];
m5_1408 -> m5_1409  [key=0, style=solid];
m5_1415 -> m5_25  [key=2, style=dotted];
m5_1415 -> m5_26  [key=2, style=dotted];
m5_1415 -> m5_1416  [key=0, style=solid];
m5_1407 -> m5_27  [key=2, style=dotted];
m5_1407 -> m5_1408  [key=0, style=solid];
m5_1409 -> m5_27  [key=2, style=dotted];
m5_1409 -> m5_1410  [key=0, style=solid];
m5_1411 -> m5_27  [key=2, style=dotted];
m5_1411 -> m5_1412  [key=0, style=solid];
m5_1412 -> m5_27  [key=2, style=dotted];
m5_1412 -> m5_1413  [key=0, style=solid];
m5_1416 -> m5_27  [key=2, style=dotted];
m5_1416 -> m5_1417  [key=0, style=solid];
m5_1414 -> m5_27  [key=2, style=dotted];
m5_1414 -> m5_1415  [key=0, style=solid];
m5_1414 -> m5_1414  [key=1, style=dashed, color=darkseagreen4, label=dt];
m5_1414 -> m5_1384  [key=2, style=dotted];
m5_1403 -> m5_1404  [key=0, style=solid];
m5_1403 -> m5_1403  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1405 -> m5_1406  [key=0, style=solid];
m5_1405 -> m5_1401  [key=2, style=dotted];
m5_1410 -> m5_1411  [key=0, style=solid];
m5_1410 -> m5_1226  [key=2, style=dotted];
m5_1413 -> m5_1414  [key=0, style=solid];
m5_1417 -> m5_1402  [key=0, style=bold, color=blue];
m5_66 -> m5_25  [key=2, style=dotted];
m5_66 -> m5_26  [key=2, style=dotted];
m5_66 -> m5_67  [key=0, style=solid];
m5_68 -> m5_25  [key=2, style=dotted];
m5_68 -> m5_26  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_72 -> m5_25  [key=2, style=dotted];
m5_72 -> m5_26  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_74 -> m5_25  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_80  [key=2, style=dotted];
m5_74 -> m5_72  [key=0, style=bold, color=blue];
m5_65 -> m5_27  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_67 -> m5_27  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_69 -> m5_27  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_71  [key=2, style=dotted];
m5_70 -> m5_27  [key=2, style=dotted];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_68  [key=0, style=bold, color=blue];
m5_71 -> m5_27  [key=2, style=dotted];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_79  [key=2, style=dotted];
m5_73 -> m5_27  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_75  [key=2, style=dotted];
m5_77 -> m5_27  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_79  [key=2, style=dotted];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_81  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_78 -> m5_57  [key=0, style=bold, color=blue];
m5_78 -> m5_76  [key=0, style=bold, color=blue];
m5_31 -> m5_32  [key=0, style=solid, color=green];
m5_31 -> m5_39  [key=2, style=dotted, color=green];
m5_612 -> m5_613  [key=0, style=solid];
m5_614 -> m5_23  [key=2, style=dotted];
m5_614 -> m5_24  [key=2, style=dotted];
m5_614 -> m5_615  [key=0, style=solid];
m5_614 -> m5_607  [key=2, style=dotted];
m5_614 -> m5_616  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_614 -> m5_617  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_614 -> m5_621  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_615 -> m5_25  [key=2, style=dotted];
m5_615 -> m5_616  [key=0, style=solid];
m5_617 -> m5_27  [key=2, style=dotted];
m5_617 -> m5_618  [key=0, style=solid];
m5_616 -> m5_27  [key=2, style=dotted];
m5_616 -> m5_617  [key=0, style=solid];
m5_613 -> m5_614  [key=0, style=solid];
m5_613 -> m5_617  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_613 -> m5_613  [key=3, color=darkorchid, style=bold, label="Local variable long i"];
m5_613 -> m5_620  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_621 -> m5_622  [key=0, style=solid];
m5_621 -> m5_94  [key=2, style=dotted];
m5_621 -> m5_624  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_620 -> m5_625  [key=1, style=dashed, color=darkseagreen4, label=total];
m5_620 -> m5_621  [key=0, style=solid];
m5_618 -> m5_620  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_618 -> m5_601  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m5_618 -> m5_619  [key=0, style=solid];
m5_618 -> m5_622  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_622 -> m5_622  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_622 -> m5_619  [key=0, style=solid];
m5_619 -> m5_620  [key=0, style=solid];
m5_619 -> m5_623  [key=0, style=solid];
m5_623 -> m5_612  [key=0, style=bold, color=blue];
m5_2126 -> m5_2127  [key=0, style=solid];
m5_2127 -> m5_2131  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_2127 -> m5_2127  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_2127 -> m5_2128  [key=0, style=solid];
m5_2128 -> m5_2130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2128 -> m5_94  [key=2, style=dotted];
m5_2128 -> m5_2129  [key=0, style=solid];
m5_2129 -> m5_2126  [key=0, style=bold, color=blue];
m5_1269 -> m5_1270  [key=0, style=solid];
m5_1271 -> m5_23  [key=2, style=dotted];
m5_1271 -> m5_24  [key=2, style=dotted];
m5_1271 -> m5_1272  [key=0, style=solid];
m5_1271 -> m5_1273  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1271 -> m5_1274  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1271 -> m5_1275  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1271 -> m5_1276  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1271 -> m5_1277  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1271 -> m5_1278  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1271 -> m5_1279  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1271 -> m5_1280  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1271 -> m5_1281  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1271 -> m5_1282  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1272 -> m5_25  [key=2, style=dotted];
m5_1272 -> m5_26  [key=2, style=dotted];
m5_1272 -> m5_1273  [key=0, style=solid];
m5_1274 -> m5_25  [key=2, style=dotted];
m5_1274 -> m5_26  [key=2, style=dotted];
m5_1274 -> m5_1275  [key=0, style=solid];
m5_1277 -> m5_25  [key=2, style=dotted];
m5_1277 -> m5_26  [key=2, style=dotted];
m5_1277 -> m5_1278  [key=0, style=solid];
m5_1280 -> m5_25  [key=2, style=dotted];
m5_1280 -> m5_26  [key=2, style=dotted];
m5_1280 -> m5_1281  [key=0, style=solid];
m5_1282 -> m5_25  [key=2, style=dotted];
m5_1282 -> m5_1283  [key=0, style=solid];
m5_1282 -> m5_80  [key=2, style=dotted];
m5_1273 -> m5_27  [key=2, style=dotted];
m5_1273 -> m5_1274  [key=0, style=solid];
m5_1275 -> m5_27  [key=2, style=dotted];
m5_1275 -> m5_1276  [key=0, style=solid];
m5_1276 -> m5_27  [key=2, style=dotted];
m5_1276 -> m5_1277  [key=0, style=solid];
m5_1278 -> m5_27  [key=2, style=dotted];
m5_1278 -> m5_1279  [key=0, style=solid];
m5_1279 -> m5_27  [key=2, style=dotted];
m5_1279 -> m5_1280  [key=0, style=solid];
m5_1281 -> m5_27  [key=2, style=dotted];
m5_1281 -> m5_1282  [key=0, style=solid];
m5_1270 -> m5_1271  [key=0, style=solid];
m5_1270 -> m5_1270  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1283 -> m5_1269  [key=0, style=bold, color=blue];
m5_1227 -> m5_1228  [key=0, style=solid];
m5_1228 -> m5_23  [key=2, style=dotted];
m5_1228 -> m5_24  [key=2, style=dotted];
m5_1228 -> m5_1229  [key=0, style=solid];
m5_1228 -> m5_1232  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1229 -> m5_1230  [key=0, style=solid];
m5_1229 -> m5_94  [key=2, style=dotted];
m5_1229 -> m5_1231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1230 -> m5_1227  [key=0, style=bold, color=blue];
m5_23 -> m5_22  [key=0, style=solid];
m5_23 -> m5_31  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_43  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_695 -> m5_696  [key=0, style=solid];
m5_698 -> m5_23  [key=2, style=dotted];
m5_698 -> m5_24  [key=2, style=dotted];
m5_698 -> m5_699  [key=0, style=solid];
m5_698 -> m5_701  [key=2, style=dotted];
m5_698 -> m5_703  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_697 -> m5_698  [key=0, style=solid];
m5_697 -> m5_279  [key=2, style=dotted];
m5_699 -> m5_700  [key=0, style=solid];
m5_699 -> m5_94  [key=2, style=dotted];
m5_699 -> m5_702  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_696 -> m5_697  [key=0, style=solid];
m5_696 -> m5_696  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m5_700 -> m5_695  [key=0, style=bold, color=blue];
m5_1284 -> m5_1285  [key=0, style=solid];
m5_1286 -> m5_23  [key=2, style=dotted];
m5_1286 -> m5_24  [key=2, style=dotted];
m5_1286 -> m5_1287  [key=0, style=solid];
m5_1286 -> m5_1288  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1286 -> m5_1289  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1286 -> m5_1290  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1286 -> m5_1291  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1286 -> m5_1292  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1286 -> m5_1293  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1286 -> m5_1294  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1286 -> m5_1295  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1287 -> m5_25  [key=2, style=dotted];
m5_1287 -> m5_26  [key=2, style=dotted];
m5_1287 -> m5_1288  [key=0, style=solid];
m5_1289 -> m5_25  [key=2, style=dotted];
m5_1289 -> m5_26  [key=2, style=dotted];
m5_1289 -> m5_1290  [key=0, style=solid];
m5_1291 -> m5_25  [key=2, style=dotted];
m5_1291 -> m5_26  [key=2, style=dotted];
m5_1291 -> m5_1292  [key=0, style=solid];
m5_1294 -> m5_25  [key=2, style=dotted];
m5_1294 -> m5_26  [key=2, style=dotted];
m5_1294 -> m5_1295  [key=0, style=solid];
m5_1288 -> m5_27  [key=2, style=dotted];
m5_1288 -> m5_1289  [key=0, style=solid];
m5_1290 -> m5_27  [key=2, style=dotted];
m5_1290 -> m5_1291  [key=0, style=solid];
m5_1292 -> m5_27  [key=2, style=dotted];
m5_1292 -> m5_1293  [key=0, style=solid];
m5_1293 -> m5_27  [key=2, style=dotted];
m5_1293 -> m5_1294  [key=0, style=solid];
m5_1295 -> m5_27  [key=2, style=dotted];
m5_1295 -> m5_1296  [key=0, style=solid];
m5_1285 -> m5_1286  [key=0, style=solid];
m5_1285 -> m5_1285  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1296 -> m5_1284  [key=0, style=bold, color=blue];
m5_33 -> m5_34  [key=0, style=solid, color=green];
m5_33 -> m5_23  [key=2, style=dotted, color=green];
m5_33 -> m5_24  [key=2, style=dotted, color=green];
m5_32 -> m5_33  [key=0, style=solid, color=green];
m5_32 -> m5_27  [key=2, style=dotted, color=green];
m5_36 -> m5_37  [key=0, style=solid, color=green];
m5_36 -> m5_38  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JArray Parse"];
m5_36 -> m5_27  [key=2, style=dotted, color=green];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_43  [key=2, style=dotted];
m5_37 -> m5_44  [key=2, style=dotted];
m5_37 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_37 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_37 -> m5_28  [key=0, style=bold, color=blue];
m5_40 -> m5_42  [key=0, style=solid];
m5_40 -> m5_32  [key=2, style=dotted];
m5_42 -> m5_36  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_1262 -> m5_1263  [key=0, style=solid];
m5_1263 -> m5_23  [key=2, style=dotted];
m5_1263 -> m5_24  [key=2, style=dotted];
m5_1263 -> m5_1264  [key=0, style=solid];
m5_1263 -> m5_1267  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1264 -> m5_1265  [key=0, style=solid];
m5_1264 -> m5_94  [key=2, style=dotted];
m5_1264 -> m5_1266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1265 -> m5_1262  [key=0, style=bold, color=blue];
m5_1546 -> m5_1547  [key=0, style=solid];
m5_1548 -> m5_23  [key=2, style=dotted];
m5_1548 -> m5_24  [key=2, style=dotted];
m5_1548 -> m5_1549  [key=0, style=solid];
m5_1548 -> m5_1550  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1551  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1552  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1553  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1554  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1555  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1556  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1557  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1558  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1559  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1561  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1548 -> m5_1562  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1549 -> m5_25  [key=2, style=dotted];
m5_1549 -> m5_26  [key=2, style=dotted];
m5_1549 -> m5_1550  [key=0, style=solid];
m5_1551 -> m5_25  [key=2, style=dotted];
m5_1551 -> m5_26  [key=2, style=dotted];
m5_1551 -> m5_1552  [key=0, style=solid];
m5_1553 -> m5_25  [key=2, style=dotted];
m5_1553 -> m5_26  [key=2, style=dotted];
m5_1553 -> m5_1554  [key=0, style=solid];
m5_1555 -> m5_25  [key=2, style=dotted];
m5_1555 -> m5_26  [key=2, style=dotted];
m5_1555 -> m5_1556  [key=0, style=solid];
m5_1557 -> m5_25  [key=2, style=dotted];
m5_1557 -> m5_26  [key=2, style=dotted];
m5_1557 -> m5_1558  [key=0, style=solid];
m5_1559 -> m5_25  [key=2, style=dotted];
m5_1559 -> m5_26  [key=2, style=dotted];
m5_1559 -> m5_1560  [key=0, style=solid];
m5_1561 -> m5_25  [key=2, style=dotted];
m5_1561 -> m5_26  [key=2, style=dotted];
m5_1561 -> m5_1562  [key=0, style=solid];
m5_1550 -> m5_27  [key=2, style=dotted];
m5_1550 -> m5_1551  [key=0, style=solid];
m5_1552 -> m5_27  [key=2, style=dotted];
m5_1552 -> m5_1553  [key=0, style=solid];
m5_1554 -> m5_27  [key=2, style=dotted];
m5_1554 -> m5_1555  [key=0, style=solid];
m5_1556 -> m5_27  [key=2, style=dotted];
m5_1556 -> m5_1557  [key=0, style=solid];
m5_1558 -> m5_27  [key=2, style=dotted];
m5_1558 -> m5_1559  [key=0, style=solid];
m5_1560 -> m5_27  [key=2, style=dotted];
m5_1560 -> m5_1561  [key=0, style=solid];
m5_1562 -> m5_27  [key=2, style=dotted];
m5_1562 -> m5_1563  [key=0, style=solid];
m5_1547 -> m5_1548  [key=0, style=solid];
m5_1547 -> m5_1547  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1563 -> m5_1546  [key=0, style=bold, color=blue];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_100  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_103  [key=2, style=dotted];
m5_101 -> m5_23  [key=2, style=dotted];
m5_101 -> m5_24  [key=2, style=dotted];
m5_101 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_113  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_106  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_119  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_107  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_122  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_108  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_109  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_101 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_102 -> m5_100  [key=0, style=bold, color=blue];
m5_102 -> m5_25  [key=2, style=dotted];
m5_102 -> m5_26  [key=2, style=dotted];
m5_102 -> m5_103  [key=0, style=solid];
m5_1234 -> m5_1235  [key=0, style=solid];
m5_1235 -> m5_23  [key=2, style=dotted];
m5_1235 -> m5_24  [key=2, style=dotted];
m5_1235 -> m5_1236  [key=0, style=solid];
m5_1235 -> m5_1239  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1236 -> m5_1237  [key=0, style=solid];
m5_1236 -> m5_94  [key=2, style=dotted];
m5_1236 -> m5_1238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1237 -> m5_1234  [key=0, style=bold, color=blue];
m5_103 -> m5_27  [key=2, style=dotted];
m5_103 -> m5_104  [key=0, style=solid];
m5_1678 -> m5_1679  [key=0, style=solid];
m5_1680 -> m5_23  [key=2, style=dotted];
m5_1680 -> m5_1681  [key=0, style=solid];
m5_1680 -> m5_280  [key=2, style=dotted];
m5_1680 -> m5_318  [key=2, style=dotted];
m5_1680 -> m5_319  [key=2, style=dotted];
m5_1680 -> m5_1682  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1683  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1684  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1685  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1686  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1687  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1688  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1689  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1690  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1691  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1692  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1693  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1694  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1695  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1696  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1697  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1698  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1680 -> m5_1699  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1681 -> m5_25  [key=2, style=dotted];
m5_1681 -> m5_26  [key=2, style=dotted];
m5_1681 -> m5_1682  [key=0, style=solid];
m5_1683 -> m5_25  [key=2, style=dotted];
m5_1683 -> m5_26  [key=2, style=dotted];
m5_1683 -> m5_1684  [key=0, style=solid];
m5_1685 -> m5_25  [key=2, style=dotted];
m5_1685 -> m5_26  [key=2, style=dotted];
m5_1685 -> m5_1686  [key=0, style=solid];
m5_1687 -> m5_25  [key=2, style=dotted];
m5_1687 -> m5_26  [key=2, style=dotted];
m5_1687 -> m5_1688  [key=0, style=solid];
m5_1689 -> m5_25  [key=2, style=dotted];
m5_1689 -> m5_26  [key=2, style=dotted];
m5_1689 -> m5_1690  [key=0, style=solid];
m5_1691 -> m5_25  [key=2, style=dotted];
m5_1691 -> m5_26  [key=2, style=dotted];
m5_1691 -> m5_1692  [key=0, style=solid];
m5_1693 -> m5_25  [key=2, style=dotted];
m5_1693 -> m5_26  [key=2, style=dotted];
m5_1693 -> m5_1694  [key=0, style=solid];
m5_1695 -> m5_25  [key=2, style=dotted];
m5_1695 -> m5_26  [key=2, style=dotted];
m5_1695 -> m5_1696  [key=0, style=solid];
m5_1697 -> m5_25  [key=2, style=dotted];
m5_1697 -> m5_26  [key=2, style=dotted];
m5_1697 -> m5_1698  [key=0, style=solid];
m5_1699 -> m5_25  [key=2, style=dotted];
m5_1699 -> m5_1700  [key=0, style=solid];
m5_1699 -> m5_80  [key=2, style=dotted];
m5_1682 -> m5_27  [key=2, style=dotted];
m5_1682 -> m5_1683  [key=0, style=solid];
m5_1684 -> m5_27  [key=2, style=dotted];
m5_1684 -> m5_1685  [key=0, style=solid];
m5_1686 -> m5_27  [key=2, style=dotted];
m5_1686 -> m5_1687  [key=0, style=solid];
m5_1688 -> m5_27  [key=2, style=dotted];
m5_1688 -> m5_1689  [key=0, style=solid];
m5_1690 -> m5_27  [key=2, style=dotted];
m5_1690 -> m5_1691  [key=0, style=solid];
m5_1692 -> m5_27  [key=2, style=dotted];
m5_1692 -> m5_1693  [key=0, style=solid];
m5_1694 -> m5_27  [key=2, style=dotted];
m5_1694 -> m5_1695  [key=0, style=solid];
m5_1696 -> m5_27  [key=2, style=dotted];
m5_1696 -> m5_1697  [key=0, style=solid];
m5_1698 -> m5_27  [key=2, style=dotted];
m5_1698 -> m5_1699  [key=0, style=solid];
m5_1679 -> m5_1680  [key=0, style=solid];
m5_1679 -> m5_1679  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1700 -> m5_1678  [key=0, style=bold, color=blue];
m5_1528 -> m5_1529  [key=0, style=solid];
m5_1530 -> m5_23  [key=2, style=dotted];
m5_1530 -> m5_24  [key=2, style=dotted];
m5_1530 -> m5_1531  [key=0, style=solid];
m5_1530 -> m5_1532  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1530 -> m5_1533  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1530 -> m5_1534  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1530 -> m5_1535  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1531 -> m5_25  [key=2, style=dotted];
m5_1531 -> m5_26  [key=2, style=dotted];
m5_1531 -> m5_1532  [key=0, style=solid];
m5_1534 -> m5_25  [key=2, style=dotted];
m5_1534 -> m5_26  [key=2, style=dotted];
m5_1534 -> m5_1535  [key=0, style=solid];
m5_1532 -> m5_27  [key=2, style=dotted];
m5_1532 -> m5_1533  [key=0, style=solid];
m5_1533 -> m5_27  [key=2, style=dotted];
m5_1533 -> m5_1534  [key=0, style=solid];
m5_1535 -> m5_27  [key=2, style=dotted];
m5_1535 -> m5_1536  [key=0, style=solid];
m5_1529 -> m5_1530  [key=0, style=solid];
m5_1529 -> m5_1529  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1536 -> m5_1528  [key=0, style=bold, color=blue];
m5_528 -> m5_529  [key=0, style=solid];
m5_539 -> m5_23  [key=2, style=dotted];
m5_539 -> m5_24  [key=2, style=dotted];
m5_539 -> m5_540  [key=0, style=solid];
m5_539 -> m5_543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_539 -> m5_544  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_539 -> m5_546  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_539 -> m5_547  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_540 -> m5_25  [key=2, style=dotted];
m5_540 -> m5_26  [key=2, style=dotted];
m5_540 -> m5_541  [key=0, style=solid];
m5_543 -> m5_25  [key=2, style=dotted];
m5_543 -> m5_26  [key=2, style=dotted];
m5_543 -> m5_544  [key=0, style=solid];
m5_546 -> m5_25  [key=2, style=dotted];
m5_546 -> m5_26  [key=2, style=dotted];
m5_546 -> m5_547  [key=0, style=solid];
m5_547 -> m5_25  [key=2, style=dotted];
m5_547 -> m5_548  [key=0, style=solid];
m5_547 -> m5_80  [key=2, style=dotted];
m5_544 -> m5_27  [key=2, style=dotted];
m5_544 -> m5_545  [key=0, style=solid];
m5_538 -> m5_539  [key=0, style=solid];
m5_538 -> m5_554  [key=2, style=dotted];
m5_541 -> m5_544  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_541 -> m5_542  [key=0, style=solid];
m5_541 -> m5_545  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_542 -> m5_543  [key=0, style=solid];
m5_542 -> m5_546  [key=0, style=solid];
m5_542 -> m5_534  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_545 -> m5_542  [key=0, style=solid];
m5_545 -> m5_545  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_530 -> m5_538  [key=1, style=dashed, color=darkseagreen4, label=sw];
m5_530 -> m5_531  [key=0, style=solid];
m5_530 -> m5_549  [key=2, style=dotted];
m5_537 -> m5_538  [key=0, style=solid];
m5_537 -> m5_67  [key=2, style=dotted];
m5_534 -> m5_537  [key=0, style=solid];
m5_534 -> m5_534  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_534 -> m5_535  [key=0, style=solid];
m5_529 -> m5_542  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m5_529 -> m5_530  [key=0, style=solid];
m5_529 -> m5_534  [key=1, style=dashed, color=darkseagreen4, label=valueCount];
m5_529 -> m5_529  [key=3, color=darkorchid, style=bold, label="Local variable int valueCount"];
m5_531 -> m5_537  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_531 -> m5_532  [key=0, style=solid];
m5_531 -> m5_550  [key=2, style=dotted];
m5_531 -> m5_535  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_533 -> m5_534  [key=0, style=solid];
m5_533 -> m5_535  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_533 -> m5_536  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_536 -> m5_534  [key=0, style=solid];
m5_536 -> m5_536  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_535 -> m5_536  [key=0, style=solid];
m5_535 -> m5_552  [key=2, style=dotted];
m5_532 -> m5_533  [key=0, style=solid];
m5_532 -> m5_551  [key=2, style=dotted];
m5_548 -> m5_528  [key=0, style=bold, color=blue];
m5_212 -> m5_213  [key=0, style=solid];
m5_214 -> m5_23  [key=2, style=dotted];
m5_214 -> m5_24  [key=2, style=dotted];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_216  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_214 -> m5_217  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_214 -> m5_218  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_214 -> m5_221  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_216 -> m5_25  [key=2, style=dotted];
m5_216 -> m5_26  [key=2, style=dotted];
m5_216 -> m5_217  [key=0, style=solid];
m5_217 -> m5_27  [key=2, style=dotted];
m5_217 -> m5_218  [key=0, style=solid];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_213  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_215 -> m5_216  [key=0, style=solid];
m5_218 -> m5_219  [key=0, style=solid];
m5_218 -> m5_94  [key=2, style=dotted];
m5_218 -> m5_220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_219 -> m5_212  [key=0, style=bold, color=blue];
m5_98 -> m5_96  [key=0, style=bold, color=blue];
m5_108 -> m5_25  [key=2, style=dotted];
m5_108 -> m5_26  [key=2, style=dotted];
m5_108 -> m5_109  [key=0, style=solid];
m5_108 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_108 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Linq.JArray"];
m5_110 -> m5_25  [key=2, style=dotted];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_80  [key=2, style=dotted];
m5_109 -> m5_27  [key=2, style=dotted];
m5_109 -> m5_110  [key=0, style=solid];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_94  [key=2, style=dotted];
m5_104 -> m5_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_104 -> m5_104  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_94  [key=2, style=dotted];
m5_105 -> m5_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_105 -> m5_107  [key=2, style=dotted];
m5_106 -> m5_107  [key=0, style=solid];
m5_106 -> m5_94  [key=2, style=dotted];
m5_106 -> m5_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_106 -> m5_104  [key=0, style=bold, color=blue];
m5_107 -> m5_108  [key=0, style=solid];
m5_107 -> m5_94  [key=2, style=dotted];
m5_107 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_111 -> m5_99  [key=0, style=bold, color=blue];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_49  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Linq.JArray FromObject"];
m5_45 -> m5_25  [key=2, style=dotted];
m5_46 -> m5_47  [key=0, style=solid];
m5_46 -> m5_48  [key=2, style=dotted];
m5_46 -> m5_49  [key=2, style=dotted];
m5_46 -> m5_25  [key=2, style=dotted];
m5_47 -> m5_45  [key=0, style=bold, color=blue];
m5_47 -> m5_25  [key=2, style=dotted];
m5_47 -> m5_48  [key=0, style=solid];
m5_841 -> m5_842  [key=0, style=solid];
m5_843 -> m5_23  [key=2, style=dotted];
m5_843 -> m5_24  [key=2, style=dotted];
m5_843 -> m5_844  [key=0, style=solid];
m5_845 -> m5_23  [key=2, style=dotted];
m5_845 -> m5_24  [key=2, style=dotted];
m5_845 -> m5_846  [key=0, style=solid];
m5_847 -> m5_23  [key=2, style=dotted];
m5_847 -> m5_24  [key=2, style=dotted];
m5_847 -> m5_848  [key=0, style=solid];
m5_849 -> m5_23  [key=2, style=dotted];
m5_849 -> m5_24  [key=2, style=dotted];
m5_849 -> m5_850  [key=0, style=solid];
m5_851 -> m5_23  [key=2, style=dotted];
m5_851 -> m5_24  [key=2, style=dotted];
m5_851 -> m5_852  [key=0, style=solid];
m5_851 -> m5_868  [key=2, style=dotted];
m5_853 -> m5_23  [key=2, style=dotted];
m5_853 -> m5_24  [key=2, style=dotted];
m5_853 -> m5_854  [key=0, style=solid];
m5_853 -> m5_868  [key=2, style=dotted];
m5_855 -> m5_23  [key=2, style=dotted];
m5_855 -> m5_24  [key=2, style=dotted];
m5_855 -> m5_856  [key=0, style=solid];
m5_855 -> m5_869  [key=2, style=dotted];
m5_855 -> m5_871  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_857 -> m5_23  [key=2, style=dotted];
m5_857 -> m5_24  [key=2, style=dotted];
m5_857 -> m5_858  [key=0, style=solid];
m5_857 -> m5_874  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_859 -> m5_23  [key=2, style=dotted];
m5_859 -> m5_24  [key=2, style=dotted];
m5_859 -> m5_860  [key=0, style=solid];
m5_859 -> m5_877  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_861 -> m5_23  [key=2, style=dotted];
m5_861 -> m5_24  [key=2, style=dotted];
m5_861 -> m5_862  [key=0, style=solid];
m5_861 -> m5_880  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_863 -> m5_23  [key=2, style=dotted];
m5_863 -> m5_24  [key=2, style=dotted];
m5_863 -> m5_864  [key=0, style=solid];
m5_865 -> m5_23  [key=2, style=dotted];
m5_865 -> m5_24  [key=2, style=dotted];
m5_865 -> m5_866  [key=0, style=solid];
m5_865 -> m5_883  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_844 -> m5_27  [key=2, style=dotted];
m5_844 -> m5_845  [key=0, style=solid];
m5_844 -> m5_98  [key=2, style=dotted];
m5_846 -> m5_27  [key=2, style=dotted];
m5_846 -> m5_847  [key=0, style=solid];
m5_846 -> m5_98  [key=2, style=dotted];
m5_848 -> m5_27  [key=2, style=dotted];
m5_848 -> m5_849  [key=0, style=solid];
m5_848 -> m5_98  [key=2, style=dotted];
m5_850 -> m5_27  [key=2, style=dotted];
m5_850 -> m5_851  [key=0, style=solid];
m5_850 -> m5_98  [key=2, style=dotted];
m5_852 -> m5_27  [key=2, style=dotted];
m5_852 -> m5_853  [key=0, style=solid];
m5_852 -> m5_98  [key=2, style=dotted];
m5_854 -> m5_27  [key=2, style=dotted];
m5_854 -> m5_855  [key=0, style=solid];
m5_854 -> m5_98  [key=2, style=dotted];
m5_864 -> m5_27  [key=2, style=dotted];
m5_864 -> m5_865  [key=0, style=solid];
m5_864 -> m5_98  [key=2, style=dotted];
m5_842 -> m5_843  [key=0, style=solid];
m5_842 -> m5_842  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m5_856 -> m5_857  [key=0, style=solid];
m5_856 -> m5_94  [key=2, style=dotted];
m5_856 -> m5_870  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_858 -> m5_859  [key=0, style=solid];
m5_858 -> m5_94  [key=2, style=dotted];
m5_858 -> m5_873  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_860 -> m5_861  [key=0, style=solid];
m5_860 -> m5_94  [key=2, style=dotted];
m5_860 -> m5_876  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_862 -> m5_863  [key=0, style=solid];
m5_862 -> m5_94  [key=2, style=dotted];
m5_862 -> m5_879  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_866 -> m5_867  [key=0, style=solid];
m5_866 -> m5_94  [key=2, style=dotted];
m5_866 -> m5_882  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_867 -> m5_841  [key=0, style=bold, color=blue];
m5_644 -> m5_645  [key=0, style=solid];
m5_646 -> m5_23  [key=2, style=dotted];
m5_646 -> m5_647  [key=0, style=solid];
m5_646 -> m5_642  [key=2, style=dotted];
m5_646 -> m5_643  [key=2, style=dotted];
m5_646 -> m5_648  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_652 -> m5_23  [key=2, style=dotted];
m5_652 -> m5_653  [key=0, style=solid];
m5_652 -> m5_642  [key=2, style=dotted];
m5_652 -> m5_643  [key=2, style=dotted];
m5_652 -> m5_654  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_647 -> m5_25  [key=2, style=dotted];
m5_647 -> m5_648  [key=0, style=solid];
m5_653 -> m5_25  [key=2, style=dotted];
m5_653 -> m5_654  [key=0, style=solid];
m5_648 -> m5_27  [key=2, style=dotted];
m5_648 -> m5_649  [key=0, style=solid];
m5_654 -> m5_27  [key=2, style=dotted];
m5_654 -> m5_655  [key=0, style=solid];
m5_645 -> m5_646  [key=0, style=solid];
m5_645 -> m5_641  [key=2, style=dotted];
m5_645 -> m5_651  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_651 -> m5_652  [key=0, style=solid];
m5_649 -> m5_651  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_649 -> m5_601  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m5_649 -> m5_650  [key=0, style=solid];
m5_649 -> m5_655  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_655 -> m5_655  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_655 -> m5_650  [key=0, style=solid];
m5_650 -> m5_651  [key=0, style=solid];
m5_650 -> m5_656  [key=0, style=solid];
m5_656 -> m5_644  [key=0, style=bold, color=blue];
m5_508 -> m5_509  [key=0, style=solid];
m5_509 -> m5_511  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_509 -> m5_94  [key=2, style=dotted];
m5_509 -> m5_510  [key=0, style=solid];
m5_510 -> m5_508  [key=0, style=bold, color=blue];
m5_44 -> m5_23  [key=2, style=dotted];
m5_44 -> m5_24  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_44 -> m5_47  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_44 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_281 -> m5_282  [key=0, style=solid];
m5_283 -> m5_23  [key=2, style=dotted];
m5_283 -> m5_284  [key=0, style=solid];
m5_283 -> m5_280  [key=2, style=dotted];
m5_283 -> m5_285  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_288 -> m5_23  [key=2, style=dotted];
m5_288 -> m5_289  [key=0, style=solid];
m5_288 -> m5_280  [key=2, style=dotted];
m5_288 -> m5_290  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_284 -> m5_26  [key=2, style=dotted];
m5_284 -> m5_285  [key=0, style=solid];
m5_289 -> m5_26  [key=2, style=dotted];
m5_289 -> m5_290  [key=0, style=solid];
m5_291 -> m5_26  [key=2, style=dotted];
m5_291 -> m5_292  [key=0, style=solid];
m5_282 -> m5_283  [key=0, style=solid];
m5_282 -> m5_284  [key=1, style=dashed, color=darkseagreen4, label=ms];
m5_282 -> m5_293  [key=2, style=dotted];
m5_282 -> m5_286  [key=1, style=dashed, color=darkseagreen4, label=ms];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_294  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_289  [key=1, style=dashed, color=darkseagreen4, label=ms];
m5_287 -> m5_291  [key=1, style=dashed, color=darkseagreen4, label=ms];
m5_287 -> m5_293  [key=2, style=dotted];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_294  [key=2, style=dotted];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_80  [key=2, style=dotted];
m5_292 -> m5_281  [key=0, style=bold, color=blue];
m5_80 -> m5_81  [key=0, style=solid];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_83  [key=2, style=dotted];
m5_81 -> m5_84  [key=2, style=dotted];
m5_82 -> m5_80  [key=0, style=bold, color=blue];
m5_82 -> m5_83  [key=0, style=solid];
m5_586 -> m5_587  [key=0, style=solid];
m5_588 -> m5_23  [key=2, style=dotted];
m5_588 -> m5_24  [key=2, style=dotted];
m5_588 -> m5_589  [key=0, style=solid];
m5_588 -> m5_591  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_588 -> m5_593  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_588 -> m5_594  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_591 -> m5_25  [key=2, style=dotted];
m5_591 -> m5_592  [key=0, style=solid];
m5_593 -> m5_25  [key=2, style=dotted];
m5_593 -> m5_594  [key=0, style=solid];
m5_594 -> m5_27  [key=2, style=dotted];
m5_594 -> m5_595  [key=0, style=solid];
m5_587 -> m5_588  [key=0, style=solid];
m5_587 -> m5_587  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_589 -> m5_590  [key=0, style=solid];
m5_589 -> m5_592  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_589 -> m5_534  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_590 -> m5_591  [key=0, style=solid];
m5_590 -> m5_593  [key=0, style=solid];
m5_592 -> m5_590  [key=0, style=solid];
m5_592 -> m5_592  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_595 -> m5_586  [key=0, style=bold, color=blue];
m5_1971 -> m5_1972  [key=0, style=solid];
m5_1973 -> m5_23  [key=2, style=dotted];
m5_1973 -> m5_1974  [key=0, style=solid];
m5_1973 -> m5_280  [key=2, style=dotted];
m5_1973 -> m5_318  [key=2, style=dotted];
m5_1973 -> m5_319  [key=2, style=dotted];
m5_1973 -> m5_1975  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1976  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1977  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1978  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1979  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1980  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1981  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1982  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1983  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1984  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1985  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1986  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1987  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1988  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1989  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1990  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1991  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1992  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1993  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1994  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1995  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1996  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1997  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1998  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_1999  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2000  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2001  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2002  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2003  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2004  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2005  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2006  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2007  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2008  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2009  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1973 -> m5_2010  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1974 -> m5_25  [key=2, style=dotted];
m5_1974 -> m5_26  [key=2, style=dotted];
m5_1974 -> m5_1975  [key=0, style=solid];
m5_1975 -> m5_25  [key=2, style=dotted];
m5_1975 -> m5_26  [key=2, style=dotted];
m5_1975 -> m5_1976  [key=0, style=solid];
m5_1977 -> m5_25  [key=2, style=dotted];
m5_1977 -> m5_26  [key=2, style=dotted];
m5_1977 -> m5_1978  [key=0, style=solid];
m5_1980 -> m5_25  [key=2, style=dotted];
m5_1980 -> m5_26  [key=2, style=dotted];
m5_1980 -> m5_1981  [key=0, style=solid];
m5_1983 -> m5_25  [key=2, style=dotted];
m5_1983 -> m5_26  [key=2, style=dotted];
m5_1983 -> m5_1984  [key=0, style=solid];
m5_1986 -> m5_25  [key=2, style=dotted];
m5_1986 -> m5_26  [key=2, style=dotted];
m5_1986 -> m5_1987  [key=0, style=solid];
m5_1989 -> m5_25  [key=2, style=dotted];
m5_1989 -> m5_26  [key=2, style=dotted];
m5_1989 -> m5_1990  [key=0, style=solid];
m5_1992 -> m5_25  [key=2, style=dotted];
m5_1992 -> m5_26  [key=2, style=dotted];
m5_1992 -> m5_1993  [key=0, style=solid];
m5_1995 -> m5_25  [key=2, style=dotted];
m5_1995 -> m5_26  [key=2, style=dotted];
m5_1995 -> m5_1996  [key=0, style=solid];
m5_1998 -> m5_25  [key=2, style=dotted];
m5_1998 -> m5_26  [key=2, style=dotted];
m5_1998 -> m5_1999  [key=0, style=solid];
m5_2001 -> m5_25  [key=2, style=dotted];
m5_2001 -> m5_26  [key=2, style=dotted];
m5_2001 -> m5_2002  [key=0, style=solid];
m5_2004 -> m5_25  [key=2, style=dotted];
m5_2004 -> m5_26  [key=2, style=dotted];
m5_2004 -> m5_2005  [key=0, style=solid];
m5_2007 -> m5_25  [key=2, style=dotted];
m5_2007 -> m5_26  [key=2, style=dotted];
m5_2007 -> m5_2008  [key=0, style=solid];
m5_2010 -> m5_25  [key=2, style=dotted];
m5_2010 -> m5_26  [key=2, style=dotted];
m5_2010 -> m5_2011  [key=0, style=solid];
m5_1976 -> m5_27  [key=2, style=dotted];
m5_1976 -> m5_1977  [key=0, style=solid];
m5_1978 -> m5_27  [key=2, style=dotted];
m5_1978 -> m5_1979  [key=0, style=solid];
m5_1979 -> m5_27  [key=2, style=dotted];
m5_1979 -> m5_1980  [key=0, style=solid];
m5_1981 -> m5_27  [key=2, style=dotted];
m5_1981 -> m5_1982  [key=0, style=solid];
m5_1982 -> m5_27  [key=2, style=dotted];
m5_1982 -> m5_1983  [key=0, style=solid];
m5_1984 -> m5_27  [key=2, style=dotted];
m5_1984 -> m5_1985  [key=0, style=solid];
m5_1985 -> m5_27  [key=2, style=dotted];
m5_1985 -> m5_1986  [key=0, style=solid];
m5_1987 -> m5_27  [key=2, style=dotted];
m5_1987 -> m5_1988  [key=0, style=solid];
m5_1988 -> m5_27  [key=2, style=dotted];
m5_1988 -> m5_1989  [key=0, style=solid];
m5_1990 -> m5_27  [key=2, style=dotted];
m5_1990 -> m5_1991  [key=0, style=solid];
m5_1991 -> m5_27  [key=2, style=dotted];
m5_1991 -> m5_1992  [key=0, style=solid];
m5_1993 -> m5_27  [key=2, style=dotted];
m5_1993 -> m5_1994  [key=0, style=solid];
m5_1994 -> m5_27  [key=2, style=dotted];
m5_1994 -> m5_1995  [key=0, style=solid];
m5_1996 -> m5_27  [key=2, style=dotted];
m5_1996 -> m5_1997  [key=0, style=solid];
m5_1997 -> m5_27  [key=2, style=dotted];
m5_1997 -> m5_1998  [key=0, style=solid];
m5_1999 -> m5_27  [key=2, style=dotted];
m5_1999 -> m5_2000  [key=0, style=solid];
m5_2000 -> m5_27  [key=2, style=dotted];
m5_2000 -> m5_2001  [key=0, style=solid];
m5_2002 -> m5_27  [key=2, style=dotted];
m5_2002 -> m5_2003  [key=0, style=solid];
m5_2003 -> m5_27  [key=2, style=dotted];
m5_2003 -> m5_2004  [key=0, style=solid];
m5_2005 -> m5_27  [key=2, style=dotted];
m5_2005 -> m5_2006  [key=0, style=solid];
m5_2006 -> m5_27  [key=2, style=dotted];
m5_2006 -> m5_2007  [key=0, style=solid];
m5_2008 -> m5_27  [key=2, style=dotted];
m5_2008 -> m5_2009  [key=0, style=solid];
m5_2009 -> m5_27  [key=2, style=dotted];
m5_2009 -> m5_2010  [key=0, style=solid];
m5_1972 -> m5_1973  [key=0, style=solid];
m5_1972 -> m5_1972  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_2011 -> m5_1971  [key=0, style=bold, color=blue];
m5_2136 -> m5_2137  [key=0, style=solid];
m5_2136 -> m5_2139  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m5_2137 -> m5_2138  [key=0, style=solid];
m5_2137 -> m5_2139  [key=0, style=solid];
m5_2139 -> m5_2140  [key=0, style=solid];
m5_2139 -> m5_2142  [key=2, style=dotted];
m5_2138 -> m5_2140  [key=0, style=solid];
m5_2138 -> m5_2141  [key=2, style=dotted];
m5_2140 -> m5_2136  [key=0, style=bold, color=blue];
m5_1370 -> m5_1371  [key=0, style=solid];
m5_1372 -> m5_23  [key=2, style=dotted];
m5_1372 -> m5_24  [key=2, style=dotted];
m5_1372 -> m5_1373  [key=0, style=solid];
m5_1372 -> m5_1374  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1372 -> m5_1375  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1372 -> m5_1376  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1372 -> m5_1377  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1372 -> m5_1378  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1372 -> m5_1379  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1372 -> m5_1380  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1372 -> m5_1381  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1372 -> m5_1382  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1373 -> m5_25  [key=2, style=dotted];
m5_1373 -> m5_26  [key=2, style=dotted];
m5_1373 -> m5_1374  [key=0, style=solid];
m5_1375 -> m5_25  [key=2, style=dotted];
m5_1375 -> m5_26  [key=2, style=dotted];
m5_1375 -> m5_1376  [key=0, style=solid];
m5_1381 -> m5_25  [key=2, style=dotted];
m5_1381 -> m5_26  [key=2, style=dotted];
m5_1381 -> m5_1382  [key=0, style=solid];
m5_1374 -> m5_27  [key=2, style=dotted];
m5_1374 -> m5_1375  [key=0, style=solid];
m5_1376 -> m5_27  [key=2, style=dotted];
m5_1376 -> m5_1377  [key=0, style=solid];
m5_1378 -> m5_27  [key=2, style=dotted];
m5_1378 -> m5_1379  [key=0, style=solid];
m5_1379 -> m5_27  [key=2, style=dotted];
m5_1379 -> m5_1380  [key=0, style=solid];
m5_1380 -> m5_27  [key=2, style=dotted];
m5_1380 -> m5_1381  [key=0, style=solid];
m5_1380 -> m5_1311  [key=2, style=dotted];
m5_1380 -> m5_1384  [key=2, style=dotted];
m5_1382 -> m5_27  [key=2, style=dotted];
m5_1382 -> m5_1383  [key=0, style=solid];
m5_1371 -> m5_1372  [key=0, style=solid];
m5_1371 -> m5_1371  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1377 -> m5_1378  [key=0, style=solid];
m5_1377 -> m5_1226  [key=2, style=dotted];
m5_1383 -> m5_1370  [key=0, style=bold, color=blue];
m5_35 -> m5_36  [key=0, style=solid, color=green];
m5_35 -> m5_40  [key=2, style=dotted, color=green];
m5_35 -> m5_41  [key=2, style=dotted, color=green];
m5_151 -> m5_152  [key=0, style=solid];
m5_153 -> m5_23  [key=2, style=dotted];
m5_153 -> m5_24  [key=2, style=dotted];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_161  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_155 -> m5_23  [key=2, style=dotted];
m5_155 -> m5_24  [key=2, style=dotted];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_164  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_157 -> m5_23  [key=2, style=dotted];
m5_157 -> m5_24  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_168  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_155  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_152 -> m5_157  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_152 -> m5_152  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_94  [key=2, style=dotted];
m5_154 -> m5_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_94  [key=2, style=dotted];
m5_156 -> m5_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_94  [key=2, style=dotted];
m5_158 -> m5_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_159 -> m5_151  [key=0, style=bold, color=blue];
m5_1463 -> m5_1464  [key=0, style=solid];
m5_1464 -> m5_23  [key=2, style=dotted];
m5_1464 -> m5_24  [key=2, style=dotted];
m5_1464 -> m5_1465  [key=0, style=solid];
m5_1464 -> m5_1468  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1465 -> m5_1466  [key=0, style=solid];
m5_1465 -> m5_94  [key=2, style=dotted];
m5_1465 -> m5_1467  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1466 -> m5_1463  [key=0, style=bold, color=blue];
m5_1449 -> m5_1450  [key=0, style=solid];
m5_1450 -> m5_23  [key=2, style=dotted];
m5_1450 -> m5_24  [key=2, style=dotted];
m5_1450 -> m5_1451  [key=0, style=solid];
m5_1450 -> m5_1454  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1451 -> m5_1452  [key=0, style=solid];
m5_1451 -> m5_94  [key=2, style=dotted];
m5_1451 -> m5_1453  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1452 -> m5_1449  [key=0, style=bold, color=blue];
m5_223 -> m5_224  [key=0, style=solid];
m5_225 -> m5_23  [key=2, style=dotted];
m5_225 -> m5_24  [key=2, style=dotted];
m5_225 -> m5_226  [key=0, style=solid];
m5_225 -> m5_227  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_228  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_229  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_230  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_231  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_232  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_233  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_234  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_235  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_236  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_237  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_238  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_239  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_240  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_225 -> m5_241  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_226 -> m5_25  [key=2, style=dotted];
m5_226 -> m5_26  [key=2, style=dotted];
m5_226 -> m5_227  [key=0, style=solid];
m5_228 -> m5_25  [key=2, style=dotted];
m5_228 -> m5_26  [key=2, style=dotted];
m5_228 -> m5_229  [key=0, style=solid];
m5_230 -> m5_25  [key=2, style=dotted];
m5_230 -> m5_26  [key=2, style=dotted];
m5_230 -> m5_231  [key=0, style=solid];
m5_232 -> m5_25  [key=2, style=dotted];
m5_232 -> m5_26  [key=2, style=dotted];
m5_232 -> m5_233  [key=0, style=solid];
m5_234 -> m5_25  [key=2, style=dotted];
m5_234 -> m5_26  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_236 -> m5_25  [key=2, style=dotted];
m5_236 -> m5_26  [key=2, style=dotted];
m5_236 -> m5_237  [key=0, style=solid];
m5_239 -> m5_25  [key=2, style=dotted];
m5_239 -> m5_26  [key=2, style=dotted];
m5_239 -> m5_240  [key=0, style=solid];
m5_227 -> m5_27  [key=2, style=dotted];
m5_227 -> m5_228  [key=0, style=solid];
m5_229 -> m5_27  [key=2, style=dotted];
m5_229 -> m5_230  [key=0, style=solid];
m5_231 -> m5_27  [key=2, style=dotted];
m5_231 -> m5_232  [key=0, style=solid];
m5_233 -> m5_27  [key=2, style=dotted];
m5_233 -> m5_234  [key=0, style=solid];
m5_235 -> m5_27  [key=2, style=dotted];
m5_235 -> m5_236  [key=0, style=solid];
m5_237 -> m5_27  [key=2, style=dotted];
m5_237 -> m5_238  [key=0, style=solid];
m5_238 -> m5_27  [key=2, style=dotted];
m5_238 -> m5_239  [key=0, style=solid];
m5_240 -> m5_27  [key=2, style=dotted];
m5_240 -> m5_241  [key=0, style=solid];
m5_241 -> m5_27  [key=2, style=dotted];
m5_241 -> m5_242  [key=0, style=solid];
m5_224 -> m5_225  [key=0, style=solid];
m5_224 -> m5_224  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_242 -> m5_223  [key=0, style=bold, color=blue];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_98  [key=2, style=dotted];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_99  [key=2, style=dotted];
m5_97 -> m5_95  [key=0, style=bold, color=blue];
m5_243 -> m5_244  [key=0, style=solid];
m5_245 -> m5_23  [key=2, style=dotted];
m5_245 -> m5_24  [key=2, style=dotted];
m5_245 -> m5_246  [key=0, style=solid];
m5_245 -> m5_247  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_245 -> m5_248  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_245 -> m5_249  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_245 -> m5_250  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_246 -> m5_25  [key=2, style=dotted];
m5_246 -> m5_26  [key=2, style=dotted];
m5_246 -> m5_247  [key=0, style=solid];
m5_247 -> m5_25  [key=2, style=dotted];
m5_247 -> m5_26  [key=2, style=dotted];
m5_247 -> m5_248  [key=0, style=solid];
m5_248 -> m5_25  [key=2, style=dotted];
m5_248 -> m5_26  [key=2, style=dotted];
m5_248 -> m5_249  [key=0, style=solid];
m5_249 -> m5_27  [key=2, style=dotted];
m5_249 -> m5_250  [key=0, style=solid];
m5_251 -> m5_27  [key=2, style=dotted];
m5_251 -> m5_252  [key=0, style=solid];
m5_253 -> m5_27  [key=2, style=dotted];
m5_253 -> m5_254  [key=0, style=solid];
m5_244 -> m5_245  [key=0, style=solid];
m5_244 -> m5_244  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_250 -> m5_251  [key=0, style=solid];
m5_250 -> m5_255  [key=2, style=dotted];
m5_250 -> m5_252  [key=1, style=dashed, color=darkseagreen4, label=s];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_256  [key=2, style=dotted];
m5_254 -> m5_243  [key=0, style=bold, color=blue];
m5_4 -> m5_5  [key=0, style=solid, color=green];
m5_4 -> m5_27  [key=2, style=dotted, color=green];
m5_5 -> m5_4  [key=0, style=bold, color=blue];
m5_5 -> m5_6  [key=0, style=solid, color=green];
m5_5 -> m5_25  [key=2, style=dotted, color=green];
m5_5 -> m5_26  [key=2, style=dotted, color=green];
m5_1470 -> m5_1471  [key=0, style=solid];
m5_1471 -> m5_23  [key=2, style=dotted];
m5_1471 -> m5_24  [key=2, style=dotted];
m5_1471 -> m5_1472  [key=0, style=solid];
m5_1471 -> m5_1475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1472 -> m5_1473  [key=0, style=solid];
m5_1472 -> m5_94  [key=2, style=dotted];
m5_1472 -> m5_1474  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1473 -> m5_1470  [key=0, style=bold, color=blue];
m5_328 -> m5_329  [key=0, style=solid];
m5_330 -> m5_23  [key=2, style=dotted];
m5_330 -> m5_24  [key=2, style=dotted];
m5_330 -> m5_331  [key=0, style=solid];
m5_330 -> m5_332  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_333  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_334  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_335  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_336  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_337  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_338  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_339  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_340  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_341  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_330 -> m5_344  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_331 -> m5_25  [key=2, style=dotted];
m5_331 -> m5_332  [key=0, style=solid];
m5_333 -> m5_25  [key=2, style=dotted];
m5_333 -> m5_334  [key=0, style=solid];
m5_335 -> m5_25  [key=2, style=dotted];
m5_335 -> m5_336  [key=0, style=solid];
m5_337 -> m5_25  [key=2, style=dotted];
m5_337 -> m5_338  [key=0, style=solid];
m5_339 -> m5_25  [key=2, style=dotted];
m5_339 -> m5_340  [key=0, style=solid];
m5_332 -> m5_27  [key=2, style=dotted];
m5_332 -> m5_333  [key=0, style=solid];
m5_334 -> m5_27  [key=2, style=dotted];
m5_334 -> m5_335  [key=0, style=solid];
m5_336 -> m5_27  [key=2, style=dotted];
m5_336 -> m5_337  [key=0, style=solid];
m5_338 -> m5_27  [key=2, style=dotted];
m5_338 -> m5_339  [key=0, style=solid];
m5_340 -> m5_27  [key=2, style=dotted];
m5_340 -> m5_341  [key=0, style=solid];
m5_329 -> m5_330  [key=0, style=solid];
m5_329 -> m5_329  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_341 -> m5_342  [key=0, style=solid];
m5_341 -> m5_94  [key=2, style=dotted];
m5_341 -> m5_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_342 -> m5_328  [key=0, style=bold, color=blue];
m5_1622 -> m5_1623  [key=0, style=solid];
m5_1624 -> m5_23  [key=2, style=dotted];
m5_1624 -> m5_24  [key=2, style=dotted];
m5_1624 -> m5_1625  [key=0, style=solid];
m5_1624 -> m5_1628  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1623 -> m5_1624  [key=0, style=solid];
m5_1623 -> m5_1623  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1625 -> m5_1626  [key=0, style=solid];
m5_1625 -> m5_94  [key=2, style=dotted];
m5_1625 -> m5_1627  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1626 -> m5_1622  [key=0, style=bold, color=blue];
m5_657 -> m5_658  [key=0, style=solid];
m5_659 -> m5_23  [key=2, style=dotted];
m5_659 -> m5_24  [key=2, style=dotted];
m5_659 -> m5_660  [key=0, style=solid];
m5_659 -> m5_662  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_659 -> m5_664  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_659 -> m5_665  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_659 -> m5_666  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_662 -> m5_25  [key=2, style=dotted];
m5_662 -> m5_26  [key=2, style=dotted];
m5_662 -> m5_663  [key=0, style=solid];
m5_664 -> m5_25  [key=2, style=dotted];
m5_664 -> m5_26  [key=2, style=dotted];
m5_664 -> m5_665  [key=0, style=solid];
m5_665 -> m5_27  [key=2, style=dotted];
m5_665 -> m5_666  [key=0, style=solid];
m5_666 -> m5_27  [key=2, style=dotted];
m5_666 -> m5_667  [key=0, style=solid];
m5_658 -> m5_659  [key=0, style=solid];
m5_658 -> m5_658  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_660 -> m5_661  [key=0, style=solid];
m5_660 -> m5_663  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_660 -> m5_534  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_661 -> m5_662  [key=0, style=solid];
m5_661 -> m5_664  [key=0, style=solid];
m5_663 -> m5_661  [key=0, style=solid];
m5_663 -> m5_663  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_667 -> m5_657  [key=0, style=bold, color=blue];
m5_1430 -> m5_1431  [key=0, style=solid];
m5_1432 -> m5_23  [key=2, style=dotted];
m5_1432 -> m5_24  [key=2, style=dotted];
m5_1432 -> m5_1433  [key=0, style=solid];
m5_1432 -> m5_1434  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1432 -> m5_1435  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1432 -> m5_1436  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1432 -> m5_1437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1432 -> m5_1440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1433 -> m5_25  [key=2, style=dotted];
m5_1433 -> m5_26  [key=2, style=dotted];
m5_1433 -> m5_1434  [key=0, style=solid];
m5_1435 -> m5_25  [key=2, style=dotted];
m5_1435 -> m5_26  [key=2, style=dotted];
m5_1435 -> m5_1436  [key=0, style=solid];
m5_1434 -> m5_27  [key=2, style=dotted];
m5_1434 -> m5_1435  [key=0, style=solid];
m5_1436 -> m5_27  [key=2, style=dotted];
m5_1436 -> m5_1437  [key=0, style=solid];
m5_1431 -> m5_1432  [key=0, style=solid];
m5_1431 -> m5_1431  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1437 -> m5_1438  [key=0, style=solid];
m5_1437 -> m5_94  [key=2, style=dotted];
m5_1437 -> m5_1439  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1438 -> m5_1430  [key=0, style=bold, color=blue];
m5_668 -> m5_669  [key=0, style=solid];
m5_669 -> m5_23  [key=2, style=dotted];
m5_669 -> m5_24  [key=2, style=dotted];
m5_669 -> m5_670  [key=0, style=solid];
m5_669 -> m5_671  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_670 -> m5_26  [key=2, style=dotted];
m5_670 -> m5_671  [key=0, style=solid];
m5_670 -> m5_300  [key=2, style=dotted];
m5_671 -> m5_27  [key=2, style=dotted];
m5_671 -> m5_672  [key=0, style=solid];
m5_672 -> m5_668  [key=0, style=bold, color=blue];
m5_916 -> m5_917  [key=0, style=solid];
m5_918 -> m5_23  [key=2, style=dotted];
m5_918 -> m5_24  [key=2, style=dotted];
m5_918 -> m5_919  [key=0, style=solid];
m5_918 -> m5_920  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_918 -> m5_921  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_922 -> m5_23  [key=2, style=dotted];
m5_922 -> m5_24  [key=2, style=dotted];
m5_922 -> m5_923  [key=0, style=solid];
m5_922 -> m5_924  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_922 -> m5_925  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_926 -> m5_23  [key=2, style=dotted];
m5_926 -> m5_24  [key=2, style=dotted];
m5_926 -> m5_927  [key=0, style=solid];
m5_926 -> m5_928  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_926 -> m5_929  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_930 -> m5_23  [key=2, style=dotted];
m5_930 -> m5_24  [key=2, style=dotted];
m5_930 -> m5_931  [key=0, style=solid];
m5_930 -> m5_932  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_930 -> m5_933  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_934 -> m5_23  [key=2, style=dotted];
m5_934 -> m5_24  [key=2, style=dotted];
m5_934 -> m5_935  [key=0, style=solid];
m5_934 -> m5_946  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_936 -> m5_23  [key=2, style=dotted];
m5_936 -> m5_24  [key=2, style=dotted];
m5_936 -> m5_937  [key=0, style=solid];
m5_936 -> m5_938  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_936 -> m5_939  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_940 -> m5_23  [key=2, style=dotted];
m5_940 -> m5_24  [key=2, style=dotted];
m5_940 -> m5_941  [key=0, style=solid];
m5_942 -> m5_23  [key=2, style=dotted];
m5_942 -> m5_24  [key=2, style=dotted];
m5_942 -> m5_943  [key=0, style=solid];
m5_942 -> m5_949  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_919 -> m5_25  [key=2, style=dotted];
m5_919 -> m5_26  [key=2, style=dotted];
m5_919 -> m5_920  [key=0, style=solid];
m5_923 -> m5_25  [key=2, style=dotted];
m5_923 -> m5_26  [key=2, style=dotted];
m5_923 -> m5_924  [key=0, style=solid];
m5_927 -> m5_25  [key=2, style=dotted];
m5_927 -> m5_26  [key=2, style=dotted];
m5_927 -> m5_928  [key=0, style=solid];
m5_931 -> m5_25  [key=2, style=dotted];
m5_931 -> m5_26  [key=2, style=dotted];
m5_931 -> m5_932  [key=0, style=solid];
m5_937 -> m5_25  [key=2, style=dotted];
m5_937 -> m5_26  [key=2, style=dotted];
m5_937 -> m5_938  [key=0, style=solid];
m5_941 -> m5_25  [key=2, style=dotted];
m5_941 -> m5_942  [key=0, style=solid];
m5_941 -> m5_80  [key=2, style=dotted];
m5_920 -> m5_27  [key=2, style=dotted];
m5_920 -> m5_921  [key=0, style=solid];
m5_921 -> m5_27  [key=2, style=dotted];
m5_921 -> m5_922  [key=0, style=solid];
m5_924 -> m5_27  [key=2, style=dotted];
m5_924 -> m5_925  [key=0, style=solid];
m5_925 -> m5_27  [key=2, style=dotted];
m5_925 -> m5_926  [key=0, style=solid];
m5_928 -> m5_27  [key=2, style=dotted];
m5_928 -> m5_929  [key=0, style=solid];
m5_929 -> m5_27  [key=2, style=dotted];
m5_929 -> m5_930  [key=0, style=solid];
m5_932 -> m5_27  [key=2, style=dotted];
m5_932 -> m5_933  [key=0, style=solid];
m5_933 -> m5_27  [key=2, style=dotted];
m5_933 -> m5_934  [key=0, style=solid];
m5_938 -> m5_27  [key=2, style=dotted];
m5_938 -> m5_939  [key=0, style=solid];
m5_939 -> m5_27  [key=2, style=dotted];
m5_939 -> m5_940  [key=0, style=solid];
m5_917 -> m5_918  [key=0, style=solid];
m5_917 -> m5_842  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.JsonTextReader reader"];
m5_935 -> m5_936  [key=0, style=solid];
m5_935 -> m5_94  [key=2, style=dotted];
m5_935 -> m5_945  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_943 -> m5_944  [key=0, style=solid];
m5_943 -> m5_94  [key=2, style=dotted];
m5_943 -> m5_948  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_944 -> m5_916  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid, color=green];
m5_15 -> m5_25  [key=2, style=dotted, color=green];
m5_15 -> m5_26  [key=2, style=dotted, color=green];
m5_16 -> m5_17  [key=0, style=solid, color=green];
m5_16 -> m5_2  [key=2, style=dotted];
m5_16 -> m5_27  [key=2, style=dotted, color=green];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid, color=green];
m5_17 -> m5_27  [key=2, style=dotted, color=green];
m5_1442 -> m5_1443  [key=0, style=solid];
m5_1443 -> m5_23  [key=2, style=dotted];
m5_1443 -> m5_24  [key=2, style=dotted];
m5_1443 -> m5_1444  [key=0, style=solid];
m5_1443 -> m5_1447  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1444 -> m5_1445  [key=0, style=solid];
m5_1444 -> m5_94  [key=2, style=dotted];
m5_1444 -> m5_1446  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1445 -> m5_1442  [key=0, style=bold, color=blue];
m5_91 -> m5_27  [key=2, style=dotted];
m5_91 -> m5_92  [key=0, style=solid];
m5_1477 -> m5_1478  [key=0, style=solid];
m5_1479 -> m5_23  [key=2, style=dotted];
m5_1479 -> m5_24  [key=2, style=dotted];
m5_1479 -> m5_1480  [key=0, style=solid];
m5_1479 -> m5_1481  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1479 -> m5_1482  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1479 -> m5_1483  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1479 -> m5_1484  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1479 -> m5_1485  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1479 -> m5_1486  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1479 -> m5_1488  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1479 -> m5_1489  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1480 -> m5_25  [key=2, style=dotted];
m5_1480 -> m5_26  [key=2, style=dotted];
m5_1480 -> m5_1481  [key=0, style=solid];
m5_1482 -> m5_25  [key=2, style=dotted];
m5_1482 -> m5_26  [key=2, style=dotted];
m5_1482 -> m5_1483  [key=0, style=solid];
m5_1488 -> m5_25  [key=2, style=dotted];
m5_1488 -> m5_26  [key=2, style=dotted];
m5_1488 -> m5_1489  [key=0, style=solid];
m5_1481 -> m5_27  [key=2, style=dotted];
m5_1481 -> m5_1482  [key=0, style=solid];
m5_1483 -> m5_27  [key=2, style=dotted];
m5_1483 -> m5_1484  [key=0, style=solid];
m5_1485 -> m5_27  [key=2, style=dotted];
m5_1485 -> m5_1486  [key=0, style=solid];
m5_1486 -> m5_27  [key=2, style=dotted];
m5_1486 -> m5_1487  [key=0, style=solid];
m5_1489 -> m5_27  [key=2, style=dotted];
m5_1489 -> m5_1490  [key=0, style=solid];
m5_1487 -> m5_27  [key=2, style=dotted];
m5_1487 -> m5_1488  [key=0, style=solid];
m5_1478 -> m5_1479  [key=0, style=solid];
m5_1478 -> m5_1478  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1484 -> m5_1485  [key=0, style=solid];
m5_1484 -> m5_1487  [key=1, style=dashed, color=darkseagreen4, label=d];
m5_1484 -> m5_166  [key=2, style=dotted];
m5_1490 -> m5_1477  [key=0, style=bold, color=blue];
m5_811 -> m5_812  [key=0, style=solid];
m5_814 -> m5_23  [key=2, style=dotted];
m5_814 -> m5_815  [key=0, style=solid];
m5_814 -> m5_816  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_817  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_818  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_819  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_820  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_821  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_822  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_823  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_824  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_825  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_826  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_827  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_828  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_814 -> m5_829  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_813 -> m5_24  [key=2, style=dotted];
m5_813 -> m5_814  [key=0, style=solid];
m5_815 -> m5_27  [key=2, style=dotted];
m5_815 -> m5_816  [key=0, style=solid];
m5_817 -> m5_27  [key=2, style=dotted];
m5_817 -> m5_818  [key=0, style=solid];
m5_818 -> m5_27  [key=2, style=dotted];
m5_818 -> m5_819  [key=0, style=solid];
m5_820 -> m5_27  [key=2, style=dotted];
m5_820 -> m5_821  [key=0, style=solid];
m5_821 -> m5_27  [key=2, style=dotted];
m5_821 -> m5_822  [key=0, style=solid];
m5_823 -> m5_27  [key=2, style=dotted];
m5_823 -> m5_824  [key=0, style=solid];
m5_824 -> m5_27  [key=2, style=dotted];
m5_824 -> m5_825  [key=0, style=solid];
m5_825 -> m5_27  [key=2, style=dotted];
m5_825 -> m5_826  [key=0, style=solid];
m5_826 -> m5_27  [key=2, style=dotted];
m5_826 -> m5_827  [key=0, style=solid];
m5_828 -> m5_27  [key=2, style=dotted];
m5_828 -> m5_829  [key=0, style=solid];
m5_829 -> m5_27  [key=2, style=dotted];
m5_829 -> m5_830  [key=0, style=solid];
m5_816 -> m5_817  [key=0, style=solid];
m5_816 -> m5_300  [key=2, style=dotted];
m5_819 -> m5_820  [key=0, style=solid];
m5_819 -> m5_300  [key=2, style=dotted];
m5_822 -> m5_823  [key=0, style=solid];
m5_822 -> m5_300  [key=2, style=dotted];
m5_827 -> m5_828  [key=0, style=solid];
m5_827 -> m5_300  [key=2, style=dotted];
m5_812 -> m5_813  [key=0, style=solid];
m5_812 -> m5_812  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m5_830 -> m5_811  [key=0, style=bold, color=blue];
m5_1136 -> m5_1137  [key=0, style=solid];
m5_1138 -> m5_23  [key=2, style=dotted];
m5_1138 -> m5_1139  [key=0, style=solid];
m5_1138 -> m5_1140  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1141  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1142  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1143  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1144  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1145  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1146  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1147  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1148  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1149  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1150  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1151  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1138 -> m5_1152  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1137 -> m5_24  [key=2, style=dotted];
m5_1137 -> m5_1138  [key=0, style=solid];
m5_1139 -> m5_25  [key=2, style=dotted];
m5_1139 -> m5_26  [key=2, style=dotted];
m5_1139 -> m5_1140  [key=0, style=solid];
m5_1141 -> m5_25  [key=2, style=dotted];
m5_1141 -> m5_26  [key=2, style=dotted];
m5_1141 -> m5_1142  [key=0, style=solid];
m5_1144 -> m5_25  [key=2, style=dotted];
m5_1144 -> m5_26  [key=2, style=dotted];
m5_1144 -> m5_1145  [key=0, style=solid];
m5_1147 -> m5_25  [key=2, style=dotted];
m5_1147 -> m5_26  [key=2, style=dotted];
m5_1147 -> m5_1148  [key=0, style=solid];
m5_1150 -> m5_25  [key=2, style=dotted];
m5_1150 -> m5_26  [key=2, style=dotted];
m5_1150 -> m5_1151  [key=0, style=solid];
m5_1152 -> m5_25  [key=2, style=dotted];
m5_1152 -> m5_1153  [key=0, style=solid];
m5_1152 -> m5_80  [key=2, style=dotted];
m5_1140 -> m5_27  [key=2, style=dotted];
m5_1140 -> m5_1141  [key=0, style=solid];
m5_1142 -> m5_27  [key=2, style=dotted];
m5_1142 -> m5_1143  [key=0, style=solid];
m5_1143 -> m5_27  [key=2, style=dotted];
m5_1143 -> m5_1144  [key=0, style=solid];
m5_1145 -> m5_27  [key=2, style=dotted];
m5_1145 -> m5_1146  [key=0, style=solid];
m5_1146 -> m5_27  [key=2, style=dotted];
m5_1146 -> m5_1147  [key=0, style=solid];
m5_1148 -> m5_27  [key=2, style=dotted];
m5_1148 -> m5_1149  [key=0, style=solid];
m5_1149 -> m5_27  [key=2, style=dotted];
m5_1149 -> m5_1150  [key=0, style=solid];
m5_1151 -> m5_27  [key=2, style=dotted];
m5_1151 -> m5_1152  [key=0, style=solid];
m5_1153 -> m5_1136  [key=0, style=bold, color=blue];
m5_94 -> m5_92  [key=0, style=bold, color=blue];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_26  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_83  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1878 -> m5_1879  [key=0, style=solid];
m5_512 -> m5_23  [key=2, style=dotted];
m5_512 -> m5_513  [key=0, style=solid];
m5_609 -> m5_23  [key=2, style=dotted];
m5_609 -> m5_24  [key=2, style=dotted];
m5_609 -> m5_610  [key=0, style=solid];
m5_609 -> m5_607  [key=2, style=dotted];
m5_625 -> m5_23  [key=2, style=dotted];
m5_625 -> m5_24  [key=2, style=dotted];
m5_625 -> m5_626  [key=0, style=solid];
m5_625 -> m5_607  [key=2, style=dotted];
m5_2131 -> m5_23  [key=2, style=dotted];
m5_2131 -> m5_24  [key=2, style=dotted];
m5_2131 -> m5_2132  [key=0, style=solid];
m5_161 -> m5_25  [key=2, style=dotted];
m5_161 -> m5_162  [key=0, style=solid];
m5_184 -> m5_25  [key=2, style=dotted];
m5_184 -> m5_185  [key=0, style=solid];
m5_221 -> m5_25  [key=2, style=dotted];
m5_221 -> m5_222  [key=0, style=solid];
m5_326 -> m5_25  [key=2, style=dotted];
m5_326 -> m5_326  [key=0, style=solid];
m5_326 -> m5_327  [key=0, style=solid];
m5_344 -> m5_25  [key=2, style=dotted];
m5_344 -> m5_345  [key=0, style=solid];
m5_357 -> m5_25  [key=2, style=dotted];
m5_357 -> m5_357  [key=0, style=solid];
m5_357 -> m5_358  [key=0, style=solid];
m5_911 -> m5_25  [key=2, style=dotted];
m5_911 -> m5_912  [key=0, style=solid];
m5_946 -> m5_25  [key=2, style=dotted];
m5_946 -> m5_947  [key=0, style=solid];
m5_949 -> m5_25  [key=2, style=dotted];
m5_949 -> m5_950  [key=0, style=solid];
m5_1124 -> m5_25  [key=2, style=dotted];
m5_1124 -> m5_1125  [key=0, style=solid];
m5_1202 -> m5_25  [key=2, style=dotted];
m5_1202 -> m5_1203  [key=0, style=solid];
m5_1447 -> m5_25  [key=2, style=dotted];
m5_1447 -> m5_1448  [key=0, style=solid];
m5_1454 -> m5_25  [key=2, style=dotted];
m5_1454 -> m5_1455  [key=0, style=solid];
m5_1461 -> m5_25  [key=2, style=dotted];
m5_1461 -> m5_1462  [key=0, style=solid];
m5_1468 -> m5_25  [key=2, style=dotted];
m5_1468 -> m5_1469  [key=0, style=solid];
m5_1475 -> m5_25  [key=2, style=dotted];
m5_1475 -> m5_1476  [key=0, style=solid];
m5_1620 -> m5_25  [key=2, style=dotted];
m5_1620 -> m5_1621  [key=0, style=solid];
m5_1628 -> m5_25  [key=2, style=dotted];
m5_1628 -> m5_1629  [key=0, style=solid];
m5_1659 -> m5_25  [key=2, style=dotted];
m5_1659 -> m5_1660  [key=0, style=solid];
m5_1676 -> m5_25  [key=2, style=dotted];
m5_1676 -> m5_26  [key=2, style=dotted];
m5_1676 -> m5_1677  [key=0, style=solid];
m5_1840 -> m5_25  [key=2, style=dotted];
m5_1840 -> m5_1841  [key=0, style=solid];
m5_1934 -> m5_25  [key=2, style=dotted];
m5_1934 -> m5_26  [key=2, style=dotted];
m5_1934 -> m5_1935  [key=0, style=solid];
m5_1966 -> m5_25  [key=2, style=dotted];
m5_1966 -> m5_26  [key=2, style=dotted];
m5_1966 -> m5_1967  [key=0, style=solid];
m5_1969 -> m5_25  [key=2, style=dotted];
m5_1969 -> m5_26  [key=2, style=dotted];
m5_1969 -> m5_1970  [key=0, style=solid];
m5_2091 -> m5_25  [key=2, style=dotted];
m5_2091 -> m5_2092  [key=0, style=solid];
m5_2094 -> m5_25  [key=2, style=dotted];
m5_2094 -> m5_2095  [key=0, style=solid];
m5_2097 -> m5_25  [key=2, style=dotted];
m5_2097 -> m5_2098  [key=0, style=solid];
m5_2100 -> m5_25  [key=2, style=dotted];
m5_2100 -> m5_2101  [key=0, style=solid];
m5_2103 -> m5_25  [key=2, style=dotted];
m5_2103 -> m5_2104  [key=0, style=solid];
m5_2106 -> m5_25  [key=2, style=dotted];
m5_2106 -> m5_2107  [key=0, style=solid];
m5_2132 -> m5_25  [key=2, style=dotted];
m5_2132 -> m5_2132  [key=0, style=solid];
m5_2132 -> m5_2133  [key=0, style=solid];
m5_1219 -> m5_38  [key=2, style=dotted];
m5_1219 -> m5_1220  [key=0, style=solid];
m5_1239 -> m5_38  [key=2, style=dotted];
m5_1239 -> m5_1240  [key=0, style=solid];
m5_1260 -> m5_38  [key=2, style=dotted];
m5_1260 -> m5_1261  [key=0, style=solid];
m5_1267 -> m5_38  [key=2, style=dotted];
m5_1267 -> m5_1268  [key=0, style=solid];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_98  [key=2, style=dotted];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_98  [key=2, style=dotted];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_98  [key=2, style=dotted];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_98  [key=2, style=dotted];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_166  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_168 -> m5_98  [key=2, style=dotted];
m5_511 -> m5_512  [key=0, style=solid];
m5_513 -> m5_511  [key=0, style=bold, color=blue];
m5_519 -> m5_520  [key=0, style=solid];
m5_519 -> m5_300  [key=2, style=dotted];
m5_608 -> m5_609  [key=0, style=solid];
m5_610 -> m5_611  [key=0, style=solid];
m5_610 -> m5_98  [key=2, style=dotted];
m5_624 -> m5_625  [key=0, style=solid];
m5_626 -> m5_627  [key=0, style=solid];
m5_626 -> m5_98  [key=2, style=dotted];
m5_678 -> m5_679  [key=0, style=solid];
m5_678 -> m5_300  [key=2, style=dotted];
m5_685 -> m5_686  [key=0, style=solid];
m5_685 -> m5_300  [key=2, style=dotted];
m5_692 -> m5_693  [key=0, style=solid];
m5_692 -> m5_694  [key=2, style=dotted];
m5_703 -> m5_704  [key=0, style=solid];
m5_703 -> m5_694  [key=2, style=dotted];
m5_718 -> m5_719  [key=0, style=solid];
m5_718 -> m5_300  [key=2, style=dotted];
m5_871 -> m5_872  [key=0, style=solid];
m5_871 -> m5_98  [key=2, style=dotted];
m5_874 -> m5_875  [key=0, style=solid];
m5_874 -> m5_98  [key=2, style=dotted];
m5_877 -> m5_878  [key=0, style=solid];
m5_877 -> m5_98  [key=2, style=dotted];
m5_880 -> m5_881  [key=0, style=solid];
m5_880 -> m5_98  [key=2, style=dotted];
m5_883 -> m5_884  [key=0, style=solid];
m5_883 -> m5_98  [key=2, style=dotted];
m5_908 -> m5_909  [key=0, style=solid];
m5_908 -> m5_166  [key=2, style=dotted];
m5_914 -> m5_915  [key=0, style=solid];
m5_914 -> m5_166  [key=2, style=dotted];
m5_1232 -> m5_1233  [key=0, style=solid];
m5_1232 -> m5_166  [key=2, style=dotted];
m5_1246 -> m5_1247  [key=0, style=solid];
m5_1246 -> m5_1226  [key=2, style=dotted];
m5_1338 -> m5_1339  [key=0, style=solid];
m5_1338 -> m5_1226  [key=2, style=dotted];
m5_1440 -> m5_1441  [key=0, style=solid];
m5_1440 -> m5_98  [key=2, style=dotted];
m5_1879 -> m5_1880  [key=0, style=solid];
m5_1879 -> m5_300  [key=2, style=dotted];
m5_2130 -> m5_2131  [key=0, style=solid];
m5_160 -> m5_161  [key=0, style=solid];
m5_162 -> m5_160  [key=0, style=bold, color=blue];
m5_183 -> m5_184  [key=0, style=solid];
m5_185 -> m5_183  [key=0, style=bold, color=blue];
m5_220 -> m5_221  [key=0, style=solid];
m5_222 -> m5_220  [key=0, style=bold, color=blue];
m5_325 -> m5_326  [key=0, style=solid];
m5_327 -> m5_325  [key=0, style=bold, color=blue];
m5_343 -> m5_344  [key=0, style=solid];
m5_345 -> m5_343  [key=0, style=bold, color=blue];
m5_356 -> m5_357  [key=0, style=solid];
m5_358 -> m5_356  [key=0, style=bold, color=blue];
m5_910 -> m5_911  [key=0, style=solid];
m5_912 -> m5_910  [key=0, style=bold, color=blue];
m5_945 -> m5_946  [key=0, style=solid];
m5_947 -> m5_945  [key=0, style=bold, color=blue];
m5_948 -> m5_949  [key=0, style=solid];
m5_950 -> m5_948  [key=0, style=bold, color=blue];
m5_1123 -> m5_1124  [key=0, style=solid];
m5_1125 -> m5_1123  [key=0, style=bold, color=blue];
m5_1201 -> m5_1202  [key=0, style=solid];
m5_1203 -> m5_1201  [key=0, style=bold, color=blue];
m5_1446 -> m5_1447  [key=0, style=solid];
m5_1448 -> m5_1446  [key=0, style=bold, color=blue];
m5_1453 -> m5_1454  [key=0, style=solid];
m5_1455 -> m5_1453  [key=0, style=bold, color=blue];
m5_1460 -> m5_1461  [key=0, style=solid];
m5_1462 -> m5_1460  [key=0, style=bold, color=blue];
m5_1467 -> m5_1468  [key=0, style=solid];
m5_1469 -> m5_1467  [key=0, style=bold, color=blue];
m5_1474 -> m5_1475  [key=0, style=solid];
m5_1476 -> m5_1474  [key=0, style=bold, color=blue];
m5_1619 -> m5_1620  [key=0, style=solid];
m5_1621 -> m5_1619  [key=0, style=bold, color=blue];
m5_1627 -> m5_1628  [key=0, style=solid];
m5_1629 -> m5_1627  [key=0, style=bold, color=blue];
m5_1658 -> m5_1659  [key=0, style=solid];
m5_1660 -> m5_1658  [key=0, style=bold, color=blue];
m5_1675 -> m5_1676  [key=0, style=solid];
m5_1677 -> m5_1675  [key=0, style=bold, color=blue];
m5_1839 -> m5_1840  [key=0, style=solid];
m5_1841 -> m5_1839  [key=0, style=bold, color=blue];
m5_1933 -> m5_1934  [key=0, style=solid];
m5_1935 -> m5_1933  [key=0, style=bold, color=blue];
m5_1965 -> m5_1966  [key=0, style=solid];
m5_1967 -> m5_1965  [key=0, style=bold, color=blue];
m5_1968 -> m5_1969  [key=0, style=solid];
m5_1970 -> m5_1968  [key=0, style=bold, color=blue];
m5_2090 -> m5_2091  [key=0, style=solid];
m5_2092 -> m5_2090  [key=0, style=bold, color=blue];
m5_2093 -> m5_2094  [key=0, style=solid];
m5_2095 -> m5_2093  [key=0, style=bold, color=blue];
m5_2096 -> m5_2097  [key=0, style=solid];
m5_2098 -> m5_2096  [key=0, style=bold, color=blue];
m5_2099 -> m5_2100  [key=0, style=solid];
m5_2101 -> m5_2099  [key=0, style=bold, color=blue];
m5_2102 -> m5_2103  [key=0, style=solid];
m5_2104 -> m5_2102  [key=0, style=bold, color=blue];
m5_2105 -> m5_2106  [key=0, style=solid];
m5_2107 -> m5_2105  [key=0, style=bold, color=blue];
m5_2133 -> m5_2130  [key=0, style=bold, color=blue];
m5_1218 -> m5_1219  [key=0, style=solid];
m5_1220 -> m5_1218  [key=0, style=bold, color=blue];
m5_1238 -> m5_1239  [key=0, style=solid];
m5_1240 -> m5_1238  [key=0, style=bold, color=blue];
m5_1259 -> m5_1260  [key=0, style=solid];
m5_1261 -> m5_1259  [key=0, style=bold, color=blue];
m5_1266 -> m5_1267  [key=0, style=solid];
m5_1268 -> m5_1266  [key=0, style=bold, color=blue];
m5_95 -> m5_96  [key=0, style=solid];
m5_112 -> m5_113  [key=0, style=solid];
m5_114 -> m5_112  [key=0, style=bold, color=blue];
m5_115 -> m5_116  [key=0, style=solid];
m5_117 -> m5_115  [key=0, style=bold, color=blue];
m5_118 -> m5_119  [key=0, style=solid];
m5_120 -> m5_118  [key=0, style=bold, color=blue];
m5_121 -> m5_122  [key=0, style=solid];
m5_123 -> m5_121  [key=0, style=bold, color=blue];
m5_163 -> m5_164  [key=0, style=solid];
m5_165 -> m5_163  [key=0, style=bold, color=blue];
m5_167 -> m5_168  [key=0, style=solid];
m5_169 -> m5_167  [key=0, style=bold, color=blue];
m5_518 -> m5_519  [key=0, style=solid];
m5_520 -> m5_518  [key=0, style=bold, color=blue];
m5_611 -> m5_608  [key=0, style=bold, color=blue];
m5_627 -> m5_624  [key=0, style=bold, color=blue];
m5_677 -> m5_678  [key=0, style=solid];
m5_679 -> m5_677  [key=0, style=bold, color=blue];
m5_684 -> m5_685  [key=0, style=solid];
m5_686 -> m5_684  [key=0, style=bold, color=blue];
m5_691 -> m5_692  [key=0, style=solid];
m5_693 -> m5_691  [key=0, style=bold, color=blue];
m5_702 -> m5_703  [key=0, style=solid];
m5_704 -> m5_702  [key=0, style=bold, color=blue];
m5_717 -> m5_718  [key=0, style=solid];
m5_719 -> m5_717  [key=0, style=bold, color=blue];
m5_870 -> m5_871  [key=0, style=solid];
m5_872 -> m5_870  [key=0, style=bold, color=blue];
m5_873 -> m5_874  [key=0, style=solid];
m5_875 -> m5_873  [key=0, style=bold, color=blue];
m5_876 -> m5_877  [key=0, style=solid];
m5_878 -> m5_876  [key=0, style=bold, color=blue];
m5_879 -> m5_880  [key=0, style=solid];
m5_881 -> m5_879  [key=0, style=bold, color=blue];
m5_882 -> m5_883  [key=0, style=solid];
m5_884 -> m5_882  [key=0, style=bold, color=blue];
m5_907 -> m5_908  [key=0, style=solid];
m5_909 -> m5_907  [key=0, style=bold, color=blue];
m5_913 -> m5_914  [key=0, style=solid];
m5_915 -> m5_913  [key=0, style=bold, color=blue];
m5_1231 -> m5_1232  [key=0, style=solid];
m5_1233 -> m5_1231  [key=0, style=bold, color=blue];
m5_1245 -> m5_1246  [key=0, style=solid];
m5_1247 -> m5_1245  [key=0, style=bold, color=blue];
m5_1337 -> m5_1338  [key=0, style=solid];
m5_1339 -> m5_1337  [key=0, style=bold, color=blue];
m5_1439 -> m5_1440  [key=0, style=solid];
m5_1441 -> m5_1439  [key=0, style=bold, color=blue];
m5_1880 -> m5_1878  [key=0, style=bold, color=blue];
m5_28 -> m5_29  [key=0, style=solid, color=green];
m5_28 -> m5_35  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid, color=green];
m5_29 -> m5_23  [key=2, style=dotted, color=green];
m5_29 -> m5_24  [key=2, style=dotted, color=green];
m5_30 -> m5_31  [key=0, style=solid, color=green];
m5_30 -> m5_38  [key=2, style=dotted, color=green];
m5_30 -> m5_32  [key=1, style=dashed, color=green, label=data];
m5_30 -> m5_18  [key=0, style=bold, color=blue];
m5_34 -> m5_35  [key=0, style=solid, color=green];
m5_34 -> m5_38  [key=2, style=dotted, color=green];
m5_34 -> m5_36  [key=1, style=dashed, color=green, label=data];
m5_137 -> m5_138  [key=0, style=solid];
m5_139 -> m5_23  [key=2, style=dotted];
m5_139 -> m5_24  [key=2, style=dotted];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_141  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_139 -> m5_142  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_139 -> m5_143  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_139 -> m5_144  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_139 -> m5_145  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_139 -> m5_146  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_139 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_139 -> m5_148  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_139 -> m5_149  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_140 -> m5_25  [key=2, style=dotted];
m5_140 -> m5_26  [key=2, style=dotted];
m5_140 -> m5_141  [key=0, style=solid];
m5_142 -> m5_25  [key=2, style=dotted];
m5_142 -> m5_26  [key=2, style=dotted];
m5_142 -> m5_143  [key=0, style=solid];
m5_144 -> m5_25  [key=2, style=dotted];
m5_144 -> m5_26  [key=2, style=dotted];
m5_144 -> m5_145  [key=0, style=solid];
m5_147 -> m5_25  [key=2, style=dotted];
m5_147 -> m5_26  [key=2, style=dotted];
m5_147 -> m5_148  [key=0, style=solid];
m5_149 -> m5_25  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_80  [key=2, style=dotted];
m5_141 -> m5_27  [key=2, style=dotted];
m5_141 -> m5_142  [key=0, style=solid];
m5_143 -> m5_27  [key=2, style=dotted];
m5_143 -> m5_144  [key=0, style=solid];
m5_145 -> m5_27  [key=2, style=dotted];
m5_145 -> m5_146  [key=0, style=solid];
m5_146 -> m5_27  [key=2, style=dotted];
m5_146 -> m5_147  [key=0, style=solid];
m5_148 -> m5_27  [key=2, style=dotted];
m5_148 -> m5_149  [key=0, style=solid];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_138  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_150 -> m5_137  [key=0, style=bold, color=blue];
m5_1196 -> m5_1197  [key=0, style=solid];
m5_1197 -> m5_23  [key=2, style=dotted];
m5_1197 -> m5_24  [key=2, style=dotted];
m5_1197 -> m5_1198  [key=0, style=solid];
m5_1197 -> m5_1199  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1197 -> m5_1202  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1198 -> m5_25  [key=2, style=dotted];
m5_1198 -> m5_1199  [key=0, style=solid];
m5_1199 -> m5_1200  [key=0, style=solid];
m5_1199 -> m5_94  [key=2, style=dotted];
m5_1199 -> m5_1201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1200 -> m5_1196  [key=0, style=bold, color=blue];
m5_555 -> m5_556  [key=0, style=solid];
m5_557 -> m5_23  [key=2, style=dotted];
m5_557 -> m5_558  [key=0, style=solid];
m5_557 -> m5_280  [key=2, style=dotted];
m5_557 -> m5_318  [key=2, style=dotted];
m5_557 -> m5_319  [key=2, style=dotted];
m5_557 -> m5_559  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_560  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_561  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_562  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_563  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_564  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_565  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_566  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_568  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_569  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_570  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_571  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_572  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_573  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_576  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_577  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_578  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_579  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_557 -> m5_584  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_558 -> m5_25  [key=2, style=dotted];
m5_558 -> m5_26  [key=2, style=dotted];
m5_558 -> m5_559  [key=0, style=solid];
m5_560 -> m5_25  [key=2, style=dotted];
m5_560 -> m5_26  [key=2, style=dotted];
m5_560 -> m5_561  [key=0, style=solid];
m5_562 -> m5_25  [key=2, style=dotted];
m5_562 -> m5_26  [key=2, style=dotted];
m5_562 -> m5_563  [key=0, style=solid];
m5_564 -> m5_25  [key=2, style=dotted];
m5_564 -> m5_26  [key=2, style=dotted];
m5_564 -> m5_565  [key=0, style=solid];
m5_566 -> m5_25  [key=2, style=dotted];
m5_566 -> m5_26  [key=2, style=dotted];
m5_566 -> m5_567  [key=0, style=solid];
m5_568 -> m5_25  [key=2, style=dotted];
m5_568 -> m5_26  [key=2, style=dotted];
m5_568 -> m5_569  [key=0, style=solid];
m5_570 -> m5_25  [key=2, style=dotted];
m5_570 -> m5_26  [key=2, style=dotted];
m5_570 -> m5_571  [key=0, style=solid];
m5_572 -> m5_25  [key=2, style=dotted];
m5_572 -> m5_26  [key=2, style=dotted];
m5_572 -> m5_573  [key=0, style=solid];
m5_574 -> m5_25  [key=2, style=dotted];
m5_574 -> m5_26  [key=2, style=dotted];
m5_574 -> m5_575  [key=0, style=solid];
m5_576 -> m5_25  [key=2, style=dotted];
m5_576 -> m5_26  [key=2, style=dotted];
m5_576 -> m5_577  [key=0, style=solid];
m5_578 -> m5_25  [key=2, style=dotted];
m5_578 -> m5_26  [key=2, style=dotted];
m5_578 -> m5_579  [key=0, style=solid];
m5_581 -> m5_25  [key=2, style=dotted];
m5_581 -> m5_26  [key=2, style=dotted];
m5_581 -> m5_582  [key=0, style=solid];
m5_584 -> m5_25  [key=2, style=dotted];
m5_584 -> m5_585  [key=0, style=solid];
m5_584 -> m5_80  [key=2, style=dotted];
m5_559 -> m5_27  [key=2, style=dotted];
m5_559 -> m5_560  [key=0, style=solid];
m5_561 -> m5_27  [key=2, style=dotted];
m5_561 -> m5_562  [key=0, style=solid];
m5_563 -> m5_27  [key=2, style=dotted];
m5_563 -> m5_564  [key=0, style=solid];
m5_565 -> m5_27  [key=2, style=dotted];
m5_565 -> m5_566  [key=0, style=solid];
m5_567 -> m5_27  [key=2, style=dotted];
m5_567 -> m5_568  [key=0, style=solid];
m5_569 -> m5_27  [key=2, style=dotted];
m5_569 -> m5_570  [key=0, style=solid];
m5_571 -> m5_27  [key=2, style=dotted];
m5_571 -> m5_572  [key=0, style=solid];
m5_573 -> m5_27  [key=2, style=dotted];
m5_573 -> m5_574  [key=0, style=solid];
m5_575 -> m5_27  [key=2, style=dotted];
m5_575 -> m5_576  [key=0, style=solid];
m5_577 -> m5_27  [key=2, style=dotted];
m5_577 -> m5_578  [key=0, style=solid];
m5_579 -> m5_27  [key=2, style=dotted];
m5_579 -> m5_580  [key=0, style=solid];
m5_580 -> m5_27  [key=2, style=dotted];
m5_580 -> m5_581  [key=0, style=solid];
m5_582 -> m5_27  [key=2, style=dotted];
m5_582 -> m5_583  [key=0, style=solid];
m5_583 -> m5_27  [key=2, style=dotted];
m5_583 -> m5_584  [key=0, style=solid];
m5_556 -> m5_557  [key=0, style=solid];
m5_556 -> m5_556  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_585 -> m5_555  [key=0, style=bold, color=blue];
m5_1050 -> m5_1051  [key=0, style=solid];
m5_1052 -> m5_23  [key=2, style=dotted];
m5_1052 -> m5_24  [key=2, style=dotted];
m5_1052 -> m5_1053  [key=0, style=solid];
m5_1052 -> m5_1054  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1055  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1056  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1057  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1058  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1059  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1060  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1061  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1062  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1063  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1064  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1065  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1066  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1067  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1068  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1069  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1070  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1071  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1072  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1073  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1074  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1075  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1076  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1077  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1078  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1079  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1080  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1081  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1082  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1083  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1084  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1085  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1086  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1087  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1088  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1089  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1090  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1091  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1092  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1093  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1094  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1095  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1096  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1097  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1098  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1099  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1100  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1101  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1102  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1103  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1104  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1105  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1106  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1107  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1108  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1109  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1052 -> m5_1110  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1054 -> m5_27  [key=2, style=dotted];
m5_1054 -> m5_1055  [key=0, style=solid];
m5_1056 -> m5_27  [key=2, style=dotted];
m5_1056 -> m5_1057  [key=0, style=solid];
m5_1057 -> m5_27  [key=2, style=dotted];
m5_1057 -> m5_1058  [key=0, style=solid];
m5_1059 -> m5_27  [key=2, style=dotted];
m5_1059 -> m5_1060  [key=0, style=solid];
m5_1060 -> m5_27  [key=2, style=dotted];
m5_1060 -> m5_1061  [key=0, style=solid];
m5_1062 -> m5_27  [key=2, style=dotted];
m5_1062 -> m5_1063  [key=0, style=solid];
m5_1063 -> m5_27  [key=2, style=dotted];
m5_1063 -> m5_1064  [key=0, style=solid];
m5_1065 -> m5_27  [key=2, style=dotted];
m5_1065 -> m5_1066  [key=0, style=solid];
m5_1066 -> m5_27  [key=2, style=dotted];
m5_1066 -> m5_1067  [key=0, style=solid];
m5_1068 -> m5_27  [key=2, style=dotted];
m5_1068 -> m5_1069  [key=0, style=solid];
m5_1069 -> m5_27  [key=2, style=dotted];
m5_1069 -> m5_1070  [key=0, style=solid];
m5_1071 -> m5_27  [key=2, style=dotted];
m5_1071 -> m5_1072  [key=0, style=solid];
m5_1072 -> m5_27  [key=2, style=dotted];
m5_1072 -> m5_1073  [key=0, style=solid];
m5_1074 -> m5_27  [key=2, style=dotted];
m5_1074 -> m5_1075  [key=0, style=solid];
m5_1075 -> m5_27  [key=2, style=dotted];
m5_1075 -> m5_1076  [key=0, style=solid];
m5_1077 -> m5_27  [key=2, style=dotted];
m5_1077 -> m5_1078  [key=0, style=solid];
m5_1078 -> m5_27  [key=2, style=dotted];
m5_1078 -> m5_1079  [key=0, style=solid];
m5_1080 -> m5_27  [key=2, style=dotted];
m5_1080 -> m5_1081  [key=0, style=solid];
m5_1081 -> m5_27  [key=2, style=dotted];
m5_1081 -> m5_1082  [key=0, style=solid];
m5_1083 -> m5_27  [key=2, style=dotted];
m5_1083 -> m5_1084  [key=0, style=solid];
m5_1084 -> m5_27  [key=2, style=dotted];
m5_1084 -> m5_1085  [key=0, style=solid];
m5_1086 -> m5_27  [key=2, style=dotted];
m5_1086 -> m5_1087  [key=0, style=solid];
m5_1087 -> m5_27  [key=2, style=dotted];
m5_1087 -> m5_1088  [key=0, style=solid];
m5_1089 -> m5_27  [key=2, style=dotted];
m5_1089 -> m5_1090  [key=0, style=solid];
m5_1090 -> m5_27  [key=2, style=dotted];
m5_1090 -> m5_1091  [key=0, style=solid];
m5_1092 -> m5_27  [key=2, style=dotted];
m5_1092 -> m5_1093  [key=0, style=solid];
m5_1093 -> m5_27  [key=2, style=dotted];
m5_1093 -> m5_1094  [key=0, style=solid];
m5_1095 -> m5_27  [key=2, style=dotted];
m5_1095 -> m5_1096  [key=0, style=solid];
m5_1096 -> m5_27  [key=2, style=dotted];
m5_1096 -> m5_1097  [key=0, style=solid];
m5_1098 -> m5_27  [key=2, style=dotted];
m5_1098 -> m5_1099  [key=0, style=solid];
m5_1099 -> m5_27  [key=2, style=dotted];
m5_1099 -> m5_1100  [key=0, style=solid];
m5_1101 -> m5_27  [key=2, style=dotted];
m5_1101 -> m5_1102  [key=0, style=solid];
m5_1102 -> m5_27  [key=2, style=dotted];
m5_1102 -> m5_1103  [key=0, style=solid];
m5_1104 -> m5_27  [key=2, style=dotted];
m5_1104 -> m5_1105  [key=0, style=solid];
m5_1105 -> m5_27  [key=2, style=dotted];
m5_1105 -> m5_1106  [key=0, style=solid];
m5_1107 -> m5_27  [key=2, style=dotted];
m5_1107 -> m5_1108  [key=0, style=solid];
m5_1108 -> m5_27  [key=2, style=dotted];
m5_1108 -> m5_1109  [key=0, style=solid];
m5_1110 -> m5_27  [key=2, style=dotted];
m5_1110 -> m5_1111  [key=0, style=solid];
m5_1051 -> m5_1052  [key=0, style=solid];
m5_1051 -> m5_1051  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1053 -> m5_1054  [key=0, style=solid];
m5_1053 -> m5_300  [key=2, style=dotted];
m5_1055 -> m5_1056  [key=0, style=solid];
m5_1055 -> m5_300  [key=2, style=dotted];
m5_1058 -> m5_1059  [key=0, style=solid];
m5_1058 -> m5_300  [key=2, style=dotted];
m5_1061 -> m5_1062  [key=0, style=solid];
m5_1061 -> m5_300  [key=2, style=dotted];
m5_1064 -> m5_1065  [key=0, style=solid];
m5_1064 -> m5_300  [key=2, style=dotted];
m5_1067 -> m5_1068  [key=0, style=solid];
m5_1067 -> m5_300  [key=2, style=dotted];
m5_1070 -> m5_1071  [key=0, style=solid];
m5_1070 -> m5_300  [key=2, style=dotted];
m5_1073 -> m5_1074  [key=0, style=solid];
m5_1073 -> m5_300  [key=2, style=dotted];
m5_1076 -> m5_1077  [key=0, style=solid];
m5_1076 -> m5_300  [key=2, style=dotted];
m5_1079 -> m5_1080  [key=0, style=solid];
m5_1079 -> m5_300  [key=2, style=dotted];
m5_1082 -> m5_1083  [key=0, style=solid];
m5_1082 -> m5_300  [key=2, style=dotted];
m5_1085 -> m5_1086  [key=0, style=solid];
m5_1085 -> m5_300  [key=2, style=dotted];
m5_1088 -> m5_1089  [key=0, style=solid];
m5_1088 -> m5_300  [key=2, style=dotted];
m5_1091 -> m5_1092  [key=0, style=solid];
m5_1091 -> m5_300  [key=2, style=dotted];
m5_1094 -> m5_1095  [key=0, style=solid];
m5_1094 -> m5_300  [key=2, style=dotted];
m5_1097 -> m5_1098  [key=0, style=solid];
m5_1097 -> m5_300  [key=2, style=dotted];
m5_1100 -> m5_1101  [key=0, style=solid];
m5_1100 -> m5_300  [key=2, style=dotted];
m5_1103 -> m5_1104  [key=0, style=solid];
m5_1103 -> m5_300  [key=2, style=dotted];
m5_1106 -> m5_1107  [key=0, style=solid];
m5_1106 -> m5_300  [key=2, style=dotted];
m5_1109 -> m5_1110  [key=0, style=solid];
m5_1109 -> m5_300  [key=2, style=dotted];
m5_1111 -> m5_1050  [key=0, style=bold, color=blue];
m5_673 -> m5_674  [key=0, style=solid];
m5_674 -> m5_23  [key=2, style=dotted];
m5_674 -> m5_24  [key=2, style=dotted];
m5_674 -> m5_675  [key=0, style=solid];
m5_674 -> m5_678  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_675 -> m5_676  [key=0, style=solid];
m5_675 -> m5_94  [key=2, style=dotted];
m5_675 -> m5_677  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_676 -> m5_673  [key=0, style=bold, color=blue];
m5_836 -> m5_837  [key=0, style=solid];
m5_838 -> m5_23  [key=2, style=dotted];
m5_838 -> m5_24  [key=2, style=dotted];
m5_838 -> m5_839  [key=0, style=solid];
m5_839 -> m5_25  [key=2, style=dotted];
m5_839 -> m5_839  [key=0, style=solid];
m5_839 -> m5_840  [key=0, style=solid];
m5_837 -> m5_838  [key=0, style=solid];
m5_837 -> m5_837  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_840 -> m5_836  [key=0, style=bold, color=blue];
m5_1517 -> m5_1518  [key=0, style=solid];
m5_1519 -> m5_23  [key=2, style=dotted];
m5_1519 -> m5_24  [key=2, style=dotted];
m5_1519 -> m5_1520  [key=0, style=solid];
m5_1519 -> m5_1522  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1519 -> m5_1524  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1519 -> m5_1525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1519 -> m5_1526  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1522 -> m5_25  [key=2, style=dotted];
m5_1522 -> m5_26  [key=2, style=dotted];
m5_1522 -> m5_1523  [key=0, style=solid];
m5_1524 -> m5_25  [key=2, style=dotted];
m5_1524 -> m5_26  [key=2, style=dotted];
m5_1524 -> m5_1525  [key=0, style=solid];
m5_1526 -> m5_25  [key=2, style=dotted];
m5_1526 -> m5_1527  [key=0, style=solid];
m5_1526 -> m5_80  [key=2, style=dotted];
m5_1525 -> m5_27  [key=2, style=dotted];
m5_1525 -> m5_1526  [key=0, style=solid];
m5_1518 -> m5_1519  [key=0, style=solid];
m5_1518 -> m5_1518  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1520 -> m5_1521  [key=0, style=solid];
m5_1520 -> m5_1523  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_1520 -> m5_534  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_1521 -> m5_1522  [key=0, style=solid];
m5_1521 -> m5_1524  [key=0, style=solid];
m5_1523 -> m5_1521  [key=0, style=solid];
m5_1523 -> m5_1523  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_1527 -> m5_1517  [key=0, style=bold, color=blue];
m5_301 -> m5_302  [key=0, style=solid];
m5_303 -> m5_23  [key=2, style=dotted];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_280  [key=2, style=dotted];
m5_303 -> m5_318  [key=2, style=dotted];
m5_303 -> m5_319  [key=2, style=dotted];
m5_303 -> m5_305  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_306  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_307  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_308  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_309  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_310  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_311  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_312  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_313  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_314  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_315  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_303 -> m5_316  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_304 -> m5_26  [key=2, style=dotted];
m5_304 -> m5_305  [key=0, style=solid];
m5_304 -> m5_300  [key=2, style=dotted];
m5_305 -> m5_26  [key=2, style=dotted];
m5_305 -> m5_306  [key=0, style=solid];
m5_305 -> m5_300  [key=2, style=dotted];
m5_306 -> m5_26  [key=2, style=dotted];
m5_306 -> m5_307  [key=0, style=solid];
m5_306 -> m5_300  [key=2, style=dotted];
m5_309 -> m5_26  [key=2, style=dotted];
m5_309 -> m5_310  [key=0, style=solid];
m5_309 -> m5_300  [key=2, style=dotted];
m5_311 -> m5_26  [key=2, style=dotted];
m5_311 -> m5_312  [key=0, style=solid];
m5_311 -> m5_300  [key=2, style=dotted];
m5_313 -> m5_26  [key=2, style=dotted];
m5_313 -> m5_314  [key=0, style=solid];
m5_313 -> m5_300  [key=2, style=dotted];
m5_315 -> m5_26  [key=2, style=dotted];
m5_315 -> m5_316  [key=0, style=solid];
m5_315 -> m5_300  [key=2, style=dotted];
m5_307 -> m5_27  [key=2, style=dotted];
m5_307 -> m5_308  [key=0, style=solid];
m5_308 -> m5_27  [key=2, style=dotted];
m5_308 -> m5_309  [key=0, style=solid];
m5_310 -> m5_27  [key=2, style=dotted];
m5_310 -> m5_311  [key=0, style=solid];
m5_312 -> m5_27  [key=2, style=dotted];
m5_312 -> m5_313  [key=0, style=solid];
m5_314 -> m5_27  [key=2, style=dotted];
m5_314 -> m5_315  [key=0, style=solid];
m5_316 -> m5_27  [key=2, style=dotted];
m5_316 -> m5_317  [key=0, style=solid];
m5_302 -> m5_303  [key=0, style=solid];
m5_302 -> m5_302  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_317 -> m5_301  [key=0, style=bold, color=blue];
m5_1654 -> m5_1655  [key=0, style=solid];
m5_1655 -> m5_23  [key=2, style=dotted];
m5_1655 -> m5_24  [key=2, style=dotted];
m5_1655 -> m5_1656  [key=0, style=solid];
m5_1655 -> m5_1659  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1656 -> m5_1657  [key=0, style=solid];
m5_1656 -> m5_94  [key=2, style=dotted];
m5_1656 -> m5_1658  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1657 -> m5_1654  [key=0, style=bold, color=blue];
m5_1927 -> m5_1928  [key=0, style=solid];
m5_1929 -> m5_23  [key=2, style=dotted];
m5_1929 -> m5_24  [key=2, style=dotted];
m5_1929 -> m5_1930  [key=0, style=solid];
m5_1929 -> m5_1931  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1929 -> m5_1934  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1930 -> m5_25  [key=2, style=dotted];
m5_1930 -> m5_26  [key=2, style=dotted];
m5_1930 -> m5_1931  [key=0, style=solid];
m5_1928 -> m5_1929  [key=0, style=solid];
m5_1928 -> m5_1928  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1931 -> m5_1932  [key=0, style=solid];
m5_1931 -> m5_1674  [key=2, style=dotted];
m5_1931 -> m5_1933  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1932 -> m5_1927  [key=0, style=bold, color=blue];
m5_2068 -> m5_2069  [key=0, style=solid];
m5_2070 -> m5_23  [key=2, style=dotted];
m5_2070 -> m5_2071  [key=0, style=solid];
m5_2070 -> m5_2073  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2091  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2074  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2094  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2076  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2077  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2079  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2097  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2081  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2082  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2084  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2100  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2085  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2103  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2086  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2070 -> m5_2106  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2069 -> m5_24  [key=2, style=dotted];
m5_2069 -> m5_2070  [key=0, style=solid];
m5_2069 -> m5_2089  [key=2, style=dotted];
m5_2069 -> m5_2072  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m5_2069 -> m5_2075  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m5_2069 -> m5_2078  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m5_2069 -> m5_2080  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m5_2069 -> m5_2083  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m5_2069 -> m5_2087  [key=1, style=dashed, color=darkseagreen4, label=toggleReaderError];
m5_2071 -> m5_25  [key=2, style=dotted];
m5_2071 -> m5_26  [key=2, style=dotted];
m5_2071 -> m5_2072  [key=0, style=solid];
m5_2076 -> m5_25  [key=2, style=dotted];
m5_2076 -> m5_26  [key=2, style=dotted];
m5_2076 -> m5_2077  [key=0, style=solid];
m5_2081 -> m5_25  [key=2, style=dotted];
m5_2081 -> m5_26  [key=2, style=dotted];
m5_2081 -> m5_2082  [key=0, style=solid];
m5_2077 -> m5_27  [key=2, style=dotted];
m5_2077 -> m5_2078  [key=0, style=solid];
m5_2082 -> m5_27  [key=2, style=dotted];
m5_2082 -> m5_2083  [key=0, style=solid];
m5_2073 -> m5_2074  [key=0, style=solid];
m5_2073 -> m5_94  [key=2, style=dotted];
m5_2073 -> m5_2090  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2074 -> m5_2075  [key=0, style=solid];
m5_2074 -> m5_94  [key=2, style=dotted];
m5_2074 -> m5_2093  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2079 -> m5_2080  [key=0, style=solid];
m5_2079 -> m5_94  [key=2, style=dotted];
m5_2079 -> m5_2096  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2084 -> m5_2085  [key=0, style=solid];
m5_2084 -> m5_94  [key=2, style=dotted];
m5_2084 -> m5_2099  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2085 -> m5_2086  [key=0, style=solid];
m5_2085 -> m5_94  [key=2, style=dotted];
m5_2085 -> m5_2102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2086 -> m5_2087  [key=0, style=solid];
m5_2086 -> m5_94  [key=2, style=dotted];
m5_2086 -> m5_2105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2072 -> m5_2073  [key=0, style=solid];
m5_2075 -> m5_2076  [key=0, style=solid];
m5_2078 -> m5_2079  [key=0, style=solid];
m5_2080 -> m5_2081  [key=0, style=solid];
m5_2083 -> m5_2084  [key=0, style=solid];
m5_2087 -> m5_2088  [key=0, style=solid];
m5_2088 -> m5_2068  [key=0, style=bold, color=blue];
m5_1740 -> m5_1741  [key=0, style=solid];
m5_1742 -> m5_23  [key=2, style=dotted];
m5_1742 -> m5_1743  [key=0, style=solid];
m5_1742 -> m5_280  [key=2, style=dotted];
m5_1742 -> m5_318  [key=2, style=dotted];
m5_1742 -> m5_319  [key=2, style=dotted];
m5_1742 -> m5_1744  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1745  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1746  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1747  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1748  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1749  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1750  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1751  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1752  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1753  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1754  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1755  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1756  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1757  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1758  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1759  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1760  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1761  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1762  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1763  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1764  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1765  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1766  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1767  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1768  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1769  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1770  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1771  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1772  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1773  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1774  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1775  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1776  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1777  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1778  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1779  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1780  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1781  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1782  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1783  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1784  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1785  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1786  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1787  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1788  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1789  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1790  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1791  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1792  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1793  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1794  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1795  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1796  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1797  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1798  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1799  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1800  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1801  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1802  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1803  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1804  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1805  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1806  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1807  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1808  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1809  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1810  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1811  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1812  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1813  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1814  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1815  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1816  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1817  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1818  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1819  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1820  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1821  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1822  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1823  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1742 -> m5_1824  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1743 -> m5_25  [key=2, style=dotted];
m5_1743 -> m5_26  [key=2, style=dotted];
m5_1743 -> m5_1744  [key=0, style=solid];
m5_1747 -> m5_25  [key=2, style=dotted];
m5_1747 -> m5_26  [key=2, style=dotted];
m5_1747 -> m5_1748  [key=0, style=solid];
m5_1750 -> m5_25  [key=2, style=dotted];
m5_1750 -> m5_26  [key=2, style=dotted];
m5_1750 -> m5_1751  [key=0, style=solid];
m5_1753 -> m5_25  [key=2, style=dotted];
m5_1753 -> m5_26  [key=2, style=dotted];
m5_1753 -> m5_1754  [key=0, style=solid];
m5_1757 -> m5_25  [key=2, style=dotted];
m5_1757 -> m5_26  [key=2, style=dotted];
m5_1757 -> m5_1758  [key=0, style=solid];
m5_1760 -> m5_25  [key=2, style=dotted];
m5_1760 -> m5_26  [key=2, style=dotted];
m5_1760 -> m5_1761  [key=0, style=solid];
m5_1764 -> m5_25  [key=2, style=dotted];
m5_1764 -> m5_26  [key=2, style=dotted];
m5_1764 -> m5_1765  [key=0, style=solid];
m5_1768 -> m5_25  [key=2, style=dotted];
m5_1768 -> m5_26  [key=2, style=dotted];
m5_1768 -> m5_1769  [key=0, style=solid];
m5_1772 -> m5_25  [key=2, style=dotted];
m5_1772 -> m5_26  [key=2, style=dotted];
m5_1772 -> m5_1773  [key=0, style=solid];
m5_1776 -> m5_25  [key=2, style=dotted];
m5_1776 -> m5_26  [key=2, style=dotted];
m5_1776 -> m5_1777  [key=0, style=solid];
m5_1779 -> m5_25  [key=2, style=dotted];
m5_1779 -> m5_26  [key=2, style=dotted];
m5_1779 -> m5_1780  [key=0, style=solid];
m5_1783 -> m5_25  [key=2, style=dotted];
m5_1783 -> m5_26  [key=2, style=dotted];
m5_1783 -> m5_1784  [key=0, style=solid];
m5_1785 -> m5_25  [key=2, style=dotted];
m5_1785 -> m5_26  [key=2, style=dotted];
m5_1785 -> m5_1786  [key=0, style=solid];
m5_1788 -> m5_25  [key=2, style=dotted];
m5_1788 -> m5_26  [key=2, style=dotted];
m5_1788 -> m5_1789  [key=0, style=solid];
m5_1791 -> m5_25  [key=2, style=dotted];
m5_1791 -> m5_26  [key=2, style=dotted];
m5_1791 -> m5_1792  [key=0, style=solid];
m5_1794 -> m5_25  [key=2, style=dotted];
m5_1794 -> m5_26  [key=2, style=dotted];
m5_1794 -> m5_1795  [key=0, style=solid];
m5_1797 -> m5_25  [key=2, style=dotted];
m5_1797 -> m5_26  [key=2, style=dotted];
m5_1797 -> m5_1798  [key=0, style=solid];
m5_1799 -> m5_25  [key=2, style=dotted];
m5_1799 -> m5_26  [key=2, style=dotted];
m5_1799 -> m5_1800  [key=0, style=solid];
m5_1802 -> m5_25  [key=2, style=dotted];
m5_1802 -> m5_26  [key=2, style=dotted];
m5_1802 -> m5_1803  [key=0, style=solid];
m5_1804 -> m5_25  [key=2, style=dotted];
m5_1804 -> m5_26  [key=2, style=dotted];
m5_1804 -> m5_1805  [key=0, style=solid];
m5_1806 -> m5_25  [key=2, style=dotted];
m5_1806 -> m5_26  [key=2, style=dotted];
m5_1806 -> m5_1807  [key=0, style=solid];
m5_1808 -> m5_25  [key=2, style=dotted];
m5_1808 -> m5_26  [key=2, style=dotted];
m5_1808 -> m5_1809  [key=0, style=solid];
m5_1810 -> m5_25  [key=2, style=dotted];
m5_1810 -> m5_26  [key=2, style=dotted];
m5_1810 -> m5_1811  [key=0, style=solid];
m5_1812 -> m5_25  [key=2, style=dotted];
m5_1812 -> m5_26  [key=2, style=dotted];
m5_1812 -> m5_1813  [key=0, style=solid];
m5_1814 -> m5_25  [key=2, style=dotted];
m5_1814 -> m5_26  [key=2, style=dotted];
m5_1814 -> m5_1815  [key=0, style=solid];
m5_1816 -> m5_25  [key=2, style=dotted];
m5_1816 -> m5_26  [key=2, style=dotted];
m5_1816 -> m5_1817  [key=0, style=solid];
m5_1818 -> m5_25  [key=2, style=dotted];
m5_1818 -> m5_26  [key=2, style=dotted];
m5_1818 -> m5_1819  [key=0, style=solid];
m5_1821 -> m5_25  [key=2, style=dotted];
m5_1821 -> m5_26  [key=2, style=dotted];
m5_1821 -> m5_1822  [key=0, style=solid];
m5_1824 -> m5_25  [key=2, style=dotted];
m5_1824 -> m5_1825  [key=0, style=solid];
m5_1824 -> m5_80  [key=2, style=dotted];
m5_1744 -> m5_27  [key=2, style=dotted];
m5_1744 -> m5_1745  [key=0, style=solid];
m5_1745 -> m5_27  [key=2, style=dotted];
m5_1745 -> m5_1746  [key=0, style=solid];
m5_1746 -> m5_27  [key=2, style=dotted];
m5_1746 -> m5_1747  [key=0, style=solid];
m5_1748 -> m5_27  [key=2, style=dotted];
m5_1748 -> m5_1749  [key=0, style=solid];
m5_1749 -> m5_27  [key=2, style=dotted];
m5_1749 -> m5_1750  [key=0, style=solid];
m5_1751 -> m5_27  [key=2, style=dotted];
m5_1751 -> m5_1752  [key=0, style=solid];
m5_1752 -> m5_27  [key=2, style=dotted];
m5_1752 -> m5_1753  [key=0, style=solid];
m5_1754 -> m5_27  [key=2, style=dotted];
m5_1754 -> m5_1755  [key=0, style=solid];
m5_1755 -> m5_27  [key=2, style=dotted];
m5_1755 -> m5_1756  [key=0, style=solid];
m5_1756 -> m5_27  [key=2, style=dotted];
m5_1756 -> m5_1757  [key=0, style=solid];
m5_1758 -> m5_27  [key=2, style=dotted];
m5_1758 -> m5_1759  [key=0, style=solid];
m5_1759 -> m5_27  [key=2, style=dotted];
m5_1759 -> m5_1760  [key=0, style=solid];
m5_1761 -> m5_27  [key=2, style=dotted];
m5_1761 -> m5_1762  [key=0, style=solid];
m5_1762 -> m5_27  [key=2, style=dotted];
m5_1762 -> m5_1763  [key=0, style=solid];
m5_1763 -> m5_27  [key=2, style=dotted];
m5_1763 -> m5_1764  [key=0, style=solid];
m5_1765 -> m5_27  [key=2, style=dotted];
m5_1765 -> m5_1766  [key=0, style=solid];
m5_1766 -> m5_27  [key=2, style=dotted];
m5_1766 -> m5_1767  [key=0, style=solid];
m5_1767 -> m5_27  [key=2, style=dotted];
m5_1767 -> m5_1768  [key=0, style=solid];
m5_1769 -> m5_27  [key=2, style=dotted];
m5_1769 -> m5_1770  [key=0, style=solid];
m5_1770 -> m5_27  [key=2, style=dotted];
m5_1770 -> m5_1771  [key=0, style=solid];
m5_1771 -> m5_27  [key=2, style=dotted];
m5_1771 -> m5_1772  [key=0, style=solid];
m5_1773 -> m5_27  [key=2, style=dotted];
m5_1773 -> m5_1774  [key=0, style=solid];
m5_1774 -> m5_27  [key=2, style=dotted];
m5_1774 -> m5_1775  [key=0, style=solid];
m5_1775 -> m5_27  [key=2, style=dotted];
m5_1775 -> m5_1776  [key=0, style=solid];
m5_1777 -> m5_27  [key=2, style=dotted];
m5_1777 -> m5_1778  [key=0, style=solid];
m5_1778 -> m5_27  [key=2, style=dotted];
m5_1778 -> m5_1779  [key=0, style=solid];
m5_1780 -> m5_27  [key=2, style=dotted];
m5_1780 -> m5_1781  [key=0, style=solid];
m5_1781 -> m5_27  [key=2, style=dotted];
m5_1781 -> m5_1782  [key=0, style=solid];
m5_1782 -> m5_27  [key=2, style=dotted];
m5_1782 -> m5_1783  [key=0, style=solid];
m5_1784 -> m5_27  [key=2, style=dotted];
m5_1784 -> m5_1785  [key=0, style=solid];
m5_1786 -> m5_27  [key=2, style=dotted];
m5_1786 -> m5_1787  [key=0, style=solid];
m5_1787 -> m5_27  [key=2, style=dotted];
m5_1787 -> m5_1788  [key=0, style=solid];
m5_1789 -> m5_27  [key=2, style=dotted];
m5_1789 -> m5_1790  [key=0, style=solid];
m5_1790 -> m5_27  [key=2, style=dotted];
m5_1790 -> m5_1791  [key=0, style=solid];
m5_1792 -> m5_27  [key=2, style=dotted];
m5_1792 -> m5_1793  [key=0, style=solid];
m5_1793 -> m5_27  [key=2, style=dotted];
m5_1793 -> m5_1794  [key=0, style=solid];
m5_1795 -> m5_27  [key=2, style=dotted];
m5_1795 -> m5_1796  [key=0, style=solid];
m5_1796 -> m5_27  [key=2, style=dotted];
m5_1796 -> m5_1797  [key=0, style=solid];
m5_1798 -> m5_27  [key=2, style=dotted];
m5_1798 -> m5_1799  [key=0, style=solid];
m5_1800 -> m5_27  [key=2, style=dotted];
m5_1800 -> m5_1801  [key=0, style=solid];
m5_1801 -> m5_27  [key=2, style=dotted];
m5_1801 -> m5_1802  [key=0, style=solid];
m5_1803 -> m5_27  [key=2, style=dotted];
m5_1803 -> m5_1804  [key=0, style=solid];
m5_1805 -> m5_27  [key=2, style=dotted];
m5_1805 -> m5_1806  [key=0, style=solid];
m5_1807 -> m5_27  [key=2, style=dotted];
m5_1807 -> m5_1808  [key=0, style=solid];
m5_1809 -> m5_27  [key=2, style=dotted];
m5_1809 -> m5_1810  [key=0, style=solid];
m5_1811 -> m5_27  [key=2, style=dotted];
m5_1811 -> m5_1812  [key=0, style=solid];
m5_1813 -> m5_27  [key=2, style=dotted];
m5_1813 -> m5_1814  [key=0, style=solid];
m5_1815 -> m5_27  [key=2, style=dotted];
m5_1815 -> m5_1816  [key=0, style=solid];
m5_1817 -> m5_27  [key=2, style=dotted];
m5_1817 -> m5_1818  [key=0, style=solid];
m5_1819 -> m5_27  [key=2, style=dotted];
m5_1819 -> m5_1820  [key=0, style=solid];
m5_1820 -> m5_27  [key=2, style=dotted];
m5_1820 -> m5_1821  [key=0, style=solid];
m5_1822 -> m5_27  [key=2, style=dotted];
m5_1822 -> m5_1823  [key=0, style=solid];
m5_1823 -> m5_27  [key=2, style=dotted];
m5_1823 -> m5_1824  [key=0, style=solid];
m5_1741 -> m5_1742  [key=0, style=solid];
m5_1825 -> m5_1740  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_0  [key=2, style=dotted];
m5_26 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_26 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label=a];
m5_680 -> m5_681  [key=0, style=solid];
m5_681 -> m5_23  [key=2, style=dotted];
m5_681 -> m5_24  [key=2, style=dotted];
m5_681 -> m5_682  [key=0, style=solid];
m5_681 -> m5_685  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_682 -> m5_683  [key=0, style=solid];
m5_682 -> m5_94  [key=2, style=dotted];
m5_682 -> m5_684  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_683 -> m5_680  [key=0, style=bold, color=blue];
m5_514 -> m5_515  [key=0, style=solid];
m5_515 -> m5_23  [key=2, style=dotted];
m5_515 -> m5_24  [key=2, style=dotted];
m5_515 -> m5_516  [key=0, style=solid];
m5_515 -> m5_519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_516 -> m5_517  [key=0, style=solid];
m5_516 -> m5_94  [key=2, style=dotted];
m5_516 -> m5_518  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_517 -> m5_514  [key=0, style=bold, color=blue];
m5_1491 -> m5_1492  [key=0, style=solid];
m5_1493 -> m5_23  [key=2, style=dotted];
m5_1493 -> m5_24  [key=2, style=dotted];
m5_1493 -> m5_1494  [key=0, style=solid];
m5_1493 -> m5_1495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1493 -> m5_1496  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1493 -> m5_1497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1493 -> m5_1498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1493 -> m5_1499  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1493 -> m5_1500  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1493 -> m5_1501  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1493 -> m5_1503  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1493 -> m5_1504  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1495 -> m5_25  [key=2, style=dotted];
m5_1495 -> m5_26  [key=2, style=dotted];
m5_1495 -> m5_1496  [key=0, style=solid];
m5_1497 -> m5_25  [key=2, style=dotted];
m5_1497 -> m5_26  [key=2, style=dotted];
m5_1497 -> m5_1498  [key=0, style=solid];
m5_1503 -> m5_25  [key=2, style=dotted];
m5_1503 -> m5_26  [key=2, style=dotted];
m5_1503 -> m5_1504  [key=0, style=solid];
m5_1496 -> m5_27  [key=2, style=dotted];
m5_1496 -> m5_1497  [key=0, style=solid];
m5_1498 -> m5_27  [key=2, style=dotted];
m5_1498 -> m5_1499  [key=0, style=solid];
m5_1500 -> m5_27  [key=2, style=dotted];
m5_1500 -> m5_1501  [key=0, style=solid];
m5_1501 -> m5_27  [key=2, style=dotted];
m5_1501 -> m5_1502  [key=0, style=solid];
m5_1504 -> m5_27  [key=2, style=dotted];
m5_1504 -> m5_1505  [key=0, style=solid];
m5_1502 -> m5_27  [key=2, style=dotted];
m5_1502 -> m5_1503  [key=0, style=solid];
m5_1492 -> m5_1493  [key=0, style=solid];
m5_1492 -> m5_1492  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1494 -> m5_1495  [key=0, style=solid];
m5_1494 -> m5_1401  [key=2, style=dotted];
m5_1499 -> m5_1500  [key=0, style=solid];
m5_1499 -> m5_1502  [key=1, style=dashed, color=darkseagreen4, label=d];
m5_1499 -> m5_166  [key=2, style=dotted];
m5_1505 -> m5_1491  [key=0, style=bold, color=blue];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_25  [key=2, style=dotted];
m5_92 -> m5_80  [key=2, style=dotted];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_95  [key=2, style=dotted];
m5_93 -> m5_82  [key=0, style=bold, color=blue];
m5_2108 -> m5_2109  [key=0, style=solid];
m5_2117 -> m5_23  [key=2, style=dotted];
m5_2117 -> m5_2118  [key=0, style=solid];
m5_2117 -> m5_2119  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2117 -> m5_2121  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2117 -> m5_2123  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2116 -> m5_24  [key=2, style=dotted];
m5_2116 -> m5_2117  [key=0, style=solid];
m5_2118 -> m5_25  [key=2, style=dotted];
m5_2118 -> m5_26  [key=2, style=dotted];
m5_2118 -> m5_2119  [key=0, style=solid];
m5_2123 -> m5_25  [key=2, style=dotted];
m5_2123 -> m5_26  [key=2, style=dotted];
m5_2123 -> m5_2124  [key=0, style=solid];
m5_2120 -> m5_27  [key=2, style=dotted];
m5_2120 -> m5_2121  [key=0, style=solid];
m5_2122 -> m5_27  [key=2, style=dotted];
m5_2122 -> m5_2123  [key=0, style=solid];
m5_2119 -> m5_2120  [key=0, style=solid];
m5_2119 -> m5_166  [key=2, style=dotted];
m5_2121 -> m5_2122  [key=0, style=solid];
m5_2121 -> m5_166  [key=2, style=dotted];
m5_2115 -> m5_2116  [key=0, style=solid];
m5_2115 -> m5_554  [key=2, style=dotted];
m5_2109 -> m5_2115  [key=1, style=dashed, color=darkseagreen4, label=sw];
m5_2109 -> m5_2110  [key=0, style=solid];
m5_2109 -> m5_549  [key=2, style=dotted];
m5_2114 -> m5_2115  [key=0, style=solid];
m5_2114 -> m5_67  [key=2, style=dotted];
m5_2110 -> m5_2114  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_2110 -> m5_550  [key=2, style=dotted];
m5_2110 -> m5_2111  [key=0, style=solid];
m5_2110 -> m5_2112  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_2110 -> m5_2113  [key=1, style=dashed, color=darkseagreen4, label=writer];
m5_2113 -> m5_2114  [key=0, style=solid];
m5_2113 -> m5_2125  [key=2, style=dotted];
m5_2111 -> m5_2112  [key=0, style=solid];
m5_2111 -> m5_551  [key=2, style=dotted];
m5_2112 -> m5_2113  [key=0, style=solid];
m5_2112 -> m5_2125  [key=2, style=dotted];
m5_2124 -> m5_2108  [key=0, style=bold, color=blue];
m5_1537 -> m5_1538  [key=0, style=solid];
m5_1539 -> m5_23  [key=2, style=dotted];
m5_1539 -> m5_24  [key=2, style=dotted];
m5_1539 -> m5_1540  [key=0, style=solid];
m5_1539 -> m5_1541  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1539 -> m5_1542  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1539 -> m5_1543  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1539 -> m5_1544  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1540 -> m5_25  [key=2, style=dotted];
m5_1540 -> m5_26  [key=2, style=dotted];
m5_1540 -> m5_1541  [key=0, style=solid];
m5_1543 -> m5_25  [key=2, style=dotted];
m5_1543 -> m5_26  [key=2, style=dotted];
m5_1543 -> m5_1544  [key=0, style=solid];
m5_1541 -> m5_27  [key=2, style=dotted];
m5_1541 -> m5_1542  [key=0, style=solid];
m5_1542 -> m5_27  [key=2, style=dotted];
m5_1542 -> m5_1543  [key=0, style=solid];
m5_1544 -> m5_27  [key=2, style=dotted];
m5_1544 -> m5_1545  [key=0, style=solid];
m5_1538 -> m5_1539  [key=0, style=solid];
m5_1538 -> m5_1538  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1545 -> m5_1537  [key=0, style=bold, color=blue];
m5_411 -> m5_412  [key=0, style=solid];
m5_414 -> m5_23  [key=2, style=dotted];
m5_414 -> m5_415  [key=0, style=solid];
m5_414 -> m5_416  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_417  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_418  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_419  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_420  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_421  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_422  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_423  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_424  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_425  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_426  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_427  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_428  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_429  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_430  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_431  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_432  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_433  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_434  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_435  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_436  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_437  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_438  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_439  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_441  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_442  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_443  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_444  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_445  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_446  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_447  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_448  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_449  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_450  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_451  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_452  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_453  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_454  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_455  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_456  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_457  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_458  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_459  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_460  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_461  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_462  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_463  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_464  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_465  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_466  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_467  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_468  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_469  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_470  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_471  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_472  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_473  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_474  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_476  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_477  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_478  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_479  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_480  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_481  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_482  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_483  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_484  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_485  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_486  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_487  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_488  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_489  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_490  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_491  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_492  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_493  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_494  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_495  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_496  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_497  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_498  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_499  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_500  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_501  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_502  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_503  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_504  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_505  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_414 -> m5_506  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_413 -> m5_24  [key=2, style=dotted];
m5_413 -> m5_414  [key=0, style=solid];
m5_415 -> m5_27  [key=2, style=dotted];
m5_415 -> m5_416  [key=0, style=solid];
m5_417 -> m5_27  [key=2, style=dotted];
m5_417 -> m5_418  [key=0, style=solid];
m5_418 -> m5_27  [key=2, style=dotted];
m5_418 -> m5_419  [key=0, style=solid];
m5_419 -> m5_27  [key=2, style=dotted];
m5_419 -> m5_420  [key=0, style=solid];
m5_421 -> m5_27  [key=2, style=dotted];
m5_421 -> m5_422  [key=0, style=solid];
m5_422 -> m5_27  [key=2, style=dotted];
m5_422 -> m5_423  [key=0, style=solid];
m5_423 -> m5_27  [key=2, style=dotted];
m5_423 -> m5_424  [key=0, style=solid];
m5_425 -> m5_27  [key=2, style=dotted];
m5_425 -> m5_426  [key=0, style=solid];
m5_426 -> m5_27  [key=2, style=dotted];
m5_426 -> m5_427  [key=0, style=solid];
m5_427 -> m5_27  [key=2, style=dotted];
m5_427 -> m5_428  [key=0, style=solid];
m5_428 -> m5_27  [key=2, style=dotted];
m5_428 -> m5_429  [key=0, style=solid];
m5_429 -> m5_27  [key=2, style=dotted];
m5_429 -> m5_430  [key=0, style=solid];
m5_431 -> m5_27  [key=2, style=dotted];
m5_431 -> m5_432  [key=0, style=solid];
m5_432 -> m5_27  [key=2, style=dotted];
m5_432 -> m5_433  [key=0, style=solid];
m5_433 -> m5_27  [key=2, style=dotted];
m5_433 -> m5_434  [key=0, style=solid];
m5_435 -> m5_27  [key=2, style=dotted];
m5_435 -> m5_436  [key=0, style=solid];
m5_436 -> m5_27  [key=2, style=dotted];
m5_436 -> m5_437  [key=0, style=solid];
m5_437 -> m5_27  [key=2, style=dotted];
m5_437 -> m5_438  [key=0, style=solid];
m5_439 -> m5_27  [key=2, style=dotted];
m5_439 -> m5_440  [key=0, style=solid];
m5_440 -> m5_27  [key=2, style=dotted];
m5_440 -> m5_441  [key=0, style=solid];
m5_441 -> m5_27  [key=2, style=dotted];
m5_441 -> m5_442  [key=0, style=solid];
m5_442 -> m5_27  [key=2, style=dotted];
m5_442 -> m5_443  [key=0, style=solid];
m5_444 -> m5_27  [key=2, style=dotted];
m5_444 -> m5_445  [key=0, style=solid];
m5_445 -> m5_27  [key=2, style=dotted];
m5_445 -> m5_446  [key=0, style=solid];
m5_446 -> m5_27  [key=2, style=dotted];
m5_446 -> m5_447  [key=0, style=solid];
m5_447 -> m5_27  [key=2, style=dotted];
m5_447 -> m5_448  [key=0, style=solid];
m5_449 -> m5_27  [key=2, style=dotted];
m5_449 -> m5_450  [key=0, style=solid];
m5_450 -> m5_27  [key=2, style=dotted];
m5_450 -> m5_451  [key=0, style=solid];
m5_451 -> m5_27  [key=2, style=dotted];
m5_451 -> m5_452  [key=0, style=solid];
m5_452 -> m5_27  [key=2, style=dotted];
m5_452 -> m5_453  [key=0, style=solid];
m5_454 -> m5_27  [key=2, style=dotted];
m5_454 -> m5_455  [key=0, style=solid];
m5_455 -> m5_27  [key=2, style=dotted];
m5_455 -> m5_456  [key=0, style=solid];
m5_456 -> m5_27  [key=2, style=dotted];
m5_456 -> m5_457  [key=0, style=solid];
m5_457 -> m5_27  [key=2, style=dotted];
m5_457 -> m5_458  [key=0, style=solid];
m5_459 -> m5_27  [key=2, style=dotted];
m5_459 -> m5_460  [key=0, style=solid];
m5_460 -> m5_27  [key=2, style=dotted];
m5_460 -> m5_461  [key=0, style=solid];
m5_461 -> m5_27  [key=2, style=dotted];
m5_461 -> m5_462  [key=0, style=solid];
m5_462 -> m5_27  [key=2, style=dotted];
m5_462 -> m5_463  [key=0, style=solid];
m5_464 -> m5_27  [key=2, style=dotted];
m5_464 -> m5_465  [key=0, style=solid];
m5_465 -> m5_27  [key=2, style=dotted];
m5_465 -> m5_466  [key=0, style=solid];
m5_466 -> m5_27  [key=2, style=dotted];
m5_466 -> m5_467  [key=0, style=solid];
m5_468 -> m5_27  [key=2, style=dotted];
m5_468 -> m5_469  [key=0, style=solid];
m5_469 -> m5_27  [key=2, style=dotted];
m5_469 -> m5_470  [key=0, style=solid];
m5_470 -> m5_27  [key=2, style=dotted];
m5_470 -> m5_471  [key=0, style=solid];
m5_472 -> m5_27  [key=2, style=dotted];
m5_472 -> m5_473  [key=0, style=solid];
m5_473 -> m5_27  [key=2, style=dotted];
m5_473 -> m5_474  [key=0, style=solid];
m5_474 -> m5_27  [key=2, style=dotted];
m5_474 -> m5_475  [key=0, style=solid];
m5_476 -> m5_27  [key=2, style=dotted];
m5_476 -> m5_477  [key=0, style=solid];
m5_477 -> m5_27  [key=2, style=dotted];
m5_477 -> m5_478  [key=0, style=solid];
m5_478 -> m5_27  [key=2, style=dotted];
m5_478 -> m5_479  [key=0, style=solid];
m5_480 -> m5_27  [key=2, style=dotted];
m5_480 -> m5_481  [key=0, style=solid];
m5_481 -> m5_27  [key=2, style=dotted];
m5_481 -> m5_482  [key=0, style=solid];
m5_482 -> m5_27  [key=2, style=dotted];
m5_482 -> m5_483  [key=0, style=solid];
m5_484 -> m5_27  [key=2, style=dotted];
m5_484 -> m5_485  [key=0, style=solid];
m5_485 -> m5_27  [key=2, style=dotted];
m5_485 -> m5_486  [key=0, style=solid];
m5_486 -> m5_27  [key=2, style=dotted];
m5_486 -> m5_487  [key=0, style=solid];
m5_488 -> m5_27  [key=2, style=dotted];
m5_488 -> m5_489  [key=0, style=solid];
m5_489 -> m5_27  [key=2, style=dotted];
m5_489 -> m5_490  [key=0, style=solid];
m5_490 -> m5_27  [key=2, style=dotted];
m5_490 -> m5_491  [key=0, style=solid];
m5_492 -> m5_27  [key=2, style=dotted];
m5_492 -> m5_493  [key=0, style=solid];
m5_493 -> m5_27  [key=2, style=dotted];
m5_493 -> m5_494  [key=0, style=solid];
m5_494 -> m5_27  [key=2, style=dotted];
m5_494 -> m5_495  [key=0, style=solid];
m5_496 -> m5_27  [key=2, style=dotted];
m5_496 -> m5_497  [key=0, style=solid];
m5_497 -> m5_27  [key=2, style=dotted];
m5_497 -> m5_498  [key=0, style=solid];
m5_498 -> m5_27  [key=2, style=dotted];
m5_498 -> m5_499  [key=0, style=solid];
m5_500 -> m5_27  [key=2, style=dotted];
m5_500 -> m5_501  [key=0, style=solid];
m5_501 -> m5_27  [key=2, style=dotted];
m5_501 -> m5_502  [key=0, style=solid];
m5_502 -> m5_27  [key=2, style=dotted];
m5_502 -> m5_503  [key=0, style=solid];
m5_504 -> m5_27  [key=2, style=dotted];
m5_504 -> m5_505  [key=0, style=solid];
m5_505 -> m5_27  [key=2, style=dotted];
m5_505 -> m5_506  [key=0, style=solid];
m5_506 -> m5_27  [key=2, style=dotted];
m5_506 -> m5_507  [key=0, style=solid];
m5_416 -> m5_417  [key=0, style=solid];
m5_416 -> m5_300  [key=2, style=dotted];
m5_420 -> m5_421  [key=0, style=solid];
m5_420 -> m5_300  [key=2, style=dotted];
m5_424 -> m5_425  [key=0, style=solid];
m5_424 -> m5_300  [key=2, style=dotted];
m5_430 -> m5_431  [key=0, style=solid];
m5_430 -> m5_300  [key=2, style=dotted];
m5_434 -> m5_435  [key=0, style=solid];
m5_434 -> m5_300  [key=2, style=dotted];
m5_438 -> m5_439  [key=0, style=solid];
m5_438 -> m5_300  [key=2, style=dotted];
m5_443 -> m5_444  [key=0, style=solid];
m5_443 -> m5_300  [key=2, style=dotted];
m5_448 -> m5_449  [key=0, style=solid];
m5_448 -> m5_300  [key=2, style=dotted];
m5_453 -> m5_454  [key=0, style=solid];
m5_453 -> m5_300  [key=2, style=dotted];
m5_458 -> m5_459  [key=0, style=solid];
m5_458 -> m5_300  [key=2, style=dotted];
m5_463 -> m5_464  [key=0, style=solid];
m5_463 -> m5_300  [key=2, style=dotted];
m5_467 -> m5_468  [key=0, style=solid];
m5_467 -> m5_300  [key=2, style=dotted];
m5_471 -> m5_472  [key=0, style=solid];
m5_471 -> m5_300  [key=2, style=dotted];
m5_475 -> m5_476  [key=0, style=solid];
m5_475 -> m5_300  [key=2, style=dotted];
m5_479 -> m5_480  [key=0, style=solid];
m5_479 -> m5_300  [key=2, style=dotted];
m5_483 -> m5_484  [key=0, style=solid];
m5_483 -> m5_300  [key=2, style=dotted];
m5_487 -> m5_488  [key=0, style=solid];
m5_487 -> m5_300  [key=2, style=dotted];
m5_491 -> m5_492  [key=0, style=solid];
m5_491 -> m5_300  [key=2, style=dotted];
m5_495 -> m5_496  [key=0, style=solid];
m5_495 -> m5_300  [key=2, style=dotted];
m5_499 -> m5_500  [key=0, style=solid];
m5_499 -> m5_300  [key=2, style=dotted];
m5_503 -> m5_504  [key=0, style=solid];
m5_503 -> m5_300  [key=2, style=dotted];
m5_412 -> m5_413  [key=0, style=solid];
m5_412 -> m5_412  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m5_507 -> m5_411  [key=0, style=bold, color=blue];
m5_1842 -> m5_1843  [key=0, style=solid];
m5_1844 -> m5_23  [key=2, style=dotted];
m5_1844 -> m5_24  [key=2, style=dotted];
m5_1844 -> m5_1845  [key=0, style=solid];
m5_1844 -> m5_1846  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1844 -> m5_1847  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1846 -> m5_27  [key=2, style=dotted];
m5_1846 -> m5_1847  [key=0, style=solid];
m5_1847 -> m5_27  [key=2, style=dotted];
m5_1847 -> m5_1848  [key=0, style=solid];
m5_1843 -> m5_1844  [key=0, style=solid];
m5_1843 -> m5_1843  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1845 -> m5_1846  [key=0, style=solid];
m5_1845 -> m5_166  [key=2, style=dotted];
m5_1848 -> m5_1842  [key=0, style=bold, color=blue];
m5_687 -> m5_688  [key=0, style=solid];
m5_688 -> m5_23  [key=2, style=dotted];
m5_688 -> m5_24  [key=2, style=dotted];
m5_688 -> m5_689  [key=0, style=solid];
m5_688 -> m5_692  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_689 -> m5_690  [key=0, style=solid];
m5_689 -> m5_94  [key=2, style=dotted];
m5_689 -> m5_691  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_690 -> m5_687  [key=0, style=bold, color=blue];
m5_1456 -> m5_1457  [key=0, style=solid];
m5_1457 -> m5_23  [key=2, style=dotted];
m5_1457 -> m5_24  [key=2, style=dotted];
m5_1457 -> m5_1458  [key=0, style=solid];
m5_1457 -> m5_1461  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1458 -> m5_1459  [key=0, style=solid];
m5_1458 -> m5_94  [key=2, style=dotted];
m5_1458 -> m5_1460  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1459 -> m5_1456  [key=0, style=bold, color=blue];
m5_25 -> m5_30  [key=0, style=solid];
m5_25 -> m5_33  [key=2, style=dotted];
m5_25 -> m5_32  [key=2, style=dotted];
m5_170 -> m5_171  [key=0, style=solid];
m5_172 -> m5_23  [key=2, style=dotted];
m5_172 -> m5_24  [key=2, style=dotted];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_172 -> m5_175  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_172 -> m5_176  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_172 -> m5_177  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_172 -> m5_178  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_172 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_172 -> m5_180  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_172 -> m5_181  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_172 -> m5_184  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_173 -> m5_25  [key=2, style=dotted];
m5_173 -> m5_26  [key=2, style=dotted];
m5_173 -> m5_174  [key=0, style=solid];
m5_175 -> m5_25  [key=2, style=dotted];
m5_175 -> m5_26  [key=2, style=dotted];
m5_175 -> m5_176  [key=0, style=solid];
m5_177 -> m5_25  [key=2, style=dotted];
m5_177 -> m5_26  [key=2, style=dotted];
m5_177 -> m5_178  [key=0, style=solid];
m5_179 -> m5_25  [key=2, style=dotted];
m5_179 -> m5_26  [key=2, style=dotted];
m5_179 -> m5_180  [key=0, style=solid];
m5_174 -> m5_27  [key=2, style=dotted];
m5_174 -> m5_175  [key=0, style=solid];
m5_176 -> m5_27  [key=2, style=dotted];
m5_176 -> m5_177  [key=0, style=solid];
m5_178 -> m5_27  [key=2, style=dotted];
m5_178 -> m5_179  [key=0, style=solid];
m5_180 -> m5_27  [key=2, style=dotted];
m5_180 -> m5_181  [key=0, style=solid];
m5_171 -> m5_172  [key=0, style=solid];
m5_171 -> m5_171  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_94  [key=2, style=dotted];
m5_181 -> m5_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_182 -> m5_170  [key=0, style=bold, color=blue];
m5_765 -> m5_766  [key=0, style=solid];
m5_766 -> m5_23  [key=2, style=dotted];
m5_766 -> m5_24  [key=2, style=dotted];
m5_766 -> m5_767  [key=0, style=solid];
m5_766 -> m5_768  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_766 -> m5_769  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_766 -> m5_770  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_766 -> m5_771  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_766 -> m5_772  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_766 -> m5_773  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_766 -> m5_774  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_766 -> m5_775  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_766 -> m5_776  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_767 -> m5_26  [key=2, style=dotted];
m5_767 -> m5_768  [key=0, style=solid];
m5_767 -> m5_300  [key=2, style=dotted];
m5_768 -> m5_26  [key=2, style=dotted];
m5_768 -> m5_769  [key=0, style=solid];
m5_768 -> m5_300  [key=2, style=dotted];
m5_771 -> m5_26  [key=2, style=dotted];
m5_771 -> m5_772  [key=0, style=solid];
m5_771 -> m5_300  [key=2, style=dotted];
m5_774 -> m5_26  [key=2, style=dotted];
m5_774 -> m5_775  [key=0, style=solid];
m5_774 -> m5_300  [key=2, style=dotted];
m5_769 -> m5_27  [key=2, style=dotted];
m5_769 -> m5_770  [key=0, style=solid];
m5_770 -> m5_27  [key=2, style=dotted];
m5_770 -> m5_771  [key=0, style=solid];
m5_772 -> m5_27  [key=2, style=dotted];
m5_772 -> m5_773  [key=0, style=solid];
m5_773 -> m5_27  [key=2, style=dotted];
m5_773 -> m5_774  [key=0, style=solid];
m5_775 -> m5_27  [key=2, style=dotted];
m5_775 -> m5_776  [key=0, style=solid];
m5_776 -> m5_777  [key=0, style=solid];
m5_776 -> m5_300  [key=2, style=dotted];
m5_776 -> m5_80  [key=2, style=dotted];
m5_777 -> m5_765  [key=0, style=bold, color=blue];
m5_1701 -> m5_1702  [key=0, style=solid];
m5_1703 -> m5_23  [key=2, style=dotted];
m5_1703 -> m5_1704  [key=0, style=solid];
m5_1703 -> m5_280  [key=2, style=dotted];
m5_1703 -> m5_318  [key=2, style=dotted];
m5_1703 -> m5_319  [key=2, style=dotted];
m5_1703 -> m5_1705  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1706  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1707  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1708  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1709  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1710  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1711  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1712  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1713  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1714  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1715  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1716  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1717  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1718  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1719  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1720  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1721  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1722  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1723  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1724  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1725  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1726  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1727  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1728  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1729  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1730  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1731  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1732  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1733  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1734  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1735  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1736  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1737  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1703 -> m5_1738  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1704 -> m5_25  [key=2, style=dotted];
m5_1704 -> m5_26  [key=2, style=dotted];
m5_1704 -> m5_1705  [key=0, style=solid];
m5_1706 -> m5_25  [key=2, style=dotted];
m5_1706 -> m5_26  [key=2, style=dotted];
m5_1706 -> m5_1707  [key=0, style=solid];
m5_1708 -> m5_25  [key=2, style=dotted];
m5_1708 -> m5_26  [key=2, style=dotted];
m5_1708 -> m5_1709  [key=0, style=solid];
m5_1710 -> m5_25  [key=2, style=dotted];
m5_1710 -> m5_26  [key=2, style=dotted];
m5_1710 -> m5_1711  [key=0, style=solid];
m5_1713 -> m5_25  [key=2, style=dotted];
m5_1713 -> m5_26  [key=2, style=dotted];
m5_1713 -> m5_1714  [key=0, style=solid];
m5_1715 -> m5_25  [key=2, style=dotted];
m5_1715 -> m5_26  [key=2, style=dotted];
m5_1715 -> m5_1716  [key=0, style=solid];
m5_1718 -> m5_25  [key=2, style=dotted];
m5_1718 -> m5_26  [key=2, style=dotted];
m5_1718 -> m5_1719  [key=0, style=solid];
m5_1720 -> m5_25  [key=2, style=dotted];
m5_1720 -> m5_26  [key=2, style=dotted];
m5_1720 -> m5_1721  [key=0, style=solid];
m5_1722 -> m5_25  [key=2, style=dotted];
m5_1722 -> m5_26  [key=2, style=dotted];
m5_1722 -> m5_1723  [key=0, style=solid];
m5_1725 -> m5_25  [key=2, style=dotted];
m5_1725 -> m5_26  [key=2, style=dotted];
m5_1725 -> m5_1726  [key=0, style=solid];
m5_1727 -> m5_25  [key=2, style=dotted];
m5_1727 -> m5_26  [key=2, style=dotted];
m5_1727 -> m5_1728  [key=0, style=solid];
m5_1731 -> m5_25  [key=2, style=dotted];
m5_1731 -> m5_26  [key=2, style=dotted];
m5_1731 -> m5_1732  [key=0, style=solid];
m5_1733 -> m5_25  [key=2, style=dotted];
m5_1733 -> m5_26  [key=2, style=dotted];
m5_1733 -> m5_1734  [key=0, style=solid];
m5_1735 -> m5_25  [key=2, style=dotted];
m5_1735 -> m5_26  [key=2, style=dotted];
m5_1735 -> m5_1736  [key=0, style=solid];
m5_1737 -> m5_25  [key=2, style=dotted];
m5_1737 -> m5_26  [key=2, style=dotted];
m5_1737 -> m5_1738  [key=0, style=solid];
m5_1705 -> m5_27  [key=2, style=dotted];
m5_1705 -> m5_1706  [key=0, style=solid];
m5_1707 -> m5_27  [key=2, style=dotted];
m5_1707 -> m5_1708  [key=0, style=solid];
m5_1709 -> m5_27  [key=2, style=dotted];
m5_1709 -> m5_1710  [key=0, style=solid];
m5_1711 -> m5_27  [key=2, style=dotted];
m5_1711 -> m5_1712  [key=0, style=solid];
m5_1712 -> m5_27  [key=2, style=dotted];
m5_1712 -> m5_1713  [key=0, style=solid];
m5_1714 -> m5_27  [key=2, style=dotted];
m5_1714 -> m5_1715  [key=0, style=solid];
m5_1716 -> m5_27  [key=2, style=dotted];
m5_1716 -> m5_1717  [key=0, style=solid];
m5_1717 -> m5_27  [key=2, style=dotted];
m5_1717 -> m5_1718  [key=0, style=solid];
m5_1719 -> m5_27  [key=2, style=dotted];
m5_1719 -> m5_1720  [key=0, style=solid];
m5_1721 -> m5_27  [key=2, style=dotted];
m5_1721 -> m5_1722  [key=0, style=solid];
m5_1723 -> m5_27  [key=2, style=dotted];
m5_1723 -> m5_1724  [key=0, style=solid];
m5_1724 -> m5_27  [key=2, style=dotted];
m5_1724 -> m5_1725  [key=0, style=solid];
m5_1726 -> m5_27  [key=2, style=dotted];
m5_1726 -> m5_1727  [key=0, style=solid];
m5_1728 -> m5_27  [key=2, style=dotted];
m5_1728 -> m5_1729  [key=0, style=solid];
m5_1729 -> m5_27  [key=2, style=dotted];
m5_1729 -> m5_1730  [key=0, style=solid];
m5_1730 -> m5_27  [key=2, style=dotted];
m5_1730 -> m5_1731  [key=0, style=solid];
m5_1732 -> m5_27  [key=2, style=dotted];
m5_1732 -> m5_1733  [key=0, style=solid];
m5_1734 -> m5_27  [key=2, style=dotted];
m5_1734 -> m5_1735  [key=0, style=solid];
m5_1736 -> m5_27  [key=2, style=dotted];
m5_1736 -> m5_1737  [key=0, style=solid];
m5_1738 -> m5_27  [key=2, style=dotted];
m5_1738 -> m5_1739  [key=0, style=solid];
m5_1702 -> m5_1703  [key=0, style=solid];
m5_1739 -> m5_1701  [key=0, style=bold, color=blue];
m5_84 -> m5_23  [key=2, style=dotted];
m5_84 -> m5_24  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_84 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_84 -> m5_88  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_84 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_84 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_84 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_84 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_84 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2089 -> m5_2134  [key=0, style=solid];
m5_2134 -> m5_2135  [key=0, style=solid];
m5_2135 -> m5_2089  [key=0, style=bold, color=blue];
m5_271 -> m5_258  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_259  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_260  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_261  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_262  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_263  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_264  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_265  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_266  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_267  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_268  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_269  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m5_271 -> m5_272  [key=0, style=solid];
m5_271 -> m5_275  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadString"];
m5_273 -> m5_23  [key=2, style=dotted];
m5_273 -> m5_274  [key=0, style=solid];
m5_273 -> m5_280  [key=2, style=dotted];
m5_273 -> m5_275  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_274 -> m5_25  [key=2, style=dotted];
m5_274 -> m5_275  [key=0, style=solid];
m5_272 -> m5_273  [key=0, style=solid];
m5_272 -> m5_278  [key=2, style=dotted];
m5_272 -> m5_279  [key=2, style=dotted];
m5_275 -> m5_276  [key=0, style=solid];
m5_276 -> m5_277  [key=0, style=solid];
m5_277 -> m5_271  [key=0, style=bold, color=blue];
m5_1112 -> m5_1113  [key=0, style=solid];
m5_1114 -> m5_23  [key=2, style=dotted];
m5_1114 -> m5_24  [key=2, style=dotted];
m5_1114 -> m5_1115  [key=0, style=solid];
m5_1114 -> m5_1116  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1114 -> m5_1117  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1114 -> m5_1118  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1114 -> m5_1119  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1114 -> m5_1120  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1114 -> m5_1121  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1114 -> m5_1124  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1115 -> m5_25  [key=2, style=dotted];
m5_1115 -> m5_1116  [key=0, style=solid];
m5_1117 -> m5_25  [key=2, style=dotted];
m5_1117 -> m5_1118  [key=0, style=solid];
m5_1119 -> m5_25  [key=2, style=dotted];
m5_1119 -> m5_1120  [key=0, style=solid];
m5_1116 -> m5_27  [key=2, style=dotted];
m5_1116 -> m5_1117  [key=0, style=solid];
m5_1118 -> m5_27  [key=2, style=dotted];
m5_1118 -> m5_1119  [key=0, style=solid];
m5_1120 -> m5_27  [key=2, style=dotted];
m5_1120 -> m5_1121  [key=0, style=solid];
m5_1113 -> m5_1114  [key=0, style=solid];
m5_1113 -> m5_1113  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1121 -> m5_1122  [key=0, style=solid];
m5_1121 -> m5_94  [key=2, style=dotted];
m5_1121 -> m5_1123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1122 -> m5_1112  [key=0, style=bold, color=blue];
m5_1614 -> m5_1615  [key=0, style=solid];
m5_1616 -> m5_23  [key=2, style=dotted];
m5_1616 -> m5_24  [key=2, style=dotted];
m5_1616 -> m5_1617  [key=0, style=solid];
m5_1616 -> m5_1620  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1615 -> m5_1616  [key=0, style=solid];
m5_1615 -> m5_1615  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1617 -> m5_1618  [key=0, style=solid];
m5_1617 -> m5_94  [key=2, style=dotted];
m5_1617 -> m5_1619  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1618 -> m5_1614  [key=0, style=bold, color=blue];
m5_1021 -> m5_1022  [key=0, style=solid];
m5_1024 -> m5_23  [key=2, style=dotted];
m5_1024 -> m5_24  [key=2, style=dotted];
m5_1024 -> m5_1025  [key=0, style=solid];
m5_1024 -> m5_1026  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1024 -> m5_1027  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1024 -> m5_1028  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1024 -> m5_1029  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1024 -> m5_1030  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1024 -> m5_1031  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1024 -> m5_1032  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1024 -> m5_1033  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1024 -> m5_1034  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1025 -> m5_25  [key=2, style=dotted];
m5_1025 -> m5_1026  [key=0, style=solid];
m5_1027 -> m5_25  [key=2, style=dotted];
m5_1027 -> m5_1028  [key=0, style=solid];
m5_1031 -> m5_25  [key=2, style=dotted];
m5_1031 -> m5_26  [key=2, style=dotted];
m5_1031 -> m5_1032  [key=0, style=solid];
m5_1033 -> m5_25  [key=2, style=dotted];
m5_1033 -> m5_1034  [key=0, style=solid];
m5_1033 -> m5_80  [key=2, style=dotted];
m5_1026 -> m5_27  [key=2, style=dotted];
m5_1026 -> m5_1027  [key=0, style=solid];
m5_1028 -> m5_27  [key=2, style=dotted];
m5_1028 -> m5_1029  [key=0, style=solid];
m5_1029 -> m5_27  [key=2, style=dotted];
m5_1029 -> m5_1030  [key=0, style=solid];
m5_1030 -> m5_27  [key=2, style=dotted];
m5_1030 -> m5_1031  [key=0, style=solid];
m5_1030 -> m5_255  [key=2, style=dotted];
m5_1032 -> m5_27  [key=2, style=dotted];
m5_1032 -> m5_1033  [key=0, style=solid];
m5_1034 -> m5_27  [key=2, style=dotted];
m5_1034 -> m5_1035  [key=0, style=solid];
m5_1023 -> m5_1024  [key=0, style=solid];
m5_1023 -> m5_527  [key=2, style=dotted];
m5_1022 -> m5_1023  [key=0, style=solid];
m5_1022 -> m5_1022  [key=3, color=darkorchid, style=bold, label="Local variable int length"];
m5_1035 -> m5_1021  [key=0, style=bold, color=blue];
m5_295 -> m5_296  [key=0, style=solid];
m5_297 -> m5_23  [key=2, style=dotted];
m5_297 -> m5_24  [key=2, style=dotted];
m5_297 -> m5_298  [key=0, style=solid];
m5_296 -> m5_297  [key=0, style=solid];
m5_296 -> m5_296  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m5_298 -> m5_298  [key=0, style=solid];
m5_298 -> m5_299  [key=0, style=solid];
m5_298 -> m5_300  [key=2, style=dotted];
m5_299 -> m5_295  [key=0, style=bold, color=blue];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_34  [key=2, style=dotted];
m5_346 -> m5_347  [key=0, style=solid];
m5_348 -> m5_23  [key=2, style=dotted];
m5_348 -> m5_24  [key=2, style=dotted];
m5_348 -> m5_349  [key=0, style=solid];
m5_349 -> m5_25  [key=2, style=dotted];
m5_349 -> m5_349  [key=0, style=solid];
m5_349 -> m5_350  [key=0, style=solid];
m5_347 -> m5_348  [key=0, style=solid];
m5_347 -> m5_347  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_350 -> m5_346  [key=0, style=bold, color=blue];
m5_521 -> m5_522  [key=0, style=solid];
m5_523 -> m5_23  [key=2, style=dotted];
m5_523 -> m5_24  [key=2, style=dotted];
m5_523 -> m5_524  [key=0, style=solid];
m5_523 -> m5_525  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_525 -> m5_27  [key=2, style=dotted];
m5_525 -> m5_526  [key=0, style=solid];
m5_522 -> m5_523  [key=0, style=solid];
m5_522 -> m5_525  [key=1, style=dashed, color=darkseagreen4, label=s];
m5_522 -> m5_527  [key=2, style=dotted];
m5_524 -> m5_525  [key=0, style=solid];
m5_524 -> m5_300  [key=2, style=dotted];
m5_526 -> m5_521  [key=0, style=bold, color=blue];
m5_1638 -> m5_1639  [key=0, style=solid];
m5_1640 -> m5_23  [key=2, style=dotted];
m5_1640 -> m5_24  [key=2, style=dotted];
m5_1640 -> m5_1641  [key=0, style=solid];
m5_1640 -> m5_1642  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1640 -> m5_1643  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1640 -> m5_1644  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1641 -> m5_25  [key=2, style=dotted];
m5_1641 -> m5_26  [key=2, style=dotted];
m5_1641 -> m5_1642  [key=0, style=solid];
m5_1643 -> m5_25  [key=2, style=dotted];
m5_1643 -> m5_26  [key=2, style=dotted];
m5_1643 -> m5_1644  [key=0, style=solid];
m5_1642 -> m5_27  [key=2, style=dotted];
m5_1642 -> m5_1643  [key=0, style=solid];
m5_1644 -> m5_27  [key=2, style=dotted];
m5_1644 -> m5_1645  [key=0, style=solid];
m5_1639 -> m5_1640  [key=0, style=solid];
m5_1639 -> m5_1639  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1645 -> m5_1638  [key=0, style=bold, color=blue];
m5_318 -> m5_2148  [key=0, style=solid];
m5_2148 -> m5_318  [key=0, style=bold, color=blue];
m5_794 -> m5_795  [key=0, style=solid];
m5_797 -> m5_23  [key=2, style=dotted];
m5_797 -> m5_24  [key=2, style=dotted];
m5_797 -> m5_798  [key=0, style=solid];
m5_797 -> m5_701  [key=2, style=dotted];
m5_797 -> m5_799  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_797 -> m5_800  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_797 -> m5_801  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_797 -> m5_802  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_797 -> m5_803  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_797 -> m5_804  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_797 -> m5_806  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_797 -> m5_807  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_797 -> m5_808  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_797 -> m5_809  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_798 -> m5_26  [key=2, style=dotted];
m5_798 -> m5_799  [key=0, style=solid];
m5_798 -> m5_300  [key=2, style=dotted];
m5_800 -> m5_26  [key=2, style=dotted];
m5_800 -> m5_801  [key=0, style=solid];
m5_800 -> m5_300  [key=2, style=dotted];
m5_801 -> m5_26  [key=2, style=dotted];
m5_801 -> m5_802  [key=0, style=solid];
m5_801 -> m5_300  [key=2, style=dotted];
m5_803 -> m5_26  [key=2, style=dotted];
m5_803 -> m5_804  [key=0, style=solid];
m5_803 -> m5_300  [key=2, style=dotted];
m5_807 -> m5_26  [key=2, style=dotted];
m5_807 -> m5_808  [key=0, style=solid];
m5_807 -> m5_300  [key=2, style=dotted];
m5_799 -> m5_27  [key=2, style=dotted];
m5_799 -> m5_800  [key=0, style=solid];
m5_802 -> m5_27  [key=2, style=dotted];
m5_802 -> m5_803  [key=0, style=solid];
m5_806 -> m5_27  [key=2, style=dotted];
m5_806 -> m5_807  [key=0, style=solid];
m5_808 -> m5_27  [key=2, style=dotted];
m5_808 -> m5_809  [key=0, style=solid];
m5_796 -> m5_797  [key=0, style=solid];
m5_796 -> m5_279  [key=2, style=dotted];
m5_796 -> m5_805  [key=1, style=dashed, color=darkseagreen4, label=helloWorldData];
m5_804 -> m5_805  [key=0, style=solid];
m5_804 -> m5_694  [key=2, style=dotted];
m5_809 -> m5_810  [key=0, style=solid];
m5_809 -> m5_300  [key=2, style=dotted];
m5_809 -> m5_80  [key=2, style=dotted];
m5_805 -> m5_806  [key=0, style=solid];
m5_805 -> m5_793  [key=2, style=dotted];
m5_795 -> m5_796  [key=0, style=solid];
m5_795 -> m5_696  [key=3, color=darkorchid, style=bold, label="Local variable string helloWorld"];
m5_810 -> m5_794  [key=0, style=bold, color=blue];
m5_951 -> m5_952  [key=0, style=solid];
m5_981 -> m5_23  [key=2, style=dotted];
m5_981 -> m5_24  [key=2, style=dotted];
m5_981 -> m5_982  [key=0, style=solid];
m5_981 -> m5_1001  [key=2, style=dotted];
m5_981 -> m5_985  [key=1, style=dashed, color=darkseagreen4, label=jsonObject];
m5_986 -> m5_27  [key=2, style=dotted];
m5_986 -> m5_987  [key=0, style=solid];
m5_986 -> m5_999  [key=2, style=dotted];
m5_979 -> m5_981  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_979 -> m5_986  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_979 -> m5_980  [key=0, style=solid];
m5_979 -> m5_999  [key=2, style=dotted];
m5_980 -> m5_981  [key=0, style=solid];
m5_980 -> m5_1000  [key=2, style=dotted];
m5_980 -> m5_985  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m5_982 -> m5_986  [key=1, style=dashed, color=darkseagreen4, label=sb];
m5_982 -> m5_983  [key=0, style=solid];
m5_982 -> m5_988  [key=2, style=dotted];
m5_985 -> m5_986  [key=0, style=solid];
m5_985 -> m5_1002  [key=2, style=dotted];
m5_952 -> m5_979  [key=1, style=dashed, color=darkseagreen4, label=sb];
m5_952 -> m5_953  [key=0, style=solid];
m5_952 -> m5_988  [key=2, style=dotted];
m5_978 -> m5_979  [key=0, style=solid];
m5_978 -> m5_67  [key=2, style=dotted];
m5_983 -> m5_984  [key=0, style=solid];
m5_983 -> m5_989  [key=2, style=dotted];
m5_984 -> m5_985  [key=0, style=solid];
m5_984 -> m5_550  [key=2, style=dotted];
m5_964 -> m5_534  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_964 -> m5_965  [key=0, style=solid];
m5_964 -> m5_966  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_964 -> m5_967  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_953 -> m5_954  [key=0, style=solid];
m5_953 -> m5_989  [key=2, style=dotted];
m5_954 -> m5_978  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_955  [key=0, style=solid];
m5_954 -> m5_550  [key=2, style=dotted];
m5_954 -> m5_956  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_957  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_958  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_959  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_960  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_961  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_962  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_963  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_966  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_968  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_969  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_970  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_971  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_972  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_973  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_974  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_975  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_976  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_954 -> m5_977  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m5_977 -> m5_978  [key=0, style=solid];
m5_977 -> m5_998  [key=2, style=dotted];
m5_963 -> m5_964  [key=0, style=solid];
m5_963 -> m5_990  [key=2, style=dotted];
m5_965 -> m5_966  [key=0, style=solid];
m5_965 -> m5_968  [key=0, style=solid];
m5_966 -> m5_967  [key=0, style=solid];
m5_966 -> m5_994  [key=2, style=dotted];
m5_967 -> m5_965  [key=0, style=solid];
m5_967 -> m5_967  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_955 -> m5_956  [key=0, style=solid];
m5_955 -> m5_990  [key=2, style=dotted];
m5_956 -> m5_957  [key=0, style=solid];
m5_956 -> m5_991  [key=2, style=dotted];
m5_957 -> m5_958  [key=0, style=solid];
m5_957 -> m5_992  [key=2, style=dotted];
m5_958 -> m5_959  [key=0, style=solid];
m5_958 -> m5_993  [key=2, style=dotted];
m5_959 -> m5_960  [key=0, style=solid];
m5_959 -> m5_994  [key=2, style=dotted];
m5_960 -> m5_961  [key=0, style=solid];
m5_960 -> m5_993  [key=2, style=dotted];
m5_961 -> m5_962  [key=0, style=solid];
m5_961 -> m5_995  [key=2, style=dotted];
m5_962 -> m5_963  [key=0, style=solid];
m5_962 -> m5_993  [key=2, style=dotted];
m5_968 -> m5_969  [key=0, style=solid];
m5_968 -> m5_992  [key=2, style=dotted];
m5_969 -> m5_970  [key=0, style=solid];
m5_969 -> m5_993  [key=2, style=dotted];
m5_970 -> m5_971  [key=0, style=solid];
m5_970 -> m5_996  [key=2, style=dotted];
m5_971 -> m5_972  [key=0, style=solid];
m5_971 -> m5_997  [key=2, style=dotted];
m5_972 -> m5_973  [key=0, style=solid];
m5_972 -> m5_994  [key=2, style=dotted];
m5_973 -> m5_974  [key=0, style=solid];
m5_973 -> m5_67  [key=2, style=dotted];
m5_974 -> m5_975  [key=0, style=solid];
m5_974 -> m5_997  [key=2, style=dotted];
m5_975 -> m5_976  [key=0, style=solid];
m5_975 -> m5_995  [key=2, style=dotted];
m5_976 -> m5_977  [key=0, style=solid];
m5_976 -> m5_998  [key=2, style=dotted];
m5_987 -> m5_951  [key=0, style=bold, color=blue];
m5_257 -> m5_258  [key=0, style=solid];
m5_258 -> m5_27  [key=2, style=dotted];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_271  [key=2, style=dotted];
m5_259 -> m5_27  [key=2, style=dotted];
m5_259 -> m5_260  [key=0, style=solid];
m5_259 -> m5_271  [key=2, style=dotted];
m5_260 -> m5_27  [key=2, style=dotted];
m5_260 -> m5_261  [key=0, style=solid];
m5_260 -> m5_271  [key=2, style=dotted];
m5_261 -> m5_27  [key=2, style=dotted];
m5_261 -> m5_262  [key=0, style=solid];
m5_261 -> m5_271  [key=2, style=dotted];
m5_262 -> m5_27  [key=2, style=dotted];
m5_262 -> m5_263  [key=0, style=solid];
m5_262 -> m5_271  [key=2, style=dotted];
m5_263 -> m5_27  [key=2, style=dotted];
m5_263 -> m5_264  [key=0, style=solid];
m5_263 -> m5_271  [key=2, style=dotted];
m5_264 -> m5_27  [key=2, style=dotted];
m5_264 -> m5_265  [key=0, style=solid];
m5_264 -> m5_271  [key=2, style=dotted];
m5_265 -> m5_27  [key=2, style=dotted];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_271  [key=2, style=dotted];
m5_266 -> m5_27  [key=2, style=dotted];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_271  [key=2, style=dotted];
m5_267 -> m5_27  [key=2, style=dotted];
m5_267 -> m5_268  [key=0, style=solid];
m5_267 -> m5_271  [key=2, style=dotted];
m5_268 -> m5_27  [key=2, style=dotted];
m5_268 -> m5_269  [key=0, style=solid];
m5_268 -> m5_271  [key=2, style=dotted];
m5_269 -> m5_27  [key=2, style=dotted];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_271  [key=2, style=dotted];
m5_270 -> m5_257  [key=0, style=bold, color=blue];
m5_1506 -> m5_1507  [key=0, style=solid];
m5_1508 -> m5_23  [key=2, style=dotted];
m5_1508 -> m5_24  [key=2, style=dotted];
m5_1508 -> m5_1509  [key=0, style=solid];
m5_1508 -> m5_1511  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1508 -> m5_1513  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1508 -> m5_1514  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1511 -> m5_25  [key=2, style=dotted];
m5_1511 -> m5_1512  [key=0, style=solid];
m5_1513 -> m5_25  [key=2, style=dotted];
m5_1513 -> m5_26  [key=2, style=dotted];
m5_1513 -> m5_1514  [key=0, style=solid];
m5_1514 -> m5_27  [key=2, style=dotted];
m5_1514 -> m5_1515  [key=0, style=solid];
m5_1514 -> m5_1516  [key=2, style=dotted];
m5_1507 -> m5_1508  [key=0, style=solid];
m5_1507 -> m5_1507  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1509 -> m5_1510  [key=0, style=solid];
m5_1509 -> m5_1512  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_1509 -> m5_534  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_1510 -> m5_1511  [key=0, style=solid];
m5_1510 -> m5_1513  [key=0, style=solid];
m5_1512 -> m5_1510  [key=0, style=solid];
m5_1512 -> m5_1512  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_1515 -> m5_1506  [key=0, style=bold, color=blue];
m5_628 -> m5_629  [key=0, style=solid];
m5_630 -> m5_23  [key=2, style=dotted];
m5_630 -> m5_631  [key=0, style=solid];
m5_630 -> m5_642  [key=2, style=dotted];
m5_630 -> m5_643  [key=2, style=dotted];
m5_630 -> m5_632  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_636 -> m5_23  [key=2, style=dotted];
m5_636 -> m5_637  [key=0, style=solid];
m5_636 -> m5_642  [key=2, style=dotted];
m5_636 -> m5_643  [key=2, style=dotted];
m5_636 -> m5_638  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_631 -> m5_25  [key=2, style=dotted];
m5_631 -> m5_632  [key=0, style=solid];
m5_637 -> m5_25  [key=2, style=dotted];
m5_637 -> m5_638  [key=0, style=solid];
m5_632 -> m5_27  [key=2, style=dotted];
m5_632 -> m5_633  [key=0, style=solid];
m5_638 -> m5_27  [key=2, style=dotted];
m5_638 -> m5_639  [key=0, style=solid];
m5_629 -> m5_630  [key=0, style=solid];
m5_629 -> m5_641  [key=2, style=dotted];
m5_629 -> m5_635  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_635 -> m5_636  [key=0, style=solid];
m5_633 -> m5_635  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_633 -> m5_601  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
m5_633 -> m5_634  [key=0, style=solid];
m5_633 -> m5_639  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_639 -> m5_639  [key=1, style=dashed, color=darkseagreen4, label=j];
m5_639 -> m5_634  [key=0, style=solid];
m5_634 -> m5_635  [key=0, style=solid];
m5_634 -> m5_640  [key=0, style=solid];
m5_640 -> m5_628  [key=0, style=bold, color=blue];
m5_1204 -> m5_1205  [key=0, style=solid];
m5_1205 -> m5_23  [key=2, style=dotted];
m5_1205 -> m5_24  [key=2, style=dotted];
m5_1205 -> m5_1206  [key=0, style=solid];
m5_1205 -> m5_1207  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1207 -> m5_27  [key=2, style=dotted];
m5_1207 -> m5_1208  [key=0, style=solid];
m5_1206 -> m5_1207  [key=0, style=solid];
m5_1206 -> m5_166  [key=2, style=dotted];
m5_1206 -> m5_711  [key=2, style=dotted];
m5_1208 -> m5_1204  [key=0, style=bold, color=blue];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_25  [key=2, style=dotted];
m5_85 -> m5_26  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_9  [key=2, style=dotted];
m5_86 -> m5_27  [key=2, style=dotted];
m5_87 -> m5_85  [key=0, style=bold, color=blue];
m5_87 -> m5_25  [key=2, style=dotted];
m5_87 -> m5_26  [key=2, style=dotted];
m5_87 -> m5_88  [key=0, style=solid];
m5_1036 -> m5_1037  [key=0, style=solid];
m5_1038 -> m5_23  [key=2, style=dotted];
m5_1038 -> m5_24  [key=2, style=dotted];
m5_1038 -> m5_1039  [key=0, style=solid];
m5_1038 -> m5_1040  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1038 -> m5_1041  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1038 -> m5_1042  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1038 -> m5_1043  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1038 -> m5_1044  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1038 -> m5_1045  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1038 -> m5_1046  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1039 -> m5_25  [key=2, style=dotted];
m5_1039 -> m5_1040  [key=0, style=solid];
m5_1041 -> m5_25  [key=2, style=dotted];
m5_1041 -> m5_1042  [key=0, style=solid];
m5_1043 -> m5_25  [key=2, style=dotted];
m5_1043 -> m5_1044  [key=0, style=solid];
m5_1045 -> m5_25  [key=2, style=dotted];
m5_1045 -> m5_1046  [key=0, style=solid];
m5_1040 -> m5_27  [key=2, style=dotted];
m5_1040 -> m5_1041  [key=0, style=solid];
m5_1042 -> m5_27  [key=2, style=dotted];
m5_1042 -> m5_1043  [key=0, style=solid];
m5_1044 -> m5_27  [key=2, style=dotted];
m5_1044 -> m5_1045  [key=0, style=solid];
m5_1044 -> m5_1048  [key=2, style=dotted];
m5_1044 -> m5_1049  [key=2, style=dotted];
m5_1046 -> m5_27  [key=2, style=dotted];
m5_1046 -> m5_1047  [key=0, style=solid];
m5_1037 -> m5_1038  [key=0, style=solid];
m5_1037 -> m5_1037  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1047 -> m5_1036  [key=0, style=bold, color=blue];
m5_1328 -> m5_1329  [key=0, style=solid];
m5_1330 -> m5_23  [key=2, style=dotted];
m5_1330 -> m5_24  [key=2, style=dotted];
m5_1330 -> m5_1331  [key=0, style=solid];
m5_1330 -> m5_1332  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1330 -> m5_1333  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1330 -> m5_1334  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1330 -> m5_1335  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1330 -> m5_1338  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1331 -> m5_25  [key=2, style=dotted];
m5_1331 -> m5_26  [key=2, style=dotted];
m5_1331 -> m5_1332  [key=0, style=solid];
m5_1333 -> m5_25  [key=2, style=dotted];
m5_1333 -> m5_26  [key=2, style=dotted];
m5_1333 -> m5_1334  [key=0, style=solid];
m5_1332 -> m5_27  [key=2, style=dotted];
m5_1332 -> m5_1333  [key=0, style=solid];
m5_1334 -> m5_27  [key=2, style=dotted];
m5_1334 -> m5_1335  [key=0, style=solid];
m5_1329 -> m5_1330  [key=0, style=solid];
m5_1329 -> m5_1329  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1335 -> m5_1336  [key=0, style=solid];
m5_1335 -> m5_94  [key=2, style=dotted];
m5_1335 -> m5_1337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1336 -> m5_1328  [key=0, style=bold, color=blue];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_27  [key=2, style=dotted];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_91  [key=2, style=dotted];
m5_89 -> m5_94  [key=2, style=dotted];
m5_89 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_90 -> m5_88  [key=0, style=bold, color=blue];
m5_90 -> m5_25  [key=2, style=dotted];
m5_90 -> m5_26  [key=2, style=dotted];
m5_90 -> m5_91  [key=0, style=solid];
m5_1248 -> m5_1249  [key=0, style=solid];
m5_1249 -> m5_23  [key=2, style=dotted];
m5_1249 -> m5_24  [key=2, style=dotted];
m5_1249 -> m5_1250  [key=0, style=solid];
m5_1251 -> m5_27  [key=2, style=dotted];
m5_1251 -> m5_1252  [key=0, style=solid];
m5_1252 -> m5_27  [key=2, style=dotted];
m5_1252 -> m5_1253  [key=0, style=solid];
m5_1253 -> m5_27  [key=2, style=dotted];
m5_1253 -> m5_1254  [key=0, style=solid];
m5_1250 -> m5_38  [key=2, style=dotted];
m5_1250 -> m5_1251  [key=0, style=solid];
m5_1250 -> m5_1252  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_1250 -> m5_1253  [key=1, style=dashed, color=darkseagreen4, label=data];
m5_1254 -> m5_1248  [key=0, style=bold, color=blue];
m5_1241 -> m5_1242  [key=0, style=solid];
m5_1242 -> m5_23  [key=2, style=dotted];
m5_1242 -> m5_24  [key=2, style=dotted];
m5_1242 -> m5_1243  [key=0, style=solid];
m5_1242 -> m5_1246  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1243 -> m5_1244  [key=0, style=solid];
m5_1243 -> m5_94  [key=2, style=dotted];
m5_1243 -> m5_1245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1244 -> m5_1241  [key=0, style=bold, color=blue];
m5_720 -> m5_721  [key=0, style=solid];
m5_727 -> m5_23  [key=2, style=dotted];
m5_727 -> m5_728  [key=0, style=solid];
m5_727 -> m5_280  [key=2, style=dotted];
m5_727 -> m5_318  [key=2, style=dotted];
m5_727 -> m5_319  [key=2, style=dotted];
m5_727 -> m5_729  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_730  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_731  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_732  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_733  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_734  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_735  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_736  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_737  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_738  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_739  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_740  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_741  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_742  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_743  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_744  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_745  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_746  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_747  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_748  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_749  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_750  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_751  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_752  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_753  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_754  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_755  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_756  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_757  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_758  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_759  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_760  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_761  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_727 -> m5_762  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_724 -> m5_24  [key=2, style=dotted];
m5_724 -> m5_725  [key=0, style=solid];
m5_728 -> m5_25  [key=2, style=dotted];
m5_728 -> m5_26  [key=2, style=dotted];
m5_728 -> m5_729  [key=0, style=solid];
m5_730 -> m5_25  [key=2, style=dotted];
m5_730 -> m5_26  [key=2, style=dotted];
m5_730 -> m5_731  [key=0, style=solid];
m5_733 -> m5_25  [key=2, style=dotted];
m5_733 -> m5_26  [key=2, style=dotted];
m5_733 -> m5_734  [key=0, style=solid];
m5_735 -> m5_25  [key=2, style=dotted];
m5_735 -> m5_26  [key=2, style=dotted];
m5_735 -> m5_736  [key=0, style=solid];
m5_739 -> m5_25  [key=2, style=dotted];
m5_739 -> m5_26  [key=2, style=dotted];
m5_739 -> m5_740  [key=0, style=solid];
m5_742 -> m5_25  [key=2, style=dotted];
m5_742 -> m5_26  [key=2, style=dotted];
m5_742 -> m5_743  [key=0, style=solid];
m5_745 -> m5_25  [key=2, style=dotted];
m5_745 -> m5_26  [key=2, style=dotted];
m5_745 -> m5_746  [key=0, style=solid];
m5_748 -> m5_25  [key=2, style=dotted];
m5_748 -> m5_26  [key=2, style=dotted];
m5_748 -> m5_749  [key=0, style=solid];
m5_750 -> m5_25  [key=2, style=dotted];
m5_750 -> m5_26  [key=2, style=dotted];
m5_750 -> m5_751  [key=0, style=solid];
m5_752 -> m5_25  [key=2, style=dotted];
m5_752 -> m5_26  [key=2, style=dotted];
m5_752 -> m5_753  [key=0, style=solid];
m5_754 -> m5_25  [key=2, style=dotted];
m5_754 -> m5_26  [key=2, style=dotted];
m5_754 -> m5_755  [key=0, style=solid];
m5_757 -> m5_25  [key=2, style=dotted];
m5_757 -> m5_26  [key=2, style=dotted];
m5_757 -> m5_758  [key=0, style=solid];
m5_759 -> m5_25  [key=2, style=dotted];
m5_759 -> m5_26  [key=2, style=dotted];
m5_759 -> m5_760  [key=0, style=solid];
m5_761 -> m5_25  [key=2, style=dotted];
m5_761 -> m5_26  [key=2, style=dotted];
m5_761 -> m5_762  [key=0, style=solid];
m5_732 -> m5_27  [key=2, style=dotted];
m5_732 -> m5_733  [key=0, style=solid];
m5_747 -> m5_27  [key=2, style=dotted];
m5_747 -> m5_748  [key=0, style=solid];
m5_729 -> m5_27  [key=2, style=dotted];
m5_729 -> m5_730  [key=0, style=solid];
m5_731 -> m5_27  [key=2, style=dotted];
m5_731 -> m5_732  [key=0, style=solid];
m5_734 -> m5_27  [key=2, style=dotted];
m5_734 -> m5_735  [key=0, style=solid];
m5_736 -> m5_27  [key=2, style=dotted];
m5_736 -> m5_737  [key=0, style=solid];
m5_737 -> m5_27  [key=2, style=dotted];
m5_737 -> m5_738  [key=0, style=solid];
m5_738 -> m5_27  [key=2, style=dotted];
m5_738 -> m5_739  [key=0, style=solid];
m5_740 -> m5_27  [key=2, style=dotted];
m5_740 -> m5_741  [key=0, style=solid];
m5_741 -> m5_27  [key=2, style=dotted];
m5_741 -> m5_742  [key=0, style=solid];
m5_743 -> m5_27  [key=2, style=dotted];
m5_743 -> m5_744  [key=0, style=solid];
m5_744 -> m5_27  [key=2, style=dotted];
m5_744 -> m5_745  [key=0, style=solid];
m5_746 -> m5_27  [key=2, style=dotted];
m5_746 -> m5_747  [key=0, style=solid];
m5_749 -> m5_27  [key=2, style=dotted];
m5_749 -> m5_750  [key=0, style=solid];
m5_751 -> m5_27  [key=2, style=dotted];
m5_751 -> m5_752  [key=0, style=solid];
m5_753 -> m5_27  [key=2, style=dotted];
m5_753 -> m5_754  [key=0, style=solid];
m5_755 -> m5_27  [key=2, style=dotted];
m5_755 -> m5_756  [key=0, style=solid];
m5_756 -> m5_27  [key=2, style=dotted];
m5_756 -> m5_757  [key=0, style=solid];
m5_758 -> m5_27  [key=2, style=dotted];
m5_758 -> m5_759  [key=0, style=solid];
m5_760 -> m5_27  [key=2, style=dotted];
m5_760 -> m5_761  [key=0, style=solid];
m5_762 -> m5_27  [key=2, style=dotted];
m5_762 -> m5_763  [key=0, style=solid];
m5_722 -> m5_727  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_722 -> m5_723  [key=0, style=solid];
m5_725 -> m5_727  [key=0, style=solid];
m5_725 -> m5_726  [key=0, style=solid];
m5_725 -> m5_764  [key=2, style=dotted];
m5_721 -> m5_724  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m5_721 -> m5_732  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m5_721 -> m5_747  [key=1, style=dashed, color=darkseagreen4, label=newLinesText];
m5_721 -> m5_722  [key=0, style=solid];
m5_723 -> m5_724  [key=0, style=solid];
m5_723 -> m5_726  [key=1, style=dashed, color=darkseagreen4, label=count];
m5_723 -> m5_534  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
m5_726 -> m5_725  [key=0, style=solid];
m5_726 -> m5_726  [key=1, style=dashed, color=darkseagreen4, label=count];
m5_763 -> m5_720  [key=0, style=bold, color=blue];
m5_1003 -> m5_1004  [key=0, style=solid];
m5_1006 -> m5_23  [key=2, style=dotted];
m5_1006 -> m5_1007  [key=0, style=solid];
m5_1006 -> m5_1008  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1009  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1010  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1011  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1012  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1013  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1014  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1015  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1016  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1017  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1018  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1006 -> m5_1019  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m5_1005 -> m5_24  [key=2, style=dotted];
m5_1005 -> m5_1006  [key=0, style=solid];
m5_1008 -> m5_27  [key=2, style=dotted];
m5_1008 -> m5_1009  [key=0, style=solid];
m5_1010 -> m5_27  [key=2, style=dotted];
m5_1010 -> m5_1011  [key=0, style=solid];
m5_1011 -> m5_27  [key=2, style=dotted];
m5_1011 -> m5_1012  [key=0, style=solid];
m5_1013 -> m5_27  [key=2, style=dotted];
m5_1013 -> m5_1014  [key=0, style=solid];
m5_1014 -> m5_27  [key=2, style=dotted];
m5_1014 -> m5_1015  [key=0, style=solid];
m5_1016 -> m5_27  [key=2, style=dotted];
m5_1016 -> m5_1017  [key=0, style=solid];
m5_1017 -> m5_27  [key=2, style=dotted];
m5_1017 -> m5_1018  [key=0, style=solid];
m5_1019 -> m5_27  [key=2, style=dotted];
m5_1019 -> m5_1020  [key=0, style=solid];
m5_1007 -> m5_1008  [key=0, style=solid];
m5_1007 -> m5_300  [key=2, style=dotted];
m5_1009 -> m5_1010  [key=0, style=solid];
m5_1009 -> m5_300  [key=2, style=dotted];
m5_1012 -> m5_1013  [key=0, style=solid];
m5_1012 -> m5_300  [key=2, style=dotted];
m5_1015 -> m5_1016  [key=0, style=solid];
m5_1015 -> m5_300  [key=2, style=dotted];
m5_1018 -> m5_1019  [key=0, style=solid];
m5_1018 -> m5_300  [key=2, style=dotted];
m5_1004 -> m5_1005  [key=0, style=solid];
m5_1004 -> m5_1004  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m5_1020 -> m5_1003  [key=0, style=bold, color=blue];
m5_1354 -> m5_1355  [key=0, style=solid];
m5_1356 -> m5_23  [key=2, style=dotted];
m5_1356 -> m5_24  [key=2, style=dotted];
m5_1356 -> m5_1357  [key=0, style=solid];
m5_1356 -> m5_1358  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1356 -> m5_1359  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1356 -> m5_1360  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1356 -> m5_1361  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1356 -> m5_1362  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1356 -> m5_1363  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1356 -> m5_1364  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1356 -> m5_1365  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1356 -> m5_1366  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1357 -> m5_25  [key=2, style=dotted];
m5_1357 -> m5_26  [key=2, style=dotted];
m5_1357 -> m5_1358  [key=0, style=solid];
m5_1359 -> m5_25  [key=2, style=dotted];
m5_1359 -> m5_26  [key=2, style=dotted];
m5_1359 -> m5_1360  [key=0, style=solid];
m5_1365 -> m5_25  [key=2, style=dotted];
m5_1365 -> m5_26  [key=2, style=dotted];
m5_1365 -> m5_1366  [key=0, style=solid];
m5_1358 -> m5_27  [key=2, style=dotted];
m5_1358 -> m5_1359  [key=0, style=solid];
m5_1360 -> m5_27  [key=2, style=dotted];
m5_1360 -> m5_1361  [key=0, style=solid];
m5_1362 -> m5_27  [key=2, style=dotted];
m5_1362 -> m5_1363  [key=0, style=solid];
m5_1363 -> m5_27  [key=2, style=dotted];
m5_1363 -> m5_1364  [key=0, style=solid];
m5_1364 -> m5_27  [key=2, style=dotted];
m5_1364 -> m5_1365  [key=0, style=solid];
m5_1364 -> m5_1311  [key=2, style=dotted];
m5_1364 -> m5_1312  [key=2, style=dotted];
m5_1364 -> m5_1313  [key=2, style=dotted];
m5_1364 -> m5_1368  [key=2, style=dotted];
m5_1364 -> m5_1369  [key=2, style=dotted];
m5_1366 -> m5_27  [key=2, style=dotted];
m5_1366 -> m5_1367  [key=0, style=solid];
m5_1355 -> m5_1356  [key=0, style=solid];
m5_1355 -> m5_1355  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1361 -> m5_1362  [key=0, style=solid];
m5_1361 -> m5_1226  [key=2, style=dotted];
m5_1367 -> m5_1354  [key=0, style=bold, color=blue];
m5_1564 -> m5_1565  [key=0, style=solid];
m5_1565 -> m5_23  [key=2, style=dotted];
m5_1565 -> m5_24  [key=2, style=dotted];
m5_1565 -> m5_1566  [key=0, style=solid];
m5_1565 -> m5_1567  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1568  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1569  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1570  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1571  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1572  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1573  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1574  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1575  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1576  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1577  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1578  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1579  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1580  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1581  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1582  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1584  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1585  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1586  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1587  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1588  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1589  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1590  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1591  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1592  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1593  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1594  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1595  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1596  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1597  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1598  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1599  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1600  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1601  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1602  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1603  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1604  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1565 -> m5_1605  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1567 -> m5_25  [key=2, style=dotted];
m5_1567 -> m5_26  [key=2, style=dotted];
m5_1567 -> m5_1568  [key=0, style=solid];
m5_1569 -> m5_25  [key=2, style=dotted];
m5_1569 -> m5_26  [key=2, style=dotted];
m5_1569 -> m5_1570  [key=0, style=solid];
m5_1571 -> m5_25  [key=2, style=dotted];
m5_1571 -> m5_26  [key=2, style=dotted];
m5_1571 -> m5_1572  [key=0, style=solid];
m5_1573 -> m5_25  [key=2, style=dotted];
m5_1573 -> m5_26  [key=2, style=dotted];
m5_1573 -> m5_1574  [key=0, style=solid];
m5_1575 -> m5_25  [key=2, style=dotted];
m5_1575 -> m5_26  [key=2, style=dotted];
m5_1575 -> m5_1576  [key=0, style=solid];
m5_1577 -> m5_25  [key=2, style=dotted];
m5_1577 -> m5_26  [key=2, style=dotted];
m5_1577 -> m5_1578  [key=0, style=solid];
m5_1579 -> m5_25  [key=2, style=dotted];
m5_1579 -> m5_26  [key=2, style=dotted];
m5_1579 -> m5_1580  [key=0, style=solid];
m5_1581 -> m5_25  [key=2, style=dotted];
m5_1581 -> m5_26  [key=2, style=dotted];
m5_1581 -> m5_1582  [key=0, style=solid];
m5_1583 -> m5_25  [key=2, style=dotted];
m5_1583 -> m5_26  [key=2, style=dotted];
m5_1583 -> m5_1584  [key=0, style=solid];
m5_1585 -> m5_25  [key=2, style=dotted];
m5_1585 -> m5_26  [key=2, style=dotted];
m5_1585 -> m5_1586  [key=0, style=solid];
m5_1587 -> m5_25  [key=2, style=dotted];
m5_1587 -> m5_26  [key=2, style=dotted];
m5_1587 -> m5_1588  [key=0, style=solid];
m5_1589 -> m5_25  [key=2, style=dotted];
m5_1589 -> m5_26  [key=2, style=dotted];
m5_1589 -> m5_1590  [key=0, style=solid];
m5_1591 -> m5_25  [key=2, style=dotted];
m5_1591 -> m5_26  [key=2, style=dotted];
m5_1591 -> m5_1592  [key=0, style=solid];
m5_1593 -> m5_25  [key=2, style=dotted];
m5_1593 -> m5_26  [key=2, style=dotted];
m5_1593 -> m5_1594  [key=0, style=solid];
m5_1595 -> m5_25  [key=2, style=dotted];
m5_1595 -> m5_26  [key=2, style=dotted];
m5_1595 -> m5_1596  [key=0, style=solid];
m5_1597 -> m5_25  [key=2, style=dotted];
m5_1597 -> m5_26  [key=2, style=dotted];
m5_1597 -> m5_1598  [key=0, style=solid];
m5_1599 -> m5_25  [key=2, style=dotted];
m5_1599 -> m5_26  [key=2, style=dotted];
m5_1599 -> m5_1600  [key=0, style=solid];
m5_1601 -> m5_25  [key=2, style=dotted];
m5_1601 -> m5_26  [key=2, style=dotted];
m5_1601 -> m5_1602  [key=0, style=solid];
m5_1603 -> m5_25  [key=2, style=dotted];
m5_1603 -> m5_26  [key=2, style=dotted];
m5_1603 -> m5_1604  [key=0, style=solid];
m5_1605 -> m5_25  [key=2, style=dotted];
m5_1605 -> m5_1606  [key=0, style=solid];
m5_1605 -> m5_80  [key=2, style=dotted];
m5_1568 -> m5_27  [key=2, style=dotted];
m5_1568 -> m5_1569  [key=0, style=solid];
m5_1570 -> m5_27  [key=2, style=dotted];
m5_1570 -> m5_1571  [key=0, style=solid];
m5_1572 -> m5_27  [key=2, style=dotted];
m5_1572 -> m5_1573  [key=0, style=solid];
m5_1574 -> m5_27  [key=2, style=dotted];
m5_1574 -> m5_1575  [key=0, style=solid];
m5_1576 -> m5_27  [key=2, style=dotted];
m5_1576 -> m5_1577  [key=0, style=solid];
m5_1578 -> m5_27  [key=2, style=dotted];
m5_1578 -> m5_1579  [key=0, style=solid];
m5_1580 -> m5_27  [key=2, style=dotted];
m5_1580 -> m5_1581  [key=0, style=solid];
m5_1582 -> m5_27  [key=2, style=dotted];
m5_1582 -> m5_1583  [key=0, style=solid];
m5_1584 -> m5_27  [key=2, style=dotted];
m5_1584 -> m5_1585  [key=0, style=solid];
m5_1586 -> m5_27  [key=2, style=dotted];
m5_1586 -> m5_1587  [key=0, style=solid];
m5_1588 -> m5_27  [key=2, style=dotted];
m5_1588 -> m5_1589  [key=0, style=solid];
m5_1590 -> m5_27  [key=2, style=dotted];
m5_1590 -> m5_1591  [key=0, style=solid];
m5_1592 -> m5_27  [key=2, style=dotted];
m5_1592 -> m5_1593  [key=0, style=solid];
m5_1594 -> m5_27  [key=2, style=dotted];
m5_1594 -> m5_1595  [key=0, style=solid];
m5_1596 -> m5_27  [key=2, style=dotted];
m5_1596 -> m5_1597  [key=0, style=solid];
m5_1598 -> m5_27  [key=2, style=dotted];
m5_1598 -> m5_1599  [key=0, style=solid];
m5_1600 -> m5_27  [key=2, style=dotted];
m5_1600 -> m5_1601  [key=0, style=solid];
m5_1602 -> m5_27  [key=2, style=dotted];
m5_1602 -> m5_1603  [key=0, style=solid];
m5_1604 -> m5_27  [key=2, style=dotted];
m5_1604 -> m5_1605  [key=0, style=solid];
m5_1566 -> m5_1567  [key=0, style=solid];
m5_1606 -> m5_1564  [key=0, style=bold, color=blue];
m5_1221 -> m5_1222  [key=0, style=solid];
m5_1222 -> m5_23  [key=2, style=dotted];
m5_1222 -> m5_24  [key=2, style=dotted];
m5_1222 -> m5_1223  [key=0, style=solid];
m5_1222 -> m5_1224  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1224 -> m5_27  [key=2, style=dotted];
m5_1224 -> m5_1225  [key=0, style=solid];
m5_1223 -> m5_1224  [key=0, style=solid];
m5_1223 -> m5_1226  [key=2, style=dotted];
m5_1223 -> m5_711  [key=2, style=dotted];
m5_1225 -> m5_1221  [key=0, style=bold, color=blue];
m5_1607 -> m5_1608  [key=0, style=solid];
m5_1609 -> m5_23  [key=2, style=dotted];
m5_1609 -> m5_24  [key=2, style=dotted];
m5_1609 -> m5_1610  [key=0, style=solid];
m5_1609 -> m5_1611  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1609 -> m5_1612  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1610 -> m5_25  [key=2, style=dotted];
m5_1610 -> m5_26  [key=2, style=dotted];
m5_1610 -> m5_1611  [key=0, style=solid];
m5_1611 -> m5_25  [key=2, style=dotted];
m5_1611 -> m5_26  [key=2, style=dotted];
m5_1611 -> m5_1612  [key=0, style=solid];
m5_1612 -> m5_25  [key=2, style=dotted];
m5_1612 -> m5_1613  [key=0, style=solid];
m5_1612 -> m5_80  [key=2, style=dotted];
m5_1608 -> m5_1609  [key=0, style=solid];
m5_1608 -> m5_1608  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1613 -> m5_1607  [key=0, style=bold, color=blue];
m5_1936 -> m5_1937  [key=0, style=solid];
m5_1938 -> m5_23  [key=2, style=dotted];
m5_1938 -> m5_24  [key=2, style=dotted];
m5_1938 -> m5_1939  [key=0, style=solid];
m5_1938 -> m5_1940  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1941  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1966  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1942  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1943  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1944  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1945  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1946  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1947  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1948  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1949  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1950  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1951  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1952  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1953  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1969  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1954  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1955  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1956  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1957  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1958  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1959  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1960  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1961  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1962  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1938 -> m5_1963  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1939 -> m5_25  [key=2, style=dotted];
m5_1939 -> m5_26  [key=2, style=dotted];
m5_1939 -> m5_1940  [key=0, style=solid];
m5_1943 -> m5_25  [key=2, style=dotted];
m5_1943 -> m5_26  [key=2, style=dotted];
m5_1943 -> m5_1944  [key=0, style=solid];
m5_1945 -> m5_25  [key=2, style=dotted];
m5_1945 -> m5_26  [key=2, style=dotted];
m5_1945 -> m5_1946  [key=0, style=solid];
m5_1947 -> m5_25  [key=2, style=dotted];
m5_1947 -> m5_26  [key=2, style=dotted];
m5_1947 -> m5_1948  [key=0, style=solid];
m5_1949 -> m5_25  [key=2, style=dotted];
m5_1949 -> m5_26  [key=2, style=dotted];
m5_1949 -> m5_1950  [key=0, style=solid];
m5_1951 -> m5_25  [key=2, style=dotted];
m5_1951 -> m5_26  [key=2, style=dotted];
m5_1951 -> m5_1952  [key=0, style=solid];
m5_1955 -> m5_25  [key=2, style=dotted];
m5_1955 -> m5_26  [key=2, style=dotted];
m5_1955 -> m5_1956  [key=0, style=solid];
m5_1957 -> m5_25  [key=2, style=dotted];
m5_1957 -> m5_26  [key=2, style=dotted];
m5_1957 -> m5_1958  [key=0, style=solid];
m5_1959 -> m5_25  [key=2, style=dotted];
m5_1959 -> m5_26  [key=2, style=dotted];
m5_1959 -> m5_1960  [key=0, style=solid];
m5_1961 -> m5_25  [key=2, style=dotted];
m5_1961 -> m5_26  [key=2, style=dotted];
m5_1961 -> m5_1962  [key=0, style=solid];
m5_1963 -> m5_25  [key=2, style=dotted];
m5_1963 -> m5_1964  [key=0, style=solid];
m5_1963 -> m5_80  [key=2, style=dotted];
m5_1940 -> m5_27  [key=2, style=dotted];
m5_1940 -> m5_1941  [key=0, style=solid];
m5_1942 -> m5_27  [key=2, style=dotted];
m5_1942 -> m5_1943  [key=0, style=solid];
m5_1944 -> m5_27  [key=2, style=dotted];
m5_1944 -> m5_1945  [key=0, style=solid];
m5_1946 -> m5_27  [key=2, style=dotted];
m5_1946 -> m5_1947  [key=0, style=solid];
m5_1948 -> m5_27  [key=2, style=dotted];
m5_1948 -> m5_1949  [key=0, style=solid];
m5_1950 -> m5_27  [key=2, style=dotted];
m5_1950 -> m5_1951  [key=0, style=solid];
m5_1952 -> m5_27  [key=2, style=dotted];
m5_1952 -> m5_1953  [key=0, style=solid];
m5_1954 -> m5_27  [key=2, style=dotted];
m5_1954 -> m5_1955  [key=0, style=solid];
m5_1956 -> m5_27  [key=2, style=dotted];
m5_1956 -> m5_1957  [key=0, style=solid];
m5_1958 -> m5_27  [key=2, style=dotted];
m5_1958 -> m5_1959  [key=0, style=solid];
m5_1960 -> m5_27  [key=2, style=dotted];
m5_1960 -> m5_1961  [key=0, style=solid];
m5_1962 -> m5_27  [key=2, style=dotted];
m5_1962 -> m5_1963  [key=0, style=solid];
m5_1937 -> m5_1938  [key=0, style=solid];
m5_1937 -> m5_1937  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1941 -> m5_1942  [key=0, style=solid];
m5_1941 -> m5_1674  [key=2, style=dotted];
m5_1941 -> m5_1965  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1953 -> m5_1954  [key=0, style=solid];
m5_1953 -> m5_1674  [key=2, style=dotted];
m5_1953 -> m5_1968  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1964 -> m5_1936  [key=0, style=bold, color=blue];
m5_14 -> m5_15  [key=0, style=solid, color=green];
m5_14 -> m5_27  [key=2, style=dotted, color=green];
m5_18 -> m5_19  [key=0, style=solid, color=green];
m5_18 -> m5_25  [key=2, style=dotted, color=green];
m5_18 -> m5_26  [key=2, style=dotted, color=green];
m5_18 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_18 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_18 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_18 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_18 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_18 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_18 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_18 -> m5_37  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
m5_19 -> m5_20  [key=0, style=solid, color=green];
m5_19 -> m5_27  [key=2, style=dotted, color=green];
m5_19 -> m5_22  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid, color=green];
m5_20 -> m5_25  [key=2, style=dotted, color=green];
m5_20 -> m5_26  [key=2, style=dotted, color=green];
m5_20 -> m5_22  [key=0, style=solid];
m5_20 -> m5_31  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid, color=green];
m5_21 -> m5_27  [key=2, style=dotted, color=green];
m5_21 -> m5_30  [key=0, style=solid];
m5_21 -> m5_32  [key=2, style=dotted];
m5_22 -> m5_0  [key=0, style=bold, color=blue];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=0, style=solid];
m5_351 -> m5_352  [key=0, style=solid];
m5_353 -> m5_23  [key=2, style=dotted];
m5_353 -> m5_24  [key=2, style=dotted];
m5_353 -> m5_354  [key=0, style=solid];
m5_353 -> m5_357  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_352 -> m5_353  [key=0, style=solid];
m5_352 -> m5_352  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_354 -> m5_355  [key=0, style=solid];
m5_354 -> m5_94  [key=2, style=dotted];
m5_354 -> m5_356  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_355 -> m5_351  [key=0, style=bold, color=blue];
m5_320 -> m5_321  [key=0, style=solid];
m5_322 -> m5_23  [key=2, style=dotted];
m5_322 -> m5_24  [key=2, style=dotted];
m5_322 -> m5_323  [key=0, style=solid];
m5_322 -> m5_326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_321 -> m5_322  [key=0, style=solid];
m5_321 -> m5_321  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_323 -> m5_324  [key=0, style=solid];
m5_323 -> m5_94  [key=2, style=dotted];
m5_323 -> m5_325  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_324 -> m5_320  [key=0, style=bold, color=blue];
m5_1314 -> m5_1315  [key=0, style=solid];
m5_1316 -> m5_23  [key=2, style=dotted];
m5_1316 -> m5_24  [key=2, style=dotted];
m5_1316 -> m5_1317  [key=0, style=solid];
m5_1316 -> m5_1318  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1316 -> m5_1319  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1316 -> m5_1320  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1316 -> m5_1321  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1316 -> m5_1322  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1316 -> m5_1323  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1316 -> m5_1324  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1316 -> m5_1325  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1316 -> m5_1326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_1317 -> m5_25  [key=2, style=dotted];
m5_1317 -> m5_26  [key=2, style=dotted];
m5_1317 -> m5_1318  [key=0, style=solid];
m5_1319 -> m5_25  [key=2, style=dotted];
m5_1319 -> m5_26  [key=2, style=dotted];
m5_1319 -> m5_1320  [key=0, style=solid];
m5_1325 -> m5_25  [key=2, style=dotted];
m5_1325 -> m5_26  [key=2, style=dotted];
m5_1325 -> m5_1326  [key=0, style=solid];
m5_1318 -> m5_27  [key=2, style=dotted];
m5_1318 -> m5_1319  [key=0, style=solid];
m5_1320 -> m5_27  [key=2, style=dotted];
m5_1320 -> m5_1321  [key=0, style=solid];
m5_1322 -> m5_27  [key=2, style=dotted];
m5_1322 -> m5_1323  [key=0, style=solid];
m5_1323 -> m5_27  [key=2, style=dotted];
m5_1323 -> m5_1324  [key=0, style=solid];
m5_1324 -> m5_27  [key=2, style=dotted];
m5_1324 -> m5_1325  [key=0, style=solid];
m5_1324 -> m5_1311  [key=2, style=dotted];
m5_1324 -> m5_1312  [key=2, style=dotted];
m5_1324 -> m5_1313  [key=2, style=dotted];
m5_1326 -> m5_27  [key=2, style=dotted];
m5_1326 -> m5_1327  [key=0, style=solid];
m5_1315 -> m5_1316  [key=0, style=solid];
m5_1315 -> m5_1315  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m5_1321 -> m5_1322  [key=0, style=solid];
m5_1321 -> m5_1226  [key=2, style=dotted];
m5_1327 -> m5_1314  [key=0, style=bold, color=blue];
m5_2181 -> m5_609  [key=1, style=dashed, color=darkseagreen4, label=total];
m5_2182 -> m5_625  [key=1, style=dashed, color=darkseagreen4, label=total];
m5_2215 -> m5_2131  [key=1, style=dashed, color=darkseagreen4, label=json];
m5_2173 -> m5_161  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2173 -> m5_164  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2173 -> m5_168  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2174 -> m5_184  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2175 -> m5_221  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2177 -> m5_326  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2178 -> m5_344  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2179 -> m5_357  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2189 -> m5_911  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2189 -> m5_908  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2189 -> m5_914  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2190 -> m5_946  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2190 -> m5_949  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2191 -> m5_1124  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2192 -> m5_1202  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2201 -> m5_1447  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2202 -> m5_1454  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2203 -> m5_1461  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2204 -> m5_1468  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2205 -> m5_1475  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2206 -> m5_1620  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2207 -> m5_1628  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2208 -> m5_1659  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2209 -> m5_1676  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2210 -> m5_1840  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2212 -> m5_1934  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2213 -> m5_1966  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2213 -> m5_1969  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2214 -> m5_2091  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2214 -> m5_2094  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2214 -> m5_2097  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2214 -> m5_2100  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2214 -> m5_2103  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2214 -> m5_2106  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2176 -> m5_258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_259  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_260  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_263  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_264  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_267  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_268  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2176 -> m5_269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.JsonTextReaderTest"];
m5_2193 -> m5_1219  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2195 -> m5_1239  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2197 -> m5_1260  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2198 -> m5_1267  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2171 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2172 -> m5_113  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2172 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2172 -> m5_119  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2172 -> m5_122  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m5_2180 -> m5_519  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2183 -> m5_678  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2184 -> m5_685  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2185 -> m5_692  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2186 -> m5_703  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2187 -> m5_718  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2188 -> m5_871  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2188 -> m5_874  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2188 -> m5_877  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2188 -> m5_880  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2188 -> m5_883  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2194 -> m5_1232  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2196 -> m5_1246  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2199 -> m5_1338  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2200 -> m5_1440  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2211 -> m5_1879  [key=1, style=dashed, color=darkseagreen4, label=reader];
m5_2216 -> m5_2134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m5_2216 -> m5_2137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m5_2216 -> m5_2139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.ToggleReaderError"];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_21  [key=0, style=bold, color=blue];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_95  [key=0, style=bold, color=crimson];
m7_93 -> m7_97  [key=0, style=bold, color=crimson];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_98  [key=0, style=solid];
m7_94 -> m7_55  [key=2, style=dotted];
m7_94 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_95 -> m7_96  [key=0, style=solid];
m7_97 -> m7_96  [key=0, style=solid];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_94  [key=0, style=solid];
m7_96 -> m7_55  [key=2, style=dotted];
m7_98 -> m7_93  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_6  [key=0, style=bold, color=blue];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_29 -> m7_27  [key=0, style=bold, color=blue];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_38  [key=0, style=solid];
m7_38 -> m7_36  [key=0, style=bold, color=blue];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_39 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_39 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_39 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_39 -> m7_39  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type match"];
m7_39 -> m7_57  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type match"];
m7_39 -> m7_44  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AssignableToTypeName"];
m7_39 -> m7_51  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AssignableToTypeName"];
m7_39 -> m7_56  [key=3, color=darkorchid, style=bold, label="Parameter variable string fullTypeName"];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_40 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_40 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_40 -> m7_39  [key=3, color=darkorchid, style=bold, label="Local variable System.Type current"];
m7_40 -> m7_18  [key=3, color=darkorchid, style=bold, label="Local variable System.Type current"];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_45  [key=0, style=solid];
m7_42 -> m7_53  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_50  [key=0, style=solid];
m7_46 -> m7_55  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_46  [key=0, style=solid];
m7_47 -> m7_53  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_46  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid];
m7_45 -> m7_41  [key=0, style=solid];
m7_45 -> m7_54  [key=2, style=dotted];
m7_45 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=current];
m7_44 -> m7_52  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_52  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m7_49 -> m7_52  [key=0, style=solid];
m7_51 -> m7_52  [key=0, style=solid];
m7_52 -> m7_39  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_90 -> m7_91  [key=0, style=solid];
m7_72 -> m7_73  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_73 -> m7_71  [key=0, style=bold, color=blue];
m7_91 -> m7_92  [key=0, style=solid];
m7_92 -> m7_90  [key=0, style=bold, color=blue];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_35 -> m7_33  [key=0, style=bold, color=blue];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_58  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_56 -> m7_39  [key=3, color=darkorchid, style=bold, label="method methodReturn bool AssignableToTypeName"];
m7_57 -> m7_58  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_60  [key=2, style=dotted];
m7_59 -> m7_56  [key=0, style=bold, color=blue];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_30  [key=0, style=bold, color=blue];
m7_18 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_18  [key=0, style=bold, color=blue];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_76  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m7_74 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m7_74 -> m7_51  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasParameters"];
m7_74 -> m7_44  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasParameters"];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_85  [key=2, style=dotted];
m7_75 -> m7_86  [key=2, style=dotted];
m7_75 -> m7_87  [key=2, style=dotted];
m7_75 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_75 -> m7_79  [key=1, style=dashed, color=darkseagreen4, label=methodParameters];
m7_75 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=methodParameters];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_78  [key=0, style=solid];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_82  [key=0, style=solid];
m7_80 -> m7_88  [key=2, style=dotted];
m7_80 -> m7_89  [key=2, style=dotted];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_83  [key=0, style=solid];
m7_79 -> m7_79  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_77 -> m7_84  [key=0, style=solid];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_80  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_78 -> m7_82  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_82 -> m7_79  [key=0, style=solid];
m7_82 -> m7_82  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_83 -> m7_84  [key=0, style=solid];
m7_81 -> m7_84  [key=0, style=solid];
m7_84 -> m7_74  [key=0, style=bold, color=blue];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_3  [key=0, style=bold, color=blue];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m7_61 -> m7_64  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m7_61 -> m7_63  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.MethodInfo GetGenericMethod"];
m7_61 -> m7_66  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.MethodInfo GetGenericMethod"];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_68  [key=2, style=dotted];
m7_62 -> m7_69  [key=2, style=dotted];
m7_62 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_63  [key=0, style=solid];
m7_64 -> m7_70  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_66  [key=0, style=solid];
m7_63 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label=method];
m7_66 -> m7_67  [key=0, style=solid];
m7_65 -> m7_67  [key=0, style=solid];
m7_67 -> m7_61  [key=0, style=bold, color=blue];
m7_24 -> m7_25  [key=0, style=solid];
m7_25 -> m7_26  [key=0, style=solid];
m7_26 -> m7_24  [key=0, style=bold, color=blue];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_17 -> m7_15  [key=0, style=bold, color=blue];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_101  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_104  [key=2, style=dotted];
m7_100 -> m7_105  [key=2, style=dotted];
m7_100 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label=allTypes];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_106  [key=2, style=dotted];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_68  [key=2, style=dotted];
m7_102 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label=type];
m7_103 -> m7_99  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_11 -> m7_9  [key=0, style=bold, color=blue];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_12  [key=0, style=bold, color=blue];
m7_107 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_80 -> m8_81  [key=0, style=solid];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_49  [key=2, style=dotted];
m8_81 -> m8_84  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_100  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_101  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label=s];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_13  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_15  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_13  [key=2, style=dotted];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_51  [key=2, style=dotted];
m8_88 -> m8_97  [key=1, style=dashed, color=darkseagreen4, label=sw];
m8_88 -> m8_98  [key=1, style=dashed, color=darkseagreen4, label=sw];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_52  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_56  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_13  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_90 -> m8_39  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_97  [key=0, style=solid];
m8_96 -> m8_91  [key=0, style=solid];
m8_96 -> m8_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_49  [key=2, style=dotted];
m8_92 -> m8_95  [key=1, style=dashed, color=darkseagreen4, label=json];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_100  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_101  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_94  [key=1, style=dashed, color=darkseagreen4, label=s];
m8_99 -> m8_80  [key=0, style=bold, color=blue];
m8_31 -> m8_32  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_49  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_50  [key=2, style=dotted];
m8_33 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=o];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_13  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_55  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_15  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_13  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_51  [key=2, style=dotted];
m8_37 -> m8_46  [key=1, style=dashed, color=darkseagreen4, label=sw];
m8_37 -> m8_47  [key=1, style=dashed, color=darkseagreen4, label=sw];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_52  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_56  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_13  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_39 -> m8_39  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_46  [key=0, style=solid];
m8_45 -> m8_40  [key=0, style=solid];
m8_45 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_53  [key=2, style=dotted];
m8_41 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=file];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_54  [key=2, style=dotted];
m8_42 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m8_43 -> m8_44  [key=0, style=solid];
m8_48 -> m8_31  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_13  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid, color=green];
m8_2 -> m8_14  [key=2, style=dotted, color=green];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_13  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_15  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_13  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_16  [key=2, style=dotted];
m8_6 -> m8_8  [key=1, style=dashed, color=green, label=t];
m8_7 -> m8_8  [key=0, style=solid, color=green];
m8_7 -> m8_17  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid, color=green];
m8_8 -> m8_18  [key=2, style=dotted];
m8_8 -> m8_19  [key=2, style=dotted, color=green];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_13  [key=2, style=dotted];
m8_9 -> m8_9  [key=0, style=solid];
m8_9 -> m8_18  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_15  [key=2, style=dotted];
m8_12 -> m8_0  [key=0, style=bold, color=blue];
m8_57 -> m8_58  [key=0, style=solid];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_77  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_78  [key=2, style=dotted];
m8_59 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_54  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_79  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_13  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_15  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_13  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_51  [key=2, style=dotted];
m8_65 -> m8_74  [key=1, style=dashed, color=darkseagreen4, label=sw];
m8_65 -> m8_75  [key=1, style=dashed, color=darkseagreen4, label=sw];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_52  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_56  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_13  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_67 -> m8_39  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_74  [key=0, style=solid];
m8_73 -> m8_68  [key=0, style=solid];
m8_73 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label=i];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_77  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_78  [key=2, style=dotted];
m8_70 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_54  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_79  [key=2, style=dotted];
m8_76 -> m8_57  [key=0, style=bold, color=blue];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_24  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_30  [key=2, style=dotted];
m8_29 -> m8_26  [key=0, style=bold, color=blue];
m8_19 -> m8_20  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_24  [key=2, style=dotted];
m8_20 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label=t];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_25  [key=2, style=dotted];
m8_23 -> m8_19  [key=0, style=bold, color=blue];
}
