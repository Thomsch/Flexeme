digraph  {
m0_29 [label=_sharedCache, span="220-220", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="JsonSerializerTest.cs"];
m0_430 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="78-78", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonSerializerTest.cs"];
m0_661 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="119-119", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_51 [label="Assert.AreEqual(3, circularList.Count)", span="219-219", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", color=green, community=0];
m0_477 [label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="962-962", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_478 [label="IsJsonPrimitiveType(objectType)", span="964-964", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_479 [label="return CreatePrimitiveContract(objectType);", span="965-965", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_481 [label="return CreateObjectContract(objectType);", span="968-968", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_483 [label="return CreateArrayContract(objectType);", span="971-971", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_485 [label="return CreateDictionaryContract(objectType);", span="974-974", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_487 [label="return CreateLinqContract(objectType);", span="977-977", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_489 [label="return CreateDictionaryContract(objectType);", span="980-980", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_491 [label="return CreateArrayContract(objectType);", span="983-983", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_493 [label="return CreateStringContract(objectType);", span="986-986", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_495 [label="return CreateISerializableContract(objectType);", span="990-990", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_497 [label="return CreateDynamicContract(objectType);", span="995-995", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_500 [label="return CreateObjectContract(objectType);", span="1004-1004", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_480 [label="JsonTypeReflector.GetJsonObjectAttribute(t) != null", span="967-967", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_482 [label="JsonTypeReflector.GetJsonArrayAttribute(t) != null", span="970-970", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_484 [label="JsonTypeReflector.GetJsonDictionaryAttribute(t) != null", span="973-973", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_486 [label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="976-976", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_488 [label="CollectionUtils.IsDictionaryType(t)", span="979-979", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_490 [label="typeof(IEnumerable).IsAssignableFrom(t)", span="982-982", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_492 [label="CanConvertToString(t)", span="985-985", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_494 [label="!IgnoreSerializableInterface && typeof(ISerializable).IsAssignableFrom(t)", span="989-989", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_496 [label="typeof(IDynamicMetaObjectProvider).IsAssignableFrom(t)", span="994-994", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_498 [label="IsIConvertible(t)", span="1000-1000", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_499 [label="return CreatePrimitiveContract(t);", span="1001-1001", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_501 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="960-960", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonSerializerTest.cs"];
m0_463 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="930-930", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="JsonSerializerTest.cs"];
m0_464 [label="JsonDynamicContract contract = new JsonDynamicContract(objectType)", span="932-932", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="JsonSerializerTest.cs"];
m0_467 [label="contract.Properties.AddRange(CreateProperties(objectType, MemberSerialization.OptOut))", span="936-936", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="JsonSerializerTest.cs"];
m0_465 [label="InitializeContract(contract)", span="933-933", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="JsonSerializerTest.cs"];
m0_466 [label="contract.PropertyNameResolver = ResolvePropertyName", span="935-935", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="JsonSerializerTest.cs"];
m0_468 [label="return contract;", span="938-938", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="JsonSerializerTest.cs"];
m0_469 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="930-930", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="JsonSerializerTest.cs"];
m0_219 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonSerializerTest.cs"];
m0_179 [label="Assert.AreEqual(null, actual.Payload3.Parent)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonSerializerTest.cs"];
m0_161 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", span="507-507", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore()", file="JsonSerializerTest.cs"];
m0_44 [label="updatedCache[key] = contract", span="251-251", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m0_598 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="530-530", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_555 [label="Entry System.Type.ContainsGenericParameters()", span="107-107", cluster="System.Type.ContainsGenericParameters()", file="JsonSerializerTest.cs"];
m0_213 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="JsonSerializerTest.cs"];
m0_105 [label="return false;", span="346-346", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_85 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''$id'''': ''''2'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="285-298", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeEmployeeReference()", file="JsonSerializerTest.cs", color=green, community=0];
m0_59 [label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="279-279", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonSerializerTest.cs"];
m0_84 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="JsonSerializerTest.cs"];
m0_86 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", color=green, community=0, file="JsonSerializerTest.cs"];
m0_87 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="102-102", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m0_88 [label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", color=green, community=0, file="JsonSerializerTest.cs"];
m0_89 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", color=green, community=0, file="JsonSerializerTest.cs"];
m0_90 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", color=green, community=0, file="JsonSerializerTest.cs"];
m0_91 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="320-320", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonSerializerTest.cs"];
m0_106 [label="return true;", span="349-349", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_348 [label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="897-897", cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="JsonSerializerTest.cs"];
m0_140 [label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="64-64", cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m0_0 [label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="60-60", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="JsonSerializerTest.cs"];
m0_2 [label="_contractType = contractType", span="63-63", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="JsonSerializerTest.cs"];
m0_4 [label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="66-66", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="JsonSerializerTest.cs"];
m0_1 [label="_resolverType = resolverType", span="62-62", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="JsonSerializerTest.cs"];
m0_3 [label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="60-60", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="JsonSerializerTest.cs"];
m0_5 [label="return _resolverType.GetHashCode() ^ _contractType.GetHashCode();", span="68-68", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="JsonSerializerTest.cs"];
m0_18 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonSerializerTest.cs"];
m0_19 [label="string contextKey = ''k1''", span="120-120", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonSerializerTest.cs"];
m0_21 [label="Dictionary<string, Guid> inputContext = new Dictionary<string, Guid>()", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonSerializerTest.cs"];
m0_20 [label="var someValue = new Guid(''5dd2dba0-20c0-49f8-a054-1fa3b0a8d774'')", span="121-121", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonSerializerTest.cs"];
m0_22 [label="inputContext.Add(contextKey, someValue)", span="124-124", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonSerializerTest.cs"];
m0_276 [label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m0_350 [label="Entry System.Type.IsValueType()", span="531-531", cluster="System.Type.IsValueType()", file="JsonSerializerTest.cs"];
m0_252 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="JsonSerializerTest.cs"];
m0_143 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="310-310", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs"];
m0_287 [label="var constructorParameters = constructor.GetParameters()", span="596-596", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_288 [label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", span="598-598", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_290 [label="JsonProperty matchingMemberProperty = (parameterInfo.Name != null) ? memberProperties.GetClosestMatchProperty(parameterInfo.Name) : null", span="604-604", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_289 [label=constructorParameters, span="600-600", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_296 [label="parameterCollection.AddProperty(property)", span="618-618", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_297 [label="return parameterCollection;", span="623-623", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_291 [label="matchingMemberProperty != null && matchingMemberProperty.PropertyType != parameterInfo.ParameterType", span="607-607", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_293 [label="matchingMemberProperty != null || parameterInfo.Name != null", span="612-612", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_294 [label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="614-614", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_292 [label="matchingMemberProperty = null", span="608-608", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_295 [label="property != null", span="616-616", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_298 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="594-594", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="JsonSerializerTest.cs"];
m0_144 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonSerializerTest.cs"];
m0_281 [label="IList<ConstructorInfo> constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance).ToList()", span="580-580", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_282 [label="constructors.Count == 1", span="582-582", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_283 [label="return constructors[0];", span="583-583", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_284 [label="return null;", span="585-585", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_285 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", span="578-578", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_458 [label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_16 [label="Exit lambda expression", span="105-113", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_17 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m0_6 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs"];
m0_509 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", span="1015-1015", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="JsonSerializerTest.cs"];
m0_514 [label="typeof(IConvertible).IsAssignableFrom(t)\r\n                || (ReflectionUtils.IsNullableType(t) && typeof(IConvertible).IsAssignableFrom(Nullable.GetUnderlyingType(t)))", span="1017-1018", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="JsonSerializerTest.cs"];
m0_515 [label="return !typeof(JToken).IsAssignableFrom(t);", span="1020-1020", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="JsonSerializerTest.cs"];
m0_516 [label="return false;", span="1023-1023", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="JsonSerializerTest.cs"];
m0_517 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", span="1015-1015", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsIConvertible(System.Type)", file="JsonSerializerTest.cs"];
m0_352 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="717-717", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_353 [label="List<SerializationCallback> onSerializing", span="719-719", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_358 [label="GetCallbackMethodsForType(t, out onSerializing, out onSerialized, out onDeserializing, out onDeserialized, out onError)", span="725-725", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_360 [label="t.Name != FSharpUtils.FSharpSetTypeName && t.Name != FSharpUtils.FSharpMapTypeName", span="730-730", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_361 [label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="737-737", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_363 [label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="743-743", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_365 [label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="747-747", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_367 [label="t.Name != FSharpUtils.FSharpSetTypeName && t.Name != FSharpUtils.FSharpMapTypeName", span="753-753", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_368 [label="!t.IsGenericType() || (t.GetGenericTypeDefinition() != typeof(ConcurrentDictionary<,>))", span="758-758", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_369 [label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="759-759", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_371 [label="contract.OnErrorCallbacks.AddRange(onError)", span="767-767", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_354 [label="List<SerializationCallback> onSerialized", span="720-720", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_355 [label="List<SerializationCallback> onDeserializing", span="721-721", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_356 [label="List<SerializationCallback> onDeserialized", span="722-722", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_357 [label="List<SerializationErrorCallback> onError", span="723-723", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_359 [label="onSerializing != null", span="727-727", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_362 [label="onSerialized != null", span="742-742", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_364 [label="onDeserializing != null", span="745-745", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_366 [label="onDeserialized != null", span="750-750", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_370 [label="onError != null", span="766-766", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_372 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="717-717", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerTest.cs"];
m0_242 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonSerializerTest.cs"];
m0_513 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="JsonSerializerTest.cs"];
m0_601 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1304-1304", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_673 [label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1306-1306", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_675 [label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1308-1308", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_679 [label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1317-1317", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_680 [label="ReflectionUtils.CanSetMemberValue(specifiedMember, allowNonPublicAccess, false)", span="1319-1319", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_681 [label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="1320-1320", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_674 [label="specifiedMember == null", span="1307-1307", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_676 [label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1310-1310", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_678 [label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1315-1315", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_677 [label="return;", span="1312-1312", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_682 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", span="1304-1304", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonSerializerTest.cs"];
m0_9 [label="!(obj is ResolverContractKey)", span="73-73", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="JsonSerializerTest.cs"];
m0_10 [label="return false;", span="74-74", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="JsonSerializerTest.cs"];
m0_11 [label="return Equals((ResolverContractKey)obj);", span="76-76", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="JsonSerializerTest.cs"];
m0_12 [label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="71-71", cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="JsonSerializerTest.cs"];
m0_302 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="632-632", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_304 [label="JsonProperty property = new JsonProperty()", span="634-634", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_305 [label="property.PropertyType = parameterInfo.ParameterType", span="635-635", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_307 [label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, out allowNonPublicAccess)", span="638-638", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_310 [label="matchingMemberProperty != null", span="644-644", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_311 [label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="646-646", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_312 [label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="647-647", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_313 [label="property.MemberConverter = property.MemberConverter ?? matchingMemberProperty.MemberConverter", span="648-648", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_314 [label="!property._hasExplicitDefaultValue && matchingMemberProperty._hasExplicitDefaultValue", span="650-650", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_315 [label="property.DefaultValue = matchingMemberProperty.DefaultValue", span="651-651", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_316 [label="property._required = property._required ?? matchingMemberProperty._required", span="653-653", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_317 [label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="654-654", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_318 [label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="655-655", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_319 [label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="656-656", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_320 [label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="657-657", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_321 [label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="658-658", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_322 [label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="659-659", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_308 [label="property.Readable = false", span="640-640", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_309 [label="property.Writable = true", span="641-641", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_323 [label="return property;", span="662-662", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_306 [label="bool allowNonPublicAccess", span="637-637", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_324 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", span="632-632", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.ParameterInfo)", file="JsonSerializerTest.cs"];
m0_413 [label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", span="401-401", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationErrorCallback(System.Reflection.MethodInfo)", file="JsonSerializerTest.cs"];
m0_138 [label="Assert.AreEqual(5, nested[4])", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs"];
m0_334 [label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetJsonContainerAttribute(contract.NonNullableUnderlyingType)", span="685-685", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_336 [label="contract.IsReference = containerAttribute._isReference", span="688-688", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_337 [label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(contract.NonNullableUnderlyingType)", span="693-693", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_339 [label="contract.IsReference = true", span="696-696", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_340 [label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="700-700", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_341 [label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="703-703", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_342 [label="ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true)\r\n                || contract.CreatedType.IsValueType()", span="705-706", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_343 [label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="708-708", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_344 [label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\r\n                                                    ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="710-711", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_345 [label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="714-714", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_335 [label="containerAttribute != null", span="686-686", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_338 [label="dataContractAttribute != null && dataContractAttribute.IsReference", span="695-695", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_346 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="683-683", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerTest.cs"];
m0_247 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializerTest.cs"];
m0_153 [label="Assert.AreEqual(''Values!'', c2.Values)", span="490-490", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonSerializerTest.cs"];
m0_582 [label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43", cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_104 [label="propertyInfo.PropertyType.IsGenericType() && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`1''", span="345-345", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_181 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="JsonSerializerTest.cs"];
m0_182 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1082-1082", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="JsonSerializerTest.cs"];
m0_184 [label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="456-456", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_183 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerTest.cs"];
m0_185 [label="extensionDataAttribute == null", span="457-457", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_8 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerTest.cs"];
m0_141 [label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="JsonSerializerTest.cs"];
m0_349 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="213-213", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JsonSerializerTest.cs"];
m0_83 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs"];
m0_325 [label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="37-37", cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="JsonSerializerTest.cs"];
m0_110 [label="string personRef = typeof(Person).AssemblyQualifiedName", span="350-350", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_111 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''Name'''': null,\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="352-372", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_112 [label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="374-379", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_115 [label="Person p = (Person)values[1]", span="384-384", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_116 [label="Assert.AreEqual(''Bob'', e.Name)", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_117 [label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_119 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="390-390", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_120 [label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_122 [label="Assert.AreEqual((long)int.MinValue, values[3])", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_123 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m0_124 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", span="398-398", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs"];
m0_126 [label="TypeNameHandlingTests.TypeNameProperty typeNameProperty = new TypeNameHandlingTests.TypeNameProperty\r\n            {\r\n                Name = ''Name!'',\r\n                Value = new List<int> { 1, 2, 3, 4, 5 }\r\n            }", span="402-406", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs", color=green, community=0];
m0_127 [label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs", color=green, community=0];
m0_128 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="410-422", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs", color=green, community=0];
m0_130 [label="Assert.AreEqual(''Name!'', deserialized.Name)", span="428-428", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs", color=green, community=0];
m0_131 [label="CustomAssert.IsInstanceOfType(typeof(List<int>), deserialized.Value)", span="429-429", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs", color=green, community=0];
m0_132 [label="List<int> nested = (List<int>)deserialized.Value", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs", color=green, community=0];
m0_134 [label="Assert.AreEqual(1, nested[0])", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs"];
m0_135 [label="Assert.AreEqual(2, nested[1])", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs"];
m0_113 [label="Assert.AreEqual(4, values.Count)", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_114 [label="EmployeeReference e = (EmployeeReference)values[0]", span="383-383", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_118 [label="Assert.AreEqual(null, p.Name)", span="389-389", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_121 [label="Assert.AreEqual(''String!'', values[2])", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_125 [label="string listRef = ReflectionUtils.GetTypeName(typeof(List<int>), FormatterAssemblyStyle.Simple, null)", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs", color=green, community=0];
m0_129 [label="TypeNameHandlingTests.TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameHandlingTests.TypeNameProperty>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="424-427", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs", color=green, community=0];
m0_133 [label="Assert.AreEqual(5, nested.Count)", span="432-432", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs"];
m0_136 [label="Assert.AreEqual(3, nested[2])", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs"];
m0_505 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonDictionaryAttribute(System.Type)", span="89-89", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonDictionaryAttribute(System.Type)", file="JsonSerializerTest.cs"];
m0_82 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_235 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="JsonSerializerTest.cs"];
m0_518 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="247-247", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JsonSerializerTest.cs"];
m0_548 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="62-62", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonSerializerTest.cs"];
m0_303 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerTest.cs"];
m0_448 [label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="JsonSerializerTest.cs"];
m0_212 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="JsonSerializerTest.cs"];
m0_443 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="893-893", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonSerializerTest.cs"];
m0_444 [label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="895-895", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonSerializerTest.cs"];
m0_445 [label="InitializeContract(contract)", span="896-896", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonSerializerTest.cs"];
m0_446 [label="return contract;", span="898-898", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonSerializerTest.cs"];
m0_447 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="893-893", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonSerializerTest.cs"];
m0_230 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="JsonSerializerTest.cs"];
m0_449 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="907-907", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_450 [label="JsonISerializableContract contract = new JsonISerializableContract(objectType)", span="909-909", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_451 [label="InitializeContract(contract)", span="910-910", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_452 [label="ConstructorInfo constructorInfo = contract.NonNullableUnderlyingType.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance, null, new[] { typeof(SerializationInfo), typeof(StreamingContext) }, null)", span="912-912", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_455 [label="contract.ISerializableCreator = (args => methodCall(null, args))", span="917-917", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_456 [label="return contract;", span="920-920", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_453 [label="constructorInfo != null", span="913-913", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_454 [label="MethodCall<object, object> methodCall = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(constructorInfo)", span="915-915", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_457 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="907-907", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="JsonSerializerTest.cs"];
m0_199 [label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(addMethod)", span="477-477", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_48 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m0_92 [label="Entry System.Reflection.MemberInfo.MemberType()", span="89-89", cluster="System.Reflection.MemberInfo.MemberType()", file="JsonSerializerTest.cs"];
m0_93 [label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="540-540", cluster="System.Type.AssignableToTypeName(string, out System.Type)", color=green, community=0, file="JsonSerializerTest.cs"];
m0_94 [label="Entry lambda expression", span="277-277", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m0_95 [label="!ReflectionUtils.IsIndexedProperty(m)", span="277-277", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m0_96 [label="Exit lambda expression", span="277-277", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m0_101 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="340-340", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", color=green, community=0, file="JsonSerializerTest.cs"];
m0_97 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="443-443", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", color=green, community=0, file="JsonSerializerTest.cs"];
m0_98 [label="Entry lambda expression", span="289-289", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m0_99 [label="!ReflectionUtils.IsIndexedProperty(m)", span="289-289", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m0_100 [label="Exit lambda expression", span="289-289", cluster="lambda expression", color=green, community=0, file="JsonSerializerTest.cs"];
m0_102 [label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="342-342", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_103 [label="propertyInfo != null", span="343-343", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_155 [label="IList<MemberInfo> m = new List<MemberInfo>()", span="419-419", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_243 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.DictionaryEnumerator(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="520-520", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.DictionaryEnumerator(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="JsonSerializerTest.cs"];
m0_244 [label="ValidationUtils.ArgumentNotNull(e, ''e'')", span="522-522", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.DictionaryEnumerator(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="JsonSerializerTest.cs"];
m0_245 [label="_e = e.GetEnumerator()", span="523-523", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.DictionaryEnumerator(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="JsonSerializerTest.cs"];
m0_246 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.DictionaryEnumerator(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", span="520-520", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.DictionaryEnumerator(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>)", file="JsonSerializerTest.cs"];
m0_7 [label="Entry System.Type.GetHashCode()", span="0-0", cluster="System.Type.GetHashCode()", file="JsonSerializerTest.cs"];
m0_54 [label="Assert.AreEqual(1, circularList[2].Count)", span="222-222", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", color=green, community=0];
m0_55 [label="Assert.AreEqual(1, circularList[2][0].Count)", span="223-223", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", color=green, community=0];
m0_57 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs"];
m0_58 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="JsonSerializerTest.cs"];
m0_61 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="230-235", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs", color=green, community=0];
m0_62 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                });\r\n            }, ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 55.'')", span="237-244", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs", color=green, community=0];
m0_74 [label="child.Add(''_id'', 2)", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_56 [label="Assert.IsTrue(ReferenceEquals(circularList, circularList[2][0][0]))", span="224-224", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", color=green, community=0];
m0_60 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs"];
m0_71 [label="reference.Add(''$ref'', null)", span="252-252", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_63 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", span="228-228", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs"];
m0_76 [label="child.Add(''Father'', reference)", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_66 [label="Exit lambda expression", span="237-244", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_68 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs"];
m0_70 [label="reference.Add(''blah'', ''blah!'')", span="251-251", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_72 [label="reference.Add(''$id'', null)", span="253-253", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_75 [label="child.Add(''Name'', ''Isabell'')", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_79 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="272-275", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_80 [label="Assert.AreEqual(3, result.Count)", span="277-277", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_69 [label="var reference = new Dictionary<string, object>()", span="250-250", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_65 [label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="239-243", cluster="lambda expression", file="JsonSerializerTest.cs", color=green, community=0];
m0_64 [label="Entry lambda expression", span="237-244", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_73 [label="var child = new Dictionary<string, object>()", span="255-255", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_67 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="848-848", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m0_77 [label="string json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="260-260", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_78 [label="StringAssert.AreEqual(@''{\r\n  ''''_id'''': 2,\r\n  ''''Name'''': ''''Isabell'''',\r\n  ''''Father'''': {\r\n    ''''blah'''': ''''blah!'''',\r\n    ''''$ref'''': null,\r\n    ''''$id'''': null\r\n  }\r\n}'', json)", span="262-270", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_81 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeRefNull()", file="JsonSerializerTest.cs", color=green, community=0];
m0_663 [label="Entry Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", span="60-60", cluster="Newtonsoft.Json.JsonConverterAttribute.CreateJsonConverterInstance(System.Type)", file="JsonSerializerTest.cs"];
m0_476 [label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="38-38", cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="JsonSerializerTest.cs"];
m0_145 [label="MetadataPropertyDisabledTestClass c1 = new MetadataPropertyDisabledTestClass\r\n            {\r\n                Id = ''Id!'',\r\n                Ref = ''Ref!'',\r\n                Type = ''Type!'',\r\n                Value = ''Value!'',\r\n                Values = ''Values!''\r\n            }", span="462-469", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonSerializerTest.cs"];
m0_147 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''Id!'''',\r\n  ''''$ref'''': ''''Ref!'''',\r\n  ''''$value'''': ''''Value!'''',\r\n  ''''$values'''': ''''Values!'''',\r\n  ''''$type'''': ''''Type!''''\r\n}'', json)", span="473-479", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonSerializerTest.cs"];
m0_148 [label="MetadataPropertyDisabledTestClass c2 = JsonConvert.DeserializeObject<MetadataPropertyDisabledTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="481-484", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonSerializerTest.cs"];
m0_149 [label="Assert.AreEqual(''Id!'', c2.Id)", span="486-486", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonSerializerTest.cs"];
m0_150 [label="Assert.AreEqual(''Ref!'', c2.Ref)", span="487-487", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.MetadataPropertyHandlingIgnore()", file="JsonSerializerTest.cs"];
m0_253 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Reset()", span="531-531", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Reset()", file="JsonSerializerTest.cs"];
m0_254 [label="_e.Reset()", span="533-533", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Reset()", file="JsonSerializerTest.cs"];
m0_255 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Reset()", span="531-531", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Reset()", file="JsonSerializerTest.cs"];
m0_156 [label="m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="420-420", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_158 [label="return m;", span="423-423", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_159 [label="Exit lambda expression", span="417-424", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_157 [label="m.AddRange(baseType.GetFields(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="421-421", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_160 [label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m0_31 [label="_instanceContractCache = cache", span="223-223", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="JsonSerializerTest.cs"];
m0_529 [label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="JsonSerializerTest.cs"];
m0_502 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="254-254", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="JsonSerializerTest.cs"];
m0_33 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs"];
m0_34 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs"];
m0_37 [label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="160-170", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs", color=green, community=0];
m0_40 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="178-178", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs", color=green, community=0];
m0_35 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="148-156", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs"];
m0_36 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs"];
m0_38 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n            })", span="172-175", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs", color=green, community=0];
m0_39 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="177-177", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs", color=green, community=0];
m0_46 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs"];
m0_41 [label="byte[] bytes = (byte[])actual.Payload", span="179-179", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs", color=green, community=0];
m0_42 [label="CollectionAssert.AreEquivalent(new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }, bytes)", span="180-180", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs", color=green, community=0];
m0_43 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGuid()", file="JsonSerializerTest.cs"];
m0_45 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m0_47 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs"];
m0_261 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="551-551", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m0_262 [label="return this;", span="553-553", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m0_263 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="551-551", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m0_218 [label="Entry System.Type.GetConstructors()", span="0-0", cluster="System.Type.GetConstructors()", file="JsonSerializerTest.cs"];
m0_108 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs"];
m0_424 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="852-852", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerTest.cs"];
m0_425 [label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="854-854", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerTest.cs"];
m0_426 [label="InitializeContract(contract)", span="855-855", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerTest.cs"];
m0_427 [label="contract.PropertyNameResolver = ResolvePropertyName", span="857-857", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerTest.cs"];
m0_428 [label="return contract;", span="859-859", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerTest.cs"];
m0_429 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="852-852", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="JsonSerializerTest.cs"];
m0_568 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializerTest.cs"];
m0_151 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="831-831", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerTest.cs"];
m0_152 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="JsonSerializerTest.cs"];
m0_146 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="454-454", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_154 [label="Entry lambda expression", span="417-424", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_471 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="947-947", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="JsonSerializerTest.cs"];
m0_472 [label="JsonStringContract contract = new JsonStringContract(objectType)", span="949-949", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="JsonSerializerTest.cs"];
m0_473 [label="InitializeContract(contract)", span="950-950", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="JsonSerializerTest.cs"];
m0_474 [label="return contract;", span="952-952", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="JsonSerializerTest.cs"];
m0_475 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="947-947", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="JsonSerializerTest.cs"];
m0_504 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", span="84-84", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", file="JsonSerializerTest.cs"];
m0_232 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JsonSerializerTest.cs"];
m0_330 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object, System.Type)", span="189-189", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object, System.Type)", file="JsonSerializerTest.cs"];
m0_257 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Dispose()", span="541-541", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Dispose()", file="JsonSerializerTest.cs"];
m0_258 [label="_e.Dispose()", span="543-543", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Dispose()", file="JsonSerializerTest.cs"];
m0_259 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Dispose()", span="541-541", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.Dispose()", file="JsonSerializerTest.cs"];
m0_569 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1146-1146", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_583 [label="JsonProperty property = new JsonProperty()", span="1148-1148", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_584 [label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="1149-1149", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_585 [label="property.DeclaringType = member.DeclaringType", span="1150-1150", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_586 [label="property.ValueProvider = CreateMemberValueProvider(member)", span="1151-1151", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_588 [label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out allowNonPublicAccess)", span="1154-1154", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_589 [label="memberSerialization != MemberSerialization.Fields", span="1156-1156", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_590 [label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="1158-1158", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_591 [label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, property.HasMemberAttribute)", span="1159-1159", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_594 [label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="1167-1167", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_595 [label="SetIsSpecifiedActions(property, member, allowNonPublicAccess)", span="1169-1169", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_592 [label="property.Readable = true", span="1164-1164", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_593 [label="property.Writable = true", span="1165-1165", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_596 [label="return property;", span="1171-1171", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_587 [label="bool allowNonPublicAccess", span="1153-1153", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_597 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1146-1146", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_300 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="45-45", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonSerializerTest.cs"];
m0_210 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", span="659-659", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object)", file="JsonSerializerTest.cs"];
m0_220 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParametrizedConstructor(System.Reflection.MethodBase)", span="65-65", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParametrizedConstructor(System.Reflection.MethodBase)", file="JsonSerializerTest.cs"];
m0_233 [label="Entry Newtonsoft.Json.Linq.JToken.FromObject(object)", span="1666-1666", cluster="Newtonsoft.Json.Linq.JToken.FromObject(object)", file="JsonSerializerTest.cs"];
m0_215 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="51-51", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_470 [label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", span="77-77", cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", file="JsonSerializerTest.cs"];
m0_214 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_331 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="675-675", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="JsonSerializerTest.cs"];
m0_332 [label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="677-677", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="JsonSerializerTest.cs"];
m0_333 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="675-675", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="JsonSerializerTest.cs"];
m0_423 [label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0", cluster="System.Collections.Generic.List<T>.Reverse()", file="JsonSerializerTest.cs"];
m0_528 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="608-608", cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="JsonSerializerTest.cs"];
m0_32 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", span="218-218", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>)", file="JsonSerializerTest.cs"];
m0_550 [label="type.IsGenericTypeDefinition() || !type.ContainsGenericParameters()", span="1084-1084", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="JsonSerializerTest.cs"];
m0_551 [label="return type.FullName;", span="1085-1085", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="JsonSerializerTest.cs"];
m0_552 [label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="1087-1087", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="JsonSerializerTest.cs"];
m0_553 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1082-1082", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="JsonSerializerTest.cs"];
m0_13 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerTest.cs"];
m0_14 [label="Entry lambda expression", span="105-113", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_15 [label="JsonConvert.DeserializeObject<string[][]>(json,\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                        MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                    })", span="107-112", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_351 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="223-223", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_187 [label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto\r\n                })", span="598-607", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonSerializerTest.cs"];
m0_196 [label="Assert.AreEqual(''1'', c.Id)", span="641-641", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m0_197 [label="Assert.AreEqual(''CircularReferenceClass'', c.Type)", span="642-642", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m0_206 [label="contract.ExtensionDataSetter = extensionDataSetter", span="510-510", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_208 [label="contract.ExtensionDataGetter = extensionDataGetter", span="513-513", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_205 [label="extensionDataAttribute.ReadData", span="509-509", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_207 [label="extensionDataAttribute.WriteData", span="512-512", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_186 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonSerializerTest.cs"];
m0_188 [label="Assert.AreEqual(5f, actual.Payload)", span="609-609", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonSerializerTest.cs"];
m0_189 [label="actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Single, mscorlib'''',\r\n    ''''$value'''': ''''5''''\r\n  }\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Auto,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n                })", span="611-621", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonSerializerTest.cs"];
m0_193 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass''''\r\n}''", span="629-632", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m0_195 [label="JsonConvert.PopulateObject(json, c, new JsonSerializerSettings\r\n            {\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Ignore\r\n            })", span="636-639", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m0_198 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", span="627-627", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m0_190 [label="Assert.IsTrue(actual.Payload is JObject)", span="623-623", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonSerializerTest.cs"];
m0_191 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.PrimitiveType_MetadataPropertyIgnore_WithNoType()", file="JsonSerializerTest.cs"];
m0_194 [label="MetadataPropertyDisabledTestClass c = new MetadataPropertyDisabledTestClass()", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m0_201 [label=json, span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_192 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", span="627-627", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs"];
m0_200 [label=json, span="", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_204 [label="ExtensionDataGetter extensionDataGetter = o =>\r\n            {\r\n                object dictionary = getExtensionDataDictionary(o);\r\n                if (dictionary == null)\r\n                    return null;\r\n\r\n                return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\r\n            }", span="500-507", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_202 [label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="497-497", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_203 [label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParametrizedConstructor(constructors)", span="498-498", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_209 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="454-454", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_600 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1291-1291", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_664 [label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1293-1293", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_665 [label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1295-1295", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_667 [label="MethodCall<object, object> shouldSerializeCall =\r\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1298-1299", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_666 [label="return null;", span="1296-1296", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_668 [label="return o => (bool)shouldSerializeCall(o);", span="1301-1301", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_669 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1291-1291", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_373 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="770-770", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_374 [label="onSerializing = null", span="772-772", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_379 [label="GetClassHierarchyForType(type)", span="778-778", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_375 [label="onSerialized = null", span="773-773", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_390 [label="onSerializing = onSerializing ?? new List<SerializationCallback>()", span="799-799", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_376 [label="onDeserializing = null", span="774-774", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_394 [label="onSerialized = onSerialized ?? new List<SerializationCallback>()", span="805-805", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_377 [label="onDeserialized = null", span="775-775", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_398 [label="onDeserializing = onDeserializing ?? new List<SerializationCallback>()", span="811-811", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_378 [label="onError = null", span="776-776", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_402 [label="onDeserialized = onDeserialized ?? new List<SerializationCallback>()", span="817-817", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_406 [label="onError = onError ?? new List<SerializationErrorCallback>()", span="823-823", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_380 [label="MethodInfo currentOnSerializing = null", span="781-781", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_385 [label="baseType.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="787-787", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_381 [label="MethodInfo currentOnSerialized = null", span="782-782", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_389 [label="IsValidCallback(method, parameters, typeof(OnSerializingAttribute), currentOnSerializing, ref prevAttributeType)", span="797-797", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_382 [label="MethodInfo currentOnDeserializing = null", span="783-783", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_393 [label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), currentOnSerialized, ref prevAttributeType)", span="803-803", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_383 [label="MethodInfo currentOnDeserialized = null", span="784-784", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_397 [label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), currentOnDeserializing, ref prevAttributeType)", span="809-809", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_384 [label="MethodInfo currentOnError = null", span="785-785", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_401 [label="IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), currentOnDeserialized, ref prevAttributeType)", span="815-815", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_405 [label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="821-821", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_386 [label="method.ContainsGenericParameters", span="791-791", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_388 [label="ParameterInfo[] parameters = method.GetParameters()", span="795-795", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_391 [label="onSerializing.Add(JsonContract.CreateSerializationCallback(method))", span="800-800", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_392 [label="currentOnSerializing = method", span="801-801", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_395 [label="onSerialized.Add(JsonContract.CreateSerializationCallback(method))", span="806-806", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_396 [label="currentOnSerialized = method", span="807-807", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_399 [label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="812-812", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_400 [label="currentOnDeserializing = method", span="813-813", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_403 [label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="818-818", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_404 [label="currentOnDeserialized = method", span="819-819", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_407 [label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="824-824", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_408 [label="currentOnError = method", span="825-825", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_387 [label="Type prevAttributeType = null", span="794-794", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_409 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="770-770", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonSerializerTest.cs"];
m0_249 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", span="526-526", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", file="JsonSerializerTest.cs"];
m0_250 [label="return _e.MoveNext();", span="528-528", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", file="JsonSerializerTest.cs"];
m0_251 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", span="526-526", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.MoveNext()", file="JsonSerializerTest.cs"];
m0_137 [label="Assert.AreEqual(4, nested[3])", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.WriteListTypeNameForProperty()", file="JsonSerializerTest.cs"];
m0_599 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="564-564", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="JsonSerializerTest.cs"];
m0_519 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="JsonSerializerTest.cs"];
m0_28 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.SerializeDeserialize_DictionaryContextContainsGuid_DeserializesItemAsGuid()", file="JsonSerializerTest.cs"];
m0_30 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs"];
m0_256 [label="Entry System.Collections.IEnumerator.Reset()", span="0-0", cluster="System.Collections.IEnumerator.Reset()", file="JsonSerializerTest.cs"];
m0_49 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", color=green, community=0, file="JsonSerializerTest.cs"];
m0_50 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", color=green, community=0, file="JsonSerializerTest.cs"];
m0_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", color=green, community=0, file="JsonSerializerTest.cs"];
m0_53 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=green, community=0, file="JsonSerializerTest.cs"];
m0_690 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1338-1338", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonSerializerTest.cs"];
m0_691 [label="return ResolvePropertyName(propertyName);", span="1342-1342", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonSerializerTest.cs"];
m0_692 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1338-1338", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonSerializerTest.cs"];
m0_264 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="556-556", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m0_265 [label="return this;", span="558-558", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m0_266 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="556-556", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m0_162 [label="Entry lambda expression", span="426-449", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_163 [label="MemberTypes memberType = m.MemberType()", span="428-428", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_164 [label="memberType != MemberTypes.Property && memberType != MemberTypes.Field", span="429-429", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_166 [label="!m.IsDefined(typeof(JsonExtensionDataAttribute), false)", span="433-433", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_167 [label="return false;", span="434-434", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_168 [label="Type t = ReflectionUtils.GetMemberUnderlyingType(m)", span="436-436", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_165 [label="return false;", span="430-430", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_169 [label="Type dictionaryType", span="438-438", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_25 [label="return _sharedContractCache;", span="213-213", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="JsonSerializerTest.cs"];
m0_23 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="210-210", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="JsonSerializerTest.cs"];
m0_27 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="210-210", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="JsonSerializerTest.cs"];
m0_24 [label=_sharedCache, span="212-212", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="JsonSerializerTest.cs"];
m0_26 [label="return _instanceContractCache;", span="215-215", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="JsonSerializerTest.cs"];
m0_299 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="JsonSerializerTest.cs"];
m0_107 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m0_554 [label="Entry System.Type.IsGenericTypeDefinition()", span="134-134", cluster="System.Type.IsGenericTypeDefinition()", file="JsonSerializerTest.cs"];
m0_142 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="562-562", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_267 [label="IList<ConstructorInfo> markedConstructors = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).ToList()", span="564-564", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_272 [label="objectType == typeof(Version)", span="572-572", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_273 [label="return objectType.GetConstructor(new[] { typeof(int), typeof(int), typeof(int), typeof(int) });", span="573-573", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_268 [label="markedConstructors.Count > 1", span="566-566", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_270 [label="markedConstructors.Count == 1", span="568-568", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_271 [label="return markedConstructors[0];", span="569-569", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_269 [label="throw new JsonException(''Multiple constructors with the JsonConstructorAttribute.'');", span="567-567", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_274 [label="return null;", span="575-575", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_275 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="562-562", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="JsonSerializerTest.cs"];
m0_431 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="867-867", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerTest.cs"];
m0_432 [label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="869-869", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerTest.cs"];
m0_433 [label="InitializeContract(contract)", span="870-870", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerTest.cs"];
m0_434 [label="return contract;", span="872-872", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerTest.cs"];
m0_435 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="867-867", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonSerializerTest.cs"];
m0_217 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="64-64", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="JsonSerializerTest.cs"];
m0_277 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JsonSerializerTest.cs"];
m0_139 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1096-1096", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_662 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1328-1328", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs"];
m0_688 [label="return propertyName;", span="1330-1330", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs"];
m0_689 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1328-1328", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs"];
m0_180 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="556-556", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonSerializerTest.cs"];
m0_347 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="74-74", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="JsonSerializerTest.cs"];
m0_570 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonSerializerTest.cs"];
m0_178 [label="Assert.AreEqual(null, actual.Payload2.Parent)", span="571-571", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonSerializerTest.cs"];
m0_422 [label="Entry System.Type.BaseType()", span="143-143", cluster="System.Type.BaseType()", file="JsonSerializerTest.cs"];
m0_175 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", span="556-556", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonSerializerTest.cs"];
m0_170 [label="Entry Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonSerializerTest.cs"];
m0_171 [label="ItemWithUntypedPayload actual = JsonConvert.DeserializeObject<ItemWithUntypedPayload>(@''{\r\n  ''''Payload'''': {}\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead\r\n                })", span="536-542", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonSerializerTest.cs"];
m0_172 [label="JObject o = (JObject)actual.Payload", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonSerializerTest.cs"];
m0_173 [label="Assert.AreEqual(null, o.Parent)", span="545-545", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonSerializerTest.cs"];
m0_174 [label="Exit Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", span="534-534", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_JObject_NoParent()", file="JsonSerializerTest.cs"];
m0_176 [label="ItemWithJTokens actual = (ItemWithJTokens)JsonConvert.DeserializeObject(@''{\r\n  ''''Payload1'''': 1,\r\n  ''''Payload2'''': {},\r\n  ''''Payload3'''': [1],\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests+ItemWithJTokens, Newtonsoft.Json.Tests''''\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                    TypeNameHandling = TypeNameHandling.All\r\n                })", span="558-568", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.ReadAhead_TypedJValue_NoParent()", file="JsonSerializerTest.cs"];
m0_226 [label="isJTokenValueType && !(value is JToken)", span="490-490", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_222 [label="object dictionary = getExtensionDataDictionary(o)", span="481-481", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_237 [label="object dictionary = getExtensionDataDictionary(o)", span="502-502", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_225 [label="setExtensionDataDictionary(o, dictionary)", span="485-485", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_224 [label="dictionary = createExtensionDataDictionary()", span="484-484", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_228 [label="setExtensionDataDictionaryValue(dictionary, key, value)", span="493-493", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_227 [label="value = (value != null) ? JToken.FromObject(value) : JValue.CreateNull()", span="491-491", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_240 [label="return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);", span="506-506", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_221 [label="Entry lambda expression", span="479-494", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_223 [label="dictionary == null", span="482-482", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_229 [label="Exit lambda expression", span="479-494", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_236 [label="Entry lambda expression", span="500-507", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_238 [label="dictionary == null", span="503-503", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_239 [label="return null;", span="504-504", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_241 [label="Exit lambda expression", span="500-507", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_278 [label="Entry lambda expression", span="564-564", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_279 [label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="564-564", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_280 [label="Exit lambda expression", span="564-564", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_461 [label="methodCall(null, args)", span="917-917", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_460 [label="Entry lambda expression", span="917-917", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_462 [label="Exit lambda expression", span="917-917", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_571 [label="Entry lambda expression", span="1112-1112", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_572 [label="p.Order ?? -1", span="1112-1112", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_573 [label="Exit lambda expression", span="1112-1112", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_671 [label="(bool)shouldSerializeCall(o)", span="1301-1301", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_670 [label="Entry lambda expression", span="1301-1301", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_672 [label="Exit lambda expression", span="1301-1301", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_686 [label="(bool)specifiedPropertyGet(o)", span="1317-1317", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_685 [label="Entry lambda expression", span="1317-1317", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_687 [label="Exit lambda expression", span="1317-1317", cluster="lambda expression", file="JsonSerializerTest.cs"];
m0_326 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1174-1174", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_602 [label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(declaringType)", span="1177-1177", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_603 [label="MemberInfo memberInfo = attributeProvider as MemberInfo", span="1179-1179", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_608 [label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="1188-1188", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_610 [label="property.HasMemberAttribute = true", span="1190-1190", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_616 [label="mappedName = name", span="1200-1200", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_617 [label="property.PropertyName = ResolvePropertyName(mappedName)", span="1202-1202", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_618 [label="property.UnderlyingName = name", span="1203-1203", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_621 [label="property._required = propertyAttribute._required", span="1208-1208", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_622 [label="property.Order = propertyAttribute._order", span="1209-1209", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_623 [label="property.DefaultValueHandling = propertyAttribute._defaultValueHandling", span="1210-1210", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_626 [label="property._required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="1216-1216", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_627 [label="property.Order = (dataMemberAttribute.Order != -1) ? (int?)dataMemberAttribute.Order : null", span="1217-1217", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_628 [label="property.DefaultValueHandling = (!dataMemberAttribute.EmitDefaultValue) ? (DefaultValueHandling?)DefaultValueHandling.Ignore : null", span="1218-1218", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_630 [label="bool hasJsonIgnoreAttribute =\r\n                JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null\r\n                    // automatically ignore extension data dictionary property if it is public\r\n                || JsonTypeReflector.GetAttribute<JsonExtensionDataAttribute>(attributeProvider) != null\r\n#if !(NETFX_CORE || PORTABLE40 || PORTABLE)\r\n                || JsonTypeReflector.GetAttribute<NonSerializedAttribute>(attributeProvider) != null", span="1223-1228", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_631 [label="memberSerialization != MemberSerialization.OptIn", span="1232-1232", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_633 [label="hasIgnoreDataMemberAttribute = (JsonTypeReflector.GetAttribute<IgnoreDataMemberAttribute>(attributeProvider) != null)", span="1237-1237", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_634 [label="property.Ignored = (hasJsonIgnoreAttribute || hasIgnoreDataMemberAttribute)", span="1241-1241", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_635 [label="property.Ignored = (hasJsonIgnoreAttribute || !hasMemberAttribute)", span="1246-1246", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_636 [label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="1251-1251", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_637 [label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="1252-1252", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_638 [label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="1254-1254", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_640 [label="property.DefaultValue = defaultValueAttribute.Value", span="1256-1256", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_641 [label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="1258-1258", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_642 [label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="1259-1259", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_643 [label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="1260-1260", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_644 [label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="1261-1261", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_645 [label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="1262-1262", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_646 [label="property.ItemIsReference = (propertyAttribute != null) ? propertyAttribute._itemIsReference : null", span="1264-1264", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_647 [label="property.ItemConverter =\r\n                (propertyAttribute != null && propertyAttribute.ItemConverterType != null)\r\n                    ? JsonConverterAttribute.CreateJsonConverterInstance(propertyAttribute.ItemConverterType)\r\n                    : null", span="1265-1268", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_648 [label="property.ItemReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._itemReferenceLoopHandling : null", span="1269-1269", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_649 [label="property.ItemTypeNameHandling = (propertyAttribute != null) ? propertyAttribute._itemTypeNameHandling : null", span="1270-1270", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_655 [label="memberSerialization == MemberSerialization.Fields", span="1279-1279", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_659 [label="property.HasMemberAttribute = true", span="1286-1286", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_605 [label="dataContractAttribute != null && memberInfo != null", span="1182-1182", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_604 [label="DataMemberAttribute dataMemberAttribute", span="1181-1181", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_606 [label="dataMemberAttribute = JsonTypeReflector.GetDataMemberAttribute((MemberInfo)memberInfo)", span="1183-1183", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_607 [label="dataMemberAttribute = null", span="1185-1185", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_614 [label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="1196-1196", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_615 [label="mappedName = dataMemberAttribute.Name", span="1197-1197", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_625 [label="dataMemberAttribute != null", span="1214-1214", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_657 [label="dataMemberAttribute != null", span="1283-1283", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_609 [label="propertyAttribute != null", span="1189-1189", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_612 [label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="1193-1193", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_613 [label="mappedName = propertyAttribute.PropertyName", span="1194-1194", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_620 [label="propertyAttribute != null", span="1206-1206", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_653 [label="propertyAttribute != null", span="1277-1277", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_611 [label="string mappedName", span="1192-1192", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_619 [label="bool hasMemberAttribute = false", span="1205-1205", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_624 [label="hasMemberAttribute = true", span="1211-1211", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_629 [label="hasMemberAttribute = true", span="1219-1219", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_632 [label="bool hasIgnoreDataMemberAttribute = false", span="1234-1234", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_639 [label="defaultValueAttribute != null", span="1255-1255", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_650 [label="allowNonPublicAccess = false", span="1272-1272", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_651 [label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="1274-1274", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_652 [label="allowNonPublicAccess = true", span="1275-1275", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_654 [label="allowNonPublicAccess = true", span="1278-1278", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_656 [label="allowNonPublicAccess = true", span="1280-1280", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_658 [label="allowNonPublicAccess = true", span="1285-1285", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_660 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1174-1174", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonSerializerTest.cs"];
m0_459 [label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0", cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="JsonSerializerTest.cs"];
m0_177 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="419-419", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_286 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs"];
m0_248 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m0_231 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JsonSerializerTest.cs"];
m0_109 [label="string employeeRef = typeof(EmployeeReference).AssemblyQualifiedName", span="349-349", cluster="Newtonsoft.Json.Tests.Serialization.MetadataPropertyHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", color=green, community=0];
m0_412 [label="Entry Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", span="396-396", cluster="Newtonsoft.Json.Serialization.JsonContract.CreateSerializationCallback(System.Reflection.MethodInfo)", file="JsonSerializerTest.cs"];
m0_436 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonSerializerTest.cs"];
m0_684 [label="Entry System.Type.GetField(string)", span="0-0", cluster="System.Type.GetField(string)", file="JsonSerializerTest.cs"];
m0_437 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="880-880", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerTest.cs"];
m0_438 [label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="882-882", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerTest.cs"];
m0_439 [label="InitializeContract(contract)", span="883-883", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerTest.cs"];
m0_440 [label="return contract;", span="885-885", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerTest.cs"];
m0_441 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="880-880", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="JsonSerializerTest.cs"];
m0_216 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="66-66", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="JsonSerializerTest.cs"];
m0_507 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="88-88", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JsonSerializerTest.cs"];
m0_508 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1027-1027", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerTest.cs"];
m0_520 [label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="1030-1030", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerTest.cs"];
m0_524 [label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1043-1043", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerTest.cs"];
m0_521 [label="converter != null\r\n                && !(converter is ComponentConverter)\r\n                && !(converter is ReferenceConverter)\r\n                && converter.GetType() != typeof(TypeConverter)", span="1033-1036", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerTest.cs"];
m0_522 [label="converter.CanConvertTo(typeof(string))", span="1038-1038", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerTest.cs"];
m0_523 [label="return true;", span="1039-1039", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerTest.cs"];
m0_525 [label="return true;", span="1044-1044", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerTest.cs"];
m0_526 [label="return false;", span="1046-1046", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerTest.cs"];
m0_527 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1027-1027", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonSerializerTest.cs"];
m0_301 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonSerializerTest.cs"];
m0_506 [label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0", cluster="System.Type.IsSubclassOf(System.Type)", file="JsonSerializerTest.cs"];
m0_411 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1049-1049", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_530 [label="!method.IsDefined(attributeType, false)", span="1051-1051", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_532 [label="currentCallback != null", span="1054-1054", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_533 [label="throw new JsonException(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, method, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1055-1055", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_534 [label="prevAttributeType != null", span="1057-1057", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_535 [label="throw new JsonException(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, prevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="1058-1058", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_536 [label="method.IsVirtual", span="1060-1060", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_537 [label="throw new JsonException(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, method, GetClrTypeFullName(method.DeclaringType), attributeType));", span="1061-1061", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_538 [label="method.ReturnType != typeof(void)", span="1063-1063", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_539 [label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method));", span="1064-1064", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_540 [label="attributeType == typeof(OnErrorAttribute)", span="1066-1066", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_541 [label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != typeof(ErrorContext)", span="1068-1068", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_542 [label="throw new JsonException(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="1069-1069", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_543 [label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="1073-1073", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_544 [label="throw new JsonException(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="1074-1074", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_545 [label="prevAttributeType = attributeType", span="1077-1077", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_531 [label="return false;", span="1052-1052", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_546 [label="return true;", span="1079-1079", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_547 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", span="1049-1049", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], System.Type, System.Reflection.MethodInfo, ref System.Type)", file="JsonSerializerTest.cs"];
m0_503 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1007-1007", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonSerializerTest.cs"];
m0_510 [label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1009-1009", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonSerializerTest.cs"];
m0_511 [label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1011-1011", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonSerializerTest.cs"];
m0_512 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1007-1007", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonSerializerTest.cs"];
m0_327 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="670-670", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="JsonSerializerTest.cs"];
m0_328 [label="return JsonTypeReflector.GetJsonConverter(objectType, objectType);", span="672-672", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="JsonSerializerTest.cs"];
m0_329 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="670-670", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="JsonSerializerTest.cs"];
m0_581 [label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="51-51", cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_410 [label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m0_574 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1121-1121", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_575 [label="IValueProvider valueProvider", span="1124-1124", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_577 [label="valueProvider = new DynamicValueProvider(member)", span="1128-1128", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_578 [label="valueProvider = new ReflectionValueProvider(member)", span="1130-1130", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_576 [label=DynamicCodeGeneration, span="1127-1127", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_579 [label="return valueProvider;", span="1137-1137", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_580 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="1121-1121", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m0_442 [label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="41-41", cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonSerializerTest.cs"];
m0_234 [label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="547-547", cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="JsonSerializerTest.cs"];
m0_556 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="JsonSerializerTest.cs"];
m0_414 [label="List<Type> ret = new List<Type>()", span="833-833", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerTest.cs"];
m0_415 [label="Type current = type", span="835-835", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerTest.cs"];
m0_417 [label="ret.Add(current)", span="838-838", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerTest.cs"];
m0_419 [label="ret.Reverse()", span="843-843", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerTest.cs"];
m0_420 [label="return ret;", span="844-844", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerTest.cs"];
m0_416 [label="current != null && current != typeof(object)", span="836-836", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerTest.cs"];
m0_418 [label="current = current.BaseType()", span="839-839", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerTest.cs"];
m0_421 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="831-831", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonSerializerTest.cs"];
m0_683 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="JsonSerializerTest.cs"];
m0_549 [label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57", cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonSerializerTest.cs"];
m0_557 [label="List<MemberInfo> members = GetSerializableMembers(type)", span="1098-1098", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_560 [label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1102-1102", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_562 [label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1106-1106", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_558 [label="members == null", span="1099-1099", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_561 [label=members, span="1104-1104", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_559 [label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="1100-1100", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_564 [label="properties.AddProperty(property)", span="1109-1109", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_565 [label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1112-1112", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_563 [label="property != null", span="1108-1108", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_566 [label="return orderedProperties;", span="1113-1113", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_567 [label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1096-1096", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs"];
m0_211 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="261-261", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonSerializerTest.cs"];
m0_260 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="JsonSerializerTest.cs"];
m0_693 [label="out Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="JsonSerializerTest.cs"];
m0_694 [label="Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="JsonSerializerTest.cs"];
m0_695 [label="ref Newtonsoft.Json.Serialization.ResolverContractKey", span="", file="JsonSerializerTest.cs"];
m0_696 [label="Newtonsoft.Json.Serialization.DefaultContractResolver", span="", file="JsonSerializerTest.cs"];
m0_697 [label=getExtensionDataDictionary, span="", file="JsonSerializerTest.cs"];
m0_698 [label=createExtensionDataDictionary, span="", file="JsonSerializerTest.cs"];
m0_699 [label=setExtensionDataDictionary, span="", file="JsonSerializerTest.cs"];
m0_700 [label=isJTokenValueType, span="", file="JsonSerializerTest.cs"];
m0_701 [label=setExtensionDataDictionaryValue, span="", file="JsonSerializerTest.cs"];
m0_702 [label=createEnumerableWrapper, span="", file="JsonSerializerTest.cs"];
m0_703 [label="out Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>", span="", file="JsonSerializerTest.cs"];
m0_704 [label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>", span="", file="JsonSerializerTest.cs"];
m0_705 [label=methodCall, span="", file="JsonSerializerTest.cs"];
m0_706 [label=shouldSerializeCall, span="", file="JsonSerializerTest.cs"];
m0_707 [label=specifiedPropertyGet, span="", file="JsonSerializerTest.cs"];
m1_354 [label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", span="852-852", cluster="Newtonsoft.Json.JsonReader.ReadDateTimeOffsetString(string)", file="TypeNameHandlingTests.cs"];
m1_650 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", span="55-55", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference(char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_1097 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="840-840", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="TypeNameHandlingTests.cs"];
m1_1238 [label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2377-2377", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="TypeNameHandlingTests.cs"];
m1_1239 [label="return true;", span="2379-2379", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="TypeNameHandlingTests.cs"];
m1_1240 [label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="2377-2377", cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="TypeNameHandlingTests.cs"];
m1_358 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="944-944", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="TypeNameHandlingTests.cs"];
m1_138 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_139 [label="EnsureBuffer()", span="368-368", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_140 [label=true, span="370-370", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_141 [label=_currentState, span="372-372", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_142 [label="State.Start", span="374-374", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_149 [label="State.Object", span="381-381", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_152 [label="State.PostValue", span="384-384", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_155 [label="State.Finished", span="392-392", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_167 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="412-412", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_143 [label="State.Property", span="375-375", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_144 [label="State.Array", span="376-376", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_145 [label="State.ArrayStart", span="377-377", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_146 [label="State.Constructor", span="378-378", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_147 [label="State.ConstructorStart", span="379-379", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_148 [label="return ParseValue();", span="380-380", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_150 [label="State.ObjectStart", span="382-382", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_151 [label="return ParseObject();", span="383-383", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_153 [label="ParsePostValue()", span="387-387", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_154 [label="return true;", span="389-389", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_156 [label="EnsureChars(0, false)", span="393-393", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_157 [label="EatWhitespace(false)", span="395-395", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_165 [label="SetToken(JsonToken.None)", span="409-409", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_158 [label=_isEndOfFile, span="396-396", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_159 [label="SetToken(JsonToken.None)", span="398-398", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_161 [label="_chars[_charPos] == '/'", span="401-401", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_160 [label="return false;", span="399-399", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_162 [label="ParseComment(true)", span="403-403", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_164 [label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="407-407", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_163 [label="return true;", span="404-404", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_166 [label="return false;", span="410-410", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_168 [label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="366-366", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="TypeNameHandlingTests.cs"];
m1_913 [label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1704-1704", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_947 [label="MatchValueWithTrailingSeparator(''new'')", span="1706-1706", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_948 [label="EatWhitespace(false)", span="1708-1708", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_981 [label="throw JsonReaderException.Create(this, ''Unexpected content while parsing JSON.'');", span="1783-1783", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_949 [label="int initialPosition = _charPos", span="1710-1710", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_950 [label="int endPosition", span="1711-1711", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_973 [label="_stringReference = new StringReference(_chars, initialPosition, endPosition - initialPosition)", span="1765-1765", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_951 [label=true, span="1713-1713", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_952 [label="char currentChar = _chars[_charPos]", span="1715-1715", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_953 [label="currentChar == '\0'", span="1716-1716", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_959 [label="char.IsLetterOrDigit(currentChar)", span="1732-1732", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_961 [label="currentChar == StringUtils.CarriageReturn", span="1736-1736", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_964 [label="currentChar == StringUtils.LineFeed", span="1742-1742", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_967 [label="char.IsWhiteSpace(currentChar)", span="1748-1748", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_970 [label="currentChar == '('", span="1754-1754", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_972 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1761-1761", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_954 [label="_charsUsed == _charPos", span="1718-1718", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_955 [label="ReadData(true) == 0", span="1720-1720", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_957 [label="endPosition = _charPos", span="1727-1727", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_956 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing constructor.'');", span="1722-1722", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_958 [label="_charPos++", span="1728-1728", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_960 [label="_charPos++", span="1734-1734", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_962 [label="endPosition = _charPos", span="1738-1738", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_963 [label="ProcessCarriageReturn(true)", span="1739-1739", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_965 [label="endPosition = _charPos", span="1744-1744", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_966 [label="ProcessLineFeed()", span="1745-1745", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_968 [label="endPosition = _charPos", span="1750-1750", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_969 [label="_charPos++", span="1751-1751", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_971 [label="endPosition = _charPos", span="1756-1756", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_974 [label="string constructorName = _stringReference.ToString()", span="1766-1766", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_975 [label="EatWhitespace(false)", span="1768-1768", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_980 [label="SetToken(JsonToken.StartConstructor, constructorName)", span="1779-1779", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_976 [label="_chars[_charPos] != '('", span="1770-1770", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_977 [label="throw JsonReaderException.Create(this, ''Unexpected character while parsing constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1772-1772", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_978 [label="_charPos++", span="1775-1775", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_979 [label="ClearRecentString()", span="1777-1777", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_982 [label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="1704-1704", cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="TypeNameHandlingTests.cs"];
m1_538 [label="Entry Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", span="886-886", cluster="Newtonsoft.Json.JsonReader.CreateUnexpectedEndException()", file="TypeNameHandlingTests.cs"];
m1_537 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="2259-2259", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs"];
m1_1195 [label="MatchValueWithTrailingSeparator(JsonConvert.Null)", span="2261-2261", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs"];
m1_1196 [label="SetToken(JsonToken.Null)", span="2263-2263", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs"];
m1_1197 [label="throw JsonReaderException.Create(this, ''Error parsing null value.'');", span="2267-2267", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs"];
m1_1198 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="2259-2259", cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="TypeNameHandlingTests.cs"];
m1_1235 [label="Entry Newtonsoft.Json.JsonReader.Close()", span="1117-1117", cluster="Newtonsoft.Json.JsonReader.Close()", file="TypeNameHandlingTests.cs"];
m1_648 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", span="202-202", cluster="Newtonsoft.Json.Utilities.StringUtils.IsHighSurrogate(char)", file="TypeNameHandlingTests.cs"];
m1_263 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="TypeNameHandlingTests.cs"];
m1_1093 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", span="746-746", cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int32TryParse(char[], int, int, out int)", file="TypeNameHandlingTests.cs"];
m1_811 [label="Entry Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.PropertyNameTable.Get(char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_1088 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="TypeNameHandlingTests.cs"];
m1_83 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="TypeNameHandlingTests.cs"];
m1_84 [label="return ReadData(append, 0);", span="242-242", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="TypeNameHandlingTests.cs"];
m1_85 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool)", span="240-240", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool)", file="TypeNameHandlingTests.cs"];
m1_1213 [label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", span="70-70", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string)", file="TypeNameHandlingTests.cs"];
m1_186 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="TypeNameHandlingTests.cs"];
m1_187 [label="return (string)ReadStringValue(ReadType.ReadAsString);", span="441-441", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="TypeNameHandlingTests.cs"];
m1_188 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsString()", span="439-439", cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="TypeNameHandlingTests.cs"];
m1_1101 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="TypeNameHandlingTests.cs"];
m1_17 [label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_18 [label="_charPos++", span="129-129", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_20 [label="ReadStringIntoBuffer(quote)", span="132-132", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_22 [label=readType, span="135-135", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_35 [label="_quoteChar = quote", span="159-159", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_41 [label="readType == ReadType.ReadAsDateTime", span="170-170", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_43 [label="readType == ReadType.ReadAsDateTimeOffset", span="175-175", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_56 [label="_quoteChar = quote", span="208-208", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_19 [label="ShiftBufferIfNeeded()", span="131-131", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_21 [label="SetPostValueState(true)", span="133-133", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_23 [label="ReadType.ReadAsBytes", span="137-137", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_32 [label="ReadType.ReadAsString", span="155-155", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_36 [label="ReadType.ReadAsInt32", span="161-161", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_39 [label="_dateParseHandling != DateParseHandling.None", span="167-167", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_24 [label="Guid g", span="138-138", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_25 [label="byte[] data", span="139-139", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_26 [label="_stringReference.Length == 0", span="140-140", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_27 [label="data = new byte[0]", span="142-142", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_28 [label="_stringReference.Length == 36 && ConvertUtils.TryConvertGuid(_stringReference.ToString(), out g)", span="144-144", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_29 [label="data = g.ToByteArray()", span="146-146", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_30 [label="data = Convert.FromBase64CharArray(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="150-150", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_31 [label="SetToken(JsonToken.Bytes, data, false)", span="153-153", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_33 [label="string text = _stringReference.ToString()", span="156-156", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_34 [label="SetToken(JsonToken.String, text, false)", span="158-158", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_37 [label="ReadType.ReadAsDecimal", span="162-162", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_38 [label="ReadType.ReadAsBoolean", span="163-163", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_40 [label="DateParseHandling dateParseHandling", span="169-169", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_55 [label="SetToken(JsonToken.String, _stringReference.ToString(), false)", span="207-207", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_42 [label="dateParseHandling = DateParseHandling.DateTime", span="172-172", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_44 [label="dateParseHandling = DateParseHandling.DateTimeOffset", span="177-177", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_45 [label="dateParseHandling = _dateParseHandling", span="182-182", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_46 [label="dateParseHandling == DateParseHandling.DateTime", span="185-185", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_47 [label="DateTime dt", span="187-187", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_51 [label="DateTimeOffset dt", span="197-197", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_48 [label="DateTimeUtils.TryParseDateTime(_stringReference, DateTimeZoneHandling, DateFormatString, Culture, out dt)", span="188-188", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_49 [label="SetToken(JsonToken.Date, dt, false)", span="190-190", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_50 [label="return;", span="191-191", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_52 [label="DateTimeUtils.TryParseDateTimeOffset(_stringReference, DateFormatString, Culture, out dt)", span="198-198", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_53 [label="SetToken(JsonToken.Date, dt, false)", span="200-200", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_54 [label="return;", span="201-201", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_57 [label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", span="127-127", cluster="Newtonsoft.Json.JsonTextReader.ParseString(char, Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_181 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="817-817", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_446 [label="EnsureBuffer()", span="819-819", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_464 [label="ParseString(currentChar, readType)", span="845-845", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_465 [label=readType, span="846-846", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_472 [label="throw new ArgumentOutOfRangeException(nameof(readType));", span="855-855", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_488 [label="ParseNumber(readType)", span="872-872", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_447 [label=_currentState, span="821-821", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_448 [label="State.Start", span="823-823", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_510 [label="State.Finished", span="911-911", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_513 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="915-915", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_449 [label="State.Property", span="824-824", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_450 [label="State.Array", span="825-825", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_451 [label="State.ArrayStart", span="826-826", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_452 [label="State.Constructor", span="827-827", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_453 [label="State.ConstructorStart", span="828-828", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_454 [label="State.PostValue", span="829-829", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_455 [label=true, span="830-830", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_456 [label="char currentChar = _chars[_charPos]", span="832-832", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_457 [label=currentChar, span="834-834", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_499 [label="throw CreateUnexpectedCharacterException(currentChar);", span="887-887", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_508 [label="!char.IsWhiteSpace(currentChar)", span="902-902", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_509 [label="throw CreateUnexpectedCharacterException(currentChar);", span="904-904", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_458 [label="'\0'", span="836-836", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_462 [label="''''", span="843-843", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_473 [label="'n'", span="857-857", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_476 [label="'-'", span="860-860", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_490 [label="'/'", span="874-874", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_492 [label="','", span="877-877", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_494 [label="']'", span="880-880", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_500 [label="StringUtils.CarriageReturn", span="888-888", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_502 [label="StringUtils.LineFeed", span="891-891", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_504 [label="' '", span="894-894", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_507 [label="_charPos++", span="900-900", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_459 [label="ReadNullChar()", span="837-837", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_460 [label="SetToken(JsonToken.None, null, false)", span="839-839", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_461 [label="return null;", span="840-840", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_463 [label="'\''", span="844-844", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_466 [label="ReadType.ReadAsInt32", span="848-848", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_468 [label="ReadType.ReadAsDecimal", span="850-850", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_470 [label="ReadType.ReadAsDouble", span="852-852", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_467 [label="return ReadInt32String(_stringReference.ToString());", span="849-849", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_469 [label="return ReadDecimalString(_stringReference.ToString());", span="851-851", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_471 [label="return ReadDoubleString(_stringReference.ToString());", span="853-853", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_474 [label="HandleNull()", span="858-858", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_475 [label="return null;", span="859-859", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_477 [label="'.'", span="861-861", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_478 [label="'0'", span="862-862", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_479 [label="'1'", span="863-863", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_480 [label="'2'", span="864-864", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_481 [label="'3'", span="865-865", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_482 [label="'4'", span="866-866", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_483 [label="'5'", span="867-867", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_484 [label="'6'", span="868-868", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_485 [label="'7'", span="869-869", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_486 [label="'8'", span="870-870", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_487 [label="'9'", span="871-871", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_489 [label="return Value;", span="873-873", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_491 [label="ParseComment(false)", span="875-875", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_493 [label="ProcessValueComma()", span="878-878", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_495 [label="_charPos++", span="881-881", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_496 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="882-882", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_497 [label="SetToken(JsonToken.EndArray)", span="884-884", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_498 [label="return null;", span="885-885", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_501 [label="ProcessCarriageReturn(false)", span="889-889", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_503 [label="ProcessLineFeed()", span="892-892", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_505 [label="StringUtils.Tab", span="895-895", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_506 [label="_charPos++", span="897-897", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_511 [label="ReadFinished()", span="912-912", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_512 [label="return null;", span="913-913", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_514 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", span="817-817", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_665 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", span="956-956", cluster="Newtonsoft.Json.Utilities.ConvertUtils.HexTextToInt(char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_810 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1472-1472", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_815 [label="int initialPosition = _charPos", span="1474-1474", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_816 [label=true, span="1477-1477", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_822 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1492-1492", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_828 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1504-1504", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_817 [label="_chars[_charPos]", span="1479-1479", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_818 [label="'\0'", span="1481-1481", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_824 [label="char currentChar = _chars[_charPos]", span="1495-1495", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_819 [label="_charsUsed == _charPos", span="1482-1482", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_820 [label="ReadData(true) == 0", span="1484-1484", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_821 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unquoted property name.'');", span="1486-1486", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_823 [label="return;", span="1493-1493", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_825 [label="ValidIdentifierChar(currentChar)", span="1497-1497", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_827 [label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="1502-1502", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_830 [label="throw JsonReaderException.Create(this, ''Invalid JavaScript property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1508-1508", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_826 [label="_charPos++", span="1499-1499", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_829 [label="return;", span="1505-1505", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_831 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", span="1472-1472", cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty()", file="TypeNameHandlingTests.cs"];
m1_1226 [label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2349-2349", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_1227 [label="base.Close()", span="2351-2351", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_1228 [label="_chars != null", span="2353-2353", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_1229 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="2355-2355", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_1231 [label="CloseInput && _reader != null", span="2359-2359", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_1230 [label="_chars = null", span="2356-2356", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_1232 [label="_reader.Close()", span="2362-2362", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_1233 [label="_stringBuffer.Clear(_arrayPool)", span="2368-2368", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_1234 [label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="2349-2349", cluster="Newtonsoft.Json.JsonTextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_781 [label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1411-1411", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_782 [label="char firstChar = _chars[_charPos]", span="1413-1413", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_783 [label="char quoteChar", span="1414-1414", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_784 [label="firstChar == '''' || firstChar == '\''", span="1416-1416", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_786 [label="quoteChar = firstChar", span="1419-1419", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_789 [label="ValidIdentifierChar(firstChar)", span="1423-1423", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_805 [label="_quoteChar = quoteChar", span="1461-1461", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_785 [label="_charPos++", span="1418-1418", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_787 [label="ShiftBufferIfNeeded()", span="1420-1420", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_788 [label="ReadStringIntoBuffer(quoteChar)", span="1421-1421", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_790 [label="quoteChar = '\0'", span="1425-1425", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_793 [label="throw JsonReaderException.Create(this, ''Invalid property identifier character: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1431-1431", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_791 [label="ShiftBufferIfNeeded()", span="1426-1426", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_792 [label="ParseUnquotedProperty()", span="1427-1427", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_794 [label="string propertyName", span="1434-1434", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_795 [label="NameTable != null", span="1436-1436", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_796 [label="propertyName = NameTable.Get(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length)", span="1438-1438", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_799 [label="propertyName = _stringReference.ToString()", span="1448-1448", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_797 [label="propertyName == null", span="1441-1441", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_804 [label="SetToken(JsonToken.PropertyName, propertyName)", span="1460-1460", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_798 [label="propertyName = _stringReference.ToString()", span="1443-1443", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_800 [label="EatWhitespace(false)", span="1451-1451", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_801 [label="_chars[_charPos] != ':'", span="1453-1453", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_802 [label="throw JsonReaderException.Create(this, ''Invalid character after parsing property name. Expected ':' but got: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="1455-1455", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_803 [label="_charPos++", span="1458-1458", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_806 [label="ClearRecentString()", span="1462-1462", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_807 [label="return true;", span="1464-1464", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_808 [label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty()", span="1411-1411", cluster="Newtonsoft.Json.JsonTextReader.ParseProperty()", file="TypeNameHandlingTests.cs"];
m1_524 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="943-943", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="TypeNameHandlingTests.cs"];
m1_525 [label="return (double?)ReadNumberValue(ReadType.ReadAsDouble);", span="945-945", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="TypeNameHandlingTests.cs"];
m1_526 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDouble()", span="943-943", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDouble()", file="TypeNameHandlingTests.cs"];
m1_656 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", span="58-58", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char)", file="TypeNameHandlingTests.cs"];
m1_914 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="2329-2329", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="TypeNameHandlingTests.cs"];
m1_1220 [label="MatchValueWithTrailingSeparator(JsonConvert.NaN)", span="2331-2331", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="TypeNameHandlingTests.cs"];
m1_1221 [label="_floatParseHandling == FloatParseHandling.Decimal", span="2333-2333", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="TypeNameHandlingTests.cs"];
m1_1224 [label="throw JsonReaderException.Create(this, ''Error parsing NaN value.'');", span="2342-2342", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="TypeNameHandlingTests.cs"];
m1_1222 [label="throw new JsonReaderException(''Cannot read NaN as a decimal.'');", span="2335-2335", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="TypeNameHandlingTests.cs"];
m1_1223 [label="SetToken(JsonToken.Float, double.NaN)", span="2338-2338", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="TypeNameHandlingTests.cs"];
m1_1225 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="2329-2329", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="TypeNameHandlingTests.cs"];
m1_437 [label="Entry Newtonsoft.Json.JsonReader.ReadBooleanString(string)", span="696-696", cluster="Newtonsoft.Json.JsonReader.ReadBooleanString(string)", file="TypeNameHandlingTests.cs"];
m1_1095 [label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0", cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="TypeNameHandlingTests.cs"];
m1_118 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", span="54-54", cluster="Newtonsoft.Json.Utilities.BufferUtils.ReturnBuffer(Newtonsoft.Json.IArrayPool<char>, char[])", file="TypeNameHandlingTests.cs"];
m1_189 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_190 [label="EnsureBuffer()", span="450-450", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_191 [label="bool isWrapped = false", span="451-451", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_192 [label=_currentState, span="453-453", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_211 [label=isWrapped, span="479-479", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_193 [label="State.Start", span="455-455", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_249 [label="State.Finished", span="539-539", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_252 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="543-543", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_194 [label="State.Property", span="456-456", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_195 [label="State.Array", span="457-457", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_196 [label="State.ArrayStart", span="458-458", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_197 [label="State.Constructor", span="459-459", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_198 [label="State.ConstructorStart", span="460-460", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_199 [label="State.PostValue", span="461-461", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_200 [label=true, span="462-462", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_201 [label="char currentChar = _chars[_charPos]", span="464-464", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_202 [label=currentChar, span="466-466", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_209 [label="ParseString(currentChar, ReadType.ReadAsBytes)", span="477-477", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_238 [label="throw CreateUnexpectedCharacterException(currentChar);", span="515-515", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_247 [label="!char.IsWhiteSpace(currentChar)", span="530-530", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_248 [label="throw CreateUnexpectedCharacterException(currentChar);", span="532-532", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_203 [label="'\0'", span="468-468", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_207 [label="''''", span="475-475", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_217 [label="'{'", span="489-489", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_222 [label="'['", span="495-495", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_226 [label="'n'", span="499-499", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_229 [label="'/'", span="502-502", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_231 [label="','", span="505-505", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_233 [label="']'", span="508-508", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_239 [label="StringUtils.CarriageReturn", span="516-516", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_241 [label="StringUtils.LineFeed", span="519-519", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_243 [label="' '", span="522-522", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_246 [label="_charPos++", span="528-528", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_204 [label="ReadNullChar()", span="469-469", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_205 [label="SetToken(JsonToken.None, null, false)", span="471-471", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_206 [label="return null;", span="472-472", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_208 [label="'\''", span="476-476", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_210 [label="byte[] data = (byte[])Value", span="478-478", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_215 [label="SetToken(JsonToken.Bytes, data, false)", span="486-486", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_216 [label="return data;", span="488-488", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_212 [label="ReaderReadAndAssert()", span="481-481", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_213 [label="TokenType != JsonToken.EndObject", span="482-482", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_214 [label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="484-484", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_218 [label="_charPos++", span="490-490", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_219 [label="SetToken(JsonToken.StartObject)", span="491-491", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_220 [label="ReadIntoWrappedTypeObject()", span="492-492", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_221 [label="isWrapped = true", span="493-493", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_223 [label="_charPos++", span="496-496", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_224 [label="SetToken(JsonToken.StartArray)", span="497-497", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_225 [label="return ReadArrayIntoByteArray();", span="498-498", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_227 [label="HandleNull()", span="500-500", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_228 [label="return null;", span="501-501", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_230 [label="ParseComment(false)", span="503-503", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_232 [label="ProcessValueComma()", span="506-506", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_234 [label="_charPos++", span="509-509", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_235 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="510-510", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_236 [label="SetToken(JsonToken.EndArray)", span="512-512", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_237 [label="return null;", span="513-513", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_240 [label="ProcessCarriageReturn(false)", span="517-517", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_242 [label="ProcessLineFeed()", span="520-520", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_244 [label="StringUtils.Tab", span="523-523", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_245 [label="_charPos++", span="525-525", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_250 [label="ReadFinished()", span="540-540", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_251 [label="return null;", span="541-541", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_253 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="448-448", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="TypeNameHandlingTests.cs"];
m1_649 [label="Entry Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1189-1189", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs"];
m1_652 [label="writeToPosition > lastWritePosition", span="1191-1191", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs"];
m1_653 [label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, writeToPosition - lastWritePosition)", span="1193-1193", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs"];
m1_654 [label="_stringBuffer.Append(_arrayPool, writeChar)", span="1196-1196", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs"];
m1_655 [label="Exit Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", span="1189-1189", cluster="Newtonsoft.Json.JsonTextReader.WriteCharToBuffer(char, int, int)", file="TypeNameHandlingTests.cs"];
m1_809 [label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1467-1467", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="TypeNameHandlingTests.cs"];
m1_812 [label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="1469-1469", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="TypeNameHandlingTests.cs"];
m1_813 [label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="1467-1467", cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="TypeNameHandlingTests.cs"];
m1_169 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1008-1008", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs"];
m1_555 [label="_chars == null", span="1010-1010", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs"];
m1_556 [label="_chars = BufferUtils.RentBuffer(_arrayPool, 1024)", span="1012-1012", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs"];
m1_557 [label="_chars[0] = '\0'", span="1013-1013", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs"];
m1_558 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureBuffer()", span="1008-1008", cluster="Newtonsoft.Json.JsonTextReader.EnsureBuffer()", file="TypeNameHandlingTests.cs"];
m1_185 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_265 [label="EnsureBuffer()", span="549-549", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_283 [label="ParseString(currentChar, readType)", span="575-575", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_284 [label=readType, span="576-576", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_297 [label="throw new ArgumentOutOfRangeException(nameof(readType));", span="597-597", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_310 [label="readType != ReadType.ReadAsString", span="611-611", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_317 [label="readType != ReadType.ReadAsString", span="620-620", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_266 [label=_currentState, span="551-551", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_267 [label="State.Start", span="553-553", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_348 [label="State.Finished", span="672-672", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_351 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="676-676", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_268 [label="State.Property", span="554-554", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_269 [label="State.Array", span="555-555", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_270 [label="State.ArrayStart", span="556-556", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_271 [label="State.Constructor", span="557-557", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_272 [label="State.ConstructorStart", span="558-558", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_273 [label="State.PostValue", span="559-559", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_274 [label=true, span="560-560", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_275 [label="char currentChar = _chars[_charPos]", span="562-562", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_276 [label=currentChar, span="564-564", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_312 [label="throw CreateUnexpectedCharacterException(currentChar);", span="614-614", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_319 [label="throw CreateUnexpectedCharacterException(currentChar);", span="623-623", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_320 [label="string expected = currentChar == 't' ? JsonConvert.True : JsonConvert.False", span="625-625", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_337 [label="throw CreateUnexpectedCharacterException(currentChar);", span="648-648", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_346 [label="!char.IsWhiteSpace(currentChar)", span="663-663", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_347 [label="throw CreateUnexpectedCharacterException(currentChar);", span="665-665", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_277 [label="'\0'", span="566-566", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_281 [label="''''", span="573-573", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_298 [label="'-'", span="599-599", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_315 [label="'t'", span="618-618", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_325 [label="'n'", span="632-632", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_328 [label="'/'", span="635-635", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_330 [label="','", span="638-638", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_332 [label="']'", span="641-641", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_338 [label="StringUtils.CarriageReturn", span="649-649", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_340 [label="StringUtils.LineFeed", span="652-652", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_342 [label="' '", span="655-655", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_345 [label="_charPos++", span="661-661", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_278 [label="ReadNullChar()", span="567-567", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_279 [label="SetToken(JsonToken.None, null, false)", span="569-569", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_280 [label="return null;", span="570-570", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_282 [label="'\''", span="574-574", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_285 [label="ReadType.ReadAsBytes", span="578-578", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_287 [label="ReadType.ReadAsString", span="580-580", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_289 [label="ReadType.ReadAsDateTime", span="582-582", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_293 [label="ReadType.ReadAsDateTimeOffset", span="589-589", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_286 [label="return Value;", span="579-579", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_288 [label="return Value;", span="581-581", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_290 [label="Value is DateTime", span="583-583", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_291 [label="return (DateTime)Value;", span="585-585", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_292 [label="return ReadDateTimeString((string)Value);", span="587-587", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_294 [label="Value is DateTimeOffset", span="590-590", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_295 [label="return (DateTimeOffset)Value;", span="592-592", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_296 [label="return ReadDateTimeOffsetString((string)Value);", span="594-594", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_299 [label="'.'", span="600-600", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_300 [label="'0'", span="601-601", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_301 [label="'1'", span="602-602", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_302 [label="'2'", span="603-603", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_303 [label="'3'", span="604-604", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_304 [label="'4'", span="605-605", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_305 [label="'5'", span="606-606", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_306 [label="'6'", span="607-607", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_307 [label="'7'", span="608-608", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_308 [label="'8'", span="609-609", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_309 [label="'9'", span="610-610", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_311 [label="_charPos++", span="613-613", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_313 [label="ParseNumber(ReadType.ReadAsString)", span="616-616", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_314 [label="return Value;", span="617-617", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_316 [label="'f'", span="619-619", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_318 [label="_charPos++", span="622-622", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_321 [label="!MatchValueWithTrailingSeparator(expected)", span="626-626", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_323 [label="SetToken(JsonToken.String, expected)", span="630-630", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_324 [label="return expected;", span="631-631", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_322 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="628-628", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_326 [label="HandleNull()", span="633-633", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_327 [label="return null;", span="634-634", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_329 [label="ParseComment(false)", span="636-636", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_331 [label="ProcessValueComma()", span="639-639", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_333 [label="_charPos++", span="642-642", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_334 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="643-643", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_335 [label="SetToken(JsonToken.EndArray)", span="645-645", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_336 [label="return null;", span="646-646", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_339 [label="ProcessCarriageReturn(false)", span="650-650", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_341 [label="ProcessLineFeed()", span="653-653", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_343 [label="StringUtils.Tab", span="656-656", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_344 [label="_charPos++", span="658-658", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_349 [label="ReadFinished()", span="673-673", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_350 [label="return null;", span="674-674", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_352 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", span="547-547", cluster="Newtonsoft.Json.JsonTextReader.ReadStringValue(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_912 [label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2283-2283", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs"];
m1_1203 [label="MatchValueWithTrailingSeparator(JsonConvert.False)", span="2285-2285", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs"];
m1_1204 [label="SetToken(JsonToken.Boolean, false)", span="2287-2287", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs"];
m1_1205 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2291-2291", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs"];
m1_1206 [label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="2283-2283", cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="TypeNameHandlingTests.cs"];
m1_1089 [label="Entry System.Convert.ToInt64(string, int)", span="0-0", cluster="System.Convert.ToInt64(string, int)", file="TypeNameHandlingTests.cs"];
m1_361 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="689-689", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_362 [label="EnsureBuffer()", span="691-691", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_363 [label=_currentState, span="693-693", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_364 [label="State.Start", span="695-695", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_432 [label="State.Finished", span="796-796", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_435 [label="throw JsonReaderException.Create(this, ''Unexpected state: {0}.''.FormatWith(CultureInfo.InvariantCulture, CurrentState));", span="800-800", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_365 [label="State.Property", span="696-696", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_366 [label="State.Array", span="697-697", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_367 [label="State.ArrayStart", span="698-698", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_368 [label="State.Constructor", span="699-699", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_369 [label="State.ConstructorStart", span="700-700", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_370 [label="State.PostValue", span="701-701", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_371 [label=true, span="702-702", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_372 [label="char currentChar = _chars[_charPos]", span="704-704", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_373 [label=currentChar, span="706-706", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_380 [label="ParseString(currentChar, ReadType.Read)", span="717-717", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_406 [label="bool isTrue = currentChar == 't'", span="750-750", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_421 [label="throw CreateUnexpectedCharacterException(currentChar);", span="772-772", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_430 [label="!char.IsWhiteSpace(currentChar)", span="787-787", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_431 [label="throw CreateUnexpectedCharacterException(currentChar);", span="789-789", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_374 [label="'\0'", span="708-708", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_378 [label="''''", span="715-715", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_382 [label="'n'", span="719-719", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_385 [label="'-'", span="722-722", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_404 [label="'t'", span="748-748", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_412 [label="'/'", span="759-759", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_414 [label="','", span="762-762", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_416 [label="']'", span="765-765", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_422 [label="StringUtils.CarriageReturn", span="773-773", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_424 [label="StringUtils.LineFeed", span="776-776", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_426 [label="' '", span="779-779", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_429 [label="_charPos++", span="785-785", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_375 [label="ReadNullChar()", span="709-709", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_376 [label="SetToken(JsonToken.None, null, false)", span="711-711", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_377 [label="return null;", span="712-712", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_379 [label="'\''", span="716-716", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_381 [label="return ReadBooleanString(_stringReference.ToString());", span="718-718", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_383 [label="HandleNull()", span="720-720", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_384 [label="return null;", span="721-721", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_386 [label="'.'", span="723-723", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_387 [label="'0'", span="724-724", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_388 [label="'1'", span="725-725", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_389 [label="'2'", span="726-726", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_390 [label="'3'", span="727-727", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_391 [label="'4'", span="728-728", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_392 [label="'5'", span="729-729", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_393 [label="'6'", span="730-730", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_394 [label="'7'", span="731-731", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_395 [label="'8'", span="732-732", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_396 [label="'9'", span="733-733", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_397 [label="ParseNumber(ReadType.Read)", span="734-734", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_398 [label="bool b", span="735-735", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_399 [label="Value is BigInteger", span="737-737", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_400 [label="b = (BigInteger)Value != 0", span="739-739", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_401 [label="b = Convert.ToBoolean(Value, CultureInfo.InvariantCulture)", span="744-744", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_402 [label="SetToken(JsonToken.Boolean, b, false)", span="746-746", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_403 [label="return b;", span="747-747", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_405 [label="'f'", span="749-749", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_407 [label="string expected = isTrue ? JsonConvert.True : JsonConvert.False", span="751-751", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_410 [label="SetToken(JsonToken.Boolean, isTrue)", span="757-757", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_411 [label="return isTrue;", span="758-758", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_408 [label="!MatchValueWithTrailingSeparator(expected)", span="753-753", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_409 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="755-755", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_413 [label="ParseComment(false)", span="760-760", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_415 [label="ProcessValueComma()", span="763-763", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_417 [label="_charPos++", span="766-766", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_418 [label="_currentState == State.Array || _currentState == State.ArrayStart || _currentState == State.PostValue", span="767-767", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_419 [label="SetToken(JsonToken.EndArray)", span="769-769", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_420 [label="return null;", span="770-770", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_423 [label="ProcessCarriageReturn(false)", span="774-774", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_425 [label="ProcessLineFeed()", span="777-777", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_427 [label="StringUtils.Tab", span="780-780", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_428 [label="_charPos++", span="782-782", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_433 [label="ReadFinished()", span="797-797", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_434 [label="return null;", span="798-798", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_436 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", span="689-689", cluster="Newtonsoft.Json.JsonTextReader.ReadAsBoolean()", file="TypeNameHandlingTests.cs"];
m1_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeNameHandlingTests.cs"];
m1_651 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", span="70-70", cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(Newtonsoft.Json.IArrayPool<char>, char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_667 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1216-1216", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_668 [label="int charPos = _charPos", span="1218-1218", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_669 [label=true, span="1220-1220", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_670 [label="_chars[charPos]", span="1222-1222", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_672 [label="_charPos = charPos", span="1225-1225", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_673 [label="_charsUsed == charPos", span="1227-1227", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_704 [label="charPos++", span="1266-1266", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_671 [label="'\0'", span="1224-1224", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_677 [label="'-'", span="1239-1239", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_705 [label="_charPos = charPos", span="1269-1269", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_674 [label="ReadData(true) == 0", span="1229-1229", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_676 [label="return;", span="1236-1236", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_675 [label="return;", span="1231-1231", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_678 [label="'+'", span="1240-1240", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_679 [label="'a'", span="1241-1241", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_680 [label="'A'", span="1242-1242", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_681 [label="'b'", span="1243-1243", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_682 [label="'B'", span="1244-1244", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_683 [label="'c'", span="1245-1245", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_684 [label="'C'", span="1246-1246", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_685 [label="'d'", span="1247-1247", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_686 [label="'D'", span="1248-1248", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_687 [label="'e'", span="1249-1249", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_688 [label="'E'", span="1250-1250", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_689 [label="'f'", span="1251-1251", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_690 [label="'F'", span="1252-1252", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_691 [label="'x'", span="1253-1253", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_692 [label="'X'", span="1254-1254", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_693 [label="'.'", span="1255-1255", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_694 [label="'0'", span="1256-1256", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_695 [label="'1'", span="1257-1257", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_696 [label="'2'", span="1258-1258", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_697 [label="'3'", span="1259-1259", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_698 [label="'4'", span="1260-1260", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_699 [label="'5'", span="1261-1261", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_700 [label="'6'", span="1262-1262", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_701 [label="'7'", span="1263-1263", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_702 [label="'8'", span="1264-1264", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_703 [label="'9'", span="1265-1265", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_706 [label="char currentChar = _chars[_charPos]", span="1271-1271", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_707 [label="char.IsWhiteSpace(currentChar) || currentChar == ',' || currentChar == '}' || currentChar == ']' || currentChar == ')' || currentChar == '/'", span="1272-1272", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_709 [label="throw JsonReaderException.Create(this, ''Unexpected character encountered while parsing number: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1277-1277", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_708 [label="return;", span="1274-1274", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_710 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", span="1216-1216", cluster="Newtonsoft.Json.JsonTextReader.ReadNumberIntoBuffer()", file="TypeNameHandlingTests.cs"];
m1_258 [label="Entry Newtonsoft.Json.JsonTextReader.HandleNull()", span="948-948", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_527 [label="EnsureChars(1, true)", span="950-950", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_528 [label="char next = _chars[_charPos + 1]", span="952-952", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_534 [label="_charPos = _charsUsed", span="964-964", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_529 [label="next == 'u'", span="954-954", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_530 [label="ParseNull()", span="956-956", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_532 [label="_charPos += 2", span="960-960", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_531 [label="return;", span="957-957", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_533 [label="throw CreateUnexpectedCharacterException(_chars[_charPos - 1]);", span="961-961", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_535 [label="throw CreateUnexpectedEndException();", span="965-965", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_536 [label="Exit Newtonsoft.Json.JsonTextReader.HandleNull()", span="948-948", cluster="Newtonsoft.Json.JsonTextReader.HandleNull()", file="TypeNameHandlingTests.cs"];
m1_174 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="934-934", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="TypeNameHandlingTests.cs"];
m1_917 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2271-2271", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs"];
m1_1199 [label="MatchValueWithTrailingSeparator(JsonConvert.Undefined)", span="2273-2273", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs"];
m1_1200 [label="SetToken(JsonToken.Undefined)", span="2275-2275", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs"];
m1_1201 [label="throw JsonReaderException.Create(this, ''Error parsing undefined value.'');", span="2279-2279", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs"];
m1_1202 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="2271-2271", cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="TypeNameHandlingTests.cs"];
m1_647 [label="Entry Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", span="211-211", cluster="Newtonsoft.Json.Utilities.StringUtils.IsLowSurrogate(char)", file="TypeNameHandlingTests.cs"];
m1_1148 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2164-2164", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1149 [label="!EnsureChars(value.Length - 1, true)", span="2166-2166", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1153 [label="i < value.Length", span="2172-2172", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1154 [label="_chars[_charPos + i] != value[i]", span="2174-2174", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1158 [label="_charPos += value.Length", span="2181-2181", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1150 [label="_charPos = _charsUsed", span="2168-2168", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1152 [label="int i = 0", span="2172-2172", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1151 [label="throw CreateUnexpectedEndException();", span="2169-2169", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1155 [label="_charPos += i", span="2176-2176", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1157 [label="i++", span="2172-2172", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1156 [label="return false;", span="2177-2177", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1159 [label="return true;", span="2183-2183", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_1160 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(string)", span="2164-2164", cluster="Newtonsoft.Json.JsonTextReader.MatchValue(string)", file="TypeNameHandlingTests.cs"];
m1_518 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="924-924", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="TypeNameHandlingTests.cs"];
m1_519 [label="return (DateTimeOffset?)ReadStringValue(ReadType.ReadAsDateTimeOffset);", span="926-926", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="TypeNameHandlingTests.cs"];
m1_520 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="924-924", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="TypeNameHandlingTests.cs"];
m1_521 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="934-934", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="TypeNameHandlingTests.cs"];
m1_522 [label="return (decimal?)ReadNumberValue(ReadType.ReadAsDecimal);", span="936-936", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="TypeNameHandlingTests.cs"];
m1_523 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="934-934", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="TypeNameHandlingTests.cs"];
m1_353 [label="Entry Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", span="796-796", cluster="Newtonsoft.Json.JsonReader.ReadDateTimeString(string)", file="TypeNameHandlingTests.cs"];
m1_7 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="TypeNameHandlingTests.cs"];
m1_438 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="TypeNameHandlingTests.cs"];
m1_119 [label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0", cluster="System.IO.TextReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_72 [label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="TypeNameHandlingTests.cs"];
m1_357 [label="Entry Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2186-2186", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs"];
m1_1161 [label="bool match = MatchValue(value)", span="2189-2189", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs"];
m1_1162 [label="!match", span="2191-2191", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs"];
m1_1163 [label="return false;", span="2193-2193", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs"];
m1_1164 [label="!EnsureChars(0, false)", span="2196-2196", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs"];
m1_1165 [label="return true;", span="2198-2198", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs"];
m1_1166 [label="return IsSeparator(_chars[_charPos]) || _chars[_charPos] == '\0';", span="2201-2201", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs"];
m1_1167 [label="Exit Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", span="2186-2186", cluster="Newtonsoft.Json.JsonTextReader.MatchValueWithTrailingSeparator(string)", file="TypeNameHandlingTests.cs"];
m1_1236 [label="Entry System.IO.TextReader.Close()", span="0-0", cluster="System.IO.TextReader.Close()", file="TypeNameHandlingTests.cs"];
m1_262 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1640-1640", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="TypeNameHandlingTests.cs"];
m1_919 [label="_charPos++", span="1642-1642", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="TypeNameHandlingTests.cs"];
m1_920 [label="OnNewLine(_charPos)", span="1643-1643", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="TypeNameHandlingTests.cs"];
m1_921 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", span="1640-1640", cluster="Newtonsoft.Json.JsonTextReader.ProcessLineFeed()", file="TypeNameHandlingTests.cs"];
m1_0 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs"];
m1_1 [label="reader == null", span="80-80", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs"];
m1_2 [label="throw new ArgumentNullException(nameof(reader));", span="82-82", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs"];
m1_3 [label="_reader = reader", span="85-85", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs"];
m1_4 [label="_lineNumber = 1", span="86-86", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs"];
m1_5 [label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs"];
m1_1143 [label="Entry Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2156-2156", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="TypeNameHandlingTests.cs"];
m1_1144 [label=setToken, span="2158-2158", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="TypeNameHandlingTests.cs"];
m1_1145 [label="SetToken(JsonToken.Comment, new string(_chars, initialPosition, endPosition - initialPosition))", span="2160-2160", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="TypeNameHandlingTests.cs"];
m1_1146 [label="Exit Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", span="2156-2156", cluster="Newtonsoft.Json.JsonTextReader.EndComment(bool, int, int)", file="TypeNameHandlingTests.cs"];
m1_66 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", span="328-328", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(Newtonsoft.Json.Utilities.StringReference, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out System.DateTime)", file="TypeNameHandlingTests.cs"];
m1_116 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="TypeNameHandlingTests.cs"];
m1_1237 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", span="82-82", cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear(Newtonsoft.Json.IArrayPool<char>)", file="TypeNameHandlingTests.cs"];
m1_516 [label="Entry Newtonsoft.Json.JsonReader.ReadDecimalString(string)", span="746-746", cluster="Newtonsoft.Json.JsonReader.ReadDecimalString(string)", file="TypeNameHandlingTests.cs"];
m1_1168 [label="Entry Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2204-2204", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1169 [label=c, span="2206-2206", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1187 [label="char.IsWhiteSpace(c)", span="2234-2234", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1170 [label="'}'", span="2208-2208", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1174 [label="'/'", span="2212-2212", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1179 [label="')'", span="2222-2222", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1182 [label="' '", span="2228-2228", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1171 [label="']'", span="2209-2209", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1172 [label="','", span="2210-2210", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1173 [label="return true;", span="2211-2211", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1175 [label="!EnsureChars(1, false)", span="2214-2214", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1176 [label="return false;", span="2216-2216", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1177 [label="var nextChart = _chars[_charPos + 1]", span="2219-2219", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1178 [label="return (nextChart == '*' || nextChart == '/');", span="2221-2221", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1180 [label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="2223-2223", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1181 [label="return true;", span="2225-2225", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1189 [label="return false;", span="2241-2241", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1183 [label="StringUtils.Tab", span="2229-2229", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1184 [label="StringUtils.LineFeed", span="2230-2230", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1185 [label="StringUtils.CarriageReturn", span="2231-2231", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1186 [label="return true;", span="2232-2232", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1188 [label="return true;", span="2236-2236", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_1190 [label="Exit Newtonsoft.Json.JsonTextReader.IsSeparator(char)", span="2204-2204", cluster="Newtonsoft.Json.JsonTextReader.IsSeparator(char)", file="TypeNameHandlingTests.cs"];
m1_13 [label="Entry Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="TypeNameHandlingTests.cs"];
m1_14 [label="_lineNumber++", span="123-123", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="TypeNameHandlingTests.cs"];
m1_15 [label="_lineStartPos = pos", span="124-124", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="TypeNameHandlingTests.cs"];
m1_16 [label="Exit Newtonsoft.Json.JsonTextReader.OnNewLine(int)", span="121-121", cluster="Newtonsoft.Json.JsonTextReader.OnNewLine(int)", file="TypeNameHandlingTests.cs"];
m1_1096 [label="Entry System.Convert.ToDouble(long)", span="0-0", cluster="System.Convert.ToDouble(long)", file="TypeNameHandlingTests.cs"];
m1_176 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="TypeNameHandlingTests.cs"];
m1_715 [label="Entry Newtonsoft.Json.Utilities.StringReference.StringReference()", span="29-29", cluster="Newtonsoft.Json.Utilities.StringReference.StringReference()", file="TypeNameHandlingTests.cs"];
m1_256 [label="Entry Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", span="891-891", cluster="Newtonsoft.Json.JsonReader.ReadIntoWrappedTypeObject()", file="TypeNameHandlingTests.cs"];
m1_517 [label="Entry Newtonsoft.Json.JsonReader.ReadDoubleString(string)", span="635-635", cluster="Newtonsoft.Json.JsonReader.ReadDoubleString(string)", file="TypeNameHandlingTests.cs"];
m1_12 [label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="48-48", cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="TypeNameHandlingTests.cs"];
m1_915 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="2312-2312", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="TypeNameHandlingTests.cs"];
m1_1214 [label="MatchValueWithTrailingSeparator(JsonConvert.PositiveInfinity)", span="2314-2314", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="TypeNameHandlingTests.cs"];
m1_1215 [label="_floatParseHandling == FloatParseHandling.Decimal", span="2316-2316", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="TypeNameHandlingTests.cs"];
m1_1218 [label="throw JsonReaderException.Create(this, ''Error parsing positive infinity value.'');", span="2325-2325", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="TypeNameHandlingTests.cs"];
m1_1216 [label="throw new JsonReaderException(''Cannot read Infinity as a decimal.'');", span="2318-2318", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="TypeNameHandlingTests.cs"];
m1_1217 [label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="2321-2321", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="TypeNameHandlingTests.cs"];
m1_1219 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="2312-2312", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="TypeNameHandlingTests.cs"];
m1_67 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", span="401-401", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTimeOffset(Newtonsoft.Json.Utilities.StringReference, string, System.Globalization.CultureInfo, out System.DateTimeOffset)", file="TypeNameHandlingTests.cs"];
m1_261 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1646-1646", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs"];
m1_922 [label="_charPos++", span="1648-1648", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs"];
m1_923 [label="EnsureChars(1, append) && _chars[_charPos] == StringUtils.LineFeed", span="1650-1650", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs"];
m1_924 [label="_charPos++", span="1652-1652", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs"];
m1_925 [label="OnNewLine(_charPos)", span="1655-1655", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs"];
m1_926 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", span="1646-1646", cluster="Newtonsoft.Json.JsonTextReader.ProcessCarriageReturn(bool)", file="TypeNameHandlingTests.cs"];
m1_125 [label="Entry Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_126 [label=_isEndOfFile, span="329-329", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_128 [label="int charsRequired = _charPos + relativePosition - _charsUsed + 1", span="334-334", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_130 [label="int charsRead = ReadData(append, charsRequired - totalCharsRead)", span="342-342", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_127 [label="return false;", span="331-331", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_129 [label="int totalCharsRead = 0", span="336-336", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_133 [label="totalCharsRead < charsRequired", span="351-351", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_134 [label="totalCharsRead < charsRequired", span="353-353", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_132 [label="totalCharsRead += charsRead", span="350-350", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_131 [label="charsRead == 0", span="345-345", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_135 [label="return false;", span="355-355", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_136 [label="return true;", span="357-357", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_137 [label="Exit Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", span="327-327", cluster="Newtonsoft.Json.JsonTextReader.ReadChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_1087 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="TypeNameHandlingTests.cs"];
m1_255 [label="Entry Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", span="878-878", cluster="Newtonsoft.Json.JsonReader.ReaderReadAndAssert()", file="TypeNameHandlingTests.cs"];
m1_911 [label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2244-2244", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs"];
m1_1191 [label="MatchValueWithTrailingSeparator(JsonConvert.True)", span="2249-2249", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs"];
m1_1192 [label="SetToken(JsonToken.Boolean, true)", span="2251-2251", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs"];
m1_1193 [label="throw JsonReaderException.Create(this, ''Error parsing boolean value.'');", span="2255-2255", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs"];
m1_1194 [label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="2244-2244", cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="TypeNameHandlingTests.cs"];
m1_62 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="932-932", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="TypeNameHandlingTests.cs"];
m1_8 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="TypeNameHandlingTests.cs"];
m1_9 [label="_stringBuffer.IsEmpty", span="115-115", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="TypeNameHandlingTests.cs"];
m1_10 [label="_stringBuffer = new StringBuffer(_arrayPool, 1024)", span="117-117", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="TypeNameHandlingTests.cs"];
m1_11 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", span="113-113", cluster="Newtonsoft.Json.JsonTextReader.EnsureBufferNotEmpty()", file="TypeNameHandlingTests.cs"];
m1_1092 [label="Entry System.Convert.ToInt32(string, int)", span="0-0", cluster="System.Convert.ToInt32(string, int)", file="TypeNameHandlingTests.cs"];
m1_1147 [label="Entry string.String(char[], int, int)", span="0-0", cluster="string.String(char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_68 [label="Entry Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_69 [label="int charByteCount = 2", span="215-215", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_70 [label="Buffer.BlockCopy(src, srcOffset * charByteCount, dst, dstOffset * charByteCount, count * charByteCount)", span="217-217", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_71 [label="Exit Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", span="213-213", cluster="Newtonsoft.Json.JsonTextReader.BlockCopyChars(char[], int, char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_916 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="2295-2295", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="TypeNameHandlingTests.cs"];
m1_1207 [label="MatchValueWithTrailingSeparator(JsonConvert.NegativeInfinity)", span="2297-2297", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="TypeNameHandlingTests.cs"];
m1_1208 [label="_floatParseHandling == FloatParseHandling.Decimal", span="2299-2299", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="TypeNameHandlingTests.cs"];
m1_1211 [label="throw JsonReaderException.Create(this, ''Error parsing negative infinity value.'');", span="2308-2308", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="TypeNameHandlingTests.cs"];
m1_1209 [label="throw new JsonReaderException(''Cannot read -Infinity as a decimal.'');", span="2301-2301", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="TypeNameHandlingTests.cs"];
m1_1210 [label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="2304-2304", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="TypeNameHandlingTests.cs"];
m1_1212 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="2295-2295", cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="TypeNameHandlingTests.cs"];
m1_666 [label="Entry System.Convert.ToChar(int)", span="0-0", cluster="System.Convert.ToChar(int)", file="TypeNameHandlingTests.cs"];
m1_58 [label="Entry Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_73 [label="int length = _chars.Length", span="224-224", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_74 [label="length - _charPos <= length * 0.1", span="225-225", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_75 [label="int count = _charsUsed - _charPos", span="227-227", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_76 [label="count > 0", span="228-228", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_77 [label="BlockCopyChars(_chars, _charPos, _chars, 0, count)", span="230-230", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_80 [label="_charsUsed = count", span="235-235", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_78 [label="_lineStartPos -= _charPos", span="233-233", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_79 [label="_charPos = 0", span="234-234", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_81 [label="_chars[_charsUsed] = '\0'", span="236-236", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_82 [label="Exit Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", span="220-220", cluster="Newtonsoft.Json.JsonTextReader.ShiftBufferIfNeeded()", file="TypeNameHandlingTests.cs"];
m1_260 [label="Entry Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="680-680", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="TypeNameHandlingTests.cs"];
m1_359 [label="return JsonReaderException.Create(this, ''Unexpected character encountered while parsing value: {0}.''.FormatWith(CultureInfo.InvariantCulture, c));", span="682-682", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="TypeNameHandlingTests.cs"];
m1_360 [label="Exit Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", span="680-680", cluster="Newtonsoft.Json.JsonTextReader.CreateUnexpectedCharacterException(char)", file="TypeNameHandlingTests.cs"];
m1_177 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="TypeNameHandlingTests.cs"];
m1_711 [label="Entry Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1282-1282", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="TypeNameHandlingTests.cs"];
m1_712 [label="_stringBuffer.Position = 0", span="1284-1284", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="TypeNameHandlingTests.cs"];
m1_713 [label="_stringReference = new StringReference()", span="1285-1285", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="TypeNameHandlingTests.cs"];
m1_714 [label="Exit Newtonsoft.Json.JsonTextReader.ClearRecentString()", span="1282-1282", cluster="Newtonsoft.Json.JsonTextReader.ClearRecentString()", file="TypeNameHandlingTests.cs"];
m1_264 [label="Entry Newtonsoft.Json.JsonTextReader.ReadFinished()", span="968-968", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_539 [label="EnsureChars(0, false)", span="970-970", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_540 [label="EatWhitespace(false)", span="972-972", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_546 [label="SetToken(JsonToken.None)", span="987-987", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_541 [label=_isEndOfFile, span="973-973", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_542 [label="return;", span="975-975", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_543 [label="_chars[_charPos] == '/'", span="977-977", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_544 [label="ParseComment(false)", span="979-979", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_545 [label="throw JsonReaderException.Create(this, ''Additional text encountered after finished reading JSON content: {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="983-983", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_547 [label="Exit Newtonsoft.Json.JsonTextReader.ReadFinished()", span="968-968", cluster="Newtonsoft.Json.JsonTextReader.ReadFinished()", file="TypeNameHandlingTests.cs"];
m1_64 [label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0", cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="TypeNameHandlingTests.cs"];
m1_175 [label="Entry Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2064-2064", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1102 [label="_charPos++", span="2067-2067", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1120 [label="EndComment(setToken, initialPosition, _charPos)", span="2107-2107", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1128 [label="EndComment(setToken, initialPosition, _charPos - 1)", span="2125-2125", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1133 [label="EndComment(setToken, initialPosition, _charPos)", span="2136-2136", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1138 [label="EndComment(setToken, initialPosition, _charPos)", span="2144-2144", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1103 [label="!EnsureChars(1, false)", span="2069-2069", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1104 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2071-2071", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1105 [label="bool singlelineComment", span="2074-2074", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1106 [label="_chars[_charPos] == '*'", span="2076-2076", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1118 [label="!singlelineComment", span="2102-2102", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1125 [label="!singlelineComment", span="2119-2119", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1132 [label=singlelineComment, span="2134-2134", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1137 [label=singlelineComment, span="2142-2142", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1107 [label="singlelineComment = false", span="2078-2078", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1108 [label="_chars[_charPos] == '/'", span="2080-2080", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1109 [label="singlelineComment = true", span="2082-2082", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1110 [label="throw JsonReaderException.Create(this, ''Error parsing comment. Expected: *, got {0}.''.FormatWith(CultureInfo.InvariantCulture, _chars[_charPos]));", span="2086-2086", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1111 [label="_charPos++", span="2089-2089", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1112 [label="int initialPosition = _charPos", span="2091-2091", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1113 [label=true, span="2093-2093", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1114 [label="_chars[_charPos]", span="2095-2095", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1115 [label="'\0'", span="2097-2097", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1123 [label="'*'", span="2116-2116", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1131 [label="StringUtils.CarriageReturn", span="2133-2133", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1136 [label="StringUtils.LineFeed", span="2141-2141", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1141 [label="_charPos++", span="2150-2150", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1116 [label="_charsUsed == _charPos", span="2098-2098", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1117 [label="ReadData(true) == 0", span="2100-2100", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1122 [label="_charPos++", span="2113-2113", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1119 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing comment.'');", span="2104-2104", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1121 [label="return;", span="2108-2108", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1124 [label="_charPos++", span="2117-2117", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1126 [label="EnsureChars(0, true)", span="2121-2121", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1127 [label="_chars[_charPos] == '/'", span="2123-2123", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1129 [label="_charPos++", span="2127-2127", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1130 [label="return;", span="2128-2128", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1135 [label="ProcessCarriageReturn(true)", span="2139-2139", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1134 [label="return;", span="2137-2137", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1140 [label="ProcessLineFeed()", span="2147-2147", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1139 [label="return;", span="2145-2145", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_1142 [label="Exit Newtonsoft.Json.JsonTextReader.ParseComment(bool)", span="2064-2064", cluster="Newtonsoft.Json.JsonTextReader.ParseComment(bool)", file="TypeNameHandlingTests.cs"];
m1_60 [label="Entry Newtonsoft.Json.JsonReader.SetPostValueState(bool)", span="996-996", cluster="Newtonsoft.Json.JsonReader.SetPostValueState(bool)", file="TypeNameHandlingTests.cs"];
m1_1091 [label="Entry double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", span="0-0", cluster="double.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out double)", file="TypeNameHandlingTests.cs"];
m1_59 [label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1017-1017", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_559 [label="int charPos = _charPos", span="1019-1019", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_570 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1036-1036", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_574 [label="throw JsonReaderException.Create(this, ''Unterminated string. Expected delimiter: {0}.''.FormatWith(CultureInfo.InvariantCulture, quote));", span="1044-1044", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_634 [label="_chars[charPos - 1] == quote", span="1160-1160", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_560 [label="int initialPosition = _charPos", span="1020-1020", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_564 [label="_chars[charPos++]", span="1026-1026", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_561 [label="int lastWritePosition = _charPos", span="1021-1021", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_636 [label="initialPosition == lastWritePosition", span="1164-1164", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_637 [label="_stringReference = new StringReference(_chars, initialPosition, charPos - initialPosition)", span="1166-1166", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_562 [label="_stringBuffer.Position = 0", span="1022-1022", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_614 [label="WriteCharToBuffer(highSurrogate, lastWritePosition, escapeStartPos)", span="1124-1124", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_622 [label="WriteCharToBuffer(writeChar, lastWritePosition, escapeStartPos)", span="1144-1144", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_563 [label=true, span="1024-1024", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_565 [label="'\0'", span="1028-1028", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_571 [label="'\\'", span="1040-1040", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_624 [label="StringUtils.CarriageReturn", span="1148-1148", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_628 [label="StringUtils.LineFeed", span="1153-1153", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_632 [label="''''", span="1158-1158", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_566 [label="_charsUsed == charPos - 1", span="1029-1029", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_567 [label="charPos--", span="1031-1031", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_572 [label="_charPos = charPos", span="1041-1041", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_575 [label="int escapeStartPos = charPos - 1", span="1048-1048", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_576 [label="char currentChar = _chars[charPos]", span="1050-1050", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_577 [label="charPos++", span="1051-1051", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_568 [label="ReadData(true) == 0", span="1033-1033", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_569 [label="_charPos = charPos", span="1035-1035", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_573 [label="!EnsureChars(0, true)", span="1042-1042", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_579 [label=currentChar, span="1055-1055", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_595 [label="writeChar = currentChar", span="1078-1078", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_620 [label="throw JsonReaderException.Create(this, ''Bad JSON escape sequence: {0}.''.FormatWith(CultureInfo.InvariantCulture, @''\'' + currentChar));", span="1140-1140", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_578 [label="char writeChar", span="1053-1053", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_597 [label="_charPos = charPos", span="1081-1081", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_580 [label="'b'", span="1057-1057", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_582 [label="'t'", span="1060-1060", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_584 [label="'n'", span="1063-1063", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_586 [label="'f'", span="1066-1066", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_588 [label="'r'", span="1069-1069", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_590 [label="'\\'", span="1072-1072", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_592 [label="''''", span="1075-1075", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_596 [label="'u'", span="1080-1080", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_619 [label="_charPos = charPos", span="1139-1139", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_581 [label="writeChar = '\b'", span="1058-1058", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_583 [label="writeChar = '\t'", span="1061-1061", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_585 [label="writeChar = '\n'", span="1064-1064", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_587 [label="writeChar = '\f'", span="1067-1067", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_589 [label="writeChar = '\r'", span="1070-1070", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_591 [label="writeChar = '\\'", span="1073-1073", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_593 [label="'\''", span="1076-1076", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_594 [label="'/'", span="1077-1077", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_598 [label="writeChar = ParseUnicode()", span="1082-1082", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_599 [label="StringUtils.IsLowSurrogate(writeChar)", span="1084-1084", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_601 [label="StringUtils.IsHighSurrogate(writeChar)", span="1089-1089", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_605 [label="char highSurrogate = writeChar", span="1101-1101", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_600 [label="writeChar = UnicodeReplacementChar", span="1087-1087", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_602 [label="bool anotherHighSurrogate", span="1091-1091", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_618 [label="charPos = _charPos", span="1136-1136", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_603 [label="anotherHighSurrogate = false", span="1096-1096", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_604 [label="EnsureChars(2, true) && _chars[_charPos] == '\\' && _chars[_charPos + 1] == 'u'", span="1099-1099", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_617 [label=anotherHighSurrogate, span="1133-1133", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_616 [label="writeChar = UnicodeReplacementChar", span="1131-1131", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_606 [label="_charPos += 2", span="1103-1103", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_607 [label="writeChar = ParseUnicode()", span="1104-1104", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_608 [label="StringUtils.IsLowSurrogate(writeChar)", span="1106-1106", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_609 [label="StringUtils.IsHighSurrogate(writeChar)", span="1110-1110", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_613 [label="EnsureBufferNotEmpty()", span="1122-1122", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_610 [label="highSurrogate = UnicodeReplacementChar", span="1113-1113", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_612 [label="highSurrogate = UnicodeReplacementChar", span="1119-1119", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_611 [label="anotherHighSurrogate = true", span="1114-1114", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_615 [label="lastWritePosition = _charPos", span="1125-1125", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_621 [label="EnsureBufferNotEmpty()", span="1143-1143", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_623 [label="lastWritePosition = charPos", span="1146-1146", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_625 [label="_charPos = charPos - 1", span="1149-1149", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_626 [label="ProcessCarriageReturn(true)", span="1150-1150", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_627 [label="charPos = _charPos", span="1151-1151", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_629 [label="_charPos = charPos - 1", span="1154-1154", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_630 [label="ProcessLineFeed()", span="1155-1155", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_631 [label="charPos = _charPos", span="1156-1156", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_633 [label="'\''", span="1159-1159", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_635 [label="charPos--", span="1162-1162", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_639 [label="charPos > lastWritePosition", span="1172-1172", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_640 [label="_stringBuffer.Append(_arrayPool, _chars, lastWritePosition, charPos - lastWritePosition)", span="1174-1174", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_642 [label="charPos++", span="1180-1180", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_638 [label="EnsureBufferNotEmpty()", span="1170-1170", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_641 [label="_stringReference = new StringReference(_stringBuffer.InternalBuffer, 0, _stringBuffer.Position)", span="1177-1177", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_643 [label="_charPos = charPos", span="1181-1181", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_644 [label="return;", span="1182-1182", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_645 [label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="1017-1017", cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="TypeNameHandlingTests.cs"];
m1_172 [label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1288-1288", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_716 [label=true, span="1290-1290", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_717 [label="char currentChar = _chars[_charPos]", span="1292-1292", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_718 [label=currentChar, span="1294-1294", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_751 [label="char.IsWhiteSpace(currentChar)", span="1343-1343", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_753 [label="throw JsonReaderException.Create(this, ''After parsing a value an unexpected character was encountered: {0}.''.FormatWith(CultureInfo.InvariantCulture, currentChar));", span="1350-1350", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_719 [label="'\0'", span="1296-1296", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_725 [label="'}'", span="1310-1310", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_729 [label="']'", span="1314-1314", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_733 [label="')'", span="1318-1318", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_737 [label="'/'", span="1322-1322", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_740 [label="','", span="1325-1325", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_744 [label="' '", span="1331-1331", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_747 [label="StringUtils.CarriageReturn", span="1336-1336", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_749 [label="StringUtils.LineFeed", span="1339-1339", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_720 [label="_charsUsed == _charPos", span="1297-1297", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_721 [label="ReadData(false) == 0", span="1299-1299", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_724 [label="_charPos++", span="1307-1307", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_722 [label="_currentState = State.Finished", span="1301-1301", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_723 [label="return false;", span="1302-1302", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_726 [label="_charPos++", span="1311-1311", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_727 [label="SetToken(JsonToken.EndObject)", span="1312-1312", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_728 [label="return true;", span="1313-1313", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_730 [label="_charPos++", span="1315-1315", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_731 [label="SetToken(JsonToken.EndArray)", span="1316-1316", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_732 [label="return true;", span="1317-1317", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_734 [label="_charPos++", span="1319-1319", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_735 [label="SetToken(JsonToken.EndConstructor)", span="1320-1320", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_736 [label="return true;", span="1321-1321", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_738 [label="ParseComment(true)", span="1323-1323", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_739 [label="return true;", span="1324-1324", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_741 [label="_charPos++", span="1326-1326", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_742 [label="SetStateBasedOnCurrent()", span="1329-1329", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_743 [label="return false;", span="1330-1330", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_745 [label="StringUtils.Tab", span="1332-1332", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_746 [label="_charPos++", span="1334-1334", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_748 [label="ProcessCarriageReturn(false)", span="1337-1337", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_750 [label="ProcessLineFeed()", span="1340-1340", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_752 [label="_charPos++", span="1346-1346", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_754 [label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue()", span="1288-1288", cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue()", file="TypeNameHandlingTests.cs"];
m1_254 [label="Entry Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="990-990", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs"];
m1_548 [label="_charsUsed == _charPos", span="992-992", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs"];
m1_549 [label="ReadData(false) == 0", span="994-994", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs"];
m1_552 [label="_charPos++", span="1002-1002", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs"];
m1_550 [label="_isEndOfFile = true", span="996-996", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs"];
m1_553 [label="return false;", span="1005-1005", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs"];
m1_551 [label="return true;", span="997-997", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs"];
m1_554 [label="Exit Newtonsoft.Json.JsonTextReader.ReadNullChar()", span="990-990", cluster="Newtonsoft.Json.JsonTextReader.ReadNullChar()", file="TypeNameHandlingTests.cs"];
m1_61 [label="Entry Newtonsoft.Json.Utilities.StringReference.ToString()", span="62-62", cluster="Newtonsoft.Json.Utilities.StringReference.ToString()", file="TypeNameHandlingTests.cs"];
m1_1098 [label="Entry Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2058-2058", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs"];
m1_1099 [label="return System.Numerics.BigInteger.Parse(number, culture);", span="2060-2060", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs"];
m1_1100 [label="Exit Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", span="2058-2058", cluster="Newtonsoft.Json.JsonTextReader.BigIntegerParse(string, System.Globalization.CultureInfo)", file="TypeNameHandlingTests.cs"];
m1_814 [label="Entry char.IsLetterOrDigit(char)", span="0-0", cluster="char.IsLetterOrDigit(char)", file="TypeNameHandlingTests.cs"];
m1_515 [label="Entry Newtonsoft.Json.JsonReader.ReadInt32String(string)", span="442-442", cluster="Newtonsoft.Json.JsonReader.ReadInt32String(string)", file="TypeNameHandlingTests.cs"];
m1_173 [label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1658-1658", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_927 [label="bool finished = false", span="1660-1660", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_945 [label="return (!oneOrMore || ateWhitespace);", span="1701-1701", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_928 [label="bool ateWhitespace = false", span="1661-1661", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_929 [label="!finished", span="1662-1662", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_930 [label="char currentChar = _chars[_charPos]", span="1664-1664", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_931 [label=currentChar, span="1666-1666", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_941 [label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="1688-1688", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_932 [label="'\0'", span="1668-1668", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_937 [label="StringUtils.CarriageReturn", span="1681-1681", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_939 [label="StringUtils.LineFeed", span="1684-1684", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", color=red, community=0, file="TypeNameHandlingTests.cs"];
m1_933 [label="_charsUsed == _charPos", span="1669-1669", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_934 [label="ReadData(false) == 0", span="1671-1671", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_936 [label="_charPos++", span="1678-1678", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_935 [label="finished = true", span="1673-1673", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_938 [label="ProcessCarriageReturn(false)", span="1682-1682", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_940 [label="ProcessLineFeed()", span="1685-1685", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_942 [label="ateWhitespace = true", span="1690-1690", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_944 [label="finished = true", span="1695-1695", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_943 [label="_charPos++", span="1691-1691", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_946 [label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", span="1658-1658", cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(bool)", file="TypeNameHandlingTests.cs"];
m1_918 [label="Entry char.IsNumber(char)", span="0-0", cluster="char.IsNumber(char)", file="TypeNameHandlingTests.cs"];
m1_257 [label="Entry Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", span="582-582", cluster="Newtonsoft.Json.JsonReader.ReadArrayIntoByteArray()", file="TypeNameHandlingTests.cs"];
m1_120 [label="Entry Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_121 [label="_charPos + relativePosition >= _charsUsed", span="319-319", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_122 [label="return ReadChars(relativePosition, append);", span="321-321", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_123 [label="return true;", span="324-324", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_124 [label="Exit Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", span="317-317", cluster="Newtonsoft.Json.JsonTextReader.EnsureChars(int, bool)", file="TypeNameHandlingTests.cs"];
m1_182 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="TypeNameHandlingTests.cs"];
m1_183 [label="return (DateTime?)ReadStringValue(ReadType.ReadAsDateTime);", span="432-432", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="TypeNameHandlingTests.cs"];
m1_184 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="430-430", cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="TypeNameHandlingTests.cs"];
m1_117 [label="Entry Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", span="43-43", cluster="Newtonsoft.Json.Utilities.BufferUtils.RentBuffer(Newtonsoft.Json.IArrayPool<char>, int)", file="TypeNameHandlingTests.cs"];
m1_86 [label="Entry Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_87 [label=_isEndOfFile, span="247-247", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_89 [label="_charsUsed + charsRequired >= _chars.Length - 1", span="253-253", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_90 [label=append, span="255-255", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_91 [label="int newArrayLength = Math.Max(_chars.Length * 2, _charsUsed + charsRequired + 1)", span="258-258", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_97 [label="remainingCharCount + charsRequired + 1 >= _chars.Length", span="273-273", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_98 [label="char[] dst = BufferUtils.RentBuffer(_arrayPool, remainingCharCount + charsRequired + 1)", span="276-276", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_88 [label="return 0;", span="249-249", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_108 [label="int attemptCharReadCount = _chars.Length - _charsUsed - 1", span="302-302", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_96 [label="int remainingCharCount = _charsUsed - _charPos", span="271-271", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_92 [label="char[] dst = BufferUtils.RentBuffer(_arrayPool, newArrayLength)", span="261-261", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_93 [label="BlockCopyChars(_chars, 0, dst, 0, _chars.Length)", span="263-263", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_95 [label="_chars = dst", span="267-267", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_94 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="265-265", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_99 [label="remainingCharCount > 0", span="278-278", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_100 [label="BlockCopyChars(_chars, _charPos, dst, 0, remainingCharCount)", span="280-280", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_103 [label="remainingCharCount > 0", span="290-290", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_104 [label="BlockCopyChars(_chars, _charPos, _chars, 0, remainingCharCount)", span="292-292", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_107 [label="_charsUsed = remainingCharCount", span="298-298", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_102 [label="_chars = dst", span="285-285", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_101 [label="BufferUtils.ReturnBuffer(_arrayPool, _chars)", span="283-283", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_105 [label="_lineStartPos -= _charPos", span="296-296", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_106 [label="_charPos = 0", span="297-297", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_109 [label="int charsRead = _reader.Read(_chars, _charsUsed, attemptCharReadCount)", span="304-304", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_110 [label="_charsUsed += charsRead", span="306-306", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_111 [label="charsRead == 0", span="308-308", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_114 [label="return charsRead;", span="314-314", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_112 [label="_isEndOfFile = true", span="310-310", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_113 [label="_chars[_charsUsed] = '\0'", span="313-313", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_115 [label="Exit Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", span="245-245", cluster="Newtonsoft.Json.JsonTextReader.ReadData(bool, int)", file="TypeNameHandlingTests.cs"];
m1_63 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="TypeNameHandlingTests.cs"];
m1_445 [label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="1043-1043", cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="TypeNameHandlingTests.cs"];
m1_355 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="TypeNameHandlingTests.cs"];
m1_65 [label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="949-949", cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="TypeNameHandlingTests.cs"];
m1_259 [label="Entry Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="804-804", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs"];
m1_439 [label="_charPos++", span="806-806", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs"];
m1_440 [label="_currentState != State.PostValue", span="808-808", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs"];
m1_441 [label="SetToken(JsonToken.Undefined)", span="810-810", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs"];
m1_443 [label="SetStateBasedOnCurrent()", span="814-814", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs"];
m1_442 [label="throw CreateUnexpectedCharacterException(',');", span="811-811", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs"];
m1_444 [label="Exit Newtonsoft.Json.JsonTextReader.ProcessValueComma()", span="804-804", cluster="Newtonsoft.Json.JsonTextReader.ProcessValueComma()", file="TypeNameHandlingTests.cs"];
m1_646 [label="Entry Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1199-1199", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs"];
m1_657 [label="char writeChar", span="1201-1201", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs"];
m1_658 [label="EnsureChars(4, true)", span="1202-1202", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs"];
m1_663 [label="return writeChar;", span="1213-1213", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs"];
m1_659 [label="char hexChar = Convert.ToChar(ConvertUtils.HexTextToInt(_chars, _charPos, _charPos + 4))", span="1204-1204", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs"];
m1_662 [label="throw JsonReaderException.Create(this, ''Unexpected end while parsing unicode character.'');", span="1211-1211", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs"];
m1_660 [label="writeChar = hexChar", span="1205-1205", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs"];
m1_661 [label="_charPos += 4", span="1207-1207", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs"];
m1_664 [label="Exit Newtonsoft.Json.JsonTextReader.ParseUnicode()", span="1199-1199", cluster="Newtonsoft.Json.JsonTextReader.ParseUnicode()", file="TypeNameHandlingTests.cs"];
m1_170 [label="Entry Newtonsoft.Json.JsonTextReader.ParseValue()", span="1513-1513", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_832 [label=true, span="1515-1515", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_833 [label="char currentChar = _chars[_charPos]", span="1517-1517", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_834 [label=currentChar, span="1519-1519", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_842 [label="ParseString(currentChar, ReadType.Read)", span="1536-1536", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_904 [label="char.IsWhiteSpace(currentChar)", span="1623-1623", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_906 [label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="1629-1629", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_909 [label="throw CreateUnexpectedCharacterException(currentChar);", span="1635-1635", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_835 [label="'\0'", span="1521-1521", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_840 [label="''''", span="1534-1534", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_844 [label="'t'", span="1538-1538", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_847 [label="'f'", span="1541-1541", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_850 [label="'n'", span="1544-1544", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_861 [label="'N'", span="1568-1568", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_864 [label="'I'", span="1571-1571", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_867 [label="'-'", span="1574-1574", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_872 [label="'/'", span="1584-1584", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_875 [label="'u'", span="1587-1587", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_878 [label="'{'", span="1590-1590", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_882 [label="'['", span="1594-1594", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_886 [label="']'", span="1598-1598", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_890 [label="','", span="1602-1602", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_893 [label="')'", span="1607-1607", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_897 [label="StringUtils.CarriageReturn", span="1611-1611", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_899 [label="StringUtils.LineFeed", span="1614-1614", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_901 [label="' '", span="1617-1617", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_836 [label="_charsUsed == _charPos", span="1522-1522", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_837 [label="ReadData(false) == 0", span="1524-1524", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_839 [label="_charPos++", span="1531-1531", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_838 [label="return false;", span="1526-1526", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_841 [label="'\''", span="1535-1535", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_843 [label="return true;", span="1537-1537", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_845 [label="ParseTrue()", span="1539-1539", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_846 [label="return true;", span="1540-1540", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_848 [label="ParseFalse()", span="1542-1542", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_849 [label="return true;", span="1543-1543", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_851 [label="EnsureChars(1, true)", span="1545-1545", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_852 [label="char next = _chars[_charPos + 1]", span="1547-1547", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_858 [label="_charPos++", span="1564-1564", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_853 [label="next == 'u'", span="1549-1549", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_855 [label="next == 'e'", span="1553-1553", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_854 [label="ParseNull()", span="1551-1551", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_856 [label="ParseConstructor()", span="1555-1555", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_857 [label="throw CreateUnexpectedCharacterException(_chars[_charPos]);", span="1559-1559", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_859 [label="throw CreateUnexpectedEndException();", span="1565-1565", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_860 [label="return true;", span="1567-1567", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_862 [label="ParseNumberNaN()", span="1569-1569", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_863 [label="return true;", span="1570-1570", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_865 [label="ParseNumberPositiveInfinity()", span="1572-1572", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_866 [label="return true;", span="1573-1573", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_868 [label="EnsureChars(1, true) && _chars[_charPos + 1] == 'I'", span="1575-1575", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_869 [label="ParseNumberNegativeInfinity()", span="1577-1577", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_870 [label="ParseNumber(ReadType.Read)", span="1581-1581", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_871 [label="return true;", span="1583-1583", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_873 [label="ParseComment(true)", span="1585-1585", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_874 [label="return true;", span="1586-1586", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_876 [label="ParseUndefined()", span="1588-1588", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_877 [label="return true;", span="1589-1589", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_879 [label="_charPos++", span="1591-1591", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_880 [label="SetToken(JsonToken.StartObject)", span="1592-1592", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_881 [label="return true;", span="1593-1593", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_883 [label="_charPos++", span="1595-1595", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_884 [label="SetToken(JsonToken.StartArray)", span="1596-1596", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_885 [label="return true;", span="1597-1597", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_887 [label="_charPos++", span="1599-1599", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_888 [label="SetToken(JsonToken.EndArray)", span="1600-1600", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_889 [label="return true;", span="1601-1601", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_891 [label="SetToken(JsonToken.Undefined)", span="1605-1605", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_892 [label="return true;", span="1606-1606", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_894 [label="_charPos++", span="1608-1608", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_895 [label="SetToken(JsonToken.EndConstructor)", span="1609-1609", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_896 [label="return true;", span="1610-1610", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_898 [label="ProcessCarriageReturn(false)", span="1612-1612", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_900 [label="ProcessLineFeed()", span="1615-1615", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_902 [label="StringUtils.Tab", span="1618-1618", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_903 [label="_charPos++", span="1620-1620", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_905 [label="_charPos++", span="1626-1626", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_907 [label="ParseNumber(ReadType.Read)", span="1631-1631", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_908 [label="return true;", span="1632-1632", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_910 [label="Exit Newtonsoft.Json.JsonTextReader.ParseValue()", span="1513-1513", cluster="Newtonsoft.Json.JsonTextReader.ParseValue()", file="TypeNameHandlingTests.cs"];
m1_356 [label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1787-1787", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_983 [label="ShiftBufferIfNeeded()", span="1789-1789", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_993 [label="readType == ReadType.ReadAsString", span="1807-1807", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1006 [label="readType == ReadType.ReadAsInt32", span="1842-1842", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1023 [label="readType == ReadType.ReadAsDecimal", span="1884-1884", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1038 [label="readType == ReadType.ReadAsDouble", span="1924-1924", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_984 [label="char firstChar = _chars[_charPos]", span="1791-1791", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_985 [label="int initialPosition = _charPos", span="1792-1792", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_991 [label="bool singleDigit = (char.IsDigit(firstChar) && _stringReference.Length == 1)", span="1804-1804", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_992 [label="bool nonBase10 = (firstChar == '0' && _stringReference.Length > 1 && _stringReference.Chars[_stringReference.StartIndex + 1] != '.' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'e' && _stringReference.Chars[_stringReference.StartIndex + 1] != 'E')", span="1805-1805", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1008 [label="numberValue = firstChar - 48", span="1847-1847", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1025 [label="numberValue = (decimal)firstChar - 48", span="1889-1889", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1040 [label="numberValue = (double)firstChar - 48", span="1929-1929", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1054 [label="numberValue = (long)firstChar - 48", span="1969-1969", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_986 [label="ReadNumberIntoBuffer()", span="1794-1794", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_988 [label="_stringReference = new StringReference(_chars, initialPosition, _charPos - initialPosition)", span="1799-1799", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_987 [label="SetPostValueState(true)", span="1797-1797", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_989 [label="object numberValue", span="1801-1801", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_990 [label="JsonToken numberType", span="1802-1802", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1085 [label="SetToken(numberType, numberValue, false)", span="2049-2049", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1007 [label=singleDigit, span="1844-1844", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1024 [label=singleDigit, span="1886-1886", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1039 [label=singleDigit, span="1926-1926", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1053 [label=singleDigit, span="1966-1966", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_995 [label=nonBase10, span="1812-1812", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1009 [label=nonBase10, span="1849-1849", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1026 [label=nonBase10, span="1891-1891", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1041 [label=nonBase10, span="1931-1931", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1056 [label=nonBase10, span="1972-1972", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_994 [label="string number = _stringReference.ToString()", span="1809-1809", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_996 [label="number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)", span="1816-1816", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_997 [label="Convert.ToInt64(number, 16)", span="1818-1818", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_998 [label="Convert.ToInt64(number, 8)", span="1822-1822", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1000 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1827-1827", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1002 [label="!double.TryParse(number, NumberStyles.Float, CultureInfo.InvariantCulture, out value)", span="1833-1833", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1005 [label="numberValue = number", span="1840-1840", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1001 [label="double value", span="1832-1832", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_999 [label=Exception, span="1825-1825", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1004 [label="numberType = JsonToken.String", span="1839-1839", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1003 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1835-1835", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1010 [label="string number = _stringReference.ToString()", span="1851-1851", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1015 [label="int value", span="1866-1866", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1011 [label="int integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt32(number, 16) : Convert.ToInt32(number, 8)", span="1855-1855", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1014 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1861-1861", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1012 [label="numberValue = integer", span="1857-1857", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1013 [label=Exception, span="1859-1859", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1022 [label="numberType = JsonToken.Integer", span="1882-1882", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1016 [label="ParseResult parseResult = ConvertUtils.Int32TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1867-1867", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1017 [label="parseResult == ParseResult.Success", span="1868-1868", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1018 [label="numberValue = value", span="1870-1870", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1019 [label="parseResult == ParseResult.Overflow", span="1872-1872", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1020 [label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large or small for an Int32.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1874-1874", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1021 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid integer.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1878-1878", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1027 [label="string number = _stringReference.ToString()", span="1893-1893", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1032 [label="string number = _stringReference.ToString()", span="1909-1909", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1028 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1898-1898", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1031 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1904-1904", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1029 [label="numberValue = Convert.ToDecimal(integer)", span="1900-1900", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1030 [label=Exception, span="1902-1902", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1037 [label="numberType = JsonToken.Float", span="1922-1922", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1033 [label="decimal value", span="1911-1911", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1034 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out value)", span="1912-1912", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1035 [label="numberValue = value", span="1914-1914", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1036 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1918-1918", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1042 [label="string number = _stringReference.ToString()", span="1933-1933", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1047 [label="string number = _stringReference.ToString()", span="1949-1949", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1043 [label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1938-1938", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1046 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1944-1944", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1044 [label="numberValue = Convert.ToDouble(integer)", span="1940-1940", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1045 [label=Exception, span="1942-1942", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1052 [label="numberType = JsonToken.Float", span="1962-1962", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1048 [label="double value", span="1951-1951", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1049 [label="double.TryParse(number, NumberStyles.Float, CultureInfo.InvariantCulture, out value)", span="1952-1952", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1050 [label="numberValue = value", span="1954-1954", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1051 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid double.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="1958-1958", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1055 [label="numberType = JsonToken.Integer", span="1970-1970", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1057 [label="string number = _stringReference.ToString()", span="1974-1974", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1062 [label="long value", span="1989-1989", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1058 [label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase) ? Convert.ToInt64(number, 16) : Convert.ToInt64(number, 8)", span="1978-1978", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1060 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number), ex);", span="1982-1982", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1059 [label=Exception, span="1980-1980", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1061 [label="numberType = JsonToken.Integer", span="1985-1985", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1063 [label="ParseResult parseResult = ConvertUtils.Int64TryParse(_stringReference.Chars, _stringReference.StartIndex, _stringReference.Length, out value)", span="1990-1990", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1064 [label="parseResult == ParseResult.Success", span="1991-1991", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1065 [label="numberValue = value", span="1993-1993", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1067 [label="parseResult == ParseResult.Overflow", span="1996-1996", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1066 [label="numberType = JsonToken.Integer", span="1994-1994", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1068 [label="string number = _stringReference.ToString()", span="1999-1999", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1073 [label="string number = _stringReference.ToString()", span="2014-2014", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1069 [label="number.Length > MaximumJavascriptIntegerCharacterLength", span="2001-2001", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1071 [label="numberValue = BigIntegerParse(number, CultureInfo.InvariantCulture)", span="2006-2006", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1070 [label="throw JsonReaderException.Create(this, ''JSON integer {0} is too large to parse.''.FormatWith(CultureInfo.InvariantCulture, _stringReference.ToString()));", span="2003-2003", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1072 [label="numberType = JsonToken.Integer", span="2007-2007", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1074 [label="_floatParseHandling == FloatParseHandling.Decimal", span="2016-2016", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1076 [label="decimal.TryParse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture, out d)", span="2019-2019", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1078 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid decimal.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2025-2025", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1080 [label="double.TryParse(number, NumberStyles.Float | NumberStyles.AllowThousands, CultureInfo.InvariantCulture, out d)", span="2031-2031", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1082 [label="throw JsonReaderException.Create(this, ''Input string '{0}' is not a valid number.''.FormatWith(CultureInfo.InvariantCulture, number));", span="2037-2037", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1075 [label="decimal d", span="2018-2018", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1079 [label="double d", span="2030-2030", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1077 [label="numberValue = d", span="2021-2021", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1081 [label="numberValue = d", span="2033-2033", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1083 [label="numberType = JsonToken.Float", span="2041-2041", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1084 [label="ClearRecentString()", span="2046-2046", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1086 [label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", span="1787-1787", cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(Newtonsoft.Json.ReadType)", file="TypeNameHandlingTests.cs"];
m1_1094 [label="Entry System.Convert.ToDecimal(long)", span="0-0", cluster="System.Convert.ToDecimal(long)", file="TypeNameHandlingTests.cs"];
m1_178 [label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="TypeNameHandlingTests.cs"];
m1_179 [label="return (int?)ReadNumberValue(ReadType.ReadAsInt32);", span="423-423", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="TypeNameHandlingTests.cs"];
m1_180 [label="Exit Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="421-421", cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="TypeNameHandlingTests.cs"];
m1_171 [label="Entry Newtonsoft.Json.JsonTextReader.ParseObject()", span="1357-1357", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_755 [label=true, span="1359-1359", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_756 [label="char currentChar = _chars[_charPos]", span="1361-1361", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_757 [label=currentChar, span="1363-1363", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_777 [label="char.IsWhiteSpace(currentChar)", span="1397-1397", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_758 [label="'\0'", span="1365-1365", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_763 [label="'}'", span="1378-1378", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_767 [label="'/'", span="1382-1382", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_770 [label="StringUtils.CarriageReturn", span="1385-1385", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_772 [label="StringUtils.LineFeed", span="1388-1388", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_774 [label="' '", span="1391-1391", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_759 [label="_charsUsed == _charPos", span="1366-1366", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_760 [label="ReadData(false) == 0", span="1368-1368", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_762 [label="_charPos++", span="1375-1375", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_761 [label="return false;", span="1370-1370", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_764 [label="SetToken(JsonToken.EndObject)", span="1379-1379", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_765 [label="_charPos++", span="1380-1380", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_766 [label="return true;", span="1381-1381", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_768 [label="ParseComment(true)", span="1383-1383", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_769 [label="return true;", span="1384-1384", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_771 [label="ProcessCarriageReturn(false)", span="1386-1386", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_773 [label="ProcessLineFeed()", span="1389-1389", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_775 [label="StringUtils.Tab", span="1392-1392", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_776 [label="_charPos++", span="1394-1394", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_778 [label="_charPos++", span="1400-1400", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_779 [label="return ParseProperty();", span="1404-1404", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_780 [label="Exit Newtonsoft.Json.JsonTextReader.ParseObject()", span="1357-1357", cluster="Newtonsoft.Json.JsonTextReader.ParseObject()", file="TypeNameHandlingTests.cs"];
m1_1090 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="TypeNameHandlingTests.cs"];
m1_1241 [label="Newtonsoft.Json.JsonTextReader", span="", file="TypeNameHandlingTests.cs"];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=0, style=solid];
m0_51 -> m0_477  [key=0, style=solid];
m0_51 -> m0_478  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_479  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_481  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_483  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_485  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_487  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_489  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_493  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_495  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_497  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_500  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_51 -> m0_33  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_51 -> m0_437  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_51 -> m0_110  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_51 -> m0_431  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_51 -> m0_424  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_51 -> m0_443  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_51 -> m0_471  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_51 -> m0_449  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_51 -> m0_463  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract CreateContract"];
m0_51 -> m0_52  [key=0, style=solid, color=green];
m0_51 -> m0_8  [key=2, style=dotted, color=green];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_502  [key=2, style=dotted];
m0_477 -> m0_480  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_482  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_484  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_486  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_488  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_490  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_492  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_494  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_496  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_498  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_477 -> m0_499  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_478 -> m0_479  [key=0, style=solid];
m0_478 -> m0_480  [key=0, style=solid];
m0_478 -> m0_503  [key=2, style=dotted];
m0_479 -> m0_501  [key=0, style=solid];
m0_479 -> m0_437  [key=2, style=dotted];
m0_481 -> m0_501  [key=0, style=solid];
m0_481 -> m0_110  [key=2, style=dotted];
m0_483 -> m0_501  [key=0, style=solid];
m0_483 -> m0_431  [key=2, style=dotted];
m0_485 -> m0_501  [key=0, style=solid];
m0_485 -> m0_424  [key=2, style=dotted];
m0_487 -> m0_501  [key=0, style=solid];
m0_487 -> m0_443  [key=2, style=dotted];
m0_489 -> m0_501  [key=0, style=solid];
m0_489 -> m0_424  [key=2, style=dotted];
m0_491 -> m0_501  [key=0, style=solid];
m0_491 -> m0_431  [key=2, style=dotted];
m0_493 -> m0_501  [key=0, style=solid];
m0_493 -> m0_471  [key=2, style=dotted];
m0_495 -> m0_501  [key=0, style=solid];
m0_495 -> m0_449  [key=2, style=dotted];
m0_497 -> m0_501  [key=0, style=solid];
m0_497 -> m0_463  [key=2, style=dotted];
m0_500 -> m0_501  [key=0, style=solid];
m0_500 -> m0_110  [key=2, style=dotted];
m0_480 -> m0_481  [key=0, style=solid];
m0_480 -> m0_482  [key=0, style=solid];
m0_480 -> m0_141  [key=2, style=dotted];
m0_482 -> m0_483  [key=0, style=solid];
m0_482 -> m0_484  [key=0, style=solid];
m0_482 -> m0_504  [key=2, style=dotted];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_486  [key=0, style=solid];
m0_484 -> m0_505  [key=2, style=dotted];
m0_486 -> m0_487  [key=0, style=solid];
m0_486 -> m0_488  [key=0, style=solid];
m0_486 -> m0_506  [key=2, style=dotted];
m0_488 -> m0_489  [key=0, style=solid];
m0_488 -> m0_490  [key=0, style=solid];
m0_488 -> m0_507  [key=2, style=dotted];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_492  [key=0, style=solid];
m0_490 -> m0_180  [key=2, style=dotted];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_494  [key=0, style=solid];
m0_492 -> m0_508  [key=2, style=dotted];
m0_494 -> m0_495  [key=0, style=solid];
m0_494 -> m0_496  [key=0, style=solid];
m0_494 -> m0_180  [key=2, style=dotted];
m0_496 -> m0_497  [key=0, style=solid];
m0_496 -> m0_498  [key=0, style=solid];
m0_496 -> m0_180  [key=2, style=dotted];
m0_498 -> m0_499  [key=0, style=solid];
m0_498 -> m0_500  [key=0, style=solid];
m0_498 -> m0_509  [key=2, style=dotted];
m0_499 -> m0_501  [key=0, style=solid];
m0_499 -> m0_437  [key=2, style=dotted];
m0_501 -> m0_51  [key=0, style=bold, color=blue];
m0_463 -> m0_464  [key=0, style=solid];
m0_463 -> m0_467  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_463 -> m0_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_464 -> m0_465  [key=0, style=solid];
m0_464 -> m0_470  [key=2, style=dotted];
m0_464 -> m0_466  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_464 -> m0_467  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_464 -> m0_468  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_467 -> m0_468  [key=0, style=solid];
m0_467 -> m0_139  [key=2, style=dotted];
m0_467 -> m0_140  [key=2, style=dotted];
m0_465 -> m0_466  [key=0, style=solid];
m0_465 -> m0_138  [key=2, style=dotted];
m0_466 -> m0_467  [key=0, style=solid];
m0_468 -> m0_469  [key=0, style=solid];
m0_469 -> m0_463  [key=0, style=bold, color=blue];
m0_179 -> m0_8  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_105 -> m0_107  [key=0, style=solid];
m0_85 -> m0_85  [key=3, color=green, style=bold, label="Local variable string json"];
m0_85 -> m0_86  [key=0, style=solid, color=green];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_86  [key=2, style=dotted];
m0_59 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_59 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_59 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_59 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_59 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_59 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_59 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_84 -> m0_85  [key=0, style=solid, color=green];
m0_86 -> m0_87  [key=0, style=solid, color=green];
m0_86 -> m0_6  [key=2, style=dotted, color=green];
m0_86 -> m0_17  [key=2, style=dotted, color=green];
m0_86 -> m0_88  [key=1, style=dashed, color=green, label=employees];
m0_86 -> m0_89  [key=1, style=dashed, color=green, label=employees];
m0_86 -> m0_90  [key=1, style=dashed, color=green, label=employees];
m0_87 -> m0_88  [key=0, style=solid, color=green];
m0_87 -> m0_8  [key=2, style=dotted, color=green];
m0_88 -> m0_89  [key=0, style=solid, color=green];
m0_88 -> m0_8  [key=2, style=dotted, color=green];
m0_89 -> m0_90  [key=0, style=solid, color=green];
m0_89 -> m0_8  [key=2, style=dotted, color=green];
m0_90 -> m0_91  [key=0, style=solid, color=green];
m0_90 -> m0_8  [key=2, style=dotted, color=green];
m0_91 -> m0_84  [key=0, style=bold, color=blue];
m0_106 -> m0_107  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_2 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_4 -> m0_8  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_1 -> m0_693  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m0_19 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=contextKey];
m0_19 -> m0_19  [key=3, color=darkorchid, style=bold, label="Local variable string contextKey"];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_30  [key=2, style=dotted];
m0_21 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=inputContext];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_29  [key=2, style=dotted];
m0_20 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m0_20 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=someValue];
m0_22 -> m0_18  [key=0, style=bold, color=blue];
m0_22 -> m0_31  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_143 -> m0_287  [key=0, style=solid];
m0_143 -> m0_288  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ConstructorInfo"];
m0_143 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonPropertyCollection"];
m0_143 -> m0_120  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ConstructorInfo constructor"];
m0_143 -> m0_128  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ConstructorInfo constructor"];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_299  [key=2, style=dotted];
m0_287 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label=constructorParameters];
m0_288 -> m0_289  [key=0, style=solid];
m0_288 -> m0_300  [key=2, style=dotted];
m0_288 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label=parameterCollection];
m0_288 -> m0_297  [key=1, style=dashed, color=darkseagreen4, label=parameterCollection];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_301  [key=2, style=dotted];
m0_290 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=matchingMemberProperty];
m0_290 -> m0_294  [key=1, style=dashed, color=darkseagreen4, label=matchingMemberProperty];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_297  [key=0, style=solid];
m0_289 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m0_289 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m0_289 -> m0_294  [key=1, style=dashed, color=darkseagreen4, label=parameterInfo];
m0_296 -> m0_289  [key=0, style=solid];
m0_296 -> m0_303  [key=2, style=dotted];
m0_297 -> m0_298  [key=0, style=solid];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_293  [key=0, style=solid];
m0_293 -> m0_294  [key=0, style=solid];
m0_293 -> m0_289  [key=0, style=solid];
m0_294 -> m0_295  [key=0, style=solid];
m0_294 -> m0_302  [key=2, style=dotted];
m0_294 -> m0_296  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_294  [key=1, style=dashed, color=darkseagreen4, label=matchingMemberProperty];
m0_295 -> m0_296  [key=0, style=solid];
m0_295 -> m0_289  [key=0, style=solid];
m0_298 -> m0_143  [key=0, style=bold, color=blue];
m0_144 -> m0_281  [key=0, style=solid];
m0_144 -> m0_204  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetParametrizedConstructor"];
m0_144 -> m0_145  [key=0, style=solid];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_276  [key=2, style=dotted];
m0_281 -> m0_286  [key=2, style=dotted];
m0_281 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label=constructors];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_284  [key=0, style=solid];
m0_283 -> m0_285  [key=0, style=solid];
m0_284 -> m0_285  [key=0, style=solid];
m0_285 -> m0_144  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_14  [key=0, style=bold, color=blue];
m0_17 -> m0_16  [key=0, style=bold, color=blue];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_509 -> m0_514  [key=0, style=solid];
m0_509 -> m0_515  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_509 -> m0_477  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_509 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsIConvertible"];
m0_514 -> m0_515  [key=0, style=solid];
m0_514 -> m0_516  [key=0, style=solid];
m0_514 -> m0_180  [key=2, style=dotted];
m0_514 -> m0_518  [key=2, style=dotted];
m0_514 -> m0_519  [key=2, style=dotted];
m0_515 -> m0_517  [key=0, style=solid];
m0_515 -> m0_180  [key=2, style=dotted];
m0_516 -> m0_517  [key=0, style=solid];
m0_517 -> m0_509  [key=0, style=bold, color=blue];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_352 -> m0_360  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_352 -> m0_361  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_352 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_352 -> m0_365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_352 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_352 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_352 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_352 -> m0_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_352 -> m0_138  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_353 -> m0_354  [key=0, style=solid];
m0_358 -> m0_359  [key=0, style=solid];
m0_358 -> m0_373  [key=2, style=dotted];
m0_358 -> m0_361  [key=1, style=dashed, color=darkseagreen4, label=onSerializing];
m0_358 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label=onSerialized];
m0_358 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label=onSerialized];
m0_358 -> m0_364  [key=1, style=dashed, color=darkseagreen4, label=onDeserializing];
m0_358 -> m0_365  [key=1, style=dashed, color=darkseagreen4, label=onDeserializing];
m0_358 -> m0_366  [key=1, style=dashed, color=darkseagreen4, label=onDeserialized];
m0_358 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label=onDeserialized];
m0_358 -> m0_370  [key=1, style=dashed, color=darkseagreen4, label=onError];
m0_358 -> m0_371  [key=1, style=dashed, color=darkseagreen4, label=onError];
m0_360 -> m0_361  [key=0, style=solid];
m0_360 -> m0_362  [key=0, style=solid];
m0_361 -> m0_362  [key=0, style=solid];
m0_361 -> m0_140  [key=2, style=dotted];
m0_363 -> m0_364  [key=0, style=solid];
m0_363 -> m0_140  [key=2, style=dotted];
m0_365 -> m0_366  [key=0, style=solid];
m0_365 -> m0_140  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_370  [key=0, style=solid];
m0_368 -> m0_369  [key=0, style=solid];
m0_368 -> m0_370  [key=0, style=solid];
m0_368 -> m0_108  [key=2, style=dotted];
m0_368 -> m0_109  [key=2, style=dotted];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_140  [key=2, style=dotted];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_140  [key=2, style=dotted];
m0_354 -> m0_355  [key=0, style=solid];
m0_355 -> m0_356  [key=0, style=solid];
m0_356 -> m0_357  [key=0, style=solid];
m0_357 -> m0_358  [key=0, style=solid];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_362  [key=0, style=solid];
m0_362 -> m0_363  [key=0, style=solid];
m0_362 -> m0_364  [key=0, style=solid];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_366  [key=0, style=solid];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_370  [key=0, style=solid];
m0_370 -> m0_371  [key=0, style=solid];
m0_370 -> m0_372  [key=0, style=solid];
m0_372 -> m0_352  [key=0, style=bold, color=blue];
m0_601 -> m0_673  [key=0, style=solid];
m0_601 -> m0_675  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_601 -> m0_679  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_601 -> m0_680  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_601 -> m0_681  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_601 -> m0_583  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m0_601 -> m0_569  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m0_601 -> m0_587  [key=3, color=darkorchid, style=bold, label="Parameter variable bool allowNonPublicAccess"];
m0_673 -> m0_674  [key=0, style=solid];
m0_673 -> m0_683  [key=2, style=dotted];
m0_673 -> m0_676  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_673 -> m0_678  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_673 -> m0_680  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_673 -> m0_681  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_675 -> m0_676  [key=0, style=solid];
m0_675 -> m0_684  [key=2, style=dotted];
m0_675 -> m0_678  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_675 -> m0_680  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_675 -> m0_681  [key=1, style=dashed, color=darkseagreen4, label=specifiedMember];
m0_679 -> m0_680  [key=0, style=solid];
m0_679 -> m0_686  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_680 -> m0_681  [key=0, style=solid];
m0_680 -> m0_682  [key=0, style=solid];
m0_680 -> m0_599  [key=2, style=dotted];
m0_681 -> m0_682  [key=0, style=solid];
m0_681 -> m0_215  [key=2, style=dotted];
m0_674 -> m0_675  [key=0, style=solid];
m0_674 -> m0_676  [key=0, style=solid];
m0_676 -> m0_677  [key=0, style=solid];
m0_676 -> m0_678  [key=0, style=solid];
m0_676 -> m0_177  [key=2, style=dotted];
m0_678 -> m0_679  [key=0, style=solid];
m0_678 -> m0_214  [key=2, style=dotted];
m0_678 -> m0_686  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m0_677 -> m0_682  [key=0, style=solid];
m0_682 -> m0_601  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_10 -> m0_10  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_10 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_11 -> m0_695  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_12 -> m0_9  [key=0, style=bold, color=blue];
m0_12 -> m0_8  [key=0, style=bold, color=blue];
m0_302 -> m0_304  [key=0, style=solid];
m0_302 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
m0_302 -> m0_307  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo"];
m0_302 -> m0_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_316  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_302 -> m0_290  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty matchingMemberProperty"];
m0_302 -> m0_289  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ParameterInfo parameterInfo"];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_325  [key=2, style=dotted];
m0_304 -> m0_307  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_308  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_309  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_311  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_312  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_314  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_315  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_316  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_317  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_318  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_304 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_305 -> m0_306  [key=0, style=solid];
m0_307 -> m0_308  [key=0, style=solid];
m0_307 -> m0_326  [key=2, style=dotted];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_323  [key=0, style=solid];
m0_311 -> m0_312  [key=0, style=solid];
m0_312 -> m0_313  [key=0, style=solid];
m0_313 -> m0_314  [key=0, style=solid];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_316  [key=0, style=solid];
m0_315 -> m0_316  [key=0, style=solid];
m0_316 -> m0_317  [key=0, style=solid];
m0_317 -> m0_318  [key=0, style=solid];
m0_318 -> m0_319  [key=0, style=solid];
m0_319 -> m0_320  [key=0, style=solid];
m0_320 -> m0_321  [key=0, style=solid];
m0_321 -> m0_322  [key=0, style=solid];
m0_322 -> m0_323  [key=0, style=solid];
m0_308 -> m0_309  [key=0, style=solid];
m0_309 -> m0_310  [key=0, style=solid];
m0_323 -> m0_324  [key=0, style=solid];
m0_306 -> m0_307  [key=0, style=solid];
m0_324 -> m0_302  [key=0, style=bold, color=blue];
m0_138 -> m0_334  [key=0, style=solid];
m0_138 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_138 -> m0_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_138 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_138 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_138 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_138 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_138 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_138 -> m0_344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_138 -> m0_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonContract"];
m0_138 -> m0_111  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_138 -> m0_425  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_138 -> m0_432  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_138 -> m0_438  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_138 -> m0_444  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_138 -> m0_450  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_138 -> m0_464  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_138 -> m0_472  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_138 -> m0_8  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_347  [key=2, style=dotted];
m0_334 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label=containerAttribute];
m0_336 -> m0_340  [key=0, style=solid];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_87  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_327  [key=2, style=dotted];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_348  [key=2, style=dotted];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_345  [key=0, style=solid];
m0_342 -> m0_349  [key=2, style=dotted];
m0_342 -> m0_350  [key=2, style=dotted];
m0_343 -> m0_344  [key=0, style=solid];
m0_343 -> m0_331  [key=2, style=dotted];
m0_344 -> m0_345  [key=0, style=solid];
m0_344 -> m0_350  [key=2, style=dotted];
m0_344 -> m0_351  [key=2, style=dotted];
m0_345 -> m0_346  [key=0, style=solid];
m0_345 -> m0_352  [key=2, style=dotted];
m0_335 -> m0_336  [key=0, style=solid];
m0_335 -> m0_337  [key=0, style=solid];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_340  [key=0, style=solid];
m0_346 -> m0_138  [key=0, style=bold, color=blue];
m0_153 -> m0_8  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_106  [key=0, style=solid];
m0_104 -> m0_108  [key=2, style=dotted];
m0_104 -> m0_109  [key=2, style=dotted];
m0_181 -> m0_182  [key=0, style=solid];
m0_182 -> m0_6  [key=2, style=dotted];
m0_182 -> m0_17  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_550  [key=0, style=solid];
m0_182 -> m0_551  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_182 -> m0_552  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_184 -> m0_8  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_210  [key=2, style=dotted];
m0_184 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label=extensionDataAttribute];
m0_184 -> m0_207  [key=1, style=dashed, color=darkseagreen4, label=extensionDataAttribute];
m0_183 -> m0_184  [key=0, style=solid];
m0_185 -> m0_181  [key=0, style=bold, color=blue];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_187  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_8 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_8 -> m0_13  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m0_83 -> m0_68  [key=0, style=bold, color=blue];
m0_110 -> m0_111  [key=0, style=solid, color=green];
m0_110 -> m0_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_111 -> m0_112  [key=0, style=solid, color=green];
m0_111 -> m0_137  [key=2, style=dotted];
m0_111 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_117  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_124  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_111 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_112 -> m0_113  [key=0, style=solid, color=green];
m0_112 -> m0_138  [key=2, style=dotted];
m0_112 -> m0_6  [key=2, style=dotted, color=green];
m0_112 -> m0_67  [key=2, style=dotted, color=green];
m0_112 -> m0_114  [key=1, style=dashed, color=green, label=values];
m0_112 -> m0_115  [key=1, style=dashed, color=green, label=values];
m0_112 -> m0_121  [key=1, style=dashed, color=green, label=values];
m0_112 -> m0_122  [key=1, style=dashed, color=green, label=values];
m0_115 -> m0_116  [key=0, style=solid, color=green];
m0_115 -> m0_82  [key=2, style=dotted];
m0_115 -> m0_118  [key=1, style=dashed, color=green, label=p];
m0_115 -> m0_119  [key=1, style=dashed, color=green, label=p];
m0_115 -> m0_120  [key=1, style=dashed, color=green, label=p];
m0_116 -> m0_117  [key=0, style=solid, color=green];
m0_116 -> m0_139  [key=2, style=dotted];
m0_116 -> m0_140  [key=2, style=dotted];
m0_116 -> m0_8  [key=2, style=dotted, color=green];
m0_117 -> m0_118  [key=0, style=solid, color=green];
m0_117 -> m0_141  [key=2, style=dotted];
m0_117 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m0_117 -> m0_8  [key=2, style=dotted, color=green];
m0_119 -> m0_120  [key=0, style=solid, color=green];
m0_119 -> m0_45  [key=2, style=dotted, color=green];
m0_119 -> m0_8  [key=2, style=dotted, color=green];
m0_120 -> m0_121  [key=0, style=solid, color=green];
m0_120 -> m0_142  [key=2, style=dotted];
m0_120 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
m0_120 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=overrideConstructor];
m0_120 -> m0_45  [key=2, style=dotted, color=green];
m0_120 -> m0_8  [key=2, style=dotted, color=green];
m0_122 -> m0_123  [key=0, style=solid, color=green];
m0_122 -> m0_8  [key=2, style=dotted, color=green];
m0_123 -> m0_132  [key=0, style=solid];
m0_123 -> m0_143  [key=2, style=dotted];
m0_123 -> m0_140  [key=2, style=dotted];
m0_123 -> m0_108  [key=0, style=bold, color=blue];
m0_124 -> m0_125  [key=0, style=solid, color=green];
m0_124 -> m0_127  [key=0, style=solid];
m0_126 -> m0_132  [key=0, style=solid];
m0_126 -> m0_127  [key=0, style=solid, color=green];
m0_126 -> m0_141  [key=2, style=dotted, color=green];
m0_126 -> m0_86  [key=2, style=dotted, color=green];
m0_127 -> m0_128  [key=0, style=solid, color=green];
m0_127 -> m0_132  [key=0, style=solid];
m0_127 -> m0_46  [key=2, style=dotted, color=green];
m0_127 -> m0_129  [key=1, style=dashed, color=green, label=json];
m0_128 -> m0_129  [key=0, style=solid, color=green];
m0_128 -> m0_144  [key=2, style=dotted];
m0_128 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m0_128 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=constructor];
m0_128 -> m0_33  [key=2, style=dotted, color=green];
m0_130 -> m0_131  [key=0, style=solid, color=green];
m0_130 -> m0_8  [key=2, style=dotted, color=green];
m0_131 -> m0_132  [key=0, style=solid, color=green];
m0_131 -> m0_143  [key=2, style=dotted, color=green];
m0_131 -> m0_140  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid, color=green];
m0_132 -> m0_145  [key=2, style=dotted];
m0_132 -> m0_134  [key=1, style=dashed, color=green, label=nested];
m0_132 -> m0_135  [key=1, style=dashed, color=green, label=nested];
m0_132 -> m0_136  [key=1, style=dashed, color=green, label=nested];
m0_132 -> m0_137  [key=1, style=dashed, color=green, label=nested];
m0_132 -> m0_138  [key=1, style=dashed, color=green, label=nested];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_146  [key=2, style=dotted];
m0_134 -> m0_8  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_8  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid, color=green];
m0_113 -> m0_8  [key=2, style=dotted, color=green];
m0_114 -> m0_115  [key=0, style=solid, color=green];
m0_114 -> m0_116  [key=1, style=dashed, color=green, label=e];
m0_114 -> m0_117  [key=1, style=dashed, color=green, label=e];
m0_118 -> m0_119  [key=0, style=solid, color=green];
m0_118 -> m0_120  [key=0, style=solid];
m0_118 -> m0_8  [key=2, style=dotted, color=green];
m0_121 -> m0_122  [key=0, style=solid, color=green];
m0_121 -> m0_124  [key=0, style=solid];
m0_121 -> m0_8  [key=2, style=dotted, color=green];
m0_125 -> m0_126  [key=0, style=solid, color=green];
m0_125 -> m0_132  [key=0, style=solid];
m0_125 -> m0_140  [key=2, style=dotted, color=green];
m0_125 -> m0_128  [key=1, style=dashed, color=green, label=listRef];
m0_129 -> m0_130  [key=0, style=solid, color=green];
m0_129 -> m0_132  [key=0, style=solid];
m0_129 -> m0_6  [key=2, style=dotted, color=green];
m0_129 -> m0_17  [key=2, style=dotted, color=green];
m0_129 -> m0_131  [key=1, style=dashed, color=green, label=deserialized];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_135  [key=0, style=solid];
m0_133 -> m0_8  [key=2, style=dotted];
m0_136 -> m0_110  [key=0, style=bold, color=blue];
m0_136 -> m0_8  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid, color=green];
m0_82 -> m0_8  [key=2, style=dotted, color=green];
m0_443 -> m0_444  [key=0, style=solid];
m0_443 -> m0_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_444 -> m0_445  [key=0, style=solid];
m0_444 -> m0_448  [key=2, style=dotted];
m0_444 -> m0_446  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_138  [key=2, style=dotted];
m0_446 -> m0_447  [key=0, style=solid];
m0_447 -> m0_443  [key=0, style=bold, color=blue];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_450 -> m0_451  [key=0, style=solid];
m0_450 -> m0_458  [key=2, style=dotted];
m0_450 -> m0_452  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_450 -> m0_455  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_450 -> m0_456  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_451 -> m0_452  [key=0, style=solid];
m0_451 -> m0_138  [key=2, style=dotted];
m0_452 -> m0_453  [key=0, style=solid];
m0_452 -> m0_459  [key=2, style=dotted];
m0_452 -> m0_454  [key=1, style=dashed, color=darkseagreen4, label=constructorInfo];
m0_455 -> m0_456  [key=0, style=solid];
m0_455 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m0_456 -> m0_457  [key=0, style=solid];
m0_453 -> m0_454  [key=0, style=solid];
m0_453 -> m0_456  [key=0, style=solid];
m0_454 -> m0_455  [key=0, style=solid];
m0_454 -> m0_217  [key=2, style=dotted];
m0_454 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label=methodCall];
m0_457 -> m0_449  [key=0, style=bold, color=blue];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_217  [key=2, style=dotted];
m0_199 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionaryValue];
m0_48 -> m0_49  [key=0, style=solid, color=green];
m0_92 -> m0_93  [key=0, style=solid, color=green];
m0_93 -> m0_85  [key=3, color=green, style=bold, label="Local variable string json"];
m0_93 -> m0_94  [key=0, style=solid, color=green];
m0_94 -> m0_95  [key=0, style=solid, color=green];
m0_94 -> m0_103  [key=2, style=dotted, color=green];
m0_94 -> m0_96  [key=1, style=dashed, color=green, label=t1];
m0_94 -> m0_101  [key=1, style=dashed, color=green, label=t1];
m0_95 -> m0_96  [key=0, style=solid, color=green];
m0_95 -> m0_104  [key=2, style=dotted, color=green];
m0_95 -> m0_101  [key=1, style=dashed, color=green, label=t2];
m0_95 -> m0_97  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid, color=green];
m0_96 -> m0_6  [key=2, style=dotted, color=green];
m0_96 -> m0_105  [key=2, style=dotted, color=green];
m0_96 -> m0_106  [key=2, style=dotted, color=green];
m0_96 -> m0_98  [key=1, style=dashed, color=green, label=employees];
m0_96 -> m0_99  [key=1, style=dashed, color=green, label=employees];
m0_96 -> m0_100  [key=1, style=dashed, color=green, label=employees];
m0_96 -> m0_94  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid, color=green];
m0_101 -> m0_107  [key=2, style=dotted, color=green];
m0_101 -> m0_59  [key=2, style=dotted, color=green];
m0_101 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeEntityMember"];
m0_101 -> m0_106  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ShouldSerializeEntityMember"];
m0_97 -> m0_98  [key=0, style=solid, color=green];
m0_97 -> m0_8  [key=2, style=dotted, color=green];
m0_98 -> m0_99  [key=0, style=solid, color=green];
m0_98 -> m0_8  [key=2, style=dotted, color=green];
m0_99 -> m0_100  [key=0, style=solid, color=green];
m0_99 -> m0_8  [key=2, style=dotted, color=green];
m0_99 -> m0_97  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid, color=green];
m0_100 -> m0_8  [key=2, style=dotted, color=green];
m0_100 -> m0_98  [key=0, style=bold, color=blue];
m0_102 -> m0_92  [key=0, style=bold, color=blue];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label=propertyInfo];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_106  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_86  [key=2, style=dotted];
m0_155 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=m];
m0_155 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=m];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_245  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>"];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_247  [key=2, style=dotted];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_248  [key=2, style=dotted];
m0_245 -> m0_703  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_246 -> m0_243  [key=0, style=bold, color=blue];
m0_54 -> m0_55  [key=0, style=solid, color=green];
m0_54 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_54 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_54 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_54 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_54 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_54 -> m0_59  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<System.Reflection.MemberInfo> GetSerializableMembers"];
m0_54 -> m0_139  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_54 -> m0_8  [key=2, style=dotted, color=green];
m0_55 -> m0_56  [key=0, style=solid, color=green];
m0_55 -> m0_8  [key=2, style=dotted, color=green];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_82  [key=2, style=dotted];
m0_57 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=memberSerialization];
m0_57 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=memberSerialization];
m0_57 -> m0_48  [key=0, style=bold, color=blue];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_83  [key=2, style=dotted];
m0_58 -> m0_84  [key=2, style=dotted];
m0_58 -> m0_85  [key=2, style=dotted];
m0_58 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_58 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
m0_58 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=allMembers];
m0_61 -> m0_62  [key=0, style=solid, color=green];
m0_61 -> m0_87  [key=2, style=dotted];
m0_61 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m0_61 -> m0_61  [key=3, color=green, style=bold, label="Local variable string json"];
m0_61 -> m0_65  [key=1, style=dashed, color=green, label=json];
m0_62 -> m0_63  [key=0, style=solid, color=green];
m0_62 -> m0_83  [key=2, style=dotted];
m0_62 -> m0_84  [key=2, style=dotted];
m0_62 -> m0_85  [key=2, style=dotted];
m0_62 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_62 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=defaultMembers];
m0_62 -> m0_13  [key=2, style=dotted, color=green];
m0_62 -> m0_64  [key=1, style=dashed, color=green, label="lambda expression"];
m0_74 -> m0_75  [key=0, style=solid, color=green];
m0_74 -> m0_80  [key=0, style=solid];
m0_74 -> m0_93  [key=2, style=dotted];
m0_74 -> m0_31  [key=2, style=dotted, color=green];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_56 -> m0_58  [key=2, style=dotted, color=green];
m0_56 -> m0_59  [key=2, style=dotted, color=green];
m0_60 -> m0_61  [key=0, style=solid, color=green];
m0_60 -> m0_76  [key=0, style=solid];
m0_71 -> m0_72  [key=0, style=solid, color=green];
m0_71 -> m0_63  [key=0, style=solid];
m0_71 -> m0_92  [key=2, style=dotted];
m0_71 -> m0_31  [key=2, style=dotted, color=green];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_73  [key=0, style=solid];
m0_63 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_63 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_63 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_63 -> m0_68  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_63 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_63 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_63 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_63 -> m0_72  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_63 -> m0_60  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid, color=green];
m0_76 -> m0_80  [key=0, style=solid];
m0_76 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=member];
m0_76 -> m0_31  [key=2, style=dotted, color=green];
m0_66 -> m0_63  [key=0, style=solid];
m0_66 -> m0_90  [key=2, style=dotted];
m0_66 -> m0_64  [key=0, style=bold, color=blue];
m0_68 -> m0_63  [key=0, style=solid];
m0_68 -> m0_90  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid, color=green];
m0_70 -> m0_63  [key=0, style=solid];
m0_70 -> m0_90  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid, color=green];
m0_70 -> m0_31  [key=2, style=dotted, color=green];
m0_72 -> m0_63  [key=0, style=solid];
m0_72 -> m0_90  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid, color=green];
m0_72 -> m0_31  [key=2, style=dotted, color=green];
m0_75 -> m0_80  [key=0, style=solid];
m0_75 -> m0_84  [key=2, style=dotted];
m0_75 -> m0_85  [key=2, style=dotted];
m0_75 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label=serializableMembers];
m0_75 -> m0_76  [key=0, style=solid, color=green];
m0_75 -> m0_31  [key=2, style=dotted, color=green];
m0_79 -> m0_76  [key=0, style=solid];
m0_79 -> m0_90  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid, color=green];
m0_79 -> m0_6  [key=2, style=dotted, color=green];
m0_79 -> m0_17  [key=2, style=dotted, color=green];
m0_79 -> m0_81  [key=1, style=dashed, color=green, label=result];
m0_79 -> m0_82  [key=1, style=dashed, color=green, label=result];
m0_80 -> m0_81  [key=0, style=solid, color=green];
m0_80 -> m0_8  [key=2, style=dotted, color=green];
m0_69 -> m0_70  [key=0, style=solid, color=green];
m0_69 -> m0_71  [key=0, style=solid];
m0_69 -> m0_91  [key=2, style=dotted];
m0_69 -> m0_30  [key=2, style=dotted, color=green];
m0_69 -> m0_72  [key=1, style=dashed, color=green, label=reference];
m0_69 -> m0_76  [key=1, style=dashed, color=green, label=reference];
m0_65 -> m0_66  [key=0, style=solid, color=green];
m0_65 -> m0_67  [key=0, style=solid];
m0_65 -> m0_89  [key=2, style=dotted];
m0_65 -> m0_6  [key=2, style=dotted, color=green];
m0_64 -> m0_65  [key=0, style=solid, color=green];
m0_64 -> m0_63  [key=0, style=solid];
m0_64 -> m0_88  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid, color=green];
m0_73 -> m0_76  [key=1, style=dashed, color=green, label=child];
m0_73 -> m0_30  [key=2, style=dotted, color=green];
m0_73 -> m0_75  [key=1, style=dashed, color=green, label=child];
m0_73 -> m0_77  [key=1, style=dashed, color=green, label=child];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=0, style=solid];
m0_67 -> m0_91  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid, color=green];
m0_77 -> m0_46  [key=2, style=dotted, color=green];
m0_77 -> m0_79  [key=1, style=dashed, color=green, label=json];
m0_78 -> m0_79  [key=0, style=solid, color=green];
m0_78 -> m0_76  [key=0, style=solid];
m0_78 -> m0_33  [key=2, style=dotted, color=green];
m0_81 -> m0_54  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid, color=green];
m0_81 -> m0_8  [key=2, style=dotted, color=green];
m0_145 -> m0_147  [key=0, style=solid];
m0_145 -> m0_148  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.MemberInfo GetExtensionDataMemberForType"];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_155  [key=2, style=dotted];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_151  [key=2, style=dotted];
m0_147 -> m0_152  [key=2, style=dotted];
m0_147 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_147 -> m0_147  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<System.Reflection.MemberInfo> "];
m0_147 -> m0_33  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_153  [key=2, style=dotted];
m0_148 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_148 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool "];
m0_148 -> m0_106  [key=3, color=darkorchid, style=bold, label="method methodReturn bool "];
m0_148 -> m0_6  [key=2, style=dotted];
m0_148 -> m0_17  [key=2, style=dotted];
m0_148 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_148 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_148 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_8  [key=2, style=dotted];
m0_150 -> m0_145  [key=0, style=bold, color=blue];
m0_150 -> m0_8  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_253 -> m0_254  [key=0, style=solid];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_256  [key=2, style=dotted];
m0_255 -> m0_253  [key=0, style=bold, color=blue];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_160  [key=2, style=dotted];
m0_156 -> m0_140  [key=2, style=dotted];
m0_158 -> m0_6  [key=2, style=dotted];
m0_158 -> m0_17  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_159 -> m0_8  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_154  [key=0, style=bold, color=blue];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_157  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_157 -> m0_161  [key=2, style=dotted];
m0_157 -> m0_140  [key=2, style=dotted];
m0_160 -> m0_156  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_33 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_33 -> m0_36  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract ResolveContract"];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_36  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid, color=green];
m0_37 -> m0_0  [key=2, style=dotted];
m0_37 -> m0_49  [key=2, style=dotted];
m0_37 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_37 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=key];
m0_37 -> m0_33  [key=2, style=dotted, color=green];
m0_40 -> m0_41  [key=0, style=solid, color=green];
m0_40 -> m0_51  [key=2, style=dotted];
m0_40 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_40 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_40 -> m0_29  [key=2, style=dotted, color=green];
m0_40 -> m0_8  [key=2, style=dotted, color=green];
m0_35 -> m0_47  [key=0, style=solid];
m0_35 -> m0_48  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_29  [key=2, style=dotted];
m0_35 -> m0_45  [key=2, style=dotted];
m0_35 -> m0_44  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_36 -> m0_51  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.JsonContract contract"];
m0_36 -> m0_38  [key=1, style=dashed, color=green, label=jsonString];
m0_36 -> m0_46  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid, color=green];
m0_38 -> m0_23  [key=2, style=dotted];
m0_38 -> m0_6  [key=2, style=dotted, color=green];
m0_38 -> m0_17  [key=2, style=dotted, color=green];
m0_38 -> m0_40  [key=1, style=dashed, color=green, label=actual];
m0_38 -> m0_41  [key=1, style=dashed, color=green, label=actual];
m0_39 -> m0_40  [key=0, style=solid, color=green];
m0_39 -> m0_46  [key=0, style=solid];
m0_39 -> m0_50  [key=2, style=dotted];
m0_39 -> m0_29  [key=2, style=dotted, color=green];
m0_39 -> m0_8  [key=2, style=dotted, color=green];
m0_46 -> m0_47  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid, color=green];
m0_42 -> m0_43  [key=0, style=solid, color=green];
m0_42 -> m0_23  [key=2, style=dotted];
m0_42 -> m0_47  [key=2, style=dotted, color=green];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_52  [key=2, style=dotted];
m0_43 -> m0_53  [key=2, style=dotted];
m0_43 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=updatedCache];
m0_43 -> m0_34  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_28  [key=2, style=dotted];
m0_47 -> m0_33  [key=0, style=bold, color=blue];
m0_261 -> m0_262  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_263 -> m0_261  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid, color=green];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_425 -> m0_426  [key=0, style=solid];
m0_425 -> m0_430  [key=2, style=dotted];
m0_425 -> m0_427  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_425 -> m0_428  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_426 -> m0_427  [key=0, style=solid];
m0_426 -> m0_138  [key=2, style=dotted];
m0_427 -> m0_428  [key=0, style=solid];
m0_428 -> m0_429  [key=0, style=solid];
m0_429 -> m0_424  [key=0, style=bold, color=blue];
m0_151 -> m0_8  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_414  [key=0, style=solid];
m0_151 -> m0_415  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_151 -> m0_145  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m0_151 -> m0_373  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m0_152 -> m0_8  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_146 -> m0_46  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_146 -> m0_184  [key=0, style=solid];
m0_146 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_146 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_146 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_146 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m0_146 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m0_146 -> m0_111  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract"];
m0_146 -> m0_132  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m0_154 -> m0_144  [key=0, style=bold, color=blue];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_154 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_471 -> m0_472  [key=0, style=solid];
m0_471 -> m0_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_476  [key=2, style=dotted];
m0_472 -> m0_474  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_138  [key=2, style=dotted];
m0_474 -> m0_475  [key=0, style=solid];
m0_475 -> m0_471  [key=0, style=bold, color=blue];
m0_257 -> m0_258  [key=0, style=solid];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_260  [key=2, style=dotted];
m0_259 -> m0_257  [key=0, style=bold, color=blue];
m0_569 -> m0_583  [key=0, style=solid];
m0_569 -> m0_584  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_569 -> m0_585  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_569 -> m0_586  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_569 -> m0_588  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_569 -> m0_589  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_569 -> m0_590  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_569 -> m0_591  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_569 -> m0_594  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_569 -> m0_595  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_569 -> m0_561  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m0_569 -> m0_139  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
m0_583 -> m0_584  [key=0, style=solid];
m0_583 -> m0_325  [key=2, style=dotted];
m0_583 -> m0_585  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_583 -> m0_586  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_583 -> m0_588  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_583 -> m0_590  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_583 -> m0_591  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_583 -> m0_592  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_583 -> m0_593  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_583 -> m0_594  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_583 -> m0_595  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_583 -> m0_596  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_584 -> m0_585  [key=0, style=solid];
m0_584 -> m0_177  [key=2, style=dotted];
m0_585 -> m0_586  [key=0, style=solid];
m0_586 -> m0_587  [key=0, style=solid];
m0_586 -> m0_574  [key=2, style=dotted];
m0_588 -> m0_589  [key=0, style=solid];
m0_588 -> m0_326  [key=2, style=dotted];
m0_588 -> m0_590  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_588 -> m0_591  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_588 -> m0_595  [key=1, style=dashed, color=darkseagreen4, label=allowNonPublicAccess];
m0_589 -> m0_590  [key=0, style=solid];
m0_589 -> m0_592  [key=0, style=solid];
m0_590 -> m0_591  [key=0, style=solid];
m0_590 -> m0_598  [key=2, style=dotted];
m0_591 -> m0_594  [key=0, style=solid];
m0_591 -> m0_599  [key=2, style=dotted];
m0_594 -> m0_595  [key=0, style=solid];
m0_594 -> m0_600  [key=2, style=dotted];
m0_595 -> m0_596  [key=0, style=solid];
m0_595 -> m0_601  [key=2, style=dotted];
m0_592 -> m0_593  [key=0, style=solid];
m0_593 -> m0_594  [key=0, style=solid];
m0_596 -> m0_597  [key=0, style=solid];
m0_587 -> m0_588  [key=0, style=solid];
m0_597 -> m0_569  [key=0, style=bold, color=blue];
m0_331 -> m0_332  [key=0, style=solid];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_216  [key=2, style=dotted];
m0_333 -> m0_331  [key=0, style=bold, color=blue];
m0_32 -> m0_28  [key=0, style=bold, color=blue];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_552  [key=0, style=solid];
m0_550 -> m0_554  [key=2, style=dotted];
m0_550 -> m0_555  [key=2, style=dotted];
m0_551 -> m0_553  [key=0, style=solid];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_556  [key=2, style=dotted];
m0_553 -> m0_182  [key=0, style=bold, color=blue];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_8  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.ResolverContractKey other"];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_13  [key=0, style=bold, color=blue];
m0_15 -> m0_6  [key=2, style=dotted];
m0_15 -> m0_17  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_177  [key=2, style=dotted];
m0_187 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_187 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_187 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_187 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_187 -> m0_6  [key=2, style=dotted];
m0_187 -> m0_17  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_214  [key=2, style=dotted];
m0_196 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_196 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_196 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_196 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_196 -> m0_8  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_215  [key=2, style=dotted];
m0_197 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m0_197 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m0_197 -> m0_8  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_208 -> m0_209  [key=0, style=solid];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_207  [key=0, style=solid];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_209  [key=0, style=solid];
m0_186 -> m0_209  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_8  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_178  [key=2, style=dotted];
m0_189 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=dictionaryType];
m0_189 -> m0_6  [key=2, style=dotted];
m0_189 -> m0_17  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_195  [key=0, style=solid];
m0_193 -> m0_211  [key=2, style=dotted];
m0_193 -> m0_193  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_213  [key=2, style=dotted];
m0_195 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=addMethod];
m0_195 -> m0_6  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_216  [key=2, style=dotted];
m0_198 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
m0_198 -> m0_224  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
m0_198 -> m0_192  [key=0, style=bold, color=blue];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_179  [key=2, style=dotted];
m0_190 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_190 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_190 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_190 -> m0_59  [key=2, style=dotted];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_179  [key=2, style=dotted];
m0_191 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_191 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_191 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m0_191 -> m0_186  [key=0, style=bold, color=blue];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_212  [key=2, style=dotted];
m0_194 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_194 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_194 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_194 -> m0_155  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_212  [key=2, style=dotted];
m0_201 -> m0_65  [key=1, style=dashed, color=green, label=json];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_180  [key=2, style=dotted];
m0_192 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=isJTokenValueType];
m0_192 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=isJTokenValueType];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_200 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_200 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_200 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_200 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_200 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label=extensionDataSetter];
m0_200 -> m0_200  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.ExtensionDataSetter extensionDataSetter"];
m0_200 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_204 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label=extensionDataGetter];
m0_204 -> m0_204  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.ExtensionDataGetter extensionDataGetter"];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_218  [key=2, style=dotted];
m0_202 -> m0_219  [key=2, style=dotted];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_220  [key=2, style=dotted];
m0_203 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label=createEnumerableWrapper];
m0_209 -> m0_146  [key=0, style=bold, color=blue];
m0_600 -> m0_664  [key=0, style=solid];
m0_600 -> m0_569  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m0_600 -> m0_204  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Predicate<object> CreateShouldSerializeTest"];
m0_600 -> m0_668  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Predicate<object> CreateShouldSerializeTest"];
m0_664 -> m0_665  [key=0, style=solid];
m0_664 -> m0_213  [key=2, style=dotted];
m0_664 -> m0_667  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeMethod];
m0_665 -> m0_666  [key=0, style=solid];
m0_665 -> m0_667  [key=0, style=solid];
m0_667 -> m0_668  [key=0, style=solid];
m0_667 -> m0_217  [key=2, style=dotted];
m0_667 -> m0_671  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m0_666 -> m0_669  [key=0, style=solid];
m0_668 -> m0_669  [key=0, style=solid];
m0_668 -> m0_671  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_669 -> m0_600  [key=0, style=bold, color=blue];
m0_373 -> m0_374  [key=0, style=solid];
m0_373 -> m0_379  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_373 -> m0_352  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m0_373 -> m0_353  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback> onSerializing"];
m0_373 -> m0_354  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback> onSerialized"];
m0_373 -> m0_355  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback> onDeserializing"];
m0_373 -> m0_356  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback> onDeserialized"];
m0_373 -> m0_357  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback> onError"];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_390  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_374 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_379 -> m0_380  [key=0, style=solid];
m0_379 -> m0_409  [key=0, style=solid];
m0_379 -> m0_151  [key=2, style=dotted];
m0_379 -> m0_385  [key=1, style=dashed, color=darkseagreen4, label=baseType];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_394  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_375 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_86  [key=2, style=dotted];
m0_390 -> m0_390  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_390 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_398  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_376 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_86  [key=2, style=dotted];
m0_394 -> m0_394  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_394 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_377 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_86  [key=2, style=dotted];
m0_398 -> m0_398  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_398 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m0_378 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_86  [key=2, style=dotted];
m0_402 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_402 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>"];
m0_406 -> m0_407  [key=0, style=solid];
m0_406 -> m0_86  [key=2, style=dotted];
m0_406 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m0_406 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>"];
m0_380 -> m0_381  [key=0, style=solid];
m0_380 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label=currentOnSerializing];
m0_380 -> m0_204  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnSerializing"];
m0_380 -> m0_385  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnSerializing"];
m0_385 -> m0_386  [key=0, style=solid];
m0_385 -> m0_379  [key=0, style=solid];
m0_385 -> m0_410  [key=2, style=dotted];
m0_385 -> m0_388  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_391  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_392  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_395  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_396  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_397  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_399  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_400  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_401  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_403  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_404  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_407  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_385 -> m0_408  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_381 -> m0_382  [key=0, style=solid];
m0_381 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label=currentOnSerialized];
m0_381 -> m0_204  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnSerialized"];
m0_381 -> m0_385  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnSerialized"];
m0_389 -> m0_390  [key=0, style=solid];
m0_389 -> m0_393  [key=0, style=solid];
m0_389 -> m0_411  [key=2, style=dotted];
m0_389 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_382 -> m0_383  [key=0, style=solid];
m0_382 -> m0_397  [key=1, style=dashed, color=darkseagreen4, label=currentOnDeserializing];
m0_382 -> m0_204  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnDeserializing"];
m0_382 -> m0_385  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnDeserializing"];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_397  [key=0, style=solid];
m0_393 -> m0_411  [key=2, style=dotted];
m0_393 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_383 -> m0_384  [key=0, style=solid];
m0_383 -> m0_401  [key=1, style=dashed, color=darkseagreen4, label=currentOnDeserialized];
m0_383 -> m0_204  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnDeserialized"];
m0_383 -> m0_385  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnDeserialized"];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_401  [key=0, style=solid];
m0_397 -> m0_411  [key=2, style=dotted];
m0_397 -> m0_397  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label=currentOnError];
m0_384 -> m0_204  [key=3, color=darkorchid, style=bold, label="Local variable System.Reflection.MethodInfo currentOnError"];
m0_401 -> m0_402  [key=0, style=solid];
m0_401 -> m0_405  [key=0, style=solid];
m0_401 -> m0_411  [key=2, style=dotted];
m0_401 -> m0_401  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_385  [key=0, style=solid];
m0_405 -> m0_411  [key=2, style=dotted];
m0_405 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_386 -> m0_387  [key=0, style=solid];
m0_386 -> m0_385  [key=0, style=solid];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_299  [key=2, style=dotted];
m0_388 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_388 -> m0_397  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_388 -> m0_401  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_388 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_412  [key=2, style=dotted];
m0_391 -> m0_90  [key=2, style=dotted];
m0_392 -> m0_393  [key=0, style=solid];
m0_395 -> m0_396  [key=0, style=solid];
m0_395 -> m0_412  [key=2, style=dotted];
m0_395 -> m0_90  [key=2, style=dotted];
m0_396 -> m0_397  [key=0, style=solid];
m0_399 -> m0_400  [key=0, style=solid];
m0_399 -> m0_412  [key=2, style=dotted];
m0_399 -> m0_90  [key=2, style=dotted];
m0_400 -> m0_401  [key=0, style=solid];
m0_403 -> m0_404  [key=0, style=solid];
m0_403 -> m0_412  [key=2, style=dotted];
m0_403 -> m0_90  [key=2, style=dotted];
m0_404 -> m0_405  [key=0, style=solid];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_413  [key=2, style=dotted];
m0_407 -> m0_90  [key=2, style=dotted];
m0_408 -> m0_385  [key=0, style=solid];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label=prevAttributeType];
m0_387 -> m0_204  [key=3, color=darkorchid, style=bold, label="Local variable System.Type prevAttributeType"];
m0_409 -> m0_373  [key=0, style=bold, color=blue];
m0_249 -> m0_250  [key=0, style=solid];
m0_250 -> m0_251  [key=0, style=solid];
m0_250 -> m0_252  [key=2, style=dotted];
m0_251 -> m0_249  [key=0, style=bold, color=blue];
m0_137 -> m0_8  [key=2, style=dotted];
m0_137 -> m0_138  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>"];
m0_28 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract>"];
m0_28 -> m0_43  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, Newtonsoft.Json.Serialization.JsonContract> cache"];
m0_28 -> m0_18  [key=0, style=bold, color=blue];
m0_30 -> m0_32  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_10  [key=3, color=green, style=bold, label="Local variable string json"];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_50 -> m0_6  [key=2, style=dotted, color=green];
m0_50 -> m0_17  [key=2, style=dotted, color=green];
m0_50 -> m0_52  [key=1, style=dashed, color=green, label=circularList];
m0_50 -> m0_53  [key=1, style=dashed, color=green, label=circularList];
m0_50 -> m0_54  [key=1, style=dashed, color=green, label=circularList];
m0_50 -> m0_55  [key=1, style=dashed, color=green, label=circularList];
m0_50 -> m0_56  [key=1, style=dashed, color=green, label=circularList];
m0_52 -> m0_53  [key=0, style=solid, color=green];
m0_52 -> m0_8  [key=2, style=dotted, color=green];
m0_53 -> m0_54  [key=0, style=solid, color=green];
m0_53 -> m0_8  [key=2, style=dotted, color=green];
m0_690 -> m0_691  [key=0, style=solid];
m0_690 -> m0_662  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetResolvedPropertyName"];
m0_691 -> m0_692  [key=0, style=solid];
m0_691 -> m0_662  [key=2, style=dotted];
m0_692 -> m0_690  [key=0, style=bold, color=blue];
m0_264 -> m0_265  [key=0, style=solid];
m0_265 -> m0_266  [key=0, style=solid];
m0_266 -> m0_264  [key=0, style=bold, color=blue];
m0_162 -> m0_6  [key=2, style=dotted];
m0_162 -> m0_17  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_162 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_162 -> m0_166  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_162 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_162 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_163 -> m0_29  [key=2, style=dotted];
m0_163 -> m0_8  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_92  [key=2, style=dotted];
m0_164 -> m0_29  [key=2, style=dotted];
m0_164 -> m0_8  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_166  [key=0, style=solid];
m0_166 -> m0_8  [key=2, style=dotted];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_168  [key=0, style=solid];
m0_166 -> m0_88  [key=2, style=dotted];
m0_167 -> m0_8  [key=2, style=dotted];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_176  [key=0, style=solid];
m0_168 -> m0_8  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_177  [key=2, style=dotted];
m0_168 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=t];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_165 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_165 -> m0_176  [key=0, style=solid];
m0_169 -> m0_161  [key=0, style=bold, color=blue];
m0_169 -> m0_170  [key=0, style=solid];
m0_25 -> m0_33  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=0, style=solid];
m0_23 -> m0_6  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerSettings];
m0_27 -> m0_8  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_23  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_32  [key=2, style=dotted];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=serializedString];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_7  [key=2, style=dotted];
m0_107 -> m0_101  [key=0, style=bold, color=blue];
m0_142 -> m0_267  [key=0, style=solid];
m0_142 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_142 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_142 -> m0_204  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.ConstructorInfo GetAttributeConstructor"];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_276  [key=2, style=dotted];
m0_267 -> m0_84  [key=2, style=dotted];
m0_267 -> m0_85  [key=2, style=dotted];
m0_267 -> m0_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_267 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label=markedConstructors];
m0_267 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label=markedConstructors];
m0_272 -> m0_273  [key=0, style=solid];
m0_272 -> m0_274  [key=0, style=solid];
m0_273 -> m0_275  [key=0, style=solid];
m0_273 -> m0_277  [key=2, style=dotted];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_270  [key=0, style=solid];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_272  [key=0, style=solid];
m0_271 -> m0_275  [key=0, style=solid];
m0_269 -> m0_275  [key=0, style=solid];
m0_269 -> m0_181  [key=2, style=dotted];
m0_274 -> m0_275  [key=0, style=solid];
m0_275 -> m0_142  [key=0, style=bold, color=blue];
m0_431 -> m0_432  [key=0, style=solid];
m0_431 -> m0_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_432 -> m0_433  [key=0, style=solid];
m0_432 -> m0_436  [key=2, style=dotted];
m0_432 -> m0_434  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_433 -> m0_434  [key=0, style=solid];
m0_433 -> m0_138  [key=2, style=dotted];
m0_434 -> m0_435  [key=0, style=solid];
m0_435 -> m0_431  [key=0, style=bold, color=blue];
m0_139 -> m0_124  [key=0, style=bold, color=blue];
m0_139 -> m0_557  [key=0, style=solid];
m0_139 -> m0_560  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_139 -> m0_562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_139 -> m0_463  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m0_139 -> m0_467  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
m0_139 -> m0_565  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<Newtonsoft.Json.Serialization.JsonProperty> CreateProperties"];
m0_662 -> m0_688  [key=0, style=solid];
m0_662 -> m0_611  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m0_662 -> m0_690  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
m0_662 -> m0_662  [key=3, color=darkorchid, style=bold, label="method methodReturn string ResolvePropertyName"];
m0_688 -> m0_689  [key=0, style=solid];
m0_689 -> m0_662  [key=0, style=bold, color=blue];
m0_180 -> m0_175  [key=0, style=bold, color=blue];
m0_178 -> m0_8  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_181  [key=2, style=dotted];
m0_175 -> m0_182  [key=2, style=dotted];
m0_175 -> m0_183  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_175  [key=0, style=solid];
m0_170 -> m0_178  [key=2, style=dotted];
m0_170 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=dictionaryType];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_179  [key=2, style=dotted];
m0_171 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m0_171 -> m0_6  [key=2, style=dotted];
m0_171 -> m0_17  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_179  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_175  [key=0, style=solid];
m0_173 -> m0_180  [key=2, style=dotted];
m0_173 -> m0_8  [key=2, style=dotted];
m0_174 -> m0_176  [key=0, style=solid];
m0_174 -> m0_170  [key=0, style=bold, color=blue];
m0_176 -> m0_162  [key=0, style=bold, color=blue];
m0_176 -> m0_6  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_7  [key=2, style=dotted];
m0_176 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_176 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=actual];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_228  [key=0, style=solid];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_230  [key=2, style=dotted];
m0_222 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_230  [key=2, style=dotted];
m0_237 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_232  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_231  [key=2, style=dotted];
m0_224 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_235  [key=2, style=dotted];
m0_227 -> m0_228  [key=0, style=solid];
m0_227 -> m0_233  [key=2, style=dotted];
m0_227 -> m0_234  [key=2, style=dotted];
m0_227 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_242  [key=2, style=dotted];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_221 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_221 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_221 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_226  [key=0, style=solid];
m0_229 -> m0_221  [key=0, style=bold, color=blue];
m0_236 -> m0_237  [key=0, style=solid];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_240  [key=0, style=solid];
m0_239 -> m0_241  [key=0, style=solid];
m0_241 -> m0_236  [key=0, style=bold, color=blue];
m0_278 -> m0_279  [key=0, style=solid];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_88  [key=2, style=dotted];
m0_280 -> m0_278  [key=0, style=bold, color=blue];
m0_461 -> m0_462  [key=0, style=solid];
m0_461 -> m0_235  [key=2, style=dotted];
m0_460 -> m0_461  [key=0, style=solid];
m0_462 -> m0_460  [key=0, style=bold, color=blue];
m0_571 -> m0_572  [key=0, style=solid];
m0_572 -> m0_573  [key=0, style=solid];
m0_573 -> m0_571  [key=0, style=bold, color=blue];
m0_671 -> m0_672  [key=0, style=solid];
m0_671 -> m0_235  [key=2, style=dotted];
m0_670 -> m0_671  [key=0, style=solid];
m0_672 -> m0_670  [key=0, style=bold, color=blue];
m0_686 -> m0_687  [key=0, style=solid];
m0_686 -> m0_230  [key=2, style=dotted];
m0_685 -> m0_686  [key=0, style=solid];
m0_687 -> m0_685  [key=0, style=bold, color=blue];
m0_326 -> m0_602  [key=0, style=solid];
m0_326 -> m0_603  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_326 -> m0_608  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_326 -> m0_610  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_616  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_326 -> m0_617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_618  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_621  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_622  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_630  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_326 -> m0_631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_326 -> m0_633  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_326 -> m0_634  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_635  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_636  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_638  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_326 -> m0_640  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_642  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_643  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_644  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_646  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_647  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_648  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_649  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_655  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.MemberSerialization"];
m0_326 -> m0_659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonProperty"];
m0_326 -> m0_304  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m0_326 -> m0_583  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property"];
m0_326 -> m0_302  [key=3, color=darkorchid, style=bold, label="Parameter variable object attributeProvider"];
m0_326 -> m0_569  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
m0_326 -> m0_467  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.MemberSerialization memberSerialization"];
m0_326 -> m0_306  [key=3, color=darkorchid, style=bold, label="Parameter variable bool allowNonPublicAccess"];
m0_326 -> m0_587  [key=3, color=darkorchid, style=bold, label="Parameter variable bool allowNonPublicAccess"];
m0_602 -> m0_603  [key=0, style=solid];
m0_602 -> m0_87  [key=2, style=dotted];
m0_602 -> m0_605  [key=1, style=dashed, color=darkseagreen4, label=dataContractAttribute];
m0_603 -> m0_604  [key=0, style=solid];
m0_603 -> m0_605  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m0_603 -> m0_606  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m0_608 -> m0_609  [key=0, style=solid];
m0_608 -> m0_91  [key=2, style=dotted];
m0_608 -> m0_612  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_613  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_620  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_621  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_622  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_623  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_641  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_642  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_643  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_644  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_646  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_647  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_648  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_649  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_608 -> m0_653  [key=1, style=dashed, color=darkseagreen4, label=propertyAttribute];
m0_610 -> m0_611  [key=0, style=solid];
m0_616 -> m0_617  [key=0, style=solid];
m0_617 -> m0_618  [key=0, style=solid];
m0_617 -> m0_662  [key=2, style=dotted];
m0_618 -> m0_619  [key=0, style=solid];
m0_621 -> m0_622  [key=0, style=solid];
m0_622 -> m0_623  [key=0, style=solid];
m0_623 -> m0_624  [key=0, style=solid];
m0_626 -> m0_627  [key=0, style=solid];
m0_627 -> m0_628  [key=0, style=solid];
m0_628 -> m0_629  [key=0, style=solid];
m0_630 -> m0_631  [key=0, style=solid];
m0_630 -> m0_91  [key=2, style=dotted];
m0_630 -> m0_634  [key=1, style=dashed, color=darkseagreen4, label=hasJsonIgnoreAttribute];
m0_630 -> m0_635  [key=1, style=dashed, color=darkseagreen4, label=hasJsonIgnoreAttribute];
m0_631 -> m0_632  [key=0, style=solid];
m0_631 -> m0_635  [key=0, style=solid];
m0_633 -> m0_634  [key=0, style=solid];
m0_633 -> m0_91  [key=2, style=dotted];
m0_634 -> m0_636  [key=0, style=solid];
m0_635 -> m0_636  [key=0, style=solid];
m0_636 -> m0_637  [key=0, style=solid];
m0_636 -> m0_330  [key=2, style=dotted];
m0_637 -> m0_638  [key=0, style=solid];
m0_637 -> m0_330  [key=2, style=dotted];
m0_638 -> m0_639  [key=0, style=solid];
m0_638 -> m0_91  [key=2, style=dotted];
m0_638 -> m0_640  [key=1, style=dashed, color=darkseagreen4, label=defaultValueAttribute];
m0_640 -> m0_641  [key=0, style=solid];
m0_641 -> m0_642  [key=0, style=solid];
m0_642 -> m0_643  [key=0, style=solid];
m0_643 -> m0_644  [key=0, style=solid];
m0_644 -> m0_645  [key=0, style=solid];
m0_645 -> m0_646  [key=0, style=solid];
m0_646 -> m0_647  [key=0, style=solid];
m0_647 -> m0_648  [key=0, style=solid];
m0_647 -> m0_663  [key=2, style=dotted];
m0_648 -> m0_649  [key=0, style=solid];
m0_649 -> m0_650  [key=0, style=solid];
m0_655 -> m0_656  [key=0, style=solid];
m0_655 -> m0_657  [key=0, style=solid];
m0_659 -> m0_660  [key=0, style=solid];
m0_605 -> m0_606  [key=0, style=solid];
m0_605 -> m0_607  [key=0, style=solid];
m0_604 -> m0_605  [key=0, style=solid];
m0_606 -> m0_608  [key=0, style=solid];
m0_606 -> m0_661  [key=2, style=dotted];
m0_606 -> m0_614  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_606 -> m0_615  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_606 -> m0_625  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_606 -> m0_626  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_606 -> m0_627  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_606 -> m0_628  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_606 -> m0_657  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_607 -> m0_608  [key=0, style=solid];
m0_607 -> m0_614  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_607 -> m0_615  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_607 -> m0_625  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_607 -> m0_626  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_607 -> m0_627  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_607 -> m0_628  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_607 -> m0_657  [key=1, style=dashed, color=darkseagreen4, label=dataMemberAttribute];
m0_614 -> m0_615  [key=0, style=solid];
m0_614 -> m0_616  [key=0, style=solid];
m0_615 -> m0_617  [key=0, style=solid];
m0_625 -> m0_626  [key=0, style=solid];
m0_625 -> m0_630  [key=0, style=solid];
m0_657 -> m0_658  [key=0, style=solid];
m0_657 -> m0_660  [key=0, style=solid];
m0_609 -> m0_610  [key=0, style=solid];
m0_609 -> m0_611  [key=0, style=solid];
m0_612 -> m0_613  [key=0, style=solid];
m0_612 -> m0_614  [key=0, style=solid];
m0_613 -> m0_617  [key=0, style=solid];
m0_620 -> m0_621  [key=0, style=solid];
m0_620 -> m0_625  [key=0, style=solid];
m0_653 -> m0_654  [key=0, style=solid];
m0_653 -> m0_655  [key=0, style=solid];
m0_611 -> m0_612  [key=0, style=solid];
m0_611 -> m0_326  [key=3, color=darkorchid, style=bold, label="Local variable string mappedName"];
m0_619 -> m0_620  [key=0, style=solid];
m0_619 -> m0_635  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_619 -> m0_10  [key=3, color=darkorchid, style=bold, label="Local variable bool hasMemberAttribute"];
m0_624 -> m0_630  [key=0, style=solid];
m0_624 -> m0_635  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_629 -> m0_630  [key=0, style=solid];
m0_629 -> m0_635  [key=1, style=dashed, color=darkseagreen4, label=hasMemberAttribute];
m0_632 -> m0_633  [key=0, style=solid];
m0_632 -> m0_10  [key=3, color=darkorchid, style=bold, label="Local variable bool hasIgnoreDataMemberAttribute"];
m0_639 -> m0_640  [key=0, style=solid];
m0_639 -> m0_641  [key=0, style=solid];
m0_650 -> m0_651  [key=0, style=solid];
m0_650 -> m0_660  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_651 -> m0_652  [key=0, style=solid];
m0_651 -> m0_653  [key=0, style=solid];
m0_652 -> m0_653  [key=0, style=solid];
m0_652 -> m0_660  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_654 -> m0_655  [key=0, style=solid];
m0_654 -> m0_660  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_656 -> m0_657  [key=0, style=solid];
m0_656 -> m0_660  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_658 -> m0_659  [key=0, style=solid];
m0_658 -> m0_660  [key=1, style=dashed, color=darkseagreen4, label="out bool"];
m0_660 -> m0_326  [key=0, style=bold, color=blue];
m0_177 -> m0_8  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_109 -> m0_110  [key=0, style=solid, color=green];
m0_109 -> m0_111  [key=1, style=dashed, color=green, label=employeeRef];
m0_437 -> m0_438  [key=0, style=solid];
m0_437 -> m0_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_437 -> m0_477  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type objectType"];
m0_438 -> m0_439  [key=0, style=solid];
m0_438 -> m0_442  [key=2, style=dotted];
m0_438 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=contract];
m0_439 -> m0_440  [key=0, style=solid];
m0_439 -> m0_138  [key=2, style=dotted];
m0_440 -> m0_441  [key=0, style=solid];
m0_441 -> m0_437  [key=0, style=bold, color=blue];
m0_508 -> m0_520  [key=0, style=solid];
m0_508 -> m0_524  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_508 -> m0_477  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m0_508 -> m0_106  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvertToString"];
m0_508 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvertToString"];
m0_520 -> m0_521  [key=0, style=solid];
m0_520 -> m0_528  [key=2, style=dotted];
m0_520 -> m0_522  [key=1, style=dashed, color=darkseagreen4, label=converter];
m0_524 -> m0_525  [key=0, style=solid];
m0_524 -> m0_526  [key=0, style=solid];
m0_524 -> m0_506  [key=2, style=dotted];
m0_521 -> m0_522  [key=0, style=solid];
m0_521 -> m0_524  [key=0, style=solid];
m0_521 -> m0_49  [key=2, style=dotted];
m0_522 -> m0_523  [key=0, style=solid];
m0_522 -> m0_524  [key=0, style=solid];
m0_522 -> m0_529  [key=2, style=dotted];
m0_523 -> m0_527  [key=0, style=solid];
m0_525 -> m0_527  [key=0, style=solid];
m0_526 -> m0_527  [key=0, style=solid];
m0_527 -> m0_508  [key=0, style=bold, color=blue];
m0_411 -> m0_530  [key=0, style=solid];
m0_411 -> m0_532  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_411 -> m0_533  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_411 -> m0_534  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m0_411 -> m0_535  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_411 -> m0_536  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_411 -> m0_537  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_411 -> m0_538  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_411 -> m0_539  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_411 -> m0_540  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_411 -> m0_541  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m0_411 -> m0_542  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_411 -> m0_543  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.ParameterInfo[]"];
m0_411 -> m0_544  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m0_411 -> m0_545  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_411 -> m0_385  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo method"];
m0_411 -> m0_388  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.ParameterInfo[] parameters"];
m0_411 -> m0_380  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
m0_411 -> m0_381  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
m0_411 -> m0_382  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
m0_411 -> m0_383  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
m0_411 -> m0_384  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo currentCallback"];
m0_411 -> m0_387  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type prevAttributeType"];
m0_411 -> m0_411  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type prevAttributeType"];
m0_411 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsValidCallback"];
m0_411 -> m0_106  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsValidCallback"];
m0_530 -> m0_531  [key=0, style=solid];
m0_530 -> m0_532  [key=0, style=solid];
m0_530 -> m0_88  [key=2, style=dotted];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_534  [key=0, style=solid];
m0_533 -> m0_547  [key=0, style=solid];
m0_533 -> m0_181  [key=2, style=dotted];
m0_533 -> m0_182  [key=2, style=dotted];
m0_533 -> m0_548  [key=2, style=dotted];
m0_534 -> m0_535  [key=0, style=solid];
m0_534 -> m0_536  [key=0, style=solid];
m0_535 -> m0_547  [key=0, style=solid];
m0_535 -> m0_181  [key=2, style=dotted];
m0_535 -> m0_182  [key=2, style=dotted];
m0_535 -> m0_548  [key=2, style=dotted];
m0_536 -> m0_537  [key=0, style=solid];
m0_536 -> m0_538  [key=0, style=solid];
m0_537 -> m0_547  [key=0, style=solid];
m0_537 -> m0_181  [key=2, style=dotted];
m0_537 -> m0_182  [key=2, style=dotted];
m0_537 -> m0_549  [key=2, style=dotted];
m0_538 -> m0_539  [key=0, style=solid];
m0_538 -> m0_540  [key=0, style=solid];
m0_539 -> m0_547  [key=0, style=solid];
m0_539 -> m0_181  [key=2, style=dotted];
m0_539 -> m0_182  [key=2, style=dotted];
m0_539 -> m0_183  [key=2, style=dotted];
m0_540 -> m0_541  [key=0, style=solid];
m0_540 -> m0_543  [key=0, style=solid];
m0_541 -> m0_542  [key=0, style=solid];
m0_541 -> m0_545  [key=0, style=solid];
m0_542 -> m0_547  [key=0, style=solid];
m0_542 -> m0_181  [key=2, style=dotted];
m0_542 -> m0_182  [key=2, style=dotted];
m0_542 -> m0_548  [key=2, style=dotted];
m0_543 -> m0_544  [key=0, style=solid];
m0_543 -> m0_545  [key=0, style=solid];
m0_544 -> m0_547  [key=0, style=solid];
m0_544 -> m0_181  [key=2, style=dotted];
m0_544 -> m0_182  [key=2, style=dotted];
m0_544 -> m0_549  [key=2, style=dotted];
m0_545 -> m0_546  [key=0, style=solid];
m0_545 -> m0_547  [key=1, style=dashed, color=darkseagreen4, label="ref System.Type"];
m0_531 -> m0_547  [key=0, style=solid];
m0_546 -> m0_547  [key=0, style=solid];
m0_547 -> m0_411  [key=0, style=bold, color=blue];
m0_503 -> m0_510  [key=0, style=solid];
m0_503 -> m0_51  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type t"];
m0_510 -> m0_511  [key=0, style=solid];
m0_510 -> m0_513  [key=2, style=dotted];
m0_511 -> m0_512  [key=0, style=solid];
m0_512 -> m0_503  [key=0, style=bold, color=blue];
m0_327 -> m0_328  [key=0, style=solid];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_330  [key=2, style=dotted];
m0_329 -> m0_327  [key=0, style=bold, color=blue];
m0_574 -> m0_575  [key=0, style=solid];
m0_574 -> m0_577  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_574 -> m0_578  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m0_574 -> m0_569  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo member"];
m0_575 -> m0_576  [key=0, style=solid];
m0_577 -> m0_579  [key=0, style=solid];
m0_577 -> m0_581  [key=2, style=dotted];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_582  [key=2, style=dotted];
m0_576 -> m0_577  [key=0, style=solid];
m0_576 -> m0_578  [key=0, style=solid];
m0_579 -> m0_580  [key=0, style=solid];
m0_580 -> m0_574  [key=0, style=bold, color=blue];
m0_414 -> m0_415  [key=0, style=solid];
m0_414 -> m0_86  [key=2, style=dotted];
m0_414 -> m0_417  [key=1, style=dashed, color=darkseagreen4, label=ret];
m0_414 -> m0_419  [key=1, style=dashed, color=darkseagreen4, label=ret];
m0_414 -> m0_420  [key=1, style=dashed, color=darkseagreen4, label=ret];
m0_415 -> m0_416  [key=0, style=solid];
m0_415 -> m0_417  [key=1, style=dashed, color=darkseagreen4, label=current];
m0_415 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label=current];
m0_415 -> m0_151  [key=3, color=darkorchid, style=bold, label="Local variable System.Type current"];
m0_417 -> m0_418  [key=0, style=solid];
m0_417 -> m0_90  [key=2, style=dotted];
m0_419 -> m0_420  [key=0, style=solid];
m0_419 -> m0_423  [key=2, style=dotted];
m0_420 -> m0_421  [key=0, style=solid];
m0_416 -> m0_417  [key=0, style=solid];
m0_416 -> m0_419  [key=0, style=solid];
m0_418 -> m0_416  [key=0, style=solid];
m0_418 -> m0_422  [key=2, style=dotted];
m0_418 -> m0_418  [key=1, style=dashed, color=darkseagreen4, label=current];
m0_421 -> m0_151  [key=0, style=bold, color=blue];
m0_549 -> m0_0  [key=3, color=darkorchid, style=bold, label="Field variable System.Type _resolverType"];
m0_557 -> m0_558  [key=0, style=solid];
m0_557 -> m0_54  [key=2, style=dotted];
m0_557 -> m0_561  [key=1, style=dashed, color=darkseagreen4, label=members];
m0_560 -> m0_561  [key=0, style=solid];
m0_560 -> m0_300  [key=2, style=dotted];
m0_560 -> m0_564  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_560 -> m0_565  [key=1, style=dashed, color=darkseagreen4, label=properties];
m0_562 -> m0_563  [key=0, style=solid];
m0_562 -> m0_569  [key=2, style=dotted];
m0_562 -> m0_564  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_558 -> m0_559  [key=0, style=solid];
m0_558 -> m0_560  [key=0, style=solid];
m0_561 -> m0_562  [key=0, style=solid];
m0_561 -> m0_565  [key=0, style=solid];
m0_559 -> m0_567  [key=0, style=solid];
m0_559 -> m0_568  [key=2, style=dotted];
m0_564 -> m0_561  [key=0, style=solid];
m0_564 -> m0_303  [key=2, style=dotted];
m0_565 -> m0_566  [key=0, style=solid];
m0_565 -> m0_570  [key=2, style=dotted];
m0_565 -> m0_286  [key=2, style=dotted];
m0_565 -> m0_571  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_563 -> m0_564  [key=0, style=solid];
m0_563 -> m0_561  [key=0, style=solid];
m0_566 -> m0_567  [key=0, style=solid];
m0_567 -> m0_139  [key=0, style=bold, color=blue];
m0_694 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_694 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_694 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_695 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="ref Newtonsoft.Json.Serialization.ResolverContractKey"];
m0_696 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_147  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_427  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_445  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_473  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_487  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_494  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_500  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_557  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_576  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_588  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_594  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_595  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_651  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_696 -> m0_691  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver"];
m0_697 -> m0_222  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_697 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label=getExtensionDataDictionary];
m0_698 -> m0_224  [key=1, style=dashed, color=darkseagreen4, label=createExtensionDataDictionary];
m0_699 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionary];
m0_700 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=isJTokenValueType];
m0_701 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=setExtensionDataDictionaryValue];
m0_702 -> m0_240  [key=1, style=dashed, color=darkseagreen4, label=createEnumerableWrapper];
m0_704 -> m0_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_704 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_704 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_704 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_704 -> m0_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.DefaultContractResolver.DictionaryEnumerator<TEnumeratorKey, TEnumeratorValue>"];
m0_705 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label=methodCall];
m0_706 -> m0_671  [key=1, style=dashed, color=darkseagreen4, label=shouldSerializeCall];
m0_707 -> m0_686  [key=1, style=dashed, color=darkseagreen4, label=specifiedPropertyGet];
m1_1238 -> m1_1239  [key=0, style=solid];
m1_1238 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool HasLineInfo"];
m1_1239 -> m1_1240  [key=0, style=solid];
m1_1240 -> m1_1238  [key=0, style=bold, color=blue];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_170  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m1_138 -> m1_171  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m1_138 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m1_138 -> m1_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Read"];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_169  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_168  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_149  [key=0, style=solid];
m1_141 -> m1_152  [key=0, style=solid];
m1_141 -> m1_155  [key=0, style=solid];
m1_141 -> m1_167  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_155 -> m1_156  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_176  [key=2, style=dotted];
m1_167 -> m1_177  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_145  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_146 -> m1_147  [key=0, style=solid];
m1_147 -> m1_148  [key=0, style=solid];
m1_148 -> m1_168  [key=0, style=solid];
m1_148 -> m1_170  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_151 -> m1_168  [key=0, style=solid];
m1_151 -> m1_171  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_140  [key=0, style=solid];
m1_153 -> m1_172  [key=2, style=dotted];
m1_154 -> m1_168  [key=0, style=solid];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_165  [key=0, style=solid];
m1_156 -> m1_120  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_173  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_174  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_161  [key=0, style=solid];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_174  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_164  [key=0, style=solid];
m1_160 -> m1_168  [key=0, style=solid];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_175  [key=2, style=dotted];
m1_164 -> m1_168  [key=0, style=solid];
m1_164 -> m1_176  [key=2, style=dotted];
m1_164 -> m1_177  [key=2, style=dotted];
m1_163 -> m1_168  [key=0, style=solid];
m1_166 -> m1_168  [key=0, style=solid];
m1_168 -> m1_138  [key=0, style=bold, color=blue];
m1_913 -> m1_947  [key=0, style=solid];
m1_947 -> m1_948  [key=0, style=solid];
m1_947 -> m1_981  [key=0, style=solid];
m1_947 -> m1_357  [key=2, style=dotted];
m1_948 -> m1_949  [key=0, style=solid];
m1_948 -> m1_173  [key=2, style=dotted];
m1_981 -> m1_982  [key=0, style=solid];
m1_981 -> m1_177  [key=2, style=dotted];
m1_949 -> m1_950  [key=0, style=solid];
m1_949 -> m1_973  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_950 -> m1_951  [key=0, style=solid];
m1_950 -> m1_973  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m1_973 -> m1_974  [key=0, style=solid];
m1_973 -> m1_650  [key=2, style=dotted];
m1_951 -> m1_952  [key=0, style=solid];
m1_951 -> m1_973  [key=0, style=solid];
m1_952 -> m1_953  [key=0, style=solid];
m1_952 -> m1_959  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_952 -> m1_961  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_952 -> m1_964  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_952 -> m1_967  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_952 -> m1_970  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_952 -> m1_972  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_953 -> m1_954  [key=0, style=solid];
m1_953 -> m1_959  [key=0, style=solid];
m1_959 -> m1_960  [key=0, style=solid];
m1_959 -> m1_961  [key=0, style=solid];
m1_959 -> m1_814  [key=2, style=dotted];
m1_961 -> m1_962  [key=0, style=solid];
m1_961 -> m1_964  [key=0, style=solid];
m1_964 -> m1_965  [key=0, style=solid];
m1_964 -> m1_967  [key=0, style=solid];
m1_967 -> m1_968  [key=0, style=solid];
m1_967 -> m1_970  [key=0, style=solid];
m1_967 -> m1_263  [key=2, style=dotted];
m1_970 -> m1_971  [key=0, style=solid];
m1_970 -> m1_972  [key=0, style=solid];
m1_972 -> m1_982  [key=0, style=solid];
m1_972 -> m1_176  [key=2, style=dotted];
m1_972 -> m1_177  [key=2, style=dotted];
m1_954 -> m1_955  [key=0, style=solid];
m1_954 -> m1_957  [key=0, style=solid];
m1_955 -> m1_956  [key=0, style=solid];
m1_955 -> m1_951  [key=0, style=solid];
m1_955 -> m1_83  [key=2, style=dotted];
m1_957 -> m1_958  [key=0, style=solid];
m1_957 -> m1_973  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m1_956 -> m1_982  [key=0, style=solid];
m1_956 -> m1_177  [key=2, style=dotted];
m1_958 -> m1_973  [key=0, style=solid];
m1_960 -> m1_951  [key=0, style=solid];
m1_962 -> m1_963  [key=0, style=solid];
m1_962 -> m1_973  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m1_963 -> m1_973  [key=0, style=solid];
m1_963 -> m1_261  [key=2, style=dotted];
m1_965 -> m1_966  [key=0, style=solid];
m1_965 -> m1_973  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m1_966 -> m1_973  [key=0, style=solid];
m1_966 -> m1_262  [key=2, style=dotted];
m1_968 -> m1_969  [key=0, style=solid];
m1_968 -> m1_973  [key=1, style=dashed, color=darkseagreen4, label=endPosition];
m1_969 -> m1_973  [key=0, style=solid];
m1_971 -> m1_973  [key=0, style=solid];
m1_974 -> m1_975  [key=0, style=solid];
m1_974 -> m1_61  [key=2, style=dotted];
m1_974 -> m1_980  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m1_975 -> m1_976  [key=0, style=solid];
m1_975 -> m1_173  [key=2, style=dotted];
m1_980 -> m1_982  [key=0, style=solid];
m1_980 -> m1_358  [key=2, style=dotted];
m1_976 -> m1_977  [key=0, style=solid];
m1_976 -> m1_978  [key=0, style=solid];
m1_977 -> m1_982  [key=0, style=solid];
m1_977 -> m1_176  [key=2, style=dotted];
m1_977 -> m1_177  [key=2, style=dotted];
m1_978 -> m1_979  [key=0, style=solid];
m1_979 -> m1_980  [key=0, style=solid];
m1_979 -> m1_711  [key=2, style=dotted];
m1_982 -> m1_913  [key=0, style=bold, color=blue];
m1_537 -> m1_1195  [key=0, style=solid];
m1_1195 -> m1_1196  [key=0, style=solid];
m1_1195 -> m1_1197  [key=0, style=solid];
m1_1195 -> m1_357  [key=2, style=dotted];
m1_1196 -> m1_1198  [key=0, style=solid];
m1_1196 -> m1_174  [key=2, style=dotted];
m1_1197 -> m1_1198  [key=0, style=solid];
m1_1197 -> m1_177  [key=2, style=dotted];
m1_1198 -> m1_537  [key=0, style=bold, color=blue];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_86  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m1_83 -> m1_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_83 -> m1_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [key=2, style=dotted];
m1_85 -> m1_83  [key=0, style=bold, color=blue];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_185  [key=3, color=darkorchid, style=bold, label="method methodReturn string ReadAsString"];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_185  [key=2, style=dotted];
m1_188 -> m1_186  [key=0, style=bold, color=blue];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_17 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_17 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_17 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_17 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_17 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_17 -> m1_201  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m1_17 -> m1_275  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m1_17 -> m1_372  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m1_17 -> m1_456  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m1_17 -> m1_833  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m1_17 -> m1_69  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_17 -> m1_185  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_17 -> m1_205  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_17 -> m1_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_18 -> m1_19  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_59  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_32  [key=0, style=solid];
m1_22 -> m1_36  [key=0, style=solid];
m1_22 -> m1_39  [key=0, style=solid];
m1_35 -> m1_57  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_58  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_60  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_55  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=0, style=solid];
m1_27 -> m1_31  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=0, style=solid];
m1_28 -> m1_61  [key=2, style=dotted];
m1_28 -> m1_62  [key=2, style=dotted];
m1_29 -> m1_31  [key=0, style=solid];
m1_29 -> m1_63  [key=2, style=dotted];
m1_29 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=g];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_64  [key=2, style=dotted];
m1_31 -> m1_57  [key=0, style=solid];
m1_31 -> m1_65  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_61  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_65  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_38 -> m1_57  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_61  [key=2, style=dotted];
m1_55 -> m1_65  [key=2, style=dotted];
m1_42 -> m1_46  [key=0, style=solid];
m1_44 -> m1_46  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_51  [key=0, style=solid];
m1_47 -> m1_48  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_55  [key=0, style=solid];
m1_48 -> m1_66  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_65  [key=2, style=dotted];
m1_50 -> m1_57  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_55  [key=0, style=solid];
m1_52 -> m1_67  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_65  [key=2, style=dotted];
m1_54 -> m1_57  [key=0, style=solid];
m1_57 -> m1_17  [key=0, style=bold, color=blue];
m1_181 -> m1_446  [key=0, style=solid];
m1_181 -> m1_464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_181 -> m1_465  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_181 -> m1_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_181 -> m1_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_181 -> m1_527  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_181 -> m1_658  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_181 -> m1_525  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_181 -> m1_205  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadNumberValue"];
m1_446 -> m1_447  [key=0, style=solid];
m1_446 -> m1_169  [key=2, style=dotted];
m1_464 -> m1_465  [key=0, style=solid];
m1_464 -> m1_17  [key=2, style=dotted];
m1_465 -> m1_466  [key=0, style=solid];
m1_465 -> m1_468  [key=0, style=solid];
m1_465 -> m1_470  [key=0, style=solid];
m1_465 -> m1_472  [key=0, style=solid];
m1_472 -> m1_514  [key=0, style=solid];
m1_472 -> m1_355  [key=2, style=dotted];
m1_472 -> m1_7  [key=2, style=dotted];
m1_488 -> m1_489  [key=0, style=solid];
m1_488 -> m1_356  [key=2, style=dotted];
m1_447 -> m1_448  [key=0, style=solid];
m1_447 -> m1_510  [key=0, style=solid];
m1_447 -> m1_513  [key=0, style=solid];
m1_448 -> m1_449  [key=0, style=solid];
m1_510 -> m1_511  [key=0, style=solid];
m1_510 -> m1_498  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T> nextInLine"];
m1_513 -> m1_514  [key=0, style=solid];
m1_513 -> m1_176  [key=2, style=dotted];
m1_513 -> m1_177  [key=2, style=dotted];
m1_449 -> m1_450  [key=0, style=solid];
m1_450 -> m1_451  [key=0, style=solid];
m1_451 -> m1_452  [key=0, style=solid];
m1_452 -> m1_453  [key=0, style=solid];
m1_453 -> m1_454  [key=0, style=solid];
m1_454 -> m1_455  [key=0, style=solid];
m1_455 -> m1_456  [key=0, style=solid];
m1_455 -> m1_510  [key=0, style=solid];
m1_456 -> m1_457  [key=0, style=solid];
m1_456 -> m1_464  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_456 -> m1_499  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_456 -> m1_508  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_456 -> m1_509  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_457 -> m1_458  [key=0, style=solid];
m1_457 -> m1_462  [key=0, style=solid];
m1_457 -> m1_473  [key=0, style=solid];
m1_457 -> m1_476  [key=0, style=solid];
m1_457 -> m1_490  [key=0, style=solid];
m1_457 -> m1_492  [key=0, style=solid];
m1_457 -> m1_494  [key=0, style=solid];
m1_457 -> m1_500  [key=0, style=solid];
m1_457 -> m1_502  [key=0, style=solid];
m1_457 -> m1_504  [key=0, style=solid];
m1_457 -> m1_507  [key=0, style=solid];
m1_499 -> m1_514  [key=0, style=solid];
m1_499 -> m1_260  [key=2, style=dotted];
m1_508 -> m1_509  [key=0, style=solid];
m1_508 -> m1_455  [key=0, style=solid];
m1_508 -> m1_263  [key=2, style=dotted];
m1_509 -> m1_514  [key=0, style=solid];
m1_509 -> m1_260  [key=2, style=dotted];
m1_458 -> m1_459  [key=0, style=solid];
m1_462 -> m1_463  [key=0, style=solid];
m1_473 -> m1_474  [key=0, style=solid];
m1_476 -> m1_477  [key=0, style=solid];
m1_490 -> m1_491  [key=0, style=solid];
m1_492 -> m1_493  [key=0, style=solid];
m1_494 -> m1_495  [key=0, style=solid];
m1_500 -> m1_501  [key=0, style=solid];
m1_502 -> m1_503  [key=0, style=solid];
m1_504 -> m1_505  [key=0, style=solid];
m1_507 -> m1_508  [key=0, style=solid];
m1_459 -> m1_460  [key=0, style=solid];
m1_459 -> m1_455  [key=0, style=solid];
m1_459 -> m1_254  [key=2, style=dotted];
m1_460 -> m1_461  [key=0, style=solid];
m1_460 -> m1_65  [key=2, style=dotted];
m1_461 -> m1_514  [key=0, style=solid];
m1_463 -> m1_464  [key=0, style=solid];
m1_466 -> m1_467  [key=0, style=solid];
m1_468 -> m1_469  [key=0, style=solid];
m1_470 -> m1_471  [key=0, style=solid];
m1_467 -> m1_514  [key=0, style=solid];
m1_467 -> m1_61  [key=2, style=dotted];
m1_467 -> m1_515  [key=2, style=dotted];
m1_469 -> m1_514  [key=0, style=solid];
m1_469 -> m1_61  [key=2, style=dotted];
m1_469 -> m1_516  [key=2, style=dotted];
m1_471 -> m1_514  [key=0, style=solid];
m1_471 -> m1_61  [key=2, style=dotted];
m1_471 -> m1_517  [key=2, style=dotted];
m1_474 -> m1_475  [key=0, style=solid];
m1_474 -> m1_258  [key=2, style=dotted];
m1_475 -> m1_514  [key=0, style=solid];
m1_477 -> m1_478  [key=0, style=solid];
m1_478 -> m1_479  [key=0, style=solid];
m1_479 -> m1_480  [key=0, style=solid];
m1_480 -> m1_481  [key=0, style=solid];
m1_481 -> m1_482  [key=0, style=solid];
m1_482 -> m1_483  [key=0, style=solid];
m1_483 -> m1_484  [key=0, style=solid];
m1_484 -> m1_485  [key=0, style=solid];
m1_485 -> m1_486  [key=0, style=solid];
m1_486 -> m1_487  [key=0, style=solid];
m1_487 -> m1_488  [key=0, style=solid];
m1_489 -> m1_514  [key=0, style=solid];
m1_491 -> m1_455  [key=0, style=solid];
m1_491 -> m1_175  [key=2, style=dotted];
m1_493 -> m1_455  [key=0, style=solid];
m1_493 -> m1_259  [key=2, style=dotted];
m1_495 -> m1_496  [key=0, style=solid];
m1_496 -> m1_497  [key=0, style=solid];
m1_496 -> m1_499  [key=0, style=solid];
m1_497 -> m1_498  [key=0, style=solid];
m1_497 -> m1_174  [key=2, style=dotted];
m1_497 -> m1_500  [key=3, color=darkorchid, style=bold, label="Field variable T value"];
m1_498 -> m1_514  [key=0, style=solid];
m1_498 -> m1_500  [key=3, color=darkorchid, style=bold, label="Field variable Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T> next"];
m1_501 -> m1_455  [key=0, style=solid];
m1_501 -> m1_261  [key=2, style=dotted];
m1_503 -> m1_455  [key=0, style=solid];
m1_503 -> m1_262  [key=2, style=dotted];
m1_505 -> m1_506  [key=0, style=solid];
m1_506 -> m1_455  [key=0, style=solid];
m1_511 -> m1_512  [key=0, style=solid];
m1_511 -> m1_264  [key=2, style=dotted];
m1_512 -> m1_514  [key=0, style=solid];
m1_514 -> m1_181  [key=0, style=bold, color=blue];
m1_810 -> m1_815  [key=0, style=solid];
m1_815 -> m1_816  [key=0, style=solid];
m1_815 -> m1_822  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_815 -> m1_828  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_816 -> m1_817  [key=0, style=solid];
m1_816 -> m1_831  [key=0, style=solid];
m1_822 -> m1_823  [key=0, style=solid];
m1_822 -> m1_650  [key=2, style=dotted];
m1_828 -> m1_829  [key=0, style=solid];
m1_828 -> m1_650  [key=2, style=dotted];
m1_817 -> m1_818  [key=0, style=solid];
m1_817 -> m1_824  [key=0, style=solid];
m1_818 -> m1_819  [key=0, style=solid];
m1_824 -> m1_825  [key=0, style=solid];
m1_824 -> m1_827  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_824 -> m1_830  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_819 -> m1_820  [key=0, style=solid];
m1_819 -> m1_822  [key=0, style=solid];
m1_820 -> m1_821  [key=0, style=solid];
m1_820 -> m1_816  [key=0, style=solid];
m1_820 -> m1_83  [key=2, style=dotted];
m1_821 -> m1_831  [key=0, style=solid];
m1_821 -> m1_177  [key=2, style=dotted];
m1_823 -> m1_831  [key=0, style=solid];
m1_825 -> m1_826  [key=0, style=solid];
m1_825 -> m1_827  [key=0, style=solid];
m1_825 -> m1_809  [key=2, style=dotted];
m1_827 -> m1_828  [key=0, style=solid];
m1_827 -> m1_830  [key=0, style=solid];
m1_827 -> m1_263  [key=2, style=dotted];
m1_830 -> m1_831  [key=0, style=solid];
m1_830 -> m1_176  [key=2, style=dotted];
m1_830 -> m1_177  [key=2, style=dotted];
m1_826 -> m1_816  [key=0, style=solid];
m1_829 -> m1_831  [key=0, style=solid];
m1_831 -> m1_810  [key=0, style=bold, color=blue];
m1_1226 -> m1_1227  [key=0, style=solid];
m1_1227 -> m1_1228  [key=0, style=solid];
m1_1227 -> m1_1235  [key=2, style=dotted];
m1_1228 -> m1_1229  [key=0, style=solid];
m1_1228 -> m1_1231  [key=0, style=solid];
m1_1229 -> m1_1230  [key=0, style=solid];
m1_1229 -> m1_118  [key=2, style=dotted];
m1_1231 -> m1_1232  [key=0, style=solid];
m1_1231 -> m1_1233  [key=0, style=solid];
m1_1230 -> m1_1231  [key=0, style=solid];
m1_1232 -> m1_1233  [key=0, style=solid];
m1_1232 -> m1_1236  [key=2, style=dotted];
m1_1233 -> m1_1234  [key=0, style=solid];
m1_1233 -> m1_1237  [key=2, style=dotted];
m1_1234 -> m1_1226  [key=0, style=bold, color=blue];
m1_781 -> m1_782  [key=0, style=solid];
m1_781 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseProperty"];
m1_782 -> m1_783  [key=0, style=solid];
m1_782 -> m1_784  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m1_782 -> m1_786  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m1_782 -> m1_789  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m1_783 -> m1_784  [key=0, style=solid];
m1_783 -> m1_805  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m1_783 -> m1_782  [key=3, color=darkorchid, style=bold, label="Local variable char quoteChar"];
m1_784 -> m1_785  [key=0, style=solid];
m1_784 -> m1_789  [key=0, style=solid];
m1_786 -> m1_787  [key=0, style=solid];
m1_786 -> m1_788  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m1_786 -> m1_805  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m1_789 -> m1_790  [key=0, style=solid];
m1_789 -> m1_793  [key=0, style=solid];
m1_789 -> m1_809  [key=2, style=dotted];
m1_805 -> m1_806  [key=0, style=solid];
m1_785 -> m1_786  [key=0, style=solid];
m1_787 -> m1_788  [key=0, style=solid];
m1_787 -> m1_58  [key=2, style=dotted];
m1_788 -> m1_794  [key=0, style=solid];
m1_788 -> m1_59  [key=2, style=dotted];
m1_790 -> m1_791  [key=0, style=solid];
m1_790 -> m1_805  [key=1, style=dashed, color=darkseagreen4, label=quoteChar];
m1_793 -> m1_808  [key=0, style=solid];
m1_793 -> m1_176  [key=2, style=dotted];
m1_793 -> m1_177  [key=2, style=dotted];
m1_791 -> m1_792  [key=0, style=solid];
m1_791 -> m1_58  [key=2, style=dotted];
m1_792 -> m1_794  [key=0, style=solid];
m1_792 -> m1_810  [key=2, style=dotted];
m1_794 -> m1_795  [key=0, style=solid];
m1_795 -> m1_796  [key=0, style=solid];
m1_795 -> m1_799  [key=0, style=solid];
m1_796 -> m1_797  [key=0, style=solid];
m1_796 -> m1_811  [key=2, style=dotted];
m1_796 -> m1_804  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m1_799 -> m1_800  [key=0, style=solid];
m1_799 -> m1_61  [key=2, style=dotted];
m1_799 -> m1_804  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m1_797 -> m1_798  [key=0, style=solid];
m1_797 -> m1_800  [key=0, style=solid];
m1_804 -> m1_805  [key=0, style=solid];
m1_804 -> m1_358  [key=2, style=dotted];
m1_798 -> m1_800  [key=0, style=solid];
m1_798 -> m1_61  [key=2, style=dotted];
m1_798 -> m1_804  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m1_800 -> m1_801  [key=0, style=solid];
m1_800 -> m1_173  [key=2, style=dotted];
m1_801 -> m1_802  [key=0, style=solid];
m1_801 -> m1_803  [key=0, style=solid];
m1_802 -> m1_808  [key=0, style=solid];
m1_802 -> m1_176  [key=2, style=dotted];
m1_802 -> m1_177  [key=2, style=dotted];
m1_803 -> m1_804  [key=0, style=solid];
m1_806 -> m1_807  [key=0, style=solid];
m1_806 -> m1_711  [key=2, style=dotted];
m1_807 -> m1_808  [key=0, style=solid];
m1_808 -> m1_781  [key=0, style=bold, color=blue];
m1_524 -> m1_525  [key=0, style=solid];
m1_524 -> m1_181  [key=3, color=darkorchid, style=bold, label="method methodReturn double? ReadAsDouble"];
m1_525 -> m1_526  [key=0, style=solid];
m1_525 -> m1_181  [key=2, style=dotted];
m1_526 -> m1_524  [key=0, style=bold, color=blue];
m1_914 -> m1_1220  [key=0, style=solid];
m1_1220 -> m1_1221  [key=0, style=solid];
m1_1220 -> m1_1224  [key=0, style=solid];
m1_1220 -> m1_357  [key=2, style=dotted];
m1_1221 -> m1_1222  [key=0, style=solid];
m1_1221 -> m1_1223  [key=0, style=solid];
m1_1224 -> m1_1225  [key=0, style=solid];
m1_1224 -> m1_177  [key=2, style=dotted];
m1_1222 -> m1_1225  [key=0, style=solid];
m1_1222 -> m1_1213  [key=2, style=dotted];
m1_1223 -> m1_1225  [key=0, style=solid];
m1_1223 -> m1_358  [key=2, style=dotted];
m1_1225 -> m1_914  [key=0, style=bold, color=blue];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_205  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytes"];
m1_189 -> m1_210  [key=3, color=darkorchid, style=bold, label="method methodReturn byte[] ReadAsBytes"];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_169  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label=isWrapped];
m1_191 -> m1_31  [key=3, color=darkorchid, style=bold, label="Local variable bool isWrapped"];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_249  [key=0, style=solid];
m1_192 -> m1_252  [key=0, style=solid];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_216  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_249 -> m1_250  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_176  [key=2, style=dotted];
m1_252 -> m1_177  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_195 -> m1_196  [key=0, style=solid];
m1_196 -> m1_197  [key=0, style=solid];
m1_197 -> m1_198  [key=0, style=solid];
m1_198 -> m1_199  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_249  [key=0, style=solid];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_209  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_201 -> m1_238  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_201 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_201 -> m1_248  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_207  [key=0, style=solid];
m1_202 -> m1_217  [key=0, style=solid];
m1_202 -> m1_222  [key=0, style=solid];
m1_202 -> m1_226  [key=0, style=solid];
m1_202 -> m1_229  [key=0, style=solid];
m1_202 -> m1_231  [key=0, style=solid];
m1_202 -> m1_233  [key=0, style=solid];
m1_202 -> m1_239  [key=0, style=solid];
m1_202 -> m1_241  [key=0, style=solid];
m1_202 -> m1_243  [key=0, style=solid];
m1_202 -> m1_246  [key=0, style=solid];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_17  [key=2, style=dotted];
m1_238 -> m1_253  [key=0, style=solid];
m1_238 -> m1_260  [key=2, style=dotted];
m1_247 -> m1_248  [key=0, style=solid];
m1_247 -> m1_200  [key=0, style=solid];
m1_247 -> m1_263  [key=2, style=dotted];
m1_248 -> m1_253  [key=0, style=solid];
m1_248 -> m1_260  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_207 -> m1_208  [key=0, style=solid];
m1_217 -> m1_218  [key=0, style=solid];
m1_222 -> m1_223  [key=0, style=solid];
m1_226 -> m1_227  [key=0, style=solid];
m1_229 -> m1_230  [key=0, style=solid];
m1_231 -> m1_232  [key=0, style=solid];
m1_233 -> m1_234  [key=0, style=solid];
m1_239 -> m1_240  [key=0, style=solid];
m1_241 -> m1_242  [key=0, style=solid];
m1_243 -> m1_244  [key=0, style=solid];
m1_246 -> m1_247  [key=0, style=solid];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_200  [key=0, style=solid];
m1_204 -> m1_254  [key=2, style=dotted];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_65  [key=2, style=dotted];
m1_206 -> m1_253  [key=0, style=solid];
m1_208 -> m1_209  [key=0, style=solid];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_215  [key=1, style=dashed, color=darkseagreen4, label=data];
m1_210 -> m1_216  [key=1, style=dashed, color=darkseagreen4, label=data];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_65  [key=2, style=dotted];
m1_216 -> m1_253  [key=0, style=solid];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_255  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_215  [key=0, style=solid];
m1_214 -> m1_253  [key=0, style=solid];
m1_214 -> m1_176  [key=2, style=dotted];
m1_214 -> m1_177  [key=2, style=dotted];
m1_218 -> m1_219  [key=0, style=solid];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_174  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_256  [key=2, style=dotted];
m1_221 -> m1_200  [key=0, style=solid];
m1_223 -> m1_224  [key=0, style=solid];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_174  [key=2, style=dotted];
m1_225 -> m1_253  [key=0, style=solid];
m1_225 -> m1_257  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_258  [key=2, style=dotted];
m1_228 -> m1_253  [key=0, style=solid];
m1_230 -> m1_200  [key=0, style=solid];
m1_230 -> m1_175  [key=2, style=dotted];
m1_232 -> m1_200  [key=0, style=solid];
m1_232 -> m1_259  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_238  [key=0, style=solid];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_174  [key=2, style=dotted];
m1_237 -> m1_253  [key=0, style=solid];
m1_240 -> m1_200  [key=0, style=solid];
m1_240 -> m1_261  [key=2, style=dotted];
m1_242 -> m1_200  [key=0, style=solid];
m1_242 -> m1_262  [key=2, style=dotted];
m1_244 -> m1_245  [key=0, style=solid];
m1_245 -> m1_200  [key=0, style=solid];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_264  [key=2, style=dotted];
m1_251 -> m1_253  [key=0, style=solid];
m1_253 -> m1_189  [key=0, style=bold, color=blue];
m1_649 -> m1_652  [key=0, style=solid];
m1_649 -> m1_653  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_649 -> m1_654  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_649 -> m1_605  [key=3, color=darkorchid, style=bold, label="Parameter variable char writeChar"];
m1_649 -> m1_578  [key=3, color=darkorchid, style=bold, label="Parameter variable char writeChar"];
m1_649 -> m1_561  [key=3, color=darkorchid, style=bold, label="Parameter variable int lastWritePosition"];
m1_649 -> m1_575  [key=3, color=darkorchid, style=bold, label="Parameter variable int writeToPosition"];
m1_652 -> m1_653  [key=0, style=solid];
m1_652 -> m1_654  [key=0, style=solid];
m1_653 -> m1_654  [key=0, style=solid];
m1_653 -> m1_651  [key=2, style=dotted];
m1_654 -> m1_655  [key=0, style=solid];
m1_654 -> m1_656  [key=2, style=dotted];
m1_655 -> m1_649  [key=0, style=bold, color=blue];
m1_809 -> m1_812  [key=0, style=solid];
m1_809 -> m1_782  [key=3, color=darkorchid, style=bold, label="Parameter variable char value"];
m1_809 -> m1_824  [key=3, color=darkorchid, style=bold, label="Parameter variable char value"];
m1_812 -> m1_813  [key=0, style=solid];
m1_812 -> m1_814  [key=2, style=dotted];
m1_813 -> m1_809  [key=0, style=bold, color=blue];
m1_169 -> m1_555  [key=0, style=solid];
m1_555 -> m1_556  [key=0, style=solid];
m1_555 -> m1_558  [key=0, style=solid];
m1_556 -> m1_557  [key=0, style=solid];
m1_556 -> m1_117  [key=2, style=dotted];
m1_557 -> m1_558  [key=0, style=solid];
m1_558 -> m1_169  [key=0, style=bold, color=blue];
m1_185 -> m1_265  [key=0, style=solid];
m1_185 -> m1_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_185 -> m1_284  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_185 -> m1_297  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_185 -> m1_310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_185 -> m1_317  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_185 -> m1_183  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_185 -> m1_187  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_185 -> m1_519  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_185 -> m1_205  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadStringValue"];
m1_185 -> m1_320  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadStringValue"];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_169  [key=2, style=dotted];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_17  [key=2, style=dotted];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_287  [key=0, style=solid];
m1_284 -> m1_289  [key=0, style=solid];
m1_284 -> m1_293  [key=0, style=solid];
m1_284 -> m1_297  [key=0, style=solid];
m1_297 -> m1_352  [key=0, style=solid];
m1_297 -> m1_355  [key=2, style=dotted];
m1_297 -> m1_7  [key=2, style=dotted];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_313  [key=0, style=solid];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_320  [key=0, style=solid];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_348  [key=0, style=solid];
m1_266 -> m1_351  [key=0, style=solid];
m1_267 -> m1_268  [key=0, style=solid];
m1_348 -> m1_349  [key=0, style=solid];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_176  [key=2, style=dotted];
m1_351 -> m1_177  [key=2, style=dotted];
m1_268 -> m1_269  [key=0, style=solid];
m1_269 -> m1_270  [key=0, style=solid];
m1_270 -> m1_271  [key=0, style=solid];
m1_271 -> m1_272  [key=0, style=solid];
m1_272 -> m1_273  [key=0, style=solid];
m1_273 -> m1_274  [key=0, style=solid];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_348  [key=0, style=solid];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_283  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_275 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_275 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_275 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_275 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_275 -> m1_346  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_275 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_281  [key=0, style=solid];
m1_276 -> m1_298  [key=0, style=solid];
m1_276 -> m1_315  [key=0, style=solid];
m1_276 -> m1_325  [key=0, style=solid];
m1_276 -> m1_328  [key=0, style=solid];
m1_276 -> m1_330  [key=0, style=solid];
m1_276 -> m1_332  [key=0, style=solid];
m1_276 -> m1_338  [key=0, style=solid];
m1_276 -> m1_340  [key=0, style=solid];
m1_276 -> m1_342  [key=0, style=solid];
m1_276 -> m1_345  [key=0, style=solid];
m1_312 -> m1_352  [key=0, style=solid];
m1_312 -> m1_260  [key=2, style=dotted];
m1_319 -> m1_352  [key=0, style=solid];
m1_319 -> m1_260  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_323  [key=1, style=dashed, color=darkseagreen4, label=expected];
m1_320 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=expected];
m1_337 -> m1_352  [key=0, style=solid];
m1_337 -> m1_260  [key=2, style=dotted];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_274  [key=0, style=solid];
m1_346 -> m1_263  [key=2, style=dotted];
m1_347 -> m1_352  [key=0, style=solid];
m1_347 -> m1_260  [key=2, style=dotted];
m1_277 -> m1_278  [key=0, style=solid];
m1_281 -> m1_282  [key=0, style=solid];
m1_298 -> m1_299  [key=0, style=solid];
m1_315 -> m1_316  [key=0, style=solid];
m1_325 -> m1_326  [key=0, style=solid];
m1_328 -> m1_329  [key=0, style=solid];
m1_330 -> m1_331  [key=0, style=solid];
m1_332 -> m1_333  [key=0, style=solid];
m1_338 -> m1_339  [key=0, style=solid];
m1_340 -> m1_341  [key=0, style=solid];
m1_342 -> m1_343  [key=0, style=solid];
m1_345 -> m1_346  [key=0, style=solid];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_274  [key=0, style=solid];
m1_278 -> m1_254  [key=2, style=dotted];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_65  [key=2, style=dotted];
m1_279 -> m1_279  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_280 -> m1_352  [key=0, style=solid];
m1_282 -> m1_283  [key=0, style=solid];
m1_285 -> m1_286  [key=0, style=solid];
m1_287 -> m1_288  [key=0, style=solid];
m1_289 -> m1_290  [key=0, style=solid];
m1_293 -> m1_294  [key=0, style=solid];
m1_286 -> m1_352  [key=0, style=solid];
m1_288 -> m1_352  [key=0, style=solid];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_292  [key=0, style=solid];
m1_291 -> m1_352  [key=0, style=solid];
m1_292 -> m1_352  [key=0, style=solid];
m1_292 -> m1_353  [key=2, style=dotted];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_296  [key=0, style=solid];
m1_295 -> m1_352  [key=0, style=solid];
m1_296 -> m1_352  [key=0, style=solid];
m1_296 -> m1_354  [key=2, style=dotted];
m1_299 -> m1_300  [key=0, style=solid];
m1_300 -> m1_301  [key=0, style=solid];
m1_301 -> m1_302  [key=0, style=solid];
m1_302 -> m1_303  [key=0, style=solid];
m1_303 -> m1_304  [key=0, style=solid];
m1_304 -> m1_305  [key=0, style=solid];
m1_305 -> m1_306  [key=0, style=solid];
m1_306 -> m1_307  [key=0, style=solid];
m1_307 -> m1_308  [key=0, style=solid];
m1_308 -> m1_309  [key=0, style=solid];
m1_309 -> m1_310  [key=0, style=solid];
m1_311 -> m1_312  [key=0, style=solid];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_356  [key=2, style=dotted];
m1_314 -> m1_352  [key=0, style=solid];
m1_316 -> m1_317  [key=0, style=solid];
m1_318 -> m1_319  [key=0, style=solid];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_323  [key=0, style=solid];
m1_321 -> m1_357  [key=2, style=dotted];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_358  [key=2, style=dotted];
m1_324 -> m1_352  [key=0, style=solid];
m1_322 -> m1_352  [key=0, style=solid];
m1_322 -> m1_260  [key=2, style=dotted];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_258  [key=2, style=dotted];
m1_327 -> m1_352  [key=0, style=solid];
m1_329 -> m1_274  [key=0, style=solid];
m1_329 -> m1_175  [key=2, style=dotted];
m1_331 -> m1_274  [key=0, style=solid];
m1_331 -> m1_259  [key=2, style=dotted];
m1_333 -> m1_334  [key=0, style=solid];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_337  [key=0, style=solid];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_174  [key=2, style=dotted];
m1_336 -> m1_352  [key=0, style=solid];
m1_339 -> m1_274  [key=0, style=solid];
m1_339 -> m1_261  [key=2, style=dotted];
m1_341 -> m1_274  [key=0, style=solid];
m1_341 -> m1_262  [key=2, style=dotted];
m1_343 -> m1_344  [key=0, style=solid];
m1_344 -> m1_274  [key=0, style=solid];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_264  [key=2, style=dotted];
m1_350 -> m1_352  [key=0, style=solid];
m1_352 -> m1_185  [key=0, style=bold, color=blue];
m1_912 -> m1_1203  [key=0, style=solid];
m1_1203 -> m1_1204  [key=0, style=solid];
m1_1203 -> m1_1205  [key=0, style=solid];
m1_1203 -> m1_357  [key=2, style=dotted];
m1_1204 -> m1_1206  [key=0, style=solid];
m1_1204 -> m1_358  [key=2, style=dotted];
m1_1205 -> m1_1206  [key=0, style=solid];
m1_1205 -> m1_177  [key=2, style=dotted];
m1_1206 -> m1_912  [key=0, style=bold, color=blue];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_205  [key=3, color=darkorchid, style=bold, label="method methodReturn bool? ReadAsBoolean"];
m1_361 -> m1_398  [key=3, color=darkorchid, style=bold, label="method methodReturn bool? ReadAsBoolean"];
m1_361 -> m1_406  [key=3, color=darkorchid, style=bold, label="method methodReturn bool? ReadAsBoolean"];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_169  [key=2, style=dotted];
m1_363 -> m1_364  [key=0, style=solid];
m1_363 -> m1_432  [key=0, style=solid];
m1_363 -> m1_435  [key=0, style=solid];
m1_364 -> m1_365  [key=0, style=solid];
m1_432 -> m1_433  [key=0, style=solid];
m1_435 -> m1_436  [key=0, style=solid];
m1_435 -> m1_176  [key=2, style=dotted];
m1_435 -> m1_177  [key=2, style=dotted];
m1_365 -> m1_366  [key=0, style=solid];
m1_366 -> m1_367  [key=0, style=solid];
m1_367 -> m1_368  [key=0, style=solid];
m1_368 -> m1_369  [key=0, style=solid];
m1_369 -> m1_370  [key=0, style=solid];
m1_370 -> m1_371  [key=0, style=solid];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_432  [key=0, style=solid];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_380  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_372 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_372 -> m1_421  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_372 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_372 -> m1_431  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_378  [key=0, style=solid];
m1_373 -> m1_382  [key=0, style=solid];
m1_373 -> m1_385  [key=0, style=solid];
m1_373 -> m1_404  [key=0, style=solid];
m1_373 -> m1_412  [key=0, style=solid];
m1_373 -> m1_414  [key=0, style=solid];
m1_373 -> m1_416  [key=0, style=solid];
m1_373 -> m1_422  [key=0, style=solid];
m1_373 -> m1_424  [key=0, style=solid];
m1_373 -> m1_426  [key=0, style=solid];
m1_373 -> m1_429  [key=0, style=solid];
m1_380 -> m1_381  [key=0, style=solid];
m1_380 -> m1_17  [key=2, style=dotted];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label=isTrue];
m1_406 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label=isTrue];
m1_421 -> m1_436  [key=0, style=solid];
m1_421 -> m1_260  [key=2, style=dotted];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_371  [key=0, style=solid];
m1_430 -> m1_263  [key=2, style=dotted];
m1_431 -> m1_436  [key=0, style=solid];
m1_431 -> m1_260  [key=2, style=dotted];
m1_374 -> m1_375  [key=0, style=solid];
m1_378 -> m1_379  [key=0, style=solid];
m1_382 -> m1_383  [key=0, style=solid];
m1_385 -> m1_386  [key=0, style=solid];
m1_404 -> m1_405  [key=0, style=solid];
m1_412 -> m1_413  [key=0, style=solid];
m1_414 -> m1_415  [key=0, style=solid];
m1_416 -> m1_417  [key=0, style=solid];
m1_422 -> m1_423  [key=0, style=solid];
m1_424 -> m1_425  [key=0, style=solid];
m1_426 -> m1_427  [key=0, style=solid];
m1_429 -> m1_430  [key=0, style=solid];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_371  [key=0, style=solid];
m1_375 -> m1_254  [key=2, style=dotted];
m1_376 -> m1_377  [key=0, style=solid];
m1_376 -> m1_65  [key=2, style=dotted];
m1_377 -> m1_436  [key=0, style=solid];
m1_379 -> m1_380  [key=0, style=solid];
m1_381 -> m1_436  [key=0, style=solid];
m1_381 -> m1_61  [key=2, style=dotted];
m1_381 -> m1_437  [key=2, style=dotted];
m1_383 -> m1_384  [key=0, style=solid];
m1_383 -> m1_258  [key=2, style=dotted];
m1_384 -> m1_436  [key=0, style=solid];
m1_386 -> m1_387  [key=0, style=solid];
m1_387 -> m1_388  [key=0, style=solid];
m1_388 -> m1_389  [key=0, style=solid];
m1_389 -> m1_390  [key=0, style=solid];
m1_390 -> m1_391  [key=0, style=solid];
m1_391 -> m1_392  [key=0, style=solid];
m1_392 -> m1_393  [key=0, style=solid];
m1_393 -> m1_394  [key=0, style=solid];
m1_394 -> m1_395  [key=0, style=solid];
m1_395 -> m1_396  [key=0, style=solid];
m1_396 -> m1_397  [key=0, style=solid];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_356  [key=2, style=dotted];
m1_398 -> m1_399  [key=0, style=solid];
m1_399 -> m1_400  [key=0, style=solid];
m1_399 -> m1_401  [key=0, style=solid];
m1_400 -> m1_402  [key=0, style=solid];
m1_400 -> m1_403  [key=1, style=dashed, color=darkseagreen4, label=b];
m1_401 -> m1_402  [key=0, style=solid];
m1_401 -> m1_438  [key=2, style=dotted];
m1_401 -> m1_403  [key=1, style=dashed, color=darkseagreen4, label=b];
m1_402 -> m1_403  [key=0, style=solid];
m1_402 -> m1_65  [key=2, style=dotted];
m1_403 -> m1_436  [key=0, style=solid];
m1_405 -> m1_406  [key=0, style=solid];
m1_407 -> m1_408  [key=0, style=solid];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_358  [key=2, style=dotted];
m1_411 -> m1_436  [key=0, style=solid];
m1_408 -> m1_409  [key=0, style=solid];
m1_408 -> m1_410  [key=0, style=solid];
m1_408 -> m1_357  [key=2, style=dotted];
m1_409 -> m1_436  [key=0, style=solid];
m1_409 -> m1_260  [key=2, style=dotted];
m1_413 -> m1_371  [key=0, style=solid];
m1_413 -> m1_175  [key=2, style=dotted];
m1_415 -> m1_371  [key=0, style=solid];
m1_415 -> m1_259  [key=2, style=dotted];
m1_417 -> m1_418  [key=0, style=solid];
m1_418 -> m1_419  [key=0, style=solid];
m1_418 -> m1_421  [key=0, style=solid];
m1_419 -> m1_420  [key=0, style=solid];
m1_419 -> m1_174  [key=2, style=dotted];
m1_420 -> m1_436  [key=0, style=solid];
m1_423 -> m1_371  [key=0, style=solid];
m1_423 -> m1_261  [key=2, style=dotted];
m1_425 -> m1_371  [key=0, style=solid];
m1_425 -> m1_262  [key=2, style=dotted];
m1_427 -> m1_428  [key=0, style=solid];
m1_428 -> m1_371  [key=0, style=solid];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_264  [key=2, style=dotted];
m1_434 -> m1_436  [key=0, style=solid];
m1_436 -> m1_361  [key=0, style=bold, color=blue];
m1_667 -> m1_668  [key=0, style=solid];
m1_668 -> m1_669  [key=0, style=solid];
m1_668 -> m1_670  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_668 -> m1_672  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_668 -> m1_673  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_668 -> m1_704  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_669 -> m1_670  [key=0, style=solid];
m1_669 -> m1_710  [key=0, style=solid];
m1_670 -> m1_671  [key=0, style=solid];
m1_670 -> m1_677  [key=0, style=solid];
m1_670 -> m1_705  [key=0, style=solid];
m1_672 -> m1_673  [key=0, style=solid];
m1_673 -> m1_674  [key=0, style=solid];
m1_673 -> m1_676  [key=0, style=solid];
m1_704 -> m1_669  [key=0, style=solid];
m1_704 -> m1_704  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_704 -> m1_705  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_671 -> m1_672  [key=0, style=solid];
m1_677 -> m1_678  [key=0, style=solid];
m1_705 -> m1_706  [key=0, style=solid];
m1_674 -> m1_675  [key=0, style=solid];
m1_674 -> m1_669  [key=0, style=solid];
m1_674 -> m1_83  [key=2, style=dotted];
m1_676 -> m1_710  [key=0, style=solid];
m1_675 -> m1_710  [key=0, style=solid];
m1_678 -> m1_679  [key=0, style=solid];
m1_679 -> m1_680  [key=0, style=solid];
m1_680 -> m1_681  [key=0, style=solid];
m1_681 -> m1_682  [key=0, style=solid];
m1_682 -> m1_683  [key=0, style=solid];
m1_683 -> m1_684  [key=0, style=solid];
m1_684 -> m1_685  [key=0, style=solid];
m1_685 -> m1_686  [key=0, style=solid];
m1_686 -> m1_687  [key=0, style=solid];
m1_687 -> m1_688  [key=0, style=solid];
m1_688 -> m1_689  [key=0, style=solid];
m1_689 -> m1_690  [key=0, style=solid];
m1_690 -> m1_691  [key=0, style=solid];
m1_691 -> m1_692  [key=0, style=solid];
m1_692 -> m1_693  [key=0, style=solid];
m1_693 -> m1_694  [key=0, style=solid];
m1_694 -> m1_695  [key=0, style=solid];
m1_695 -> m1_696  [key=0, style=solid];
m1_696 -> m1_697  [key=0, style=solid];
m1_697 -> m1_698  [key=0, style=solid];
m1_698 -> m1_699  [key=0, style=solid];
m1_699 -> m1_700  [key=0, style=solid];
m1_700 -> m1_701  [key=0, style=solid];
m1_701 -> m1_702  [key=0, style=solid];
m1_702 -> m1_703  [key=0, style=solid];
m1_703 -> m1_704  [key=0, style=solid];
m1_706 -> m1_707  [key=0, style=solid];
m1_706 -> m1_709  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_707 -> m1_708  [key=0, style=solid];
m1_707 -> m1_709  [key=0, style=solid];
m1_707 -> m1_263  [key=2, style=dotted];
m1_709 -> m1_710  [key=0, style=solid];
m1_709 -> m1_176  [key=2, style=dotted];
m1_709 -> m1_177  [key=2, style=dotted];
m1_708 -> m1_710  [key=0, style=solid];
m1_710 -> m1_667  [key=0, style=bold, color=blue];
m1_258 -> m1_527  [key=0, style=solid];
m1_527 -> m1_528  [key=0, style=solid];
m1_527 -> m1_534  [key=0, style=solid];
m1_527 -> m1_120  [key=2, style=dotted];
m1_528 -> m1_529  [key=0, style=solid];
m1_534 -> m1_535  [key=0, style=solid];
m1_529 -> m1_530  [key=0, style=solid];
m1_529 -> m1_532  [key=0, style=solid];
m1_530 -> m1_531  [key=0, style=solid];
m1_530 -> m1_537  [key=2, style=dotted];
m1_532 -> m1_533  [key=0, style=solid];
m1_531 -> m1_536  [key=0, style=solid];
m1_533 -> m1_536  [key=0, style=solid];
m1_533 -> m1_260  [key=2, style=dotted];
m1_535 -> m1_536  [key=0, style=solid];
m1_535 -> m1_538  [key=2, style=dotted];
m1_536 -> m1_258  [key=0, style=bold, color=blue];
m1_174 -> m1_181  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal? ReadAsDecimal"];
m1_917 -> m1_1199  [key=0, style=solid];
m1_1199 -> m1_1200  [key=0, style=solid];
m1_1199 -> m1_1201  [key=0, style=solid];
m1_1199 -> m1_357  [key=2, style=dotted];
m1_1200 -> m1_1202  [key=0, style=solid];
m1_1200 -> m1_174  [key=2, style=dotted];
m1_1201 -> m1_1202  [key=0, style=solid];
m1_1201 -> m1_177  [key=2, style=dotted];
m1_1202 -> m1_917  [key=0, style=bold, color=blue];
m1_1148 -> m1_1149  [key=0, style=solid];
m1_1148 -> m1_1153  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_1148 -> m1_1154  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_1148 -> m1_1158  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_1148 -> m1_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValue"];
m1_1148 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValue"];
m1_1148 -> m1_357  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_1149 -> m1_1150  [key=0, style=solid];
m1_1149 -> m1_1152  [key=0, style=solid];
m1_1149 -> m1_120  [key=2, style=dotted];
m1_1153 -> m1_1154  [key=0, style=solid];
m1_1153 -> m1_1158  [key=0, style=solid];
m1_1153 -> m1_205  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m1_1154 -> m1_1155  [key=0, style=solid];
m1_1154 -> m1_1157  [key=0, style=solid];
m1_1158 -> m1_1159  [key=0, style=solid];
m1_1150 -> m1_1151  [key=0, style=solid];
m1_1152 -> m1_1153  [key=0, style=solid];
m1_1152 -> m1_1154  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_1152 -> m1_1155  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_1152 -> m1_1157  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_1151 -> m1_1160  [key=0, style=solid];
m1_1151 -> m1_538  [key=2, style=dotted];
m1_1155 -> m1_1156  [key=0, style=solid];
m1_1157 -> m1_1153  [key=0, style=solid];
m1_1157 -> m1_1157  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_1156 -> m1_1160  [key=0, style=solid];
m1_1159 -> m1_1160  [key=0, style=solid];
m1_1160 -> m1_1148  [key=0, style=bold, color=blue];
m1_518 -> m1_519  [key=0, style=solid];
m1_518 -> m1_185  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffset"];
m1_519 -> m1_520  [key=0, style=solid];
m1_519 -> m1_185  [key=2, style=dotted];
m1_520 -> m1_518  [key=0, style=bold, color=blue];
m1_521 -> m1_522  [key=0, style=solid];
m1_522 -> m1_523  [key=0, style=solid];
m1_522 -> m1_181  [key=2, style=dotted];
m1_523 -> m1_521  [key=0, style=bold, color=blue];
m1_357 -> m1_1161  [key=0, style=solid];
m1_357 -> m1_320  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_357 -> m1_407  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_357 -> m1_947  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m1_357 -> m1_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValueWithTrailingSeparator"];
m1_357 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchValueWithTrailingSeparator"];
m1_1161 -> m1_1162  [key=0, style=solid];
m1_1161 -> m1_1148  [key=2, style=dotted];
m1_1162 -> m1_1163  [key=0, style=solid];
m1_1162 -> m1_1164  [key=0, style=solid];
m1_1163 -> m1_1167  [key=0, style=solid];
m1_1164 -> m1_1165  [key=0, style=solid];
m1_1164 -> m1_1166  [key=0, style=solid];
m1_1164 -> m1_120  [key=2, style=dotted];
m1_1165 -> m1_1167  [key=0, style=solid];
m1_1166 -> m1_1167  [key=0, style=solid];
m1_1166 -> m1_1168  [key=2, style=dotted];
m1_1167 -> m1_357  [key=0, style=bold, color=blue];
m1_262 -> m1_919  [key=0, style=solid];
m1_919 -> m1_920  [key=0, style=solid];
m1_920 -> m1_921  [key=0, style=solid];
m1_920 -> m1_13  [key=2, style=dotted];
m1_921 -> m1_262  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextReader"];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextReader"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_1143 -> m1_1144  [key=0, style=solid];
m1_1143 -> m1_1145  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_1143 -> m1_175  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setToken"];
m1_1143 -> m1_1112  [key=3, color=darkorchid, style=bold, label="Parameter variable int initialPosition"];
m1_1144 -> m1_1145  [key=0, style=solid];
m1_1144 -> m1_1146  [key=0, style=solid];
m1_1145 -> m1_1146  [key=0, style=solid];
m1_1145 -> m1_1147  [key=2, style=dotted];
m1_1145 -> m1_358  [key=2, style=dotted];
m1_1146 -> m1_1143  [key=0, style=bold, color=blue];
m1_1168 -> m1_1169  [key=0, style=solid];
m1_1168 -> m1_1187  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_1168 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSeparator"];
m1_1168 -> m1_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSeparator"];
m1_1169 -> m1_1170  [key=0, style=solid];
m1_1169 -> m1_1174  [key=0, style=solid];
m1_1169 -> m1_1179  [key=0, style=solid];
m1_1169 -> m1_1182  [key=0, style=solid];
m1_1169 -> m1_1187  [key=0, style=solid];
m1_1187 -> m1_1188  [key=0, style=solid];
m1_1187 -> m1_1189  [key=0, style=solid];
m1_1187 -> m1_263  [key=2, style=dotted];
m1_1170 -> m1_1171  [key=0, style=solid];
m1_1174 -> m1_1175  [key=0, style=solid];
m1_1179 -> m1_1180  [key=0, style=solid];
m1_1182 -> m1_1183  [key=0, style=solid];
m1_1171 -> m1_1172  [key=0, style=solid];
m1_1172 -> m1_1173  [key=0, style=solid];
m1_1173 -> m1_1190  [key=0, style=solid];
m1_1175 -> m1_1176  [key=0, style=solid];
m1_1175 -> m1_1177  [key=0, style=solid];
m1_1175 -> m1_120  [key=2, style=dotted];
m1_1176 -> m1_1190  [key=0, style=solid];
m1_1177 -> m1_1178  [key=0, style=solid];
m1_1178 -> m1_1190  [key=0, style=solid];
m1_1180 -> m1_1181  [key=0, style=solid];
m1_1180 -> m1_1189  [key=0, style=solid];
m1_1181 -> m1_1190  [key=0, style=solid];
m1_1189 -> m1_1190  [key=0, style=solid];
m1_1183 -> m1_1184  [key=0, style=solid];
m1_1184 -> m1_1185  [key=0, style=solid];
m1_1185 -> m1_1186  [key=0, style=solid];
m1_1186 -> m1_1190  [key=0, style=solid];
m1_1188 -> m1_1190  [key=0, style=solid];
m1_1190 -> m1_1168  [key=0, style=bold, color=blue];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_13  [key=0, style=bold, color=blue];
m1_915 -> m1_1214  [key=0, style=solid];
m1_1214 -> m1_1215  [key=0, style=solid];
m1_1214 -> m1_1218  [key=0, style=solid];
m1_1214 -> m1_357  [key=2, style=dotted];
m1_1215 -> m1_1216  [key=0, style=solid];
m1_1215 -> m1_1217  [key=0, style=solid];
m1_1218 -> m1_1219  [key=0, style=solid];
m1_1218 -> m1_177  [key=2, style=dotted];
m1_1216 -> m1_1219  [key=0, style=solid];
m1_1216 -> m1_1213  [key=2, style=dotted];
m1_1217 -> m1_1219  [key=0, style=solid];
m1_1217 -> m1_358  [key=2, style=dotted];
m1_1219 -> m1_915  [key=0, style=bold, color=blue];
m1_261 -> m1_922  [key=0, style=solid];
m1_261 -> m1_923  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_261 -> m1_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_261 -> m1_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_922 -> m1_923  [key=0, style=solid];
m1_923 -> m1_924  [key=0, style=solid];
m1_923 -> m1_925  [key=0, style=solid];
m1_923 -> m1_120  [key=2, style=dotted];
m1_923 -> m1_928  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.MyParent p2"];
m1_924 -> m1_925  [key=0, style=solid];
m1_925 -> m1_926  [key=0, style=solid];
m1_925 -> m1_13  [key=2, style=dotted];
m1_926 -> m1_261  [key=0, style=bold, color=blue];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_125 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_125 -> m1_120  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_125 -> m1_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadChars"];
m1_125 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadChars"];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_128  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m1_128 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m1_128 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=charsRequired];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_86  [key=2, style=dotted];
m1_130 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m1_127 -> m1_137  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m1_129 -> m1_205  [key=3, color=darkorchid, style=bold, label="Local variable int totalCharsRead"];
m1_133 -> m1_129  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_136  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m1_132 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=totalCharsRead];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_134  [key=0, style=solid];
m1_135 -> m1_137  [key=0, style=solid];
m1_136 -> m1_137  [key=0, style=solid];
m1_137 -> m1_125  [key=0, style=bold, color=blue];
m1_911 -> m1_1191  [key=0, style=solid];
m1_1191 -> m1_1192  [key=0, style=solid];
m1_1191 -> m1_1193  [key=0, style=solid];
m1_1191 -> m1_357  [key=2, style=dotted];
m1_1192 -> m1_1194  [key=0, style=solid];
m1_1192 -> m1_358  [key=2, style=dotted];
m1_1193 -> m1_1194  [key=0, style=solid];
m1_1193 -> m1_177  [key=2, style=dotted];
m1_1194 -> m1_911  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=2, style=dotted];
m1_11 -> m1_8  [key=0, style=bold, color=blue];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m1_68 -> m1_205  [key=3, color=darkorchid, style=bold, label="Parameter variable int dstOffset"];
m1_68 -> m1_92  [key=3, color=darkorchid, style=bold, label="Parameter variable char[] dst"];
m1_68 -> m1_98  [key=3, color=darkorchid, style=bold, label="Parameter variable char[] dst"];
m1_68 -> m1_75  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m1_68 -> m1_96  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_69  [key=3, color=darkorchid, style=bold, label="Local variable int charByteCount"];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=2, style=dotted];
m1_71 -> m1_68  [key=0, style=bold, color=blue];
m1_916 -> m1_1207  [key=0, style=solid];
m1_1207 -> m1_1208  [key=0, style=solid];
m1_1207 -> m1_1211  [key=0, style=solid];
m1_1207 -> m1_357  [key=2, style=dotted];
m1_1208 -> m1_1209  [key=0, style=solid];
m1_1208 -> m1_1210  [key=0, style=solid];
m1_1211 -> m1_1212  [key=0, style=solid];
m1_1211 -> m1_177  [key=2, style=dotted];
m1_1209 -> m1_1212  [key=0, style=solid];
m1_1209 -> m1_1213  [key=2, style=dotted];
m1_1210 -> m1_1212  [key=0, style=solid];
m1_1210 -> m1_358  [key=2, style=dotted];
m1_1212 -> m1_916  [key=0, style=bold, color=blue];
m1_58 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_82  [key=0, style=solid];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label=count];
m1_75 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=count];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_78  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_68  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_82 -> m1_58  [key=0, style=bold, color=blue];
m1_260 -> m1_359  [key=0, style=solid];
m1_260 -> m1_201  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m1_260 -> m1_275  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m1_260 -> m1_372  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m1_260 -> m1_442  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m1_260 -> m1_456  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m1_260 -> m1_833  [key=3, color=darkorchid, style=bold, label="Parameter variable char c"];
m1_359 -> m1_360  [key=0, style=solid];
m1_359 -> m1_176  [key=2, style=dotted];
m1_359 -> m1_177  [key=2, style=dotted];
m1_360 -> m1_260  [key=0, style=bold, color=blue];
m1_711 -> m1_712  [key=0, style=solid];
m1_712 -> m1_713  [key=0, style=solid];
m1_713 -> m1_714  [key=0, style=solid];
m1_713 -> m1_715  [key=2, style=dotted];
m1_714 -> m1_711  [key=0, style=bold, color=blue];
m1_264 -> m1_539  [key=0, style=solid];
m1_539 -> m1_540  [key=0, style=solid];
m1_539 -> m1_546  [key=0, style=solid];
m1_539 -> m1_120  [key=2, style=dotted];
m1_540 -> m1_541  [key=0, style=solid];
m1_540 -> m1_173  [key=2, style=dotted];
m1_546 -> m1_547  [key=0, style=solid];
m1_546 -> m1_174  [key=2, style=dotted];
m1_541 -> m1_542  [key=0, style=solid];
m1_541 -> m1_543  [key=0, style=solid];
m1_542 -> m1_547  [key=0, style=solid];
m1_543 -> m1_544  [key=0, style=solid];
m1_543 -> m1_545  [key=0, style=solid];
m1_544 -> m1_546  [key=0, style=solid];
m1_544 -> m1_175  [key=2, style=dotted];
m1_545 -> m1_547  [key=0, style=solid];
m1_545 -> m1_176  [key=2, style=dotted];
m1_545 -> m1_177  [key=2, style=dotted];
m1_547 -> m1_264  [key=0, style=bold, color=blue];
m1_175 -> m1_1102  [key=0, style=solid];
m1_175 -> m1_1120  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_175 -> m1_1128  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_175 -> m1_1133  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_175 -> m1_1138  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_175 -> m1_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setToken"];
m1_175 -> m1_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool setToken"];
m1_1102 -> m1_1103  [key=0, style=solid];
m1_1120 -> m1_1121  [key=0, style=solid];
m1_1120 -> m1_1143  [key=2, style=dotted];
m1_1128 -> m1_1129  [key=0, style=solid];
m1_1128 -> m1_1143  [key=2, style=dotted];
m1_1133 -> m1_1134  [key=0, style=solid];
m1_1133 -> m1_1143  [key=2, style=dotted];
m1_1138 -> m1_1139  [key=0, style=solid];
m1_1138 -> m1_1143  [key=2, style=dotted];
m1_1103 -> m1_1104  [key=0, style=solid];
m1_1103 -> m1_1105  [key=0, style=solid];
m1_1103 -> m1_120  [key=2, style=dotted];
m1_1104 -> m1_1142  [key=0, style=solid];
m1_1104 -> m1_177  [key=2, style=dotted];
m1_1105 -> m1_1106  [key=0, style=solid];
m1_1105 -> m1_1118  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1105 -> m1_1125  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1105 -> m1_1132  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1105 -> m1_1137  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1106 -> m1_1107  [key=0, style=solid];
m1_1106 -> m1_1108  [key=0, style=solid];
m1_1118 -> m1_1119  [key=0, style=solid];
m1_1118 -> m1_1120  [key=0, style=solid];
m1_1125 -> m1_1126  [key=0, style=solid];
m1_1125 -> m1_1113  [key=0, style=solid];
m1_1132 -> m1_1133  [key=0, style=solid];
m1_1132 -> m1_1135  [key=0, style=solid];
m1_1137 -> m1_1138  [key=0, style=solid];
m1_1137 -> m1_1140  [key=0, style=solid];
m1_1107 -> m1_1111  [key=0, style=solid];
m1_1107 -> m1_1118  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1107 -> m1_1125  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1107 -> m1_1132  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1107 -> m1_1137  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1108 -> m1_1109  [key=0, style=solid];
m1_1108 -> m1_1110  [key=0, style=solid];
m1_1109 -> m1_1111  [key=0, style=solid];
m1_1109 -> m1_1118  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1109 -> m1_1125  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1109 -> m1_1132  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1109 -> m1_1137  [key=1, style=dashed, color=darkseagreen4, label=singlelineComment];
m1_1110 -> m1_1142  [key=0, style=solid];
m1_1110 -> m1_176  [key=2, style=dotted];
m1_1110 -> m1_177  [key=2, style=dotted];
m1_1111 -> m1_1112  [key=0, style=solid];
m1_1112 -> m1_1113  [key=0, style=solid];
m1_1112 -> m1_1120  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_1112 -> m1_1128  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_1112 -> m1_1133  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_1112 -> m1_1138  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_1113 -> m1_1114  [key=0, style=solid];
m1_1113 -> m1_1142  [key=0, style=solid];
m1_1114 -> m1_1115  [key=0, style=solid];
m1_1114 -> m1_1123  [key=0, style=solid];
m1_1114 -> m1_1131  [key=0, style=solid];
m1_1114 -> m1_1136  [key=0, style=solid];
m1_1114 -> m1_1141  [key=0, style=solid];
m1_1115 -> m1_1116  [key=0, style=solid];
m1_1123 -> m1_1124  [key=0, style=solid];
m1_1131 -> m1_1132  [key=0, style=solid];
m1_1136 -> m1_1137  [key=0, style=solid];
m1_1141 -> m1_1113  [key=0, style=solid];
m1_1116 -> m1_1117  [key=0, style=solid];
m1_1116 -> m1_1122  [key=0, style=solid];
m1_1117 -> m1_1118  [key=0, style=solid];
m1_1117 -> m1_1113  [key=0, style=solid];
m1_1117 -> m1_83  [key=2, style=dotted];
m1_1122 -> m1_1113  [key=0, style=solid];
m1_1119 -> m1_1142  [key=0, style=solid];
m1_1119 -> m1_177  [key=2, style=dotted];
m1_1121 -> m1_1142  [key=0, style=solid];
m1_1124 -> m1_1125  [key=0, style=solid];
m1_1126 -> m1_1127  [key=0, style=solid];
m1_1126 -> m1_1113  [key=0, style=solid];
m1_1126 -> m1_120  [key=2, style=dotted];
m1_1127 -> m1_1128  [key=0, style=solid];
m1_1127 -> m1_1113  [key=0, style=solid];
m1_1129 -> m1_1130  [key=0, style=solid];
m1_1130 -> m1_1142  [key=0, style=solid];
m1_1135 -> m1_1113  [key=0, style=solid];
m1_1135 -> m1_261  [key=2, style=dotted];
m1_1134 -> m1_1142  [key=0, style=solid];
m1_1140 -> m1_1113  [key=0, style=solid];
m1_1140 -> m1_262  [key=2, style=dotted];
m1_1139 -> m1_1142  [key=0, style=solid];
m1_1142 -> m1_175  [key=0, style=bold, color=blue];
m1_59 -> m1_559  [key=0, style=solid];
m1_59 -> m1_570  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_59 -> m1_574  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_59 -> m1_634  [key=1, style=dashed, color=darkseagreen4, label=char];
m1_59 -> m1_17  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m1_59 -> m1_783  [key=3, color=darkorchid, style=bold, label="Parameter variable char quote"];
m1_559 -> m1_560  [key=0, style=solid];
m1_559 -> m1_564  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_570 -> m1_645  [key=0, style=solid];
m1_570 -> m1_176  [key=2, style=dotted];
m1_570 -> m1_177  [key=2, style=dotted];
m1_574 -> m1_645  [key=0, style=solid];
m1_574 -> m1_176  [key=2, style=dotted];
m1_574 -> m1_177  [key=2, style=dotted];
m1_634 -> m1_635  [key=0, style=solid];
m1_634 -> m1_563  [key=0, style=solid];
m1_560 -> m1_561  [key=0, style=solid];
m1_560 -> m1_636  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_560 -> m1_637  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_564 -> m1_565  [key=0, style=solid];
m1_564 -> m1_571  [key=0, style=solid];
m1_564 -> m1_624  [key=0, style=solid];
m1_564 -> m1_628  [key=0, style=solid];
m1_564 -> m1_632  [key=0, style=solid];
m1_564 -> m1_564  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_564 -> m1_566  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_564 -> m1_567  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_564 -> m1_572  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_564 -> m1_575  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_564 -> m1_576  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_564 -> m1_577  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_561 -> m1_562  [key=0, style=solid];
m1_561 -> m1_614  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m1_561 -> m1_622  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m1_561 -> m1_559  [key=3, color=darkorchid, style=bold, label="Local variable int lastWritePosition"];
m1_636 -> m1_637  [key=0, style=solid];
m1_636 -> m1_638  [key=0, style=solid];
m1_637 -> m1_642  [key=0, style=solid];
m1_637 -> m1_650  [key=2, style=dotted];
m1_562 -> m1_563  [key=0, style=solid];
m1_614 -> m1_615  [key=0, style=solid];
m1_614 -> m1_649  [key=2, style=dotted];
m1_622 -> m1_623  [key=0, style=solid];
m1_622 -> m1_649  [key=2, style=dotted];
m1_563 -> m1_564  [key=0, style=solid];
m1_563 -> m1_645  [key=0, style=solid];
m1_565 -> m1_566  [key=0, style=solid];
m1_571 -> m1_572  [key=0, style=solid];
m1_624 -> m1_625  [key=0, style=solid];
m1_628 -> m1_629  [key=0, style=solid];
m1_632 -> m1_633  [key=0, style=solid];
m1_566 -> m1_567  [key=0, style=solid];
m1_566 -> m1_563  [key=0, style=solid];
m1_567 -> m1_568  [key=0, style=solid];
m1_567 -> m1_567  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_567 -> m1_569  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_567 -> m1_572  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_567 -> m1_575  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_567 -> m1_576  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_567 -> m1_577  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_572 -> m1_573  [key=0, style=solid];
m1_575 -> m1_576  [key=0, style=solid];
m1_575 -> m1_614  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m1_575 -> m1_622  [key=1, style=dashed, color=darkseagreen4, label=escapeStartPos];
m1_576 -> m1_577  [key=0, style=solid];
m1_576 -> m1_579  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_576 -> m1_595  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_576 -> m1_620  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_577 -> m1_578  [key=0, style=solid];
m1_577 -> m1_577  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_577 -> m1_597  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_568 -> m1_569  [key=0, style=solid];
m1_568 -> m1_563  [key=0, style=solid];
m1_568 -> m1_83  [key=2, style=dotted];
m1_569 -> m1_570  [key=0, style=solid];
m1_573 -> m1_574  [key=0, style=solid];
m1_573 -> m1_575  [key=0, style=solid];
m1_573 -> m1_120  [key=2, style=dotted];
m1_579 -> m1_580  [key=0, style=solid];
m1_579 -> m1_582  [key=0, style=solid];
m1_579 -> m1_584  [key=0, style=solid];
m1_579 -> m1_586  [key=0, style=solid];
m1_579 -> m1_588  [key=0, style=solid];
m1_579 -> m1_590  [key=0, style=solid];
m1_579 -> m1_592  [key=0, style=solid];
m1_579 -> m1_596  [key=0, style=solid];
m1_579 -> m1_619  [key=0, style=solid];
m1_595 -> m1_621  [key=0, style=solid];
m1_620 -> m1_645  [key=0, style=solid];
m1_620 -> m1_176  [key=2, style=dotted];
m1_620 -> m1_177  [key=2, style=dotted];
m1_578 -> m1_579  [key=0, style=solid];
m1_578 -> m1_576  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m1_578 -> m1_646  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m1_597 -> m1_598  [key=0, style=solid];
m1_580 -> m1_581  [key=0, style=solid];
m1_582 -> m1_583  [key=0, style=solid];
m1_584 -> m1_585  [key=0, style=solid];
m1_586 -> m1_587  [key=0, style=solid];
m1_588 -> m1_589  [key=0, style=solid];
m1_590 -> m1_591  [key=0, style=solid];
m1_592 -> m1_593  [key=0, style=solid];
m1_596 -> m1_597  [key=0, style=solid];
m1_619 -> m1_620  [key=0, style=solid];
m1_581 -> m1_621  [key=0, style=solid];
m1_583 -> m1_621  [key=0, style=solid];
m1_585 -> m1_621  [key=0, style=solid];
m1_587 -> m1_621  [key=0, style=solid];
m1_589 -> m1_621  [key=0, style=solid];
m1_591 -> m1_621  [key=0, style=solid];
m1_593 -> m1_594  [key=0, style=solid];
m1_594 -> m1_595  [key=0, style=solid];
m1_598 -> m1_599  [key=0, style=solid];
m1_598 -> m1_646  [key=2, style=dotted];
m1_598 -> m1_601  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m1_598 -> m1_605  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m1_598 -> m1_622  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m1_599 -> m1_600  [key=0, style=solid];
m1_599 -> m1_601  [key=0, style=solid];
m1_599 -> m1_647  [key=2, style=dotted];
m1_601 -> m1_602  [key=0, style=solid];
m1_601 -> m1_618  [key=0, style=solid];
m1_601 -> m1_648  [key=2, style=dotted];
m1_605 -> m1_606  [key=0, style=solid];
m1_605 -> m1_614  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m1_605 -> m1_578  [key=3, color=darkorchid, style=bold, label="Local variable char highSurrogate"];
m1_600 -> m1_618  [key=0, style=solid];
m1_600 -> m1_622  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m1_602 -> m1_603  [key=0, style=solid];
m1_618 -> m1_621  [key=0, style=solid];
m1_618 -> m1_619  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_618 -> m1_623  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_618 -> m1_625  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_603 -> m1_604  [key=0, style=solid];
m1_603 -> m1_617  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m1_604 -> m1_605  [key=0, style=solid];
m1_604 -> m1_616  [key=0, style=solid];
m1_604 -> m1_120  [key=2, style=dotted];
m1_617 -> m1_602  [key=0, style=solid];
m1_617 -> m1_618  [key=0, style=solid];
m1_616 -> m1_617  [key=0, style=solid];
m1_616 -> m1_622  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m1_606 -> m1_607  [key=0, style=solid];
m1_607 -> m1_608  [key=0, style=solid];
m1_607 -> m1_646  [key=2, style=dotted];
m1_607 -> m1_609  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m1_607 -> m1_622  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m1_608 -> m1_609  [key=0, style=solid];
m1_608 -> m1_613  [key=0, style=solid];
m1_608 -> m1_647  [key=2, style=dotted];
m1_609 -> m1_610  [key=0, style=solid];
m1_609 -> m1_612  [key=0, style=solid];
m1_609 -> m1_648  [key=2, style=dotted];
m1_613 -> m1_614  [key=0, style=solid];
m1_613 -> m1_8  [key=2, style=dotted];
m1_610 -> m1_611  [key=0, style=solid];
m1_610 -> m1_614  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m1_612 -> m1_613  [key=0, style=solid];
m1_612 -> m1_614  [key=1, style=dashed, color=darkseagreen4, label=highSurrogate];
m1_611 -> m1_613  [key=0, style=solid];
m1_611 -> m1_617  [key=1, style=dashed, color=darkseagreen4, label=anotherHighSurrogate];
m1_615 -> m1_617  [key=0, style=solid];
m1_615 -> m1_622  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m1_621 -> m1_622  [key=0, style=solid];
m1_621 -> m1_8  [key=2, style=dotted];
m1_623 -> m1_563  [key=0, style=solid];
m1_623 -> m1_636  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m1_623 -> m1_639  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m1_623 -> m1_640  [key=1, style=dashed, color=darkseagreen4, label=lastWritePosition];
m1_625 -> m1_626  [key=0, style=solid];
m1_626 -> m1_627  [key=0, style=solid];
m1_626 -> m1_261  [key=2, style=dotted];
m1_627 -> m1_563  [key=0, style=solid];
m1_627 -> m1_629  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_629 -> m1_630  [key=0, style=solid];
m1_630 -> m1_631  [key=0, style=solid];
m1_630 -> m1_262  [key=2, style=dotted];
m1_631 -> m1_563  [key=0, style=solid];
m1_631 -> m1_634  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_631 -> m1_635  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_633 -> m1_634  [key=0, style=solid];
m1_635 -> m1_636  [key=0, style=solid];
m1_635 -> m1_635  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_635 -> m1_637  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_635 -> m1_639  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_635 -> m1_640  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_635 -> m1_642  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_639 -> m1_640  [key=0, style=solid];
m1_639 -> m1_641  [key=0, style=solid];
m1_640 -> m1_641  [key=0, style=solid];
m1_640 -> m1_651  [key=2, style=dotted];
m1_642 -> m1_643  [key=0, style=solid];
m1_642 -> m1_642  [key=1, style=dashed, color=darkseagreen4, label=charPos];
m1_638 -> m1_639  [key=0, style=solid];
m1_638 -> m1_8  [key=2, style=dotted];
m1_641 -> m1_642  [key=0, style=solid];
m1_641 -> m1_650  [key=2, style=dotted];
m1_643 -> m1_644  [key=0, style=solid];
m1_644 -> m1_645  [key=0, style=solid];
m1_644 -> m1_644  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m1_645 -> m1_59  [key=0, style=bold, color=blue];
m1_172 -> m1_716  [key=0, style=solid];
m1_172 -> m1_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParsePostValue"];
m1_172 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParsePostValue"];
m1_716 -> m1_717  [key=0, style=solid];
m1_716 -> m1_754  [key=0, style=solid];
m1_717 -> m1_718  [key=0, style=solid];
m1_717 -> m1_751  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_717 -> m1_753  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_718 -> m1_719  [key=0, style=solid];
m1_718 -> m1_725  [key=0, style=solid];
m1_718 -> m1_729  [key=0, style=solid];
m1_718 -> m1_733  [key=0, style=solid];
m1_718 -> m1_737  [key=0, style=solid];
m1_718 -> m1_740  [key=0, style=solid];
m1_718 -> m1_744  [key=0, style=solid];
m1_718 -> m1_747  [key=0, style=solid];
m1_718 -> m1_749  [key=0, style=solid];
m1_718 -> m1_751  [key=0, style=solid];
m1_751 -> m1_752  [key=0, style=solid];
m1_751 -> m1_753  [key=0, style=solid];
m1_751 -> m1_263  [key=2, style=dotted];
m1_753 -> m1_754  [key=0, style=solid];
m1_753 -> m1_176  [key=2, style=dotted];
m1_753 -> m1_177  [key=2, style=dotted];
m1_719 -> m1_720  [key=0, style=solid];
m1_725 -> m1_726  [key=0, style=solid];
m1_729 -> m1_730  [key=0, style=solid];
m1_733 -> m1_734  [key=0, style=solid];
m1_737 -> m1_738  [key=0, style=solid];
m1_740 -> m1_741  [key=0, style=solid];
m1_744 -> m1_745  [key=0, style=solid];
m1_747 -> m1_748  [key=0, style=solid];
m1_749 -> m1_750  [key=0, style=solid];
m1_720 -> m1_721  [key=0, style=solid];
m1_720 -> m1_724  [key=0, style=solid];
m1_721 -> m1_722  [key=0, style=solid];
m1_721 -> m1_716  [key=0, style=solid];
m1_721 -> m1_83  [key=2, style=dotted];
m1_724 -> m1_716  [key=0, style=solid];
m1_722 -> m1_723  [key=0, style=solid];
m1_723 -> m1_754  [key=0, style=solid];
m1_726 -> m1_727  [key=0, style=solid];
m1_727 -> m1_728  [key=0, style=solid];
m1_727 -> m1_174  [key=2, style=dotted];
m1_728 -> m1_754  [key=0, style=solid];
m1_730 -> m1_731  [key=0, style=solid];
m1_731 -> m1_732  [key=0, style=solid];
m1_731 -> m1_174  [key=2, style=dotted];
m1_732 -> m1_754  [key=0, style=solid];
m1_734 -> m1_735  [key=0, style=solid];
m1_735 -> m1_736  [key=0, style=solid];
m1_735 -> m1_174  [key=2, style=dotted];
m1_736 -> m1_754  [key=0, style=solid];
m1_738 -> m1_739  [key=0, style=solid];
m1_738 -> m1_175  [key=2, style=dotted];
m1_739 -> m1_754  [key=0, style=solid];
m1_741 -> m1_742  [key=0, style=solid];
m1_742 -> m1_743  [key=0, style=solid];
m1_742 -> m1_445  [key=2, style=dotted];
m1_743 -> m1_754  [key=0, style=solid];
m1_745 -> m1_746  [key=0, style=solid];
m1_746 -> m1_716  [key=0, style=solid];
m1_748 -> m1_716  [key=0, style=solid];
m1_748 -> m1_261  [key=2, style=dotted];
m1_750 -> m1_716  [key=0, style=solid];
m1_750 -> m1_262  [key=2, style=dotted];
m1_752 -> m1_716  [key=0, style=solid];
m1_754 -> m1_172  [key=0, style=bold, color=blue];
m1_254 -> m1_548  [key=0, style=solid];
m1_254 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNullChar"];
m1_254 -> m1_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ReadNullChar"];
m1_548 -> m1_549  [key=0, style=solid];
m1_548 -> m1_552  [key=0, style=solid];
m1_549 -> m1_550  [key=0, style=solid];
m1_549 -> m1_553  [key=0, style=solid];
m1_549 -> m1_83  [key=2, style=dotted];
m1_552 -> m1_553  [key=0, style=solid];
m1_550 -> m1_551  [key=0, style=solid];
m1_553 -> m1_554  [key=0, style=solid];
m1_551 -> m1_554  [key=0, style=solid];
m1_554 -> m1_254  [key=0, style=bold, color=blue];
m1_61 -> m1_0  [key=3, color=darkorchid, style=bold, label="Field variable System.IO.TextReader _reader"];
m1_1098 -> m1_1099  [key=0, style=solid];
m1_1098 -> m1_1068  [key=3, color=darkorchid, style=bold, label="Parameter variable string number"];
m1_1099 -> m1_1100  [key=0, style=solid];
m1_1099 -> m1_1101  [key=2, style=dotted];
m1_1100 -> m1_1098  [key=0, style=bold, color=blue];
m1_173 -> m1_927  [key=0, style=solid];
m1_173 -> m1_945  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_173 -> m1_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool oneOrMore"];
m1_927 -> m1_928  [key=0, style=solid];
m1_927 -> m1_929  [key=1, style=dashed, color=darkseagreen4, label=finished];
m1_927 -> m1_31  [key=3, color=darkorchid, style=bold, label="Local variable bool finished"];
m1_945 -> m1_946  [key=0, style=solid];
m1_928 -> m1_929  [key=0, style=solid];
m1_928 -> m1_945  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m1_928 -> m1_31  [key=3, color=darkorchid, style=bold, label="Local variable bool ateWhitespace"];
m1_929 -> m1_930  [key=0, style=solid];
m1_929 -> m1_945  [key=0, style=solid];
m1_930 -> m1_931  [key=0, style=solid];
m1_930 -> m1_941  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_931 -> m1_932  [key=0, style=solid];
m1_931 -> m1_937  [key=0, style=solid];
m1_931 -> m1_939  [key=0, style=solid, color=red];
m1_931 -> m1_941  [key=0, style=solid];
m1_941 -> m1_942  [key=0, style=solid];
m1_941 -> m1_944  [key=0, style=solid];
m1_941 -> m1_263  [key=2, style=dotted];
m1_932 -> m1_933  [key=0, style=solid];
m1_937 -> m1_938  [key=0, style=solid];
m1_939 -> m1_940  [key=0, style=solid, color=red];
m1_933 -> m1_934  [key=0, style=solid];
m1_933 -> m1_936  [key=0, style=solid];
m1_934 -> m1_935  [key=0, style=solid];
m1_934 -> m1_929  [key=0, style=solid];
m1_934 -> m1_83  [key=2, style=dotted];
m1_936 -> m1_929  [key=0, style=solid];
m1_935 -> m1_929  [key=0, style=solid];
m1_938 -> m1_929  [key=0, style=solid];
m1_938 -> m1_261  [key=2, style=dotted];
m1_940 -> m1_929  [key=0, style=solid];
m1_940 -> m1_262  [key=2, style=dotted];
m1_942 -> m1_943  [key=0, style=solid];
m1_942 -> m1_945  [key=1, style=dashed, color=darkseagreen4, label=ateWhitespace];
m1_944 -> m1_929  [key=0, style=solid];
m1_943 -> m1_929  [key=0, style=solid];
m1_946 -> m1_173  [key=0, style=bold, color=blue];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_120 -> m1_125  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnsureChars"];
m1_120 -> m1_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_120 -> m1_205  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m1_120 -> m1_527  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m1_120 -> m1_69  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m1_120 -> m1_658  [key=3, color=darkorchid, style=bold, label="Parameter variable int relativePosition"];
m1_120 -> m1_31  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_120 -> m1_261  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_123  [key=0, style=solid];
m1_122 -> m1_124  [key=0, style=solid];
m1_122 -> m1_125  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_124 -> m1_120  [key=0, style=bold, color=blue];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_185  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime? ReadAsDateTime"];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_185  [key=2, style=dotted];
m1_184 -> m1_182  [key=0, style=bold, color=blue];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_86 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=bool];
m1_86 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_86 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_86 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_86 -> m1_83  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_86 -> m1_125  [key=3, color=darkorchid, style=bold, label="Parameter variable bool append"];
m1_86 -> m1_205  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m1_86 -> m1_109  [key=3, color=darkorchid, style=bold, label="method methodReturn int ReadData"];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [key=0, style=solid];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_108  [key=0, style=solid];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_96  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_116  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_103  [key=0, style=solid];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_117  [key=2, style=dotted];
m1_98 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=dst];
m1_98 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label=dst];
m1_88 -> m1_115  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m1_96 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m1_96 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m1_96 -> m1_103  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m1_96 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m1_96 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label=remainingCharCount];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_117  [key=2, style=dotted];
m1_92 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label=dst];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_68  [key=2, style=dotted];
m1_95 -> m1_108  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_118  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_101  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_68  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_105  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_68  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_102 -> m1_105  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_118  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_106 -> m1_107  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_119  [key=2, style=dotted];
m1_109 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m1_109 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m1_110 -> m1_111  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_113  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_115 -> m1_86  [key=0, style=bold, color=blue];
m1_259 -> m1_439  [key=0, style=solid];
m1_439 -> m1_440  [key=0, style=solid];
m1_440 -> m1_441  [key=0, style=solid];
m1_440 -> m1_443  [key=0, style=solid];
m1_441 -> m1_442  [key=0, style=solid];
m1_441 -> m1_174  [key=2, style=dotted];
m1_443 -> m1_444  [key=0, style=solid];
m1_443 -> m1_445  [key=2, style=dotted];
m1_442 -> m1_444  [key=0, style=solid];
m1_442 -> m1_260  [key=2, style=dotted];
m1_444 -> m1_259  [key=0, style=bold, color=blue];
m1_646 -> m1_657  [key=0, style=solid];
m1_657 -> m1_658  [key=0, style=solid];
m1_657 -> m1_663  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m1_657 -> m1_659  [key=3, color=darkorchid, style=bold, label="Local variable char writeChar"];
m1_658 -> m1_659  [key=0, style=solid];
m1_658 -> m1_662  [key=0, style=solid];
m1_658 -> m1_120  [key=2, style=dotted];
m1_663 -> m1_664  [key=0, style=solid];
m1_659 -> m1_660  [key=0, style=solid];
m1_659 -> m1_665  [key=2, style=dotted];
m1_659 -> m1_666  [key=2, style=dotted];
m1_662 -> m1_664  [key=0, style=solid];
m1_662 -> m1_177  [key=2, style=dotted];
m1_660 -> m1_661  [key=0, style=solid];
m1_660 -> m1_663  [key=1, style=dashed, color=darkseagreen4, label=writeChar];
m1_661 -> m1_663  [key=0, style=solid];
m1_664 -> m1_646  [key=0, style=bold, color=blue];
m1_170 -> m1_832  [key=0, style=solid];
m1_170 -> m1_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseValue"];
m1_170 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseValue"];
m1_832 -> m1_833  [key=0, style=solid];
m1_832 -> m1_910  [key=0, style=solid];
m1_833 -> m1_834  [key=0, style=solid];
m1_833 -> m1_842  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_833 -> m1_904  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_833 -> m1_906  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_833 -> m1_909  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_834 -> m1_835  [key=0, style=solid];
m1_834 -> m1_840  [key=0, style=solid];
m1_834 -> m1_844  [key=0, style=solid];
m1_834 -> m1_847  [key=0, style=solid];
m1_834 -> m1_850  [key=0, style=solid];
m1_834 -> m1_861  [key=0, style=solid];
m1_834 -> m1_864  [key=0, style=solid];
m1_834 -> m1_867  [key=0, style=solid];
m1_834 -> m1_872  [key=0, style=solid];
m1_834 -> m1_875  [key=0, style=solid];
m1_834 -> m1_878  [key=0, style=solid];
m1_834 -> m1_882  [key=0, style=solid];
m1_834 -> m1_886  [key=0, style=solid];
m1_834 -> m1_890  [key=0, style=solid];
m1_834 -> m1_893  [key=0, style=solid];
m1_834 -> m1_897  [key=0, style=solid];
m1_834 -> m1_899  [key=0, style=solid];
m1_834 -> m1_901  [key=0, style=solid];
m1_834 -> m1_904  [key=0, style=solid];
m1_842 -> m1_843  [key=0, style=solid];
m1_842 -> m1_17  [key=2, style=dotted];
m1_904 -> m1_905  [key=0, style=solid];
m1_904 -> m1_906  [key=0, style=solid];
m1_904 -> m1_263  [key=2, style=dotted];
m1_906 -> m1_907  [key=0, style=solid];
m1_906 -> m1_909  [key=0, style=solid];
m1_906 -> m1_918  [key=2, style=dotted];
m1_909 -> m1_910  [key=0, style=solid];
m1_909 -> m1_260  [key=2, style=dotted];
m1_835 -> m1_836  [key=0, style=solid];
m1_840 -> m1_841  [key=0, style=solid];
m1_844 -> m1_845  [key=0, style=solid];
m1_847 -> m1_848  [key=0, style=solid];
m1_850 -> m1_851  [key=0, style=solid];
m1_861 -> m1_862  [key=0, style=solid];
m1_864 -> m1_865  [key=0, style=solid];
m1_867 -> m1_868  [key=0, style=solid];
m1_872 -> m1_873  [key=0, style=solid];
m1_875 -> m1_876  [key=0, style=solid];
m1_878 -> m1_879  [key=0, style=solid];
m1_882 -> m1_883  [key=0, style=solid];
m1_886 -> m1_887  [key=0, style=solid];
m1_890 -> m1_891  [key=0, style=solid];
m1_893 -> m1_894  [key=0, style=solid];
m1_897 -> m1_898  [key=0, style=solid];
m1_899 -> m1_900  [key=0, style=solid];
m1_901 -> m1_902  [key=0, style=solid];
m1_836 -> m1_837  [key=0, style=solid];
m1_836 -> m1_839  [key=0, style=solid];
m1_837 -> m1_838  [key=0, style=solid];
m1_837 -> m1_832  [key=0, style=solid];
m1_837 -> m1_83  [key=2, style=dotted];
m1_839 -> m1_832  [key=0, style=solid];
m1_838 -> m1_910  [key=0, style=solid];
m1_841 -> m1_842  [key=0, style=solid];
m1_843 -> m1_910  [key=0, style=solid];
m1_845 -> m1_846  [key=0, style=solid];
m1_845 -> m1_911  [key=2, style=dotted];
m1_846 -> m1_910  [key=0, style=solid];
m1_848 -> m1_849  [key=0, style=solid];
m1_848 -> m1_912  [key=2, style=dotted];
m1_849 -> m1_910  [key=0, style=solid];
m1_851 -> m1_852  [key=0, style=solid];
m1_851 -> m1_858  [key=0, style=solid];
m1_851 -> m1_120  [key=2, style=dotted];
m1_852 -> m1_853  [key=0, style=solid];
m1_852 -> m1_855  [key=1, style=dashed, color=darkseagreen4, label=next];
m1_858 -> m1_859  [key=0, style=solid];
m1_853 -> m1_854  [key=0, style=solid];
m1_853 -> m1_855  [key=0, style=solid];
m1_855 -> m1_856  [key=0, style=solid];
m1_855 -> m1_857  [key=0, style=solid];
m1_854 -> m1_860  [key=0, style=solid];
m1_854 -> m1_537  [key=2, style=dotted];
m1_856 -> m1_860  [key=0, style=solid];
m1_856 -> m1_913  [key=2, style=dotted];
m1_857 -> m1_910  [key=0, style=solid];
m1_857 -> m1_260  [key=2, style=dotted];
m1_859 -> m1_910  [key=0, style=solid];
m1_859 -> m1_538  [key=2, style=dotted];
m1_860 -> m1_910  [key=0, style=solid];
m1_862 -> m1_863  [key=0, style=solid];
m1_862 -> m1_914  [key=2, style=dotted];
m1_863 -> m1_910  [key=0, style=solid];
m1_865 -> m1_866  [key=0, style=solid];
m1_865 -> m1_915  [key=2, style=dotted];
m1_866 -> m1_910  [key=0, style=solid];
m1_868 -> m1_869  [key=0, style=solid];
m1_868 -> m1_870  [key=0, style=solid];
m1_868 -> m1_120  [key=2, style=dotted];
m1_869 -> m1_871  [key=0, style=solid];
m1_869 -> m1_916  [key=2, style=dotted];
m1_870 -> m1_871  [key=0, style=solid];
m1_870 -> m1_356  [key=2, style=dotted];
m1_871 -> m1_910  [key=0, style=solid];
m1_873 -> m1_874  [key=0, style=solid];
m1_873 -> m1_175  [key=2, style=dotted];
m1_874 -> m1_910  [key=0, style=solid];
m1_876 -> m1_877  [key=0, style=solid];
m1_876 -> m1_917  [key=2, style=dotted];
m1_877 -> m1_910  [key=0, style=solid];
m1_879 -> m1_880  [key=0, style=solid];
m1_880 -> m1_881  [key=0, style=solid];
m1_880 -> m1_174  [key=2, style=dotted];
m1_881 -> m1_910  [key=0, style=solid];
m1_883 -> m1_884  [key=0, style=solid];
m1_884 -> m1_885  [key=0, style=solid];
m1_884 -> m1_174  [key=2, style=dotted];
m1_885 -> m1_910  [key=0, style=solid];
m1_887 -> m1_888  [key=0, style=solid];
m1_888 -> m1_889  [key=0, style=solid];
m1_888 -> m1_174  [key=2, style=dotted];
m1_889 -> m1_910  [key=0, style=solid];
m1_891 -> m1_892  [key=0, style=solid];
m1_891 -> m1_174  [key=2, style=dotted];
m1_892 -> m1_910  [key=0, style=solid];
m1_894 -> m1_895  [key=0, style=solid];
m1_895 -> m1_896  [key=0, style=solid];
m1_895 -> m1_174  [key=2, style=dotted];
m1_896 -> m1_910  [key=0, style=solid];
m1_898 -> m1_832  [key=0, style=solid];
m1_898 -> m1_261  [key=2, style=dotted];
m1_900 -> m1_832  [key=0, style=solid];
m1_900 -> m1_262  [key=2, style=dotted];
m1_902 -> m1_903  [key=0, style=solid];
m1_903 -> m1_832  [key=0, style=solid];
m1_905 -> m1_832  [key=0, style=solid];
m1_907 -> m1_908  [key=0, style=solid];
m1_907 -> m1_356  [key=2, style=dotted];
m1_908 -> m1_910  [key=0, style=solid];
m1_910 -> m1_170  [key=0, style=bold, color=blue];
m1_356 -> m1_983  [key=0, style=solid];
m1_356 -> m1_993  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_356 -> m1_1006  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_356 -> m1_1023  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_356 -> m1_1038  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.ReadType"];
m1_356 -> m1_187  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_356 -> m1_205  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_356 -> m1_181  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.ReadType readType"];
m1_983 -> m1_984  [key=0, style=solid];
m1_983 -> m1_58  [key=2, style=dotted];
m1_993 -> m1_994  [key=0, style=solid];
m1_993 -> m1_1006  [key=0, style=solid];
m1_1006 -> m1_1007  [key=0, style=solid];
m1_1006 -> m1_1023  [key=0, style=solid];
m1_1023 -> m1_1024  [key=0, style=solid];
m1_1023 -> m1_1038  [key=0, style=solid];
m1_1038 -> m1_1039  [key=0, style=solid];
m1_1038 -> m1_1053  [key=0, style=solid];
m1_984 -> m1_985  [key=0, style=solid];
m1_984 -> m1_991  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m1_984 -> m1_992  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m1_984 -> m1_1008  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m1_984 -> m1_1025  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m1_984 -> m1_1040  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m1_984 -> m1_1054  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
m1_985 -> m1_986  [key=0, style=solid];
m1_985 -> m1_988  [key=1, style=dashed, color=darkseagreen4, label=initialPosition];
m1_991 -> m1_992  [key=0, style=solid];
m1_991 -> m1_1087  [key=2, style=dotted];
m1_991 -> m1_1007  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m1_991 -> m1_1024  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m1_991 -> m1_1039  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m1_991 -> m1_1053  [key=1, style=dashed, color=darkseagreen4, label=singleDigit];
m1_992 -> m1_993  [key=0, style=solid];
m1_992 -> m1_995  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m1_992 -> m1_1009  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m1_992 -> m1_1026  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m1_992 -> m1_1041  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m1_992 -> m1_1056  [key=1, style=dashed, color=darkseagreen4, label=nonBase10];
m1_1008 -> m1_1022  [key=0, style=solid];
m1_1008 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1025 -> m1_1037  [key=0, style=solid];
m1_1025 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1040 -> m1_1052  [key=0, style=solid];
m1_1040 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1054 -> m1_1055  [key=0, style=solid];
m1_1054 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_986 -> m1_987  [key=0, style=solid];
m1_986 -> m1_667  [key=2, style=dotted];
m1_988 -> m1_989  [key=0, style=solid];
m1_988 -> m1_650  [key=2, style=dotted];
m1_987 -> m1_988  [key=0, style=solid];
m1_987 -> m1_60  [key=2, style=dotted];
m1_989 -> m1_990  [key=0, style=solid];
m1_989 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_989 -> m1_994  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m1_989 -> m1_1011  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m1_989 -> m1_1015  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m1_989 -> m1_1033  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m1_989 -> m1_1048  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m1_989 -> m1_1062  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m1_989 -> m1_1098  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m1_989 -> m1_1075  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m1_989 -> m1_1079  [key=3, color=darkorchid, style=bold, label="Local variable object numberValue"];
m1_990 -> m1_991  [key=0, style=solid];
m1_1085 -> m1_1086  [key=0, style=solid];
m1_1085 -> m1_65  [key=2, style=dotted];
m1_1007 -> m1_1008  [key=0, style=solid];
m1_1007 -> m1_1009  [key=0, style=solid];
m1_1024 -> m1_1025  [key=0, style=solid];
m1_1024 -> m1_1026  [key=0, style=solid];
m1_1039 -> m1_1040  [key=0, style=solid];
m1_1039 -> m1_1041  [key=0, style=solid];
m1_1053 -> m1_1054  [key=0, style=solid];
m1_1053 -> m1_1056  [key=0, style=solid];
m1_995 -> m1_996  [key=0, style=solid];
m1_995 -> m1_1001  [key=0, style=solid];
m1_1009 -> m1_1010  [key=0, style=solid];
m1_1009 -> m1_1015  [key=0, style=solid];
m1_1026 -> m1_1027  [key=0, style=solid];
m1_1026 -> m1_1032  [key=0, style=solid];
m1_1041 -> m1_1042  [key=0, style=solid];
m1_1041 -> m1_1047  [key=0, style=solid];
m1_1056 -> m1_1057  [key=0, style=solid];
m1_1056 -> m1_1062  [key=0, style=solid];
m1_994 -> m1_995  [key=0, style=solid];
m1_994 -> m1_61  [key=2, style=dotted];
m1_994 -> m1_996  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_994 -> m1_997  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_994 -> m1_998  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_994 -> m1_1000  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_994 -> m1_1002  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_994 -> m1_1005  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_996 -> m1_997  [key=0, style=solid];
m1_996 -> m1_998  [key=0, style=solid];
m1_996 -> m1_1088  [key=2, style=dotted];
m1_997 -> m1_999  [key=0, style=solid];
m1_997 -> m1_1004  [key=0, style=solid];
m1_997 -> m1_1089  [key=2, style=dotted];
m1_998 -> m1_999  [key=0, style=solid];
m1_998 -> m1_1004  [key=0, style=solid];
m1_998 -> m1_1089  [key=2, style=dotted];
m1_1000 -> m1_1086  [key=0, style=solid];
m1_1000 -> m1_176  [key=2, style=dotted];
m1_1000 -> m1_1090  [key=2, style=dotted];
m1_1002 -> m1_1003  [key=0, style=solid];
m1_1002 -> m1_1004  [key=0, style=solid];
m1_1002 -> m1_1091  [key=2, style=dotted];
m1_1005 -> m1_1084  [key=0, style=solid];
m1_1005 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1001 -> m1_1002  [key=0, style=solid];
m1_999 -> m1_1000  [key=0, style=solid];
m1_1004 -> m1_1005  [key=0, style=solid];
m1_1004 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m1_1003 -> m1_1086  [key=0, style=solid];
m1_1003 -> m1_61  [key=2, style=dotted];
m1_1003 -> m1_176  [key=2, style=dotted];
m1_1003 -> m1_177  [key=2, style=dotted];
m1_1010 -> m1_1011  [key=0, style=solid];
m1_1010 -> m1_61  [key=2, style=dotted];
m1_1010 -> m1_1014  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1015 -> m1_1016  [key=0, style=solid];
m1_1011 -> m1_1012  [key=0, style=solid];
m1_1011 -> m1_1088  [key=2, style=dotted];
m1_1011 -> m1_1092  [key=2, style=dotted];
m1_1014 -> m1_1086  [key=0, style=solid];
m1_1014 -> m1_176  [key=2, style=dotted];
m1_1014 -> m1_1090  [key=2, style=dotted];
m1_1012 -> m1_1013  [key=0, style=solid];
m1_1012 -> m1_1022  [key=0, style=solid];
m1_1012 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1013 -> m1_1014  [key=0, style=solid];
m1_1022 -> m1_1084  [key=0, style=solid];
m1_1022 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m1_1016 -> m1_1017  [key=0, style=solid];
m1_1016 -> m1_1093  [key=2, style=dotted];
m1_1016 -> m1_1018  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_1016 -> m1_1019  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m1_1017 -> m1_1018  [key=0, style=solid];
m1_1017 -> m1_1019  [key=0, style=solid];
m1_1018 -> m1_1022  [key=0, style=solid];
m1_1018 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1019 -> m1_1020  [key=0, style=solid];
m1_1019 -> m1_1021  [key=0, style=solid];
m1_1020 -> m1_1086  [key=0, style=solid];
m1_1020 -> m1_61  [key=2, style=dotted];
m1_1020 -> m1_176  [key=2, style=dotted];
m1_1020 -> m1_177  [key=2, style=dotted];
m1_1021 -> m1_1086  [key=0, style=solid];
m1_1021 -> m1_61  [key=2, style=dotted];
m1_1021 -> m1_176  [key=2, style=dotted];
m1_1021 -> m1_177  [key=2, style=dotted];
m1_1027 -> m1_1028  [key=0, style=solid];
m1_1027 -> m1_61  [key=2, style=dotted];
m1_1027 -> m1_1031  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1032 -> m1_1033  [key=0, style=solid];
m1_1032 -> m1_61  [key=2, style=dotted];
m1_1032 -> m1_1034  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1028 -> m1_1029  [key=0, style=solid];
m1_1028 -> m1_1088  [key=2, style=dotted];
m1_1028 -> m1_1089  [key=2, style=dotted];
m1_1031 -> m1_1086  [key=0, style=solid];
m1_1031 -> m1_176  [key=2, style=dotted];
m1_1031 -> m1_1090  [key=2, style=dotted];
m1_1029 -> m1_1030  [key=0, style=solid];
m1_1029 -> m1_1037  [key=0, style=solid];
m1_1029 -> m1_1094  [key=2, style=dotted];
m1_1029 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1030 -> m1_1031  [key=0, style=solid];
m1_1037 -> m1_1084  [key=0, style=solid];
m1_1037 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m1_1033 -> m1_1034  [key=0, style=solid];
m1_1034 -> m1_1035  [key=0, style=solid];
m1_1034 -> m1_1036  [key=0, style=solid];
m1_1034 -> m1_1095  [key=2, style=dotted];
m1_1035 -> m1_1037  [key=0, style=solid];
m1_1035 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1036 -> m1_1086  [key=0, style=solid];
m1_1036 -> m1_61  [key=2, style=dotted];
m1_1036 -> m1_176  [key=2, style=dotted];
m1_1036 -> m1_177  [key=2, style=dotted];
m1_1042 -> m1_1043  [key=0, style=solid];
m1_1042 -> m1_61  [key=2, style=dotted];
m1_1042 -> m1_1046  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1047 -> m1_1048  [key=0, style=solid];
m1_1047 -> m1_61  [key=2, style=dotted];
m1_1047 -> m1_1049  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1043 -> m1_1044  [key=0, style=solid];
m1_1043 -> m1_1088  [key=2, style=dotted];
m1_1043 -> m1_1089  [key=2, style=dotted];
m1_1046 -> m1_1086  [key=0, style=solid];
m1_1046 -> m1_176  [key=2, style=dotted];
m1_1046 -> m1_1090  [key=2, style=dotted];
m1_1044 -> m1_1045  [key=0, style=solid];
m1_1044 -> m1_1052  [key=0, style=solid];
m1_1044 -> m1_1096  [key=2, style=dotted];
m1_1044 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1045 -> m1_1046  [key=0, style=solid];
m1_1052 -> m1_1084  [key=0, style=solid];
m1_1052 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m1_1048 -> m1_1049  [key=0, style=solid];
m1_1049 -> m1_1050  [key=0, style=solid];
m1_1049 -> m1_1051  [key=0, style=solid];
m1_1049 -> m1_1091  [key=2, style=dotted];
m1_1050 -> m1_1052  [key=0, style=solid];
m1_1050 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1051 -> m1_1086  [key=0, style=solid];
m1_1051 -> m1_61  [key=2, style=dotted];
m1_1051 -> m1_176  [key=2, style=dotted];
m1_1051 -> m1_177  [key=2, style=dotted];
m1_1055 -> m1_1084  [key=0, style=solid];
m1_1055 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m1_1057 -> m1_1058  [key=0, style=solid];
m1_1057 -> m1_61  [key=2, style=dotted];
m1_1057 -> m1_1060  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1062 -> m1_1063  [key=0, style=solid];
m1_1058 -> m1_1059  [key=0, style=solid];
m1_1058 -> m1_1061  [key=0, style=solid];
m1_1058 -> m1_1088  [key=2, style=dotted];
m1_1058 -> m1_1089  [key=2, style=dotted];
m1_1058 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1060 -> m1_1086  [key=0, style=solid];
m1_1060 -> m1_176  [key=2, style=dotted];
m1_1060 -> m1_1090  [key=2, style=dotted];
m1_1059 -> m1_1060  [key=0, style=solid];
m1_1061 -> m1_1084  [key=0, style=solid];
m1_1061 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m1_1063 -> m1_1064  [key=0, style=solid];
m1_1063 -> m1_1097  [key=2, style=dotted];
m1_1063 -> m1_1065  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_1063 -> m1_1067  [key=1, style=dashed, color=darkseagreen4, label=parseResult];
m1_1064 -> m1_1065  [key=0, style=solid];
m1_1064 -> m1_1067  [key=0, style=solid];
m1_1065 -> m1_1066  [key=0, style=solid];
m1_1065 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1067 -> m1_1068  [key=0, style=solid];
m1_1067 -> m1_1073  [key=0, style=solid];
m1_1066 -> m1_1084  [key=0, style=solid];
m1_1066 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m1_1068 -> m1_1069  [key=0, style=solid];
m1_1068 -> m1_61  [key=2, style=dotted];
m1_1068 -> m1_1071  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1073 -> m1_1074  [key=0, style=solid];
m1_1073 -> m1_61  [key=2, style=dotted];
m1_1073 -> m1_1076  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1073 -> m1_1078  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1073 -> m1_1080  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1073 -> m1_1082  [key=1, style=dashed, color=darkseagreen4, label=number];
m1_1069 -> m1_1070  [key=0, style=solid];
m1_1069 -> m1_1071  [key=0, style=solid];
m1_1071 -> m1_1072  [key=0, style=solid];
m1_1071 -> m1_1098  [key=2, style=dotted];
m1_1071 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1070 -> m1_1086  [key=0, style=solid];
m1_1070 -> m1_61  [key=2, style=dotted];
m1_1070 -> m1_176  [key=2, style=dotted];
m1_1070 -> m1_177  [key=2, style=dotted];
m1_1072 -> m1_1084  [key=0, style=solid];
m1_1072 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m1_1074 -> m1_1075  [key=0, style=solid];
m1_1074 -> m1_1079  [key=0, style=solid];
m1_1076 -> m1_1077  [key=0, style=solid];
m1_1076 -> m1_1078  [key=0, style=solid];
m1_1076 -> m1_1095  [key=2, style=dotted];
m1_1078 -> m1_1086  [key=0, style=solid];
m1_1078 -> m1_176  [key=2, style=dotted];
m1_1078 -> m1_177  [key=2, style=dotted];
m1_1080 -> m1_1081  [key=0, style=solid];
m1_1080 -> m1_1082  [key=0, style=solid];
m1_1080 -> m1_1091  [key=2, style=dotted];
m1_1082 -> m1_1086  [key=0, style=solid];
m1_1082 -> m1_176  [key=2, style=dotted];
m1_1082 -> m1_177  [key=2, style=dotted];
m1_1075 -> m1_1076  [key=0, style=solid];
m1_1079 -> m1_1080  [key=0, style=solid];
m1_1077 -> m1_1083  [key=0, style=solid];
m1_1077 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1081 -> m1_1083  [key=0, style=solid];
m1_1081 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberValue];
m1_1083 -> m1_1084  [key=0, style=solid];
m1_1083 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label=numberType];
m1_1084 -> m1_1085  [key=0, style=solid];
m1_1084 -> m1_711  [key=2, style=dotted];
m1_1086 -> m1_356  [key=0, style=bold, color=blue];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_181  [key=3, color=darkorchid, style=bold, label="method methodReturn int? ReadAsInt32"];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_181  [key=2, style=dotted];
m1_180 -> m1_178  [key=0, style=bold, color=blue];
m1_171 -> m1_755  [key=0, style=solid];
m1_171 -> m1_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m1_171 -> m1_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m1_171 -> m1_781  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseObject"];
m1_755 -> m1_756  [key=0, style=solid];
m1_755 -> m1_780  [key=0, style=solid];
m1_756 -> m1_757  [key=0, style=solid];
m1_756 -> m1_777  [key=1, style=dashed, color=darkseagreen4, label=currentChar];
m1_757 -> m1_758  [key=0, style=solid];
m1_757 -> m1_763  [key=0, style=solid];
m1_757 -> m1_767  [key=0, style=solid];
m1_757 -> m1_770  [key=0, style=solid];
m1_757 -> m1_772  [key=0, style=solid];
m1_757 -> m1_774  [key=0, style=solid];
m1_757 -> m1_777  [key=0, style=solid];
m1_777 -> m1_778  [key=0, style=solid];
m1_777 -> m1_779  [key=0, style=solid];
m1_777 -> m1_263  [key=2, style=dotted];
m1_758 -> m1_759  [key=0, style=solid];
m1_763 -> m1_764  [key=0, style=solid];
m1_767 -> m1_768  [key=0, style=solid];
m1_770 -> m1_771  [key=0, style=solid];
m1_772 -> m1_773  [key=0, style=solid];
m1_774 -> m1_775  [key=0, style=solid];
m1_759 -> m1_760  [key=0, style=solid];
m1_759 -> m1_762  [key=0, style=solid];
m1_760 -> m1_761  [key=0, style=solid];
m1_760 -> m1_755  [key=0, style=solid];
m1_760 -> m1_83  [key=2, style=dotted];
m1_762 -> m1_755  [key=0, style=solid];
m1_761 -> m1_780  [key=0, style=solid];
m1_764 -> m1_765  [key=0, style=solid];
m1_764 -> m1_174  [key=2, style=dotted];
m1_765 -> m1_766  [key=0, style=solid];
m1_766 -> m1_780  [key=0, style=solid];
m1_768 -> m1_769  [key=0, style=solid];
m1_768 -> m1_175  [key=2, style=dotted];
m1_769 -> m1_780  [key=0, style=solid];
m1_771 -> m1_755  [key=0, style=solid];
m1_771 -> m1_261  [key=2, style=dotted];
m1_773 -> m1_755  [key=0, style=solid];
m1_773 -> m1_262  [key=2, style=dotted];
m1_775 -> m1_776  [key=0, style=solid];
m1_776 -> m1_755  [key=0, style=solid];
m1_778 -> m1_755  [key=0, style=solid];
m1_779 -> m1_780  [key=0, style=solid];
m1_779 -> m1_781  [key=2, style=dotted];
m1_780 -> m1_171  [key=0, style=bold, color=blue];
m1_1241 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_153  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_167  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_265  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_283  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_288  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_290  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_296  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_313  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_322  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_323  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_326  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_363  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_372  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_381  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_397  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_408  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_415  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_419  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_425  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_429  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_435  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_456  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_459  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_469  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_471  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_474  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_491  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_493  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_495  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_496  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_499  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_511  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_513  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_527  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_535  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_539  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_540  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_545  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_548  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_549  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_550  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_552  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_556  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_557  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_559  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_560  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_561  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_564  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_566  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_568  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_569  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_570  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_572  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_573  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_574  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_576  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_597  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_598  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_604  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_607  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_613  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_615  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_618  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_619  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_620  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_621  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_622  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_629  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_630  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_634  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_637  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_640  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_641  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_643  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_653  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_654  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_658  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_661  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_668  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_670  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_672  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_673  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_674  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_705  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_706  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_709  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_712  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_713  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_717  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_720  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_721  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_722  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_724  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_726  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_727  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_730  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_734  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_735  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_738  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_741  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_742  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_746  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_748  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_750  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_752  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_753  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_756  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_759  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_760  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_762  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_764  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_765  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_768  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_771  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_773  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_776  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_778  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_779  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_782  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_785  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_787  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_788  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_789  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_791  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_792  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_793  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_795  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_796  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_798  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_799  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_800  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_801  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_802  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_803  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_804  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_805  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_806  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_815  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_817  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_819  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_820  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_821  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_822  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_824  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_825  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_826  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_828  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_830  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_833  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_836  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_837  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_839  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_842  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_845  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_848  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_851  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_852  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_854  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_856  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_857  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_858  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_859  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_862  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_865  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_868  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_869  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_870  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_873  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_876  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_879  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_880  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_883  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_884  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_887  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_888  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_891  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_894  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_895  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_898  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_900  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_905  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_907  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_909  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_919  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_920  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_922  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_923  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_924  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_925  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_930  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_933  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_934  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_936  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_938  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_940  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_943  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_947  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_948  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_949  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_952  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_954  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_955  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_956  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_957  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_958  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_960  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_962  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_963  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_965  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_966  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_968  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_969  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_971  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_972  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_973  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_974  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_975  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_976  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_977  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_978  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_979  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_980  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_981  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_983  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_984  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_985  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_986  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_987  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_988  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_991  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_992  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_994  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1000  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1003  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1010  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1014  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1016  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1020  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1021  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1027  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1031  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1032  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1036  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1042  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1046  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1047  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1051  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1057  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1060  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1063  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1068  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1070  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1073  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1074  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1078  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1082  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1084  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1085  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1104  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1111  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1112  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1114  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1116  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1120  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1128  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1133  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1140  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1141  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1150  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1151  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1154  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1166  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1180  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1192  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1195  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1196  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1197  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1204  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1224  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1227  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1228  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1229  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1230  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1232  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
m1_1241 -> m1_1233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonTextReader"];
}
