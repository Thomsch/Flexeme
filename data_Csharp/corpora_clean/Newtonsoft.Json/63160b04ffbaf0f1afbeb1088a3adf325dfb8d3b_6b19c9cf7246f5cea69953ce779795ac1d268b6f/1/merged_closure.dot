digraph  {
n0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", span="45-45"];
n2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new\r\n                {\r\n                    title = ''Star Wars'',\r\n                    link = ''http://www.starwars.com'',\r\n                    description = ''Star Wars blog.'',\r\n                    item =\r\n                        from p in posts\r\n                        orderby p.Title\r\n                        select new\r\n                        {\r\n                            title = p.Title,\r\n                            description = p.Description,\r\n                            link = p.Link,\r\n                            category = p.Categories\r\n                        }\r\n                }\r\n            })", span="63-81"];
n5 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Post.Post()", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Post.Post()", span="36-36"];
n3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", label="Console.WriteLine(o.ToString())", span="83-83"];
n7 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="377-377"];
n4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonAnonymousObject.Example()", span="45-45"];
n8 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
n9 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
d1 [cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", color=green, community=0, label="return TypeAttributeCache.Get(type);", prediction=0, span="40-40"];
d0 [cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", label="Entry Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", span="38-38"];
d2 [cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", label="Exit Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(System.Reflection.ICustomAttributeProvider)", span="38-38"];
d3 [cluster="Newtonsoft.Json.Serialization.ThreadSafeDictionaryWrapper<TKey, TValue>.Get(TKey)", label="Entry Newtonsoft.Json.Serialization.ThreadSafeDictionaryWrapper<TKey, TValue>.Get(TKey)", span="49-49"];
m0_110 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="257-257"];
m0_111 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return MiscellaneousUtils.TryAction<object>(delegate { return Convert(initialValue, culture, targetType); }, out convertedValue);", span="259-259"];
m0_112 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="257-257"];
m0_140 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", span="359-359"];
m0_141 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return MiscellaneousUtils.TryAction<object>(delegate { return ConvertOrCast(initialValue, culture, targetType); }, out convertedValue);", span="361-361"];
m0_142 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast(object, System.Globalization.CultureInfo, System.Type, out object)", span="359-359"];
m0_95 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="365-365"];
m0_146 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="Type valueType = (value != null) ? value.GetType() : null", span="367-367"];
m0_147 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="value != null && targetType.IsAssignableFrom(valueType)", span="369-369"];
m0_148 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="return value;", span="370-370"];
m0_149 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="value == null && ReflectionUtils.IsNullable(targetType)", span="371-371"];
m0_151 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="throw new Exception(''Could not cast or convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, (initialType != null) ? initialType.ToString() : ''{null}'', targetType));", span="374-374"];
m0_150 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="return null;", span="372-372"];
m0_152 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", span="365-365"];
m0_129 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", span="321-321"];
m0_130 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", file="ConvertUtils.cs", label="return TryConvertOrCast<T>(initialValue, CultureInfo.CurrentCulture, out convertedValue);", span="323-323"];
m0_131 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, out T)", span="321-321"];
m0_93 [cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="ConvertUtils.cs", label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0"];
m0_35 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", file="ConvertUtils.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0"];
m0_85 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="ConvertUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m0_170 [cluster="Unk.FormatWith", file="ConvertUtils.cs", label="Entry Unk.FormatWith", span=""];
m0_153 [cluster="System.Type.ToString()", file="ConvertUtils.cs", label="Entry System.Type.ToString()", span="0-0"];
m0_0 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", span="39-39"];
m0_1 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="ValidationUtils.ArgumentNotNull(initialType, ''initialType'')", span="41-41"];
m0_2 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="ValidationUtils.ArgumentNotNull(targetType, ''targetType'')", span="42-42"];
m0_3 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="ReflectionUtils.IsNullableType(targetType)", span="44-44"];
m0_4 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="targetType = Nullable.GetUnderlyingType(targetType)", span="45-45"];
m0_5 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="targetType == initialType", span="47-47"];
m0_7 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="typeof(IConvertible).IsAssignableFrom(initialType) && typeof(IConvertible).IsAssignableFrom(targetType)", span="50-50"];
m0_9 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="initialType == typeof(DateTime) && targetType == typeof(DateTimeOffset)", span="55-55"];
m0_11 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="initialType == typeof(Guid) && (targetType == typeof(Guid) || targetType == typeof(string))", span="58-58"];
m0_13 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="initialType == typeof(Type) && targetType == typeof(string)", span="61-61"];
m0_15 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="TypeConverter toConverter = GetConverter(initialType)", span="66-66"];
m0_16 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="toConverter != null && !IsComponentConverter(toConverter) && toConverter.CanConvertTo(targetType)", span="68-68"];
m0_17 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="allowTypeNameToString || toConverter.GetType() != typeof(TypeConverter)", span="70-70"];
m0_19 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="TypeConverter fromConverter = GetConverter(targetType)", span="74-74"];
m0_20 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="fromConverter != null && !IsComponentConverter(fromConverter) && fromConverter.CanConvertFrom(initialType)", span="76-76"];
m0_22 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="initialType == typeof(DBNull)", span="81-81"];
m0_23 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="ReflectionUtils.IsNullable(targetType)", span="83-83"];
m0_6 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="return true;", span="48-48"];
m0_8 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="return true;", span="52-52"];
m0_10 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="return true;", span="56-56"];
m0_12 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="return true;", span="59-59"];
m0_14 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="return true;", span="62-62"];
m0_18 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="return true;", span="71-71"];
m0_21 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="return true;", span="77-77"];
m0_25 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="return false;", span="87-87"];
m0_24 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="return true;", span="84-84"];
m0_26 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.CanConvertType(System.Type, System.Type, bool)", span="39-39"];
m0_36 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="66-66"];
m0_82 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ConvertUtils.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_94 [cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="ConvertUtils.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
m0_89 [cluster="System.Enum.ToObject(System.Type, object)", file="ConvertUtils.cs", label="Entry System.Enum.ToObject(System.Type, object)", span="0-0"];
m0_32 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", span="90-90"];
m0_37 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", file="ConvertUtils.cs", label="return (converter is ComponentConverter);", span="93-93"];
m0_38 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsComponentConverter(System.ComponentModel.TypeConverter)", span="90-90"];
m0_27 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94"];
m0_116 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", span="271-271"];
m0_117 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", file="ConvertUtils.cs", label="return ConvertOrCast<T>(initialValue, CultureInfo.CurrentCulture);", span="273-273"];
m0_118 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object)", span="271-271"];
m0_169 [cluster="Unk.GetType", file="ConvertUtils.cs", label="Entry Unk.GetType", span=""];
m0_30 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ConvertUtils.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_29 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="ConvertUtils.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m0_96 [cluster="System.Exception.Exception(string)", file="ConvertUtils.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_33 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="ConvertUtils.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m0_86 [cluster="object.ToString()", file="ConvertUtils.cs", label="Entry object.ToString()", span="0-0"];
m0_101 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", span="236-236"];
m0_102 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs", label="return MiscellaneousUtils.TryAction<T>(delegate\r\n      {\r\n        object tempConvertedValue;\r\n        TryConvert(initialValue, CultureInfo.CurrentCulture, typeof(T), out tempConvertedValue);\r\n\r\n        return (T)tempConvertedValue;\r\n      }, out convertedValue);", span="238-244"];
m0_103 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, System.Globalization.CultureInfo, out T)", span="236-236"];
m0_34 [cluster="object.GetType()", file="ConvertUtils.cs", label="Entry object.GetType()", span="0-0"];
m0_87 [cluster="System.Enum.Parse(System.Type, string, bool)", file="ConvertUtils.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m0_187 [cluster="System.Convert.GetTypeCode(object)", file="ConvertUtils.cs", label="Entry System.Convert.GetTypeCode(object)", span="0-0"];
m0_84 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ConvertUtils.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m0_128 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="38-38"];
m0_45 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="130-130"];
m0_46 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="initialValue == null", span="132-132"];
m0_48 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="ReflectionUtils.IsNullableType(targetType)", span="135-135"];
m0_49 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="targetType = Nullable.GetUnderlyingType(targetType)", span="136-136"];
m0_50 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="Type initialType = initialValue.GetType()", span="138-138"];
m0_51 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="targetType == initialType", span="140-140"];
m0_52 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return initialValue;", span="141-141"];
m0_53 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="initialValue is string && typeof(Type).IsAssignableFrom(targetType)", span="143-143"];
m0_54 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return Type.GetType((string) initialValue, true);", span="144-144"];
m0_55 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="targetType.IsInterface || targetType.IsGenericTypeDefinition || targetType.IsAbstract", span="146-146"];
m0_56 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="throw new ArgumentException(''Target type {0} is not a value type or a non-abstract class.''.FormatWith(CultureInfo.InvariantCulture, targetType), ''targetType'');", span="147-147"];
m0_57 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="initialValue is IConvertible && typeof(IConvertible).IsAssignableFrom(targetType)", span="150-150"];
m0_58 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="targetType.IsEnum", span="152-152"];
m0_59 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="initialValue is string", span="154-154"];
m0_60 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return Enum.Parse(targetType, initialValue.ToString(), true);", span="155-155"];
m0_61 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="IsInteger(initialValue)", span="156-156"];
m0_62 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return Enum.ToObject(targetType, initialValue);", span="157-157"];
m0_63 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return System.Convert.ChangeType(initialValue, targetType, culture);", span="160-160"];
m0_64 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="initialValue is DateTime && targetType == typeof(DateTimeOffset)", span="163-163"];
m0_65 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return new DateTimeOffset((DateTime)initialValue);", span="164-164"];
m0_69 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="toConverter != null && toConverter.CanConvertTo(targetType)", span="173-173"];
m0_70 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return toConverter.ConvertTo(null, culture, initialValue, targetType);", span="176-176"];
m0_71 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="TypeConverter fromConverter = GetConverter(targetType)", span="182-182"];
m0_73 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return fromConverter.ConvertFrom(null, culture, initialValue);", span="187-187"];
m0_74 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="initialValue == DBNull.Value", span="195-195"];
m0_75 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="ReflectionUtils.IsNullable(targetType)", span="197-197"];
m0_76 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return EnsureTypeAssignable(null, initialType, targetType);", span="198-198"];
m0_77 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="throw new Exception(''Can not convert null {0} into non-nullable {1}.''.FormatWith(CultureInfo.InvariantCulture, initialType, targetType));", span="200-200"];
m0_78 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="initialValue is INullable", span="203-203"];
m0_79 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return EnsureTypeAssignable(ToValue((INullable)initialValue), initialType, targetType);", span="204-204"];
m0_80 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="throw new Exception(''Can not convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, initialType, targetType));", span="207-207"];
m0_47 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="throw new ArgumentNullException(''initialValue'');", span="133-133"];
m0_68 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="TypeConverter toConverter = GetConverter(initialType)", span="171-171"];
m0_72 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="fromConverter != null && fromConverter.CanConvertFrom(initialType)", span="184-184"];
m0_81 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="130-130"];
m0_91 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="ConvertUtils.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m0_28 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="76-76"];
m0_97 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="378-378"];
m0_154 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="nullableValue == null", span="380-380"];
m0_156 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="nullableValue is SqlInt32", span="382-382"];
m0_157 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="return ToValue((SqlInt32)nullableValue);", span="383-383"];
m0_158 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="nullableValue is SqlInt64", span="384-384"];
m0_159 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="return ToValue((SqlInt64)nullableValue);", span="385-385"];
m0_160 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="nullableValue is SqlBoolean", span="386-386"];
m0_161 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="return ToValue((SqlBoolean)nullableValue);", span="387-387"];
m0_162 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="nullableValue is SqlString", span="388-388"];
m0_163 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="return ToValue((SqlString)nullableValue);", span="389-389"];
m0_164 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="nullableValue is SqlDateTime", span="390-390"];
m0_165 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="return ToValue((SqlDateTime)nullableValue);", span="391-391"];
m0_166 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="throw new Exception(''Unsupported INullable type: {0}''.FormatWith(CultureInfo.InvariantCulture, nullableValue.GetType()));", span="393-393"];
m0_155 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="return null;", span="381-381"];
m0_167 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToValue(INullable)", span="378-378"];
m0_122 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="300-300"];
m0_123 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="object convertedValue", span="302-302"];
m0_124 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="TryConvert(initialValue, culture, targetType, out convertedValue)", span="303-303"];
m0_126 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return EnsureTypeAssignable(initialValue, ReflectionUtils.GetObjectType(initialValue), targetType);", span="306-306"];
m0_125 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return convertedValue;", span="304-304"];
m0_127 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="300-300"];
m0_98 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", span="221-221"];
m0_99 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", file="ConvertUtils.cs", label="return TryConvert(initialValue, CultureInfo.CurrentCulture, out convertedValue);", span="223-223"];
m0_100 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvert<T>(object, out T)", span="221-221"];
m0_104 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.TryAction<T>(Newtonsoft.Json.Utilities.Creator<T>, out T)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.TryAction<T>(Newtonsoft.Json.Utilities.Creator<T>, out T)", span="21-21"];
m0_168 [cluster="Unk.ToValue", file="ConvertUtils.cs", label="Entry Unk.ToValue", span=""];
m0_39 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", span="106-106"];
m0_40 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", file="ConvertUtils.cs", label="return Convert<T>(initialValue, CultureInfo.CurrentCulture);", span="108-108"];
m0_41 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object)", span="106-106"];
m0_88 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="415-415"];
m0_175 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="System.Convert.GetTypeCode(value)", span="417-417"];
m0_176 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="TypeCode.SByte", span="419-419"];
m0_185 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="return false;", span="429-429"];
m0_177 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="TypeCode.Byte", span="420-420"];
m0_178 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="TypeCode.Int16", span="421-421"];
m0_179 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="TypeCode.UInt16", span="422-422"];
m0_180 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="TypeCode.Int32", span="423-423"];
m0_181 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="TypeCode.UInt32", span="424-424"];
m0_182 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="TypeCode.Int64", span="425-425"];
m0_183 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="TypeCode.UInt64", span="426-426"];
m0_184 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="return true;", span="427-427"];
m0_186 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="415-415"];
m0_119 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", span="284-284"];
m0_120 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs", label="return (T)ConvertOrCast(initialValue, culture, typeof(T));", span="286-286"];
m0_121 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast<T>(object, System.Globalization.CultureInfo)", span="284-284"];
m0_83 [cluster="System.Type.GetType(string, bool)", file="ConvertUtils.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m0_31 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="398-398"];
m0_171 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs", label="ValidationUtils.ArgumentNotNull(t, ''t'')", span="400-400"];
m0_172 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs", label="return TypeDescriptor.GetConverter(t);", span="403-403"];
m0_173 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="398-398"];
m0_132 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", span="337-337"];
m0_133 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs", label="return MiscellaneousUtils.TryAction<T>(delegate\r\n      {\r\n        object tempConvertedValue;\r\n        TryConvertOrCast(initialValue, CultureInfo.CurrentCulture, typeof(T), out tempConvertedValue);\r\n\r\n        return (T)tempConvertedValue;\r\n      }, out convertedValue);", span="339-345"];
m0_134 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertOrCast<T>(object, System.Globalization.CultureInfo, out T)", span="337-337"];
m0_174 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="ConvertUtils.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m0_42 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", span="118-118"];
m0_43 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs", label="return (T)Convert(initialValue, culture, typeof(T));", span="120-120"];
m0_44 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert<T>(object, System.Globalization.CultureInfo)", span="118-118"];
m0_90 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="ConvertUtils.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m0_143 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="361-361"];
m0_107 [cluster="lambda expression", file="ConvertUtils.cs", label="TryConvert(initialValue, CultureInfo.CurrentCulture, typeof(T), out tempConvertedValue)", span="241-241"];
m0_105 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="238-244"];
m0_106 [cluster="lambda expression", file="ConvertUtils.cs", label="object tempConvertedValue", span="240-240"];
m0_108 [cluster="lambda expression", file="ConvertUtils.cs", label="return (T)tempConvertedValue;", span="243-243"];
m0_109 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="238-244"];
m0_114 [cluster="lambda expression", file="ConvertUtils.cs", label="return Convert(initialValue, culture, targetType);", span="259-259"];
m0_113 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="259-259"];
m0_115 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="259-259"];
m0_137 [cluster="lambda expression", file="ConvertUtils.cs", label="TryConvertOrCast(initialValue, CultureInfo.CurrentCulture, typeof(T), out tempConvertedValue)", span="342-342"];
m0_135 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="339-345"];
m0_136 [cluster="lambda expression", file="ConvertUtils.cs", label="object tempConvertedValue", span="341-341"];
m0_138 [cluster="lambda expression", file="ConvertUtils.cs", label="return (T)tempConvertedValue;", span="344-344"];
m0_139 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="339-345"];
m0_144 [cluster="lambda expression", file="ConvertUtils.cs", label="return ConvertOrCast(initialValue, culture, targetType);", span="361-361"];
m0_145 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="361-361"];
m0_92 [cluster="System.Guid.Guid(string)", file="ConvertUtils.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m0_188 [file="ConvertUtils.cs", label=object, span=""];
m0_189 [file="ConvertUtils.cs", label=object, span=""];
m0_190 [file="ConvertUtils.cs", label="System.Globalization.CultureInfo", span=""];
m0_191 [file="ConvertUtils.cs", label="System.Type", span=""];
m0_192 [file="ConvertUtils.cs", label=object, span=""];
m0_193 [file="ConvertUtils.cs", label=object, span=""];
m0_194 [file="ConvertUtils.cs", label="System.Globalization.CultureInfo", span=""];
m0_195 [file="ConvertUtils.cs", label="System.Type", span=""];
m1_0 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="CustomCreationConverter.cs", label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", span="44-44"];
m1_1 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", color=green, community=0, file="CustomCreationConverter.cs", label="string first = @''{\r\n  ''''id'''':''''first'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string'''',''''maxLength'''':10},\r\n    ''''secondproperty'''':{\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''secondproperty_firstproperty'''':{''''type'''':''''string'''',''''maxLength'''':10,''''minLength'''':7}\r\n      }\r\n    }\r\n  },\r\n  ''''additionalProperties'''':{}\r\n}''", prediction=1, span="46-61"];
m1_2 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.AddSchema()", file="CustomCreationConverter.cs", label="string second = @''{\r\n  ''''id'''':''''second'''',\r\n  ''''type'''':''''object'''',\r\n  ''''extends'''':{''''$ref'''':''''first''''},\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string''''},\r\n    ''''secondproperty'''':{\r\n      ''''extends'''':{\r\n        ''''properties'''':\r\n        {\r\n          ''''secondproperty_firstproperty'''':{''''maxLength'''':9,''''minLength'''':6}\r\n        }\r\n      },\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''secondproperty_firstproperty'''':{}\r\n      }\r\n    },\r\n    ''''thirdproperty'''':{''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="63-86"];
m1_13 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="CustomCreationConverter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="50-50"];
m1_4 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs", label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="56-56"];
m1_3 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="CustomCreationConverter.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="360-360"];
m1_5 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs", label="T value = Create(objectType)", span="58-58"];
m1_11 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", file="CustomCreationConverter.cs", label="Entry Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", span="71-71"];
m1_6 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs", label="value == null", span="59-59"];
m1_7 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs", label="throw new JsonSerializationException(''No object created.'');", span="60-60"];
m1_10 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs", label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="56-56"];
m1_8 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs", label="serializer.Populate(reader, value)", span="62-62"];
m1_9 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="CustomCreationConverter.cs", label="return value;", span="63-63"];
m1_12 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="CustomCreationConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="48-48"];
m1_16 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.CanConvert(System.Type)", file="CustomCreationConverter.cs", label="return typeof (T).IsAssignableFrom(objectType);", span="82-82"];
m1_14 [cluster="Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", file="CustomCreationConverter.cs", label="Exit Newtonsoft.Json.Converters.CustomCreationConverter<T>.Create(System.Type)", span="71-71"];
m1_15 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", file="CustomCreationConverter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", span="35-35"];
m1_17 [cluster="Unk.AreEqual", file="CustomCreationConverter.cs", label="Entry Unk.AreEqual", span=""];
m1_18 [cluster="System.Type.IsAssignableFrom(System.Type)", file="CustomCreationConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_23 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs", label="Assert.AreEqual(1, node.Schemas.Count)", span="118-118"];
m1_24 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs", label="Assert.AreEqual(node, node.Items[0])", span="120-120"];
m1_21 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs", label="JsonSchemaModelBuilder modelBuilder = new JsonSchemaModelBuilder()", span="114-114"];
m1_22 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs", label="JsonSchemaNode node = modelBuilder.AddSchema(null, schema)", span="116-116"];
m1_20 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs", label="JsonSchema schema = JsonSchema.Parse(json)", span="112-112"];
m1_19 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs", label="Newtonsoft.Json.Converters.CustomCreationConverter<T>", span=""];
m1_25 [cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", file="CustomCreationConverter.cs", label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaNodeTests.CircularReference()", span="103-103"];
m1_26 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="CustomCreationConverter.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="288-288"];
m3_8 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DefaultMappingResolver.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m3_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", span="19-19"];
m3_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs", label="Person person = new Person()", span="22-22"];
m3_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs", label="string jsonIncludeDefaultValues = JsonConvert.SerializeObject(person, Formatting.Indented)", span="24-24"];
m3_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs", label="string jsonIgnoreDefaultValues = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Ignore\r\n            })", span="34-37"];
m3_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs", label="Console.WriteLine(jsonIncludeDefaultValues)", span="26-26"];
m3_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs", label="Console.WriteLine(jsonIgnoreDefaultValues)", span="39-39"];
m3_6 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", file="DefaultMappingResolver.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Example()", span="19-19"];
m3_7 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Person.Person()", file="DefaultMappingResolver.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DefaultValueHandlingIgnore.Person.Person()", span="10-10"];
m3_10 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DefaultMappingResolver.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m3_11 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultMappingResolver.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606"];
m4_7 [cluster="Unk.Select", file="JObjectTests.cs", label="Entry Unk.Select", span=""];
m4_10 [cluster="lambda expression", file="JObjectTests.cs", label="Entry lambda expression", span="40-47"];
m4_11 [cluster="lambda expression", file="JObjectTests.cs", label="new BlogPost\r\n            {\r\n                Title = (string)p[''Title''],\r\n                AuthorName = (string)p[''Author''][''Name''],\r\n                AuthorTwitter = (string)p[''Author''][''Twitter''],\r\n                PostedDate = (DateTime)p[''Date''],\r\n                Body = HttpUtility.HtmlDecode((string)p[''BodyHtml''])\r\n            }", span="40-47"];
m4_12 [cluster="lambda expression", file="JObjectTests.cs", label="Exit lambda expression", span="40-47"];
m4_6 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JObjectTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144"];
m4_14 [cluster="Unk.HtmlDecode", file="JObjectTests.cs", label="Entry Unk.HtmlDecode", span=""];
m4_0 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", span="22-22"];
m4_1 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs", label="string json = @''[\r\n              {\r\n                'Title': 'Json.NET is awesome!',\r\n                'Author': {\r\n                  'Name': 'James Newton-King',\r\n                  'Twitter': '@JamesNK',\r\n                  'Picture': '/jamesnk.png'\r\n                },\r\n                'Date': '2013-01-23T19:30:00',\r\n                'BodyHtml': '&lt;h3&gt;Title!&lt;/h3&gt;\r\n&lt;p&gt;Content!&lt;/p&gt;'\r\n              }\r\n            ]''", span="25-36"];
m4_2 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs", label="JArray blogPostArray = JArray.Parse(json)", span="38-38"];
m4_3 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs", label="IList<BlogPost> blogPosts = blogPostArray.Select(p => new BlogPost\r\n            {\r\n                Title = (string)p[''Title''],\r\n                AuthorName = (string)p[''Author''][''Name''],\r\n                AuthorTwitter = (string)p[''Author''][''Twitter''],\r\n                PostedDate = (DateTime)p[''Date''],\r\n                Body = HttpUtility.HtmlDecode((string)p[''BodyHtml''])\r\n            }).ToList()", span="40-47"];
m4_4 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs", label="Console.WriteLine(blogPosts[0].Body)", span="49-49"];
m4_5 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", file="JObjectTests.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.Example()", span="22-22"];
m4_13 [cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", file="JObjectTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.DeserializeWithLinq.BlogPost.BlogPost()", span="12-12"];
m4_8 [cluster="Unk.ToList", file="JObjectTests.cs", label="Entry Unk.ToList", span=""];
m5_0 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="Entry Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", span="62-62"];
m5_1 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_propertyName = propertyName", span="64-64"];
m5_2 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_member = member", span="65-65"];
m5_3 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_ignored = ignored", span="66-66"];
m5_4 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_readable = readable", span="67-67"];
m5_5 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_writable = writable", span="68-68"];
m5_6 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_memberConverter = memberConverter", span="69-69"];
m5_7 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_defaultValue = defaultValue", span="70-70"];
m5_8 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_required = required", span="71-71"];
m5_9 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_isReference = isReference", span="72-72"];
m5_10 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_nullValueHandling = nullValueHandling", span="73-73"];
m5_11 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_defaultValueHandling = defaultValueHandling", span="74-74"];
m5_12 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="_referenceLoopHandling = referenceLoopHandling", span="75-75"];
m5_13 [cluster="Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", file="JsonMemberMapping.cs", label="Exit Newtonsoft.Json.Serialization.JsonMemberMapping.JsonMemberMapping(string, System.Reflection.MemberInfo, bool, bool, bool, Newtonsoft.Json.JsonConverter, object, bool, bool, Newtonsoft.Json.NullValueHandling?, Newtonsoft.Json.DefaultValueHandling?, Newtonsoft.Json.ReferenceLoopHandling?)", span="62-62"];
m5_14 [file="JsonMemberMapping.cs", label="Newtonsoft.Json.Serialization.JsonMemberMapping", span=""];
m6_632 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1345-1345"];
m6_633 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="1347-1347"];
m6_634 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IDictionaryProperty = new Dictionary<string, int>\r\n                                {\r\n                                  {''one'', 1},\r\n                                  {''two'', 2},\r\n                                  {''three'', 3}\r\n                                }", span="1348-1353"];
m6_635 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IListProperty = new List<int>\r\n                          {\r\n                            1, 2, 3\r\n                          }", span="1354-1357"];
m6_636 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="o.IEnumerableProperty = new List<int>\r\n                                {\r\n                                  4, 5, 6\r\n                                }", span="1358-1361"];
m6_637 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1363-1363"];
m6_641 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="1386-1386"];
m6_642 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="1387-1387"];
m6_643 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="1388-1388"];
m6_638 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="1365-1381"];
m6_639 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="1383-1383"];
m6_640 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(deserializedObject)", span="1384-1384"];
m6_644 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="1345-1345"];
m6_420 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m6_805 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", span="1849-1849"];
m6_806 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Employee e1 = new Employee {Name = ''e1''}", span="1851-1851"];
m6_807 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Employee e2 = new Employee {Name = ''e2''}", span="1852-1852"];
m6_808 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, Employee> employees = new Dictionary<string, Employee>\r\n        {\r\n          {''One'', e1},\r\n          {''Two'', e2},\r\n          {''Three'', e1},\r\n          {''Four'', e2}\r\n        }", span="1854-1860"];
m6_809 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="1862-1862"];
m6_810 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''One'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Two'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Three'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''Four'''': {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n}'', json)", span="1864-1881"];
m6_811 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInDictionary()", span="1849-1849"];
m6_119 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="272-272"];
m6_149 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="397-397"];
m6_150 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="ReadOnlyCollection<int> r1 = new ReadOnlyCollection<int>(new int[] { 0, 1, 2, 3, 4 })", span="399-399"];
m6_151 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(r1)", span="401-401"];
m6_153 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(r1, r2)", span="405-405"];
m6_152 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="ReadOnlyCollection<int> r2 = JsonConvert.DeserializeObject<ReadOnlyCollection<int>>(jsonText)", span="403-403"];
m6_154 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ReadOnlyCollectionSerialize()", span="397-397"];
m6_710 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.OptInClass.OptInClass()", span="1526-1526"];
m6_472 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27"];
m6_220 [cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m6_577 [cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="7-7"];
m6_65 [cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27"];
m6_421 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="837-837"];
m6_422 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="839-839"];
m6_423 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="841-841"];
m6_424 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="842-842"];
m6_425 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="844-844"];
m6_426 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="846-846"];
m6_427 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="837-837"];
m6_366 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", span="739-739"];
m6_367 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="741-741"];
m6_368 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''1'', json)", span="742-742"];
m6_369 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="744-744"];
m6_370 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="745-745"];
m6_371 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.EnumTest()", span="739-739"];
m6_452 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="880-880"];
m6_453 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="882-882"];
m6_454 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="883-883"];
m6_455 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="884-884"];
m6_456 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="886-886"];
m6_457 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="887-887"];
m6_458 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="889-889"];
m6_459 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="891-891"];
m6_460 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="892-892"];
m6_461 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="880-880"];
m6_787 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", span="1785-1785"];
m6_788 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs", label="Employee e1 = new Employee { Name = ''e1'' }", span="1787-1787"];
m6_789 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs", label="Employee e2 = new Employee { Name = ''e2'' }", span="1788-1788"];
m6_790 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs", label="List<Employee> employees = new List<Employee> { e1, e2, e1, e2 }", span="1790-1790"];
m6_791 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="1792-1792"];
m6_792 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="1794-1811"];
m6_793 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeReferenceInList()", span="1785-1785"];
m6_620 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="360-360"];
m6_939 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object, Newtonsoft.Json.JsonSerializer)", span="238-238"];
m6_711 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1573-1573"];
m6_712 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="1573-1573"];
m6_829 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularDictionary.CircularDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularDictionary.CircularDictionary()", span="1919-1919"];
m6_267 [cluster="System.Text.StringBuilder.ToString()", file="JsonSerializerTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_657 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", span="1421-1421"];
m6_658 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", file="JsonSerializerTest.cs", label="SuperProp = ''default superprop''", span="1421-1421"];
m6_659 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass.SuperKlass()", span="1421-1421"];
m6_794 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", span="1815-1815"];
m6_795 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="1817-1834"];
m6_796 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="List<Employee> employees = JsonConvert.DeserializeObject<List<Employee>>(json)", span="1836-1836"];
m6_797 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, employees.Count)", span="1837-1837"];
m6_798 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''e1'', employees[0].Name)", span="1839-1839"];
m6_799 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''e2'', employees[1].Name)", span="1840-1840"];
m6_800 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''e1'', employees[2].Name)", span="1841-1841"];
m6_801 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''e2'', employees[3].Name)", span="1842-1842"];
m6_802 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(employees[0], employees[2])", span="1844-1844"];
m6_803 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(employees[1], employees[3])", span="1845-1845"];
m6_804 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInList()", span="1815-1815"];
m6_117 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="140-140"];
m6_337 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m6_500 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", span="966-966"];
m6_501 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = new PersonRaw\r\n      {\r\n        FirstName = ''FirstNameValue'',\r\n        RawContent = new JsonRaw(''[1,2,3,4,5]''),\r\n        LastName = ''LastNameValue''\r\n      }", span="968-973"];
m6_502 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="string json", span="975-975"];
m6_503 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(personRaw)", span="977-977"];
m6_504 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="978-978"];
m6_505 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJsonRaw()", span="966-966"];
m6_858 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularList.CircularList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularList.CircularList()", span="1998-1998"];
m6_238 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_319 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="318-318"];
m6_80 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="193-193"];
m6_81 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="195-195"];
m6_82 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="197-197"];
m6_83 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="199-199"];
m6_84 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="200-200"];
m6_85 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="193-193"];
m6_347 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", span="715-715"];
m6_348 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Stack<object> s = new Stack<object>()", span="717-717"];
m6_349 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(1)", span="718-718"];
m6_350 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(2)", span="719-719"];
m6_351 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="s.Push(3)", span="720-720"];
m6_352 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(s)", span="722-722"];
m6_353 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[3,2,1]'', json)", span="723-723"];
m6_354 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeStack()", span="715-715"];
m6_565 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1095-1095"];
m6_566 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="1097-1099"];
m6_567 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1101-1101"];
m6_568 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="1095-1095"];
m6_265 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="349-349"];
m6_73 [cluster="object.ToString()", file="JsonSerializerTest.cs", label="Entry object.ToString()", span="0-0"];
m6_291 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="638-638"];
m6_292 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="640-640"];
m6_293 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="641-641"];
m6_294 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="642-642"];
m6_295 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="644-644"];
m6_296 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="645-645"];
m6_297 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="646-646"];
m6_298 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="647-647"];
m6_299 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="648-648"];
m6_300 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="638-638"];
m6_938 [cluster="object.GetType()", file="JsonSerializerTest.cs", label="Entry object.GetType()", span="0-0"];
m6_485 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", span="931-931"];
m6_486 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Invoice invoice = new Invoice\r\n                        {\r\n                          Company = ''Acme Ltd.'',\r\n                          Amount = 50.0m,\r\n                          Paid = false\r\n                        }", span="933-938"];
m6_487 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(invoice)", span="940-940"];
m6_489 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(invoice,\r\n        Formatting.None,\r\n        new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="945-947"];
m6_488 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="942-942"];
m6_490 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Console.WriteLine(json)", span="949-949"];
m6_491 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeInvoice()", span="931-931"];
m6_148 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_745 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", span="1647-1647"];
m6_746 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, string> p = new Dictionary<string, string>()", span="1649-1649"];
m6_747 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1651-1651"];
m6_748 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs", label="serializer.Populate(new StringReader(@''{''''Name'''':''''James''''}''), p)", span="1652-1652"];
m6_749 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, p.Count)", span="1654-1654"];
m6_750 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James'', p[''Name''])", span="1655-1655"];
m6_751 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PopulateDictionary()", span="1647-1647"];
m6_282 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", span="624-624"];
m6_283 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new object())", span="626-626"];
m6_284 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''{}'', json)", span="627-627"];
m6_285 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeObject()", span="624-624"];
m6_135 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", span="379-379"];
m6_136 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Article a1 = new Article(''a1'')", span="381-381"];
m6_137 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Article a2 = new Article(''a2'')", span="382-382"];
m6_139 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="articles1.Add(a1)", span="385-385"];
m6_138 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="ArticleCollection articles1 = new ArticleCollection()", span="384-384"];
m6_140 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="articles1.Add(a2)", span="386-386"];
m6_141 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(articles1)", span="388-388"];
m6_143 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(articles1.Count, articles2.Count)", span="392-392"];
m6_144 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(articles1[0].Name, articles2[0].Name)", span="393-393"];
m6_142 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="ArticleCollection articles2 = JsonConvert.DeserializeObject<ArticleCollection>(jsonText)", span="390-390"];
m6_145 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.InheritedListSerialize()", span="379-379"];
m6_186 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="227-227"];
m6_428 [cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27"];
m6_266 [cluster="System.IO.StringWriter.GetStringBuilder()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.GetStringBuilder()", span="0-0"];
m6_380 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", span="763-763"];
m6_381 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="string jsonText = @''[3, ''''somestring'''',[1,2,3],{}]''", span="765-765"];
m6_382 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="ArrayList o = JsonConvert.DeserializeObject<ArrayList>(jsonText)", span="766-766"];
m6_383 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Count)", span="768-768"];
m6_384 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, ((JArray)o[2]).Count)", span="769-769"];
m6_385 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, ((JObject)o[3]).Count)", span="770-770"];
m6_386 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeArrayAsArrayList()", span="763-763"];
m6_87 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="541-541"];
m6_473 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", span="911-911"];
m6_474 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass(),\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="913-914"];
m6_475 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TestField1'''':0,''''TestProperty1'''':null}'', json)", span="915-915"];
m6_476 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = int.MinValue, TestProperty1 = ''NotDefault'' },\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="917-918"];
m6_477 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TestField1'''':-2147483648,''''TestProperty1'''':''''NotDefault''''}'', json)", span="919-919"];
m6_478 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''NotDefault'' },\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="921-922"];
m6_479 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TestProperty1'''':''''NotDefault''''}'', json)", span="923-923"];
m6_480 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''TestProperty1Value'' },\r\n        Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="925-926"];
m6_481 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{}'', json)", span="927-927"];
m6_482 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DefaultValueAttributeTest()", span="911-911"];
m6_645 [cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="7-7"];
m6_844 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", span="1974-1974"];
m6_845 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}''", span="1976-1985"];
m6_846 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="CircularDictionary circularDictionary = JsonConvert.DeserializeObject<CircularDictionary>(json,\r\n        new JsonSerializerSettings\r\n          {\r\n            PreserveReferencesHandling = PreserveReferencesHandling.All\r\n          })", span="1987-1991"];
m6_847 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, circularDictionary.Count)", span="1993-1993"];
m6_848 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, circularDictionary[''other''].Count)", span="1994-1994"];
m6_849 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(circularDictionary, circularDictionary[''self''])", span="1995-1995"];
m6_850 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionarysWithPreserveObjectReferences()", span="1974-1974"];
m6_402 [cluster="Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PhoneNumber.PhoneNumber(string)", span="31-31"];
m6_379 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28"];
m6_877 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", span="2077-2077"];
m6_878 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="2079-2103"];
m6_879 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="CircularList circularList = JsonConvert.DeserializeObject<CircularList>(json,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="2105-2106"];
m6_880 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, circularList.Count)", span="2108-2108"];
m6_881 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, circularList[0])", span="2109-2109"];
m6_882 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, circularList[1].Count)", span="2110-2110"];
m6_883 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, circularList[2].Count)", span="2111-2111"];
m6_884 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, circularList[2][0].Count)", span="2112-2112"];
m6_885 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.IsTrue(ReferenceEquals(circularList, circularList[2][0][0]))", span="2113-2113"];
m6_886 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeListsWithPreserveObjectReferences()", span="2077-2077"];
m6_0 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", span="53-53"];
m6_1 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store store = new Store()", span="55-55"];
m6_2 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(store)", span="57-57"];
m6_4 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="61-61"];
m6_3 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="59-59"];
m6_5 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="63-63"];
m6_6 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PersonTypedObjectDeserialization()", span="53-53"];
m6_101 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27"];
m6_441 [cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30"];
m6_663 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1431-1431"];
m6_664 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass i = new SubKlass(''my subprop'')", span="1433-1433"];
m6_665 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="i.SuperProp = ''overrided superprop''", span="1434-1434"];
m6_666 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(i)", span="1436-1436"];
m6_667 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="1437-1437"];
m6_668 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="1439-1439"];
m6_669 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="string newJson = JsonConvert.SerializeObject(ii)", span="1441-1441"];
m6_670 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="1442-1442"];
m6_671 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="1431-1431"];
m6_698 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", span="1544-1544"];
m6_699 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass optInClass = new OptInClass()", span="1546-1546"];
m6_700 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Age = 26", span="1547-1547"];
m6_701 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.Name = ''James NK''", span="1548-1548"];
m6_702 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="optInClass.NotIncluded = ''Poor me :(''", span="1549-1549"];
m6_703 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="1551-1551"];
m6_704 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="1553-1556"];
m6_705 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="1558-1562"];
m6_706 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(26, newOptInClass.Age)", span="1563-1563"];
m6_707 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="1564-1564"];
m6_708 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="1565-1565"];
m6_709 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.OptInClassMetadataSerialization()", span="1544-1544"];
m6_108 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="519-519"];
m6_722 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1604-1604"];
m6_723 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="1606-1606"];
m6_724 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="c.NotIncluded = ''Hi''", span="1607-1607"];
m6_725 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1608-1608"];
m6_726 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="1610-1615"];
m6_727 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="1617-1617"];
m6_728 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="1618-1618"];
m6_729 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="1604-1604"];
m6_412 [cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33"];
m6_779 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", span="1754-1754"];
m6_780 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}''", span="1756-1770"];
m6_781 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs", label="CircularReferenceClass c1 =\r\n        JsonConvert.DeserializeObject<CircularReferenceClass>(json, new JsonSerializerSettings\r\n                                                                                          {\r\n                                                                                            PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n                                                                                          })", span="1772-1776"];
m6_782 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''c1'', c1.Name)", span="1778-1778"];
m6_783 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''c2'', c1.Child.Name)", span="1779-1779"];
m6_784 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''c3'', c1.Child.Child.Name)", span="1780-1780"];
m6_785 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''c1'', c1.Child.Child.Child.Name)", span="1781-1781"];
m6_786 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReference()", span="1754-1754"];
m6_320 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", span="681-681"];
m6_321 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = new ClassWithArray()", span="683-683"];
m6_322 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Foo = ''hello''", span="684-684"];
m6_323 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(1)", span="685-685"];
m6_324 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(2)", span="686-686"];
m6_325 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="wibble.Bar.Add(3)", span="687-687"];
m6_326 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(wibble)", span="688-688"];
m6_327 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="690-690"];
m6_328 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="691-691"];
m6_329 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="693-693"];
m6_330 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="694-694"];
m6_331 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="695-695"];
m6_332 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="696-696"];
m6_333 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="697-697"];
m6_334 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="698-698"];
m6_335 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeSerializedJson()", span="681-681"];
m6_311 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", span="666-666"];
m6_312 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="668-668"];
m6_313 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="JsonSerializer s = new JsonSerializer()", span="670-670"];
m6_315 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="673-673"];
m6_314 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="671-671"];
m6_316 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="675-675"];
m6_317 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar.Count)", span="677-677"];
m6_318 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ObjectCreationHandlingReplace()", span="666-666"];
m6_338 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", span="702-702"];
m6_339 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ConverableMembers())", span="704-704"];
m6_340 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''String'''':''''string'''',''''Int32'''':2147483647,''''UInt32'''':4294967295,''''Byte'''':255,''''SByte'''':127,''''Short'''':32767,''''UShort'''':65535,''''Long'''':9223372036854775807,''''ULong'''':9223372036854775807,''''Double'''':1.7976931348623157E+308,''''Float'''':3.40282347E+38,''''DBNull'''':null,''''Bool'''':true,''''Char'''':''''\u0000''''}'', json)", span="706-706"];
m6_341 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="708-708"];
m6_342 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''string'', c.String)", span="709-709"];
m6_343 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(double.MaxValue, c.Double)", span="710-710"];
m6_344 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="711-711"];
m6_345 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeConverableObjects()", span="702-702"];
m6_216 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m6_937 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="106-106"];
m6_940 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="262-262"];
m6_608 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", span="1295-1295"];
m6_609 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="Person person = GetPerson()", span="1303-1303"];
m6_610 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="FileStream fs = File.Open(@''c:\person.json'', FileMode.CreateNew)", span="1305-1305"];
m6_615 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="serializer.Serialize(jw, person)", span="1312-1312"];
m6_611 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="StreamWriter sw = new StreamWriter(fs)", span="1306-1306"];
m6_612 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="JsonWriter jw = new JsonTextWriter(sw)", span="1307-1307"];
m6_613 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="jw.Formatting = Formatting.Indented", span="1309-1309"];
m6_614 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1311-1311"];
m6_616 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonToFile()", span="1295-1295"];
m6_413 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", span="824-824"];
m6_414 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="826-826"];
m6_415 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1)", span="828-828"];
m6_416 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="829-829"];
m6_417 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="831-831"];
m6_418 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="833-833"];
m6_419 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseClassConverter()", span="824-824"];
m6_492 [cluster="Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", span="30-30"];
m6_556 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", span="1068-1068"];
m6_557 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c = new RequiredMembersClass()\r\n                                 {\r\n                                   BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                                   FirstName = ''Bob'',\r\n                                   LastName = ''Smith'',\r\n                                   MiddleName = ''Cosmo''\r\n                                 }", span="1070-1076"];
m6_558 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="1078-1078"];
m6_559 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}'', json)", span="1080-1085"];
m6_560 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="1087-1087"];
m6_561 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Bob'', c2.FirstName)", span="1089-1089"];
m6_562 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="1090-1090"];
m6_563 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.RequiredMembersClass()", span="1068-1068"];
m6_109 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", span="313-313"];
m6_110 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="315-324"];
m6_111 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="326-326"];
m6_112 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, o.Children().Count())", span="327-327"];
m6_113 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken torrentsArray = (JToken)o[''torrents'']", span="329-329"];
m6_114 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="330-330"];
m6_115 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="331-331"];
m6_116 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TorrentDeserializeTest()", span="313-313"];
m6_165 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="84-84"];
m6_1019 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", span="2516-2516"];
m6_1020 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs", label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2518-2518"];
m6_1021 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="2520-2525"];
m6_1022 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs", label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="2527-2527"];
m6_1023 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}'', o.ToString())", span="2529-2532"];
m6_1024 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameWithNoTypeNameHandling()", span="2516-2516"];
m6_952 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="768-768"];
m6_924 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2244-2244"];
m6_925 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="CircularReferenceClass circularReferenceClass = (CircularReferenceClass) value", span="2246-2246"];
m6_926 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string reference = serializer.ReferenceResolver.GetReference(circularReferenceClass)", span="2248-2248"];
m6_929 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="me[''$type''] = new JValue(value.GetType().Name)", span="2252-2252"];
m6_931 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="JObject o = JObject.FromObject(circularReferenceClass.Child, serializer)", span="2255-2255"];
m6_933 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="me.WriteTo(writer)", span="2258-2258"];
m6_930 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="me[''Name''] = new JValue(circularReferenceClass.Name)", span="2253-2253"];
m6_927 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="JObject me = new JObject()", span="2250-2250"];
m6_928 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="me[''$id''] = new JValue(reference)", span="2251-2251"];
m6_932 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="me[''Child''] = o", span="2256-2256"];
m6_934 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="2244-2244"];
m6_936 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="43-43"];
m6_969 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", span="2322-2322"];
m6_970 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''$type'''': ''''CircularReferenceClass'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''CircularReferenceClass'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}''", span="2324-2341"];
m6_971 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="CircularReferenceClass c1 = JsonConvert.DeserializeObject<CircularReferenceClass>(json, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n        Converters = new List<JsonConverter> { new CircularReferenceClassConverter() }\r\n      })", span="2343-2347"];
m6_972 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''c1'', c1.Name)", span="2349-2349"];
m6_973 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''c2'', c1.Child.Name)", span="2350-2350"];
m6_974 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''c3'', c1.Child.Child.Name)", span="2351-2351"];
m6_975 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''c1'', c1.Child.Child.Child.Name)", span="2352-2352"];
m6_976 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeCircularReferencesWithConverter()", span="2322-2322"];
m6_977 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", span="2356-2356"];
m6_978 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs", label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2358-2358"];
m6_979 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs", label="Employee employee = new Employee()", span="2360-2360"];
m6_981 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': null,\r\n  ''''Manager'''': null\r\n}'', json)", span="2367-2372"];
m6_980 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects\r\n        })", span="2362-2365"];
m6_982 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.WriteTypeNameForObjects()", span="2356-2356"];
m6_543 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", span="1048-1048"];
m6_544 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs", label="string json = @''{''''Missing'''':1}''", span="1050-1050"];
m6_545 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<DoubleClass>(json, new JsonSerializerSettings { MissingMemberHandling = MissingMemberHandling.Error })", span="1052-1052"];
m6_546 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemeber()", span="1048-1048"];
m6_467 [cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30"];
m6_442 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="865-865"];
m6_443 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="867-867"];
m6_444 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="868-868"];
m6_448 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="875-875"];
m6_449 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="876-876"];
m6_445 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="870-870"];
m6_446 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="871-871"];
m6_447 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="873-873"];
m6_450 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="865-865"];
m6_646 [cluster="Unk.IsNotNull", file="JsonSerializerTest.cs", label="Entry Unk.IsNotNull", span=""];
m6_958 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", span="2285-2285"];
m6_959 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="CircularReferenceClass c1 = new CircularReferenceClass { Name = ''c1'' }", span="2287-2287"];
m6_960 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="CircularReferenceClass c2 = new CircularReferenceClass { Name = ''c2'' }", span="2288-2288"];
m6_962 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="c1.Child = c2", span="2291-2291"];
m6_964 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="c3.Child = c1", span="2293-2293"];
m6_965 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n      {\r\n        PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n        Converters = new List<JsonConverter> { new CircularReferenceClassConverter() }\r\n      })", span="2295-2299"];
m6_961 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="CircularReferenceClass c3 = new CircularReferenceClass { Name = ''c3'' }", span="2289-2289"];
m6_963 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="c2.Child = c3", span="2292-2292"];
m6_966 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''CircularReferenceClass'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''$type'''': ''''CircularReferenceClass'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$type'''': ''''CircularReferenceClass'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="2301-2318"];
m6_967 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReferencesWithConverter()", span="2285-2285"];
m6_228 [cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_528 [cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29"];
m6_768 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", span="1721-1721"];
m6_769 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="CircularReferenceClass c1 = new CircularReferenceClass {Name = ''c1''}", span="1723-1723"];
m6_770 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="CircularReferenceClass c2 = new CircularReferenceClass {Name = ''c2''}", span="1724-1724"];
m6_772 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="c1.Child = c2", span="1727-1727"];
m6_774 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="c3.Child = c1", span="1729-1729"];
m6_775 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n        })", span="1731-1734"];
m6_771 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="CircularReferenceClass c3 = new CircularReferenceClass {Name = ''c3''}", span="1725-1725"];
m6_773 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="c2.Child = c3", span="1728-1728"];
m6_776 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''c1'''',\r\n  ''''Child'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''c2'''',\r\n    ''''Child'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''c3'''',\r\n      ''''Child'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1736-1750"];
m6_777 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularReference()", span="1721-1721"];
m6_682 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1472-1472"];
m6_683 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1474-1474"];
m6_684 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="o.ReferenceLoopHandlingErrorProperty = o", span="1475-1475"];
m6_685 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1477-1477"];
m6_686 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="1472-1472"];
m6_131 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="373-373"];
m6_132 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="375-375"];
m6_133 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="373-373"];
m6_51 [cluster="System.Console.WriteLine()", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m6_67 [cluster="Unk.Contains", file="JsonSerializerTest.cs", label="Entry Unk.Contains", span=""];
m6_607 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34"];
m6_991 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", span="2397-2397"];
m6_992 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2399-2399"];
m6_993 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="string personRef = typeof(Person).AssemblyQualifiedName", span="2400-2400"];
m6_996 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]'', json)", span="2424-2444"];
m6_994 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="List<object> values = new List<object>\r\n        {\r\n          new Employee\r\n            {\r\n              Name = ''Bob'',\r\n              Manager = new Employee {Name = ''Frank''}\r\n            },\r\n          new Person\r\n            {\r\n              Department = ''Department'',\r\n              BirthDate = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc),\r\n              LastModified = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc)\r\n            },\r\n          ''String!'',\r\n          int.MinValue\r\n        }", span="2402-2417"];
m6_995 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects\r\n        })", span="2419-2422"];
m6_997 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeGenericObjectListWithTypeName()", span="2397-2397"];
m6_812 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", span="1885-1885"];
m6_813 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''One'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Two'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  ''''Three'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''Four'''': {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n}''", span="1887-1904"];
m6_814 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Dictionary<string, Employee> employees = JsonConvert.DeserializeObject<Dictionary<string, Employee>>(json)", span="1906-1906"];
m6_815 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, employees.Count)", span="1907-1907"];
m6_816 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Employee e1 = employees[''One'']", span="1909-1909"];
m6_817 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Employee e2 = employees[''Two'']", span="1910-1910"];
m6_820 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(e1, employees[''Three''])", span="1915-1915"];
m6_821 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(e2, employees[''Four''])", span="1916-1916"];
m6_818 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''e1'', e1.Name)", span="1912-1912"];
m6_819 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''e2'', e2.Name)", span="1913-1913"];
m6_822 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeReferenceInDictionary()", span="1885-1885"];
m6_226 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m6_263 [cluster="Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ProductCollection.ProductCollection()", span="29-29"];
m6_909 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2206-2206"];
m6_910 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="2208-2225"];
m6_911 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="2227-2228"];
m6_912 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="2230-2230"];
m6_913 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, c.Dictionary.Count)", span="2231-2231"];
m6_914 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2232-2232"];
m6_915 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="2233-2233"];
m6_916 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, c.Collection.Count)", span="2234-2234"];
m6_917 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="2235-2235"];
m6_918 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="2236-2236"];
m6_919 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="2237-2237"];
m6_920 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="2238-2238"];
m6_921 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(c.Random)", span="2239-2239"];
m6_922 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="2206-2206"];
m6_66 [cluster="Unk.AreNotSame", file="JsonSerializerTest.cs", label="Entry Unk.AreNotSame", span=""];
m6_681 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29"];
m6_214 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_86 [cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27"];
m6_672 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1446-1446"];
m6_673 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="1448-1448"];
m6_674 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="1449-1449"];
m6_675 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="1450-1450"];
m6_676 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="1452-1452"];
m6_678 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings {NullValueHandling = NullValueHandling.Ignore})", span="1462-1462"];
m6_677 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="1454-1460"];
m6_679 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="1464-1467"];
m6_680 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyWithHandlingValues()", span="1446-1446"];
m6_218 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m6_50 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_888 [cluster="Unk.IsTrue", file="JsonSerializerTest.cs", label="Entry Unk.IsTrue", span=""];
m6_28 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m6_134 [cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27"];
m6_229 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", span="532-532"];
m6_230 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> values = new Dictionary<int, int>()", span="534-534"];
m6_231 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(-5, 6)", span="535-535"];
m6_232 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="values.Add(int.MinValue, int.MaxValue)", span="536-536"];
m6_233 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(values)", span="538-538"];
m6_236 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(values, newValues)", span="544-544"];
m6_234 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="540-540"];
m6_235 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="542-542"];
m6_237 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.NonStringKeyDictionary()", span="532-532"];
m6_564 [cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="32-32"];
m6_622 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="LogEntry entry = new LogEntry\r\n                         {\r\n                           LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                           Details = ''Application started.''\r\n                         }", span="1325-1329"];
m6_621 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", span="1323-1323"];
m6_623 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string defaultJson = JsonConvert.SerializeObject(entry)", span="1331-1331"];
m6_624 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="1334-1334"];
m6_625 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="1337-1337"];
m6_626 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(defaultJson)", span="1340-1340"];
m6_627 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(isoJson)", span="1341-1341"];
m6_628 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Console.WriteLine(javascriptJson)", span="1342-1342"];
m6_629 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.WriteJsonDates()", span="1323-1323"];
m6_239 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", span="548-548"];
m6_240 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="var anonymous =\r\n        new\r\n        {\r\n          StringValue = ''I am a string'',\r\n          IntValue = int.MaxValue,\r\n          NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n          NestedArray = new[] { 1, 2 },\r\n          Product = new Product() { Name = ''TestProduct'' }\r\n        }", span="550-558"];
m6_241 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(anonymous)", span="560-560"];
m6_243 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="563-563"];
m6_242 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0,''''Sizes'''':null}}'', json)", span="561-561"];
m6_244 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="564-564"];
m6_245 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="565-565"];
m6_246 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="566-566"];
m6_247 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="567-567"];
m6_248 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="568-568"];
m6_249 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="569-569"];
m6_250 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="570-570"];
m6_251 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.AnonymousObjectSerialization()", span="548-548"];
m6_387 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", span="775-775"];
m6_388 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Name name = new Name(''The Idiot in Next To Me'')", span="777-777"];
m6_389 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="PhoneNumber p1 = new PhoneNumber(''555-1212'')", span="779-779"];
m6_391 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="name.pNumbers.Add(p1)", span="782-782"];
m6_392 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="name.pNumbers.Add(p2)", span="783-783"];
m6_393 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(name, Formatting.Indented)", span="785-785"];
m6_390 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="PhoneNumber p2 = new PhoneNumber(''444-1212'')", span="780-780"];
m6_394 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''personsName'''': ''''The Idiot in Next To Me'''',\r\n  ''''pNumbers'''': [\r\n    {\r\n      ''''phoneNumber'''': ''''555-1212''''\r\n    },\r\n    {\r\n      ''''phoneNumber'''': ''''444-1212''''\r\n    }\r\n  ]\r\n}'', json)", span="787-797"];
m6_395 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Name newName = JsonConvert.DeserializeObject<Name>(json)", span="799-799"];
m6_396 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''The Idiot in Next To Me'', newName.personsName)", span="801-801"];
m6_397 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, newName.pNumbers.Count)", span="804-804"];
m6_398 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''555-1212'', newName.pNumbers[0].phoneNumber)", span="805-805"];
m6_399 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''444-1212'', newName.pNumbers[1].phoneNumber)", span="806-806"];
m6_400 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeMemberGenericList()", span="775-775"];
m6_955 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", span="2278-2278"];
m6_956 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="return (objectType == typeof(CircularReferenceClass));", span="2280-2280"];
m6_957 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CanConvert(System.Type)", span="2278-2278"];
m6_630 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.LogEntry.LogEntry()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.LogEntry.LogEntry()", span="1316-1316"];
m6_876 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.WriteEscapedJson(string)", span="43-43"];
m6_190 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", span="477-477"];
m6_191 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="string json = @''[''''PRE\u003cPOST'''']''", span="479-479"];
m6_192 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="481-481"];
m6_193 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="482-482"];
m6_194 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="484-484"];
m6_196 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="487-487"];
m6_195 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, jsonNetResult.Count)", span="486-486"];
m6_197 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.Unicode()", span="477-477"];
m6_198 [cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m6_493 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", span="954-954"];
m6_494 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="string json", span="956-956"];
m6_495 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)null)", span="958-958"];
m6_496 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="959-959"];
m6_497 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="json = JsonConvert.SerializeObject((int?)1)", span="961-961"];
m6_498 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''1'', json)", span="962-962"];
m6_499 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullable()", span="954-954"];
m6_968 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CircularReferenceClassConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.CircularReferenceClassConverter()", span="2242-2242"];
m6_941 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="2261-2261"];
m6_942 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="JObject o = JObject.Load(reader)", span="2263-2263"];
m6_946 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="serializer.Populate(o.CreateReader(), circularReferenceClass)", span="2268-2268"];
m6_949 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return serializer.ReferenceResolver.ResolveReference(reference);", span="2274-2274"];
m6_943 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string id = (string)o[''$id'']", span="2264-2264"];
m6_948 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="string reference = (string)o[''$ref'']", span="2273-2273"];
m6_944 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="id != null", span="2265-2265"];
m6_945 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="CircularReferenceClass circularReferenceClass = new CircularReferenceClass()", span="2267-2267"];
m6_947 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="return circularReferenceClass;", span="2269-2269"];
m6_950 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CircularReferenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonSerializer)", span="2261-2261"];
m6_483 [cluster="Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", span="32-32"];
m6_954 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(string)", span="37-37"];
m6_713 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1577-1577"];
m6_714 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="_name = name", span="1579-1579"];
m6_715 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Age = age", span="1580-1580"];
m6_716 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Rank = rank", span="1581-1581"];
m6_717 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Title = title", span="1582-1582"];
m6_718 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="1577-1577"];
m6_364 [cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m6_736 [cluster="Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(System.IO.TextReader, object)", span="277-277"];
m6_631 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="12-12"];
m6_365 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29"];
m6_596 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", span="1274-1274"];
m6_597 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Test testClass = new Test()", span="1276-1276"];
m6_598 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="testClass.co = new Co()", span="1277-1277"];
m6_599 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="1278-1278"];
m6_600 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Test testFromDe = (Test)JsonConvert.DeserializeObject(strFromTest, typeof(Test))", span="1279-1279"];
m6_601 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInterfaceProperty()", span="1274-1274"];
m6_687 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", span="1493-1493"];
m6_688 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="1495-1511"];
m6_689 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="1513-1513"];
m6_691 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="1516-1516"];
m6_690 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="1514-1514"];
m6_692 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="1517-1517"];
m6_693 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="1518-1518"];
m6_694 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(8, n.FidOrder.Count)", span="1519-1519"];
m6_695 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''id'', n.FidOrder[0])", span="1520-1520"];
m6_696 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="1521-1521"];
m6_697 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PartialClassDeserialize()", span="1493-1493"];
m6_508 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", span="982-982"];
m6_509 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="984-984"];
m6_510 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="986-986"];
m6_511 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="988-988"];
m6_512 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.Content)", span="989-989"];
m6_513 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="990-990"];
m6_514 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJsonRaw()", span="982-982"];
m6_201 [cluster="Unk.ReadObject", file="JsonSerializerTest.cs", label="Entry Unk.ReadObject", span=""];
m6_187 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="51-51"];
m6_648 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1400-1400"];
m6_649 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="1402-1407"];
m6_650 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="1409-1409"];
m6_651 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.IsNotNull(o)", span="1410-1410"];
m6_652 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''firstName'', o.firstName)", span="1412-1412"];
m6_653 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstName'', o.FirstName)", span="1413-1413"];
m6_654 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastName'', o.LastName)", span="1414-1414"];
m6_655 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''lastName'', o.lastName)", span="1415-1415"];
m6_656 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="1400-1400"];
m6_74 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", span="179-179"];
m6_75 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="181-181"];
m6_76 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="183-183"];
m6_77 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="185-185"];
m6_78 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="186-188"];
m6_79 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedHashtableDeserialization()", span="179-179"];
m6_537 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m6_619 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="97-97"];
m6_529 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", span="1024-1024"];
m6_530 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer { MissingMemberHandling = MissingMemberHandling.Ignore }", span="1026-1026"];
m6_531 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="1027-1027"];
m6_533 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="MyClass myClass = (MyClass)serializer.Deserialize(new StringReader(response), typeof(MyClass))", span="1031-1031"];
m6_532 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="string response = @''{''''PreProperty'''':1,''''DateProperty'''':new Date(1225962698973),''''PostProperty'''':2}''", span="1029-1029"];
m6_534 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, myClass.PreProperty)", span="1033-1033"];
m6_535 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, myClass.PostProperty)", span="1034-1034"];
m6_536 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberIgnoreComplexValue()", span="1024-1024"];
m6_1025 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="346-346"];
m6_372 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="749-749"];
m6_373 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="751-751"];
m6_374 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="753-753"];
m6_375 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="755-755"];
m6_376 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="757-757"];
m6_377 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="758-758"];
m6_378 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="749-749"];
m6_851 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", span="2004-2004"];
m6_852 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs", label="CircularList circularList = new CircularList()", span="2006-2006"];
m6_853 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs", label="circularList.Add(null)", span="2007-2007"];
m6_854 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs", label="circularList.Add(new CircularList { null })", span="2008-2008"];
m6_855 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs", label="circularList.Add(new CircularList { new CircularList { circularList } })", span="2009-2009"];
m6_856 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(circularList, Formatting.Indented)", span="2011-2011"];
m6_857 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsError()", span="2004-2004"];
m6_199 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m6_156 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", span="410-410"];
m6_157 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="412-412"];
m6_158 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="414-414"];
m6_159 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="415-415"];
m6_160 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="416-416"];
m6_161 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="417-417"];
m6_162 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="419-419"];
m6_163 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="ProductShort deserializedProductShort = (ProductShort)JsonConvert.DeserializeObject(output, typeof(ProductShort), new JsonSerializerSettings { MissingMemberHandling = MissingMemberHandling.Error })", span="431-431"];
m6_164 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserialize()", span="410-410"];
m6_200 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m6_759 [cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="33-33"];
m6_468 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", span="904-904"];
m6_469 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="906-906"];
m6_470 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="907-907"];
m6_471 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GenericAbstractProperty()", span="904-904"];
m6_603 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", span="1282-1282"];
m6_604 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Person person = new Person\r\n                        {\r\n                          Name = ''Mike Manager'',\r\n                          BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                          Department = ''IT'',\r\n                          LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n                        }", span="1284-1290"];
m6_605 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="return person;", span="1291-1291"];
m6_606 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GetPerson()", span="1282-1282"];
m6_36 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m6_355 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m6_52 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", span="149-149"];
m6_53 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="151-151"];
m6_54 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverClassName = ''BanSubs''", span="152-152"];
m6_55 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="153-153"];
m6_56 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="154-154"];
m6_57 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(executorObject)", span="156-156"];
m6_59 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreNotSame(executorObject, executorObject2)", span="160-160"];
m6_58 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="158-158"];
m6_60 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="161-161"];
m6_61 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="162-162"];
m6_62 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.Contains(''101'', executorObject2.serverMethodParams)", span="163-163"];
m6_63 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="164-164"];
m6_64 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TestMethodExecutorObject()", span="149-149"];
m6_12 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", span="67-67"];
m6_13 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="69-69"];
m6_14 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="71-71"];
m6_15 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="72-72"];
m6_16 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="73-73"];
m6_17 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="74-74"];
m6_18 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="76-76"];
m6_19 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="88-88"];
m6_20 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="90-90"];
m6_21 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="91-91"];
m6_22 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="92-92"];
m6_23 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="93-93"];
m6_24 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="94-94"];
m6_25 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="95-95"];
m6_26 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserialization()", span="67-67"];
m6_830 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", span="1935-1935"];
m6_831 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs", label="CircularDictionary circularDictionary = new CircularDictionary()", span="1937-1937"];
m6_832 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs", label="circularDictionary.Add(''other'', new CircularDictionary { { ''blah'', null } })", span="1938-1938"];
m6_833 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="1939-1939"];
m6_834 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n        new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="1941-1942"];
m6_835 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''other'''': {\r\n    ''''blah'''': null\r\n  }\r\n}'', json)", span="1944-1948"];
m6_836 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysIgnore()", span="1935-1935"];
m6_404 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", span="810-810"];
m6_405 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="812-812"];
m6_406 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(c)", span="814-814"];
m6_407 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="816-816"];
m6_408 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''param1'', deserialized.param1)", span="818-818"];
m6_409 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="819-819"];
m6_410 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="820-820"];
m6_411 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.ConstructorCaseSensitivity()", span="810-810"];
m6_147 [cluster="Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ArticleCollection.ArticleCollection()", span="29-29"];
m6_227 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m6_189 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="330-330"];
m6_268 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", span="599-599"];
m6_269 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Store s1 = new Store()", span="601-601"];
m6_270 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="603-603"];
m6_273 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(sw, s1)", span="607-607"];
m6_280 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(s1.Establised, s3.Establised)", span="620-620"];
m6_271 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.NullValueHandling = NullValueHandling.Ignore", span="604-604"];
m6_275 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Store s2 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(''{}'')), typeof(Store))", span="613-613"];
m6_277 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Store s3 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(@''{''''Escape'''':null}'')), typeof(Store))", span="616-616"];
m6_279 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Store s4 = (Store)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(@''{''''Color'''':2,''''Establised'''':''''\/Date(1264071600000+1300)\/'''',''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''������\\'{new Date(12345);}[222]_�@��~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':''''\/Date(949485690000+1300)\/'''',''''Price'''':0},{''''Name'''':''''Alien'''',''''ExpiryDate'''':''''\/Date(946638000000)\/'''',''''Price'''':0}]}'')), typeof(Store))", span="619-619"];
m6_272 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="606-606"];
m6_274 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Color'''':4,''''Establised'''':''''\/Date(1264122061000+0000)\/'''',''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''������\\'{new Date(12345);}[222]_�@��~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':''''\/Date(949532490000)\/'''',''''Price'''':0},{''''Name'''':''''Alien'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0}]}'', sw.GetStringBuilder().ToString())", span="611-611"];
m6_276 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', s2.Escape)", span="614-614"];
m6_278 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''\r\n\t\f\b?{\\r\\n\''\''', s3.Escape)", span="617-617"];
m6_281 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.NullValueHandlingSerialization()", span="599-599"];
m6_837 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", span="1952-1952"];
m6_838 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="CircularDictionary circularDictionary = new CircularDictionary()", span="1954-1954"];
m6_839 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="circularDictionary.Add(''other'', new CircularDictionary { {''blah'', null }})", span="1955-1955"];
m6_840 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="1956-1956"];
m6_841 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1958-1959"];
m6_842 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1961-1970"];
m6_843 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDictionarysWithPreserveObjectReferences()", span="1952-1952"];
m6_887 [cluster="object.ReferenceEquals(object, object)", file="JsonSerializerTest.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m6_1014 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", span="2498-2498"];
m6_1015 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs", label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2500-2500"];
m6_1016 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="2502-2507"];
m6_1017 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(json, typeof(Person), new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Objects\r\n      })", span="2509-2512"];
m6_1018 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeWithBadTypeName()", span="2498-2498"];
m6_68 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", span="169-169"];
m6_69 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="171-171"];
m6_70 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="173-173"];
m6_71 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="175-175"];
m6_72 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.HashtableDeserialization()", span="169-169"];
m6_859 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", span="2015-2015"];
m6_860 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs", label="CircularList circularList = new CircularList()", span="2017-2017"];
m6_861 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs", label="circularList.Add(null)", span="2018-2018"];
m6_862 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs", label="circularList.Add(new CircularList { null })", span="2019-2019"];
m6_863 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs", label="circularList.Add(new CircularList { new CircularList { circularList } })", span="2020-2020"];
m6_864 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(circularList,\r\n                                                Formatting.Indented,\r\n                                                new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="2022-2024"];
m6_865 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  null,\r\n  [\r\n    null\r\n  ],\r\n  [\r\n    []\r\n  ]\r\n]'', json)", span="2026-2034"];
m6_866 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularListsIgnore()", span="2015-2015"];
m6_547 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="584-584"];
m6_215 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_431 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="850-850"];
m6_432 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="DateTime testDate = new DateTime(JsonConvert.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="852-852"];
m6_433 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="853-853"];
m6_437 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="860-860"];
m6_438 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(testDate, m2.MemberConverter)", span="861-861"];
m6_434 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(m1)", span="855-855"];
m6_435 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="856-856"];
m6_436 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="858-858"];
m6_439 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializerShouldUseMemberConverter()", span="850-850"];
m6_167 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", span="435-435"];
m6_168 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Product product = new Product()", span="437-437"];
m6_169 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="product.Name = ''Apple''", span="439-439"];
m6_170 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="440-440"];
m6_171 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="product.Price = 3.99M", span="441-441"];
m6_172 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="442-442"];
m6_173 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="string output = JsonConvert.SerializeObject(product)", span="444-444"];
m6_174 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="456-456"];
m6_177 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(output))", span="461-461"];
m6_175 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="jsonSerializer.MissingMemberHandling = MissingMemberHandling.Ignore", span="457-457"];
m6_178 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="deserializedValue = jsonSerializer.Deserialize(jsonReader, typeof(ProductShort))", span="463-463"];
m6_176 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="object deserializedValue", span="459-459"];
m6_179 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="ProductShort deserializedProductShort = (ProductShort)deserializedValue", span="466-466"];
m6_180 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProductShort.Name)", span="468-468"];
m6_181 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProductShort.ExpiryDate)", span="469-469"];
m6_182 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProductShort.Sizes[0])", span="470-470"];
m6_183 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProductShort.Sizes[1])", span="471-471"];
m6_184 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProductShort.Sizes[2])", span="472-472"];
m6_185 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.MissingMemberDeserializeOkay()", span="435-435"];
m6_953 [cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="287-287"];
m6_356 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m6_823 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", span="1925-1925"];
m6_824 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs", label="CircularDictionary circularDictionary = new CircularDictionary()", span="1927-1927"];
m6_825 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs", label="circularDictionary.Add(''other'', new CircularDictionary { { ''blah'', null } })", span="1928-1928"];
m6_826 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="1929-1929"];
m6_827 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(circularDictionary, Formatting.Indented)", span="1931-1931"];
m6_828 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeCircularDictionarysError()", span="1925-1925"];
m6_217 [cluster="Unk.WriteObject", file="JsonSerializerTest.cs", label="Entry Unk.WriteObject", span=""];
m6_538 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1038-1038"];
m6_539 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="string json = @''{''''Height'''':1}''", span="1040-1040"];
m6_540 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="1042-1042"];
m6_541 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Height)", span="1043-1043"];
m6_542 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="1038-1038"];
m6_923 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m6_287 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", span="631-631"];
m6_288 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(null)", span="633-633"];
m6_289 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''null'', json)", span="634-634"];
m6_290 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeNull()", span="631-631"];
m6_430 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="569-569"];
m6_346 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30"];
m6_1026 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", span="2537-2537"];
m6_1027 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="2539-2544"];
m6_1028 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Objects\r\n      })", span="2546-2549"];
m6_1029 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeNameOnly()", span="2537-2537"];
m6_130 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClass.JsonPropertyClass()", span="334-334"];
m6_202 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", span="491-491"];
m6_203 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="List<DateTime> testDates = new List<DateTime> {\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n        new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n      }", span="493-500"];
m6_204 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string result", span="501-501"];
m6_207 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="s.WriteObject(ms, testDates)", span="506-506"];
m6_211 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="result = JsonConvert.SerializeObject(testDates)", span="512-512"];
m6_205 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="MemoryStream ms = new MemoryStream()", span="504-504"];
m6_206 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="505-505"];
m6_208 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="507-507"];
m6_209 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="StreamReader sr = new StreamReader(ms)", span="508-508"];
m6_210 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="string expected = sr.ReadToEnd()", span="510-510"];
m6_212 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(expected, result)", span="513-513"];
m6_213 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeTest()", span="491-491"];
m6_463 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="897-897"];
m6_464 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="899-899"];
m6_465 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="JsonConvert.SerializeObject(c)", span="900-900"];
m6_466 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="897-897"];
m6_29 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", span="117-117"];
m6_30 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="119-119"];
m6_31 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="121-121"];
m6_32 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Orange'', p.Name)", span="123-123"];
m6_33 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="124-124"];
m6_34 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99, p.Price)", span="125-125"];
m6_35 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonConvertSerializer()", span="117-117"];
m6_146 [cluster="Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Article.Article(string)", span="35-35"];
m6_102 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", span="227-227"];
m6_103 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="229-306"];
m6_104 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="object o = JsonConvert.DeserializeObject(json)", span="307-307"];
m6_105 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="string s = string.Empty", span="308-308"];
m6_106 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="s += s", span="309-309"];
m6_107 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GoogleSearchAPI()", span="227-227"];
m6_602 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Co.Co()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Co.Co()", span="1248-1248"];
m6_983 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", span="2376-2376"];
m6_984 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs", label="string employeeRef = typeof(Employee).AssemblyQualifiedName", span="2378-2378"];
m6_985 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="2380-2385"];
m6_986 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs", label="object employee = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects\r\n        })", span="2387-2390"];
m6_987 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs", label="Assert.IsInstanceOfType(typeof(Employee), employee)", span="2392-2392"];
m6_988 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', ((Employee)employee).Name)", span="2393-2393"];
m6_989 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeTypeName()", span="2376-2376"];
m6_336 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35"];
m6_594 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", span="1267-1267"];
m6_595 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.Test.Test()", span="1267-1267"];
m6_462 [cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27"];
m6_778 [cluster="Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.CircularReferenceClass.CircularReferenceClass()", span="32-32"];
m6_286 [cluster="object.Object()", file="JsonSerializerTest.cs", label="Entry object.Object()", span="0-0"];
m6_252 [cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="557-557"];
m6_617 [cluster="System.IO.File.Open(string, System.IO.FileMode)", file="JsonSerializerTest.cs", label="Entry System.IO.File.Open(string, System.IO.FileMode)", span="0-0"];
m6_998 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", span="2448-2448"];
m6_999 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="string employeeRef = typeof (Employee).AssemblyQualifiedName", span="2450-2450"];
m6_1000 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="string personRef = typeof (Person).AssemblyQualifiedName", span="2451-2451"];
m6_1001 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", span="2453-2473"];
m6_1002 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="List<object> values = (List<object>)JsonConvert.DeserializeObject(json, typeof(List<object>), new JsonSerializerSettings\r\n      {\r\n        TypeNameHandling = TypeNameHandling.Objects\r\n      })", span="2475-2478"];
m6_1003 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, values.Count)", span="2480-2480"];
m6_1004 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Employee e = (Employee) values[0]", span="2482-2482"];
m6_1005 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Person p = (Person) values[1]", span="2483-2483"];
m6_1011 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''String!'', values[2])", span="2492-2492"];
m6_1012 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MinValue, values[3])", span="2493-2493"];
m6_1006 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Bob'', e.Name)", span="2485-2485"];
m6_1007 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="2486-2486"];
m6_1008 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, p.Name)", span="2488-2488"];
m6_1009 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="2489-2489"];
m6_1010 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="2490-2490"];
m6_1013 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGenericObjectListWithTypeName()", span="2448-2448"];
m6_578 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", span="1118-1118"];
m6_579 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="1120-1120"];
m6_580 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="1122-1122"];
m6_588 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(json, after)", span="1133-1133"];
m6_581 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Before!'', aa.Before)", span="1124-1124"];
m6_582 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''After!'', aa.After)", span="1125-1125"];
m6_583 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, aa.Coordinates.Length)", span="1126-1126"];
m6_584 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="1127-1127"];
m6_585 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="1128-1128"];
m6_586 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="1129-1129"];
m6_587 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="string after = JsonConvert.SerializeObject(aa)", span="1131-1131"];
m6_589 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJaggedArray()", span="1118-1118"];
m6_990 [cluster="Unk.IsInstanceOfType", file="JsonSerializerTest.cs", label="Entry Unk.IsInstanceOfType", span=""];
m6_484 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="499-499"];
m6_935 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object)", span="43-43"];
m6_1030 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2553-2553"];
m6_1031 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230375600000+1300)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2555-2564"];
m6_1032 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="2566-2566"];
m6_1033 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2568-2568"];
m6_1034 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="2569-2569"];
m6_1035 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3.99, deserializedProduct.Price)", span="2570-2570"];
m6_1036 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2571-2571"];
m6_1037 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2572-2572"];
m6_1038 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2573-2573"];
m6_1039 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="2553-2553"];
m6_752 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", span="1659-1659"];
m6_753 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs", label="Employee mikeManager = new Employee\r\n        {\r\n          Name = ''Mike Manager''\r\n        }", span="1661-1664"];
m6_754 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs", label="Employee joeUser = new Employee\r\n        {\r\n          Name = ''Joe User'',\r\n          Manager = mikeManager\r\n        }", span="1665-1669"];
m6_755 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs", label="List<Employee> employees = new List<Employee>\r\n        {\r\n          mikeManager,\r\n          joeUser\r\n        }", span="1671-1675"];
m6_756 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(employees, Formatting.Indented)", span="1677-1677"];
m6_757 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]'', json)", span="1678-1691"];
m6_758 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeEmployeeReference()", span="1659-1659"];
m6_867 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", span="2038-2038"];
m6_868 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="CircularList circularList = new CircularList()", span="2040-2040"];
m6_869 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="circularList.Add(null)", span="2041-2041"];
m6_870 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="circularList.Add(new CircularList { null })", span="2042-2042"];
m6_871 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="circularList.Add(new CircularList { new CircularList { circularList }})", span="2043-2043"];
m6_872 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(circularList, Formatting.Indented,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="2045-2046"];
m6_873 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="WriteEscapedJson(json)", span="2048-2048"];
m6_874 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="2049-2073"];
m6_875 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeListsWithPreserveObjectReferences()", span="2038-2038"];
m6_120 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", span="355-355"];
m6_121 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test = new JsonPropertyClass()", span="357-357"];
m6_122 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.Pie = ''Delicious''", span="358-358"];
m6_123 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="test.SweetCakesCount = int.MaxValue", span="359-359"];
m6_124 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(test)", span="361-361"];
m6_127 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.Pie, test2.Pie)", span="367-367"];
m6_128 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="368-368"];
m6_125 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="363-363"];
m6_126 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="365-365"];
m6_129 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonPropertyClassSerialize()", span="355-355"];
m6_515 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", span="995-995"];
m6_516 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablle = new UserNullable\r\n                                    {\r\n                                      Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                                      FName = ''FirstValue'',\r\n                                      LName = ''LastValue'',\r\n                                      RoleId = 5,\r\n                                      NullableRoleId = 6,\r\n                                      NullRoleId = null,\r\n                                      Active = true\r\n                                    }", span="997-1006"];
m6_517 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(userNullablle)", span="1008-1008"];
m6_518 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="1010-1010"];
m6_519 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="1012-1012"];
m6_520 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="1014-1014"];
m6_521 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="1015-1015"];
m6_522 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="1016-1016"];
m6_523 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="1017-1017"];
m6_524 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="1018-1018"];
m6_525 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="1019-1019"];
m6_526 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="1020-1020"];
m6_527 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeNullableMember()", span="995-995"];
m6_221 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", span="518-518"];
m6_222 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="520-525"];
m6_223 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="string result = JsonConvert.SerializeObject(testDates)", span="527-527"];
m6_224 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="528-528"];
m6_225 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DateTimeOffset()", span="518-518"];
m6_403 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="457-457"];
m6_730 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", span="1623-1623"];
m6_731 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs", label="Person p = new Person()", span="1625-1625"];
m6_732 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1627-1627"];
m6_733 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs", label="serializer.Populate(new StringReader(@''{''''Name'''':''''James''''}''), p)", span="1628-1628"];
m6_734 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James'', p.Name)", span="1630-1630"];
m6_735 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PopulatePerson()", span="1623-1623"];
m6_897 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", span="2169-2169"];
m6_898 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Dictionary = new Dictionary<string, int>\r\n          {\r\n            { ''existing'', 1 }\r\n          }", span="2171-2174"];
m6_899 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Collection = new List<int>\r\n          {\r\n            1,\r\n            2,\r\n            3\r\n          }", span="2175-2180"];
m6_900 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Employee = new Employee\r\n          {\r\n            Name = ''EmployeeName!''\r\n          }", span="2181-2184"];
m6_901 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass.DictionaryInterfaceClass()", span="2169-2169"];
m6_440 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m6_569 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", span="1105-1105"];
m6_570 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="JaggedArray aa = new JaggedArray()", span="1107-1107"];
m6_571 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Before = ''Before!''", span="1108-1108"];
m6_572 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.After = ''After!''", span="1109-1109"];
m6_573 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="1110-1110"];
m6_574 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(aa)", span="1112-1112"];
m6_575 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="1114-1114"];
m6_576 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeJaggedArray()", span="1105-1105"];
m6_401 [cluster="Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Name.Name(string)", span="35-35"];
m6_301 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="652-652"];
m6_302 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="654-654"];
m6_303 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="655-655"];
m6_304 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''hello'', wibble.Foo)", span="656-656"];
m6_305 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(4, wibble.Bar.Count)", span="658-658"];
m6_306 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="659-659"];
m6_307 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, wibble.Bar[1])", span="660-660"];
m6_308 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, wibble.Bar[2])", span="661-661"];
m6_309 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Assert.AreEqual(3, wibble.Bar[3])", span="662-662"];
m6_310 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="652-652"];
m6_451 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="9-9"];
m6_507 [cluster="Newtonsoft.Json.JsonRaw.JsonRaw(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonRaw.JsonRaw(string)", span="58-58"];
m6_166 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="615-615"];
m6_889 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", span="2118-2118"];
m6_890 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    null,\r\n    {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$values'''': [\r\n        null\r\n      ]\r\n    },\r\n    {\r\n      ''''$id'''': ''''3'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$id'''': ''''4'''',\r\n          ''''$values'''': [\r\n            {\r\n              ''''$ref'''': ''''1''''\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="2120-2144"];
m6_891 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<string[][]>(json,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="2146-2147"];
m6_892 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeArraysWithPreserveObjectReferences()", span="2118-2118"];
m6_902 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", span="2189-2189"];
m6_903 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="2191-2196"];
m6_904 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n        new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="2198-2199"];
m6_905 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Name!'', c.Name)", span="2200-2200"];
m6_906 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(1, c.Dictionary.Count)", span="2201-2201"];
m6_907 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="2202-2202"];
m6_908 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeDictionaryInterface()", span="2189-2189"];
m6_893 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", span="2152-2152"];
m6_894 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''$id'''':''", span="2154-2155"];
m6_895 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", file="JsonSerializerTest.cs", label="JsonConvert.DeserializeObject<string[][]>(json,\r\n        new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="2157-2158"];
m6_896 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.UnexpectedEnd()", span="2152-2152"];
m6_357 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", span="727-727"];
m6_358 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="729-729"];
m6_359 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="731-731"];
m6_362 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(guid, c.GuidField)", span="735-735"];
m6_360 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="732-732"];
m6_361 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="734-734"];
m6_363 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.GuidTest()", span="727-727"];
m6_37 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", span="129-129"];
m6_38 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime dateValue = new DateTime(2000, 3, 30)", span="131-131"];
m6_39 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="132-132"];
m6_40 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="testDictionary[''date''] = dateValue", span="133-133"];
m6_44 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Assert.AreEqual(dateValue, deserializedDate)", span="140-140"];
m6_41 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="135-135"];
m6_42 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="137-137"];
m6_46 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="143-143"];
m6_48 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine(jsonText)", span="145-145"];
m6_43 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="138-138"];
m6_45 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine(''DeserializeJavaScriptDate'')", span="142-142"];
m6_47 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Console.WriteLine()", span="144-144"];
m6_49 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeJavaScriptDate()", span="129-129"];
m6_660 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", span="1427-1427"];
m6_661 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="SubProp = subprop", span="1427-1427"];
m6_662 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass.SubKlass(string)", span="1427-1427"];
m6_506 [cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="29-29"];
m6_555 [cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29"];
m6_429 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="468-468"];
m6_760 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", span="1695-1695"];
m6_761 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''Mike Manager'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''Joe User'''',\r\n    ''''Manager'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n]''", span="1697-1710"];
m6_762 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs", label="List<Employee> employees = JsonConvert.DeserializeObject<List<Employee>>(json)", span="1712-1712"];
m6_763 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, employees.Count)", span="1714-1714"];
m6_764 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Mike Manager'', employees[0].Name)", span="1715-1715"];
m6_765 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Joe User'', employees[1].Name)", span="1716-1716"];
m6_766 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs", label="Assert.AreEqual(employees[0], employees[1].Manager)", span="1717-1717"];
m6_767 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeEmployeeReference()", span="1695-1695"];
m6_10 [cluster="Unk.AreEqual", file="JsonSerializerTest.cs", label="Entry Unk.AreEqual", span=""];
m6_27 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m6_88 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="204-204"];
m6_89 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="206-206"];
m6_90 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="208-208"];
m6_91 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(c.Field, ''Field'')", span="210-210"];
m6_92 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="204-204"];
m6_118 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m6_219 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m6_647 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m6_155 [cluster="System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", file="JsonSerializerTest.cs", label="Entry System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)", span="0-0"];
m6_264 [cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m6_618 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m6_719 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1597-1597"];
m6_720 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="1599-1599"];
m6_721 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="1597-1597"];
m6_548 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", span="1056-1056"];
m6_549 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass = new TypeClass {TypeProperty = typeof (bool)}", span="1058-1058"];
m6_550 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(typeClass)", span="1060-1060"];
m6_551 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''TypeProperty'''':''''System.Boolean''''}'', json)", span="1061-1061"];
m6_552 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="1063-1063"];
m6_553 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="1064-1064"];
m6_554 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.SerializeTypeProperty()", span="1056-1056"];
m6_93 [cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27"];
m6_951 [cluster="Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.Load(Newtonsoft.Json.JsonReader)", span="184-184"];
m6_188 [cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m6_253 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", span="574-574"];
m6_254 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="ProductCollection collection = new ProductCollection()\r\n      {\r\n        new Product() { Name = ''Test1'' },\r\n        new Product() { Name = ''Test2'' },\r\n        new Product() { Name = ''Test3'' }\r\n      }", span="576-581"];
m6_255 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="583-583"];
m6_258 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.Serialize(sw, collection)", span="588-588"];
m6_261 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="CollectionAssert.AreEqual(collection, collectionNew)", span="595-595"];
m6_256 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="jsonSerializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="584-584"];
m6_260 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="ProductCollection collectionNew = (ProductCollection)jsonSerializer.Deserialize(new JsonTextReader(new StringReader(sw.GetStringBuilder().ToString())), typeof(ProductCollection))", span="593-593"];
m6_257 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="StringWriter sw = new StringWriter()", span="586-586"];
m6_259 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''[{''''Name'''':''''Test1'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0,''''Sizes'''':null},{''''Name'''':''''Test2'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0,''''Sizes'''':null},{''''Name'''':''''Test3'''',''''ExpiryDate'''':''''\/Date(946684800000)\/'''',''''Price'''':0,''''Sizes'''':null}]'',\r\n        sw.GetStringBuilder().ToString())", span="590-591"];
m6_262 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.CustomCollectionSerialization()", span="574-574"];
m6_737 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", span="1634-1634"];
m6_738 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs", label="List<Person> p = new List<Person>()", span="1636-1636"];
m6_739 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1638-1638"];
m6_740 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs", label="serializer.Populate(new StringReader(@''[{''''Name'''':''''James''''},{''''Name'''':''''Jim''''}]''), p)", span="1639-1639"];
m6_741 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs", label="Assert.AreEqual(2, p.Count)", span="1641-1641"];
m6_742 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''James'', p[0].Name)", span="1642-1642"];
m6_743 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs", label="Assert.AreEqual(''Jim'', p[1].Name)", span="1643-1643"];
m6_744 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.PopulateListOfPeople()", span="1634-1634"];
m6_7 [cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="44-44"];
m6_8 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="444-444"];
m6_590 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1203-1203"];
m6_591 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="1205-1240"];
m6_592 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="1245-1245"];
m6_593 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.DeserializeGoogleGeoCode()", span="1203-1203"];
m6_9 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="530-530"];
m6_94 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", span="214-214"];
m6_95 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="216-216"];
m6_96 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="218-218"];
m6_97 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="220-220"];
m6_98 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(0, c.IgnoredField)", span="222-222"];
m6_99 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Assert.AreEqual(99, c.Field)", span="223-223"];
m6_100 [cluster="Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.JsonSerializerTest.JsonIgnoreAttributeTest()", span="214-214"];
m6_1040 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.JsonSerializerTest", span=""];
m6_1041 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.JsonSerializerTest.SuperKlass", span=""];
m6_1042 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.JsonSerializerTest.SubKlass", span=""];
m6_1043 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers", span=""];
m6_1044 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.JsonSerializerTest.DictionaryInterfaceClass", span=""];
m0_110 -> m0_114  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_111 -> m0_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_140 -> m0_144  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_141 -> m0_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_95 -> m0_147  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_95 -> m0_148  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_95 -> m0_149  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_95 -> m0_151  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_9  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_16  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_17  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_0 -> m0_20  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_0 -> m0_23  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_4 -> m0_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_4 -> m0_9  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_4 -> m0_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_4 -> m0_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_4 -> m0_16  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_4 -> m0_23  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_15 -> m0_17  [color=darkseagreen4, key=1, label=toConverter, style=dashed];
m0_101 -> m0_107  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_102 -> m0_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_45 -> m0_48  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_51  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_52  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_53  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_54  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_55  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_57  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_59  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_62  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_63  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_64  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_65  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_69  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_70  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_75  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_76  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_77  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_45 -> m0_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_45 -> m0_80  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_51  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_53  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_55  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_57  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_58  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_63  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_64  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_69  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_70  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_75  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_76  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_77  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_79  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_49 -> m0_80  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_50 -> m0_72  [color=darkseagreen4, key=1, label=initialType, style=dashed];
m0_50 -> m0_76  [color=darkseagreen4, key=1, label=initialType, style=dashed];
m0_50 -> m0_77  [color=darkseagreen4, key=1, label=initialType, style=dashed];
m0_50 -> m0_79  [color=darkseagreen4, key=1, label=initialType, style=dashed];
m0_50 -> m0_80  [color=darkseagreen4, key=1, label=initialType, style=dashed];
m0_71 -> m0_73  [color=darkseagreen4, key=1, label=fromConverter, style=dashed];
m0_68 -> m0_70  [color=darkseagreen4, key=1, label=toConverter, style=dashed];
m0_97 -> m0_156  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_157  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_158  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_159  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_160  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_161  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_162  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_163  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_164  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_165  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_97 -> m0_166  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m0_122 -> m0_124  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_122 -> m0_126  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_31 -> m0_172  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_132 -> m0_137  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_133 -> m0_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_188 -> m0_107  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_189 -> m0_114  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_190 -> m0_114  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_191 -> m0_114  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_192 -> m0_137  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_193 -> m0_144  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_194 -> m0_144  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_195 -> m0_144  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_1 -> m1_4  [color=green, key=1, label=first, style=dashed];
m1_4 -> m1_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label=secondSchema, style=dashed];
m1_5 -> m1_8  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_5 -> m1_9  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_7 -> m1_11  [color=darkseagreen4, key=1, label=node, style=dashed];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label=node, style=dashed];
m1_7 -> m1_10  [color=darkseagreen4, key=1, label=node, style=dashed];
m1_22 -> m1_24  [color=darkseagreen4, key=1, label=node, style=dashed];
m4_3 -> m4_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_633 -> m6_641  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_633 -> m6_642  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_633 -> m6_643  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_639 -> m6_641  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m6_639 -> m6_642  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m6_639 -> m6_643  [color=darkseagreen4, key=1, label=deserializedObject, style=dashed];
m6_150 -> m6_153  [color=darkseagreen4, key=1, label=r1, style=dashed];
m6_458 -> m6_460  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_796 -> m6_798  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_796 -> m6_799  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_796 -> m6_800  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_796 -> m6_801  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_796 -> m6_802  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_796 -> m6_803  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_82 -> m6_84  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_348 -> m6_350  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_348 -> m6_351  [color=darkseagreen4, key=1, label=s, style=dashed];
m6_293 -> m6_295  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_293 -> m6_296  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_293 -> m6_297  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_293 -> m6_298  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_293 -> m6_299  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_746 -> m6_748  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_746 -> m6_749  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_746 -> m6_750  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_136 -> m6_139  [color=darkseagreen4, key=1, label=a1, style=dashed];
m6_137 -> m6_140  [color=darkseagreen4, key=1, label=a2, style=dashed];
m6_138 -> m6_140  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m6_138 -> m6_143  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m6_138 -> m6_144  [color=darkseagreen4, key=1, label=articles1, style=dashed];
m6_142 -> m6_144  [color=darkseagreen4, key=1, label=articles2, style=dashed];
m6_382 -> m6_384  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_382 -> m6_385  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_846 -> m6_848  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m6_846 -> m6_849  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m6_879 -> m6_881  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_879 -> m6_882  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_879 -> m6_883  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_879 -> m6_884  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_879 -> m6_885  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label=store, style=dashed];
m6_2 -> m6_5  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_705 -> m6_707  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m6_705 -> m6_708  [color=darkseagreen4, key=1, label=newOptInClass, style=dashed];
m6_781 -> m6_783  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_781 -> m6_784  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_781 -> m6_785  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_321 -> m6_323  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_321 -> m6_324  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_321 -> m6_325  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_327 -> m6_329  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_327 -> m6_330  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_327 -> m6_331  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_327 -> m6_332  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_327 -> m6_333  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_327 -> m6_334  [color=darkseagreen4, key=1, label=wibbleOut, style=dashed];
m6_315 -> m6_317  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_341 -> m6_343  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_341 -> m6_344  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_609 -> m6_615  [color=darkseagreen4, key=1, label=person, style=dashed];
m6_612 -> m6_615  [color=darkseagreen4, key=1, label=jw, style=dashed];
m6_560 -> m6_562  [color=darkseagreen4, key=1, label=c2, style=dashed];
m6_924 -> m6_933  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_927 -> m6_933  [color=darkseagreen4, key=1, label=me, style=dashed];
m6_971 -> m6_973  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_971 -> m6_974  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_971 -> m6_975  [color=darkseagreen4, key=1, label=c1, style=dashed];
m6_978 -> m6_981  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m6_443 -> m6_448  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_443 -> m6_449  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_447 -> m6_449  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_992 -> m6_996  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m6_993 -> m6_996  [color=darkseagreen4, key=1, label=personRef, style=dashed];
m6_814 -> m6_820  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_814 -> m6_821  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_816 -> m6_818  [color=darkseagreen4, key=1, label=e1, style=dashed];
m6_816 -> m6_820  [color=darkseagreen4, key=1, label=e1, style=dashed];
m6_817 -> m6_819  [color=darkseagreen4, key=1, label=e2, style=dashed];
m6_817 -> m6_821  [color=darkseagreen4, key=1, label=e2, style=dashed];
m6_911 -> m6_913  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_911 -> m6_914  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_911 -> m6_915  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_911 -> m6_916  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_911 -> m6_917  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_911 -> m6_918  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_911 -> m6_919  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_911 -> m6_920  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_911 -> m6_921  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_230 -> m6_232  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_230 -> m6_236  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_623 -> m6_626  [color=darkseagreen4, key=1, label=defaultJson, style=dashed];
m6_624 -> m6_627  [color=darkseagreen4, key=1, label=isoJson, style=dashed];
m6_625 -> m6_628  [color=darkseagreen4, key=1, label=javascriptJson, style=dashed];
m6_243 -> m6_245  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_243 -> m6_246  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_243 -> m6_247  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_243 -> m6_248  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_243 -> m6_249  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_243 -> m6_250  [color=darkseagreen4, key=1, label=anonymous, style=dashed];
m6_388 -> m6_391  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_388 -> m6_392  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_389 -> m6_391  [color=darkseagreen4, key=1, label=p1, style=dashed];
m6_390 -> m6_392  [color=darkseagreen4, key=1, label=p2, style=dashed];
m6_395 -> m6_397  [color=darkseagreen4, key=1, label=newName, style=dashed];
m6_395 -> m6_398  [color=darkseagreen4, key=1, label=newName, style=dashed];
m6_395 -> m6_399  [color=darkseagreen4, key=1, label=newName, style=dashed];
m6_193 -> m6_196  [color=darkseagreen4, key=1, label=dataContractResult, style=dashed];
m6_194 -> m6_196  [color=darkseagreen4, key=1, label=jsonNetResult, style=dashed];
m6_941 -> m6_946  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m6_941 -> m6_949  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m6_942 -> m6_946  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_945 -> m6_947  [color=darkseagreen4, key=1, label=circularReferenceClass, style=dashed];
m6_691 -> m6_693  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_691 -> m6_694  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_691 -> m6_695  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_691 -> m6_696  [color=darkseagreen4, key=1, label=n, style=dashed];
m6_510 -> m6_512  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m6_510 -> m6_513  [color=darkseagreen4, key=1, label=personRaw, style=dashed];
m6_650 -> m6_652  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_650 -> m6_653  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_650 -> m6_654  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_650 -> m6_655  [color=darkseagreen4, key=1, label=o, style=dashed];
m6_76 -> m6_78  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_533 -> m6_535  [color=darkseagreen4, key=1, label=myClass, style=dashed];
m6_375 -> m6_377  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_852 -> m6_854  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_852 -> m6_855  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_852 -> m6_856  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_53 -> m6_59  [color=darkseagreen4, key=1, label=executorObject, style=dashed];
m6_58 -> m6_60  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_58 -> m6_61  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_58 -> m6_62  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_58 -> m6_63  [color=darkseagreen4, key=1, label=executorObject2, style=dashed];
m6_19 -> m6_21  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_19 -> m6_22  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_19 -> m6_23  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_19 -> m6_24  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_19 -> m6_25  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_831 -> m6_833  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m6_407 -> m6_409  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_407 -> m6_410  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m6_269 -> m6_273  [color=darkseagreen4, key=1, label=s1, style=dashed];
m6_269 -> m6_280  [color=darkseagreen4, key=1, label=s1, style=dashed];
m6_270 -> m6_273  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m6_277 -> m6_280  [color=darkseagreen4, key=1, label=s3, style=dashed];
m6_272 -> m6_274  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_838 -> m6_840  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m6_860 -> m6_862  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_860 -> m6_863  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_432 -> m6_437  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_432 -> m6_438  [color=darkseagreen4, key=1, label=testDate, style=dashed];
m6_436 -> m6_438  [color=darkseagreen4, key=1, label=m2, style=dashed];
m6_179 -> m6_181  [color=darkseagreen4, key=1, label=deserializedProductShort, style=dashed];
m6_179 -> m6_182  [color=darkseagreen4, key=1, label=deserializedProductShort, style=dashed];
m6_179 -> m6_183  [color=darkseagreen4, key=1, label=deserializedProductShort, style=dashed];
m6_179 -> m6_184  [color=darkseagreen4, key=1, label=deserializedProductShort, style=dashed];
m6_824 -> m6_826  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m6_824 -> m6_827  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m6_203 -> m6_207  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m6_205 -> m6_207  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_205 -> m6_208  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_210 -> m6_212  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_31 -> m6_33  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_31 -> m6_34  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_986 -> m6_988  [color=darkseagreen4, key=1, label=employee, style=dashed];
m6_1002 -> m6_1011  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1002 -> m6_1012  [color=darkseagreen4, key=1, label=values, style=dashed];
m6_1004 -> m6_1006  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_1004 -> m6_1007  [color=darkseagreen4, key=1, label=e, style=dashed];
m6_1005 -> m6_1008  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_1005 -> m6_1009  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_1005 -> m6_1010  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_579 -> m6_588  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_580 -> m6_582  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_580 -> m6_583  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_580 -> m6_584  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_580 -> m6_585  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_580 -> m6_586  [color=darkseagreen4, key=1, label=aa, style=dashed];
m6_1032 -> m6_1034  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1032 -> m6_1035  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1032 -> m6_1036  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1032 -> m6_1037  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_1032 -> m6_1038  [color=darkseagreen4, key=1, label=deserializedProduct, style=dashed];
m6_868 -> m6_870  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_868 -> m6_871  [color=darkseagreen4, key=1, label=circularList, style=dashed];
m6_872 -> m6_874  [color=darkseagreen4, key=1, label=json, style=dashed];
m6_121 -> m6_127  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_121 -> m6_128  [color=darkseagreen4, key=1, label=test, style=dashed];
m6_126 -> m6_128  [color=darkseagreen4, key=1, label=test2, style=dashed];
m6_519 -> m6_521  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_519 -> m6_522  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_519 -> m6_523  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_519 -> m6_524  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_519 -> m6_525  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_519 -> m6_526  [color=darkseagreen4, key=1, label=userNullablleDeserialized, style=dashed];
m6_731 -> m6_733  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_731 -> m6_734  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_303 -> m6_305  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_303 -> m6_306  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_303 -> m6_307  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_303 -> m6_308  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_303 -> m6_309  [color=darkseagreen4, key=1, label=wibble, style=dashed];
m6_904 -> m6_906  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_904 -> m6_907  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_358 -> m6_362  [color=darkseagreen4, key=1, label=guid, style=dashed];
m6_38 -> m6_44  [color=darkseagreen4, key=1, label=dateValue, style=dashed];
m6_41 -> m6_46  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_41 -> m6_48  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m6_762 -> m6_764  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_762 -> m6_765  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_762 -> m6_766  [color=darkseagreen4, key=1, label=employees, style=dashed];
m6_254 -> m6_258  [color=darkseagreen4, key=1, label=collection, style=dashed];
m6_254 -> m6_261  [color=darkseagreen4, key=1, label=collection, style=dashed];
m6_255 -> m6_258  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m6_257 -> m6_259  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_738 -> m6_740  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_738 -> m6_741  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_738 -> m6_742  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_738 -> m6_743  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_97 -> m6_99  [color=darkseagreen4, key=1, label=c, style=dashed];
m6_1040 -> m6_873  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonSerializerTest", style=dashed];
m6_1043 -> m6_720  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonSerializerTest.DataContractPrivateMembers", style=dashed];
}
