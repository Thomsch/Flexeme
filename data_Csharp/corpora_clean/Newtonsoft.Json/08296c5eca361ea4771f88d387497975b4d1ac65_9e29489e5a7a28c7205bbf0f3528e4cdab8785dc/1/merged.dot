digraph  {
m0_179 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="ConvertUtils.cs"];
m0_140 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="ConvertUtils.cs"];
m0_141 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}''), ''The number of field values does not match the number of properties definied by union 'AUD'. Path '', line 1, position 27.'')", span="254-254", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="ConvertUtils.cs"];
m0_142 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="ConvertUtils.cs"];
m0_25 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="ConvertUtils.cs"];
m0_63 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="ConvertUtils.cs"];
m0_64 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0))", span="142-142", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="ConvertUtils.cs"];
m0_65 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'', json)", span="144-144", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="ConvertUtils.cs"];
m0_66 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", span="140-140", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithFields()", file="ConvertUtils.cs"];
m0_146 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="ConvertUtils.cs"];
m0_147 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}''), ''No 'Case' property with union name found. Path '', line 1, position 14.'')", span="260-260", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="ConvertUtils.cs"];
m0_148 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="ConvertUtils.cs"];
m0_133 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", span="246-246", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="ConvertUtils.cs"];
m0_134 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''abcdefg'''',''''Fields'''':[]}''), ''No union type found with the name 'abcdefg'. Path 'Case', line 1, position 17.'')", span="248-248", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="ConvertUtils.cs"];
m0_135 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", span="246-246", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoMatch()", file="ConvertUtils.cs"];
m0_164 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="ConvertUtils.cs"];
m0_165 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}''), ''Unexpected property 'Case123' found when reading union. Path 'Case123', line 1, position 11.'')", span="278-278", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="ConvertUtils.cs"];
m0_166 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="ConvertUtils.cs"];
m0_44 [label="Entry Newtonsoft.Json.Tests.TestObjects.Shape.NewCircle(double)", span="60-60", cluster="Newtonsoft.Json.Tests.TestObjects.Shape.NewCircle(double)", file="ConvertUtils.cs"];
m0_117 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="ConvertUtils.cs"];
m0_50 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_51 [label="string json = @''[\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]},\r\n  {''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}\r\n]''", span="116-122", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_52 [label="JsonConvert.DeserializeObject<List<Shape>>(json)", span="124-124", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_57 [label="JsonConvert.DeserializeObject<List<Shape>>(json)", span="131-131", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_53 [label="Stopwatch ts = new Stopwatch()", span="126-126", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_54 [label="ts.Start()", span="127-127", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_59 [label="ts.Stop()", span="134-134", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_60 [label="Console.WriteLine(ts.Elapsed.TotalSeconds)", span="136-136", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_55 [label="int i = 0", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_56 [label="i < 100", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_58 [label="i++", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_61 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="ConvertUtils.cs"];
m0_67 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="ConvertUtils.cs"];
m0_68 [label="Currency c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD''''}'')", span="150-150", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="ConvertUtils.cs"];
m0_69 [label="Assert.AreEqual(Currency.AUD, c)", span="151-151", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="ConvertUtils.cs"];
m0_70 [label="c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''EUR''''}'')", span="153-153", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="ConvertUtils.cs"];
m0_71 [label="Assert.AreEqual(Currency.EUR, c)", span="154-154", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="ConvertUtils.cs"];
m0_72 [label="c = JsonConvert.DeserializeObject<Currency>(@''null'')", span="156-156", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="ConvertUtils.cs"];
m0_73 [label="Assert.AreEqual(null, c)", span="157-157", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="ConvertUtils.cs"];
m0_74 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="ConvertUtils.cs"];
m0_101 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", span="178-178", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", file="ConvertUtils.cs"];
m0_362 [label="Entry System.Guid.TryParseExact(string, string, out System.Guid)", span="0-0", cluster="System.Guid.TryParseExact(string, string, out System.Guid)", file="ConvertUtils.cs"];
m0_43 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ConvertUtils.cs"];
m0_49 [label="Entry System.Console.WriteLine(double)", span="0-0", cluster="System.Console.WriteLine(double)", file="ConvertUtils.cs"];
m0_75 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", span="161-161", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="ConvertUtils.cs"];
m0_76 [label="Shape c = JsonConvert.DeserializeObject<Shape>(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'')", span="163-163", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="ConvertUtils.cs"];
m0_77 [label="Assert.AreEqual(true, c.IsRectangle)", span="164-164", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="ConvertUtils.cs"];
m0_78 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="166-166", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="ConvertUtils.cs"];
m0_79 [label="Assert.AreEqual(5.0, r.length)", span="168-168", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="ConvertUtils.cs"];
m0_80 [label="Assert.AreEqual(10.0, r.width)", span="169-169", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="ConvertUtils.cs"];
m0_81 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", span="161-161", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeUnionWithFields()", file="ConvertUtils.cs"];
m0_26 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", span="82-82", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="ConvertUtils.cs"];
m0_27 [label="string json = JsonConvert.SerializeObject(Currency.AUD)", span="84-84", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="ConvertUtils.cs"];
m0_28 [label="Assert.AreEqual(@''{''''Case'''':''''AUD''''}'', json)", span="86-86", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="ConvertUtils.cs"];
m0_29 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", span="82-82", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeBasicUnion()", file="ConvertUtils.cs"];
m0_105 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ConvertUtils.cs"];
m0_5 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_6 [label="double d = (double)reader.Value", span="54-54", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_7 [label="return d / 2;", span="56-56", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_8 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="52-52", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_129 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="ConvertUtils.cs"];
m0_31 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_32 [label="List<Shape> values = new List<Shape>\r\n            {\r\n                Shape.NewRectangle(10.0, 5.0),\r\n                Shape.NewCircle(7.5)\r\n            }", span="92-96", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_33 [label="string json = JsonConvert.SerializeObject(values, Formatting.Indented)", span="98-98", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_38 [label="JsonConvert.SerializeObject(values)", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_34 [label="Stopwatch ts = new Stopwatch()", span="100-100", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_35 [label="ts.Start()", span="101-101", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_40 [label="ts.Stop()", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_41 [label="Console.WriteLine(ts.Elapsed.TotalSeconds)", span="110-110", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_36 [label="int i = 0", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_37 [label="i < 100", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_39 [label="i++", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_42 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="ConvertUtils.cs"];
m0_359 [label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="776-776", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="ConvertUtils.cs"];
m0_360 [label="return Guid.TryParseExact(s, ''D'', out g);", span="794-794", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", color=green, community=0, file="ConvertUtils.cs"];
m0_361 [label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", span="776-776", cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertGuid(string, out System.Guid)", file="ConvertUtils.cs"];
m0_104 [label="Entry Unk.PreComputeUnionConstructor", span="", cluster="Unk.PreComputeUnionConstructor", file="ConvertUtils.cs"];
m0_24 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ConvertUtils.cs"];
m0_106 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="ConvertUtils.cs"];
m0_107 [label="Shape value = Shape.NewRectangle(10.0, 5.0)", span="214-214", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="ConvertUtils.cs"];
m0_108 [label="Union union = CreateUnion(value.GetType())", span="216-216", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="ConvertUtils.cs"];
m0_109 [label="int tag = union.TagReader.Invoke(value)", span="218-218", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="ConvertUtils.cs"];
m0_111 [label="object[] fields = caseInfo.FieldReader.Invoke(value)", span="222-222", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="ConvertUtils.cs"];
m0_110 [label="UnionCase caseInfo = union.Cases.Single(c => c.Tag == tag)", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="ConvertUtils.cs"];
m0_112 [label="Assert.AreEqual(10, fields[0])", span="224-224", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="ConvertUtils.cs"];
m0_113 [label="Assert.AreEqual(5, fields[1])", span="225-225", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="ConvertUtils.cs"];
m0_114 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="ConvertUtils.cs"];
m0_45 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="ConvertUtils.cs"];
m0_82 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", span="187-187", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_83 [label="Union u = new Union()", span="189-189", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_84 [label="u.TagReader = FSharpFunc<object, int>.ToConverter(FSharpValue.PreComputeUnionTagReader(t, null))", span="191-191", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_86 [label="UnionCaseInfo[] cases = FSharpType.GetUnionCases(t, null)", span="194-194", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_85 [label="u.Cases = new List<UnionCase>()", span="192-192", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_94 [label="u.Cases.Add(unionCase)", span="205-205", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_95 [label="return u;", span="208-208", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_87 [label=cases, span="196-196", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_88 [label="UnionCase unionCase = new UnionCase()", span="198-198", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_89 [label="unionCase.Tag = unionCaseInfo.Tag", span="199-199", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_90 [label="unionCase.Name = unionCaseInfo.Name", span="200-200", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_91 [label="unionCase.Fields = unionCaseInfo.GetFields()", span="201-201", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_92 [label="unionCase.FieldReader = FSharpFunc<object, object[]>.ToConverter(FSharpValue.PreComputeUnionReader(unionCaseInfo, null))", span="202-202", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_93 [label="unionCase.Constructor = FSharpFunc<object[], object>.ToConverter(FSharpValue.PreComputeUnionConstructor(unionCaseInfo, null))", span="203-203", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_96 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", span="187-187", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="ConvertUtils.cs"];
m0_121 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="ConvertUtils.cs"];
m0_122 [label="Union union = CreateUnion(typeof(Shape.Rectangle))", span="231-231", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="ConvertUtils.cs"];
m0_123 [label="UnionCase caseInfo = union.Cases.Single(c => c.Name == ''Rectangle'')", span="233-233", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="ConvertUtils.cs"];
m0_124 [label="Shape.Rectangle value = (Shape.Rectangle)caseInfo.Constructor.Invoke(new object[]\r\n            {\r\n                10.0, 5.0\r\n            })", span="235-238", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="ConvertUtils.cs"];
m0_125 [label="Assert.AreEqual(''Newtonsoft.Json.Tests.TestObjects.Shape+Rectangle'', value.ToString())", span="240-240", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="ConvertUtils.cs"];
m0_126 [label="Assert.AreEqual(10, value.width)", span="241-241", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="ConvertUtils.cs"];
m0_127 [label="Assert.AreEqual(5, value.length)", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="ConvertUtils.cs"];
m0_128 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="ConvertUtils.cs"];
m0_30 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="527-527", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="ConvertUtils.cs"];
m0_98 [label="Entry Unk.PreComputeUnionTagReader", span="", cluster="Unk.PreComputeUnionTagReader", file="ConvertUtils.cs"];
m0_158 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="ConvertUtils.cs"];
m0_159 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}''), ''Union fields must been an array. Path 'Fields', line 1, position 24.'')", span="272-272", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="ConvertUtils.cs"];
m0_160 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="ConvertUtils.cs"];
m0_22 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", span="43-43", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", file="ConvertUtils.cs"];
m0_62 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="ConvertUtils.cs"];
m0_116 [label="Entry System.Converter<TInput, TOutput>.Invoke(TInput)", span="0-0", cluster="System.Converter<TInput, TOutput>.Invoke(TInput)", file="ConvertUtils.cs"];
m0_170 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="ConvertUtils.cs"];
m0_171 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="284-288", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="ConvertUtils.cs"];
m0_172 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'', json)", span="290-290", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="ConvertUtils.cs"];
m0_173 [label="Shape c = JsonConvert.DeserializeObject<Shape>(json)", span="292-292", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="ConvertUtils.cs"];
m0_174 [label="Assert.AreEqual(true, c.IsRectangle)", span="293-293", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="ConvertUtils.cs"];
m0_175 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="295-295", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="ConvertUtils.cs"];
m0_176 [label="Assert.AreEqual(5.0, r.length)", span="297-297", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="ConvertUtils.cs"];
m0_177 [label="Assert.AreEqual(10.0, r.width)", span="298-298", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="ConvertUtils.cs"];
m0_178 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="ConvertUtils.cs"];
m0_152 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="ConvertUtils.cs"];
m0_153 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''), ''Unexpected end when reading JSON. Path 'Case', line 1, position 8.'')", span="266-266", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="ConvertUtils.cs"];
m0_154 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="ConvertUtils.cs"];
m0_4 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="968-968", cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="ConvertUtils.cs"];
m0_47 [label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0", cluster="System.Diagnostics.Stopwatch.Start()", file="ConvertUtils.cs"];
m0_23 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="551-551", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="ConvertUtils.cs"];
m0_12 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="ConvertUtils.cs"];
m0_13 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new DoubleDoubleConverter())", span="68-68", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="ConvertUtils.cs"];
m0_14 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[20.0,10.0]}'', json)", span="70-70", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="ConvertUtils.cs"];
m0_15 [label="Shape c = JsonConvert.DeserializeObject<Shape>(json, new DoubleDoubleConverter())", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="ConvertUtils.cs"];
m0_16 [label="Assert.AreEqual(true, c.IsRectangle)", span="73-73", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="ConvertUtils.cs"];
m0_17 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="75-75", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="ConvertUtils.cs"];
m0_18 [label="Assert.AreEqual(5.0, r.length)", span="77-77", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="ConvertUtils.cs"];
m0_19 [label="Assert.AreEqual(10.0, r.width)", span="78-78", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="ConvertUtils.cs"];
m0_20 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="ConvertUtils.cs"];
m0_99 [label="Entry Unk.ToConverter", span="", cluster="Unk.ToConverter", file="ConvertUtils.cs"];
m0_100 [label="Entry Unk.GetUnionCases", span="", cluster="Unk.GetUnionCases", file="ConvertUtils.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_1 [label="double d = (double)value", span="47-47", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_2 [label="writer.WriteValue(d * 2)", span="49-49", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_3 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="45-45", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ConvertUtils.cs"];
m0_21 [label="Entry Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", span="72-72", cluster="Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", file="ConvertUtils.cs"];
m0_46 [label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="ConvertUtils.cs"];
m0_102 [label="Entry Unk.GetFields", span="", cluster="Unk.GetFields", file="ConvertUtils.cs"];
m0_115 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ConvertUtils.cs"];
m0_97 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", file="ConvertUtils.cs"];
m0_167 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="ConvertUtils.cs"];
m0_119 [label="c.Tag == tag", span="220-220", cluster="lambda expression", file="ConvertUtils.cs"];
m0_118 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="ConvertUtils.cs"];
m0_120 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="ConvertUtils.cs"];
m0_130 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="ConvertUtils.cs"];
m0_131 [label="c.Name == ''Rectangle''", span="233-233", cluster="lambda expression", file="ConvertUtils.cs"];
m0_132 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="ConvertUtils.cs"];
m0_137 [label="Entry lambda expression", span="248-248", cluster="lambda expression", file="ConvertUtils.cs"];
m0_138 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''abcdefg'''',''''Fields'''':[]}'')", span="248-248", cluster="lambda expression", file="ConvertUtils.cs"];
m0_139 [label="Exit lambda expression", span="248-248", cluster="lambda expression", file="ConvertUtils.cs"];
m0_143 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="ConvertUtils.cs"];
m0_144 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}'')", span="254-254", cluster="lambda expression", file="ConvertUtils.cs"];
m0_145 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="ConvertUtils.cs"];
m0_149 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="ConvertUtils.cs"];
m0_150 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}'')", span="260-260", cluster="lambda expression", file="ConvertUtils.cs"];
m0_151 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="ConvertUtils.cs"];
m0_155 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="ConvertUtils.cs"];
m0_156 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':'')", span="266-266", cluster="lambda expression", file="ConvertUtils.cs"];
m0_157 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="ConvertUtils.cs"];
m0_161 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="ConvertUtils.cs"];
m0_162 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}'')", span="272-272", cluster="lambda expression", file="ConvertUtils.cs"];
m0_163 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="ConvertUtils.cs"];
m0_168 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}'')", span="278-278", cluster="lambda expression", file="ConvertUtils.cs"];
m0_169 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="ConvertUtils.cs"];
m0_136 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="ConvertUtils.cs"];
m0_48 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="ConvertUtils.cs"];
m0_103 [label="Entry Unk.PreComputeUnionReader", span="", cluster="Unk.PreComputeUnionReader", file="ConvertUtils.cs"];
m0_180 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="ConvertUtils.cs"];
m0_9 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="ConvertUtils.cs"];
m0_10 [label="return objectType == typeof(double);", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="ConvertUtils.cs"];
m0_11 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", span="59-59", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.CanConvert(System.Type)", file="ConvertUtils.cs"];
m0_181 [label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests", span="", file="ConvertUtils.cs"];
m0_182 [label=tag, span="", file="ConvertUtils.cs"];
m1_179 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="375-375", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DiscriminatedUnionConverterTests.cs"];
m1_4 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="150-150", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DiscriminatedUnionConverterTests.cs"];
m1_5 [label="JsonObjectAttribute objectAttribute = GetCachedAttribute<JsonObjectAttribute>(objectType)", span="152-152", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DiscriminatedUnionConverterTests.cs"];
m1_6 [label="objectAttribute != null", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DiscriminatedUnionConverterTests.cs"];
m1_7 [label="return objectAttribute.MemberSerialization;", span="155-155", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DiscriminatedUnionConverterTests.cs"];
m1_8 [label="return MemberSerialization.OptOut;", span="178-178", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DiscriminatedUnionConverterTests.cs"];
m1_9 [label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", span="150-150", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type, bool)", file="DiscriminatedUnionConverterTests.cs"];
m1_105 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DiscriminatedUnionConverterTests.cs"];
m1_106 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_107 [label="Shape value = Shape.NewRectangle(10.0, 5.0)", span="214-214", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_109 [label="int tag = union.TagReader.Invoke(value)", span="218-218", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_114 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", span="212-212", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_117 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="DiscriminatedUnionConverterTests.cs"];
m1_118 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_119 [label="c.Tag == tag", span="220-220", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_108 [label="Union union = CreateUnion(value.GetType())", span="216-216", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_110 [label="UnionCase caseInfo = union.Cases.Single(c => c.Tag == tag)", span="220-220", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_111 [label="object[] fields = caseInfo.FieldReader.Invoke(value)", span="222-222", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_112 [label="Assert.AreEqual(10, fields[0])", span="224-224", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_113 [label="Assert.AreEqual(5, fields[1])", span="225-225", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Serialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_115 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DiscriminatedUnionConverterTests.cs"];
m1_116 [label="Entry System.Converter<TInput, TOutput>.Invoke(TInput)", span="0-0", cluster="System.Converter<TInput, TOutput>.Invoke(TInput)", file="DiscriminatedUnionConverterTests.cs"];
m1_124 [label="Shape.Rectangle value = (Shape.Rectangle)caseInfo.Constructor.Invoke(new object[]\r\n            {\r\n                10.0, 5.0\r\n            })", span="235-238", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_120 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_121 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_122 [label="Union union = CreateUnion(typeof(Shape.Rectangle))", span="231-231", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_123 [label="UnionCase caseInfo = union.Cases.Single(c => c.Name == ''Rectangle'')", span="233-233", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_125 [label="Assert.AreEqual(''Newtonsoft.Json.Tests.TestObjects.Shape+Rectangle'', value.ToString())", span="240-240", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_126 [label="Assert.AreEqual(10, value.width)", span="241-241", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_85 [label="u.Cases = new List<UnionCase>()", span="192-192", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_68 [label="Currency c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD''''}'')", span="150-150", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_69 [label="Assert.AreEqual(Currency.AUD, c)", span="151-151", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_70 [label="c = JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''EUR''''}'')", span="153-153", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_140 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs"];
m1_141 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}''), ''The number of field values does not match the number of properties definied by union 'AUD'. Path '', line 1, position 27.'')", span="254-254", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs"];
m1_142 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", span="252-252", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_MismatchedFieldCount()", file="DiscriminatedUnionConverterTests.cs"];
m1_55 [label="int i = 0", span="129-129", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="DiscriminatedUnionConverterTests.cs", color=green, community=0];
m1_63 [label="Entry Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65", cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="DiscriminatedUnionConverterTests.cs"];
m1_64 [label="Entry lambda expression", span="242-242", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_65 [label="param.GetType()", span="242-242", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_66 [label="Exit lambda expression", span="242-242", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_146 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs"];
m1_147 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}''), ''No 'Case' property with union name found. Path '', line 1, position 14.'')", span="260-260", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs"];
m1_148 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", span="258-258", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_NoCaseName()", file="DiscriminatedUnionConverterTests.cs"];
m1_25 [label="Func<object[], object> converterCreator = CreatorCache.Get(namingStrategyType)", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="DiscriminatedUnionConverterTests.cs"];
m1_133 [label="return GetAttribute<T>(memberInfo);", span="395-395", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_134 [label="return ReflectionUtils.GetAttribute<T>(provider, true);", span="398-398", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_135 [label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="384-384", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_164 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs"];
m1_165 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}''), ''Unexpected property 'Case123' found when reading union. Path 'Case123', line 1, position 11.'')", span="278-278", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs"];
m1_166 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", span="276-276", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedProperty()", file="DiscriminatedUnionConverterTests.cs"];
m1_44 [label="ConstructorInfo parameterizedConstructorInfo = type.GetConstructor(paramTypes)", span="243-243", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_67 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", span="148-148", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion()", file="DiscriminatedUnionConverterTests.cs"];
m1_50 [label="throw new JsonException(''No parameterless constructor defined for '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type));", span="258-258", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_54 [label="Exit lambda expression", span="236-267", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_56 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", color=green, community=0, file="DiscriminatedUnionConverterTests.cs"];
m1_58 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="73-73", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", color=green, community=0, file="DiscriminatedUnionConverterTests.cs"];
m1_57 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="DiscriminatedUnionConverterTests.cs"];
m1_59 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="DiscriminatedUnionConverterTests.cs"];
m1_53 [label="throw new JsonException(''Error creating '{0}'.''.FormatWith(CultureInfo.InvariantCulture, type), ex);", span="265-265", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_51 [label="return defaultConstructor();", span="261-261", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_60 [label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54", cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="DiscriminatedUnionConverterTests.cs"];
m1_52 [label=Exception, span="263-263", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_61 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="DiscriminatedUnionConverterTests.cs"];
m1_84 [label="u.TagReader = FSharpFunc<object, int>.ToConverter(FSharpValue.PreComputeUnionTagReader(t, null))", span="191-191", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_43 [label="Type[] paramTypes = parameters.Select(param => param.GetType()).ToArray()", span="242-242", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_72 [label="Attribute[] customAttributes = ReflectionUtils.GetAttributes(type, null, true)", span="278-278", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_71 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="276-276", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_73 [label=customAttributes, span="280-280", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_74 [label="Type attributeType = attribute.GetType()", span="282-282", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_35 [label="ts.Start()", span="101-101", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_36 [label="int i = 0", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", color=green, community=0];
m1_37 [label="i < 10000", span="103-103", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs", color=green, community=0];
m1_38 [label="JsonConvert.SerializeObject(values)", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_49 [label="defaultConstructor == null", span="256-256", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_40 [label="ts.Stop()", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="DiscriminatedUnionConverterTests.cs"];
m1_75 [label="string.Equals(attributeType.FullName, ''System.ComponentModel.DataAnnotations.MetadataTypeAttribute'', StringComparison.Ordinal)", span="286-286", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_76 [label="string metadataClassTypeName = ''MetadataClassType''", span="288-288", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_77 [label="_metadataTypeAttributeReflectionObject == null", span="290-290", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_78 [label="_metadataTypeAttributeReflectionObject = ReflectionObject.Create(attributeType, metadataClassTypeName)", span="292-292", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_79 [label="return (Type)_metadataTypeAttributeReflectionObject.GetValue(attribute, metadataClassTypeName);", span="295-295", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_80 [label="return null;", span="299-299", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_81 [label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", span="276-276", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAssociateMetadataTypeFromAttribute(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_62 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DiscriminatedUnionConverterTests.cs"];
m1_87 [label=cases, span="196-196", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_88 [label="UnionCase unionCase = new UnionCase()", span="198-198", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_89 [label="unionCase.Tag = unionCaseInfo.Tag", span="199-199", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_94 [label="u.Cases.Add(unionCase)", span="205-205", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_97 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", span="172-172", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Union.Union()", file="DiscriminatedUnionConverterTests.cs"];
m1_90 [label="unionCase.Name = unionCaseInfo.Name", span="200-200", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_91 [label="unionCase.Fields = unionCaseInfo.GetFields()", span="201-201", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_92 [label="unionCase.FieldReader = FSharpFunc<object, object[]>.ToConverter(FSharpValue.PreComputeUnionReader(unionCaseInfo, null))", span="202-202", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_93 [label="unionCase.Constructor = FSharpFunc<object[], object>.ToConverter(FSharpValue.PreComputeUnionConstructor(unionCaseInfo, null))", span="203-203", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_95 [label="return u;", span="208-208", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_96 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", span="187-187", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_98 [label="Entry Unk.PreComputeUnionTagReader", span="", cluster="Unk.PreComputeUnionTagReader", file="DiscriminatedUnionConverterTests.cs"];
m1_101 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", span="178-178", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.UnionCase.UnionCase()", file="DiscriminatedUnionConverterTests.cs"];
m1_99 [label="Entry Unk.ToConverter", span="", cluster="Unk.ToConverter", file="DiscriminatedUnionConverterTests.cs"];
m1_100 [label="Entry Unk.GetUnionCases", span="", cluster="Unk.GetUnionCases", file="DiscriminatedUnionConverterTests.cs"];
m1_102 [label="Entry Unk.GetFields", span="", cluster="Unk.GetFields", file="DiscriminatedUnionConverterTests.cs"];
m1_26 [label="return (NamingStrategy)converterCreator(converterArgs);", span="212-212", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="DiscriminatedUnionConverterTests.cs"];
m1_27 [label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="209-209", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="DiscriminatedUnionConverterTests.cs"];
m1_28 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="215-215", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="DiscriminatedUnionConverterTests.cs"];
m1_29 [label="containerAttribute.NamingStrategyInstance == null", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="DiscriminatedUnionConverterTests.cs"];
m1_86 [label="UnionCaseInfo[] cases = FSharpType.GetUnionCases(t, null)", span="194-194", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.CreateUnion(System.Type)", file="DiscriminatedUnionConverterTests.cs"];
m1_136 [label="System.Type", span="", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DiscriminatedUnionConverterTests.cs"];
m1_20 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_21 [label="Entry Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", span="72-72", cluster="Newtonsoft.Json.Tests.TestObjects.Shape.NewRectangle(double, double)", file="DiscriminatedUnionConverterTests.cs"];
m1_22 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", span="43-43", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DoubleDoubleConverter.DoubleDoubleConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_23 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="DiscriminatedUnionConverterTests.cs"];
m1_129 [label="type != null", span="387-387", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_3 [label="Entry Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(object)", span="35-35", cluster="Newtonsoft.Json.Serialization.CachedAttributeGetter<T>.GetAttribute(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_31 [label="return null;", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="DiscriminatedUnionConverterTests.cs"];
m1_39 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", color=green, community=0, file="DiscriminatedUnionConverterTests.cs"];
m1_34 [label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="215-215", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="DiscriminatedUnionConverterTests.cs"];
m1_32 [label="containerAttribute.NamingStrategyInstance = CreateNamingStrategyInstance(containerAttribute.NamingStrategyType, containerAttribute.NamingStrategyParameters)", span="224-224", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="DiscriminatedUnionConverterTests.cs"];
m1_41 [label="Entry lambda expression", span="236-267", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_33 [label="return containerAttribute.NamingStrategyInstance;", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="DiscriminatedUnionConverterTests.cs"];
m1_42 [label="parameters != null", span="240-240", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_10 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="181-181", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_11 [label="JsonConverterAttribute converterAttribute = GetCachedAttribute<JsonConverterAttribute>(attributeProvider)", span="183-183", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_12 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", span="66-66", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_13 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new DoubleDoubleConverter())", span="68-68", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_15 [label="Shape c = JsonConvert.DeserializeObject<Shape>(json, new DoubleDoubleConverter())", span="72-72", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_16 [label="Assert.AreEqual(true, c.IsRectangle)", span="73-73", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_14 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[20.0,10.0]}'', json)", span="70-70", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_17 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="75-75", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_104 [label="Entry System.Type.GetInterfaces()", span="0-0", cluster="System.Type.GetInterfaces()", file="DiscriminatedUnionConverterTests.cs"];
m1_30 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_127 [label="Assert.AreEqual(5, value.length)", span="242-242", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_128 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", span="229-229", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.Deserialize()", file="DiscriminatedUnionConverterTests.cs"];
m1_131 [label="c.Name == ''Rectangle''", span="233-233", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_130 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_132 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_19 [label="Assert.AreEqual(10.0, r.width)", span="78-78", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_18 [label="Assert.AreEqual(5.0, r.length)", span="77-77", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithConverter()", file="DiscriminatedUnionConverterTests.cs"];
m1_24 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="209-209", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="DiscriminatedUnionConverterTests.cs"];
m1_45 [label="null != parameterizedConstructorInfo", span="245-245", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_170 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_173 [label="Shape c = JsonConvert.DeserializeObject<Shape>(json)", span="292-292", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_171 [label="string json = JsonConvert.SerializeObject(Shape.NewRectangle(10.0, 5.0), new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="284-288", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_172 [label="Assert.AreEqual(@''{''''Case'''':''''Rectangle'''',''''Fields'''':[10.0,5.0]}'', json)", span="290-290", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_174 [label="Assert.AreEqual(true, c.IsRectangle)", span="293-293", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_175 [label="Shape.Rectangle r = (Shape.Rectangle)c", span="295-295", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_176 [label="Assert.AreEqual(5.0, r.length)", span="297-297", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_177 [label="Assert.AreEqual(10.0, r.width)", span="298-298", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_178 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", span="282-282", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializeUnionWithTypeNameHandlingAndReferenceTracking()", file="DiscriminatedUnionConverterTests.cs"];
m1_82 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", span="754-754", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttributes(object, System.Type, bool)", file="DiscriminatedUnionConverterTests.cs"];
m1_83 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DiscriminatedUnionConverterTests.cs"];
m1_158 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs"];
m1_159 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}''), ''Union fields must been an array. Path 'Fields', line 1, position 24.'')", span="272-272", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs"];
m1_160 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", span="270-270", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_FieldsObject()", file="DiscriminatedUnionConverterTests.cs"];
m1_0 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_1 [label="return CachedAttributeGetter<T>.GetAttribute(attributeProvider);", span="68-68", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_2 [label="Exit Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="DiscriminatedUnionConverterTests.cs"];
m1_152 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs"];
m1_153 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''), ''Unexpected end when reading union. Path 'Case', line 1, position 8.'')", span="266-266", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs"];
m1_154 [label="Exit Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", span="264-264", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializeBasicUnion_UnexpectedEnd()", file="DiscriminatedUnionConverterTests.cs"];
m1_47 [label="return parameterizedConstructor(parameters);", span="248-248", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_48 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="DiscriminatedUnionConverterTests.cs"];
m1_46 [label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="DiscriminatedUnionConverterTests.cs"];
m1_138 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''abcdefg'''',''''Fields'''':[]}'')", span="248-248", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_144 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':[1]}'')", span="254-254", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_150 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Fields'''':[1]}'')", span="260-260", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_156 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':'')", span="266-266", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_162 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case'''':''''AUD'''',''''Fields'''':{}}'')", span="272-272", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_168 [label="JsonConvert.DeserializeObject<Currency>(@''{''''Case123'''':''''AUD''''}'')", span="278-278", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_137 [label=defaultConstructor, span="", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_139 [label="Exit lambda expression", span="248-248", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_143 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_145 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_149 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_151 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_155 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_157 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_161 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_163 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_167 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_169 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="DiscriminatedUnionConverterTests.cs"];
m1_103 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", span="733-733", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetAttribute<T>(object, bool)", file="DiscriminatedUnionConverterTests.cs"];
m1_180 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DiscriminatedUnionConverterTests.cs"];
m1_181 [label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests", span="", file="DiscriminatedUnionConverterTests.cs"];
m1_182 [label=tag, span="", file="DiscriminatedUnionConverterTests.cs"];
m2_14 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonConstructorAttribute.cs"];
m2_2 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", file="JsonConstructorAttribute.cs"];
m2_3 [label="UserName = userName", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_4 [label="Enabled = enabled", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User.User(string, bool)", file="JsonConstructorAttribute.cs"];
m2_6 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", file="JsonConstructorAttribute.cs"];
m2_7 [label="string json = @''{\r\n              ''''UserName'''': ''''domain\\username'''',\r\n              ''''Enabled'''': true\r\n            }''", span="61-64", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_8 [label="User user = JsonConvert.DeserializeObject<User>(json)", span="66-66", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_9 [label="Console.WriteLine(user.UserName)", span="68-68", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_10 [label="Assert.AreEqual(@''domain\username'', user.UserName)", span="72-72", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", color=green, community=0, file="JsonConstructorAttribute.cs"];
m2_11 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.Example()", file="JsonConstructorAttribute.cs"];
m2_12 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConstructorAttribute.cs"];
m2_13 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonConstructorAttribute.cs"];
m2_15 [label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User", span="", file="JsonConstructorAttribute.cs"];
m4_4 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonTextReader.cs"];
m4_0 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonTextReader.cs"];
m4_1 [label="ContractType = JsonContractType.Object", span="165-165", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonTextReader.cs"];
m4_2 [label="Properties = new JsonPropertyCollection(UnderlyingType)", span="167-167", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonTextReader.cs"];
m4_3 [label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonTextReader.cs"];
m4_5 [label="Newtonsoft.Json.Serialization.JsonObjectContract", span="", file="JsonTextReader.cs"];
m5_128 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="JsonTextReaderTest.cs"];
m5_6 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="JsonTextReaderTest.cs"];
m5_0 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", span="70-70", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", file="JsonTextReaderTest.cs"];
m5_1 [label="object[] cases = (object[])FSharpUtils.GetUnionCases(null, t, null)", span="76-76", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_2 [label="object caseInfo = cases.First()", span="78-78", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_3 [label="Type unionType = (Type)FSharpUtils.GetUnionCaseInfoDeclaringType(caseInfo)", span="80-80", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_4 [label="return unionType;", span="81-81", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_5 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", span="70-70", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnionTypeLookup(System.Type)", file="JsonTextReaderTest.cs"];
m5_112 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", span="240-240", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_113 [label="typeof(IEnumerable).IsAssignableFrom(objectType)", span="242-242", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_116 [label="attributes = objectType.GetCustomAttributes(true)", span="251-251", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_125 [label="return (bool)FSharpUtils.IsUnion(null, objectType, null);", span="274-274", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_114 [label="return false;", span="244-244", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_115 [label="object[] attributes", span="249-249", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_117 [label="bool isFSharpType = false", span="256-256", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_118 [label=attributes, span="257-257", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_123 [label="!isFSharpType", span="269-269", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_119 [label="Type attributeType = attribute.GetType()", span="259-259", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_120 [label="attributeType.FullName == ''Microsoft.FSharp.Core.CompilationMappingAttribute''", span="260-260", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_121 [label="FSharpUtils.EnsureInitialized(attributeType.Assembly())", span="262-262", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_122 [label="isFSharpType = true", span="264-264", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_124 [label="return false;", span="271-271", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_126 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", span="240-240", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CanConvert(System.Type)", file="JsonTextReaderTest.cs"];
m5_7 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonTextReaderTest.cs"];
m5_8 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="JsonTextReaderTest.cs"];
m5_49 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="JsonTextReaderTest.cs"];
m5_103 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="JsonTextReaderTest.cs"];
m5_129 [label="Entry System.Type.Assembly()", span="180-180", cluster="System.Type.Assembly()", file="JsonTextReaderTest.cs"];
m5_25 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonTextReaderTest.cs"];
m5_54 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="422-422", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs"];
m5_28 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="114-114", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_29 [label="DefaultContractResolver resolver = serializer.ContractResolver as DefaultContractResolver", span="116-116", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_30 [label="Type unionType = UnionTypeLookupCache.Get(value.GetType())", span="118-118", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_32 [label="int tag = (int)union.TagReader.Invoke(value)", span="121-121", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_34 [label="writer.WriteStartObject()", span="124-124", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_35 [label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(CasePropertyName) : CasePropertyName)", span="125-125", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_36 [label="writer.WriteValue(caseInfo.Name)", span="126-126", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_38 [label="object[] fields = (object[])caseInfo.FieldReader.Invoke(value)", span="129-129", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_39 [label="writer.WritePropertyName((resolver != null) ? resolver.GetResolvedPropertyName(FieldsPropertyName) : FieldsPropertyName)", span="131-131", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_40 [label="writer.WriteStartArray()", span="132-132", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_42 [label="serializer.Serialize(writer, field)", span="135-135", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_43 [label="writer.WriteEndArray()", span="137-137", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_44 [label="writer.WriteEndObject()", span="139-139", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_31 [label="Union union = UnionCache.Get(unionType)", span="119-119", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_33 [label="UnionCase caseInfo = union.Cases.Single(c => c.Tag == tag)", span="122-122", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_37 [label="caseInfo.Fields != null && caseInfo.Fields.Length > 0", span="127-127", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_41 [label=fields, span="133-133", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_45 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="114-114", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_26 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.UnionCase.UnionCase()", span="54-54", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.UnionCase.UnionCase()", file="JsonTextReaderTest.cs"];
m5_51 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1583-1583", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonTextReaderTest.cs"];
m5_55 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextReaderTest.cs"];
m5_108 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="2074-2074", cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_27 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTextReaderTest.cs"];
m5_102 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonTextReaderTest.cs"];
m5_53 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="912-912", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs"];
m5_57 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="414-414", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReaderTest.cs"];
m5_52 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="456-456", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReaderTest.cs"];
m5_47 [label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="52-52", cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="JsonTextReaderTest.cs"];
m5_48 [label="Entry Newtonsoft.Json.Utilities.FSharpFunction.Invoke(params object[])", span="47-47", cluster="Newtonsoft.Json.Utilities.FSharpFunction.Invoke(params object[])", file="JsonTextReaderTest.cs"];
m5_24 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.Union.Union()", span="48-48", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.Union.Union()", file="JsonTextReaderTest.cs"];
m5_56 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="430-430", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextReaderTest.cs"];
m5_9 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", span="84-84", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs"];
m5_10 [label="Union u = new Union()", span="86-86", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_11 [label="u.TagReader = (FSharpFunction)FSharpUtils.PreComputeUnionTagReader(null, t, null)", span="88-88", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_13 [label="object[] cases = (object[])FSharpUtils.GetUnionCases(null, t, null)", span="91-91", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_12 [label="u.Cases = new List<UnionCase>()", span="89-89", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_21 [label="u.Cases.Add(unionCase)", span="102-102", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_22 [label="return u;", span="105-105", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_14 [label=cases, span="93-93", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_15 [label="UnionCase unionCase = new UnionCase()", span="95-95", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_16 [label="unionCase.Tag = (int)FSharpUtils.GetUnionCaseInfoTag(unionCaseInfo)", span="96-96", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_17 [label="unionCase.Name = (string)FSharpUtils.GetUnionCaseInfoName(unionCaseInfo)", span="97-97", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_18 [label="unionCase.Fields = (PropertyInfo[])FSharpUtils.GetUnionCaseInfoFields(unionCaseInfo)", span="98-98", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_19 [label="unionCase.FieldReader = (FSharpFunction)FSharpUtils.PreComputeUnionReader(null, unionCaseInfo, null)", span="99-99", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_20 [label="unionCase.Constructor = (FSharpFunction)FSharpUtils.PreComputeUnionConstructor(null, unionCaseInfo, null)", span="100-100", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs", color=green, community=0];
m5_23 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", span="84-84", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.CreateUnion(System.Type)", file="JsonTextReaderTest.cs"];
m5_61 [label="Entry Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="150-150", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_62 [label="reader.TokenType == JsonToken.Null", span="152-152", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_67 [label="reader.ReadAndAssert()", span="162-162", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_68 [label="reader.TokenType == JsonToken.PropertyName", span="164-164", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_69 [label="string propertyName = reader.Value.ToString()", span="166-166", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_71 [label="reader.ReadAndAssert()", span="169-169", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_72 [label="Union union = UnionCache.Get(objectType)", span="171-171", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_73 [label="caseName = reader.Value.ToString()", span="173-173", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_76 [label="throw JsonSerializationException.Create(reader, ''No union type found with the name '{0}'.''.FormatWith(CultureInfo.InvariantCulture, caseName));", span="179-179", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_78 [label="reader.ReadAndAssert()", span="184-184", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_79 [label="reader.TokenType != JsonToken.StartArray", span="185-185", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_80 [label="throw JsonSerializationException.Create(reader, ''Union fields must been an array.'');", span="187-187", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_81 [label="fields = (JArray)JToken.ReadFrom(reader)", span="190-190", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_82 [label="throw JsonSerializationException.Create(reader, ''Unexpected property '{0}' found when reading union.''.FormatWith(CultureInfo.InvariantCulture, propertyName));", span="194-194", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_83 [label="reader.ReadAndAssert()", span="197-197", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_85 [label="throw JsonSerializationException.Create(reader, ''No '{0}' property with union name found.''.FormatWith(CultureInfo.InvariantCulture, CasePropertyName));", span="202-202", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_88 [label="throw JsonSerializationException.Create(reader, ''No '{0}' property with union fields found.''.FormatWith(CultureInfo.InvariantCulture, FieldsPropertyName));", span="209-209", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_91 [label="throw JsonSerializationException.Create(reader, ''The number of field values does not match the number of properties definied by union '{0}'.''.FormatWith(CultureInfo.InvariantCulture, caseName));", span="216-216", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_96 [label="typedFieldValues[i] = t.ToObject(fieldProperty.PropertyType, serializer)", span="224-224", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_63 [label="return null;", span="154-154", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_64 [label="UnionCase caseInfo = null", span="157-157", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_65 [label="string caseName = null", span="158-158", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_84 [label="caseInfo == null", span="200-200", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_86 [label="object[] typedFieldValues = new object[caseInfo.Fields.Length]", span="205-205", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_87 [label="caseInfo.Fields.Length > 0 && fields == null", span="207-207", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_90 [label="caseInfo.Fields.Length != fields.Count", span="214-214", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_95 [label="PropertyInfo fieldProperty = caseInfo.Fields[i]", span="222-222", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_99 [label="return caseInfo.Constructor.Invoke(args);", span="230-230", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_66 [label="JArray fields = null", span="159-159", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_89 [label="fields != null", span="212-212", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_93 [label="i < fields.Count", span="219-219", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_94 [label="JToken t = fields[i]", span="221-221", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_70 [label="string.Equals(propertyName, CasePropertyName, StringComparison.OrdinalIgnoreCase)", span="167-167", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_77 [label="string.Equals(propertyName, FieldsPropertyName, StringComparison.OrdinalIgnoreCase)", span="182-182", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_74 [label="caseInfo = union.Cases.SingleOrDefault(c => c.Name == caseName)", span="175-175", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_75 [label="caseInfo == null", span="177-177", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_98 [label="object[] args = { typedFieldValues }", span="228-228", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_92 [label="int i = 0", span="219-219", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_97 [label="i++", span="219-219", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_100 [label="Exit Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="150-150", cluster="Newtonsoft.Json.Converters.DiscriminatedUnionConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonTextReaderTest.cs"];
m5_127 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonTextReaderTest.cs"];
m5_130 [label="Entry Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", span="78-78", cluster="Newtonsoft.Json.Utilities.FSharpUtils.EnsureInitialized(System.Reflection.Assembly)", file="JsonTextReaderTest.cs"];
m5_101 [label="Entry Newtonsoft.Json.JsonReader.ReadAndAssert()", span="1124-1124", cluster="Newtonsoft.Json.JsonReader.ReadAndAssert()", file="JsonTextReaderTest.cs"];
m5_109 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_59 [label="c.Tag == tag", span="122-122", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_58 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_60 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_110 [label="c.Name == caseName", span="175-175", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_111 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="JsonTextReaderTest.cs"];
m5_46 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonTextReaderTest.cs"];
m5_107 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2093-2093", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs"];
m5_106 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonTextReaderTest.cs"];
m5_104 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="JsonTextReaderTest.cs"];
m5_50 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="406-406", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReaderTest.cs"];
m5_105 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonTextReaderTest.cs"];
m5_131 [label=tag, span="", file="JsonTextReaderTest.cs"];
m5_132 [label=caseName, span="", file="JsonTextReaderTest.cs"];
m6_272 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Post.Post()", span="608-608", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Post.Post()", file="LinqToJsonTest.cs"];
m6_46 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="LinqToJsonTest.cs"];
m6_227 [label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="272-272", cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="LinqToJsonTest.cs"];
m6_460 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="LinqToJsonTest.cs"];
m6_472 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="LinqToJsonTest.cs"];
m6_42 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", span="101-101", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs"];
m6_44 [label="Assert.AreEqual(0, tokens.Cast<JToken>().Count())", span="105-105", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs"];
m6_43 [label="IEnumerable tokens = new JEnumerable<JToken>()", span="103-103", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs"];
m6_45 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", span="101-101", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableAsEnumerable()", file="LinqToJsonTest.cs"];
m6_266 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="LinqToJsonTest.cs"];
m6_102 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="304-304", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="LinqToJsonTest.cs"];
m6_429 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="LinqToJsonTest.cs"];
m6_16 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_19 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JObject.Parse(''{'key':1,''),\r\n                ''Unexpected end of content while loading JObject. Path 'key', line 1, position 9.'')", span="83-85", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_20 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JObject.Parse(''{'key':1''),\r\n                ''Unexpected end of content while loading JObject. Path 'key', line 1, position 8.'')", span="87-89", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_18 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JArray.Parse(''[1''),\r\n                ''Unexpected end of content while loading JArray. Path '[0]', line 1, position 2.'')", span="79-81", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_17 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JArray.Parse(''[1,''),\r\n                ''Unexpected end of content while loading JArray. Path '[0]', line 1, position 3.'')", span="75-77", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_21 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", span="73-73", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.IncompleteContainers()", file="LinqToJsonTest.cs"];
m6_360 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", span="861-861", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_361 [label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n                    new JProperty(''Test2'', new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0))),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="863-869", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_369 [label="StringAssert.AreEqual(@''{\r\n  ''''Test1'''': new Date(\r\n    971586305000\r\n  ),\r\n  ''''Test2'''': new Date(\r\n    971546045000\r\n  ),\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', json)", span="880-889", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_367 [label="serializer.Serialize(writer, o)", span="876-876", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_362 [label="JsonSerializer serializer = new JsonSerializer()", span="871-871", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_368 [label="string json = sw.ToString()", span="878-878", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_365 [label="JsonWriter writer = new JsonTextWriter(sw)", span="874-874", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_366 [label="writer.Formatting = Formatting.Indented", span="875-875", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_363 [label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="872-872", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_364 [label="StringWriter sw = new StringWriter()", span="873-873", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_370 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", span="861-861", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="LinqToJsonTest.cs"];
m6_241 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", span="517-517", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_243 [label="JObject o = JObject.Parse(json)", span="521-521", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_246 [label="Assert.AreEqual(@''''''Width'''': 1.1'', o.Property(''Width'').ToString())", span="529-529", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_247 [label="Assert.AreEqual(@''1.1'', ((JValue)o.Property(''Width'').Value).ToString(CultureInfo.InvariantCulture))", span="530-530", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_248 [label="Assert.AreEqual(@''''''Open'''': false'', o.Property(''Open'').ToString())", span="531-531", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_249 [label="Assert.AreEqual(@''False'', o.Property(''Open'').Value.ToString())", span="532-532", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_253 [label="Assert.AreEqual(@'''', a.Children().ElementAt(0).ToString())", span="541-541", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_254 [label="Assert.AreEqual(@'''', a.Children().ElementAt(1).ToString())", span="542-542", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_242 [label="string json = @''{''''Color'''':2,''''Establised'''':new Date(1264118400000),''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''öäüÖÄÜ\\'{new Date(12345);}[222]_µ@²³~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':new Date(949532490000),''''Price'''':0},{''''Name'''':''''Alien'''',''''ExpiryDate'''':new Date(-62135596800000),''''Price'''':0}]}''", span="519-519", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_244 [label="StringAssert.AreEqual(@''''''Establised'''': new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').ToString())", span="523-525", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_245 [label="StringAssert.AreEqual(@''new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').Value.ToString())", span="526-528", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_250 [label="json = @''[null,undefined]''", span="534-534", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_251 [label="JArray a = JArray.Parse(json)", span="536-536", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_252 [label="StringAssert.AreEqual(@''[\r\n  null,\r\n  undefined\r\n]'', a.ToString())", span="537-540", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_255 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", span="517-517", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="LinqToJsonTest.cs"];
m6_127 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_131 [label="Assert.AreEqual(expectedPath, value.Path)", span="264-264", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_133 [label="Assert.AreEqual(value, selectedValue)", span="268-268", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_130 [label="JObject o = new JObject(new JProperty(propertyName, value))", span="262-262", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_129 [label="JValue value = new JValue(v1)", span="260-260", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_132 [label="JValue selectedValue = (JValue)o.SelectToken(value.Path)", span="266-266", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_128 [label="int v1 = int.MaxValue", span="259-259", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_134 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", span="257-257", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathAssert(string, string)", file="LinqToJsonTest.cs"];
m6_461 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", span="1188-1188", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_465 [label="UriGuidTimeSpanTestClass c2 = o.ToObject<UriGuidTimeSpanTestClass>()", span="1208-1208", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_466 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="1209-1209", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_467 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="1210-1210", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_468 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="1211-1211", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_469 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="1212-1212", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_470 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="1213-1213", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_463 [label="JObject o = JObject.FromObject(c1)", span="1198-1198", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_464 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com/''''\r\n}'', o.ToString())", span="1200-1206", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_462 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="1190-1197", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_471 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", span="1188-1188", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="LinqToJsonTest.cs"];
m6_532 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="473-473", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="LinqToJsonTest.cs"];
m6_195 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="LinqToJsonTest.cs"];
m6_56 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="LinqToJsonTest.cs"];
m6_10 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="LinqToJsonTest.cs"];
m6_40 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable()", span="41-41", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.JEnumerable()", file="LinqToJsonTest.cs"];
m6_165 [label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="303-303", cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="LinqToJsonTest.cs"];
m6_239 [label="Entry Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="319-319", cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="LinqToJsonTest.cs"];
m6_492 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="LinqToJsonTest.cs"];
m6_176 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", span="328-328", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_178 [label="JObject o = JObject.Parse(json)", span="338-338", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_180 [label="Assert.AreEqual(''CPU'', properties[0].Name)", span="341-341", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_181 [label="Assert.AreEqual(''Intel'', (string)properties[0].Value)", span="342-342", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_182 [label="Assert.AreEqual(''Drives'', properties[1].Name)", span="343-343", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_184 [label="Assert.AreEqual(2, list.Children().Count())", span="346-346", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_185 [label="Assert.AreEqual(''DVD read/writer'', (string)list.Children().ElementAt(0))", span="347-347", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_186 [label="Assert.AreEqual(''500 gigabyte hard drive'', (string)list.Children().ElementAt(1))", span="348-348", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_188 [label="Assert.AreEqual(1, parameterValues.Count)", span="355-355", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_189 [label="Assert.AreEqual(''Intel'', parameterValues[0])", span="356-356", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_177 [label="string json = @''{\r\n        CPU: 'Intel',\r\n        Drives: [\r\n          'DVD read/writer',\r\n          ''''500 gigabyte hard drive''''\r\n        ]\r\n      }''", span="330-336", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_179 [label="IList<JProperty> properties = o.Properties().ToList()", span="339-339", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_187 [label="List<object> parameterValues =\r\n                (from p in o.Properties()\r\n                    where p.Value is JValue\r\n                    select ((JValue)p.Value).Value).ToList()", span="350-353", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_183 [label="JArray list = (JArray)properties[1].Value", span="345-345", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_190 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", span="328-328", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="LinqToJsonTest.cs"];
m6_534 [label="Entry Newtonsoft.Json.Linq.JToken.Remove()", span="377-377", cluster="Newtonsoft.Json.Linq.JToken.Remove()", file="LinqToJsonTest.cs"];
m6_106 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", span="205-205", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_109 [label="Assert.AreEqual(''person.$id'', idProperty.Path)", span="219-219", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_108 [label="JContainer idProperty = o[''person''][''$id''].Parent", span="218-218", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_107 [label="JObject o = new JObject\r\n            {\r\n                {\r\n                    ''person'',\r\n                    new JObject\r\n                    {\r\n                        { ''$id'', 1 }\r\n                    }\r\n                }\r\n            }", span="207-216", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_110 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", span="205-205", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JPropertyPath()", file="LinqToJsonTest.cs"];
m6_203 [label="Entry Newtonsoft.Json.Linq.JContainer.Values<T>()", span="263-263", cluster="Newtonsoft.Json.Linq.JContainer.Values<T>()", file="LinqToJsonTest.cs"];
m6_95 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", span="193-193", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_100 [label="ExceptionAssert.Throws<JsonReaderException>(() => JToken.ReadFrom(jsonReader), @''Error reading JToken from JsonReader. Unexpected token: EndArray. Path '', line 1, position 2.'')", span="201-201", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_97 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="197-197", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_99 [label="jsonReader.Read()", span="199-199", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_96 [label="StringReader textReader = new StringReader(@''[]'')", span="195-195", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_98 [label="jsonReader.Read()", span="198-198", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_101 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", span="193-193", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingEndArrayAndReadFrom()", file="LinqToJsonTest.cs"];
m6_163 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="125-125", cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="LinqToJsonTest.cs"];
m6_26 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="LinqToJsonTest.cs"];
m6_172 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="LinqToJsonTest.cs"];
m6_378 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="LinqToJsonTest.cs"];
m6_121 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", span="249-249", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_122 [label="EscapedPathAssert(''this has spaces'', ''['this has spaces']'')", span="251-251", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_123 [label="EscapedPathAssert(''(RoundBraces)'', ''['(RoundBraces)']'')", span="252-252", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_124 [label="EscapedPathAssert(''[SquareBraces]'', ''['[SquareBraces]']'')", span="253-253", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_125 [label="EscapedPathAssert(''this.has.dots'', ''['this.has.dots']'')", span="254-254", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_126 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", span="249-249", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPathTests()", file="LinqToJsonTest.cs"];
m6_136 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="LinqToJsonTest.cs"];
m6_474 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="LinqToJsonTest.cs"];
m6_74 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_78 [label="Assert.AreEqual(JTokenType.Comment, v.Type)", span="162-162", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_80 [label="Assert.AreEqual(true, lineInfo.HasLineInfo())", span="165-165", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_81 [label="Assert.AreEqual(3, lineInfo.LineNumber)", span="166-166", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_82 [label="Assert.AreEqual(1, lineInfo.LinePosition)", span="167-167", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_77 [label="JValue v = (JValue)JToken.ReadFrom(jsonReader)", span="160-160", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_79 [label="IJsonLineInfo lineInfo = v", span="164-164", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_76 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="159-159", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_75 [label="StringReader textReader = new StringReader(@''\r\n// hi\r\n[\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="151-157", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_83 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", span="149-149", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingCommentAndReadFrom()", file="LinqToJsonTest.cs"];
m6_225 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="LinqToJsonTest.cs"];
m6_291 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="LinqToJsonTest.cs"];
m6_175 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="686-686", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="LinqToJsonTest.cs"];
m6_483 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", span="1230-1230", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_485 [label="IDictionary<string, string> users = new Dictionary<string, string>()", span="1234-1234", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_484 [label="dynamic name = new JValue(''Matthew Doig'')", span="1232-1232", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_486 [label="ExceptionAssert.Throws<Microsoft.CSharp.RuntimeBinder.RuntimeBinderException>(() =>\r\n            {\r\n                users.Add(''name2'', name);\r\n\r\n                Assert.AreEqual(users[''name2''], ''Matthew Doig'');\r\n            }, ''The best overloaded method match for 'System.Collections.Generic.IDictionary<string,string>.Add(string, string)' has some invalid arguments'')", span="1237-1242", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_487 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", span="1230-1230", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="LinqToJsonTest.cs"];
m6_47 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", span="109-109", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_48 [label="JEnumerable<JToken> tokens1 = new JEnumerable<JToken>()", span="111-111", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_49 [label="JEnumerable<JToken> tokens2 = new JEnumerable<JToken>()", span="112-112", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_51 [label="object o1 = new JEnumerable<JToken>()", span="116-116", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_52 [label="object o2 = new JEnumerable<JToken>()", span="117-117", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_50 [label="Assert.IsTrue(tokens1.Equals(tokens2))", span="114-114", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_53 [label="Assert.IsTrue(o1.Equals(o2))", span="119-119", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_54 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", span="109-109", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableEquals()", file="LinqToJsonTest.cs"];
m6_531 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="375-375", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="LinqToJsonTest.cs"];
m6_111 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="LinqToJsonTest.cs"];
m6_533 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="LinqToJsonTest.cs"];
m6_41 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="LinqToJsonTest.cs"];
m6_55 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", span="108-108", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.Equals(Newtonsoft.Json.Linq.JEnumerable<T>)", file="LinqToJsonTest.cs"];
m6_12 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="LinqToJsonTest.cs"];
m6_222 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", span="113-113", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", file="LinqToJsonTest.cs"];
m6_269 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="616-616", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs"];
m6_270 [label="return new List<Post>()\r\n            {\r\n                new Post()\r\n                {\r\n                    Title = ''LINQ to JSON beta'',\r\n                    Description = ''Annoucing LINQ to JSON'',\r\n                    Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n                    Categories = new List<string>() { ''Json.NET'', ''LINQ'' }\r\n                },\r\n                new Post()\r\n                {\r\n                    Title = ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                    Description = ''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'',\r\n                    Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n                    Categories = new List<string>() { ''Json.NET'', ''CodePlex'' }\r\n                }\r\n            };", span="618-634", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs"];
m6_271 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="616-616", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="LinqToJsonTest.cs"];
m6_321 [label="Entry JArray.cstr", span="", cluster="JArray.cstr", file="LinqToJsonTest.cs"];
m6_336 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="LinqToJsonTest.cs"];
m6_449 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="1166-1166", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_453 [label="UriGuidTimeSpanTestClass c2 = o.ToObject<UriGuidTimeSpanTestClass>()", span="1179-1179", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_454 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="1180-1180", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_455 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="1181-1181", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_456 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="1182-1182", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_457 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="1183-1183", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_458 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="1184-1184", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_451 [label="JObject o = JObject.FromObject(c1)", span="1169-1169", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_452 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', o.ToString())", span="1171-1177", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_450 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="1168-1168", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_459 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="1166-1166", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="LinqToJsonTest.cs"];
m6_62 [label="Entry Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", span="134-134", cluster="Newtonsoft.Json.Linq.JEnumerable<T>.GetHashCode()", file="LinqToJsonTest.cs"];
m6_387 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="LinqToJsonTest.cs"];
m6_221 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="123-123", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="LinqToJsonTest.cs"];
m6_512 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="LinqToJsonTest.cs"];
m6_268 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", span="102-102", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", file="LinqToJsonTest.cs"];
m6_137 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="LinqToJsonTest.cs"];
m6_379 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", span="893-893", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_385 [label="Assert.AreEqual(4, jsonWriter.Token.Children().Count())", span="911-911", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_384 [label="jsonSerializer.Serialize(jsonWriter, testDates)", span="908-908", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_383 [label="jsonWriter = new JTokenWriter()", span="906-906", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_380 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="895-901", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_381 [label="JsonSerializer jsonSerializer = new JsonSerializer()", span="903-903", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_382 [label="JTokenWriter jsonWriter", span="905-905", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_386 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", span="893-893", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="LinqToJsonTest.cs"];
m6_85 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", span="171-171", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_89 [label="Assert.AreEqual(JTokenType.Undefined, v.Type)", span="184-184", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_91 [label="Assert.AreEqual(true, lineInfo.HasLineInfo())", span="187-187", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_92 [label="Assert.AreEqual(2, lineInfo.LineNumber)", span="188-188", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_93 [label="Assert.AreEqual(10, lineInfo.LinePosition)", span="189-189", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_88 [label="JValue v = (JValue)JToken.ReadFrom(jsonReader)", span="182-182", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_90 [label="IJsonLineInfo lineInfo = v", span="186-186", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_87 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="181-181", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_86 [label="StringReader textReader = new StringReader(@''\r\nundefined\r\n[\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="173-179", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_94 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", span="171-171", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.StartingUndefinedAndReadFrom()", file="LinqToJsonTest.cs"];
m6_281 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", span="673-673", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_287 [label="Assert.AreEqual(2, since2012.Count)", span="704-704", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_288 [label="Assert.AreEqual(1, linqToJson.Count)", span="705-705", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_284 [label="IList<JToken> since2012 = posts\r\n                .Where(p => (DateTime)p[''Date''] > new DateTime(2012, 1, 1)).ToList()", span="694-695", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_286 [label="Assert.IsNotNull(serializerBasics)", span="703-703", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_285 [label="IList<JToken> linqToJson = posts\r\n                .Where(p => p[''Categories''].Any(c => (string)c == ''LINQ to JSON'')).ToList()", span="699-700", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_282 [label="JArray posts = JArray.Parse(@''[\r\n              {\r\n                'Title': 'JSON Serializer Basics',\r\n                'Date': '2013-12-21T00:00:00',\r\n                'Categories': []\r\n              },\r\n              {\r\n                'Title': 'Querying LINQ to JSON',\r\n                'Date': '2014-06-03T00:00:00',\r\n                'Categories': [\r\n                  'LINQ to JSON'\r\n                ]\r\n              }\r\n            ]'')", span="675-688", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_283 [label="JToken serializerBasics = posts\r\n                .Single(p => (string)p[''Title''] == ''JSON Serializer Basics'')", span="690-691", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_289 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", span="673-673", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.QueryingExample()", file="LinqToJsonTest.cs"];
m6_302 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="LinqToJsonTest.cs"];
m6_194 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="LinqToJsonTest.cs"];
m6_436 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", span="1085-1085", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_439 [label="Assert.AreEqual(12, list1[0])", span="1091-1091", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_440 [label="Assert.AreEqual(55, list1[1])", span="1092-1092", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_438 [label="List<int> list1 = olist.AsEnumerable().Values<int>().ToList()", span="1089-1089", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_437 [label="JToken olist = JArray.Parse(''[12,55]'')", span="1087-1087", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_441 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", span="1085-1085", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqCast()", file="LinqToJsonTest.cs"];
m6_226 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", span="135-135", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", file="LinqToJsonTest.cs"];
m6_352 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", span="850-850", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs"];
m6_353 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JConstructor c = new JConstructor(''ConstructorValue'');\r\n                Assert.AreEqual(null, c[''purple'']);\r\n            }, @''Accessed JConstructor values with invalid key value: ''''purple''''. Argument position index expected.'')", span="852-856", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs"];
m6_354 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", span="850-850", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="LinqToJsonTest.cs"];
m6_72 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="LinqToJsonTest.cs"];
m6_402 [label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object)", span="162-162", cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="LinqToJsonTest.cs"];
m6_196 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="360-360", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_201 [label="CollectionAssert.AreEqual(expected, list)", span="369-369", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_199 [label="List<int> list = a.Values<int>().ToList()", span="365-365", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_200 [label="List<int> expected = new List<int>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }", span="367-367", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_198 [label="JArray a = JArray.Parse(json)", span="364-364", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_197 [label="string json = @''[0,1,2,3,4,5,6,7,8,9]''", span="362-362", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_202 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="360-360", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="LinqToJsonTest.cs"];
m6_143 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91", cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="LinqToJsonTest.cs"];
m6_135 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70", cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="LinqToJsonTest.cs"];
m6_14 [label="Entry System.Guid.Parse(string)", span="0-0", cluster="System.Guid.Parse(string)", file="LinqToJsonTest.cs"];
m6_146 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="285-285", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_149 [label="Assert.AreEqual(-10000d, value)", span="290-290", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_151 [label="Assert.AreEqual(1d, value)", span="293-293", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_148 [label="double value = (double)j[0]", span="289-289", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_150 [label="value = (double)j[1]", span="292-292", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_147 [label="JArray j = JArray.Parse(''[-1E+4,100.0e-2]'')", span="287-287", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_152 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="285-285", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="LinqToJsonTest.cs"];
m6_340 [label="Entry Unk.>", span="", cluster="Unk.>", file="LinqToJsonTest.cs"];
m6_416 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="1044-1044", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_424 [label="Assert.AreEqual(o, enumerable)", span="1061-1061", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_426 [label="Assert.AreEqual(new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc), d)", span="1065-1065", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_421 [label="o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', null)\r\n                    )", span="1052-1057", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_422 [label="enumerable = o.AsJEnumerable()", span="1059-1059", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_423 [label="Assert.IsNotNull(enumerable)", span="1060-1060", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_425 [label="DateTime d = enumerable[''Test1''].Value<DateTime>()", span="1063-1063", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_420 [label="Assert.IsNull(enumerable)", span="1050-1050", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_419 [label="enumerable = o.AsJEnumerable()", span="1049-1049", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_417 [label="JObject o = null", span="1046-1046", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_418 [label="IJEnumerable<JToken> enumerable = null", span="1047-1047", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_427 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="1044-1044", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_359 [label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="122-122", cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="LinqToJsonTest.cs"];
m6_475 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", span="1217-1217", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_477 [label="JObject o = JObject.Parse(json)", span="1220-1220", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_478 [label="Assert.AreEqual(''hi!'', (string)o[''hi''])", span="1221-1221", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_481 [label="Assert.AreEqual(''hi!'', (string)a[0])", span="1225-1225", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_476 [label="string json = @''/* blah */ {'hi':'hi!'}''", span="1219-1219", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_479 [label="json = @''/* blah */ ['hi!']''", span="1223-1223", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_480 [label="JArray a = JArray.Parse(json)", span="1224-1224", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_482 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", span="1217-1217", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="LinqToJsonTest.cs"];
m6_428 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", span="293-293", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", file="LinqToJsonTest.cs"];
m6_11 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1695-1695", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="LinqToJsonTest.cs"];
m6_191 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="LinqToJsonTest.cs"];
m6_265 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="283-283", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="LinqToJsonTest.cs"];
m6_473 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="LinqToJsonTest.cs"];
m6_57 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="LinqToJsonTest.cs"];
m6_36 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", span="93-93", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m6_38 [label="Assert.AreEqual(0, tokens.Count())", span="97-97", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m6_37 [label="JEnumerable<JToken> tokens = new JEnumerable<JToken>()", span="95-95", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m6_39 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", span="93-93", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableCount()", file="LinqToJsonTest.cs"];
m6_372 [label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int)", file="LinqToJsonTest.cs"];
m6_403 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="979-979", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_409 [label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="1035-1035", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_410 [label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="1036-1036", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_413 [label="Assert.AreEqual(5, a.Count())", span="1040-1040", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_405 [label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new Dictionary<string, object>\r\n                {\r\n                    { ''title'', ''James Newton-King'' },\r\n                    { ''link'', ''http://james.newtonking.com'' },\r\n                    { ''description'', ''James Newton-King's blog.'' },\r\n                    {\r\n                        ''item'',\r\n                        (from p in posts\r\n                            orderby p.Title\r\n                            select new\r\n                            {\r\n                                title = p.Title,\r\n                                description = p.Description,\r\n                                link = p.Link,\r\n                                category = p.Categories\r\n                            })\r\n                    }\r\n                }\r\n            })", span="983-1003", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_408 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="1034-1034", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_411 [label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="1038-1038", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_412 [label="CustomAssert.IsInstanceOfType(typeof(JArray), a)", span="1039-1039", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_406 [label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', o.ToString())", span="1005-1031", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_404 [label="List<Post> posts = GetPosts()", span="981-981", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_407 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o)", span="1033-1033", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_414 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="979-979", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="LinqToJsonTest.cs"];
m6_144 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="LinqToJsonTest.cs"];
m6_120 [label="Entry Newtonsoft.Json.Linq.JToken.SelectToken(string)", span="1990-1990", cluster="Newtonsoft.Json.Linq.JToken.SelectToken(string)", file="LinqToJsonTest.cs"];
m6_377 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="860-860", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="LinqToJsonTest.cs"];
m6_173 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="LinqToJsonTest.cs"];
m6_390 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", span="916-916", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_396 [label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="970-970", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_397 [label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="971-971", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_400 [label="Assert.AreEqual(5, a.Count())", span="975-975", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_392 [label="JObject o = JObject.FromObject(new\r\n            {\r\n                channel = new\r\n                {\r\n                    title = ''James Newton-King'',\r\n                    link = ''http://james.newtonking.com'',\r\n                    description = ''James Newton-King's blog.'',\r\n                    item =\r\n                        from p in posts\r\n                        orderby p.Title\r\n                        select new\r\n                        {\r\n                            title = p.Title,\r\n                            description = p.Description,\r\n                            link = p.Link,\r\n                            category = p.Categories\r\n                        }\r\n                }\r\n            })", span="920-938", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_395 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="969-969", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_398 [label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="973-973", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_399 [label="CustomAssert.IsInstanceOfType(typeof(JArray), a)", span="974-974", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_393 [label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', o.ToString())", span="940-966", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_391 [label="List<Post> posts = GetPosts()", span="918-918", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_394 [label="CustomAssert.IsInstanceOfType(typeof(JObject), o)", span="968-968", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_401 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", span="916-916", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="LinqToJsonTest.cs"];
m6_162 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="LinqToJsonTest.cs"];
m6_280 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="377-377", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="LinqToJsonTest.cs"];
m6_443 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="1097-1097", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_446 [label="Assert.AreEqual(4, o.Children()[''item''].Children()[''title''].Count())", span="1154-1154", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_447 [label="CollectionAssert.AreEqual(new string[]\r\n            {\r\n                ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                ''LINQ to JSON beta'',\r\n                ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n                ''LINQ to JSON beta''\r\n            },\r\n                o.Children()[''item''].Children()[''title''].Values<string>().ToArray())", span="1155-1162", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_445 [label="JArray o = JArray.Parse(json)", span="1152-1152", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_444 [label="string json = @''[\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        },\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      ]''", span="1099-1150", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_448 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="1097-1097", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="LinqToJsonTest.cs"];
m6_513 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="LinqToJsonTest.cs"];
m6_374 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="LinqToJsonTest.cs"];
m6_138 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", span="272-272", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_141 [label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''value!''''\r\n}'', friend.ToString())", span="278-280", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_139 [label="JArray items = new JArray(new JObject(new JProperty(''name'', ''value!'')))", span="274-274", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_140 [label=items, span="276-276", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_142 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", span="272-272", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ForEach()", file="LinqToJsonTest.cs"];
m6_415 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="LinqToJsonTest.cs"];
m6_345 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="840-840", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs"];
m6_346 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JArray a = new JArray();\r\n                Assert.AreEqual(null, a[''purple'']);\r\n            }, @''Accessed JArray values with invalid key value: ''''purple''''. Array position index expected.'')", span="842-846", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs"];
m6_347 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="840-840", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="LinqToJsonTest.cs"];
m6_13 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="LinqToJsonTest.cs"];
m6_0 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", span="57-57", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_1 [label="JObject o = JObject.Parse(''{'responseArray':'AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'}'')", span="59-59", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", color=green, community=0, file="LinqToJsonTest.cs"];
m6_2 [label="byte[] data = o[''responseArray''].ToObject<byte[]>()", span="60-60", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", color=green, community=0, file="LinqToJsonTest.cs"];
m6_3 [label="byte[] expected = Convert.FromBase64String(''AAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA'')", span="61-61", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", color=green, community=0, file="LinqToJsonTest.cs"];
m6_4 [label="CollectionAssert.AreEqual(expected, data)", span="63-63", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", color=green, community=0, file="LinqToJsonTest.cs"];
m6_5 [label="o = JObject.Parse(''{'responseArray':'AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'}'')", span="65-65", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", color=green, community=0, file="LinqToJsonTest.cs"];
m6_6 [label="data = o[''responseArray''].ToObject<byte[]>()", span="66-66", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", color=green, community=0, file="LinqToJsonTest.cs"];
m6_7 [label="expected = Guid.Parse(''AAAAAAAA-AAAA-AAAA-AAAA-AAAAAAABAAAA'').ToByteArray()", span="67-67", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", color=green, community=0, file="LinqToJsonTest.cs"];
m6_8 [label="CollectionAssert.AreEqual(expected, data)", span="69-69", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", color=green, community=0, file="LinqToJsonTest.cs"];
m6_9 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", span="57-57", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToObject_Base64AndGuid()", file="LinqToJsonTest.cs"];
m6_164 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="LinqToJsonTest.cs"];
m6_292 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="LinqToJsonTest.cs"];
m6_112 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", span="223-223", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_114 [label="JObject o = JObject.Parse(json)", span="237-237", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_116 [label="Assert.AreEqual(''frameworks.dnxcore50.dependencies.['System.Xml.ReaderWriter'].source'', v1.Path)", span="241-241", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_118 [label="Assert.AreEqual(v1, v2)", span="245-245", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_113 [label="string json = @''{\r\n  ''''frameworks'''': {\r\n    ''''dnxcore50'''': {\r\n      ''''dependencies'''': {\r\n        ''''System.Xml.ReaderWriter'''': {\r\n          ''''source'''': ''''NuGet''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="225-235", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_115 [label="JToken v1 = o[''frameworks''][''dnxcore50''][''dependencies''][''System.Xml.ReaderWriter''][''source'']", span="239-239", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_117 [label="JToken v2 = o.SelectToken(v1.Path)", span="243-243", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_119 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", span="223-223", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EscapedPath()", file="LinqToJsonTest.cs"];
m6_224 [label="Entry System.Collections.Generic.IEnumerable<T>.Children<T>()", span="221-221", cluster="System.Collections.Generic.IEnumerable<T>.Children<T>()", file="LinqToJsonTest.cs"];
m6_323 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", span="146-146", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", file="LinqToJsonTest.cs"];
m6_371 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="LinqToJsonTest.cs"];
m6_324 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="784-784", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_326 [label="JObject o = JObject.Parse(json)", span="814-814", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_327 [label="Assert.AreEqual(null, o[''purple''])", span="816-816", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_328 [label="Assert.AreEqual(null, o.Value<string>(''purple''))", span="817-817", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_330 [label="Assert.AreEqual(2, o[''channel''][''item''].Children()[''title''].Count())", span="821-821", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_331 [label="Assert.AreEqual(0, o[''channel''][''item''].Children()[''monkey''].Count())", span="822-822", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_332 [label="Assert.AreEqual(''Json.NET 1.3 + New license + Now on CodePlex'', (string)o[''channel''][''item''][0][''title''])", span="824-824", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_333 [label="CollectionAssert.AreEqual(new string[] { ''Json.NET 1.3 + New license + Now on CodePlex'', ''LINQ to JSON beta'' }, o[''channel''][''item''].Children().Values<string>(''title'').ToArray())", span="826-826", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_325 [label="string json = @''{\r\n                        ''''channel'''': {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      }''", span="786-812", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_329 [label="CustomAssert.IsInstanceOfType(typeof(JArray), o[''channel''][''item''])", span="819-819", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_334 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="784-784", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="LinqToJsonTest.cs"];
m6_376 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="LinqToJsonTest.cs"];
m6_193 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="251-251", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="LinqToJsonTest.cs"];
m6_145 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="327-327", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="LinqToJsonTest.cs"];
m6_303 [label="Entry lambda expression", span="700-700", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_31 [label="JObject.Parse(''{'key':1,'')", span="84-84", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_34 [label="JObject.Parse(''{'key':1'')", span="88-88", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_343 [label="Assert.AreEqual(null, o[0])", span="835-835", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_350 [label="Assert.AreEqual(null, a[''purple''])", span="845-845", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_357 [label="Assert.AreEqual(null, c[''purple''])", span="855-855", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_490 [label="Assert.AreEqual(users[''name2''], ''Matthew Doig'')", span="1241-1241", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_30 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_32 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_33 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_35 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_342 [label="JObject o = new JObject()", span="834-834", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_344 [label="Exit lambda expression", span="832-836", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_349 [label="JArray a = new JArray()", span="844-844", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_351 [label="Exit lambda expression", span="842-846", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_356 [label="JConstructor c = new JConstructor(''ConstructorValue'')", span="854-854", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_358 [label="Exit lambda expression", span="852-856", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_489 [label="users.Add(''name2'', name)", span="1239-1239", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_491 [label="Exit lambda expression", span="1237-1242", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_542 [label="idProperty.Value.ToString() == r.Value.ToString()", span="1321-1321", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_296 [label="Entry lambda expression", span="695-695", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_299 [label="Entry lambda expression", span="700-700", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_341 [label="Entry lambda expression", span="832-836", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_348 [label="Entry lambda expression", span="842-846", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_355 [label="Entry lambda expression", span="852-856", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_488 [label="Entry lambda expression", span="1237-1242", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_104 [label="JToken.ReadFrom(jsonReader)", span="201-201", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_541 [label="Entry lambda expression", span="1321-1321", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_543 [label="Exit lambda expression", span="1321-1321", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_24 [label="JArray.Parse(''[1,'')", span="76-76", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_28 [label="JArray.Parse(''[1'')", span="80-80", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_293 [label="Entry lambda expression", span="691-691", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_298 [label="Exit lambda expression", span="695-695", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_297 [label="(DateTime)p[''Date''] > new DateTime(2012, 1, 1)", span="695-695", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_301 [label="Exit lambda expression", span="700-700", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_300 [label="p[''Categories''].Any(c => (string)c == ''LINQ to JSON'')", span="700-700", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_27 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_535 [label="Entry lambda expression", span="1311-1311", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_538 [label="Entry lambda expression", span="1316-1316", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_103 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_105 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_23 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_25 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_29 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_295 [label="Exit lambda expression", span="691-691", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_294 [label="(string)p[''Title''] == ''JSON Serializer Basics''", span="691-691", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_537 [label="Exit lambda expression", span="1311-1311", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_536 [label="d.Name == ''$id''", span="1311-1311", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_540 [label="Exit lambda expression", span="1316-1316", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_539 [label="d.Name == ''$ref''", span="1316-1316", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_304 [label="(string)c == ''LINQ to JSON''", span="700-700", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_305 [label="Exit lambda expression", span="700-700", cluster="lambda expression", file="LinqToJsonTest.cs"];
m6_73 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="LinqToJsonTest.cs"];
m6_161 [label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65", cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="LinqToJsonTest.cs"];
m6_514 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_528 [label="string json = t.ToString()", span="1332-1332", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_521 [label="IList<JProperty> ids = c.Descendants().OfType<JProperty>().Where(d => d.Name == ''$id'').ToList()", span="1311-1311", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_523 [label="IList<JProperty> refs = c.Descendants().OfType<JProperty>().Where(d => d.Name == ''$ref'').ToList()", span="1316-1316", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_518 [label="JToken t = writer.Token", span="1304-1304", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_519 [label="t is JContainer", span="1306-1306", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_522 [label="ids.Count > 0", span="1313-1313", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_524 [label=ids, span="1318-1318", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_529 [label="return json;", span="1333-1333", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_517 [label="serializer.Serialize(writer, o)", span="1302-1302", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_515 [label="JTokenWriter writer = new JTokenWriter()", span="1296-1296", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_520 [label="JContainer c = t as JContainer", span="1308-1308", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_525 [label="bool idUsed = refs.Any(r => idProperty.Value.ToString() == r.Value.ToString())", span="1321-1321", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_527 [label="idProperty.Remove()", span="1326-1326", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_526 [label="!idUsed", span="1323-1323", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_516 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="1297-1301", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_530 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", span="1294-1294", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdProperties(object)", file="LinqToJsonTest.cs"];
m6_192 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="LinqToJsonTest.cs"];
m6_257 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="546-546", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_259 [label="Assert.AreEqual(4, o.Properties().Count())", span="556-556", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_262 [label="Assert.AreEqual(5, a.Count())", span="584-584", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_258 [label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', ''Test1Value''),\r\n                    new JProperty(''Test2'', ''Test2Value''),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="548-554", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_260 [label="StringAssert.AreEqual(@''{\r\n  ''''Test1'''': ''''Test1Value'''',\r\n  ''''Test2'''': ''''Test2Value'''',\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', o.ToString())", span="558-563", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_261 [label="JArray a =\r\n                new JArray(\r\n                    o,\r\n                    new DateTime(2000, 10, 10, 0, 0, 0, DateTimeKind.Utc),\r\n                    55,\r\n                    new JArray(\r\n                        ''1'',\r\n                        2,\r\n                        3.0,\r\n                        new DateTime(4, 5, 6, 7, 8, 9, DateTimeKind.Utc)\r\n                        ),\r\n                    new JConstructor(\r\n                        ''ConstructorName'',\r\n                        ''param1'',\r\n                        2,\r\n                        3.0\r\n                        )\r\n                    )", span="565-582", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_263 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Test1'''': ''''Test1Value'''',\r\n    ''''Test2'''': ''''Test2Value'''',\r\n    ''''Test3'''': ''''Test3Value'''',\r\n    ''''Test4'''': null\r\n  },\r\n  ''''2000-10-10T00:00:00Z'''',\r\n  55,\r\n  [\r\n    ''''1'''',\r\n    2,\r\n    3.0,\r\n    ''''0004-05-06T07:08:09Z''''\r\n  ],\r\n  new ConstructorName(\r\n    ''''param1'''',\r\n    2,\r\n    3.0\r\n  )\r\n]'', a.ToString())", span="585-605", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_264 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="546-546", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="LinqToJsonTest.cs"];
m6_335 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="297-297", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="LinqToJsonTest.cs"];
m6_71 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="LinqToJsonTest.cs"];
m6_430 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="157-157", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="LinqToJsonTest.cs"];
m6_290 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="LinqToJsonTest.cs"];
m6_493 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", span="1247-1247", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_510 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''list1'''': [\r\n    ''''A string!'''',\r\n    {\r\n      ''''$ref'''': ''''1''''\r\n    },\r\n    []\r\n  ],\r\n  ''''list2'''': [],\r\n  ''''dic1'''': {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  ''''dic2'''': {},\r\n  ''''dic3'''': {\r\n    ''''$id'''': ''''3'''',\r\n    ''''dic3'''': {\r\n      ''''$ref'''': ''''3''''\r\n    }\r\n  },\r\n  ''''integer'''': 12345\r\n}'', json)", span="1270-1291", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_497 [label="List<object> list1 = new List<object>()", span="1252-1252", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_498 [label="List<object> list2 = new List<object>()", span="1253-1253", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_507 [label="list1.Add(new List<object>())", span="1264-1264", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_494 [label="Dictionary<string, object> dic1 = new Dictionary<string, object>()", span="1249-1249", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_495 [label="Dictionary<string, object> dic2 = new Dictionary<string, object>()", span="1250-1250", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_496 [label="Dictionary<string, object> dic3 = new Dictionary<string, object>()", span="1251-1251", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_509 [label="var json = SerializeWithNoRedundentIdProperties(dic1)", span="1268-1268", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_499 [label="dic1.Add(''list1'', list1)", span="1255-1255", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_505 [label="list1.Add(''A string!'')", span="1262-1262", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_506 [label="list1.Add(dic1)", span="1263-1263", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_500 [label="dic1.Add(''list2'', list2)", span="1256-1256", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_508 [label="dic3.Add(''dic3'', dic3)", span="1266-1266", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_501 [label="dic1.Add(''dic1'', dic1)", span="1257-1257", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_502 [label="dic1.Add(''dic2'', dic2)", span="1258-1258", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_503 [label="dic1.Add(''dic3'', dic3)", span="1259-1259", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_504 [label="dic1.Add(''integer'', 12345)", span="1260-1260", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_511 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", span="1247-1247", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.SerializeWithNoRedundentIdPropertiesTest()", file="LinqToJsonTest.cs"];
m6_174 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="LinqToJsonTest.cs"];
m6_240 [label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="239-239", cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="LinqToJsonTest.cs"];
m6_204 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="LinqToJsonTest.cs"];
m6_58 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", span="123-123", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m6_60 [label="Assert.AreEqual(0, tokens.GetHashCode())", span="127-127", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m6_59 [label="JEnumerable<JToken> tokens = new JEnumerable<JToken>()", span="125-125", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m6_61 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", span="123-123", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.EmptyJEnumerableGetHashCode()", file="LinqToJsonTest.cs"];
m6_63 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", span="131-131", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_67 [label="Assert.AreEqual(4, a.Count)", span="143-143", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_68 [label="Assert.AreEqual(JTokenType.Comment, a[0].Type)", span="144-144", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_69 [label="Assert.AreEqual('' hi'', ((JValue)a[0]).Value)", span="145-145", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_66 [label="JArray a = (JArray)JToken.ReadFrom(jsonReader)", span="141-141", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_65 [label="JsonTextReader jsonReader = new JsonTextReader(textReader)", span="140-140", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_64 [label="StringReader textReader = new StringReader(@''[\r\n    // hi\r\n    1,\r\n    2,\r\n    3\r\n]'')", span="133-138", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_70 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", span="131-131", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CommentsAndReadFrom()", file="LinqToJsonTest.cs"];
m6_388 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="LinqToJsonTest.cs"];
m6_306 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="709-709", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_311 [label="Assert.AreEqual(''Json.NET 1.3 + New license + Now on CodePlex'', postTitles.ElementAt(0))", span="765-765", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_312 [label="Assert.AreEqual(''LINQ to JSON beta'', postTitles.ElementAt(1))", span="766-766", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_314 [label="Assert.AreEqual(''Json.NET'', categories.ElementAt(0).Category)", span="775-775", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_315 [label="Assert.AreEqual(2, categories.ElementAt(0).Count)", span="776-776", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_316 [label="Assert.AreEqual(''CodePlex'', categories.ElementAt(1).Category)", span="777-777", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_317 [label="Assert.AreEqual(1, categories.ElementAt(1).Count)", span="778-778", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_318 [label="Assert.AreEqual(''LINQ'', categories.ElementAt(2).Category)", span="779-779", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_319 [label="Assert.AreEqual(1, categories.ElementAt(2).Count)", span="780-780", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_310 [label="var postTitles =\r\n                from p in rss[''channel''][''item'']\r\n                select p.Value<string>(''title'')", span="761-763", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_313 [label="var categories =\r\n                from c in rss[''channel''][''item''].Children()[''category''].Values<string>()\r\n                group c by c\r\n                into g\r\n                orderby g.Count() descending\r\n                select new { Category = g.Key, Count = g.Count() }", span="768-773", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_309 [label="StringAssert.AreEqual(@''{\r\n  ''''channel'''': {\r\n    ''''title'''': ''''James Newton-King'''',\r\n    ''''link'''': ''''http://james.newtonking.com'''',\r\n    ''''description'''': ''''James Newton-King's blog.'''',\r\n    ''''item'''': [\r\n      {\r\n        ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n        ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''CodePlex''''\r\n        ]\r\n      },\r\n      {\r\n        ''''title'''': ''''LINQ to JSON beta'''',\r\n        ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n        ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n        ''''category'''': [\r\n          ''''Json.NET'''',\r\n          ''''LINQ''''\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}'', rss.ToString())", span="733-759", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_308 [label="JObject rss =\r\n                new JObject(\r\n                    new JProperty(''channel'',\r\n                        new JObject(\r\n                            new JProperty(''title'', ''James Newton-King''),\r\n                            new JProperty(''link'', ''http://james.newtonking.com''),\r\n                            new JProperty(''description'', ''James Newton-King's blog.''),\r\n                            new JProperty(''item'',\r\n                                new JArray(\r\n                                    from p in posts\r\n                                    orderby p.Title\r\n                                    select new JObject(\r\n                                        new JProperty(''title'', p.Title),\r\n                                        new JProperty(''description'', p.Description),\r\n                                        new JProperty(''link'', p.Link),\r\n                                        new JProperty(''category'',\r\n                                            new JArray(\r\n                                                from c in p.Categories\r\n                                                select new JValue(c)))))))))", span="713-731", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_307 [label="List<Post> posts = GetPosts()", span="711-711", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_320 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="709-709", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="LinqToJsonTest.cs"];
m6_228 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="479-479", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_230 [label="JObject o = JObject.Parse(json)", span="489-489", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_235 [label="Assert.AreEqual(@''''''CPU'''': ''''Intel'''''', cpuProperty.ToString())", span="507-507", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_229 [label="string json = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="481-487", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_231 [label="StringAssert.AreEqual(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer'''',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'', o.ToString())", span="491-497", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_232 [label="JArray list = o.Value<JArray>(''Drives'')", span="499-499", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_234 [label="JProperty cpuProperty = o.Property(''CPU'')", span="506-506", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_236 [label="JProperty drivesProperty = o.Property(''Drives'')", span="509-509", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_233 [label="StringAssert.AreEqual(@''[\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', list.ToString())", span="501-504", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_237 [label="StringAssert.AreEqual(@''''''Drives'''': [\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', drivesProperty.ToString())", span="510-513", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_238 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="479-479", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="LinqToJsonTest.cs"];
m6_375 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="LinqToJsonTest.cs"];
m6_273 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", span="638-638", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_277 [label="string json = o.ToString()", span="654-654", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_278 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''How to use FromObject - Super effective!'''',\r\n  ''''Description'''': null,\r\n  ''''Link'''': null,\r\n  ''''Categories'''': [\r\n    ''''LINQ to JSON''''\r\n  ]\r\n}'', json)", span="662-669", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_275 [label="JObject o = JObject.FromObject(p)", span="650-650", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_276 [label="o[''Title''] = o[''Title''] + '' - Super effective!''", span="652-652", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_274 [label="Post p = new Post\r\n            {\r\n                Title = ''How to use FromObject'',\r\n                Categories = new [] { ''LINQ to JSON'' }\r\n            }", span="640-644", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_279 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", span="638-638", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObjectExample()", file="LinqToJsonTest.cs"];
m6_219 [label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="359-359", cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="LinqToJsonTest.cs"];
m6_84 [label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38", cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="LinqToJsonTest.cs"];
m6_431 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="1070-1070", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_434 [label="Assert.AreEqual(4, values.Count())", span="1079-1079", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_433 [label="IJEnumerable<JToken> values = o.Properties()", span="1078-1078", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_432 [label="IEnumerable<JObject> o = new[]\r\n            {\r\n                JObject.FromObject(new { First = 1, Second = 2 }),\r\n                JObject.FromObject(new { First = 1, Second = 2 })\r\n            }", span="1072-1076", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_435 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="1070-1070", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="LinqToJsonTest.cs"];
m6_256 [label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="819-819", cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="LinqToJsonTest.cs"];
m6_322 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="LinqToJsonTest.cs"];
m6_166 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="314-314", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_170 [label="Assert.AreEqual(''John Smith'', p.Name)", span="324-324", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_169 [label="Person p = (Person)serializer.Deserialize(new JTokenReader(o), typeof(Person))", span="322-322", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_167 [label="JObject o = new JObject(\r\n                new JProperty(''Name'', ''John Smith''),\r\n                new JProperty(''BirthDate'', new DateTime(1983, 3, 20))\r\n                )", span="316-319", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_168 [label="JsonSerializer serializer = new JsonSerializer()", span="321-321", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_171 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="314-314", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="LinqToJsonTest.cs"];
m6_220 [label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", span="100-100", cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", file="LinqToJsonTest.cs"];
m6_337 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="830-830", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs"];
m6_338 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                JObject o = new JObject();\r\n                Assert.AreEqual(null, o[0]);\r\n            }, ''Accessed JObject values with invalid key value: 0. Object property name expected.'')", span="832-836", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs"];
m6_339 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="830-830", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="LinqToJsonTest.cs"];
m6_373 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="LinqToJsonTest.cs"];
m6_15 [label="Entry System.Guid.ToByteArray()", span="0-0", cluster="System.Guid.ToByteArray()", file="LinqToJsonTest.cs"];
m6_442 [label="Entry System.Collections.Generic.IEnumerable<TSource>.AsEnumerable<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.AsEnumerable<TSource>()", file="LinqToJsonTest.cs"];
m6_267 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="LinqToJsonTest.cs"];
m6_153 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="297-297", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_159 [label="string json = array.ToString()", span="306-306", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_154 [label="JArray array = new JArray()", span="299-299", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_158 [label="array.Add(date)", span="304-304", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_156 [label="JValue date = new JValue(new DateTime(2000, 5, 23))", span="301-301", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_155 [label="JValue text = new JValue(''Manual text'')", span="300-300", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_157 [label="array.Add(text)", span="303-303", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_160 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="297-297", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="LinqToJsonTest.cs"];
m6_389 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="LinqToJsonTest.cs"];
m6_205 [label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="373-373", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_207 [label="JObject o = JObject.Parse(json)", span="456-456", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_212 [label="Assert.AreEqual(5, o.PropertyValues().Cast<JArray>().Children().Count())", span="466-466", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_209 [label="Assert.AreEqual(32, resultObjects.Properties().Count())", span="460-460", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_210 [label="Assert.AreEqual(32, resultObjects.Cast<JToken>().Values().Count())", span="462-462", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_211 [label="Assert.AreEqual(4, resultObjects.Cast<JToken>().Values(''GsearchResultClass'').Count())", span="464-464", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_215 [label="CollectionAssert.AreEqual(expectedUrls, resultUrls)", span="472-472", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_217 [label="Assert.AreEqual(89, descendants.Count)", span="475-475", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_206 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="376-453", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_208 [label="List<JObject> resultObjects = o[''results''].Children<JObject>().ToList()", span="458-458", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_213 [label="List<string> resultUrls = o[''results''].Children().Values<string>(''url'').ToList()", span="468-468", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_216 [label="List<JToken> descendants = o.Descendants().ToList()", span="474-474", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_214 [label="List<string> expectedUrls = new List<string>() { ''http://www.google.com/'', ''http://news.google.com/'', ''http://groups.google.com/'', ''http://maps.google.com/'' }", span="470-470", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_218 [label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="373-373", cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="LinqToJsonTest.cs"];
m6_22 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="354-354", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="LinqToJsonTest.cs"];
m6_223 [label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="253-253", cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="LinqToJsonTest.cs"];
m6_547 [label=users, span="", file="LinqToJsonTest.cs"];
m6_546 [label=name, span="", file="LinqToJsonTest.cs"];
m6_545 [label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", span="", file="LinqToJsonTest.cs"];
m6_548 [label=idProperty, span="", file="LinqToJsonTest.cs"];
m6_544 [label=jsonReader, span="", file="LinqToJsonTest.cs"];
m7_101 [label="Entry Unk.>", span="", cluster="Unk.>", file="Program.cs"];
m7_15 [label="Entry System.Console.ReadKey()", span="0-0", cluster="System.Console.ReadKey()", file="Program.cs"];
m7_0 [label="Entry Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_1 [label="Console.WriteLine(''Json.NET Test Console'')", span="42-42", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_2 [label="string version = FileVersionInfo.GetVersionInfo(typeof(JsonConvert).Assembly.Location).FileVersion", span="44-44", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", color=green, community=0, file="Program.cs"];
m7_3 [label="Console.WriteLine(''Json.NET Version: '' + version)", span="45-45", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_4 [label="Console.ReadKey()", span="46-46", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_5 [label="Console.WriteLine(''Doing stuff...'')", span="48-48", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_6 [label="DiscriminatedUnionConverterTests t = new DiscriminatedUnionConverterTests()", span="58-58", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_7 [label="t.SerializePerformance()", span="59-59", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_8 [label="t.DeserializePerformance()", span="60-60", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs", color=green, community=0];
m7_9 [label="Console.WriteLine()", span="62-62", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_10 [label="Console.WriteLine(''Press any key to exit'')", span="63-63", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_11 [label="Console.ReadKey()", span="64-64", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_12 [label="Exit Newtonsoft.Json.TestConsole.Program.Main(string[])", span="40-40", cluster="Newtonsoft.Json.TestConsole.Program.Main(string[])", file="Program.cs"];
m7_19 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DeserializePerformance()", file="Program.cs"];
m7_20 [label="PerformanceTests t = new PerformanceTests()", span="69-69", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m7_21 [label="t.Iterations = 50000", span="70-70", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m7_22 [label="t.Deserialize()", span="71-71", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m7_23 [label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeJson()", span="67-67", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeJson()", file="Program.cs"];
m7_100 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="Program.cs"];
m7_30 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="182-182", cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="Program.cs"];
m7_24 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", span="66-66", cluster="Newtonsoft.Json.Tests.PerformanceTests.PerformanceTests()", file="Program.cs"];
m7_77 [label="Entry System.IO.File.OpenText(string)", span="0-0", cluster="System.IO.File.OpenText(string)", file="Program.cs"];
m7_54 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="433-433", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="Program.cs"];
m7_31 [label="Entry Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="80-80", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_32 [label="var json = System.IO.File.ReadAllText(''large.json'')", span="82-82", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_33 [label="IList<PerformanceTests.RootObject> o = JsonConvert.DeserializeObject<IList<PerformanceTests.RootObject>>(json)", span="84-84", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_34 [label="Console.WriteLine(''Press any key to start serialize'')", span="86-86", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_44 [label="serializer.Serialize(file, o)", span="99-99", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_35 [label="Console.ReadKey()", span="87-87", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_36 [label="Console.WriteLine(''Serializing...'')", span="88-88", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_37 [label="Stopwatch sw = new Stopwatch()", span="90-90", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_38 [label="sw.Start()", span="91-91", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_46 [label="sw.Stop()", span="103-103", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_47 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="105-105", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_39 [label="int i = 0", span="93-93", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_40 [label="i < 10", span="93-93", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_45 [label="i++", span="93-93", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_41 [label="StreamWriter file = System.IO.File.CreateText(''largewrite.json'')", span="95-95", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_42 [label="JsonSerializer serializer = new JsonSerializer()", span="97-97", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_43 [label="serializer.Formatting = Formatting.Indented", span="98-98", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_48 [label="Exit Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", span="80-80", cluster="Newtonsoft.Json.TestConsole.Program.WriteLargeJson()", file="Program.cs"];
m7_80 [label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="139-139", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_81 [label="string json = System.IO.File.ReadAllText(''large.json'')", span="141-141", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_82 [label="JavaScriptSerializer s = new JavaScriptSerializer()", span="143-143", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_84 [label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="145-145", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_83 [label="s.MaxJsonLength = int.MaxValue", span="144-144", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_85 [label="Console.WriteLine(''Press any key to start deserialization'')", span="147-147", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_86 [label="Console.ReadKey()", span="148-148", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_87 [label="Console.WriteLine(''Deserializing...'')", span="149-149", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_88 [label="Stopwatch sw = new Stopwatch()", span="151-151", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_89 [label="sw.Start()", span="152-152", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_97 [label="sw.Stop()", span="163-163", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_98 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="165-165", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_90 [label="int i = 0", span="154-154", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_91 [label="i < 5", span="154-154", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_96 [label="i++", span="154-154", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_92 [label="json = System.IO.File.ReadAllText(''large.json'')", span="156-156", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_93 [label="s = new JavaScriptSerializer()", span="158-158", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_95 [label="s.Deserialize<IList<PerformanceTests.RootObject>>(json)", span="160-160", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_94 [label="s.MaxJsonLength = int.MaxValue", span="159-159", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_99 [label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", span="139-139", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJsonJavaScriptSerializer()", file="Program.cs"];
m7_13 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Program.cs"];
m7_25 [label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="219-219", cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="Program.cs"];
m7_53 [label="Entry System.IO.File.CreateText(string)", span="0-0", cluster="System.IO.File.CreateText(string)", file="Program.cs"];
m7_17 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.SerializePerformance()", file="Program.cs"];
m7_49 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="Program.cs"];
m7_16 [label="Entry Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", span="41-41", cluster="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests.DiscriminatedUnionConverterTests()", file="Program.cs"];
m7_50 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="Program.cs"];
m7_14 [label="Entry System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", span="0-0", cluster="System.Diagnostics.FileVersionInfo.GetVersionInfo(string)", file="Program.cs"];
m7_79 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="674-674", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="Program.cs"];
m7_52 [label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0", cluster="System.Diagnostics.Stopwatch.Start()", file="Program.cs"];
m7_55 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="817-817", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="Program.cs"];
m7_78 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="Program.cs"];
m7_26 [label="Entry Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="74-74", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m7_27 [label="PerformanceTests t = new PerformanceTests()", span="76-76", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m7_28 [label="t.DeserializeLargeJson()", span="77-77", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m7_29 [label="Exit Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", span="74-74", cluster="Newtonsoft.Json.TestConsole.Program.DeserializeLargeJson()", file="Program.cs"];
m7_51 [label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="Program.cs"];
m7_57 [label="Entry Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="108-108", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_58 [label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="110-110", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_59 [label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="111-111", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_60 [label="JsonSerializer serializer = new JsonSerializer()", span="113-113", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_61 [label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="114-114", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_62 [label="Console.WriteLine(''Press any key to start deserialization'')", span="117-117", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_63 [label="Console.ReadKey()", span="118-118", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_64 [label="Console.WriteLine(''Deserializing...'')", span="119-119", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_65 [label="Stopwatch sw = new Stopwatch()", span="121-121", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_66 [label="sw.Start()", span="122-122", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_74 [label="sw.Stop()", span="134-134", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_75 [label="Console.WriteLine(''Finished. Total seconds: '' + sw.Elapsed.TotalSeconds)", span="136-136", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_67 [label="int i = 0", span="124-124", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_68 [label="i < 5", span="124-124", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_73 [label="i++", span="124-124", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_69 [label="var jsonFile = System.IO.File.OpenText(''large.json'')", span="126-126", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_70 [label="JsonTextReader jsonTextReader = new JsonTextReader(jsonFile)", span="127-127", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_71 [label="JsonSerializer serializer = new JsonSerializer()", span="129-129", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_72 [label="serializer.Deserialize<IList<PerformanceTests.RootObject>>(jsonTextReader)", span="130-130", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_76 [label="Exit Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", span="108-108", cluster="Newtonsoft.Json.TestConsole.Program.ReadLargeJson()", file="Program.cs"];
m7_56 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="Program.cs"];
m7_18 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="Program.cs"];
m0_140 -> m0_141  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_136  [key=2, style=dotted];
m0_141 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_142 -> m0_140  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_21  [key=2, style=dotted];
m0_64 -> m0_30  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_24  [key=2, style=dotted];
m0_66 -> m0_63  [key=0, style=bold, color=blue];
m0_146 -> m0_147  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_136  [key=2, style=dotted];
m0_147 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_148 -> m0_146  [key=0, style=bold, color=blue];
m0_133 -> m0_134  [key=0, style=solid];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_136  [key=2, style=dotted];
m0_134 -> m0_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_135 -> m0_133  [key=0, style=bold, color=blue];
m0_164 -> m0_165  [key=0, style=solid];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_136  [key=2, style=dotted];
m0_165 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_166 -> m0_164  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_62  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_62  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_46  [key=2, style=dotted];
m0_53 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=ts];
m0_53 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=ts];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_47  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_48  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_49  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_59  [key=0, style=solid];
m0_58 -> m0_56  [key=0, style=solid];
m0_58 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_61 -> m0_50  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_62  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_24  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_62  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_24  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_62  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_24  [key=2, style=dotted];
m0_74 -> m0_67  [key=0, style=bold, color=blue];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_62  [key=2, style=dotted];
m0_76 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_24  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label=r];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_24  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_24  [key=2, style=dotted];
m0_81 -> m0_75  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_30  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_24  [key=2, style=dotted];
m0_29 -> m0_26  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_5  [key=0, style=bold, color=blue];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_43  [key=2, style=dotted];
m0_32 -> m0_21  [key=2, style=dotted];
m0_32 -> m0_44  [key=2, style=dotted];
m0_32 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=values];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_45  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_30  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_46  [key=2, style=dotted];
m0_34 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=ts];
m0_34 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=ts];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_47  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_48  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_49  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_40  [key=0, style=solid];
m0_39 -> m0_37  [key=0, style=solid];
m0_39 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_42 -> m0_31  [key=0, style=bold, color=blue];
m0_359 -> m0_360  [key=0, style=solid, color=green];
m0_360 -> m0_361  [key=0, style=solid, color=green];
m0_360 -> m0_362  [key=2, style=dotted, color=green];
m0_361 -> m0_359  [key=0, style=bold, color=blue];
m0_106 -> m0_107  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_21  [key=2, style=dotted];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_107 -> m0_111  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_115  [key=2, style=dotted];
m0_108 -> m0_82  [key=2, style=dotted];
m0_108 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=union];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_116  [key=2, style=dotted];
m0_109 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=tag];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_116  [key=2, style=dotted];
m0_111 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label=fields];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_117  [key=2, style=dotted];
m0_110 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_24  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_24  [key=2, style=dotted];
m0_114 -> m0_106  [key=0, style=bold, color=blue];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_82 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_97  [key=2, style=dotted];
m0_83 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label=u];
m0_83 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=u];
m0_83 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label=u];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_98  [key=2, style=dotted];
m0_84 -> m0_99  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_100  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_43  [key=2, style=dotted];
m0_94 -> m0_87  [key=0, style=solid];
m0_94 -> m0_105  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_95  [key=0, style=solid];
m0_87 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_87 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_87 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_87 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_87 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_101  [key=2, style=dotted];
m0_88 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_88 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_88 -> m0_92  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_88 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_88 -> m0_94  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m0_89 -> m0_90  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_102  [key=2, style=dotted];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_103  [key=2, style=dotted];
m0_92 -> m0_99  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_104  [key=2, style=dotted];
m0_93 -> m0_99  [key=2, style=dotted];
m0_96 -> m0_82  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_82  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_117  [key=2, style=dotted];
m0_123 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_116  [key=2, style=dotted];
m0_124 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_124 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_129  [key=2, style=dotted];
m0_125 -> m0_24  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_24  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_24  [key=2, style=dotted];
m0_128 -> m0_121  [key=0, style=bold, color=blue];
m0_158 -> m0_159  [key=0, style=solid];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_136  [key=2, style=dotted];
m0_159 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_160 -> m0_158  [key=0, style=bold, color=blue];
m0_170 -> m0_171  [key=0, style=solid];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_21  [key=2, style=dotted];
m0_171 -> m0_179  [key=2, style=dotted];
m0_171 -> m0_180  [key=2, style=dotted];
m0_171 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_24  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_62  [key=2, style=dotted];
m0_173 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_24  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=r];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_24  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_24  [key=2, style=dotted];
m0_178 -> m0_170  [key=0, style=bold, color=blue];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_136  [key=2, style=dotted];
m0_153 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_154 -> m0_152  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_21  [key=2, style=dotted];
m0_13 -> m0_22  [key=2, style=dotted];
m0_13 -> m0_23  [key=2, style=dotted];
m0_13 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_24  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_22  [key=2, style=dotted];
m0_15 -> m0_25  [key=2, style=dotted];
m0_15 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_24  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=r];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_24  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_24  [key=2, style=dotted];
m0_20 -> m0_12  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=2, style=dotted];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_167 -> m0_168  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_120 -> m0_118  [key=0, style=bold, color=blue];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_132 -> m0_130  [key=0, style=bold, color=blue];
m0_137 -> m0_138  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_62  [key=2, style=dotted];
m0_139 -> m0_137  [key=0, style=bold, color=blue];
m0_143 -> m0_144  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_62  [key=2, style=dotted];
m0_145 -> m0_143  [key=0, style=bold, color=blue];
m0_149 -> m0_150  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_62  [key=2, style=dotted];
m0_151 -> m0_149  [key=0, style=bold, color=blue];
m0_155 -> m0_156  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_62  [key=2, style=dotted];
m0_157 -> m0_155  [key=0, style=bold, color=blue];
m0_161 -> m0_162  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_62  [key=2, style=dotted];
m0_163 -> m0_161  [key=0, style=bold, color=blue];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_62  [key=2, style=dotted];
m0_169 -> m0_167  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_181 -> m0_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests"];
m0_181 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests"];
m0_182 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label=tag];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_8  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.MemberSerialization GetObjectMemberSerialization"];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_0  [key=2, style=dotted];
m1_5 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=objectAttribute];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_4  [key=0, style=bold, color=blue];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_105 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_105 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_105 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_105 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_105 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MemberInfo"];
m1_105 -> m1_16  [key=3, color=darkorchid, style=bold, label="method methodReturn T GetAttribute"];
m1_105 -> m1_131  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MemberInfo memberInfo"];
m1_106 -> m1_107  [key=0, style=solid];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_68  [key=2, style=dotted];
m1_107 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_107 -> m1_21  [key=2, style=dotted];
m1_107 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_126  [key=2, style=dotted];
m1_109 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=metadataTypeMemberInfo];
m1_109 -> m1_116  [key=2, style=dotted];
m1_109 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=tag];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_103  [key=2, style=dotted];
m1_114 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m1_114 -> m1_106  [key=0, style=bold, color=blue];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_124  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_124  [key=0, style=solid];
m1_118 -> m1_104  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_126  [key=2, style=dotted];
m1_119 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label=interfaceTypeMemberInfo];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_114  [key=0, style=solid];
m1_108 -> m1_115  [key=2, style=dotted];
m1_108 -> m1_82  [key=2, style=dotted];
m1_108 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=union];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_114  [key=0, style=solid];
m1_110 -> m1_117  [key=2, style=dotted];
m1_110 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_103  [key=2, style=dotted];
m1_111 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label=fields];
m1_111 -> m1_116  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_114  [key=0, style=solid];
m1_112 -> m1_24  [key=2, style=dotted];
m1_113 -> m1_125  [key=0, style=solid];
m1_113 -> m1_24  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_117  [key=0, style=solid];
m1_116 -> m1_125  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_116  [key=2, style=dotted];
m1_124 -> m1_126  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_124 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=value];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_118  [key=0, style=bold, color=blue];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_103  [key=2, style=dotted];
m1_121 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_118  [key=0, style=solid];
m1_122 -> m1_82  [key=2, style=dotted];
m1_123 -> m1_125  [key=0, style=solid];
m1_123 -> m1_117  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_125 -> m1_105  [key=0, style=bold, color=blue];
m1_125 -> m1_24  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_129  [key=2, style=dotted];
m1_126 -> m1_24  [key=2, style=dotted];
m1_126 -> m1_127  [key=0, style=solid];
m1_85 -> m1_43  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_87  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m1_68 -> m1_62  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_18  [key=2, style=dotted];
m1_69 -> m1_24  [key=2, style=dotted];
m1_70 -> m1_68  [key=0, style=bold, color=blue];
m1_70 -> m1_62  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_136  [key=2, style=dotted];
m1_142 -> m1_140  [key=0, style=bold, color=blue];
m1_55 -> m1_36  [key=3, color=green, style=bold, label="Local variable int i"];
m1_55 -> m1_56  [key=0, style=solid, color=green];
m1_55 -> m1_58  [key=1, style=dashed, color=green, label=i];
m1_63 -> m1_64  [key=0, style=solid];
m1_64 -> m1_30  [key=2, style=dotted];
m1_64 -> m1_21  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_24  [key=2, style=dotted];
m1_65 -> m1_67  [key=2, style=dotted];
m1_66 -> m1_63  [key=0, style=bold, color=blue];
m1_66 -> m1_64  [key=0, style=bold, color=blue];
m1_146 -> m1_147  [key=0, style=solid];
m1_147 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_136  [key=2, style=dotted];
m1_148 -> m1_146  [key=0, style=bold, color=blue];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_18  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_135  [key=0, style=solid];
m1_133 -> m1_105  [key=2, style=dotted];
m1_134 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_136  [key=2, style=dotted];
m1_134 -> m1_103  [key=2, style=dotted];
m1_135 -> m1_133  [key=0, style=bold, color=blue];
m1_135 -> m1_127  [key=0, style=bold, color=blue];
m1_164 -> m1_165  [key=0, style=solid];
m1_165 -> m1_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_136  [key=2, style=dotted];
m1_166 -> m1_164  [key=0, style=bold, color=blue];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_57  [key=2, style=dotted];
m1_44 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label=parameterizedConstructorInfo];
m1_67 -> m1_68  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_54  [key=0, style=solid];
m1_50 -> m1_60  [key=2, style=dotted];
m1_50 -> m1_61  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid, color=green];
m1_54 -> m1_47  [key=2, style=dotted];
m1_54 -> m1_41  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid, color=green];
m1_56 -> m1_59  [key=0, style=solid, color=green];
m1_58 -> m1_56  [key=0, style=solid, color=green];
m1_58 -> m1_58  [key=1, style=dashed, color=green, label=i];
m1_57 -> m1_58  [key=0, style=solid, color=green];
m1_57 -> m1_62  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_48  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=ts];
m1_53 -> m1_46  [key=2, style=dotted];
m1_53 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label=ts];
m1_53 -> m1_63  [key=2, style=dotted];
m1_53 -> m1_61  [key=2, style=dotted];
m1_51 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_51 -> m1_51  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_54  [key=0, style=solid];
m1_51 -> m1_62  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_49  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_62  [key=2, style=dotted];
m1_61 -> m1_50  [key=0, style=bold, color=blue];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_98  [key=2, style=dotted];
m1_84 -> m1_99  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_55  [key=2, style=dotted];
m1_43 -> m1_56  [key=2, style=dotted];
m1_43 -> m1_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_72 -> m1_62  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_82  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_24  [key=2, style=dotted];
m1_71 -> m1_16  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Type GetAssociateMetadataTypeFromAttribute"];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_24  [key=2, style=dotted];
m1_73 -> m1_80  [key=0, style=solid];
m1_73 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m1_74 -> m1_67  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_83  [key=2, style=dotted];
m1_74 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=attributeType];
m1_35 -> m1_36  [key=0, style=solid, color=green];
m1_35 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_35 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_35 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_35 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_35 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_35 -> m1_47  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid, color=green];
m1_36 -> m1_39  [key=2, style=dotted];
m1_36 -> m1_40  [key=2, style=dotted];
m1_36 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label=defaultConstructor];
m1_36 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label=defaultConstructor];
m1_36 -> m1_36  [key=3, color=green, style=bold, label="Local variable int i"];
m1_37 -> m1_38  [key=0, style=solid, color=green];
m1_37 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m1_37 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m1_37 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m1_37 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=ex];
m1_37 -> m1_40  [key=0, style=solid, color=green];
m1_38 -> m1_35  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid, color=green];
m1_38 -> m1_30  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_51  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_48  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_73  [key=0, style=solid];
m1_75 -> m1_84  [key=2, style=dotted];
m1_76 -> m1_62  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=metadataClassTypeName];
m1_76 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label=metadataClassTypeName];
m1_76 -> m1_76  [key=3, color=darkorchid, style=bold, label="Local variable string metadataClassTypeName"];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_24  [key=2, style=dotted];
m1_77 -> m1_79  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_78 -> m1_85  [key=2, style=dotted];
m1_79 -> m1_24  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_81  [key=0, style=solid];
m1_79 -> m1_86  [key=2, style=dotted];
m1_80 -> m1_24  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_81 -> m1_75  [key=0, style=bold, color=blue];
m1_81 -> m1_71  [key=0, style=bold, color=blue];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_87 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_87 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_87 -> m1_16  [key=3, color=darkorchid, style=bold, label="method methodReturn T GetAttribute"];
m1_87 -> m1_128  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type type"];
m1_87 -> m1_95  [key=0, style=solid];
m1_87 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_87 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_87 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_87 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=unionCaseInfo];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_88 -> m1_101  [key=2, style=dotted];
m1_88 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_88 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_88 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_88 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=unionCase];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_68  [key=2, style=dotted];
m1_89 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=metadataType];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_103  [key=2, style=dotted];
m1_94 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m1_94 -> m1_87  [key=0, style=solid];
m1_94 -> m1_105  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_101  [key=0, style=solid];
m1_97 -> m1_104  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_94  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_103  [key=2, style=dotted];
m1_91 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m1_91 -> m1_102  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_94  [key=0, style=solid];
m1_92 -> m1_99  [key=2, style=dotted];
m1_92 -> m1_103  [key=2, style=dotted];
m1_93 -> m1_102  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_99  [key=2, style=dotted];
m1_93 -> m1_104  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_97  [key=0, style=solid];
m1_96 -> m1_102  [key=0, style=solid];
m1_96 -> m1_82  [key=0, style=bold, color=blue];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_103  [key=2, style=dotted];
m1_98 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m1_101 -> m1_102  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_97  [key=0, style=solid];
m1_100 -> m1_102  [key=0, style=solid];
m1_102 -> m1_87  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_19  [key=2, style=dotted];
m1_27 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_24  [key=0, style=bold, color=blue];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_24  [key=2, style=dotted];
m1_28 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonContainerAttribute"];
m1_28 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonContainerAttribute"];
m1_28 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonContainerAttribute"];
m1_28 -> m1_16  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.NamingStrategy GetContainerNamingStrategy"];
m1_29 -> m1_26  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_33  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_100  [key=2, style=dotted];
m1_136 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_136 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_136 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_136 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m1_20 -> m1_12  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_18  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_19  [key=2, style=dotted];
m1_23 -> m1_20  [key=0, style=bold, color=blue];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_131  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_34  [key=0, style=solid];
m1_39 -> m1_37  [key=0, style=solid, color=green];
m1_39 -> m1_39  [key=1, style=dashed, color=green, label=i];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=ts];
m1_34 -> m1_46  [key=2, style=dotted];
m1_34 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=ts];
m1_34 -> m1_28  [key=0, style=bold, color=blue];
m1_32 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=values];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_43  [key=2, style=dotted];
m1_32 -> m1_21  [key=2, style=dotted];
m1_32 -> m1_44  [key=2, style=dotted];
m1_32 -> m1_24  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_49  [key=2, style=dotted];
m1_41 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m1_41 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_45  [key=2, style=dotted];
m1_42 -> m1_31  [key=0, style=bold, color=blue];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_49  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_16  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.JsonConverter GetJsonConverter"];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_0  [key=2, style=dotted];
m1_11 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=converterAttribute];
m1_11 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=converterAttribute];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_16  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_13 -> m1_21  [key=2, style=dotted];
m1_13 -> m1_22  [key=2, style=dotted];
m1_13 -> m1_23  [key=2, style=dotted];
m1_15 -> m1_17  [key=0, style=solid];
m1_15 -> m1_19  [key=2, style=dotted];
m1_15 -> m1_22  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_25  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_24  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=0, style=solid];
m1_14 -> m1_24  [key=2, style=dotted];
m1_17 -> m1_10  [key=0, style=bold, color=blue];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_127 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_127 -> m1_87  [key=3, color=darkorchid, style=bold, label="method methodReturn T GetAttribute"];
m1_127 -> m1_105  [key=3, color=darkorchid, style=bold, label="method methodReturn T GetAttribute"];
m1_127 -> m1_24  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_128 -> m1_121  [key=0, style=bold, color=blue];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label=memberInfo];
m1_130 -> m1_135  [key=0, style=solid];
m1_130 -> m1_87  [key=2, style=dotted];
m1_130 -> m1_131  [key=0, style=solid];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_134  [key=0, style=solid];
m1_132 -> m1_130  [key=0, style=bold, color=blue];
m1_19 -> m1_24  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_18 -> m1_18  [key=3, color=darkorchid, style=bold, label="Field variable string ValuePropertyName"];
m1_18 -> m1_24  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="object[]"];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_48  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_173 -> m1_62  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=c];
m1_171 -> m1_21  [key=2, style=dotted];
m1_171 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_179  [key=2, style=dotted];
m1_171 -> m1_180  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_24  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_24  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=r];
m1_176 -> m1_24  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_177 -> m1_24  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_178 -> m1_170  [key=0, style=bold, color=blue];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_82 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_83 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=u];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_97  [key=2, style=dotted];
m1_83 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=u];
m1_83 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label=u];
m1_158 -> m1_159  [key=0, style=solid];
m1_159 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_136  [key=2, style=dotted];
m1_160 -> m1_158  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_4  [key=3, color=darkorchid, style=bold, label="Parameter variable object attributeProvider"];
m1_0 -> m1_10  [key=3, color=darkorchid, style=bold, label="Parameter variable object attributeProvider"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_152 -> m1_153  [key=0, style=solid];
m1_153 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_136  [key=2, style=dotted];
m1_154 -> m1_152  [key=0, style=bold, color=blue];
m1_47 -> m1_54  [key=0, style=solid];
m1_47 -> m1_59  [key=2, style=dotted];
m1_48 -> m1_54  [key=0, style=solid];
m1_48 -> m1_60  [key=2, style=dotted];
m1_48 -> m1_61  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_58  [key=2, style=dotted];
m1_138 -> m1_62  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_144 -> m1_62  [key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_150 -> m1_62  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_156 -> m1_62  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_162 -> m1_62  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_168 -> m1_62  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label=defaultConstructor];
m1_137 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label=defaultConstructor];
m1_139 -> m1_137  [key=0, style=bold, color=blue];
m1_143 -> m1_144  [key=0, style=solid];
m1_145 -> m1_143  [key=0, style=bold, color=blue];
m1_149 -> m1_150  [key=0, style=solid];
m1_151 -> m1_149  [key=0, style=bold, color=blue];
m1_155 -> m1_156  [key=0, style=solid];
m1_157 -> m1_155  [key=0, style=bold, color=blue];
m1_161 -> m1_162  [key=0, style=solid];
m1_163 -> m1_161  [key=0, style=bold, color=blue];
m1_167 -> m1_168  [key=0, style=solid];
m1_169 -> m1_167  [key=0, style=bold, color=blue];
m1_181 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests"];
m1_181 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.DiscriminatedUnionConverterTests"];
m1_182 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label=tag];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_4  [key=1, style=dashed, color=green, label=bool];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_5 -> m2_2  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid, color=green];
m2_7 -> m2_7  [key=3, color=green, style=bold, label="Local variable string json"];
m2_7 -> m2_8  [key=0, style=solid, color=green];
m2_8 -> m2_9  [key=0, style=solid, color=green];
m2_8 -> m2_12  [key=2, style=dotted, color=green];
m2_8 -> m2_10  [key=1, style=dashed, color=green, label=user];
m2_9 -> m2_10  [key=0, style=solid, color=green];
m2_9 -> m2_13  [key=2, style=dotted, color=green];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_10 -> m2_14  [key=2, style=dotted, color=green];
m2_11 -> m2_6  [key=0, style=bold, color=blue];
m2_15 -> m2_3  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User"];
m2_15 -> m2_4  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConstructorAttribute.User"];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_4  [key=2, style=dotted];
m4_3 -> m4_0  [key=0, style=bold, color=blue];
m4_5 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m4_5 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_6  [key=2, style=dotted, color=green];
m5_2 -> m5_3  [key=0, style=solid, color=green];
m5_2 -> m5_7  [key=2, style=dotted, color=green];
m5_3 -> m5_4  [key=0, style=solid, color=green];
m5_3 -> m5_8  [key=2, style=dotted, color=green];
m5_4 -> m5_5  [key=0, style=solid, color=green];
m5_5 -> m5_0  [key=0, style=bold, color=blue];
m5_112 -> m5_113  [key=0, style=solid];
m5_112 -> m5_116  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_112 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_115  [key=0, style=solid];
m5_113 -> m5_127  [key=2, style=dotted];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_128  [key=2, style=dotted];
m5_116 -> m5_118  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m5_125 -> m5_126  [key=0, style=solid];
m5_125 -> m5_6  [key=2, style=dotted];
m5_114 -> m5_126  [key=0, style=solid];
m5_115 -> m5_116  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_117 -> m5_123  [key=1, style=dashed, color=darkseagreen4, label=isFSharpType];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_123  [key=0, style=solid];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_125  [key=0, style=solid];
m5_119 -> m5_120  [key=0, style=solid];
m5_119 -> m5_46  [key=2, style=dotted];
m5_119 -> m5_121  [key=1, style=dashed, color=darkseagreen4, label=attributeType];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_118  [key=0, style=solid];
m5_121 -> m5_122  [key=0, style=solid];
m5_121 -> m5_129  [key=2, style=dotted];
m5_121 -> m5_130  [key=2, style=dotted];
m5_122 -> m5_123  [key=0, style=solid];
m5_124 -> m5_126  [key=0, style=solid];
m5_126 -> m5_112  [key=0, style=bold, color=blue];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_28 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_28 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_28 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_28 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_28 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=object];
m5_28 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_28 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_28 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_28 -> m5_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_28 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m5_29 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_46  [key=2, style=dotted];
m5_30 -> m5_47  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_48  [key=2, style=dotted];
m5_32 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=tag];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_50  [key=2, style=dotted];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_51  [key=2, style=dotted];
m5_35 -> m5_52  [key=2, style=dotted];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_53  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_48  [key=2, style=dotted];
m5_38 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_51  [key=2, style=dotted];
m5_39 -> m5_52  [key=2, style=dotted];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_54  [key=2, style=dotted];
m5_42 -> m5_41  [key=0, style=solid];
m5_42 -> m5_55  [key=2, style=dotted];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_56  [key=2, style=dotted];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_57  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_47  [key=2, style=dotted];
m5_31 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=union];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_49  [key=2, style=dotted];
m5_33 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_33 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_33 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_33 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_44  [key=0, style=solid];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_43  [key=0, style=solid];
m5_45 -> m5_28  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid, color=green];
m5_9 -> m5_11  [key=1, style=dashed, color=green, label="System.Type"];
m5_9 -> m5_13  [key=1, style=dashed, color=green, label="System.Type"];
m5_10 -> m5_11  [key=0, style=solid, color=green];
m5_10 -> m5_24  [key=2, style=dotted, color=green];
m5_10 -> m5_12  [key=1, style=dashed, color=green, label=u];
m5_10 -> m5_21  [key=1, style=dashed, color=green, label=u];
m5_10 -> m5_22  [key=1, style=dashed, color=green, label=u];
m5_11 -> m5_12  [key=0, style=solid, color=green];
m5_11 -> m5_6  [key=2, style=dotted, color=green];
m5_13 -> m5_14  [key=0, style=solid, color=green];
m5_13 -> m5_6  [key=2, style=dotted, color=green];
m5_12 -> m5_13  [key=0, style=solid, color=green];
m5_12 -> m5_25  [key=2, style=dotted, color=green];
m5_21 -> m5_14  [key=0, style=solid, color=green];
m5_21 -> m5_27  [key=2, style=dotted, color=green];
m5_22 -> m5_23  [key=0, style=solid, color=green];
m5_14 -> m5_15  [key=0, style=solid, color=green];
m5_14 -> m5_22  [key=0, style=solid, color=green];
m5_14 -> m5_16  [key=1, style=dashed, color=green, label=unionCaseInfo];
m5_14 -> m5_17  [key=1, style=dashed, color=green, label=unionCaseInfo];
m5_14 -> m5_18  [key=1, style=dashed, color=green, label=unionCaseInfo];
m5_14 -> m5_19  [key=1, style=dashed, color=green, label=unionCaseInfo];
m5_14 -> m5_20  [key=1, style=dashed, color=green, label=unionCaseInfo];
m5_15 -> m5_16  [key=0, style=solid, color=green];
m5_15 -> m5_26  [key=2, style=dotted, color=green];
m5_15 -> m5_17  [key=1, style=dashed, color=green, label=unionCase];
m5_15 -> m5_18  [key=1, style=dashed, color=green, label=unionCase];
m5_15 -> m5_19  [key=1, style=dashed, color=green, label=unionCase];
m5_15 -> m5_20  [key=1, style=dashed, color=green, label=unionCase];
m5_15 -> m5_21  [key=1, style=dashed, color=green, label=unionCase];
m5_16 -> m5_17  [key=0, style=solid, color=green];
m5_16 -> m5_8  [key=2, style=dotted, color=green];
m5_17 -> m5_18  [key=0, style=solid, color=green];
m5_17 -> m5_8  [key=2, style=dotted, color=green];
m5_18 -> m5_19  [key=0, style=solid, color=green];
m5_18 -> m5_6  [key=2, style=dotted, color=green];
m5_19 -> m5_20  [key=0, style=solid, color=green];
m5_19 -> m5_6  [key=2, style=dotted, color=green];
m5_20 -> m5_21  [key=0, style=solid, color=green];
m5_20 -> m5_6  [key=2, style=dotted, color=green];
m5_23 -> m5_9  [key=0, style=bold, color=blue];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m5_61 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_80  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_83  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_88  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m5_61 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializer"];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_64  [key=0, style=solid];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_101  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_84  [key=0, style=solid];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_102  [key=2, style=dotted];
m5_69 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m5_69 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_101  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_47  [key=2, style=dotted];
m5_72 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=union];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_102  [key=2, style=dotted];
m5_73 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m5_73 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m5_73 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m5_76 -> m5_100  [key=0, style=solid];
m5_76 -> m5_105  [key=2, style=dotted];
m5_76 -> m5_106  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_101  [key=2, style=dotted];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_81  [key=0, style=solid];
m5_80 -> m5_100  [key=0, style=solid];
m5_80 -> m5_106  [key=2, style=dotted];
m5_81 -> m5_83  [key=0, style=solid];
m5_81 -> m5_107  [key=2, style=dotted];
m5_81 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_81 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_81 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_81 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_81 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_82 -> m5_100  [key=0, style=solid];
m5_82 -> m5_105  [key=2, style=dotted];
m5_82 -> m5_106  [key=2, style=dotted];
m5_83 -> m5_68  [key=0, style=solid];
m5_83 -> m5_101  [key=2, style=dotted];
m5_85 -> m5_100  [key=0, style=solid];
m5_85 -> m5_105  [key=2, style=dotted];
m5_85 -> m5_106  [key=2, style=dotted];
m5_88 -> m5_100  [key=0, style=solid];
m5_88 -> m5_105  [key=2, style=dotted];
m5_88 -> m5_106  [key=2, style=dotted];
m5_91 -> m5_100  [key=0, style=solid];
m5_91 -> m5_105  [key=2, style=dotted];
m5_91 -> m5_106  [key=2, style=dotted];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_108  [key=2, style=dotted];
m5_63 -> m5_100  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_64 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_64 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_64 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_64 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_64 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_86  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=typedFieldValues];
m5_86 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=typedFieldValues];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_89  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_92  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_48  [key=2, style=dotted];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_66 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_66 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_66 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_66 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=fields];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_98  [key=0, style=solid];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_98  [key=0, style=solid];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=t];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_77  [key=0, style=solid];
m5_70 -> m5_103  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_82  [key=0, style=solid];
m5_77 -> m5_103  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_104  [key=2, style=dotted];
m5_74 -> m5_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_74 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_74 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_74 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_74 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_74 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_74 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=caseInfo];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_83  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_92 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_92 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_92 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_97 -> m5_93  [key=0, style=solid];
m5_97 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_100 -> m5_61  [key=0, style=bold, color=blue];
m5_109 -> m5_110  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_58 -> m5_59  [key=0, style=solid];
m5_60 -> m5_58  [key=0, style=bold, color=blue];
m5_110 -> m5_111  [key=0, style=solid];
m5_111 -> m5_109  [key=0, style=bold, color=blue];
m5_131 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label=tag];
m5_132 -> m5_110  [key=1, style=dashed, color=darkseagreen4, label=caseName];
m6_42 -> m6_43  [key=0, style=solid];
m6_44 -> m6_13  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_46  [key=2, style=dotted];
m6_44 -> m6_41  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_40  [key=2, style=dotted];
m6_45 -> m6_42  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid];
m6_19 -> m6_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_22  [key=2, style=dotted];
m6_20 -> m6_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=2, style=dotted];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_22  [key=2, style=dotted];
m6_18 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_22  [key=2, style=dotted];
m6_17 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_21 -> m6_16  [key=0, style=bold, color=blue];
m6_360 -> m6_361  [key=0, style=solid];
m6_361 -> m6_267  [key=2, style=dotted];
m6_361 -> m6_137  [key=2, style=dotted];
m6_361 -> m6_172  [key=2, style=dotted];
m6_361 -> m6_265  [key=2, style=dotted];
m6_361 -> m6_362  [key=0, style=solid];
m6_361 -> m6_371  [key=2, style=dotted];
m6_361 -> m6_372  [key=2, style=dotted];
m6_361 -> m6_367  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_369 -> m6_145  [key=2, style=dotted];
m6_369 -> m6_370  [key=0, style=solid];
m6_367 -> m6_377  [key=2, style=dotted];
m6_367 -> m6_368  [key=0, style=solid];
m6_362 -> m6_173  [key=2, style=dotted];
m6_362 -> m6_367  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m6_362 -> m6_363  [key=0, style=solid];
m6_368 -> m6_369  [key=0, style=solid];
m6_368 -> m6_378  [key=2, style=dotted];
m6_365 -> m6_367  [key=1, style=dashed, color=darkseagreen4, label=writer];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_376  [key=2, style=dotted];
m6_366 -> m6_367  [key=0, style=solid];
m6_363 -> m6_364  [key=0, style=solid];
m6_363 -> m6_373  [key=2, style=dotted];
m6_363 -> m6_374  [key=2, style=dotted];
m6_364 -> m6_368  [key=1, style=dashed, color=darkseagreen4, label=sw];
m6_364 -> m6_365  [key=0, style=solid];
m6_364 -> m6_375  [key=2, style=dotted];
m6_370 -> m6_360  [key=0, style=bold, color=blue];
m6_241 -> m6_242  [key=0, style=solid];
m6_243 -> m6_10  [key=2, style=dotted];
m6_243 -> m6_244  [key=0, style=solid];
m6_243 -> m6_245  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_243 -> m6_246  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_243 -> m6_247  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_243 -> m6_248  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_243 -> m6_249  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_246 -> m6_13  [key=2, style=dotted];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_240  [key=2, style=dotted];
m6_246 -> m6_144  [key=2, style=dotted];
m6_247 -> m6_13  [key=2, style=dotted];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_240  [key=2, style=dotted];
m6_247 -> m6_256  [key=2, style=dotted];
m6_248 -> m6_13  [key=2, style=dotted];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_240  [key=2, style=dotted];
m6_248 -> m6_144  [key=2, style=dotted];
m6_249 -> m6_13  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_240  [key=2, style=dotted];
m6_249 -> m6_144  [key=2, style=dotted];
m6_253 -> m6_13  [key=2, style=dotted];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_193  [key=2, style=dotted];
m6_253 -> m6_194  [key=2, style=dotted];
m6_253 -> m6_144  [key=2, style=dotted];
m6_254 -> m6_13  [key=2, style=dotted];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_193  [key=2, style=dotted];
m6_254 -> m6_194  [key=2, style=dotted];
m6_254 -> m6_144  [key=2, style=dotted];
m6_242 -> m6_243  [key=0, style=solid];
m6_242 -> m6_242  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_240  [key=2, style=dotted];
m6_244 -> m6_144  [key=2, style=dotted];
m6_244 -> m6_145  [key=2, style=dotted];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_240  [key=2, style=dotted];
m6_245 -> m6_144  [key=2, style=dotted];
m6_245 -> m6_145  [key=2, style=dotted];
m6_250 -> m6_251  [key=0, style=solid];
m6_251 -> m6_253  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_251 -> m6_254  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_26  [key=2, style=dotted];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_144  [key=2, style=dotted];
m6_252 -> m6_145  [key=2, style=dotted];
m6_255 -> m6_241  [key=0, style=bold, color=blue];
m6_127 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_127 -> m6_122  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m6_127 -> m6_123  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m6_127 -> m6_124  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m6_127 -> m6_125  [key=3, color=darkorchid, style=bold, label="Parameter variable string expectedPath"];
m6_131 -> m6_13  [key=2, style=dotted];
m6_131 -> m6_132  [key=0, style=solid];
m6_133 -> m6_13  [key=2, style=dotted];
m6_133 -> m6_134  [key=0, style=solid];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_136  [key=2, style=dotted];
m6_130 -> m6_137  [key=2, style=dotted];
m6_130 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_129 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_129 -> m6_133  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_135  [key=2, style=dotted];
m6_129 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label=value];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_120  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_128  [key=3, color=darkorchid, style=bold, label="Local variable int v1"];
m6_134 -> m6_127  [key=0, style=bold, color=blue];
m6_461 -> m6_462  [key=0, style=solid];
m6_465 -> m6_11  [key=2, style=dotted];
m6_465 -> m6_466  [key=0, style=solid];
m6_465 -> m6_467  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_465 -> m6_468  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_465 -> m6_469  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_465 -> m6_470  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_466 -> m6_13  [key=2, style=dotted];
m6_466 -> m6_467  [key=0, style=solid];
m6_467 -> m6_13  [key=2, style=dotted];
m6_467 -> m6_468  [key=0, style=solid];
m6_468 -> m6_13  [key=2, style=dotted];
m6_468 -> m6_469  [key=0, style=solid];
m6_469 -> m6_13  [key=2, style=dotted];
m6_469 -> m6_470  [key=0, style=solid];
m6_470 -> m6_13  [key=2, style=dotted];
m6_470 -> m6_471  [key=0, style=solid];
m6_463 -> m6_465  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_463 -> m6_464  [key=0, style=solid];
m6_463 -> m6_280  [key=2, style=dotted];
m6_464 -> m6_465  [key=0, style=solid];
m6_464 -> m6_144  [key=2, style=dotted];
m6_464 -> m6_145  [key=2, style=dotted];
m6_462 -> m6_466  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_462 -> m6_467  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_462 -> m6_468  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_462 -> m6_469  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_462 -> m6_470  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_462 -> m6_463  [key=0, style=solid];
m6_462 -> m6_460  [key=2, style=dotted];
m6_462 -> m6_472  [key=2, style=dotted];
m6_462 -> m6_473  [key=2, style=dotted];
m6_462 -> m6_388  [key=2, style=dotted];
m6_462 -> m6_474  [key=2, style=dotted];
m6_471 -> m6_461  [key=0, style=bold, color=blue];
m6_176 -> m6_177  [key=0, style=solid];
m6_178 -> m6_10  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_180 -> m6_13  [key=2, style=dotted];
m6_180 -> m6_181  [key=0, style=solid];
m6_181 -> m6_13  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_182 -> m6_13  [key=2, style=dotted];
m6_182 -> m6_183  [key=0, style=solid];
m6_184 -> m6_13  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_193  [key=2, style=dotted];
m6_184 -> m6_41  [key=2, style=dotted];
m6_185 -> m6_13  [key=2, style=dotted];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_193  [key=2, style=dotted];
m6_185 -> m6_194  [key=2, style=dotted];
m6_186 -> m6_13  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_193  [key=2, style=dotted];
m6_186 -> m6_194  [key=2, style=dotted];
m6_188 -> m6_13  [key=2, style=dotted];
m6_188 -> m6_189  [key=0, style=solid];
m6_189 -> m6_13  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_177  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_179 -> m6_180  [key=0, style=solid];
m6_179 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_179 -> m6_182  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_179 -> m6_191  [key=2, style=dotted];
m6_179 -> m6_192  [key=2, style=dotted];
m6_179 -> m6_183  [key=1, style=dashed, color=darkseagreen4, label=properties];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_189  [key=1, style=dashed, color=darkseagreen4, label=parameterValues];
m6_187 -> m6_187  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_187 -> m6_191  [key=2, style=dotted];
m6_187 -> m6_195  [key=2, style=dotted];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_185  [key=1, style=dashed, color=darkseagreen4, label=list];
m6_183 -> m6_186  [key=1, style=dashed, color=darkseagreen4, label=list];
m6_190 -> m6_176  [key=0, style=bold, color=blue];
m6_106 -> m6_107  [key=0, style=solid];
m6_109 -> m6_13  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_111  [key=2, style=dotted];
m6_110 -> m6_106  [key=0, style=bold, color=blue];
m6_95 -> m6_96  [key=0, style=solid];
m6_100 -> m6_22  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_97 -> m6_72  [key=2, style=dotted];
m6_97 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m6_97 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_102  [key=2, style=dotted];
m6_96 -> m6_71  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_102  [key=2, style=dotted];
m6_101 -> m6_95  [key=0, style=bold, color=blue];
m6_121 -> m6_122  [key=0, style=solid];
m6_122 -> m6_127  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_123 -> m6_127  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_124 -> m6_127  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_125 -> m6_127  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_126 -> m6_121  [key=0, style=bold, color=blue];
m6_74 -> m6_75  [key=0, style=solid];
m6_78 -> m6_13  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_80 -> m6_13  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_84  [key=2, style=dotted];
m6_81 -> m6_13  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_82 -> m6_13  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_73  [key=2, style=dotted];
m6_77 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label=v];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_81  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_79 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_79 -> m6_77  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo"];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_72  [key=2, style=dotted];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_71  [key=2, style=dotted];
m6_83 -> m6_74  [key=0, style=bold, color=blue];
m6_483 -> m6_484  [key=0, style=solid];
m6_485 -> m6_490  [key=1, style=dashed, color=darkseagreen4, label=users];
m6_485 -> m6_486  [key=0, style=solid];
m6_485 -> m6_415  [key=2, style=dotted];
m6_485 -> m6_489  [key=1, style=dashed, color=darkseagreen4, label=users];
m6_484 -> m6_485  [key=0, style=solid];
m6_484 -> m6_489  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_484 -> m6_162  [key=2, style=dotted];
m6_484 -> m6_486  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_486 -> m6_487  [key=0, style=solid];
m6_486 -> m6_340  [key=2, style=dotted];
m6_486 -> m6_488  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_487 -> m6_483  [key=0, style=bold, color=blue];
m6_47 -> m6_48  [key=0, style=solid];
m6_48 -> m6_40  [key=2, style=dotted];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=tokens1];
m6_49 -> m6_40  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_51 -> m6_40  [key=2, style=dotted];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label=o1];
m6_52 -> m6_40  [key=2, style=dotted];
m6_52 -> m6_53  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_50  [key=1, style=dashed, color=darkseagreen4, label=tokens1];
m6_50 -> m6_55  [key=2, style=dotted];
m6_50 -> m6_56  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_57  [key=2, style=dotted];
m6_53 -> m6_56  [key=2, style=dotted];
m6_54 -> m6_47  [key=0, style=bold, color=blue];
m6_269 -> m6_270  [key=0, style=solid];
m6_270 -> m6_204  [key=2, style=dotted];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_272  [key=2, style=dotted];
m6_271 -> m6_269  [key=0, style=bold, color=blue];
m6_449 -> m6_450  [key=0, style=solid];
m6_453 -> m6_11  [key=2, style=dotted];
m6_453 -> m6_454  [key=0, style=solid];
m6_453 -> m6_455  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_453 -> m6_456  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_453 -> m6_457  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_453 -> m6_458  [key=1, style=dashed, color=darkseagreen4, label=c2];
m6_454 -> m6_13  [key=2, style=dotted];
m6_454 -> m6_455  [key=0, style=solid];
m6_455 -> m6_13  [key=2, style=dotted];
m6_455 -> m6_456  [key=0, style=solid];
m6_456 -> m6_13  [key=2, style=dotted];
m6_456 -> m6_457  [key=0, style=solid];
m6_457 -> m6_13  [key=2, style=dotted];
m6_457 -> m6_458  [key=0, style=solid];
m6_458 -> m6_13  [key=2, style=dotted];
m6_458 -> m6_459  [key=0, style=solid];
m6_451 -> m6_453  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_451 -> m6_452  [key=0, style=solid];
m6_451 -> m6_280  [key=2, style=dotted];
m6_452 -> m6_453  [key=0, style=solid];
m6_452 -> m6_144  [key=2, style=dotted];
m6_452 -> m6_145  [key=2, style=dotted];
m6_450 -> m6_454  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_450 -> m6_455  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_450 -> m6_456  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_450 -> m6_457  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_450 -> m6_458  [key=1, style=dashed, color=darkseagreen4, label=c1];
m6_450 -> m6_451  [key=0, style=solid];
m6_450 -> m6_460  [key=2, style=dotted];
m6_459 -> m6_449  [key=0, style=bold, color=blue];
m6_379 -> m6_380  [key=0, style=solid];
m6_385 -> m6_13  [key=2, style=dotted];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_225  [key=2, style=dotted];
m6_385 -> m6_41  [key=2, style=dotted];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_377  [key=2, style=dotted];
m6_383 -> m6_385  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_389  [key=2, style=dotted];
m6_380 -> m6_384  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m6_380 -> m6_267  [key=2, style=dotted];
m6_380 -> m6_204  [key=2, style=dotted];
m6_380 -> m6_381  [key=0, style=solid];
m6_380 -> m6_387  [key=2, style=dotted];
m6_380 -> m6_371  [key=2, style=dotted];
m6_380 -> m6_388  [key=2, style=dotted];
m6_381 -> m6_384  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m6_381 -> m6_382  [key=0, style=solid];
m6_381 -> m6_173  [key=2, style=dotted];
m6_382 -> m6_383  [key=0, style=solid];
m6_386 -> m6_379  [key=0, style=bold, color=blue];
m6_85 -> m6_86  [key=0, style=solid];
m6_89 -> m6_13  [key=2, style=dotted];
m6_89 -> m6_90  [key=0, style=solid];
m6_91 -> m6_13  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_84  [key=2, style=dotted];
m6_92 -> m6_13  [key=2, style=dotted];
m6_92 -> m6_93  [key=0, style=solid];
m6_93 -> m6_13  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_73  [key=2, style=dotted];
m6_88 -> m6_90  [key=1, style=dashed, color=darkseagreen4, label=v];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_90 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label=lineInfo];
m6_90 -> m6_88  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo"];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_72  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_71  [key=2, style=dotted];
m6_94 -> m6_85  [key=0, style=bold, color=blue];
m6_281 -> m6_282  [key=0, style=solid];
m6_287 -> m6_13  [key=2, style=dotted];
m6_287 -> m6_288  [key=0, style=solid];
m6_288 -> m6_13  [key=2, style=dotted];
m6_288 -> m6_289  [key=0, style=solid];
m6_284 -> m6_287  [key=1, style=dashed, color=darkseagreen4, label=since2012];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_291  [key=2, style=dotted];
m6_284 -> m6_195  [key=2, style=dotted];
m6_284 -> m6_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_292  [key=2, style=dotted];
m6_285 -> m6_288  [key=1, style=dashed, color=darkseagreen4, label=linqToJson];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_291  [key=2, style=dotted];
m6_285 -> m6_195  [key=2, style=dotted];
m6_285 -> m6_299  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_282 -> m6_284  [key=1, style=dashed, color=darkseagreen4, label=posts];
m6_282 -> m6_285  [key=1, style=dashed, color=darkseagreen4, label=posts];
m6_282 -> m6_26  [key=2, style=dotted];
m6_282 -> m6_283  [key=0, style=solid];
m6_283 -> m6_284  [key=0, style=solid];
m6_283 -> m6_286  [key=1, style=dashed, color=darkseagreen4, label=serializerBasics];
m6_283 -> m6_290  [key=2, style=dotted];
m6_283 -> m6_293  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_289 -> m6_281  [key=0, style=bold, color=blue];
m6_436 -> m6_437  [key=0, style=solid];
m6_439 -> m6_13  [key=2, style=dotted];
m6_439 -> m6_440  [key=0, style=solid];
m6_440 -> m6_13  [key=2, style=dotted];
m6_440 -> m6_441  [key=0, style=solid];
m6_438 -> m6_439  [key=0, style=solid];
m6_438 -> m6_440  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_438 -> m6_442  [key=2, style=dotted];
m6_438 -> m6_323  [key=2, style=dotted];
m6_438 -> m6_192  [key=2, style=dotted];
m6_437 -> m6_438  [key=0, style=solid];
m6_437 -> m6_26  [key=2, style=dotted];
m6_441 -> m6_436  [key=0, style=bold, color=blue];
m6_352 -> m6_353  [key=0, style=solid];
m6_353 -> m6_355  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_353 -> m6_354  [key=0, style=solid];
m6_353 -> m6_340  [key=2, style=dotted];
m6_354 -> m6_352  [key=0, style=bold, color=blue];
m6_196 -> m6_197  [key=0, style=solid];
m6_201 -> m6_13  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_199 -> m6_201  [key=1, style=dashed, color=darkseagreen4, label=list];
m6_199 -> m6_200  [key=0, style=solid];
m6_199 -> m6_203  [key=2, style=dotted];
m6_199 -> m6_192  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_204  [key=2, style=dotted];
m6_198 -> m6_199  [key=0, style=solid];
m6_198 -> m6_26  [key=2, style=dotted];
m6_197 -> m6_198  [key=0, style=solid];
m6_197 -> m6_197  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_202 -> m6_196  [key=0, style=bold, color=blue];
m6_146 -> m6_147  [key=0, style=solid];
m6_149 -> m6_13  [key=2, style=dotted];
m6_149 -> m6_150  [key=0, style=solid];
m6_151 -> m6_13  [key=2, style=dotted];
m6_151 -> m6_152  [key=0, style=solid];
m6_148 -> m6_149  [key=0, style=solid];
m6_150 -> m6_151  [key=0, style=solid];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_150  [key=1, style=dashed, color=darkseagreen4, label=j];
m6_147 -> m6_26  [key=2, style=dotted];
m6_152 -> m6_146  [key=0, style=bold, color=blue];
m6_416 -> m6_417  [key=0, style=solid];
m6_424 -> m6_13  [key=2, style=dotted];
m6_424 -> m6_425  [key=0, style=solid];
m6_426 -> m6_13  [key=2, style=dotted];
m6_426 -> m6_427  [key=0, style=solid];
m6_426 -> m6_267  [key=2, style=dotted];
m6_421 -> m6_424  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_421 -> m6_422  [key=0, style=solid];
m6_421 -> m6_172  [key=2, style=dotted];
m6_421 -> m6_137  [key=2, style=dotted];
m6_421 -> m6_267  [key=2, style=dotted];
m6_421 -> m6_265  [key=2, style=dotted];
m6_422 -> m6_424  [key=1, style=dashed, color=darkseagreen4, label=enumerable];
m6_422 -> m6_423  [key=0, style=solid];
m6_422 -> m6_428  [key=2, style=dotted];
m6_422 -> m6_425  [key=1, style=dashed, color=darkseagreen4, label=enumerable];
m6_423 -> m6_424  [key=0, style=solid];
m6_423 -> m6_292  [key=2, style=dotted];
m6_425 -> m6_426  [key=0, style=solid];
m6_425 -> m6_430  [key=2, style=dotted];
m6_420 -> m6_421  [key=0, style=solid];
m6_420 -> m6_429  [key=2, style=dotted];
m6_419 -> m6_420  [key=0, style=solid];
m6_419 -> m6_428  [key=2, style=dotted];
m6_417 -> m6_419  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_417 -> m6_417  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.JObject o"];
m6_417 -> m6_418  [key=0, style=solid];
m6_418 -> m6_419  [key=0, style=solid];
m6_418 -> m6_417  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken> enumerable"];
m6_427 -> m6_416  [key=0, style=bold, color=blue];
m6_475 -> m6_476  [key=0, style=solid];
m6_477 -> m6_10  [key=2, style=dotted];
m6_477 -> m6_478  [key=0, style=solid];
m6_478 -> m6_13  [key=2, style=dotted];
m6_478 -> m6_479  [key=0, style=solid];
m6_481 -> m6_13  [key=2, style=dotted];
m6_481 -> m6_482  [key=0, style=solid];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_476  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_479 -> m6_480  [key=0, style=solid];
m6_480 -> m6_481  [key=0, style=solid];
m6_480 -> m6_26  [key=2, style=dotted];
m6_482 -> m6_475  [key=0, style=bold, color=blue];
m6_36 -> m6_37  [key=0, style=solid];
m6_38 -> m6_13  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_41  [key=2, style=dotted];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_40  [key=2, style=dotted];
m6_39 -> m6_36  [key=0, style=bold, color=blue];
m6_403 -> m6_404  [key=0, style=solid];
m6_409 -> m6_13  [key=2, style=dotted];
m6_409 -> m6_410  [key=0, style=solid];
m6_410 -> m6_13  [key=2, style=dotted];
m6_410 -> m6_411  [key=0, style=solid];
m6_410 -> m6_225  [key=2, style=dotted];
m6_410 -> m6_41  [key=2, style=dotted];
m6_413 -> m6_13  [key=2, style=dotted];
m6_413 -> m6_414  [key=0, style=solid];
m6_413 -> m6_41  [key=2, style=dotted];
m6_405 -> m6_409  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_405 -> m6_410  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_405 -> m6_405  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_405 -> m6_406  [key=0, style=solid];
m6_405 -> m6_415  [key=2, style=dotted];
m6_405 -> m6_280  [key=2, style=dotted];
m6_405 -> m6_407  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_405 -> m6_408  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_408 -> m6_409  [key=0, style=solid];
m6_408 -> m6_335  [key=2, style=dotted];
m6_411 -> m6_413  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_411 -> m6_412  [key=0, style=solid];
m6_411 -> m6_204  [key=2, style=dotted];
m6_411 -> m6_402  [key=2, style=dotted];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_335  [key=2, style=dotted];
m6_406 -> m6_144  [key=2, style=dotted];
m6_406 -> m6_145  [key=2, style=dotted];
m6_406 -> m6_407  [key=0, style=solid];
m6_404 -> m6_405  [key=0, style=solid];
m6_404 -> m6_269  [key=2, style=dotted];
m6_407 -> m6_408  [key=0, style=solid];
m6_407 -> m6_335  [key=2, style=dotted];
m6_414 -> m6_403  [key=0, style=bold, color=blue];
m6_390 -> m6_391  [key=0, style=solid];
m6_396 -> m6_13  [key=2, style=dotted];
m6_396 -> m6_397  [key=0, style=solid];
m6_397 -> m6_13  [key=2, style=dotted];
m6_397 -> m6_398  [key=0, style=solid];
m6_397 -> m6_225  [key=2, style=dotted];
m6_397 -> m6_41  [key=2, style=dotted];
m6_400 -> m6_13  [key=2, style=dotted];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_41  [key=2, style=dotted];
m6_392 -> m6_396  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_392 -> m6_397  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_392 -> m6_392  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_392 -> m6_393  [key=0, style=solid];
m6_392 -> m6_280  [key=2, style=dotted];
m6_392 -> m6_394  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_392 -> m6_395  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_395 -> m6_396  [key=0, style=solid];
m6_395 -> m6_335  [key=2, style=dotted];
m6_398 -> m6_400  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_398 -> m6_399  [key=0, style=solid];
m6_398 -> m6_204  [key=2, style=dotted];
m6_398 -> m6_402  [key=2, style=dotted];
m6_399 -> m6_400  [key=0, style=solid];
m6_399 -> m6_335  [key=2, style=dotted];
m6_393 -> m6_144  [key=2, style=dotted];
m6_393 -> m6_145  [key=2, style=dotted];
m6_393 -> m6_394  [key=0, style=solid];
m6_391 -> m6_392  [key=0, style=solid];
m6_391 -> m6_269  [key=2, style=dotted];
m6_394 -> m6_395  [key=0, style=solid];
m6_394 -> m6_335  [key=2, style=dotted];
m6_401 -> m6_390  [key=0, style=bold, color=blue];
m6_443 -> m6_444  [key=0, style=solid];
m6_446 -> m6_13  [key=2, style=dotted];
m6_446 -> m6_447  [key=0, style=solid];
m6_446 -> m6_193  [key=2, style=dotted];
m6_446 -> m6_224  [key=2, style=dotted];
m6_446 -> m6_41  [key=2, style=dotted];
m6_447 -> m6_13  [key=2, style=dotted];
m6_447 -> m6_448  [key=0, style=solid];
m6_447 -> m6_193  [key=2, style=dotted];
m6_447 -> m6_224  [key=2, style=dotted];
m6_447 -> m6_323  [key=2, style=dotted];
m6_447 -> m6_336  [key=2, style=dotted];
m6_445 -> m6_446  [key=0, style=solid];
m6_445 -> m6_447  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_445 -> m6_26  [key=2, style=dotted];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_444  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_448 -> m6_443  [key=0, style=bold, color=blue];
m6_138 -> m6_139  [key=0, style=solid];
m6_141 -> m6_144  [key=2, style=dotted];
m6_141 -> m6_145  [key=2, style=dotted];
m6_141 -> m6_140  [key=0, style=solid];
m6_139 -> m6_136  [key=2, style=dotted];
m6_139 -> m6_137  [key=2, style=dotted];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_143  [key=2, style=dotted];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_142  [key=0, style=solid];
m6_142 -> m6_138  [key=0, style=bold, color=blue];
m6_345 -> m6_346  [key=0, style=solid];
m6_346 -> m6_348  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_346 -> m6_347  [key=0, style=solid];
m6_346 -> m6_340  [key=2, style=dotted];
m6_347 -> m6_345  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_10  [key=2, style=dotted, color=green];
m6_2 -> m6_3  [key=0, style=solid, color=green];
m6_2 -> m6_11  [key=2, style=dotted, color=green];
m6_2 -> m6_4  [key=1, style=dashed, color=green, label=data];
m6_3 -> m6_4  [key=0, style=solid, color=green];
m6_3 -> m6_12  [key=2, style=dotted, color=green];
m6_4 -> m6_5  [key=0, style=solid, color=green];
m6_4 -> m6_13  [key=2, style=dotted, color=green];
m6_5 -> m6_6  [key=0, style=solid, color=green];
m6_5 -> m6_10  [key=2, style=dotted, color=green];
m6_6 -> m6_7  [key=0, style=solid, color=green];
m6_6 -> m6_11  [key=2, style=dotted, color=green];
m6_6 -> m6_8  [key=1, style=dashed, color=green, label=data];
m6_7 -> m6_8  [key=0, style=solid, color=green];
m6_7 -> m6_14  [key=2, style=dotted, color=green];
m6_7 -> m6_15  [key=2, style=dotted, color=green];
m6_8 -> m6_9  [key=0, style=solid, color=green];
m6_8 -> m6_13  [key=2, style=dotted, color=green];
m6_9 -> m6_0  [key=0, style=bold, color=blue];
m6_112 -> m6_113  [key=0, style=solid];
m6_114 -> m6_10  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_116 -> m6_13  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_118 -> m6_13  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_113  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label=v1];
m6_115 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label=v1];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_120  [key=2, style=dotted];
m6_119 -> m6_112  [key=0, style=bold, color=blue];
m6_324 -> m6_325  [key=0, style=solid];
m6_326 -> m6_10  [key=2, style=dotted];
m6_326 -> m6_327  [key=0, style=solid];
m6_326 -> m6_328  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_326 -> m6_329  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_326 -> m6_330  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_326 -> m6_331  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_326 -> m6_332  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_326 -> m6_333  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_327 -> m6_13  [key=2, style=dotted];
m6_327 -> m6_328  [key=0, style=solid];
m6_328 -> m6_13  [key=2, style=dotted];
m6_328 -> m6_329  [key=0, style=solid];
m6_328 -> m6_239  [key=2, style=dotted];
m6_330 -> m6_13  [key=2, style=dotted];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_225  [key=2, style=dotted];
m6_330 -> m6_41  [key=2, style=dotted];
m6_331 -> m6_13  [key=2, style=dotted];
m6_331 -> m6_332  [key=0, style=solid];
m6_331 -> m6_225  [key=2, style=dotted];
m6_331 -> m6_41  [key=2, style=dotted];
m6_332 -> m6_13  [key=2, style=dotted];
m6_332 -> m6_333  [key=0, style=solid];
m6_333 -> m6_13  [key=2, style=dotted];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_225  [key=2, style=dotted];
m6_333 -> m6_226  [key=2, style=dotted];
m6_333 -> m6_336  [key=2, style=dotted];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_325  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_335  [key=2, style=dotted];
m6_334 -> m6_324  [key=0, style=bold, color=blue];
m6_303 -> m6_304  [key=0, style=solid];
m6_31 -> m6_10  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_34 -> m6_10  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_343 -> m6_13  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_350 -> m6_13  [key=2, style=dotted];
m6_350 -> m6_351  [key=0, style=solid];
m6_357 -> m6_13  [key=2, style=dotted];
m6_357 -> m6_358  [key=0, style=solid];
m6_490 -> m6_13  [key=2, style=dotted];
m6_490 -> m6_491  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_32 -> m6_30  [key=0, style=bold, color=blue];
m6_33 -> m6_34  [key=0, style=solid];
m6_35 -> m6_33  [key=0, style=bold, color=blue];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_111  [key=2, style=dotted];
m6_344 -> m6_341  [key=0, style=bold, color=blue];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_161  [key=2, style=dotted];
m6_351 -> m6_348  [key=0, style=bold, color=blue];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_359  [key=2, style=dotted];
m6_358 -> m6_355  [key=0, style=bold, color=blue];
m6_489 -> m6_490  [key=0, style=solid];
m6_489 -> m6_492  [key=2, style=dotted];
m6_491 -> m6_488  [key=0, style=bold, color=blue];
m6_542 -> m6_144  [key=2, style=dotted];
m6_542 -> m6_543  [key=0, style=solid];
m6_296 -> m6_297  [key=0, style=solid];
m6_299 -> m6_300  [key=0, style=solid];
m6_341 -> m6_342  [key=0, style=solid];
m6_348 -> m6_349  [key=0, style=solid];
m6_355 -> m6_356  [key=0, style=solid];
m6_488 -> m6_489  [key=0, style=solid];
m6_104 -> m6_73  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_541 -> m6_542  [key=0, style=solid];
m6_543 -> m6_541  [key=0, style=bold, color=blue];
m6_24 -> m6_26  [key=2, style=dotted];
m6_24 -> m6_25  [key=0, style=solid];
m6_28 -> m6_26  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_293 -> m6_294  [key=0, style=solid];
m6_298 -> m6_296  [key=0, style=bold, color=blue];
m6_297 -> m6_164  [key=2, style=dotted];
m6_297 -> m6_298  [key=0, style=solid];
m6_301 -> m6_299  [key=0, style=bold, color=blue];
m6_300 -> m6_301  [key=0, style=solid];
m6_300 -> m6_302  [key=2, style=dotted];
m6_300 -> m6_303  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_27 -> m6_28  [key=0, style=solid];
m6_535 -> m6_536  [key=0, style=solid];
m6_538 -> m6_539  [key=0, style=solid];
m6_103 -> m6_104  [key=0, style=solid];
m6_105 -> m6_103  [key=0, style=bold, color=blue];
m6_23 -> m6_24  [key=0, style=solid];
m6_25 -> m6_23  [key=0, style=bold, color=blue];
m6_29 -> m6_27  [key=0, style=bold, color=blue];
m6_295 -> m6_293  [key=0, style=bold, color=blue];
m6_294 -> m6_295  [key=0, style=solid];
m6_537 -> m6_535  [key=0, style=bold, color=blue];
m6_536 -> m6_537  [key=0, style=solid];
m6_540 -> m6_538  [key=0, style=bold, color=blue];
m6_539 -> m6_540  [key=0, style=solid];
m6_304 -> m6_305  [key=0, style=solid];
m6_305 -> m6_303  [key=0, style=bold, color=blue];
m6_514 -> m6_528  [key=3, color=darkorchid, style=bold, label="method methodReturn string SerializeWithNoRedundentIdProperties"];
m6_514 -> m6_515  [key=0, style=solid];
m6_514 -> m6_517  [key=1, style=dashed, color=darkseagreen4, label=object];
m6_514 -> m6_494  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m6_528 -> m6_144  [key=2, style=dotted];
m6_528 -> m6_529  [key=0, style=solid];
m6_521 -> m6_195  [key=2, style=dotted];
m6_521 -> m6_227  [key=2, style=dotted];
m6_521 -> m6_291  [key=2, style=dotted];
m6_521 -> m6_522  [key=0, style=solid];
m6_521 -> m6_533  [key=2, style=dotted];
m6_521 -> m6_535  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_521 -> m6_524  [key=1, style=dashed, color=darkseagreen4, label=ids];
m6_523 -> m6_195  [key=2, style=dotted];
m6_523 -> m6_227  [key=2, style=dotted];
m6_523 -> m6_291  [key=2, style=dotted];
m6_523 -> m6_524  [key=0, style=solid];
m6_523 -> m6_533  [key=2, style=dotted];
m6_523 -> m6_538  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_523 -> m6_525  [key=1, style=dashed, color=darkseagreen4, label=refs];
m6_518 -> m6_528  [key=1, style=dashed, color=darkseagreen4, label=t];
m6_518 -> m6_519  [key=0, style=solid];
m6_518 -> m6_520  [key=1, style=dashed, color=darkseagreen4, label=t];
m6_519 -> m6_528  [key=0, style=solid];
m6_519 -> m6_520  [key=0, style=solid];
m6_522 -> m6_528  [key=0, style=solid];
m6_522 -> m6_523  [key=0, style=solid];
m6_524 -> m6_528  [key=0, style=solid];
m6_524 -> m6_542  [key=1, style=dashed, color=darkseagreen4, label=idProperty];
m6_524 -> m6_525  [key=0, style=solid];
m6_524 -> m6_527  [key=1, style=dashed, color=darkseagreen4, label=idProperty];
m6_529 -> m6_530  [key=0, style=solid];
m6_517 -> m6_377  [key=2, style=dotted];
m6_517 -> m6_518  [key=0, style=solid];
m6_515 -> m6_389  [key=2, style=dotted];
m6_515 -> m6_518  [key=1, style=dashed, color=darkseagreen4, label=writer];
m6_515 -> m6_517  [key=1, style=dashed, color=darkseagreen4, label=writer];
m6_515 -> m6_516  [key=0, style=solid];
m6_520 -> m6_521  [key=0, style=solid];
m6_520 -> m6_523  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_525 -> m6_541  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_525 -> m6_526  [key=0, style=solid];
m6_525 -> m6_302  [key=2, style=dotted];
m6_527 -> m6_524  [key=0, style=solid];
m6_527 -> m6_534  [key=2, style=dotted];
m6_526 -> m6_524  [key=0, style=solid];
m6_526 -> m6_527  [key=0, style=solid];
m6_516 -> m6_517  [key=0, style=solid];
m6_516 -> m6_531  [key=2, style=dotted];
m6_516 -> m6_532  [key=2, style=dotted];
m6_530 -> m6_514  [key=0, style=bold, color=blue];
m6_257 -> m6_258  [key=0, style=solid];
m6_259 -> m6_13  [key=2, style=dotted];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_191  [key=2, style=dotted];
m6_259 -> m6_41  [key=2, style=dotted];
m6_262 -> m6_13  [key=2, style=dotted];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_41  [key=2, style=dotted];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_172  [key=2, style=dotted];
m6_258 -> m6_137  [key=2, style=dotted];
m6_258 -> m6_265  [key=2, style=dotted];
m6_258 -> m6_260  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_258 -> m6_261  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_260 -> m6_144  [key=2, style=dotted];
m6_260 -> m6_261  [key=0, style=solid];
m6_260 -> m6_145  [key=2, style=dotted];
m6_261 -> m6_262  [key=0, style=solid];
m6_261 -> m6_266  [key=2, style=dotted];
m6_261 -> m6_267  [key=2, style=dotted];
m6_261 -> m6_268  [key=2, style=dotted];
m6_261 -> m6_263  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_263 -> m6_144  [key=2, style=dotted];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_145  [key=2, style=dotted];
m6_264 -> m6_257  [key=0, style=bold, color=blue];
m6_493 -> m6_494  [key=0, style=solid];
m6_510 -> m6_145  [key=2, style=dotted];
m6_510 -> m6_511  [key=0, style=solid];
m6_497 -> m6_204  [key=2, style=dotted];
m6_497 -> m6_498  [key=0, style=solid];
m6_497 -> m6_499  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_497 -> m6_505  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_497 -> m6_506  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_497 -> m6_507  [key=1, style=dashed, color=darkseagreen4, label=list1];
m6_498 -> m6_204  [key=2, style=dotted];
m6_498 -> m6_499  [key=0, style=solid];
m6_498 -> m6_500  [key=1, style=dashed, color=darkseagreen4, label=list2];
m6_507 -> m6_204  [key=2, style=dotted];
m6_507 -> m6_508  [key=0, style=solid];
m6_507 -> m6_513  [key=2, style=dotted];
m6_494 -> m6_415  [key=2, style=dotted];
m6_494 -> m6_495  [key=0, style=solid];
m6_494 -> m6_499  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_494 -> m6_500  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_494 -> m6_501  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_494 -> m6_502  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_494 -> m6_503  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_494 -> m6_504  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_494 -> m6_506  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_494 -> m6_509  [key=1, style=dashed, color=darkseagreen4, label=dic1];
m6_495 -> m6_415  [key=2, style=dotted];
m6_495 -> m6_496  [key=0, style=solid];
m6_495 -> m6_502  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m6_496 -> m6_415  [key=2, style=dotted];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_503  [key=1, style=dashed, color=darkseagreen4, label=dic3];
m6_496 -> m6_508  [key=1, style=dashed, color=darkseagreen4, label=dic3];
m6_509 -> m6_510  [key=0, style=solid];
m6_509 -> m6_514  [key=2, style=dotted];
m6_499 -> m6_500  [key=0, style=solid];
m6_499 -> m6_512  [key=2, style=dotted];
m6_505 -> m6_506  [key=0, style=solid];
m6_505 -> m6_513  [key=2, style=dotted];
m6_506 -> m6_507  [key=0, style=solid];
m6_506 -> m6_513  [key=2, style=dotted];
m6_500 -> m6_501  [key=0, style=solid];
m6_500 -> m6_512  [key=2, style=dotted];
m6_508 -> m6_509  [key=0, style=solid];
m6_508 -> m6_512  [key=2, style=dotted];
m6_501 -> m6_502  [key=0, style=solid];
m6_501 -> m6_512  [key=2, style=dotted];
m6_502 -> m6_503  [key=0, style=solid];
m6_502 -> m6_512  [key=2, style=dotted];
m6_503 -> m6_504  [key=0, style=solid];
m6_503 -> m6_512  [key=2, style=dotted];
m6_504 -> m6_505  [key=0, style=solid];
m6_504 -> m6_512  [key=2, style=dotted];
m6_511 -> m6_493  [key=0, style=bold, color=blue];
m6_58 -> m6_59  [key=0, style=solid];
m6_60 -> m6_13  [key=2, style=dotted];
m6_60 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_62  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_40  [key=2, style=dotted];
m6_61 -> m6_58  [key=0, style=bold, color=blue];
m6_63 -> m6_64  [key=0, style=solid];
m6_67 -> m6_13  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_68 -> m6_13  [key=2, style=dotted];
m6_68 -> m6_69  [key=0, style=solid];
m6_69 -> m6_13  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_66 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=a];
m6_66 -> m6_73  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_72  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_71  [key=2, style=dotted];
m6_70 -> m6_63  [key=0, style=bold, color=blue];
m6_306 -> m6_307  [key=0, style=solid];
m6_311 -> m6_13  [key=2, style=dotted];
m6_311 -> m6_312  [key=0, style=solid];
m6_311 -> m6_322  [key=2, style=dotted];
m6_312 -> m6_13  [key=2, style=dotted];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_322  [key=2, style=dotted];
m6_314 -> m6_13  [key=2, style=dotted];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_322  [key=2, style=dotted];
m6_315 -> m6_13  [key=2, style=dotted];
m6_315 -> m6_316  [key=0, style=solid];
m6_315 -> m6_322  [key=2, style=dotted];
m6_316 -> m6_13  [key=2, style=dotted];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_322  [key=2, style=dotted];
m6_317 -> m6_13  [key=2, style=dotted];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_322  [key=2, style=dotted];
m6_318 -> m6_13  [key=2, style=dotted];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_322  [key=2, style=dotted];
m6_319 -> m6_13  [key=2, style=dotted];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_322  [key=2, style=dotted];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_312  [key=1, style=dashed, color=darkseagreen4, label=postTitles];
m6_310 -> m6_310  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_310 -> m6_239  [key=2, style=dotted];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_315  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_313 -> m6_316  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_313 -> m6_317  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_313 -> m6_318  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_313 -> m6_319  [key=1, style=dashed, color=darkseagreen4, label=categories];
m6_313 -> m6_41  [key=2, style=dotted];
m6_313 -> m6_313  [key=1, style=dashed, color=darkseagreen4, label=c];
m6_313 -> m6_225  [key=2, style=dotted];
m6_313 -> m6_323  [key=2, style=dotted];
m6_309 -> m6_144  [key=2, style=dotted];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_145  [key=2, style=dotted];
m6_308 -> m6_310  [key=1, style=dashed, color=darkseagreen4, label=rss];
m6_308 -> m6_313  [key=1, style=dashed, color=darkseagreen4, label=rss];
m6_308 -> m6_136  [key=2, style=dotted];
m6_308 -> m6_137  [key=2, style=dotted];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_172  [key=2, style=dotted];
m6_308 -> m6_308  [key=1, style=dashed, color=darkseagreen4, label=p];
m6_308 -> m6_321  [key=2, style=dotted];
m6_308 -> m6_162  [key=2, style=dotted];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_269  [key=2, style=dotted];
m6_320 -> m6_306  [key=0, style=bold, color=blue];
m6_228 -> m6_229  [key=0, style=solid];
m6_230 -> m6_10  [key=2, style=dotted];
m6_230 -> m6_231  [key=0, style=solid];
m6_230 -> m6_232  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_230 -> m6_234  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_230 -> m6_236  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_235 -> m6_13  [key=2, style=dotted];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_144  [key=2, style=dotted];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_229  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_144  [key=2, style=dotted];
m6_231 -> m6_145  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_232 -> m6_239  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_240  [key=2, style=dotted];
m6_236 -> m6_237  [key=0, style=solid];
m6_236 -> m6_240  [key=2, style=dotted];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_144  [key=2, style=dotted];
m6_233 -> m6_145  [key=2, style=dotted];
m6_237 -> m6_144  [key=2, style=dotted];
m6_237 -> m6_145  [key=2, style=dotted];
m6_237 -> m6_238  [key=0, style=solid];
m6_238 -> m6_228  [key=0, style=bold, color=blue];
m6_273 -> m6_274  [key=0, style=solid];
m6_277 -> m6_144  [key=2, style=dotted];
m6_277 -> m6_278  [key=0, style=solid];
m6_278 -> m6_145  [key=2, style=dotted];
m6_278 -> m6_279  [key=0, style=solid];
m6_275 -> m6_280  [key=2, style=dotted];
m6_275 -> m6_277  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_275 -> m6_276  [key=0, style=solid];
m6_276 -> m6_277  [key=0, style=solid];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_272  [key=2, style=dotted];
m6_279 -> m6_273  [key=0, style=bold, color=blue];
m6_431 -> m6_432  [key=0, style=solid];
m6_434 -> m6_13  [key=2, style=dotted];
m6_434 -> m6_435  [key=0, style=solid];
m6_434 -> m6_41  [key=2, style=dotted];
m6_433 -> m6_434  [key=0, style=solid];
m6_433 -> m6_220  [key=2, style=dotted];
m6_432 -> m6_433  [key=0, style=solid];
m6_432 -> m6_280  [key=2, style=dotted];
m6_435 -> m6_431  [key=0, style=bold, color=blue];
m6_166 -> m6_167  [key=0, style=solid];
m6_170 -> m6_13  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_174  [key=2, style=dotted];
m6_169 -> m6_175  [key=2, style=dotted];
m6_167 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_167 -> m6_137  [key=2, style=dotted];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_172  [key=2, style=dotted];
m6_167 -> m6_164  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_173  [key=2, style=dotted];
m6_171 -> m6_166  [key=0, style=bold, color=blue];
m6_337 -> m6_338  [key=0, style=solid];
m6_338 -> m6_341  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_338 -> m6_339  [key=0, style=solid];
m6_338 -> m6_340  [key=2, style=dotted];
m6_339 -> m6_337  [key=0, style=bold, color=blue];
m6_153 -> m6_154  [key=0, style=solid];
m6_159 -> m6_144  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_154 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label=array];
m6_154 -> m6_161  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label=array];
m6_154 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label=array];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_165  [key=2, style=dotted];
m6_156 -> m6_164  [key=2, style=dotted];
m6_156 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_163  [key=2, style=dotted];
m6_155 -> m6_162  [key=2, style=dotted];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_157  [key=1, style=dashed, color=darkseagreen4, label=text];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_165  [key=2, style=dotted];
m6_160 -> m6_153  [key=0, style=bold, color=blue];
m6_205 -> m6_206  [key=0, style=solid];
m6_207 -> m6_10  [key=2, style=dotted];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_212  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_207 -> m6_213  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_207 -> m6_216  [key=1, style=dashed, color=darkseagreen4, label=o];
m6_212 -> m6_13  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_223  [key=2, style=dotted];
m6_212 -> m6_46  [key=2, style=dotted];
m6_212 -> m6_224  [key=2, style=dotted];
m6_212 -> m6_41  [key=2, style=dotted];
m6_209 -> m6_13  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_220  [key=2, style=dotted];
m6_209 -> m6_41  [key=2, style=dotted];
m6_210 -> m6_13  [key=2, style=dotted];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_46  [key=2, style=dotted];
m6_210 -> m6_221  [key=2, style=dotted];
m6_210 -> m6_41  [key=2, style=dotted];
m6_211 -> m6_13  [key=2, style=dotted];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_46  [key=2, style=dotted];
m6_211 -> m6_222  [key=2, style=dotted];
m6_211 -> m6_41  [key=2, style=dotted];
m6_215 -> m6_13  [key=2, style=dotted];
m6_215 -> m6_216  [key=0, style=solid];
m6_217 -> m6_13  [key=2, style=dotted];
m6_217 -> m6_218  [key=0, style=solid];
m6_206 -> m6_207  [key=0, style=solid];
m6_206 -> m6_206  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_210  [key=1, style=dashed, color=darkseagreen4, label=resultObjects];
m6_208 -> m6_211  [key=1, style=dashed, color=darkseagreen4, label=resultObjects];
m6_208 -> m6_219  [key=2, style=dotted];
m6_208 -> m6_192  [key=2, style=dotted];
m6_213 -> m6_215  [key=1, style=dashed, color=darkseagreen4, label=resultUrls];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_225  [key=2, style=dotted];
m6_213 -> m6_226  [key=2, style=dotted];
m6_213 -> m6_192  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_216 -> m6_227  [key=2, style=dotted];
m6_216 -> m6_192  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_214 -> m6_204  [key=2, style=dotted];
m6_218 -> m6_205  [key=0, style=bold, color=blue];
m6_547 -> m6_490  [key=1, style=dashed, color=darkseagreen4, label=users];
m6_547 -> m6_489  [key=1, style=dashed, color=darkseagreen4, label=users];
m6_546 -> m6_489  [key=1, style=dashed, color=darkseagreen4, label=name];
m6_545 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_545 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_545 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_545 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_545 -> m6_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_545 -> m6_404  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_545 -> m6_307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest"];
m6_548 -> m6_542  [key=1, style=dashed, color=darkseagreen4, label=idProperty];
m6_544 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_13  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid, color=green];
m7_2 -> m7_14  [key=2, style=dotted, color=green];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_13  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_15  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_13  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_16  [key=2, style=dotted];
m7_6 -> m7_8  [key=1, style=dashed, color=green, label=t];
m7_7 -> m7_8  [key=0, style=solid, color=green];
m7_7 -> m7_17  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid, color=green];
m7_8 -> m7_18  [key=2, style=dotted];
m7_8 -> m7_19  [key=2, style=dotted, color=green];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_13  [key=2, style=dotted];
m7_9 -> m7_9  [key=0, style=solid];
m7_9 -> m7_18  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_13  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_15  [key=2, style=dotted];
m7_12 -> m7_0  [key=0, style=bold, color=blue];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_24  [key=2, style=dotted];
m7_20 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label=t];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_25  [key=2, style=dotted];
m7_23 -> m7_19  [key=0, style=bold, color=blue];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_49  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_50  [key=2, style=dotted];
m7_33 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=o];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_13  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_55  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_15  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_13  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_51  [key=2, style=dotted];
m7_37 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_37 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_52  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_56  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_13  [key=2, style=dotted];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_39 -> m7_39  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_46  [key=0, style=solid];
m7_45 -> m7_40  [key=0, style=solid];
m7_45 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_53  [key=2, style=dotted];
m7_41 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=file];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_54  [key=2, style=dotted];
m7_42 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m7_43 -> m7_44  [key=0, style=solid];
m7_48 -> m7_31  [key=0, style=bold, color=blue];
m7_80 -> m7_81  [key=0, style=solid];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_49  [key=2, style=dotted];
m7_81 -> m7_84  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_100  [key=2, style=dotted];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_101  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_83  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_13  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_15  [key=2, style=dotted];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_13  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_51  [key=2, style=dotted];
m7_88 -> m7_97  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_88 -> m7_98  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_52  [key=2, style=dotted];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_56  [key=2, style=dotted];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_13  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_90 -> m7_39  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_97  [key=0, style=solid];
m7_96 -> m7_91  [key=0, style=solid];
m7_96 -> m7_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_49  [key=2, style=dotted];
m7_92 -> m7_95  [key=1, style=dashed, color=darkseagreen4, label=json];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_100  [key=2, style=dotted];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_101  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_94  [key=1, style=dashed, color=darkseagreen4, label=s];
m7_99 -> m7_80  [key=0, style=bold, color=blue];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_24  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_30  [key=2, style=dotted];
m7_29 -> m7_26  [key=0, style=bold, color=blue];
m7_57 -> m7_58  [key=0, style=solid];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_77  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_78  [key=2, style=dotted];
m7_59 -> m7_61  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_54  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_79  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_13  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_15  [key=2, style=dotted];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_13  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_51  [key=2, style=dotted];
m7_65 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_65 -> m7_75  [key=1, style=dashed, color=darkseagreen4, label=sw];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_52  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_56  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_13  [key=2, style=dotted];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_67 -> m7_39  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_74  [key=0, style=solid];
m7_73 -> m7_68  [key=0, style=solid];
m7_73 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_77  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_78  [key=2, style=dotted];
m7_70 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_54  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_79  [key=2, style=dotted];
m7_76 -> m7_57  [key=0, style=bold, color=blue];
}
