digraph  {
n14 [label="Newtonsoft.Json.Tests.Issues.Outer", span=""];
n15 [label="Newtonsoft.Json.Tests.Issues.Inner", span=""];
n0 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", label="Entry Newtonsoft.Json.Tests.Issues.Issue1512.Test()", span="43-43"];
n2 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", label="ImmutableArray<Outer> result = JsonConvert.DeserializeObject<ImmutableArray<Outer>>(json)", span="50-50"];
n3 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", label="Assert.AreEqual(1, result.Length)", span="52-52"];
n6 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
n7 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
n5 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", label="Exit Newtonsoft.Json.Tests.Issues.Issue1512.Test()", span="43-43"];
n8 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", label="Entry Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", span="59-59"];
n9 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", label="this.Inners = inners", span="61-61"];
n10 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", label="Exit Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", span="59-59"];
n11 [cluster="Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", label="Entry Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", span="69-69"];
n13 [cluster="Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", label="Exit Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", span="69-69"];
d1 [cluster="Newtonsoft.Json.Tests.Issues.Issue1512.Test()", color=green, community=0, label="var json = @''[\r\n                            {\r\n                                ''''Inners'''': []\r\n                            }\r\n                        ]''", prediction=0, span="45-49"];
d9 [cluster="Newtonsoft.Json.Tests.Issues.Outer.Outer(System.Collections.Immutable.ImmutableArray<string>?)", color=green, community=0, label="this.Inners = inners", prediction=1, span="61-61"];
d12 [cluster="Newtonsoft.Json.Tests.Issues.Inner.Inner(string)", color=green, community=0, label="this.Id = id", prediction=2, span="71-71"];
m1_16 [cluster="System.Exception.Exception(string)", file="Issue1569.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_6 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="Issue1569.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="406-406"];
m1_18 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32"];
m1_0 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="36-36"];
m1_1 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="ConverterPrecedenceClass c = (ConverterPrecedenceClass)value", prediction=3, span="38-38"];
m1_2 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="JToken j = new JArray(ConverterType, c.TestValue)", prediction=4, span="40-40"];
m1_3 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="j.WriteTo(writer)", prediction=5, span="42-42"];
m1_4 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="36-36"];
m1_19 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.CanConvert(System.Type)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.CanConvert(System.Type)", span="57-57"];
m1_20 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.CanConvert(System.Type)", color=green, community=0, file="Issue1569.cs", label="return (objectType == typeof(ConverterPrecedenceClass));", prediction=6, span="59-59"];
m1_21 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.CanConvert(System.Type)", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.CanConvert(System.Type)", span="57-57"];
m1_5 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="Issue1569.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82"];
m1_7 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="45-45"];
m1_8 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="JToken j = JArray.Load(reader)", prediction=7, span="47-47"];
m1_9 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="string converter = (string)j[0]", prediction=8, span="49-49"];
m1_12 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="string testValue = (string)j[1]", prediction=9, span="53-53"];
m1_10 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="converter != ConverterType", prediction=8, span="50-50"];
m1_11 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="throw new Exception(StringUtils.FormatWith(''Serialize converter {0} and deserialize converter {1} do not match.'', CultureInfo.InvariantCulture, converter, ConverterType));", prediction=8, span="51-51"];
m1_13 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="Issue1569.cs", label="return new ConverterPrecedenceClass(testValue);", prediction=12, span="54-54"];
m1_14 [cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="Issue1569.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="45-45"];
m1_17 [cluster="Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.FormatWith(string, System.IFormatProvider, object, object)", span="52-52"];
m1_15 [cluster="Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", file="Issue1569.cs", label="Entry Newtonsoft.Json.Linq.JArray.Load(Newtonsoft.Json.JsonReader)", span="112-112"];
m1_22 [file="Issue1569.cs", label="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter", span=""];
m5_4 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m5_5 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m5_0 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="43-43"];
m5_1 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException()", span="43-43"];
m5_6 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="76-76"];
m5_7 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="76-76"];
m5_11 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m5_12 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonWriter.cs", label="return Create(reader as IJsonLineInfo, reader.Path, message, ex);", span="89-89"];
m5_13 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m5_8 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m5_9 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonWriter.cs", label="return Create(reader, message, null);", span="84-84"];
m5_10 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m5_14 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m5_15 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonWriter.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="94-94"];
m5_16 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonWriter.cs", label="return new JsonSerializationException(message, ex);", span="96-96"];
m5_17 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m5_18 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="104-104"];
m5_2 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonWriter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m5_3 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonWriter.cs", label="Exit Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m1_0 -> m1_3  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m1_9 -> m1_11  [color=green, key=1, label=converter, style=dashed];
m1_22 -> m1_10  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter", style=dashed];
m1_22 -> m1_11  [color=green, key=1, label="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClassConverter", style=dashed];
m5_14 -> m5_16  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
}
